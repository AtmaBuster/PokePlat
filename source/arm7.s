
.include "source/macros_asm.s"
.include "source/arm9_ram.s"


/***********************************************************
***********************************************************/
.section .text, "ax" @ 0x0

.globl _start
_start:
.arm
Function_2380000: @ 2380000 :arm
	mov     r12, #0x4000000
	str     r12, [r12, #0x208]
	ldr     r1, [pc, #0xd4] @ [0x23800e4] (=Unknown_23801e8)
	mov     r0, #0x3800000
	cmp     r0, r1
	bpl     branch_238001c
	b       branch_2380020

branch_238001c: @ 238001c :arm
	mov     r1, r0
branch_2380020: @ 2380020 :arm
	ldr     r2, [pc, #0xc0] @ [0x23800e8] (=0x380ff00)
	mov     r0, #0x0
branch_2380028: @ 2380028 :arm
	cmp     r1, r2
	blt     branch_2380034
	b       branch_2380038

branch_2380034: @ 2380034 :arm
	stmia   r1!, {r0}
branch_2380038: @ 2380038 :arm
	blt     branch_2380028
	mov     r0, #0x13
	msr     CPSR_c, r0
	ldr     sp, [pc, #0xa0] @ [0x23800ec] (=0x380ffc0)
	mov     r0, #0x12
	msr     CPSR_c, r0
	ldr     r0, [pc, #0x98] @ [0x23800f0] (=0x380ff80)
	mov     sp, r0
	ldr     r1, [pc, #0x94] @ [0x23800f4] (=0x400)
	sub     r1, r0, r1
	mov     r0, #0x1f
	msr     CPSR_fsxc, r0
	sub     sp, r1, #0x4
	ldr     r0, [pc, #0x84] @ [0x23800f8] (=0x23fe940)
	ldr     r1, [pc, #0x84] @ [0x23800fc] (=0x27ffa80)
	add     r2, r1, #22, 28 @ #0x160
branch_2380078: @ 2380078 :arm
	ldr     r3, [r0], #0x4
	str     r3, [r1], #0x4
	cmp     r1, r2
	bmi     branch_2380078
	ldr     r0, [pc, #0x70] @ [0x2380100] (=0x23fe904)
	add     r2, r1, #0x20
branch_2380090: @ 2380090 :arm
	ldr     r3, [r0], #0x4
	str     r3, [r1], #0x4
	cmp     r1, r2
	bmi     branch_2380090
	bl      Function_2380118
	ldr     r0, [pc, #0x58] @ [0x2380104] (=Unknown_23801d0)
	ldr     r1, [r0, #0xc]
	ldr     r2, [r0, #0x10]
	mov     r0, #0x0
branch_23800b4: @ 23800b4 :arm
	cmp     r1, r2
	bcc     branch_23800c0
	b       branch_23800c4

branch_23800c0: @ 23800c0 :arm
	str     r0, [r1], #0x4
branch_23800c4: @ 23800c4 :arm
	bcc     branch_23800b4
	bl      Function_238018c
	ldr     r1, [pc, #0x34] @ [0x2380108] (=0x380fffc)
	ldr     r0, [pc, #0x34] @ [0x238010c] (=0x37f84e4)
	str     r0, [r1]
	ldr     r1, [pc, #0x30] @ [0x2380110] (=0x37f8000)
	ldr     lr, [pc, #0x30] @ [0x2380114] (=0xffff0000)
	bx      r1
@ 0x23800e4

.word Unknown_23801e8 @ 0x23800e4
.word 0x380ff00 @ 0x23800e8
.word 0x380ffc0 @ 0x23800ec
.word 0x380ff80 @ 0x23800f0
.word 0x400 @ 0x23800f4
.word 0x23fe940 @ 0x23800f8
.word 0x27ffa80 @ 0x23800fc
.word 0x23fe904 @ 0x2380100
.word Unknown_23801d0 @ 0x2380104
.word 0x380fffc @ 0x2380108
.word 0x37f84e4 @ 0x238010c
.word 0x37f8000 @ 0x2380110
.word 0xffff0000 @ 0x2380114



.arm
Function_2380118: @ 2380118 :arm
	ldr     r0, [pc, #0x64] @ [0x2380184] (=Unknown_23801d0)
	ldr     r1, [r0]                @ Unknown_23a77d8
	ldr     r2, [r0, #0x4]          @ Unknown_23a77fc
	ldr     r3, [r0, #0x8]          @ Unknown_23801e8
branch_2380128: @ 2380128 :arm
	cmp     r1, r2
	beq     branch_2380180
	ldr     r4, [r1], #0x4          @ [Unknown_23a77d8+0x0] = 0x27e0000, 0x37f8000
	ldr     r5, [r1], #0x4          @ [Unknown_23a77d8+0x4] = 0xbc, 0xec94
	add     r6, r4, r5
branch_238013c: @ 238013c :arm
	cmp     r4, r6
	bmi     branch_2380148
	b       branch_238014c

branch_2380148: @ 2380148 :arm
	ldr     r7, [r3], #0x4
branch_238014c: @ 238014c :arm
	bmi     branch_2380154
	b       branch_2380158

branch_2380154: @ 2380154 :arm
	str     r7, [r4], #0x4
branch_2380158: @ 2380158 :arm
	bmi     branch_238013c
	ldr     r5, [r1], #0x4
	add     r6, r4, r5
	mov     r7, #0x0
branch_2380168: @ 2380168 :arm
	cmp     r4, r6
	bcc     branch_2380174
	b       branch_2380178

branch_2380174: @ 2380174 :arm
	str     r7, [r4], #0x4
branch_2380178: @ 2380178 :arm
	bcc     branch_2380168
	beq     branch_2380128
branch_2380180: @ 2380180 :arm
	b       branch_2380188
@ 0x2380184

.word Unknown_23801d0 @ 0x2380184

.arm
branch_2380188: @ 2380188 :arm
	bx      lr
@ 0x238018c


.arm
Function_238018c: @ 238018c :arm
	mov     r0, #0x1
	mov     r1, #0x0
	ldr     r2, [pc, #0x30] @ [0x23801cc] (=0x27ffffa)
	sub     r3, r2, #0x400000
branch_238019c: @ 238019c :arm
	strh    r1, [r2]
	ldrh    r12, [r3]
	cmp     r1, r12
	bne     branch_23801b0
	b       branch_23801b4

branch_23801b0: @ 23801b0 :arm
	mov     r0, #0x2
branch_23801b4: @ 23801b4 :arm
	bne     branch_23801c4
	add     r1, r1, #0x1
	cmp     r1, #0x2
	bne     branch_238019c
branch_23801c4: @ 23801c4 :arm
	strh    r0, [r2]
	bx      lr
@ 0x23801cc

.word 0x27ffffa @ 0x23801cc



Unknown_23801d0: @ 0x23801d0
.word Unknown_23a77d8, Unknown_23a77fc, Unknown_23801e8, Unknown_23801e8, Unknown_23801e8, 0x0



Unknown_23801e8: @ 0x23801e8


/***********************************************************
***********************************************************/
.section .text2, "ax" @ 0x1e8
.arm
Function_27e0000: @ 27e0000 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r6, [pc, #0x98] @ [0x27e00a4] (=0x23801e8)
	ldr     r2, [pc, #0x98] @ [0x27e00a8] (=0x23a77d8)
	ldr     r0, [pc, #0x98] @ [0x27e00ac] (=0x23a77fc)
	b       branch_27e0094

branch_27e0014: @ 27e0014 :arm
	ldmia   r2, {r1,r4,r5}
	cmp     r1, #6, 8 @ #0x6000000
	add     r2, r2, #0xc
	bne     branch_27e0090
	ldr     r1, [pc, #0x84] @ [0x27e00b0] (=0x27e00bc)
	ldr     r0, [pc, #0x84] @ [0x27e00b4] (=0x3809990)
	add     r3, r4, r5
	str     r1, [r0, #0x4]
	ldr     r2, [pc, #0x7c] @ [0x27e00b8] (=0x27f9eec)
	add     r1, r1, r3
	str     r3, [r0, #0xc]
	cmp     r2, r1
	beq     branch_27e004c
	bl      Function_37faf14
branch_27e004c: @ 27e004c :arm
	ldr     r0, [pc, #0x60] @ [0x27e00b4] (=0x3809990)
	mov     r1, #0x0
	ldr     r2, [r0, #0x4]
	b       branch_27e0068

branch_27e005c: @ 27e005c :arm
	ldr     r0, [r6], #0x4
	add     r1, r1, #0x1
	str     r0, [r2], #0x4
branch_27e0068: @ 27e0068 :arm
	cmp     r1, r4, lsr #2
	bcc     branch_27e005c
	mov     r1, #0x0
	mov     r0, r1
	b       branch_27e0084

branch_27e007c: @ 27e007c :arm
	str     r0, [r2], #0x4
	add     r1, r1, #0x1
branch_27e0084: @ 27e0084 :arm
	cmp     r1, r5, lsr #2
	bcc     branch_27e007c
	b       branch_27e009c

branch_27e0090: @ 27e0090 :arm
	add     r6, r6, r4
branch_27e0094: @ 27e0094 :arm
	cmp     r2, r0
	bne     branch_27e0014
branch_27e009c: @ 27e009c :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x27e00a4

.word 0x23801e8 @ 0x27e00a4
.word 0x23a77d8 @ 0x27e00a8
.word 0x23a77fc @ 0x27e00ac
.word 0x27e00bc @ 0x27e00b0
.word 0x3809990 @ 0x27e00b4
.word 0x27f9eec @ 0x27e00b8
@ 0x27e00bc




/***********************************************************
***********************************************************/
.section .text3, "ax" @ 0x2a4

.arm
Function_37f8000: @ 37f8000 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #33, 28 @ #0x210
	bl      Function_27e0000
	bl      Function_37f9a90
	bl      Function_37f8fc0
	add     r2, sp, #0x4
	mov     r0, #0x20
	mov     r1, #0x2
	bl      Function_3803e14
	ldr     r0, [sp, #0x4]
	add     r2, sp, #0x10
	mov     r0, r0, lsl #3
	str     r0, [sp, #0x4]
	mov     r1, #1, 24 @ #0x100
	bl      Function_3803e14
	ldr     r0, [sp, #0x4]
	mov     r1, #1, 24 @ #0x100
	add     r0, r0, #1, 24 @ #0x100
	add     r2, sp, #17, 28 @ #0x110
	bl      Function_3803e14
	mov     r0, #0x1d
	mov     r1, #0x1
	add     r2, sp, #0x0
	mov     r6, #0x0
	bl      Function_3803e14
	ldrb    r0, [sp]
	cmp     r0, #0xff
	moveq   r0, r6
	beq     branch_37f8080
	tst     r0, #0x50
	movne   r0, #0x1
	moveq   r0, r6
.arm
branch_37f8080: @ 37f8080 :arm
	cmp     r0, #0x0
	beq     branch_37f8154
	bl      Function_37f8488
	mov     r8, r0
	mov     r11, #0x1
	and     r7, r8, #0x40
	mov     r10, #0x0
	add     r5, sp, #0x10
	mov     r4, r11
	b       branch_37f8148
@ 0x37f80a8

.arm
branch_37f80a8: @ 37f80a8 :arm
	ldr     r0, [pc, #0x3a8] @ [0x37f8458] (=0xffff)
	add     r9, r5, r10, lsl #8
	mov     r1, r9
	mov     r2, #0x70
	bl      Function_37f8470
	mov     r2, r9
	ldrh    r1, [r2, #0x72]
	cmp     r0, r1
	bne     branch_37f813c
	ldrh    r0, [r2, #0x70]
	cmp     r0, #0x80
	bcs     branch_37f813c
	ldr     r0, [pc, #0x378] @ [0x37f8458] (=0xffff)
	mov     r2, #0x8a
	add     r1, r9, #0x74
	bl      Function_37f8470
	mov     r2, r9
	ldrh    r1, [r2, #0xfe]
	cmp     r0, r1
	bne     branch_37f813c
	ldrh    r1, [r2, #0x76]
	ldrb    r0, [r2, #0x75]
	tst     r1, r4, lsl r0
	beq     branch_37f813c
	tst     r8, r1
	ldrneh  r1, [r9, #0x64]
	andne   r0, r0, #0x7
	bicne   r1, r1, #0x7
	orrne   r0, r1, r0
	strneh  r0, [r9, #0x64]
	add     r0, r5, r10, lsl #8
	ldrh    r0, [r0, #0x76]
	mvn     r0, r0
	tst     r7, r0
	movne   r6, #0x3
	bne     branch_37f81f4
	orr     r6, r6, r11, lsl r10
.arm
branch_37f813c: @ 37f813c :arm
	add     r0, r10, #0x1
	mov     r0, r0, lsl #16
	mov     r10, r0, lsr #16
.arm
branch_37f8148: @ 37f8148 :arm
	cmp     r10, #0x2
	bcc     branch_37f80a8
	b       branch_37f81b8
@ 0x37f8154

.arm
branch_37f8154: @ 37f8154 :arm
	bl      Function_37f8488
	tst     r0, #0x40
	movne   r6, #0x3
	bne     branch_37f81f4
	ldr     r8, [pc, #0x2ec] @ [0x37f8458] (=0xffff)
	mov     r9, #0x0
	add     r7, sp, #0x10
	mov     r4, #0x1
	mov     r5, #0x70
.arm
branch_37f8178: @ 37f8178 :arm
	mov     r0, r8
	mov     r2, r5
	add     r1, r7, r9, lsl #8
	bl      Function_37f8470
	add     r2, r7, r9, lsl #8
	ldrh    r1, [r2, #0x72]
	cmp     r0, r1
	bne     branch_37f81a4
	ldrh    r0, [r2, #0x70]
	cmp     r0, #0x80
	orrcc   r6, r6, r4, lsl r9
.arm
branch_37f81a4: @ 37f81a4 :arm
	add     r0, r9, #0x1
	mov     r0, r0, lsl #16
	mov     r9, r0, lsr #16
	cmp     r9, #0x2
	bcc     branch_37f8178
.arm
branch_37f81b8: @ 37f81b8 :arm
	cmp     r6, #0x1
	cmpne   r6, #0x2
	beq     branch_37f81f4
	cmp     r6, #0x3
	bne     branch_37f81f0
	ldrh    r1, [sp, #0x80]
	add     r0, sp, #1, 24 @ #0x100
	add     r1, r1, #0x1
	ldrh    r0, [r0, #0x80]
	and     r1, r1, #0x7f
	cmp     r1, r0
	moveq   r6, #0x2
	movne   r6, #0x1
	b       branch_37f81f4
@ 0x37f81f0

.arm
branch_37f81f0: @ 37f81f0 :arm
	mov     r6, #0x0
.arm
branch_37f81f4: @ 37f81f4 :arm
	cmp     r6, #0x3
	blt     branch_37f8210
	ldr     r1, [pc, #0x258] @ [0x37f845c] (=0x27ffc80)
	mvn     r0, #0x0
	mov     r2, #0x74
	bl      Function_37fb074
	b       branch_37f82cc
@ 0x37f8210

.arm
branch_37f8210: @ 37f8210 :arm
	cmp     r6, #0x0
	beq     branch_37f82bc
	ldr     r0, [pc, #0x240] @ [0x37f8460] (=0xffffff2a)
	mov     r1, r6, lsl #8
	add     r0, sp, r0
	ldrb    r0, [r0, r6, lsl #0x8]
	cmp     r0, #0xa
	bcs     branch_37f825c
	add     r0, sp, #0x10
	mov     r3, #0xa
	mov     r2, #0x0
	add     r1, r0, r1
	b       branch_37f8250
@ 0x37f8244

.arm
branch_37f8244: @ 37f8244 :arm
	add     r0, r1, r3, lsl #1
	strh    r2, [r0, #-0xfc]
	sub     r3, r3, #0x1
.arm
branch_37f8250: @ 37f8250 :arm
	ldrb    r0, [r1, #-0xe6]
	cmp     r3, r0
	bgt     branch_37f8244
.arm
branch_37f825c: @ 37f825c :arm
	ldr     r0, [pc, #0x200] @ [0x37f8464] (=0xffffff60)
	mov     r1, r6, lsl #8
	add     r0, sp, r0
	ldrb    r0, [r0, r6, lsl #0x8]
	cmp     r0, #0x1a
	bcs     branch_37f82a0
	add     r0, sp, #0x10
	mov     r3, #0x1a
	mov     r2, #0x0
	add     r1, r0, r1
	b       branch_37f8294
@ 0x37f8288

.arm
branch_37f8288: @ 37f8288 :arm
	add     r0, r1, r3, lsl #1
	strh    r2, [r0, #-0xe6]
	sub     r3, r3, #0x1
.arm
branch_37f8294: @ 37f8294 :arm
	ldrb    r0, [r1, #-0xb0]
	cmp     r3, r0
	bgt     branch_37f8288
.arm
branch_37f82a0: @ 37f82a0 :arm
	ldr     r1, [pc, #0x1b4] @ [0x37f845c] (=0x27ffc80)
	add     r2, sp, #0x10
	sub     r0, r6, #0x1
	add     r0, r2, r0, lsl #8
	mov     r2, #0x74
	bl      Function_37fb090
	b       branch_37f82cc
@ 0x37f82bc

.arm
branch_37f82bc: @ 37f82bc :arm
	ldr     r1, [pc, #0x198] @ [0x37f845c] (=0x27ffc80)
	mov     r0, #0x0
	mov     r2, #0x74
	bl      Function_37fb074
.arm
branch_37f82cc: @ 37f82cc :arm
	add     r2, sp, #0x8
	mov     r0, #0x36
	mov     r1, #0x6
	bl      Function_3803e14
	ldr     r4, [pc, #0x178] @ [0x37f845c] (=0x27ffc80)
	add     r0, sp, #0x8
	add     r1, r4, #0x74
	mov     r2, #0x6
	bl      Function_37fb228
	add     r2, sp, #0x2
	mov     r0, #0x3c
	mov     r1, #0x2
	bl      Function_3803e14
	ldrh    r0, [sp, #0x2]
	mov     r0, r0, lsl #15
	mov     r0, r0, lsr #16
	bl      Function_3806a60
	strh    r0, [r4, #0x7a]
	bl      Function_37fb3b0
	mov     r0, #0x8
	bl      Function_37f9b38
	mov     r4, r0
	mov     r0, #0x8
	bl      Function_37f9b4c
	mov     r1, r0
	mov     r2, r4
	mov     r0, #0x8
	mov     r3, #0x1
	bl      Function_37f9ec8
	mov     r4, r0
	mov     r0, #0x8
	bl      Function_37f9b38
	sub     r2, r0, r4
	mov     r0, r4
	mov     r1, #0x0
	bl      Function_37fb16c
	mov     r1, r4
	mov     r0, #0x8
	bl      Function_37f9c34
	mov     r0, #0x8
	bl      Function_37f9b38
	mov     r4, r0
	mov     r0, #0x8
	bl      Function_37f9b4c
	mov     r1, r0
	mov     r2, r4
	mov     r0, #0x8
	bl      Function_37f9f70
	movs    r4, r0
	bpl     branch_37f8398
	bl      Function_37faf14
.arm
branch_37f8398: @ 37f8398 :arm
	mov     r1, r4
	mov     r0, #0x8
	bl      Function_37f9e94
	mov     r1, r4
	mov     r0, #0x8
	bl      Function_37fa010
	cmp     r0, #33, 24 @ #0x2100
	bcs     branch_37f83bc
	bl      Function_37faf14
.arm
branch_37f83bc: @ 37f83bc :arm
	mov     r0, #0x6
	bl      Function_37fbff4
	bl      Function_37fb6bc
	ldr     r1, [pc, #0x98] @ [0x37f8468] (=0x37f84c0)
	mov     r0, #0x1
	bl      Function_37f8818
	mov     r0, #0x1
	bl      Function_37f894c
	ldr     r3, [pc, #0x88] @ [0x37f846c] (=0x4000004)
	mov     r0, #0x1
	ldrh    r1, [r3]
	ldrh    r1, [r3]
	add     r2, r3, #129, 30 @ #0x204
	orr     r1, r1, #0x8
	strh    r1, [r3]
	ldrh    r1, [r2]
	strh    r0, [r2]
	bl      Function_37fad90
	mvn     r0, #0x0
	bl      Function_37ff714
	mov     r0, #0xf
	bl      Function_37ff7dc
	mov     r0, #0xc
	bl      Function_3804520
	mov     r0, r4
	bl      Function_38059e0
	mov     r0, #0x2
	bl      Function_380092c
	mov     r4, #0x0
.arm
branch_37f8430: @ 37f8430 :arm
	bl      Function_37f847c
	bl      Function_37fae58
	cmp     r0, #0x0
	beq     branch_37f844c
	mov     r0, r4
	bl      Function_3803458
	bl      Function_37fae9c
.arm
branch_37f844c: @ 37f844c :arm
	bl      Function_3803690
	bl      Function_38007b8
	b       branch_37f8430
@ 0x37f8458

.word 0xffff @ 0x37f8458
.word 0x27ffc80 @ 0x37f845c
.word 0xffffff2a @ 0x37f8460
.word 0xffffff60 @ 0x37f8464
.word 0x37f84c0 @ 0x37f8468
.word 0x4000004 @ 0x37f846c
.arm
Function_37f8470: @ 37f8470 :arm
	ldr     r12, [pc, #0x0] @ [0x37f8478] (=0x3800901)
	bx      r12
@ 0x37f8478

.word 0x3800901 @ 0x37f8478
.arm
Function_37f847c: @ 37f847c :arm
	ldr     r12, [pc, #0x0] @ [0x37f8484] (=0x38008cf)
	bx      r12
@ 0x37f8484

.word 0x38008cf @ 0x37f8484
.arm
Function_37f8488: @ 37f8488 :arm
	ldr     r1, [pc, #0x2c] @ [0x37f84bc] (=0x27ffe1d)
	mov     r0, #0x0
	ldrb    r1, [r1]
	cmp     r1, #0x80
	orreq   r0, r0, #0x40
	moveq   r0, r0, lsl #16
	moveq   r0, r0, lsr #16
	bxeq    lr
	cmp     r1, #0x40
	orreq   r0, r0, #0x80
	moveq   r0, r0, lsl #16
	moveq   r0, r0, lsr #16
	bx      lr
@ 0x37f84bc

.word 0x27ffe1d @ 0x37f84bc
.arm
Function_37f84c0: @ 37f84c0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x14] @ [0x37f84e0] (=0x38094d0)
	ldr     r0, [r0]
	cmp     r0, #0x0
	beq     branch_37f84d8
	bl      Function_38021b4
.arm
branch_37f84d8: @ 37f84d8 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37f84e0

.word 0x38094d0 @ 0x37f84e0
.arm
Function_37f84e4: @ 37f84e4 :arm
	stmfd   sp!, {lr}
	mov     r12, #1, 6 @ #0x4000000
	add     r12, r12, #33, 28 @ #0x210
	ldr     r1, [r12, #-0x8]
	cmp     r1, #0x0
	beq     branch_37f8500
	b       branch_37f8504
@ 0x37f8500

.arm
branch_37f8500: @ 37f8500 :arm
	ldmfd   sp!, {pc}
@ 0x37f8504

.arm
branch_37f8504: @ 37f8504 :arm
	ldmia   r12, {r1,r2}
	ands    r1, r1, r2
	beq     branch_37f8514
	b       branch_37f8518
@ 0x37f8514

.arm
branch_37f8514: @ 37f8514 :arm
	ldmfd   sp!, {pc}
@ 0x37f8518

.arm
branch_37f8518: @ 37f8518 :arm
	mov     r3, #0x1
	mov     r0, #0x0
.arm
branch_37f8520: @ 37f8520 :arm
	ands    r2, r1, r3, lsl r0
	beq     branch_37f852c
	b       branch_37f8530
@ 0x37f852c

.arm
branch_37f852c: @ 37f852c :arm
	add     r0, r0, #0x1
.arm
branch_37f8530: @ 37f8530 :arm
	beq     branch_37f8520
	str     r2, [r12, #0x4]
	ldr     r1, [pc, #0x8] @ [0x37f8548] (=Jumptable_3806b80)
	ldr     r0, [r1, r0, lsl #0x2]
	ldr     lr, [pc, #0x4] @ [0x37f854c] (=0x37f8550)
	bx      r0
@ 0x37f8548

.word Jumptable_3806b80 @ 0x37f8548
.word 0x37f8550 @ 0x37f854c



.arm
Function_37f8550: @ 37f8550 :arm
	ldr     r12, [pc, #0x134] @ [0x37f868c] (=0x3806c94)
	mov     r3, #0x0
	ldr     r12, [r12]
	mov     r2, #0x1
	cmp     r12, #0x0
	beq     branch_37f85a0
branch_37f8568: @ 37f8568 :arm
	str     r2, [r12, #0x48]
	str     r3, [r12, #0x5c]
	str     r3, [r12, #0x60]
	ldr     r0, [r12, #0x64]
	str     r3, [r12, #0x64]
	mov     r12, r0
	cmp     r12, #0x0
	bne     branch_37f8568
	ldr     r12, [pc, #0xfc] @ [0x37f868c] (=0x3806c94)
	str     r3, [r12]
	str     r3, [r12, #0x4]
	ldr     r12, [pc, #0xf4] @ [0x37f8690] (=0x3806d30)
	mov     r1, #0x1
	strh    r1, [r12]
.arm
branch_37f85a0: @ 37f85a0 :arm
	ldr     r12, [pc, #0xe8] @ [0x37f8690] (=0x3806d30)
	ldrh    r1, [r12]
	cmp     r1, #0x0
	beq     branch_37f85b4
	b       branch_37f85b8
@ 0x37f85b4

.arm
branch_37f85b4: @ 37f85b4 :arm
	ldr     pc, [sp], #0x4
@ 0x37f85b8

.arm
branch_37f85b8: @ 37f85b8 :arm
	mov     r1, #0x0
	strh    r1, [r12]
	mov     r3, #0xd2
	msr     CPSR_c, r3
	add     r2, r12, #0x8
	ldr     r1, [r2]
.arm
branch_37f85d0: @ 37f85d0 :arm
	cmp     r1, #0x0
	bne     branch_37f85dc
	b       branch_37f85e0
@ 0x37f85dc

.arm
branch_37f85dc: @ 37f85dc :arm
	ldrh    r0, [r1, #0x48]
.arm
branch_37f85e0: @ 37f85e0 :arm
	bne     branch_37f85e8
	b       branch_37f85ec
@ 0x37f85e8

.arm
branch_37f85e8: @ 37f85e8 :arm
	cmp     r0, #0x1
.arm
branch_37f85ec: @ 37f85ec :arm
	bne     branch_37f85f4
	b       branch_37f85f8
@ 0x37f85f4

.arm
branch_37f85f4: @ 37f85f4 :arm
	ldr     r1, [r1, #0x4c]
.arm
branch_37f85f8: @ 37f85f8 :arm
	bne     branch_37f85d0
	cmp     r1, #0x0
	bne     branch_37f8610
.arm
branch_37f8604: @ 37f8604 :arm
	mov     r3, #0x92
	msr     CPSR_c, r3
	ldr     pc, [sp], #0x4
@ 0x37f8610

.arm
branch_37f8610: @ 37f8610 :arm
	ldr     r0, [r12, #0x4]
	cmp     r1, r0
	beq     branch_37f8604
	ldr     r3, [r12, #0xc]
	cmp     r3, #0x0
	beq     branch_37f8638
	stmfd   sp!, {r0,r1,r12}
	mov     lr, pc
	bx      r3
@ 0x37f8634

.arm
Function_37f8634: @ 37f8634 :arm
	ldmfd   sp!, {r0,r1,r12}
.arm
branch_37f8638: @ 37f8638 :arm
	str     r1, [r12, #0x4]
	mrs     r2, SPSR
	str     r2, [r0]!
	ldmed   sp!, {r2,r3}
	stmib   r0!, {r2,r3}
	ldmed   sp!, {r2,r3,r12,lr}
	stmib   r0!, {r2-lr}^
	stmib   r0!, {lr}
	mov     r3, #0xd3
	msr     CPSR_c, r3
	stmib   r0!, {sp}
	ldr     sp, [r1, #0x44]
	mov     r3, #0xd2
	msr     CPSR_c, r3
	ldr     r2, [r1]!
	msr     SPSR_fc, r2
	ldr     lr, [r1, #0x40]
	ldmib   r1, {r0-lr}^
	mov     r0, r0
	stmed   sp!, {r0-r3,r12,lr}
	ldmfd   sp!, {pc}
@ 0x37f868c

.word 0x3806c94 @ 0x37f868c
.word 0x3806d30 @ 0x37f8690
.arm
Function_37f8694: @ 37f8694 :arm
	bx      lr
@ 0x37f8698


.arm
Function_37f8698: @ 37f8698 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r1, #0xc
	mul     r5, r0, r1
	ldr     r2, [pc, #0x64] @ [0x37f8710] (=0x3806c9c)
	ldr     r3, [pc, #0x64] @ [0x37f8714] (=Unknown_3806b6c)
	mov     r4, r0, lsl #1
	ldr     r1, [r2, r5]
	mov     r0, #0x0
	ldrh    r3, [r3, r4]
	mov     r4, #0x1
	str     r0, [r2, r5]
	cmp     r1, #0x0
	mov     r4, r4, lsl r3
	beq     branch_37f86e0
	ldr     r0, [pc, #0x40] @ [0x37f8718] (=0x3806ca4)
	ldr     r0, [r0, r5]
	mov     lr, pc
	bx      r1
@ 0x37f86e0

.arm
branch_37f86e0: @ 37f86e0 :arm
	ldr     r2, [pc, #0x34] @ [0x37f871c] (=0x380fff8)
	ldr     r0, [pc, #0x34] @ [0x37f8720] (=0x3806ca0)
	ldr     r1, [r2]
	orr     r1, r1, r4
	str     r1, [r2]
	ldr     r0, [r0, r5]
	cmp     r0, #0x0
	bne     branch_37f8708
	mov     r0, r4
	bl      Function_37f8984
branch_37f8708: @ 37f8708 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37f8710

.word 0x3806c9c @ 0x37f8710
.word Unknown_3806b6c @ 0x37f8714
.word 0x3806ca4 @ 0x37f8718
.word 0x380fff8 @ 0x37f871c
.word 0x3806ca0 @ 0x37f8720




.arm
Function_37f8724: @ 37f8724 :arm
	ldr     r12, [pc, #0x4] @ [0x37f8730] (=0x37f8698)
	mov     r0, #0x0
	bx      r12
@ 0x37f8730

.word Function_37f8698 @ =0x37f8698, 0x37f8730
.arm
Function_37f8734: @ 37f8734 :arm
	ldr     r12, [pc, #0x4] @ [0x37f8740] (=0x37f8698)
	mov     r0, #0x1
	bx      r12
@ 0x37f8740

.word Function_37f8698 @ =0x37f8698, 0x37f8740
.arm
Function_37f8744: @ 37f8744 :arm
	ldr     r12, [pc, #0x4] @ [0x37f8750] (=0x37f8698)
	mov     r0, #0x2
	bx      r12
@ 0x37f8750

.word Function_37f8698 @ =0x37f8698, 0x37f8750
.arm
Function_37f8754: @ 37f8754 :arm
	ldr     r12, [pc, #0x4] @ [0x37f8760] (=0x37f8698)
	mov     r0, #0x3
	bx      r12
@ 0x37f8760

.word Function_37f8698 @ =0x37f8698, 0x37f8760
.arm
Function_37f8764: @ 37f8764 :arm
	ldr     r12, [pc, #0x4] @ [0x37f8770] (=0x37f8698)
	mov     r0, #0x4
	bx      r12
@ 0x37f8770

.word Function_37f8698 @ =0x37f8698, 0x37f8770
.arm
Function_37f8774: @ 37f8774 :arm
	ldr     r12, [pc, #0x4] @ [0x37f8780] (=0x37f8698)
	mov     r0, #0x5
	bx      r12
@ 0x37f8780

.word Function_37f8698 @ =0x37f8698, 0x37f8780
.arm
Function_37f8784: @ 37f8784 :arm
	ldr     r12, [pc, #0x4] @ [0x37f8790] (=0x37f8698)
	mov     r0, #0x6
	bx      r12
@ 0x37f8790

.word Function_37f8698 @ =0x37f8698, 0x37f8790
.arm
Function_37f8794: @ 37f8794 :arm
	ldr     r12, [pc, #0x4] @ [0x37f87a0] (=0x37f8698)
	mov     r0, #0x7
	bx      r12
@ 0x37f87a0

.word Function_37f8698 @ =0x37f8698, 0x37f87a0
.arm
Function_37f87a4: @ 37f87a4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x38] @ [0x37f87e8] (=0x27ffc3c)
	ldr     r0, [pc, #0x38] @ [0x37f87ec] (=0x3806c9c)
	ldr     r1, [r2]
	ldr     r3, [r0, #0x60]
	add     r0, r1, #0x1
	str     r0, [r2]
	cmp     r3, #0x0
	beq     branch_37f87d0
	mov     lr, pc
	bx      r3
@ 0x37f87d0

.arm
branch_37f87d0: @ 37f87d0 :arm
	ldr     r1, [pc, #0x18] @ [0x37f87f0] (=0x380fff8)
	ldr     r0, [r1]
	orr     r0, r0, #0x1
	str     r0, [r1]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37f87e8

.word 0x27ffc3c @ 0x37f87e8
.word 0x3806c9c @ 0x37f87ec
.word 0x380fff8 @ 0x37f87f0
.arm
Function_37f87f4: @ 37f87f4 :arm
	ldr     r0, [pc, #0x14] @ [0x37f8810] (=0x3806c94)
	mov     r2, #0x0
	str     r2, [r0, #0x4]
	ldr     r1, [pc, #0xc] @ [0x37f8814] (=0x27ffc3c)
	str     r2, [r0]
	str     r2, [r1]
	bx      lr
@ 0x37f8810

.word 0x3806c94 @ 0x37f8810
.word 0x27ffc3c @ 0x37f8814



.arm
Function_37f8818: @ 37f8818 :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r4, [pc, #0x84] @ [0x37f88a8] (=Jumptable_3806b80)
	mov     r9, #0x0
	mov     r2, #0xc
	ldr     r5, [pc, #0x7c] @ [0x37f88ac] (=0x3806cfc)
	ldr     r7, [pc, #0x7c] @ [0x37f88b0] (=0x3806c9c)
	mov     r8, r9
	mov     lr, r9
	mov     r12, #0x1
	mov     r3, r2
branch_37f8840: @ 37f8840 :arm
	tst     r0, #0x1
	beq     branch_37f8890
	mov     r10, r8
	cmp     r9, #0x8
	blt     branch_37f8864
	cmp     r9, #0xb
	suble   r6, r9, #0x8
	mlale   r10, r6, r3, r7
	ble     branch_37f8888
.arm
branch_37f8864: @ 37f8864 :arm
	cmp     r9, #0x3
	blt     branch_37f887c
	cmp     r9, #0x6
	addle   r6, r9, #0x1
	mlale   r10, r6, r2, r7
	ble     branch_37f8888
.arm
branch_37f887c: @ 37f887c :arm
	cmp     r9, #0x0
	strne   r1, [r4, r9, lsl #0x2]
	moveq   r10, r5
.arm
branch_37f8888: @ 37f8888 :arm
	cmp     r10, #0x0
	stmneia r10, {r1,r12,lr}
.arm
branch_37f8890: @ 37f8890 :arm
	add     r9, r9, #0x1
	cmp     r9, #0x19
	mov     r0, r0, lsr #1
	blt     branch_37f8840
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x37f88a8

.word Jumptable_3806b80 @ 0x37f88a8
.word 0x3806cfc @ 0x37f88ac
.word 0x3806c9c @ 0x37f88b0



.arm
Function_37f88b4: @ 37f88b4 :arm
	stmfd   sp!, {r4,lr}
	mov     r3, #0xc
	mul     r4, r0, r3
	ldr     r12, [pc, #0x2c] @ [0x37f88f4] (=0x3806ccc)
	ldr     r3, [pc, #0x2c] @ [0x37f88f8] (=0x3806cd4)
	str     r1, [r12, r4]
	add     r0, r0, #0x3
	mov     r1, #0x1
	mov     r0, r1, lsl r0
	str     r2, [r3, r4]
	bl      Function_37f894c
	ldr     r0, [pc, #0x14] @ [0x37f88fc] (=0x3806cd0)
	mov     r1, #0x1
	str     r1, [r0, r4]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37f88f4

.word 0x3806ccc @ 0x37f88f4
.word 0x3806cd4 @ 0x37f88f8
.word 0x3806cd0 @ 0x37f88fc
.arm
Function_37f8900: @ 37f8900 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_37f8934
	ldr     r1, [pc, #0x1c] @ [0x37f8930] (=0x4000210)
	ldr     r3, [r1]
	sub     r2, r1, #0x8
	str     r4, [r1]
	ldrh    r1, [r2]
	strh    r0, [r2]
	mov     r0, r3
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37f8930

.word 0x4000210 @ 0x37f8930
.arm
Function_37f8934: @ 37f8934 :arm
	ldr     r2, [pc, #0xc] @ [0x37f8948] (=0x4000208)
	mov     r1, #0x0
	ldrh    r0, [r2]
	strh    r1, [r2]
	bx      lr
@ 0x37f8948

.word 0x4000208 @ 0x37f8948
.arm
Function_37f894c: @ 37f894c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_37f8934
	ldr     r12, [pc, #0x20] @ [0x37f8980] (=0x4000210)
	ldr     r3, [r12]
	sub     r2, r12, #0x8
	orr     r1, r3, r4
	str     r1, [r12]
	ldrh    r1, [r2]
	strh    r0, [r2]
	mov     r0, r3
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37f8980

.word 0x4000210 @ 0x37f8980
.arm
Function_37f8984: @ 37f8984 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_37f8934
	ldr     r12, [pc, #0x24] @ [0x37f89bc] (=0x4000210)
	mvn     r1, r4
	ldr     r3, [r12]
	sub     r2, r12, #0x8
	and     r1, r3, r1
	str     r1, [r12]
	ldrh    r1, [r2]
	strh    r0, [r2]
	mov     r0, r3
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37f89bc

.word 0x4000210 @ 0x37f89bc
.arm
Function_37f89c0: @ 37f89c0 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_37f8934
	ldr     r1, [pc, #0x1c] @ [0x37f89f0] (=0x4000214)
	ldr     r3, [r1]
	sub     r2, r1, #0xc
	str     r4, [r1]
	ldrh    r1, [r2]
	strh    r0, [r2]
	mov     r0, r3
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37f89f0

.word 0x4000214 @ 0x37f89f0
.arm
Function_37f89f4: @ 37f89f4 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0x5c] @ [0x37f8a5c] (=0x3806d08)
	ldr     r1, [r0]
	cmp     r1, #0x0
	bne     branch_37f8a54
	ldr     r4, [pc, #0x50] @ [0x37f8a60] (=0x27ffff0)
	mov     r2, #0x1
	mov     r1, #0x0
	str     r2, [r0]
	strh    r1, [r4, #0x6]
	mov     r5, #1, 22 @ #0x400
	b       branch_37f8a2c
@ 0x37f8a24

.arm
branch_37f8a24: @ 37f8a24 :arm
	mov     r0, r5
	bl      Function_37f8a68
.arm
branch_37f8a2c: @ 37f8a2c :arm
	ldrh    r0, [r4, #0x4]
	cmp     r0, #0x7f
	bne     branch_37f8a24
	ldr     r1, [pc, #0x24] @ [0x37f8a64] (=0x27fffb8)
	mvn     r0, #0x0
	str     r0, [r1]
	mov     r0, r0, lsl #16
	str     r0, [r1, #0x4]
	mov     r0, #0xbf
	strh    r0, [r4, #0x6]
.arm
branch_37f8a54: @ 37f8a54 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37f8a5c

.word 0x3806d08 @ 0x37f8a5c
.word 0x27ffff0 @ 0x37f8a60
.word 0x27fffb8 @ 0x37f8a64
.arm
Function_37f8a68: @ 37f8a68 :arm
	ldr     r12, [pc, #0x0] @ [0x37f8a70] (=0x38008b5)
	bx      r12
@ 0x37f8a70

.word 0x38008b5 @ 0x37f8a70
.arm
Function_37f8a74: @ 37f8a74 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r1
	ldrh    r1, [r7, #0x4]
	mov     r6, r2
	cmp     r0, r1
	mov     r5, r3
	mvnne   r0, #0x1
	bne     branch_37f8ae8
	cmp     r5, #0x0
	beq     branch_37f8aa4
	bl      Function_37fadd0
	b       branch_37f8aa8
@ 0x37f8aa4

.arm
branch_37f8aa4: @ 37f8aa4 :arm
	bl      Function_37fada4
.arm
branch_37f8aa8: @ 37f8aa8 :arm
	mov     r4, r0
	mov     r0, #0x0
	strh    r0, [r7, #0x4]
	cmp     r6, #0x0
	beq     branch_37f8ac4
	mov     lr, pc
	bx      r6
@ 0x37f8ac4

.arm
branch_37f8ac4: @ 37f8ac4 :arm
	mov     r0, #0x0
	str     r0, [r7]
	cmp     r5, #0x0
	mov     r0, r4
	beq     branch_37f8ae0
	bl      Function_37fade4
	b       branch_37f8ae4
@ 0x37f8ae0

.arm
branch_37f8ae0: @ 37f8ae0 :arm
	bl      Function_37fadb8
.arm
branch_37f8ae4: @ 37f8ae4 :arm
	mov     r0, #0x0
.arm
branch_37f8ae8: @ 37f8ae8 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37f8af0

.arm
Function_37f8af0: @ 37f8af0 :arm
	stmfd   sp!, {r3-r9,lr}
	movs    r6, r3
	mov     r9, r0
	mov     r8, r1
	mov     r7, r2
	beq     branch_37f8b10
	bl      Function_37fadd0
	b       branch_37f8b14
@ 0x37f8b10

.arm
branch_37f8b10: @ 37f8b10 :arm
	bl      Function_37fada4
.arm
branch_37f8b14: @ 37f8b14 :arm
	mov     r5, r0
	mov     r0, r9
	mov     r1, r8
	bl      Function_37fb3a8
	movs    r4, r0
	bne     branch_37f8b40
	cmp     r7, #0x0
	beq     branch_37f8b3c
	mov     lr, pc
	bx      r7
@ 0x37f8b3c

.arm
branch_37f8b3c: @ 37f8b3c :arm
	strh    r9, [r8, #0x4]
.arm
branch_37f8b40: @ 37f8b40 :arm
	cmp     r6, #0x0
	mov     r0, r5
	beq     branch_37f8b54
	bl      Function_37fade4
	b       branch_37f8b58
@ 0x37f8b54

.arm
branch_37f8b54: @ 37f8b54 :arm
	bl      Function_37fadb8
.arm
branch_37f8b58: @ 37f8b58 :arm
	mov     r0, r4
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x37f8b64

.arm
Function_37f8b64: @ 37f8b64 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r6, [pc, #0x3c] @ [0x37f8bac] (=0x27fffe8)
	ldr     r5, [pc, #0x3c] @ [0x37f8bb0] (=0x37f8c00)
	mov     r8, r0
	mov     r7, #1, 22 @ #0x400
	mov     r4, #0x1
	b       branch_37f8b88
@ 0x37f8b80

.arm
branch_37f8b80: @ 37f8b80 :arm
	mov     r0, r7
	bl      Function_37f8a68
.arm
branch_37f8b88: @ 37f8b88 :arm
	mov     r0, r8
	mov     r1, r6
	mov     r2, r5
	mov     r3, r4
	bl      Function_37f8af0
	cmp     r0, #0x0
	bgt     branch_37f8b80
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37f8bac

.word 0x27fffe8 @ 0x37f8bac
.word 0x37f8c00 @ 0x37f8bb0
.arm
Function_37f8bb4: @ 37f8bb4 :arm
	ldr     r12, [pc, #0xc] @ [0x37f8bc8] (=0x37f8a74)
	ldr     r1, [pc, #0xc] @ [0x37f8bcc] (=0x27fffe8)
	ldr     r2, [pc, #0xc] @ [0x37f8bd0] (=0x37f8c04)
	mov     r3, #0x1
	bx      r12
@ 0x37f8bc8

.word 0x37f8a74 @ 0x37f8bc8
.word 0x27fffe8 @ 0x37f8bcc
.word 0x37f8c04 @ 0x37f8bd0
.arm
Function_37f8bd4: @ 37f8bd4 :arm
	ldr     r1, [pc, #0x0] @ [0x37f8bdc] (=0x37f8bb4)
	bx      r1
@ 0x37f8bdc

.word Function_37f8bb4 @ =0x37f8bb4, 0x37f8bdc
.arm
Function_37f8be0: @ 37f8be0 :arm
	ldr     r12, [pc, #0xc] @ [0x37f8bf4] (=0x37f8af0)
	ldr     r1, [pc, #0xc] @ [0x37f8bf8] (=0x27fffe8)
	ldr     r2, [pc, #0xc] @ [0x37f8bfc] (=0x37f8c00)
	mov     r3, #0x1
	bx      r12
@ 0x37f8bf4

.word 0x37f8af0 @ 0x37f8bf4
.word 0x27fffe8 @ 0x37f8bf8
.word 0x37f8c00 @ 0x37f8bfc
.arm
Function_37f8c00: @ 37f8c00 :arm
	bx      lr
@ 0x37f8c04

.arm
Function_37f8c04: @ 37f8c04 :arm
	bx      lr
@ 0x37f8c08

.arm
Function_37f8c08: @ 37f8c08 :arm
	ldr     r12, [pc, #0xc] @ [0x37f8c1c] (=0x37f8a74)
	ldr     r1, [pc, #0xc] @ [0x37f8c20] (=0x27fffe0)
	ldr     r2, [pc, #0xc] @ [0x37f8c24] (=0x37f8c4c)
	mov     r3, #0x0
	bx      r12
@ 0x37f8c1c

.word 0x37f8a74 @ 0x37f8c1c
.word 0x27fffe0 @ 0x37f8c20
.word 0x37f8c4c @ 0x37f8c24
.arm
Function_37f8c28: @ 37f8c28 :arm
	ldr     r12, [pc, #0xc] @ [0x37f8c3c] (=0x37f8af0)
	ldr     r1, [pc, #0xc] @ [0x37f8c40] (=0x27fffe0)
	ldr     r2, [pc, #0xc] @ [0x37f8c44] (=0x37f8c48)
	mov     r3, #0x0
	bx      r12
@ 0x37f8c3c

.word 0x37f8af0 @ 0x37f8c3c
.word 0x27fffe0 @ 0x37f8c40
.word 0x37f8c48 @ 0x37f8c44
.arm
Function_37f8c48: @ 37f8c48 :arm
	bx      lr
@ 0x37f8c4c

.arm
Function_37f8c4c: @ 37f8c4c :arm
	bx      lr
@ 0x37f8c50

.arm
Function_37f8c50: @ 37f8c50 :arm
	ldrh    r0, [r0, #0x4]
	bx      lr
@ 0x37f8c58

.arm
Function_37f8c58: @ 37f8c58 :arm
	ldr     r3, [pc, #0x98] @ [0x37f8cf8] (=0x27fffb8)
	ldr     r1, [r3]
	mov     r2, #0x0
	mov     r0, #2, 2 @ #0x80000000
.arm
branch_37f8c68: @ 37f8c68 :arm
	tst     r1, r0
	bne     branch_37f8c84
	add     r2, r2, #0x1
	cmp     r2, #0x20
	beq     branch_37f8c84
	mov     r0, r0, lsr #1
	b       branch_37f8c68
@ 0x37f8c84

.arm
branch_37f8c84: @ 37f8c84 :arm
	cmp     r2, #0x20
	bne     branch_37f8c90
	b       branch_37f8c94
@ 0x37f8c90

.arm
branch_37f8c90: @ 37f8c90 :arm
	mov     r0, #0x80
.arm
branch_37f8c94: @ 37f8c94 :arm
	bne     branch_37f8cdc
	add     r3, r3, #0x4
	ldr     r1, [r3]
	mov     r2, #0x0
	mov     r0, #2, 2 @ #0x80000000
.arm
branch_37f8ca8: @ 37f8ca8 :arm
	tst     r1, r0
	bne     branch_37f8cc4
	add     r2, r2, #0x1
	cmp     r2, #0x20
	beq     branch_37f8cc4
	mov     r0, r0, lsr #1
	b       branch_37f8ca8
@ 0x37f8cc4

.arm
branch_37f8cc4: @ 37f8cc4 :arm
	cmp     r2, #0x20
	ldr     r0, [pc, #0x2c] @ [0x37f8cfc] (=0xfffffffd)
	beq     branch_37f8cd4
	b       branch_37f8cd8
@ 0x37f8cd4

.arm
branch_37f8cd4: @ 37f8cd4 :arm
	bx      lr
@ 0x37f8cd8

.arm
branch_37f8cd8: @ 37f8cd8 :arm
	mov     r0, #0xa0
.arm
branch_37f8cdc: @ 37f8cdc :arm
	add     r0, r0, r2
	mov     r1, #2, 2 @ #0x80000000
	mov     r1, r1, lsr r2
	ldr     r2, [r3]
	bic     r2, r2, r1
	str     r2, [r3]
	bx      lr
@ 0x37f8cf8

.word 0x27fffb8 @ 0x37f8cf8
.word 0xfffffffd @ 0x37f8cfc
.arm
Function_37f8d00: @ 37f8d00 :arm
	ldr     r3, [pc, #0x3c] @ [0x37f8d44] (=0x27fffb8)
	cmp     r0, #0xa0
	bpl     branch_37f8d10
	b       branch_37f8d14
@ 0x37f8d10

.arm
branch_37f8d10: @ 37f8d10 :arm
	add     r3, r3, #0x4
.arm
branch_37f8d14: @ 37f8d14 :arm
	bpl     branch_37f8d1c
	b       branch_37f8d20
@ 0x37f8d1c

.arm
branch_37f8d1c: @ 37f8d1c :arm
	sub     r0, r0, #0xa0
.arm
branch_37f8d20: @ 37f8d20 :arm
	bmi     branch_37f8d28
	b       branch_37f8d2c
@ 0x37f8d28

.arm
branch_37f8d28: @ 37f8d28 :arm
	sub     r0, r0, #0x80
.arm
branch_37f8d2c: @ 37f8d2c :arm
	mov     r1, #2, 2 @ #0x80000000
	mov     r1, r1, lsr r0
	ldr     r2, [r3]
	orr     r2, r2, r1
	str     r2, [r3]
	bx      lr
@ 0x37f8d44

.word 0x27fffb8 @ 0x37f8d44
.arm
Function_37f8d48: @ 37f8d48 :arm
	ldr     r12, [r0]
	b       branch_37f8d5c
@ 0x37f8d50

.arm
branch_37f8d50: @ 37f8d50 :arm
	cmp     r12, r1
	bxeq    lr
	ldr     r12, [r12, #0x64]
.arm
branch_37f8d5c: @ 37f8d5c :arm
	cmp     r12, #0x0
	beq     branch_37f8d74
	ldr     r3, [r12, #0x54]
	ldr     r2, [r1, #0x54]
	cmp     r3, r2
	bls     branch_37f8d50
.arm
branch_37f8d74: @ 37f8d74 :arm
	cmp     r12, #0x0
	bne     branch_37f8da0
	ldr     r2, [r0, #0x4]
	cmp     r2, #0x0
	streq   r1, [r0]
	strne   r1, [r2, #0x64]
	str     r2, [r1, #0x60]
	mov     r2, #0x0
	str     r2, [r1, #0x64]
	str     r1, [r0, #0x4]
	bx      lr
@ 0x37f8da0

.arm
branch_37f8da0: @ 37f8da0 :arm
	ldr     r2, [r12, #0x60]
	cmp     r2, #0x0
	streq   r1, [r0]
	strne   r1, [r2, #0x64]
	str     r2, [r1, #0x60]
	str     r12, [r1, #0x64]
	str     r1, [r12, #0x60]
	bx      lr
@ 0x37f8dc0

.arm
Function_37f8dc0: @ 37f8dc0 :arm
	stmfd   sp!, {r3,lr}
	ldr     lr, [r0]
	mov     r2, lr
	b       branch_37f8e04
@ 0x37f8dd0

.arm
branch_37f8dd0: @ 37f8dd0 :arm
	ldr     r3, [r2, #0x64]
	cmp     r2, r1
	bne     branch_37f8e00
	ldr     r12, [r2, #0x60]
	cmp     lr, r2
	streq   r3, [r0]
	strne   r3, [r12, #0x64]
	ldr     r1, [r0, #0x4]
	cmp     r1, r2
	streq   r12, [r0, #0x4]
	strne   r12, [r3, #0x60]
	b       branch_37f8e0c
@ 0x37f8e00

.arm
branch_37f8e00: @ 37f8e00 :arm
	mov     r2, r3
.arm
branch_37f8e04: @ 37f8e04 :arm
	cmp     r2, #0x0
	bne     branch_37f8dd0
.arm
branch_37f8e0c: @ 37f8e0c :arm
	mov     r0, r2
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37f8e18

.arm
Function_37f8e18: @ 37f8e18 :arm
	ldr     r2, [r0]
	cmp     r2, #0x0
	beq     branch_37f8e40
	ldr     r1, [r2, #0x10]
	str     r1, [r0]
	cmp     r1, #0x0
	movne   r0, #0x0
	strne   r0, [r1, #0x14]
	moveq   r1, #0x0
	streq   r1, [r0, #0x4]
.arm
branch_37f8e40: @ 37f8e40 :arm
	mov     r0, r2
	bx      lr
@ 0x37f8e48

.arm
Function_37f8e48: @ 37f8e48 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x50] @ [0x37f8ea4] (=0x3806d0c)
	mov     r12, #0x0
	ldr     lr, [r1, #0x2c]
	mov     r3, lr
	b       branch_37f8e68
@ 0x37f8e60

.arm
branch_37f8e60: @ 37f8e60 :arm
	mov     r12, r3
	ldr     r3, [r3, #0x4c]
.arm
branch_37f8e68: @ 37f8e68 :arm
	cmp     r3, #0x0
	beq     branch_37f8e80
	ldr     r2, [r3, #0x54]
	ldr     r1, [r0, #0x54]
	cmp     r2, r1
	bcc     branch_37f8e60
.arm
branch_37f8e80: @ 37f8e80 :arm
	cmp     r12, #0x0
	ldreq   r1, [pc, #0x18] @ [0x37f8ea4] (=0x3806d0c)
	streq   lr, [r0, #0x4c]
	streq   r0, [r1, #0x2c]
	ldrne   r1, [r12, #0x4c]
	strne   r1, [r0, #0x4c]
	strne   r0, [r12, #0x4c]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37f8ea4

.word 0x3806d0c @ 0x37f8ea4
.arm
Function_37f8ea8: @ 37f8ea8 :arm
	ldr     r1, [pc, #0x38] @ [0x37f8ee8] (=0x3806d0c)
	mov     r2, #0x0
	ldr     r1, [r1, #0x2c]
	b       branch_37f8ec0
@ 0x37f8eb8

.arm
branch_37f8eb8: @ 37f8eb8 :arm
	mov     r2, r1
	ldr     r1, [r1, #0x4c]
.arm
branch_37f8ec0: @ 37f8ec0 :arm
	cmp     r1, #0x0
	cmpne   r1, r0
	bne     branch_37f8eb8
	cmp     r2, #0x0
	ldreq   r1, [r0, #0x4c]
	ldreq   r0, [pc, #0xc] @ [0x37f8ee8] (=0x3806d0c)
	streq   r1, [r0, #0x2c]
	ldrne   r0, [r0, #0x4c]
	strne   r0, [r2, #0x4c]
	bx      lr
@ 0x37f8ee8

.word 0x3806d0c @ 0x37f8ee8
.arm
Function_37f8eec: @ 37f8eec :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r0, [pc, #0xc0] @ [0x37f8fb8] (=0x3806d0c)
	ldr     r1, [r0, #0x4]
	cmp     r1, #0x0
	bne     branch_37f8fb0
	ldrh    r0, [r0, #0x26]
	ldr     r4, [pc, #0xb0] @ [0x37f8fbc] (=0x3806d30)
	cmp     r0, #0x0
	bne     branch_37f8f1c
	bl      Function_37fadfc
	cmp     r0, #0x12
	bne     branch_37f8f28
.arm
branch_37f8f1c: @ 37f8f1c :arm
	mov     r0, #0x1
	strh    r0, [r4]
	b       branch_37f8fb0
@ 0x37f8f28

.arm
branch_37f8f28: @ 37f8f28 :arm
	ldr     r0, [pc, #0x88] @ [0x37f8fb8] (=0x3806d0c)
	ldr     r0, [r0, #0x8]
	ldr     r6, [r0]
	bl      Function_37f943c
	mov     r5, r0
	cmp     r6, r5
	cmpne   r5, #0x0
	beq     branch_37f8fb0
	ldr     r0, [r6, #0x48]
	cmp     r0, #0x2
	beq     branch_37f8f64
	mov     r0, r6
	bl      Function_37f96f0
	cmp     r0, #0x0
	bne     branch_37f8fb0
.arm
branch_37f8f64: @ 37f8f64 :arm
	ldr     r0, [pc, #0x4c] @ [0x37f8fb8] (=0x3806d0c)
	ldr     r2, [r0]
	cmp     r2, #0x0
	beq     branch_37f8f84
	mov     r0, r6
	mov     r1, r5
	mov     lr, pc
	bx      r2
@ 0x37f8f84

.arm
branch_37f8f84: @ 37f8f84 :arm
	ldr     r2, [r4, #0xc]
	cmp     r2, #0x0
	beq     branch_37f8fa0
	mov     r0, r6
	mov     r1, r5
	mov     lr, pc
	bx      r2
@ 0x37f8fa0

.arm
branch_37f8fa0: @ 37f8fa0 :arm
	ldr     r1, [pc, #0x10] @ [0x37f8fb8] (=0x3806d0c)
	mov     r0, r5
	str     r5, [r1, #0x28]
	bl      Function_37f9724
.arm
branch_37f8fb0: @ 37f8fb0 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x37f8fb8

.word 0x3806d0c @ 0x37f8fb8
.word 0x3806d30 @ 0x37f8fbc
.arm
Function_37f8fc0: @ 37f8fc0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0xb8] @ [0x37f9084] (=0x3806d0c)
	ldr     r1, [r0, #0xc]
	cmp     r1, #0x0
	bne     branch_37f907c
	ldr     r1, [pc, #0xac] @ [0x37f9088] (=0x3806d34)
	mov     r2, #0x1
	str     r2, [r0, #0xc]
	str     r1, [r0, #0x8]
	mov     r1, #0x10
	str     r1, [r0, #0x12c]
	mov     r3, #0x0
	str     r3, [r0, #0x128]
	str     r2, [r0, #0x120]
	str     r3, [r0, #0x124]
	ldr     r2, [pc, #0x88] @ [0x37f908c] (=0x400)
	ldr     r1, [pc, #0x88] @ [0x37f9090] (=0x3806de4)
	str     r3, [r0, #0x130]
	str     r1, [r0, #0x2c]
	str     r1, [r0, #0x28]
	cmp     r2, #0x0
	ldrle   r0, [pc, #0x78] @ [0x37f9094] (=0x37f8000)
	ldrgt   r1, [pc, #0x78] @ [0x37f9098] (=0x400)
	ldrgt   r0, [pc, #0x78] @ [0x37f909c] (=0x380ff80)
	subgt   r0, r0, r1
	sub     r12, r0, r2
	ldr     r2, [pc, #0x68] @ [0x37f9098] (=0x400)
	ldr     r0, [pc, #0x68] @ [0x37f909c] (=0x380ff80)
	ldr     r1, [pc, #0x4c] @ [0x37f9084] (=0x3806d0c)
	sub     r3, r0, r2
	str     r3, [r1, #0x150]
	str     r12, [r1, #0x14c]
	mov     r0, #0x0
	ldr     r2, [pc, #0x54] @ [0x37f90a0] (=0xd73bfdf7)
	str     r0, [r1, #0x154]
	str     r2, [r3, #-0x4]
	ldr     r2, [r1, #0x14c]
	ldr     r12, [pc, #0x48] @ [0x37f90a4] (=0xfbdd37bb)
	ldr     r3, [pc, #0x48] @ [0x37f90a8] (=0x3806d30)
	str     r12, [r2]
	str     r0, [r1, #0x15c]
	str     r0, [r1, #0x158]
	strh    r0, [r1, #0x24]
	ldr     r2, [pc, #0x38] @ [0x37f90ac] (=0x27fffa4)
	strh    r0, [r1, #0x26]
	str     r3, [r2]
	bl      Function_37f95d0
.arm
branch_37f907c: @ 37f907c :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37f9084

.word 0x3806d0c @ 0x37f9084
.word 0x3806d34 @ 0x37f9088
.word 0x400 @ 0x37f908c
.word 0x3806de4 @ 0x37f9090
.word Function_37f8000 @ =0x37f8000, 0x37f9094
.word 0x400 @ 0x37f9098
.word 0x380ff80 @ 0x37f909c
.word 0xd73bfdf7 @ 0x37f90a0
.word 0xfbdd37bb @ 0x37f90a4
.word 0x3806d30 @ 0x37f90a8
.word 0x27fffa4 @ 0x37f90ac
.arm
Function_37f90b0: @ 37f90b0 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r8, r0
	mov     r5, r1
	mov     r7, r2
	mov     r6, r3
	bl      Function_37fada4
	ldr     r1, [pc, #0xd8] @ [0x37f91a8] (=0x3806d0c)
	ldr     r2, [sp, #0x1c]
	ldr     r3, [r1, #0x20]
	mov     r4, r0
	add     r0, r3, #0x1
	str     r0, [r1, #0x20]
	str     r2, [r8, #0x54]
	str     r0, [r8, #0x50]
	mov     r1, #0x0
	str     r1, [r8, #0x48]
	mov     r0, r8
	str     r1, [r8, #0x58]
	bl      Function_37f8e48
	ldr     r0, [sp, #0x18]
	mov     r1, r5
	str     r6, [r8, #0x78]
	sub     r5, r6, r0
	sub     r2, r6, #0x4
	str     r5, [r8, #0x74]
	mov     r12, #0x0
	str     r12, [r8, #0x7c]
	ldr     r6, [pc, #0x88] @ [0x37f91ac] (=0xd73bfdf7)
	ldr     r0, [r8, #0x78]
	ldr     r3, [pc, #0x84] @ [0x37f91b0] (=0xfbdd37bb)
	str     r6, [r0, #-0x4]
	ldr     r0, [r8, #0x74]
	str     r3, [r0]
	str     r12, [r8, #0x84]
	mov     r0, r8
	str     r12, [r8, #0x80]
	bl      Function_37f966c
	ldr     r2, [pc, #0x68] @ [0x37f91b4] (=0x37f91b8)
	str     r7, [r8, #0x4]
	str     r2, [r8, #0x3c]
	ldr     r2, [sp, #0x18]
	add     r1, r5, #0x4
	mov     r0, #0x0
	sub     r2, r2, #0x8
	bl      Function_37fb074
	mov     r0, #0x0
	str     r0, [r8, #0x68]
	str     r0, [r8, #0x6c]
	str     r0, [r8, #0x70]
	str     r0, [r8, #0x98]
	str     r0, [r8, #0x5c]
	str     r0, [r8, #0x64]
	str     r0, [r8, #0x60]
	add     r1, r8, #0x88
	mov     r2, #0xc
	bl      Function_37fb074
	mov     r1, #0x0
	mov     r0, r4
	str     r1, [r8, #0x94]
	bl      Function_37fadb8
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37f91a8

.word 0x3806d0c @ 0x37f91a8
.word 0xd73bfdf7 @ 0x37f91ac
.word 0xfbdd37bb @ 0x37f91b0
.word 0x37f91b8 @ 0x37f91b4
.arm
Function_37f91b8: @ 37f91b8 :arm
	stmfd   sp!, {r3,lr}
	bl      Function_37fada4
	ldr     r0, [pc, #0x10] @ [0x37f91d8] (=0x3806d0c)
	mov     r1, #0x0
	ldr     r0, [r0, #0x28]
	bl      Function_37f91dc
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37f91d8

.word 0x3806d0c @ 0x37f91d8
.arm
Function_37f91dc: @ 37f91dc :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r2, [pc, #0x4c] @ [0x37f9234] (=0x3806d0c)
	mov     r5, r0
	ldr     r2, [r2, #0x1c]
	mov     r4, r1
	cmp     r2, #0x0
	beq     branch_37f9224
	ldr     r1, [pc, #0x38] @ [0x37f9238] (=0x37f923c)
	bl      Function_37f966c
	str     r4, [r5, #0x4]
	ldr     r1, [r5]
	mov     r0, r5
	orr     r1, r1, #0x80
	str     r1, [r5]
	mov     r1, #0x1
	str     r1, [r5, #0x48]
	bl      Function_37f9724
	b       branch_37f922c
@ 0x37f9224

.arm
branch_37f9224: @ 37f9224 :arm
	mov     r0, r4
	bl      Function_37f923c
.arm
branch_37f922c: @ 37f922c :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37f9234

.word 0x3806d0c @ 0x37f9234
.word Function_37f923c @ =0x37f923c, 0x37f9238
.arm
Function_37f923c: @ 37f923c :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x30] @ [0x37f9278] (=0x3806d0c)
	ldr     r1, [r1, #0x8]
	ldr     r3, [r1]
	ldr     r2, [r3, #0x98]
	cmp     r2, #0x0
	beq     branch_37f926c
	mov     r1, #0x0
	str     r1, [r3, #0x98]
	mov     lr, pc
	bx      r2
@ 0x37f9268

.arm
Function_37f9268: @ 37f9268 :arm
	bl      Function_37fada4
.arm
branch_37f926c: @ 37f926c :arm
	bl      Function_37f927c
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37f9278

.word 0x3806d0c @ 0x37f9278
.arm
Function_37f927c: @ 37f927c :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x60] @ [0x37f92e8] (=0x3806d0c)
	ldr     r0, [r0, #0x8]
	ldr     r4, [r0]
	bl      Function_37f95fc
	mov     r0, r4
	bl      Function_37f9a10
	ldr     r0, [r4, #0x5c]
	cmp     r0, #0x0
	beq     branch_37f92ac
	mov     r1, r4
	bl      Function_37f8dc0
.arm
branch_37f92ac: @ 37f92ac :arm
	mov     r0, r4
	bl      Function_37f8ea8
	mov     r1, #0x2
	add     r0, r4, #0x80
	str     r1, [r4, #0x48]
	bl      Function_37f9388
	bl      Function_37f9634
	bl      Function_37fada4
	mov     r4, r0
	bl      Function_37f8eec
	mov     r0, r4
	bl      Function_37fadb8
	bl      Function_37faf14
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37f92e8

.word 0x3806d0c @ 0x37f92e8
.arm
Function_37f92ec: @ 37f92ec :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	bl      Function_37fada4
	ldr     r1, [r5, #0x48]
	mov     r4, r0
	cmp     r1, #0x2
	beq     branch_37f9310
	add     r0, r5, #0x80
	bl      Function_37f9334
.arm
branch_37f9310: @ 37f9310 :arm
	mov     r0, r4
	bl      Function_37fadb8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37f9320

.arm
Function_37f9320: @ 37f9320 :arm
	ldr     r0, [r0, #0x48]
	cmp     r0, #0x2
	moveq   r0, #0x1
	movne   r0, #0x0
	bx      lr
@ 0x37f9334

.arm
Function_37f9334: @ 37f9334 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	bl      Function_37fada4
	ldr     r1, [pc, #0x3c] @ [0x37f9384] (=0x3806d0c)
	mov     r4, r0
	ldr     r0, [r1, #0x8]
	cmp     r6, #0x0
	ldr     r5, [r0]
	beq     branch_37f9368
	mov     r0, r6
	mov     r1, r5
	str     r6, [r5, #0x5c]
	bl      Function_37f8d48
.arm
branch_37f9368: @ 37f9368 :arm
	mov     r0, #0x0
	str     r0, [r5, #0x48]
	bl      Function_37f8eec
	mov     r0, r4
	bl      Function_37fadb8
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x37f9384

.word 0x3806d0c @ 0x37f9384
.arm
Function_37f9388: @ 37f9388 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	bl      Function_37fada4
	ldr     r1, [r5]
	mov     r4, r0
	cmp     r1, #0x0
	beq     branch_37f9400
	mov     r2, #0x0
	mov     r3, r2
	mov     r1, #0x1
	mov     r0, r2
	b       branch_37f93e4
@ 0x37f93b8

.arm
branch_37f93b8: @ 37f93b8 :arm
	beq     branch_37f93d4
	ldr     r12, [lr, #0x64]
	str     r12, [r5]
	cmp     r12, #0x0
	strne   r3, [r12, #0x60]
	streq   r2, [r5, #0x4]
	streq   r2, [lr, #0x5c]
.arm
branch_37f93d4: @ 37f93d4 :arm
	str     r1, [lr, #0x48]
	str     r0, [lr, #0x5c]
	str     r0, [lr, #0x64]
	str     r0, [lr, #0x60]
.arm
branch_37f93e4: @ 37f93e4 :arm
	ldr     lr, [r5]
	cmp     lr, #0x0
	bne     branch_37f93b8
	mov     r0, #0x0
	str     r0, [r5, #0x4]
	str     r0, [r5]
	bl      Function_37f8eec
.arm
branch_37f9400: @ 37f9400 :arm
	mov     r0, r4
	bl      Function_37fadb8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37f9410

.arm
Function_37f9410: @ 37f9410 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	bl      Function_37fada4
	mov     r1, #0x1
	mov     r4, r0
	str     r1, [r5, #0x48]
	bl      Function_37f8eec
	mov     r0, r4
	bl      Function_37fadb8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37f943c

.arm
Function_37f943c: @ 37f943c :arm
	ldr     r0, [pc, #0x1c] @ [0x37f9460] (=0x3806d0c)
	ldr     r0, [r0, #0x2c]
	b       branch_37f944c
@ 0x37f9448

.arm
branch_37f9448: @ 37f9448 :arm
	ldr     r0, [r0, #0x4c]
.arm
branch_37f944c: @ 37f944c :arm
	cmp     r0, #0x0
	ldrne   r1, [r0, #0x48]
	cmpne   r1, #0x1
	bne     branch_37f9448
	bx      lr
@ 0x37f9460

.word 0x3806d0c @ 0x37f9460
.arm
Function_37f9464: @ 37f9464 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r2, [pc, #0x94] @ [0x37f9504] (=0x3806d0c)
	mov     r7, r0
	ldr     r8, [r2, #0x2c]
	mov     r6, r1
	mov     r4, #0x0
	bl      Function_37fada4
	mov     r5, r0
	b       branch_37f9490
@ 0x37f9488

.arm
branch_37f9488: @ 37f9488 :arm
	mov     r4, r8
	ldr     r8, [r8, #0x4c]
.arm
branch_37f9490: @ 37f9490 :arm
	cmp     r8, #0x0
	cmpne   r8, r7
	bne     branch_37f9488
	cmp     r8, #0x0
	ldrne   r0, [pc, #0x60] @ [0x37f9508] (=0x3806d40)
	cmpne   r8, r0
	bne     branch_37f94bc
	mov     r0, r5
	bl      Function_37fadb8
	mov     r0, #0x0
	b       branch_37f94fc
@ 0x37f94bc

.arm
branch_37f94bc: @ 37f94bc :arm
	ldr     r0, [r8, #0x54]
	cmp     r0, r6
	beq     branch_37f94f0
	cmp     r4, #0x0
	ldreq   r1, [r7, #0x4c]
	ldreq   r0, [pc, #0x2c] @ [0x37f9504] (=0x3806d0c)
	streq   r1, [r0, #0x2c]
	ldrne   r0, [r7, #0x4c]
	strne   r0, [r4, #0x4c]
	mov     r0, r7
	str     r6, [r7, #0x54]
	bl      Function_37f8e48
	bl      Function_37f8eec
.arm
branch_37f94f0: @ 37f94f0 :arm
	mov     r0, r5
	bl      Function_37fadb8
	mov     r0, #0x1
.arm
branch_37f94fc: @ 37f94fc :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37f9504

.word 0x3806d0c @ 0x37f9504
.word 0x3806d40 @ 0x37f9508
.arm
Function_37f950c: @ 37f950c :arm
	stmfd   sp!, {r4,r5,lr}
	sub     sp, sp, #0x34
	mov     r4, r0
	add     r0, sp, #0x8
	bl      Function_37fa444
	ldr     r0, [pc, #0x7c] @ [0x37f95a4] (=0x3806d0c)
	ldr     r0, [r0, #0x8]
	ldr     r0, [r0]
	str     r0, [sp, #0x4]
	bl      Function_37fada4
	ldr     r1, [pc, #0x6c] @ [0x37f95a8] (=0x82ea)
	mov     r2, #0x0
	umull   r12, r3, r4, r1
	mla     r3, r4, r2, r3
	mla     r3, r2, r1, r3
	mov     r5, r0
	mov     r1, r12, lsr #6
	ldr     r4, [sp, #0x4]
	add     r0, sp, #0x8
	str     r0, [r4, #0x94]
	add     r2, sp, #0x4
	str     r2, [sp]
	mov     r2, r3, lsr #6
	orr     r1, r1, r3, lsl #26
	ldr     r3, [pc, #0x38] @ [0x37f95ac] (=0x37f95b0)
	bl      Function_37fa580
	mov     r4, #0x0
	b       branch_37f9584
@ 0x37f957c

.arm
branch_37f957c: @ 37f957c :arm
	mov     r0, r4
	bl      Function_37f9334
.arm
branch_37f9584: @ 37f9584 :arm
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	bne     branch_37f957c
	mov     r0, r5
	bl      Function_37fadb8
	add     sp, sp, #0x34
	ldmfd   sp!, {r4,r5,lr}
	bx      lr
@ 0x37f95a4

.word 0x3806d0c @ 0x37f95a4
.word 0x82ea @ 0x37f95a8
.word 0x37f95b0 @ 0x37f95ac
.arm
Function_37f95b0: @ 37f95b0 :arm
	ldr     r2, [r0]
	mov     r1, #0x0
	str     r1, [r0]
	ldr     r12, [pc, #0x8] @ [0x37f95cc] (=0x37f9410)
	mov     r0, r2
	str     r1, [r2, #0x94]
	bx      r12
@ 0x37f95cc

.word Function_37f9410 @ =0x37f9410, 0x37f95cc
.arm
Function_37f95d0: @ 37f95d0 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	bl      Function_37fada4
	ldr     r1, [pc, #0x14] @ [0x37f95f8] (=0x3806d0c)
	ldr     r4, [r1, #0x30]
	str     r5, [r1, #0x30]
	bl      Function_37fadb8
	mov     r0, r4
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37f95f8

.word 0x3806d0c @ 0x37f95f8
.arm
Function_37f95fc: @ 37f95fc :arm
	stmfd   sp!, {r4,lr}
	bl      Function_37fada4
	ldr     r2, [pc, #0x24] @ [0x37f9630] (=0x3806d0c)
	mvn     r1, #0x0
	ldr     r3, [r2, #0x4]
	cmp     r3, r1
	addcc   r1, r3, #0x1
	strcc   r1, [r2, #0x4]
	movcc   r4, r3
	bl      Function_37fadb8
	mov     r0, r4
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37f9630

.word 0x3806d0c @ 0x37f9630
.arm
Function_37f9634: @ 37f9634 :arm
	stmfd   sp!, {r4,lr}
	bl      Function_37fada4
	ldr     r1, [pc, #0x24] @ [0x37f9668] (=0x3806d0c)
	mov     r4, #0x0
	ldr     r3, [r1, #0x4]
	cmp     r3, #0x0
	subne   r2, r3, #0x1
	strne   r2, [r1, #0x4]
	movne   r4, r3
	bl      Function_37fadb8
	mov     r0, r4
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37f9668

.word 0x3806d0c @ 0x37f9668
.arm
Function_37f966c: @ 37f966c :arm
	add     r1, r1, #0x4
	str     r1, [r0, #0x40]
	str     r2, [r0, #0x44]
	sub     r2, r2, #0x40
	tst     r2, #0x4
	bne     branch_37f9688
	b       branch_37f968c
@ 0x37f9688

.arm
branch_37f9688: @ 37f9688 :arm
	sub     r2, r2, #0x4
.arm
branch_37f968c: @ 37f968c :arm
	str     r2, [r0, #0x38]
	ands    r1, r1, #0x1
	bne     branch_37f969c
	b       branch_37f96a0
@ 0x37f969c

.arm
branch_37f969c: @ 37f969c :arm
	mov     r1, #0x3f
.arm
branch_37f96a0: @ 37f96a0 :arm
	beq     branch_37f96a8
	b       branch_37f96ac
@ 0x37f96a8

.arm
branch_37f96a8: @ 37f96a8 :arm
	mov     r1, #0x1f
.arm
branch_37f96ac: @ 37f96ac :arm
	str     r1, [r0]
	mov     r1, #0x0
	str     r1, [r0, #0x4]
	str     r1, [r0, #0x8]
	str     r1, [r0, #0xc]
	str     r1, [r0, #0x10]
	str     r1, [r0, #0x14]
	str     r1, [r0, #0x18]
	str     r1, [r0, #0x1c]
	str     r1, [r0, #0x20]
	str     r1, [r0, #0x24]
	str     r1, [r0, #0x28]
	str     r1, [r0, #0x2c]
	str     r1, [r0, #0x30]
	str     r1, [r0, #0x34]
	str     r1, [r0, #0x3c]
	bx      lr
@ 0x37f96f0

.arm
Function_37f96f0: @ 37f96f0 :arm
	add     r1, r0, #0x0
	mrs     r2, CPSR
	str     r2, [r1], #0x4
	mov     r0, #0xd3
	msr     CPSR_c, r0
	str     sp, [r1, #0x40]
	msr     CPSR_c, r2
	mov     r0, #0x1
	stmia   r1, {r0-lr}
	add     r0, pc, #0x8
	str     r0, [r1, #0x3c]
	mov     r0, #0x0
	bx      lr
@ 0x37f9724

.arm
Function_37f9724: @ 37f9724 :arm
	mrs     r1, CPSR
	bic     r1, r1, #0x1f
	orr     r1, r1, #0xd3
	msr     CPSR_c, r1
	ldr     r1, [r0], #0x4
	msr     SPSR_fsxc, r1
	ldr     sp, [r0, #0x40]
	ldr     lr, [r0, #0x3c]
	ldmia   r0, {r0-lr}^
	mov     r0, r0
	subs    pc, lr, #0x4
.arm
Function_37f9750: @ 37f9750 :arm
	mov     r3, #0x0
	str     r3, [r0, #0x4]
	str     r3, [r0]
	str     r3, [r0, #0xc]
	str     r3, [r0, #0x8]
	str     r1, [r0, #0x10]
	str     r2, [r0, #0x14]
	str     r3, [r0, #0x18]
	str     r3, [r0, #0x1c]
	bx      lr
@ 0x37f9778

.arm
Function_37f9778: @ 37f9778 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r2
	mov     r6, r0
	mov     r5, r1
	bl      Function_37fada4
	mov     r4, r0
	and     r7, r7, #0x1
	b       branch_37f97b8
@ 0x37f9798

.arm
branch_37f9798: @ 37f9798 :arm
	cmp     r7, #0x0
	bne     branch_37f97b0
	mov     r0, r4
	bl      Function_37fadb8
	mov     r0, #0x0
	b       branch_37f97fc
@ 0x37f97b0

.arm
branch_37f97b0: @ 37f97b0 :arm
	mov     r0, r6
	bl      Function_37f9334
.arm
branch_37f97b8: @ 37f97b8 :arm
	ldr     r2, [r6, #0x1c]
	ldr     r1, [r6, #0x14]
	cmp     r1, r2
	ble     branch_37f9798
	ldr     r0, [r6, #0x18]
	add     r0, r0, r2
	bl      Function_3806254
	ldr     r2, [r6, #0x10]
	add     r0, r6, #0x8
	str     r5, [r2, r1, lsl #0x2]
	ldr     r1, [r6, #0x1c]
	add     r1, r1, #0x1
	str     r1, [r6, #0x1c]
	bl      Function_37f9388
	mov     r0, r4
	bl      Function_37fadb8
	mov     r0, #0x1
.arm
branch_37f97fc: @ 37f97fc :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37f9804

.arm
Function_37f9804: @ 37f9804 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r2
	mov     r6, r0
	mov     r5, r1
	bl      Function_37fada4
	mov     r4, r0
	and     r7, r7, #0x1
	b       branch_37f9844
@ 0x37f9824

.arm
branch_37f9824: @ 37f9824 :arm
	cmp     r7, #0x0
	bne     branch_37f983c
	mov     r0, r4
	bl      Function_37fadb8
	mov     r0, #0x0
	b       branch_37f9898
@ 0x37f983c

.arm
branch_37f983c: @ 37f983c :arm
	add     r0, r6, #0x8
	bl      Function_37f9334
.arm
branch_37f9844: @ 37f9844 :arm
	ldr     r0, [r6, #0x1c]
	cmp     r0, #0x0
	beq     branch_37f9824
	cmp     r5, #0x0
	ldrne   r1, [r6, #0x10]
	ldrne   r0, [r6, #0x18]
	ldrne   r0, [r1, r0, lsl #0x2]
	strne   r0, [r5]
	ldr     r0, [r6, #0x18]
	ldr     r1, [r6, #0x14]
	add     r0, r0, #0x1
	bl      Function_3806254
	str     r1, [r6, #0x18]
	ldr     r1, [r6, #0x1c]
	mov     r0, r6
	sub     r1, r1, #0x1
	str     r1, [r6, #0x1c]
	bl      Function_37f9388
	mov     r0, r4
	bl      Function_37fadb8
	mov     r0, #0x1
.arm
branch_37f9898: @ 37f9898 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37f98a0

.arm
Function_37f98a0: @ 37f98a0 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r6, r2
	mov     r7, r0
	mov     r4, r1
	bl      Function_37fada4
	mov     r5, r0
	and     r6, r6, #0x1
	b       branch_37f98e0
@ 0x37f98c0

.arm
branch_37f98c0: @ 37f98c0 :arm
	cmp     r6, #0x0
	bne     branch_37f98d8
	mov     r0, r5
	bl      Function_37fadb8
	mov     r0, #0x0
	b       branch_37f990c
@ 0x37f98d8

.arm
branch_37f98d8: @ 37f98d8 :arm
	add     r0, r7, #0x8
	bl      Function_37f9334
.arm
branch_37f98e0: @ 37f98e0 :arm
	ldr     r0, [r7, #0x1c]
	cmp     r0, #0x0
	beq     branch_37f98c0
	cmp     r4, #0x0
	ldrne   r1, [r7, #0x10]
	ldrne   r0, [r7, #0x18]
	ldrne   r0, [r1, r0, lsl #0x2]
	strne   r0, [r4]
	mov     r0, r5
	bl      Function_37fadb8
	mov     r0, #0x1
.arm
branch_37f990c: @ 37f990c :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37f9914

.arm
Function_37f9914: @ 37f9914 :arm
	mov     r1, #0x0
	str     r1, [r0, #0x4]
	str     r1, [r0]
	str     r1, [r0, #0x8]
	str     r1, [r0, #0xc]
	bx      lr
@ 0x37f992c

.arm
Function_37f992c: @ 37f992c :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r5, r0
	bl      Function_37fada4
	ldr     r1, [pc, #0x6c] @ [0x37f99ac] (=0x3806d30)
	mov     r4, r0
	ldr     r7, [r1, #0x4]
	mov     r6, #0x0
.arm
branch_37f9948: @ 37f9948 :arm
	ldr     r0, [r5, #0x8]
	cmp     r0, #0x0
	bne     branch_37f9974
	str     r7, [r5, #0x8]
	ldr     r1, [r5, #0xc]
	mov     r0, r7
	add     r2, r1, #0x1
	mov     r1, r5
	str     r2, [r5, #0xc]
	bl      Function_37f9a48
	b       branch_37f999c
@ 0x37f9974

.arm
branch_37f9974: @ 37f9974 :arm
	cmp     r0, r7
	ldreq   r0, [r5, #0xc]
	addeq   r0, r0, #0x1
	streq   r0, [r5, #0xc]
	beq     branch_37f999c
	str     r5, [r7, #0x68]
	mov     r0, r5
	bl      Function_37f9334
	str     r6, [r7, #0x68]
	b       branch_37f9948
@ 0x37f999c

.arm
branch_37f999c: @ 37f999c :arm
	mov     r0, r4
	bl      Function_37fadb8
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37f99ac

.word 0x3806d30 @ 0x37f99ac
.arm
Function_37f99b0: @ 37f99b0 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	bl      Function_37fada4
	ldr     r1, [pc, #0x48] @ [0x37f9a0c] (=0x3806d30)
	mov     r4, r0
	ldr     r0, [r1, #0x4]
	ldr     r1, [r5, #0x8]
	cmp     r1, r0
	bne     branch_37f99fc
	ldr     r1, [r5, #0xc]
	subs    r1, r1, #0x1
	str     r1, [r5, #0xc]
	bne     branch_37f99fc
	mov     r1, r5
	bl      Function_37f9a6c
	mov     r1, #0x0
	mov     r0, r5
	str     r1, [r5, #0x8]
	bl      Function_37f9388
.arm
branch_37f99fc: @ 37f99fc :arm
	mov     r0, r4
	bl      Function_37fadb8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37f9a0c

.word 0x3806d30 @ 0x37f9a0c
.arm
Function_37f9a10: @ 37f9a10 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, #0x0
	b       branch_37f9a34
@ 0x37f9a20

.arm
branch_37f9a20: @ 37f9a20 :arm
	add     r0, r5, #0x6c
	bl      Function_37f8e18
	str     r4, [r0, #0xc]
	str     r4, [r0, #0x8]
	bl      Function_37f9388
.arm
branch_37f9a34: @ 37f9a34 :arm
	ldr     r0, [r5, #0x6c]
	cmp     r0, #0x0
	bne     branch_37f9a20
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37f9a48

.arm
Function_37f9a48: @ 37f9a48 :arm
	ldr     r2, [r0, #0x70]
	cmp     r2, #0x0
	streq   r1, [r0, #0x6c]
	strne   r1, [r2, #0x10]
	str     r2, [r1, #0x14]
	mov     r2, #0x0
	str     r2, [r1, #0x10]
	str     r1, [r0, #0x70]
	bx      lr
@ 0x37f9a6c

.arm
Function_37f9a6c: @ 37f9a6c :arm
	ldr     r2, [r1, #0x10]
	ldr     r1, [r1, #0x14]
	cmp     r2, #0x0
	streq   r1, [r0, #0x70]
	strne   r1, [r2, #0x14]
	cmp     r1, #0x0
	streq   r2, [r0, #0x6c]
	strne   r2, [r1, #0x10]
	bx      lr
@ 0x37f9a90

.arm
Function_37f9a90: @ 37f9a90 :arm
	stmfd   sp!, {r3,lr}
	bl      Function_37f9ac0
	bl      Function_37fb3b0
	bl      Function_37f89f4
	bl      Function_37f87f4
	bl      Function_37fa1cc
	bl      Function_37fa3f0
	bl      Function_37f8fc0
	bl      Function_37fae20
	bl      Function_38031d0
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37f9ac0

.arm
Function_37f9ac0: @ 37f9ac0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x2c] @ [0x37f9af8] (=0x3806e88)
	ldr     r0, [r1]
	cmp     r0, #0x0
	bne     branch_37f9af0
	mov     r0, #0x1
	str     r0, [r1]
	bl      Function_37f9afc
	mov     r0, #0x7
	bl      Function_37f9afc
	mov     r0, #0x8
	bl      Function_37f9afc
.arm
branch_37f9af0: @ 37f9af0 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37f9af8

.word 0x3806e88 @ 0x37f9af8
.arm
Function_37f9afc: @ 37f9afc :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_37f9b60
	mov     r1, r4, lsl #2
	add     r1, r1, #39, 12 @ #0x2700000
	add     r1, r1, #255, 20 @ #0xff000
	str     r0, [r1, #0xdc4]
	mov     r0, r4
	bl      Function_37f9bdc
	mov     r1, r4, lsl #2
	add     r1, r1, #39, 12 @ #0x2700000
	add     r1, r1, #255, 20 @ #0xff000
	str     r0, [r1, #0xda0]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37f9b38

.arm
Function_37f9b38: @ 37f9b38 :arm
	mov     r0, r0, lsl #2
	add     r0, r0, #39, 12 @ #0x2700000
	add     r0, r0, #255, 20 @ #0xff000
	ldr     r0, [r0, #0xdc4]
	bx      lr
@ 0x37f9b4c

.arm
Function_37f9b4c: @ 37f9b4c :arm
	mov     r0, r0, lsl #2
	add     r0, r0, #39, 12 @ #0x2700000
	add     r0, r0, #255, 20 @ #0xff000
	ldr     r0, [r0, #0xda0]
	bx      lr
@ 0x37f9b60

.arm
Function_37f9b60: @ 37f9b60 :arm
	cmp     r0, #0x1
	beq     branch_37f9b7c
	cmp     r0, #0x7
	beq     branch_37f9b84
	cmp     r0, #0x8
	beq     branch_37f9b8c
	b       branch_37f9bc0
@ 0x37f9b7c

.arm
branch_37f9b7c: @ 37f9b7c :arm
	ldr     r0, [pc, #0x44] @ [0x37f9bc8] (=0x27ff000)
	bx      lr
@ 0x37f9b84

.arm
branch_37f9b84: @ 37f9b84 :arm
	mov     r0, #14, 10 @ #0x3800000
	bx      lr
@ 0x37f9b8c

.arm
branch_37f9b8c: @ 37f9b8c :arm
	ldr     r2, [pc, #0x38] @ [0x37f9bcc] (=0x400)
	ldr     r0, [pc, #0x38] @ [0x37f9bd0] (=0x380ff80)
	ldr     r1, [pc, #0x38] @ [0x37f9bd4] (=0x380aecc)
	sub     r2, r0, r2
	mov     r0, #14, 10 @ #0x3800000
	cmp     r1, #14, 10 @ #0x3800000
	movhi   r0, r1
	ldr     r1, [pc, #0x28] @ [0x37f9bd8] (=0x400)
	cmp     r1, #0x0
	bxeq    lr
	sublt   r0, r0, r1
	subge   r0, r2, r1
	bx      lr
@ 0x37f9bc0

.arm
branch_37f9bc0: @ 37f9bc0 :arm
	mov     r0, #0x0
	bx      lr
@ 0x37f9bc8

.word 0x27ff000 @ 0x37f9bc8
.word 0x400 @ 0x37f9bcc
.word 0x380ff80 @ 0x37f9bd0
.word 0x380aecc @ 0x37f9bd4
.word 0x400 @ 0x37f9bd8
.arm
Function_37f9bdc: @ 37f9bdc :arm
	cmp     r0, #0x1
	beq     branch_37f9bf8
	cmp     r0, #0x7
	beq     branch_37f9c00
	cmp     r0, #0x8
	beq     branch_37f9c10
	b       branch_37f9c24
@ 0x37f9bf8

.arm
branch_37f9bf8: @ 37f9bf8 :arm
	ldr     r0, [pc, #0x2c] @ [0x37f9c2c] (=0x27f9eec)
	bx      lr
@ 0x37f9c00

.arm
branch_37f9c00: @ 37f9c00 :arm
	ldr     r0, [pc, #0x28] @ [0x37f9c30] (=0x380aecc)
	cmp     r0, #14, 10 @ #0x3800000
	movhi   r0, #14, 10 @ #0x3800000
	bx      lr
@ 0x37f9c10

.arm
branch_37f9c10: @ 37f9c10 :arm
	ldr     r1, [pc, #0x18] @ [0x37f9c30] (=0x380aecc)
	mov     r0, #14, 10 @ #0x3800000
	cmp     r1, #14, 10 @ #0x3800000
	movhi   r0, r1
	bx      lr
@ 0x37f9c24

.arm
branch_37f9c24: @ 37f9c24 :arm
	mov     r0, #0x0
	bx      lr
@ 0x37f9c2c

.word 0x27f9eec @ 0x37f9c2c
.word 0x380aecc @ 0x37f9c30
.arm
Function_37f9c34: @ 37f9c34 :arm
	mov     r0, r0, lsl #2
	add     r0, r0, #39, 12 @ #0x2700000
	add     r0, r0, #255, 20 @ #0xff000
	str     r1, [r0, #0xda0]
	bx      lr
@ 0x37f9c48

.arm
Function_37f9c48: @ 37f9c48 :arm
	ldr     r3, [r1, #0x4]
	cmp     r3, #0x0
	ldrne   r2, [r1]
	strne   r2, [r3]
	ldr     r2, [r1]
	cmp     r2, #0x0
	ldreq   r0, [r1, #0x4]
	ldrne   r1, [r1, #0x4]
	strne   r1, [r2, #0x4]
	bx      lr
@ 0x37f9c70

.arm
Function_37f9c70: @ 37f9c70 :arm
	stmfd   sp!, {r3,lr}
	mov     lr, r0
	mov     r12, #0x0
	b       branch_37f9c90
@ 0x37f9c80

.arm
branch_37f9c80: @ 37f9c80 :arm
	cmp     r1, lr
	bls     branch_37f9c98
	mov     r12, lr
	ldr     lr, [lr, #0x4]
.arm
branch_37f9c90: @ 37f9c90 :arm
	cmp     lr, #0x0
	bne     branch_37f9c80
.arm
branch_37f9c98: @ 37f9c98 :arm
	stmia   r1, {r12,lr}
	cmp     lr, #0x0
	beq     branch_37f9cd4
	str     r1, [lr]
	ldr     r3, [r1, #0x8]
	add     r2, r1, r3
	cmp     r2, lr
	bne     branch_37f9cd4
	ldr     r2, [lr, #0x8]
	add     r2, r3, r2
	str     r2, [r1, #0x8]
	ldr     lr, [lr, #0x4]
	str     lr, [r1, #0x4]
	cmp     lr, #0x0
	strne   r1, [lr]
.arm
branch_37f9cd4: @ 37f9cd4 :arm
	cmp     r12, #0x0
	beq     branch_37f9d0c
	str     r1, [r12, #0x4]
	ldr     r2, [r12, #0x8]
	add     r3, r12, r2
	cmp     r3, r1
	bne     branch_37f9d10
	ldr     r1, [r1, #0x8]
	cmp     lr, #0x0
	add     r1, r2, r1
	str     r1, [r12, #0x8]
	str     lr, [r12, #0x4]
	strne   r12, [lr]
	b       branch_37f9d10
@ 0x37f9d0c

.arm
branch_37f9d0c: @ 37f9d0c :arm
	mov     r0, r1
.arm
branch_37f9d10: @ 37f9d10 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37f9d18

.arm
Function_37f9d18: @ 37f9d18 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r4, r0
	mov     r5, r1
	mov     r7, r2
	bl      Function_37fada4
	ldr     r1, [pc, #0xf0] @ [0x37f9e24] (=0x3806e8c)
	mov     r6, r0
	ldr     r1, [r1, r4, lsl #0x2]
	cmp     r1, #0x0
	bne     branch_37f9d4c
	bl      Function_37fadb8
	mov     r0, #0x0
	b       branch_37f9e1c
@ 0x37f9d4c

.arm
branch_37f9d4c: @ 37f9d4c :arm
	cmp     r5, #0x0
	ldrlt   r5, [r1]
	ldr     r1, [r1, #0x10]
	mov     r0, #0xc
	mla     r4, r5, r0, r1
	ldr     r0, [r4, #0x4]
	add     r1, r7, #0x3f
	mov     r5, r0
	bic     r7, r1, #0x1f
	b       branch_37f9d84
@ 0x37f9d74

.arm
branch_37f9d74: @ 37f9d74 :arm
	ldr     r1, [r5, #0x8]
	cmp     r7, r1
	ble     branch_37f9d8c
	ldr     r5, [r5, #0x4]
.arm
branch_37f9d84: @ 37f9d84 :arm
	cmp     r5, #0x0
	bne     branch_37f9d74
.arm
branch_37f9d8c: @ 37f9d8c :arm
	cmp     r5, #0x0
	bne     branch_37f9da4
	mov     r0, r6
	bl      Function_37fadb8
	mov     r0, #0x0
	b       branch_37f9e1c
@ 0x37f9da4

.arm
branch_37f9da4: @ 37f9da4 :arm
	ldr     r1, [r5, #0x8]
	sub     r1, r1, r7
	cmp     r1, #0x40
	bcs     branch_37f9dc4
	mov     r1, r5
	bl      Function_37f9c48
	str     r0, [r4, #0x4]
	b       branch_37f9df8
@ 0x37f9dc4

.arm
branch_37f9dc4: @ 37f9dc4 :arm
	str     r7, [r5, #0x8]
	add     r2, r5, r7
	str     r1, [r2, #0x8]
	ldr     r0, [r5]
	str     r0, [r5, r7]
	ldr     r0, [r5, #0x4]
	str     r0, [r2, #0x4]
	cmp     r0, #0x0
	strne   r2, [r0]
	ldr     r0, [r2]
	cmp     r0, #0x0
	strne   r2, [r0, #0x4]
	streq   r2, [r4, #0x4]
.arm
branch_37f9df8: @ 37f9df8 :arm
	ldr     r1, [r4, #0x8]
	mov     r0, #0x0
	stmia   r5, {r0,r1}
	cmp     r1, #0x0
	strne   r5, [r1]
	mov     r0, r6
	str     r5, [r4, #0x8]
	bl      Function_37fadb8
	add     r0, r5, #0x20
.arm
branch_37f9e1c: @ 37f9e1c :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37f9e24

.word 0x3806e8c @ 0x37f9e24
.arm
Function_37f9e28: @ 37f9e28 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r6, r1
	mov     r5, r2
	bl      Function_37fada4
	ldr     r1, [pc, #0x4c] @ [0x37f9e90] (=0x3806e8c)
	mov     r4, r0
	ldr     r0, [r1, r7, lsl #0x2]
	cmp     r6, #0x0
	ldrlt   r6, [r0]
	ldr     r1, [r0, #0x10]
	mov     r0, #0xc
	mla     r7, r6, r0, r1
	sub     r5, r5, #0x20
	ldr     r0, [r7, #0x8]
	mov     r1, r5
	bl      Function_37f9c48
	str     r0, [r7, #0x8]
	ldr     r0, [r7, #0x4]
	mov     r1, r5
	bl      Function_37f9c70
	str     r0, [r7, #0x4]
	mov     r0, r4
	bl      Function_37fadb8
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37f9e90

.word 0x3806e8c @ 0x37f9e90
.arm
Function_37f9e94: @ 37f9e94 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	mov     r5, r1
	bl      Function_37fada4
	ldr     r1, [pc, #0x18] @ [0x37f9ec4] (=0x3806e8c)
	ldr     r1, [r1, r4, lsl #0x2]
	ldr     r4, [r1]
	str     r5, [r1]
	bl      Function_37fadb8
	mov     r0, r4
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37f9ec4

.word 0x3806e8c @ 0x37f9ec4
.arm
Function_37f9ec8: @ 37f9ec8 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r5, r1
	mov     r4, r2
	mov     r6, r3
	bl      Function_37fada4
	ldr     r2, [pc, #0x84] @ [0x37f9f6c] (=0x3806e8c)
	mov     r1, #0xc
	str     r5, [r2, r7, lsl #0x2]
	add     r2, r5, #0x14
	str     r2, [r5, #0x10]
	mov     r7, #0x0
	mul     r1, r6, r1
	str     r6, [r5, #0x4]
	mvn     lr, #0x0
	mov     r12, r7
	mov     r2, #0xc
	b       branch_37f9f2c
@ 0x37f9f10

.arm
branch_37f9f10: @ 37f9f10 :arm
	mul     r3, r7, r2
	ldr     r6, [r5, #0x10]
	add     r7, r7, #0x1
	str     lr, [r6, r3]
	add     r3, r6, r3
	str     r12, [r3, #0x8]
	str     r12, [r3, #0x4]
.arm
branch_37f9f2c: @ 37f9f2c :arm
	ldr     r3, [r5, #0x4]
	cmp     r7, r3
	blt     branch_37f9f10
	mvn     r2, #0x0
	str     r2, [r5]
	ldr     r3, [r5, #0x10]
	bic     r2, r4, #0x1f
	add     r1, r3, r1
	add     r1, r1, #0x1f
	bic     r1, r1, #0x1f
	str     r1, [r5, #0x8]
	str     r2, [r5, #0xc]
	bl      Function_37fadb8
	ldr     r0, [r5, #0x8]
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37f9f6c

.word 0x3806e8c @ 0x37f9f6c
.arm
Function_37f9f70: @ 37f9f70 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r4, r0
	mov     r6, r1
	mov     r5, r2
	bl      Function_37fada4
	ldr     r2, [pc, #0x80] @ [0x37fa00c] (=0x3806e8c)
	add     r1, r6, #0x1f
	ldr     lr, [r2, r4, lsl #0x2]
	bic     r6, r1, #0x1f
	ldr     r7, [lr, #0x4]
	bic     r5, r5, #0x1f
	mov     r4, #0x0
	mov     r1, #0xc
	b       branch_37f9ff4
@ 0x37f9fa8

.arm
branch_37f9fa8: @ 37f9fa8 :arm
	mul     r3, r4, r1
	ldr     r12, [lr, #0x10]
	ldr     r2, [r12, r3]
	add     r3, r12, r3
	cmp     r2, #0x0
	bge     branch_37f9ff0
	sub     r1, r5, r6
	str     r1, [r3]
	mov     r2, #0x0
	str     r2, [r6]
	str     r2, [r6, #0x4]
	ldr     r1, [r3]
	str     r1, [r6, #0x8]
	str     r6, [r3, #0x4]
	str     r2, [r3, #0x8]
	bl      Function_37fadb8
	mov     r0, r4
	b       branch_37fa004
@ 0x37f9ff0

.arm
branch_37f9ff0: @ 37f9ff0 :arm
	add     r4, r4, #0x1
.arm
branch_37f9ff4: @ 37f9ff4 :arm
	cmp     r4, r7
	blt     branch_37f9fa8
	bl      Function_37fadb8
	mvn     r0, #0x0
.arm
branch_37fa004: @ 37fa004 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37fa00c

.word 0x3806e8c @ 0x37fa00c
.arm
Function_37fa010: @ 37fa010 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r4, #0x0
	mov     r8, r0
	mov     r7, r1
	mov     r5, r4
	sub     r6, r4, #0x1
	bl      Function_37fada4
	ldr     r1, [pc, #0x178] @ [0x37fa1ac] (=0x3806e8c)
	mvn     r2, #0x0
	ldr     r1, [r1, r8, lsl #0x2]
	cmp     r7, r2
	ldr     r12, [r1, #0x10]
	ldreq   r7, [r1]
	cmp     r12, #0x0
	beq     branch_37fa19c
	cmp     r7, #0x0
	blt     branch_37fa19c
	ldr     r2, [r1, #0x4]
	cmp     r7, r2
	bge     branch_37fa19c
	mov     r2, #0xc
	mul     r3, r7, r2
	ldr     r2, [r12, r3]
	add     r7, r12, r3
	cmp     r2, #0x0
	blt     branch_37fa19c
	ldr     r12, [r7, #0x8]
	cmp     r12, #0x0
	ldrne   r3, [r12]
	cmpne   r3, #0x0
	bne     branch_37fa19c
	b       branch_37fa0f0
@ 0x37fa090

.arm
branch_37fa090: @ 37fa090 :arm
	ldr     r3, [r1, #0x8]
	cmp     r3, r12
	bhi     branch_37fa19c
	ldr     r3, [r1, #0xc]
	cmp     r12, r3
	bcs     branch_37fa19c
	tst     r12, #0x1f
	bne     branch_37fa19c
	ldr     lr, [r12, #0x4]
	cmp     lr, #0x0
	ldrne   r3, [lr]
	cmpne   r3, r12
	bne     branch_37fa19c
	ldr     r3, [r12, #0x8]
	cmp     r3, #0x40
	bcc     branch_37fa19c
	tst     r3, #0x1f
	bne     branch_37fa19c
	add     r4, r4, r3
	cmp     r4, #0x0
	ble     branch_37fa19c
	cmp     r4, r2
	bgt     branch_37fa19c
	mov     r12, lr
.arm
branch_37fa0f0: @ 37fa0f0 :arm
	cmp     r12, #0x0
	bne     branch_37fa090
	ldr     lr, [r7, #0x4]
	cmp     lr, #0x0
	ldrne   r3, [lr]
	cmpne   r3, #0x0
	bne     branch_37fa19c
	b       branch_37fa18c
@ 0x37fa110

.arm
branch_37fa110: @ 37fa110 :arm
	ldr     r3, [r1, #0x8]
	cmp     r3, lr
	bhi     branch_37fa19c
	ldr     r3, [r1, #0xc]
	cmp     lr, r3
	bcs     branch_37fa19c
	tst     lr, #0x1f
	bne     branch_37fa19c
	ldr     r7, [lr, #0x4]
	cmp     r7, #0x0
	ldrne   r3, [r7]
	cmpne   r3, lr
	bne     branch_37fa19c
	ldr     r12, [lr, #0x8]
	cmp     r12, #0x40
	bcc     branch_37fa19c
	tst     r12, #0x1f
	bne     branch_37fa19c
	cmp     r7, #0x0
	beq     branch_37fa16c
	add     r3, lr, r12
	cmp     r3, r7
	bcs     branch_37fa19c
.arm
branch_37fa16c: @ 37fa16c :arm
	add     r4, r4, r12
	sub     r3, r12, #0x20
	cmp     r4, #0x0
	add     r5, r5, r3
	ble     branch_37fa19c
	cmp     r4, r2
	bgt     branch_37fa19c
	mov     lr, r7
.arm
branch_37fa18c: @ 37fa18c :arm
	cmp     lr, #0x0
	bne     branch_37fa110
	cmp     r4, r2
	moveq   r6, r5
.arm
branch_37fa19c: @ 37fa19c :arm
	bl      Function_37fadb8
	mov     r0, r6
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37fa1ac

.word 0x3806e8c @ 0x37fa1ac
.arm
Function_37fa1b0: @ 37fa1b0 :arm
	ldr     r1, [pc, #0x10] @ [0x37fa1c8] (=0x3806eb0)
	mov     r2, #0x1
	ldrh    r3, [r1]
	orr     r0, r3, r2, lsl r0
	strh    r0, [r1]
	bx      lr
@ 0x37fa1c8

.word 0x3806eb0 @ 0x37fa1c8
.arm
Function_37fa1cc: @ 37fa1cc :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x64] @ [0x37fa23c] (=0x3806eb4)
	ldrh    r0, [r1]
	cmp     r0, #0x0
	bne     branch_37fa234
	mov     r2, #0x1
	mov     r0, #0x0
	strh    r2, [r1]
	bl      Function_37fa1b0
	ldr     r0, [pc, #0x44] @ [0x37fa23c] (=0x3806eb4)
	mov     r2, #0x0
	str     r2, [r0, #0x8]
	ldr     r3, [pc, #0x3c] @ [0x37fa240] (=0x4000102)
	str     r2, [r0, #0xc]
	strh    r2, [r3]
	ldr     r1, [pc, #0x34] @ [0x37fa244] (=0x37fa258)
	strh    r2, [r3, #-0x2]
	mov     r2, #0xc1
	mov     r0, #0x8
	strh    r2, [r3]
	bl      Function_37f8818
	mov     r0, #0x8
	bl      Function_37f894c
	ldr     r0, [pc, #0xc] @ [0x37fa23c] (=0x3806eb4)
	mov     r1, #0x0
	str     r1, [r0, #0x4]
.arm
branch_37fa234: @ 37fa234 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fa23c

.word 0x3806eb4 @ 0x37fa23c
.word 0x4000102 @ 0x37fa240
.word 0x37fa258 @ 0x37fa244
.arm
Function_37fa248: @ 37fa248 :arm
	ldr     r0, [pc, #0x4] @ [0x37fa254] (=0x3806eb4)
	ldrh    r0, [r0]
	bx      lr
@ 0x37fa254

.word 0x3806eb4 @ 0x37fa254
.arm
Function_37fa258: @ 37fa258 :arm
	ldr     r0, [pc, #0x50] @ [0x37fa2b0] (=0x3806eb4)
	mov     r3, #0x0
	ldr     r2, [r0, #0x8]
	ldr     r1, [r0, #0xc]
	adds    r2, r2, #0x1
	str     r2, [r0, #0x8]
	adc     r1, r1, #0x0
	str     r1, [r0, #0xc]
	ldr     r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_37fa29c
	ldr     r2, [pc, #0x28] @ [0x37fa2b4] (=0x4000102)
	mov     r1, #0xc1
	strh    r3, [r2]
	strh    r3, [r2, #-0x2]
	strh    r1, [r2]
	str     r3, [r0, #0x4]
.arm
branch_37fa29c: @ 37fa29c :arm
	ldr     r12, [pc, #0x14] @ [0x37fa2b8] (=0x37f88b4)
	mov     r0, #0x0
	ldr     r1, [pc, #0x10] @ [0x37fa2bc] (=0x37fa258)
	mov     r2, r0
	bx      r12
@ 0x37fa2b0

.word 0x3806eb4 @ 0x37fa2b0
.word 0x4000102 @ 0x37fa2b4
.word Function_37f88b4 @ =0x37f88b4, 0x37fa2b8
.word Function_37fa258 @ =0x37fa258, 0x37fa2bc
.arm
Function_37fa2c0: @ 37fa2c0 :arm
	stmfd   sp!, {lr}
	sub     sp, sp, #0xc
	bl      Function_37fada4
	ldr     lr, [pc, #0x84] @ [0x37fa358] (=0x4000100)
	ldr     r1, [pc, #0x84] @ [0x37fa35c] (=0x3806eb4)
	ldrh    r3, [lr]
	ldr     r2, [pc, #0x80] @ [0x37fa360] (=0xffff)
	strh    r3, [sp]
	ldr     r12, [r1, #0x8]
	ldr     r3, [r1, #0xc]
	sub     r1, r2, #1, 16 @ #0x10000
	and     r12, r12, r1
	and     r1, r3, r2
	str     r12, [sp, #0x4]
	str     r1, [sp, #0x8]
	ldr     r1, [lr, #0x114]
	tst     r1, #0x8
	beq     branch_37fa32c
	ldrh    r1, [sp]
	tst     r1, #2, 18 @ #0x8000
	bne     branch_37fa32c
	ldr     r2, [sp, #0x4]
	ldr     r1, [sp, #0x8]
	adds    r2, r2, #0x1
	adc     r1, r1, #0x0
	str     r2, [sp, #0x4]
	str     r1, [sp, #0x8]
.arm
branch_37fa32c: @ 37fa32c :arm
	bl      Function_37fadb8
	ldr     r2, [sp, #0x4]
	ldr     r1, [sp, #0x8]
	ldrh    r0, [sp]
	mov     r1, r1, lsl #16
	orr     r1, r1, r2, lsr #16
	orr     r1, r1, r0, asr #31
	orr     r0, r0, r2, lsl #16
	add     sp, sp, #0xc
	ldmfd   sp!, {lr}
	bx      lr
@ 0x37fa358

.word 0x4000100 @ 0x37fa358
.word 0x3806eb4 @ 0x37fa35c
.word 0xffff @ 0x37fa360
.arm
Function_37fa364: @ 37fa364 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	bl      Function_37fa2c0
	ldr     r3, [pc, #0x68] @ [0x37fa3e0] (=0x4000106)
	mov     r2, #0x0
	strh    r2, [r3]
	ldr     r12, [r4, #0xc]
	ldr     r3, [r4, #0x10]
	subs    r5, r12, r0
	sbc     r4, r3, r1
	ldr     r1, [pc, #0x50] @ [0x37fa3e4] (=0x37fa6ec)
	mov     r0, #0x1
	bl      Function_37f88b4
	subs    r0, r5, #0x0
	mov     r3, #0x0
	sbcs    r0, r4, #0x0
	ldrlt   r3, [pc, #0x3c] @ [0x37fa3e8] (=0xfffe)
	blt     branch_37fa3c0
	subs    r0, r5, #1, 16 @ #0x10000
	sbcs    r0, r4, r3
	mvnlt   r0, r5
	movlt   r0, r0, lsl #16
	movlt   r3, r0, lsr #16
.arm
branch_37fa3c0: @ 37fa3c0 :arm
	ldr     r2, [pc, #0x24] @ [0x37fa3ec] (=0x4000104)
	mov     r1, #0xc1
	strh    r3, [r2]
	mov     r0, #0x10
	strh    r1, [r2, #0x2]
	bl      Function_37f894c
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fa3e0

.word 0x4000106 @ 0x37fa3e0
.word 0x37fa6ec @ 0x37fa3e4
.word 0xfffe @ 0x37fa3e8
.word 0x4000104 @ 0x37fa3ec
.arm
Function_37fa3f0: @ 37fa3f0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x34] @ [0x37fa430] (=0x3806ec4)
	ldrh    r0, [r1]
	cmp     r0, #0x0
	bne     branch_37fa428
	mov     r0, #0x1
	strh    r0, [r1]
	bl      Function_37fa1b0
	ldr     r1, [pc, #0x18] @ [0x37fa430] (=0x3806ec4)
	mov     r2, #0x0
	str     r2, [r1, #0x4]
	mov     r0, #0x10
	str     r2, [r1, #0x8]
	bl      Function_37f8984
.arm
branch_37fa428: @ 37fa428 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fa430

.word 0x3806ec4 @ 0x37fa430
.arm
Function_37fa434: @ 37fa434 :arm
	ldr     r0, [pc, #0x4] @ [0x37fa440] (=0x3806ec4)
	ldrh    r0, [r0]
	bx      lr
@ 0x37fa440

.word 0x3806ec4 @ 0x37fa440
.arm
Function_37fa444: @ 37fa444 :arm
	mov     r1, #0x0
	str     r1, [r0]
	str     r1, [r0, #0x8]
	bx      lr
@ 0x37fa454

.arm
Function_37fa454: @ 37fa454 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r8, r0
	ldr     r0, [r8, #0x20]
	ldr     r3, [r8, #0x1c]
	cmp     r0, #0x0
	mov     r7, r1
	mov     r6, r2
	cmpeq   r3, #0x0
	beq     branch_37fa4c8
	bl      Function_37fa2c0
	ldr     r6, [r8, #0x28]
	ldr     r7, [r8, #0x24]
	cmp     r6, r1
	cmpeq   r7, r0
	bcs     branch_37fa4c8
	ldr     r5, [r8, #0x1c]
	ldr     r4, [r8, #0x20]
	subs    r0, r0, r7
	mov     r2, r5
	mov     r3, r4
	sbc     r1, r1, r6
	bl      Function_380620c
	adds    r2, r0, #0x1
	adc     r0, r1, #0x0
	umull   r3, r1, r5, r2
	mla     r1, r5, r0, r1
	mla     r1, r4, r2, r1
	adds    r7, r7, r3
	adc     r6, r6, r1
.arm
branch_37fa4c8: @ 37fa4c8 :arm
	str     r7, [r8, #0xc]
	ldr     r0, [pc, #0xa8] @ [0x37fa57c] (=0x3806ec4)
	str     r6, [r8, #0x10]
	mov     r2, #0x0
	ldr     r5, [r0, #0x4]
	mov     r1, r2
	b       branch_37fa538
@ 0x37fa4e4

.arm
branch_37fa4e4: @ 37fa4e4 :arm
	ldr     r3, [r5, #0xc]
	ldr     r0, [r5, #0x10]
	subs    r4, r7, r3
	sbc     r3, r6, r0
	subs    r0, r4, r1
	sbcs    r0, r3, r2
	bge     branch_37fa534
	ldr     r0, [r5, #0x14]
	str     r0, [r8, #0x14]
	str     r8, [r5, #0x14]
	str     r5, [r8, #0x18]
	ldr     r0, [r8, #0x14]
	cmp     r0, #0x0
	strne   r8, [r0, #0x18]
	bne     branch_37fa574
	ldr     r1, [pc, #0x54] @ [0x37fa57c] (=0x3806ec4)
	mov     r0, r8
	str     r8, [r1, #0x4]
	bl      Function_37fa364
	b       branch_37fa574
@ 0x37fa534

.arm
branch_37fa534: @ 37fa534 :arm
	ldr     r5, [r5, #0x18]
.arm
branch_37fa538: @ 37fa538 :arm
	cmp     r5, #0x0
	bne     branch_37fa4e4
	ldr     r1, [pc, #0x34] @ [0x37fa57c] (=0x3806ec4)
	mov     r0, #0x0
	str     r0, [r8, #0x18]
	ldr     r0, [r1, #0x8]
	str     r8, [r1, #0x8]
	str     r0, [r8, #0x14]
	cmp     r0, #0x0
	strne   r8, [r0, #0x18]
	bne     branch_37fa574
	str     r8, [r1, #0x8]
	mov     r0, r8
	str     r8, [r1, #0x4]
	bl      Function_37fa364
.arm
branch_37fa574: @ 37fa574 :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37fa57c

.word 0x3806ec4 @ 0x37fa57c
.arm
Function_37fa580: @ 37fa580 :arm
	stmfd   sp!, {r3-r7,lr}
	movs    r6, r0
	mov     r5, r1
	mov     r4, r2
	mov     r7, r3
	beq     branch_37fa5a4
	ldr     r0, [r6]
	cmp     r0, #0x0
	beq     branch_37fa5a8
.arm
branch_37fa5a4: @ 37fa5a4 :arm
	bl      Function_37faf14
.arm
branch_37fa5a8: @ 37fa5a8 :arm
	bl      Function_37fada4
	mov     r1, #0x0
	str     r1, [r6, #0x1c]
	str     r1, [r6, #0x20]
	str     r7, [r6]
	ldr     r1, [sp, #0x18]
	mov     r7, r0
	str     r1, [r6, #0x4]
	bl      Function_37fa2c0
	adds    r3, r5, r0
	adc     r2, r4, r1
	mov     r0, r6
	mov     r1, r3
	bl      Function_37fa454
	mov     r0, r7
	bl      Function_37fadb8
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37fa5f0

.arm
Function_37fa5f0: @ 37fa5f0 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r5, [sp, #0x18]
	movs    r4, r0
	mov     r8, r1
	mov     r7, r2
	mov     r6, r3
	beq     branch_37fa618
	ldr     r0, [r4]
	cmp     r0, #0x0
	beq     branch_37fa61c
.arm
branch_37fa618: @ 37fa618 :arm
	bl      Function_37faf14
.arm
branch_37fa61c: @ 37fa61c :arm
	bl      Function_37fada4
	str     r6, [r4, #0x1c]
	str     r5, [r4, #0x20]
	str     r8, [r4, #0x24]
	mov     r1, #0x0
	mov     r5, r0
	ldr     r0, [sp, #0x1c]
	str     r7, [r4, #0x28]
	ldr     r3, [sp, #0x20]
	str     r0, [r4]
	mov     r0, r4
	mov     r2, r1
	str     r3, [r4, #0x4]
	bl      Function_37fa454
	mov     r0, r5
	bl      Function_37fadb8
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37fa664

.arm
Function_37fa664: @ 37fa664 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	bl      Function_37fada4
	ldr     r1, [r5]
	mov     r4, r0
	cmp     r1, #0x0
	bne     branch_37fa688
	bl      Function_37fadb8
	b       branch_37fa6e0
@ 0x37fa688

.arm
branch_37fa688: @ 37fa688 :arm
	ldr     r0, [r5, #0x18]
	cmp     r0, #0x0
	ldreq   r2, [r5, #0x14]
	ldreq   r1, [pc, #0x4c] @ [0x37fa6e8] (=0x3806ec4)
	streq   r2, [r1, #0x8]
	ldrne   r1, [r5, #0x14]
	strne   r1, [r0, #0x14]
	ldr     r1, [r5, #0x14]
	cmp     r1, #0x0
	strne   r0, [r1, #0x18]
	bne     branch_37fa6c8
	ldr     r1, [pc, #0x2c] @ [0x37fa6e8] (=0x3806ec4)
	cmp     r0, #0x0
	str     r0, [r1, #0x4]
	beq     branch_37fa6c8
	bl      Function_37fa364
.arm
branch_37fa6c8: @ 37fa6c8 :arm
	mov     r1, #0x0
	str     r1, [r5]
	str     r1, [r5, #0x1c]
	mov     r0, r4
	str     r1, [r5, #0x20]
	bl      Function_37fadb8
.arm
branch_37fa6e0: @ 37fa6e0 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fa6e8

.word 0x3806ec4 @ 0x37fa6e8
.arm
Function_37fa6ec: @ 37fa6ec :arm
	stmfd   sp!, {r0,lr}
	bl      Function_37fa6fc
	ldmfd   sp!, {r0,lr}
	bx      lr
@ 0x37fa6fc

.arm
Function_37fa6fc: @ 37fa6fc :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0xdc] @ [0x37fa7e4] (=0x4000106)
	mov     r2, #0x0
	mov     r0, #0x10
	strh    r2, [r1]
	bl      Function_37f8984
	ldr     r1, [pc, #0xcc] @ [0x37fa7e8] (=0x380fff8)
	ldr     r0, [r1]
	orr     r0, r0, #0x10
	str     r0, [r1]
	bl      Function_37fa2c0
	ldr     r2, [pc, #0xbc] @ [0x37fa7ec] (=0x3806ec4)
	ldr     r4, [r2, #0x4]
	cmp     r4, #0x0
	beq     branch_37fa7dc
	ldr     r3, [r4, #0x10]
	ldr     r12, [r4, #0xc]
	cmp     r1, r3
	cmpeq   r0, r12
	bcs     branch_37fa758
	mov     r0, r4
	bl      Function_37fa364
	b       branch_37fa7dc
@ 0x37fa758

.arm
branch_37fa758: @ 37fa758 :arm
	ldr     r1, [r4, #0x18]
	mov     r0, #0x0
	str     r1, [r2, #0x4]
	cmp     r1, #0x0
	streq   r0, [r2, #0x8]
	strne   r0, [r1, #0x14]
	ldr     r0, [r4, #0x20]
	ldr     r1, [r4, #0x1c]
	cmp     r0, #0x0
	ldr     r5, [r4]
	mov     r0, #0x0
	cmpeq   r1, #0x0
	streq   r0, [r4]
	cmp     r5, #0x0
	beq     branch_37fa7a0
	ldr     r0, [r4, #0x4]
	mov     lr, pc
	bx      r5
@ 0x37fa7a0

.arm
branch_37fa7a0: @ 37fa7a0 :arm
	ldr     r0, [r4, #0x20]
	ldr     r1, [r4, #0x1c]
	cmp     r0, #0x0
	cmpeq   r1, #0x0
	mov     r1, #0x0
	beq     branch_37fa7c8
	mov     r0, r4
	mov     r2, r1
	str     r5, [r4]
	bl      Function_37fa454
.arm
branch_37fa7c8: @ 37fa7c8 :arm
	ldr     r0, [pc, #0x1c] @ [0x37fa7ec] (=0x3806ec4)
	ldr     r0, [r0, #0x4]
	cmp     r0, #0x0
	beq     branch_37fa7dc
	bl      Function_37fa364
.arm
branch_37fa7dc: @ 37fa7dc :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fa7e4

.word 0x4000106 @ 0x37fa7e4
.word 0x380fff8 @ 0x37fa7e8
.word 0x3806ec4 @ 0x37fa7ec
.arm
Function_37fa7f0: @ 37fa7f0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x3c] @ [0x37fa838] (=0x3806ed0)
	ldrh    r0, [r1]
	cmp     r0, #0x0
	bne     branch_37fa830
	mov     r0, #0x1
	strh    r0, [r1]
	mov     r2, #0x0
	str     r2, [r1, #0xc]
	mov     r0, #0x4
	str     r2, [r1, #0x10]
	bl      Function_37f8984
	ldr     r0, [pc, #0x10] @ [0x37fa838] (=0x3806ed0)
	mov     r1, #0x0
	str     r1, [r0, #0x8]
	str     r1, [r0, #0x4]
.arm
branch_37fa830: @ 37fa830 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fa838

.word 0x3806ed0 @ 0x37fa838
.arm
Function_37fa83c: @ 37fa83c :arm
	ldr     r0, [pc, #0x4] @ [0x37fa848] (=0x3806ed0)
	ldrh    r0, [r0]
	bx      lr
@ 0x37fa848

.word 0x3806ed0 @ 0x37fa848
.arm
Function_37fa84c: @ 37fa84c :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x94] @ [0x37fa8ec] (=0x3806ed0)
	ldr     r3, [r1, #0xc]
	b       branch_37fa8b0
@ 0x37fa85c

.arm
branch_37fa85c: @ 37fa85c :arm
	ldr     r2, [r0, #0xc]
	ldr     r1, [r3, #0xc]
	cmp     r1, r2
	bcc     branch_37fa8ac
	bne     branch_37fa880
	ldrsh   r2, [r3, #0x10]
	ldrsh   r1, [r0, #0x10]
	cmp     r2, r1
	ble     branch_37fa8ac
.arm
branch_37fa880: @ 37fa880 :arm
	ldr     r1, [r3, #0x14]
	str     r1, [r0, #0x14]
	str     r3, [r0, #0x18]
	str     r0, [r3, #0x14]
	cmp     r1, #0x0
	strne   r0, [r1, #0x18]
	bne     branch_37fa8e4
	ldr     r1, [pc, #0x48] @ [0x37fa8ec] (=0x3806ed0)
	str     r0, [r1, #0xc]
	bl      Function_37faa5c
	b       branch_37fa8e4
@ 0x37fa8ac

.arm
branch_37fa8ac: @ 37fa8ac :arm
	ldr     r3, [r3, #0x18]
.arm
branch_37fa8b0: @ 37fa8b0 :arm
	cmp     r3, #0x0
	bne     branch_37fa85c
	ldr     r1, [pc, #0x2c] @ [0x37fa8ec] (=0x3806ed0)
	mov     r2, #0x0
	ldr     r3, [r1, #0x10]
	str     r3, [r0, #0x14]
	str     r2, [r0, #0x18]
	str     r0, [r1, #0x10]
	cmp     r3, #0x0
	strne   r0, [r3, #0x18]
	bne     branch_37fa8e4
	str     r0, [r1, #0xc]
	bl      Function_37faa5c
.arm
branch_37fa8e4: @ 37fa8e4 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fa8ec

.word 0x3806ed0 @ 0x37fa8ec
.arm
Function_37fa8f0: @ 37fa8f0 :arm
	cmp     r0, #0x0
	bxeq    lr
	ldr     r2, [r0, #0x18]
	ldr     r1, [r0, #0x14]
	cmp     r2, #0x0
	ldreq   r0, [pc, #0x18] @ [0x37fa924] (=0x3806ed0)
	strne   r1, [r2, #0x14]
	streq   r1, [r0, #0x10]
	cmp     r1, #0x0
	ldreq   r0, [pc, #0x8] @ [0x37fa924] (=0x3806ed0)
	strne   r2, [r1, #0x18]
	streq   r2, [r0, #0xc]
	bx      lr
@ 0x37fa924

.word 0x3806ed0 @ 0x37fa924
.arm
Function_37fa928: @ 37fa928 :arm
	mov     r1, #0x0
	str     r1, [r0]
	str     r1, [r0, #0x8]
	str     r1, [r0, #0x20]
	bx      lr
@ 0x37fa93c

.arm
Function_37fa93c: @ 37fa93c :arm
	stmfd   sp!, {r3-r9,lr}
	mov     r8, r0
	mov     r7, r1
	mov     r6, r2
	mov     r5, r3
	bl      Function_37fada4
	mov     r4, r0
	cmp     r8, #0x0
	beq     branch_37fa96c
	ldr     r0, [r8]
	cmp     r0, #0x0
	beq     branch_37fa970
.arm
branch_37fa96c: @ 37fa96c :arm
	bl      Function_37faf14
.arm
branch_37fa970: @ 37fa970 :arm
	ldr     r0, [pc, #0x50] @ [0x37fa9c8] (=0x4000006)
	ldrh    r9, [r0]
	mov     r0, r9
	bl      Function_37fad4c
	mov     r1, #0x0
	str     r1, [r8, #0x1c]
	cmp     r7, r9
	strh    r7, [r8, #0x10]
	addle   r0, r0, #0x1
	str     r0, [r8, #0xc]
	strh    r6, [r8, #0x12]
	ldr     r0, [sp, #0x20]
	str     r5, [r8]
	str     r0, [r8, #0x4]
	mov     r1, #0x0
	mov     r0, r8
	str     r1, [r8, #0x24]
	bl      Function_37fa84c
	mov     r0, r4
	bl      Function_37fadb8
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x37fa9c8

.word 0x4000006 @ 0x37fa9c8
.arm
Function_37fa9cc: @ 37fa9cc :arm
	stmfd   sp!, {r3-r9,lr}
	mov     r8, r0
	mov     r7, r1
	mov     r6, r2
	mov     r5, r3
	bl      Function_37fada4
	mov     r4, r0
	cmp     r8, #0x0
	beq     branch_37fa9fc
	ldr     r0, [r8]
	cmp     r0, #0x0
	beq     branch_37faa00
.arm
branch_37fa9fc: @ 37fa9fc :arm
	bl      Function_37faf14
.arm
branch_37faa00: @ 37faa00 :arm
	ldr     r0, [pc, #0x50] @ [0x37faa58] (=0x4000006)
	ldrh    r9, [r0]
	mov     r0, r9
	bl      Function_37fad4c
	mov     r1, #0x1
	str     r1, [r8, #0x1c]
	cmp     r7, r9
	strh    r7, [r8, #0x10]
	addle   r0, r0, #0x1
	str     r0, [r8, #0xc]
	strh    r6, [r8, #0x12]
	ldr     r0, [sp, #0x20]
	str     r5, [r8]
	str     r0, [r8, #0x4]
	mov     r1, #0x0
	mov     r0, r8
	str     r1, [r8, #0x24]
	bl      Function_37fa84c
	mov     r0, r4
	bl      Function_37fadb8
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x37faa58

.word 0x4000006 @ 0x37faa58
.arm
Function_37faa5c: @ 37faa5c :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [pc, #0x48] @ [0x37faab0] (=0x37fab9c)
	mov     r4, r0
	mov     r0, #0x4
	bl      Function_37f8818
	ldrsh   r3, [r4, #0x10]
	ldr     r2, [pc, #0x38] @ [0x37faab4] (=0x4000004)
	mov     r0, r3, lsl #24
	ldrh    r1, [r2]
	and     r3, r3, #1, 24 @ #0x100
	and     r1, r1, #0x3f
	orr     r0, r1, r0, lsr #16
	orr     r0, r0, r3, asr #1
	strh    r0, [r2]
	ldrh    r1, [r2]
	mov     r0, #0x4
	orr     r1, r1, #0x20
	strh    r1, [r2]
	bl      Function_37f894c
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37faab0

.word 0x37fab9c @ 0x37faab0
.word 0x4000004 @ 0x37faab4
.arm
Function_37faab8: @ 37faab8 :arm
	stmfd   sp!, {r3-r5,lr}
	movs    r4, r1
	mov     r5, r0
	bne     branch_37faacc
	bl      Function_37faf14
.arm
branch_37faacc: @ 37faacc :arm
	cmp     r5, #0x0
	strne   r4, [r5, #0x8]
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37faadc

.arm
Function_37faadc: @ 37faadc :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	bl      Function_37fada4
	mov     r1, #0x1
	str     r1, [r5, #0x24]
	ldr     r1, [r5]
	mov     r4, r0
	cmp     r1, #0x0
	bne     branch_37fab08
	bl      Function_37fadb8
	b       branch_37fab20
@ 0x37fab08

.arm
branch_37fab08: @ 37fab08 :arm
	mov     r0, r5
	bl      Function_37fa8f0
	mov     r1, #0x0
	mov     r0, r4
	str     r1, [r5]
	bl      Function_37fadb8
.arm
branch_37fab20: @ 37fab20 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fab28

.arm
Function_37fab28: @ 37fab28 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	bl      Function_37fada4
	mov     r5, r0
	cmp     r7, #0x0
	bne     branch_37fab44
	bl      Function_37faf14
.arm
branch_37fab44: @ 37fab44 :arm
	ldr     r0, [pc, #0x4c] @ [0x37fab98] (=0x3806ed0)
	mov     r4, #0x0
	ldr     r0, [r0, #0xc]
	cmp     r0, #0x0
	ldrne   r6, [r0, #0x18]
	moveq   r6, #0x0
	b       branch_37fab80
@ 0x37fab60

.arm
branch_37fab60: @ 37fab60 :arm
	ldr     r1, [r0, #0x8]
	cmp     r1, r7
	bne     branch_37fab70
	bl      Function_37faadc
.arm
branch_37fab70: @ 37fab70 :arm
	mov     r0, r6
	cmp     r6, #0x0
	ldrne   r6, [r6, #0x18]
	moveq   r6, r4
.arm
branch_37fab80: @ 37fab80 :arm
	cmp     r0, #0x0
	bne     branch_37fab60
	mov     r0, r5
	bl      Function_37fadb8
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37fab98

.word 0x3806ed0 @ 0x37fab98
.arm
Function_37fab9c: @ 37fab9c :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r0, #0x4
	bl      Function_37f8984
	ldr     r2, [pc, #0x18c] @ [0x37fad3c] (=0x4000004)
	ldr     r1, [pc, #0x18c] @ [0x37fad40] (=0x380fff8)
	ldrh    r0, [r2]
	bic     r0, r0, #0x20
	strh    r0, [r2]
	ldr     r0, [r1]
	orr     r0, r0, #0x4
	str     r0, [r1]
	ldrh    r0, [r2]
	mov     r1, r0, asr #8
	mov     r0, r0, lsl #1
	and     r1, r1, #0xff
	and     r0, r0, #1, 24 @ #0x100
	orr     r0, r1, r0
	sub     r0, r0, #0x1
	bl      Function_37fad4c
	ldr     r10, [pc, #0x154] @ [0x37fad44] (=0x4000006)
	mov     r6, #0x0
	ldr     r5, [pc, #0x150] @ [0x37fad48] (=0x3806ed0)
	sub     r7, r10, #0x2
	mov     r11, #0x1
	mov     r8, r6
	b       branch_37fad28
@ 0x37fac04

.arm
branch_37fac04: @ 37fac04 :arm
	ldrh    r9, [r10]
	mov     r0, r9
	bl      Function_37fad4c
	ldrsh   r1, [r4, #0x10]
	ldr     r2, [r4, #0xc]
	sub     r1, r9, r1
	mov     r9, r0
	subs    r0, r9, r2
	bmi     branch_37fac38
	cmp     r0, #0x0
	bne     branch_37fac40
	cmp     r1, #0x0
	bge     branch_37fac40
.arm
branch_37fac38: @ 37fac38 :arm
	mov     r0, r8
	b       branch_37fac5c
@ 0x37fac40

.arm
branch_37fac40: @ 37fac40 :arm
	cmp     r1, #0x0
	addlt   r0, r1, #0x7
	addlt   r1, r0, #1, 24 @ #0x100
	ldrsh   r0, [r4, #0x12]
	cmp     r1, r0
	movle   r0, r11
	movgt   r0, #0x2
.arm
branch_37fac5c: @ 37fac5c :arm
	cmp     r0, #0x0
	beq     branch_37fac78
	cmp     r0, #0x1
	beq     branch_37facb4
	cmp     r0, #0x2
	beq     branch_37fad0c
	b       branch_37fad28
@ 0x37fac78

.arm
branch_37fac78: @ 37fac78 :arm
	mov     r0, r4
	bl      Function_37faa5c
	ldrh    r1, [r10]
	ldrsh   r0, [r4, #0x10]
	cmp     r0, r1
	ldreq   r0, [r4, #0xc]
	cmpeq   r0, r9
	bne     branch_37fad34
	mov     r0, #0x4
	bl      Function_37f8984
	ldrh    r1, [r7]
	mov     r0, #0x4
	bic     r1, r1, #0x20
	strh    r1, [r7]
	bl      Function_37f89c0
.arm
branch_37facb4: @ 37facb4 :arm
	ldr     r9, [r4]
	mov     r0, r4
	bl      Function_37fa8f0
	str     r6, [r4]
	cmp     r9, #0x0
	beq     branch_37facd8
	ldr     r0, [r4, #0x4]
	mov     lr, pc
	bx      r9
@ 0x37facd8

.arm
branch_37facd8: @ 37facd8 :arm
	ldr     r0, [r4, #0x1c]
	cmp     r0, #0x0
	beq     branch_37fad28
	ldr     r0, [r4, #0x24]
	cmp     r0, #0x0
	bne     branch_37fad28
	str     r9, [r4]
	ldr     r1, [r5, #0x8]
	mov     r0, r4
	add     r1, r1, #0x1
	str     r1, [r4, #0xc]
	bl      Function_37fa84c
	b       branch_37fad28
@ 0x37fad0c

.arm
branch_37fad0c: @ 37fad0c :arm
	mov     r0, r4
	bl      Function_37fa8f0
	ldr     r1, [r5, #0x8]
	mov     r0, r4
	add     r1, r1, #0x1
	str     r1, [r4, #0xc]
	bl      Function_37fa84c
.arm
branch_37fad28: @ 37fad28 :arm
	ldr     r4, [r5, #0xc]
	cmp     r4, #0x0
	bne     branch_37fac04
.arm
branch_37fad34: @ 37fad34 :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x37fad3c

.word 0x4000004 @ 0x37fad3c
.word 0x380fff8 @ 0x37fad40
.word 0x4000006 @ 0x37fad44
.word 0x3806ed0 @ 0x37fad48
.arm
Function_37fad4c: @ 37fad4c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_37fada4
	ldr     r1, [pc, #0x2c] @ [0x37fad8c] (=0x3806ed0)
	ldr     r2, [r1, #0x4]
	cmp     r4, r2
	ldrlt   r2, [r1, #0x8]
	addlt   r2, r2, #0x1
	strlt   r2, [r1, #0x8]
	ldr     r1, [pc, #0x14] @ [0x37fad8c] (=0x3806ed0)
	str     r4, [r1, #0x4]
	bl      Function_37fadb8
	ldr     r0, [pc, #0x8] @ [0x37fad8c] (=0x3806ed0)
	ldr     r0, [r0, #0x8]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fad8c

.word 0x3806ed0 @ 0x37fad8c
.arm
Function_37fad90: @ 37fad90 :arm
	mrs     r0, CPSR
	bic     r1, r0, #0x80
	msr     CPSR_c, r1
	and     r0, r0, #0x80
	bx      lr
@ 0x37fada4

.arm
Function_37fada4: @ 37fada4 :arm
	mrs     r0, CPSR
	orr     r1, r0, #0x80
	msr     CPSR_c, r1
	and     r0, r0, #0x80
	bx      lr
@ 0x37fadb8

.arm
Function_37fadb8: @ 37fadb8 :arm
	mrs     r1, CPSR
	bic     r2, r1, #0x80
	orr     r2, r2, r0
	msr     CPSR_c, r2
	and     r0, r1, #0x80
	bx      lr
@ 0x37fadd0

.arm
Function_37fadd0: @ 37fadd0 :arm
	mrs     r0, CPSR
	orr     r1, r0, #0xc0
	msr     CPSR_c, r1
	and     r0, r0, #0xc0
	bx      lr
@ 0x37fade4

.arm
Function_37fade4: @ 37fade4 :arm
	mrs     r1, CPSR
	bic     r2, r1, #0xc0
	orr     r2, r2, r0
	msr     CPSR_c, r2
	and     r0, r1, #0xc0
	bx      lr
@ 0x37fadfc

.arm
Function_37fadfc: @ 37fadfc :arm
	mrs     r0, CPSR
	and     r0, r0, #0x1f
	bx      lr
@ 0x37fae08

.arm
Function_37fae08: @ 37fae08 :arm
	ldr     r12, [pc, #0xc] @ [0x37fae1c] (=0x38008b5)
	mov     r1, r0, asr #1
	add     r0, r0, r1, lsr #30
	mov     r0, r0, asr #2
	bx      r12
@ 0x37fae1c

.word 0x38008b5 @ 0x37fae1c
.arm
Function_37fae20: @ 37fae20 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x24] @ [0x37fae50] (=0x3806ee4)
	ldrh    r0, [r2]
	cmp     r0, #0x0
	bne     branch_37fae48
	ldr     r1, [pc, #0x18] @ [0x37fae54] (=0x37fae68)
	mov     r3, #0x1
	mov     r0, #0xc
	strh    r3, [r2]
	bl      Function_37fb498
.arm
branch_37fae48: @ 37fae48 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fae50

.word 0x3806ee4 @ 0x37fae50
.word 0x37fae68 @ 0x37fae54
.arm
Function_37fae58: @ 37fae58 :arm
	ldr     r0, [pc, #0x4] @ [0x37fae64] (=0x3806ee4)
	ldrh    r0, [r0, #0x2]
	bx      lr
@ 0x37fae64

.word 0x3806ee4 @ 0x37fae64
.arm
Function_37fae68: @ 37fae68 :arm
	stmfd   sp!, {r3,lr}
	and     r0, r1, #127, 24 @ #0x7f00
	mov     r0, r0, lsl #8
	mov     r0, r0, lsr #16
	cmp     r0, #0x10
	ldreq   r0, [pc, #0x14] @ [0x37fae98] (=0x3806ee4)
	moveq   r1, #0x1
	streqh  r1, [r0, #0x2]
	beq     branch_37fae90
	bl      Function_37faf14
.arm
branch_37fae90: @ 37fae90 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fae98

.word 0x3806ee4 @ 0x37fae98
.arm
Function_37fae9c: @ 37fae9c :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r0, #0x0
	bl      Function_37faf98
	mov     r0, #0x1
	bl      Function_37faf98
	mov     r0, #0x2
	bl      Function_37faf98
	mov     r0, #0x3
	bl      Function_37faf98
	mov     r0, #1, 14 @ #0x40000
	bl      Function_37f8900
	mvn     r0, #0x0
	bl      Function_37f89c0
	bl      Function_37fb7b0
	mov     r6, #0xc
	mov     r5, #1, 20 @ #0x1000
	mov     r4, #0x0
.arm
branch_37faee0: @ 37faee0 :arm
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      Function_37fb50c
	cmp     r0, #0x0
	bne     branch_37faee0
	ldr     r0, [pc, #0x10] @ [0x37faf10] (=0x4000208)
	mov     r1, #0x0
	strh    r1, [r0]
	bl      Function_380694c
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x37faf10

.word 0x4000208 @ 0x37faf10
.arm
Function_37faf14: @ 37faf14 :arm
	stmfd   sp!, {r3,lr}
	mov     r0, #0x0
	bl      Function_3803458
.arm
branch_37faf20: @ 37faf20 :arm
	bl      Function_37fada4
	bl      Function_37f847c
	b       branch_37faf20
@ 0x37faf2c

.arm
Function_37faf2c: @ 37faf2c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_37fada4
	add     r1, r4, r4, lsl #1
	add     r1, r1, #0x2
	mov     r1, r1, lsl #2
	add     r1, r1, #0xb0
	add     r2, r1, #1, 6 @ #0x4000000
.arm
branch_37faf4c: @ 37faf4c :arm
	ldr     r1, [r2]
	tst     r1, #2, 2 @ #0x80000000
	bne     branch_37faf4c
	cmp     r4, #0x0
	bne     branch_37faf88
	mov     r1, #0xc
	mul     r1, r4, r1
	add     r2, r1, #1, 6 @ #0x4000000
	mov     r3, #0x0
	add     r1, r1, #0xb0
	str     r3, [r2, #0xb0]
	add     r2, r1, #1, 6 @ #0x4000000
	ldr     r1, [pc, #0x10] @ [0x37faf94] (=0x81400001)
	str     r3, [r2, #0x4]
	str     r1, [r2, #0x8]
.arm
branch_37faf88: @ 37faf88 :arm
	bl      Function_37fadb8
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37faf94

.word 0x81400001 @ 0x37faf94
.arm
Function_37faf98: @ 37faf98 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_37fada4
	mov     r1, #0x6
	mul     r1, r4, r1
	add     r1, r1, #0x5
	mov     r1, r1, lsl #1
	add     r1, r1, #1, 6 @ #0x4000000
	ldrh    r2, [r1, #0xb0]
	cmp     r4, #0x0
	bic     r2, r2, #50, 24 @ #0x3200
	strh    r2, [r1, #0xb0]
	ldrh    r2, [r1, #0xb0]
	bic     r2, r2, #2, 18 @ #0x8000
	strh    r2, [r1, #0xb0]
	ldrh    r2, [r1, #0xb0]
	ldrh    r1, [r1, #0xb0]
	bne     branch_37fb008
	mov     r1, #0xc
	mul     r1, r4, r1
	add     r2, r1, #1, 6 @ #0x4000000
	mov     r3, #0x0
	add     r1, r1, #0xb0
	str     r3, [r2, #0xb0]
	add     r2, r1, #1, 6 @ #0x4000000
	ldr     r1, [pc, #0x10] @ [0x37fb014] (=0x81400001)
	str     r3, [r2, #0x4]
	str     r1, [r2, #0x8]
.arm
branch_37fb008: @ 37fb008 :arm
	bl      Function_37fadb8
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fb014

.word 0x81400001 @ 0x37fb014
.arm
Function_37fb018: @ 37fb018 :arm
	mov     r3, #0x0
.arm
branch_37fb01c: @ 37fb01c :arm
	cmp     r3, r2
	blt     branch_37fb028
	b       branch_37fb02c
@ 0x37fb028

.arm
branch_37fb028: @ 37fb028 :arm
	strh    r0, [r1, r3]
.arm
branch_37fb02c: @ 37fb02c :arm
	blt     branch_37fb034
	b       branch_37fb038
@ 0x37fb034

.arm
branch_37fb034: @ 37fb034 :arm
	add     r3, r3, #0x2
.arm
branch_37fb038: @ 37fb038 :arm
	blt     branch_37fb01c
	bx      lr
@ 0x37fb040

.arm
Function_37fb040: @ 37fb040 :arm
	mov     r12, #0x0
.arm
branch_37fb044: @ 37fb044 :arm
	cmp     r12, r2
	blt     branch_37fb050
	b       branch_37fb054
@ 0x37fb050

.arm
branch_37fb050: @ 37fb050 :arm
	ldrh    r3, [r0, r12]
.arm
branch_37fb054: @ 37fb054 :arm
	blt     branch_37fb05c
	b       branch_37fb060
@ 0x37fb05c

.arm
branch_37fb05c: @ 37fb05c :arm
	strh    r3, [r1, r12]
.arm
branch_37fb060: @ 37fb060 :arm
	blt     branch_37fb068
	b       branch_37fb06c
@ 0x37fb068

.arm
branch_37fb068: @ 37fb068 :arm
	add     r12, r12, #0x2
.arm
branch_37fb06c: @ 37fb06c :arm
	blt     branch_37fb044
	bx      lr
@ 0x37fb074

.arm
Function_37fb074: @ 37fb074 :arm
	add     r12, r1, r2
.arm
branch_37fb078: @ 37fb078 :arm
	cmp     r1, r12
	blt     branch_37fb084
	b       branch_37fb088
@ 0x37fb084

.arm
branch_37fb084: @ 37fb084 :arm
	stmia   r1!, {r0}
.arm
branch_37fb088: @ 37fb088 :arm
	blt     branch_37fb078
	bx      lr
@ 0x37fb090

.arm
Function_37fb090: @ 37fb090 :arm
	add     r12, r1, r2
.arm
branch_37fb094: @ 37fb094 :arm
	cmp     r1, r12
	blt     branch_37fb0a0
	b       branch_37fb0a4
@ 0x37fb0a0

.arm
branch_37fb0a0: @ 37fb0a0 :arm
	ldmia   r0!, {r2}
.arm
branch_37fb0a4: @ 37fb0a4 :arm
	blt     branch_37fb0ac
	b       branch_37fb0b0
@ 0x37fb0ac

.arm
branch_37fb0ac: @ 37fb0ac :arm
	stmia   r1!, {r2}
.arm
branch_37fb0b0: @ 37fb0b0 :arm
	blt     branch_37fb094
	bx      lr
@ 0x37fb0b8

.arm
Function_37fb0b8: @ 37fb0b8 :arm
	stmfd   sp!, {r4-r9}
	add     r9, r1, r2
	mov     r12, r2, lsr #5
	add     r12, r1, r12, lsl #5
	mov     r2, r0
	mov     r3, r2
	mov     r4, r2
	mov     r5, r2
	mov     r6, r2
	mov     r7, r2
	mov     r8, r2
.arm
branch_37fb0e4: @ 37fb0e4 :arm
	cmp     r1, r12
	blt     branch_37fb0f0
	b       branch_37fb0f4
@ 0x37fb0f0

.arm
branch_37fb0f0: @ 37fb0f0 :arm
	stmia   r1!, {r0,r2-r8}
.arm
branch_37fb0f4: @ 37fb0f4 :arm
	blt     branch_37fb0e4
.arm
branch_37fb0f8: @ 37fb0f8 :arm
	cmp     r1, r9
	blt     branch_37fb104
	b       branch_37fb108
@ 0x37fb104

.arm
branch_37fb104: @ 37fb104 :arm
	stmia   r1!, {r0}
.arm
branch_37fb108: @ 37fb108 :arm
	blt     branch_37fb0f8
	ldmfd   sp!, {r4-r9}
	bx      lr
@ 0x37fb114

.arm
Function_37fb114: @ 37fb114 :arm
	stmfd   sp!, {r4-r10}
	add     r10, r1, r2
	mov     r12, r2, lsr #5
	add     r12, r1, r12, lsl #5
.arm
branch_37fb124: @ 37fb124 :arm
	cmp     r1, r12
	blt     branch_37fb130
	b       branch_37fb134
@ 0x37fb130

.arm
branch_37fb130: @ 37fb130 :arm
	ldmia   r0!, {r2-r9}
.arm
branch_37fb134: @ 37fb134 :arm
	blt     branch_37fb13c
	b       branch_37fb140
@ 0x37fb13c

.arm
branch_37fb13c: @ 37fb13c :arm
	stmia   r1!, {r2-r9}
.arm
branch_37fb140: @ 37fb140 :arm
	blt     branch_37fb124
.arm
branch_37fb144: @ 37fb144 :arm
	cmp     r1, r10
	blt     branch_37fb150
	b       branch_37fb154
@ 0x37fb150

.arm
branch_37fb150: @ 37fb150 :arm
	ldmia   r0!, {r2}
.arm
branch_37fb154: @ 37fb154 :arm
	blt     branch_37fb15c
	b       branch_37fb160
@ 0x37fb15c

.arm
branch_37fb15c: @ 37fb15c :arm
	stmia   r1!, {r2}
.arm
branch_37fb160: @ 37fb160 :arm
	blt     branch_37fb144
	ldmfd   sp!, {r4-r10}
	bx      lr
@ 0x37fb16c

.arm
Function_37fb16c: @ 37fb16c :arm
	cmp     r2, #0x0
	beq     branch_37fb178
	b       branch_37fb17c
@ 0x37fb178

.arm
branch_37fb178: @ 37fb178 :arm
	bx      lr
@ 0x37fb17c

.arm
branch_37fb17c: @ 37fb17c :arm
	tst     r0, #0x1
	beq     branch_37fb1a8
	ldrh    r12, [r0, #-0x1]
	and     r12, r12, #0xff
	orr     r3, r12, r1, lsl #8
	strh    r3, [r0, #-0x1]
	add     r0, r0, #0x1
	subs    r2, r2, #0x1
	beq     branch_37fb1a4
	b       branch_37fb1a8
@ 0x37fb1a4

.arm
branch_37fb1a4: @ 37fb1a4 :arm
	bx      lr
@ 0x37fb1a8

.arm
branch_37fb1a8: @ 37fb1a8 :arm
	cmp     r2, #0x2
	bcc     branch_37fb200
	orr     r1, r1, r1, lsl #8
	tst     r0, #0x2
	beq     branch_37fb1d0
	strh    r1, [r0], #0x2
	subs    r2, r2, #0x2
	beq     branch_37fb1cc
	b       branch_37fb1d0
@ 0x37fb1cc

.arm
branch_37fb1cc: @ 37fb1cc :arm
	bx      lr
@ 0x37fb1d0

.arm
branch_37fb1d0: @ 37fb1d0 :arm
	orr     r1, r1, r1, lsl #16
	bics    r3, r2, #0x3
	beq     branch_37fb1f0
	sub     r2, r2, r3
	add     r12, r3, r0
.arm
branch_37fb1e4: @ 37fb1e4 :arm
	str     r1, [r0], #0x4
	cmp     r0, r12
	bcc     branch_37fb1e4
.arm
branch_37fb1f0: @ 37fb1f0 :arm
	tst     r2, #0x2
	bne     branch_37fb1fc
	b       branch_37fb200
@ 0x37fb1fc

.arm
branch_37fb1fc: @ 37fb1fc :arm
	strh    r1, [r0], #0x2
.arm
branch_37fb200: @ 37fb200 :arm
	tst     r2, #0x1
	beq     branch_37fb20c
	b       branch_37fb210
@ 0x37fb20c

.arm
branch_37fb20c: @ 37fb20c :arm
	bx      lr
@ 0x37fb210

.arm
branch_37fb210: @ 37fb210 :arm
	ldrh    r3, [r0]
	and     r3, r3, #255, 24 @ #0xff00
	and     r1, r1, #0xff
	orr     r1, r1, r3
	strh    r1, [r0]
	bx      lr
@ 0x37fb228

.arm
Function_37fb228: @ 37fb228 :arm
	cmp     r2, #0x0
	beq     branch_37fb234
	b       branch_37fb238
@ 0x37fb234

.arm
branch_37fb234: @ 37fb234 :arm
	bx      lr
@ 0x37fb238

.arm
branch_37fb238: @ 37fb238 :arm
	tst     r1, #0x1
	beq     branch_37fb290
	ldrh    r12, [r1, #-0x1]
	and     r12, r12, #0xff
	tst     r0, #0x1
	bne     branch_37fb254
	b       branch_37fb258
@ 0x37fb254

.arm
branch_37fb254: @ 37fb254 :arm
	ldrh    r3, [r0, #-0x1]
.arm
branch_37fb258: @ 37fb258 :arm
	bne     branch_37fb260
	b       branch_37fb264
@ 0x37fb260

.arm
branch_37fb260: @ 37fb260 :arm
	mov     r3, r3, lsr #8
.arm
branch_37fb264: @ 37fb264 :arm
	beq     branch_37fb26c
	b       branch_37fb270
@ 0x37fb26c

.arm
branch_37fb26c: @ 37fb26c :arm
	ldrh    r3, [r0]
.arm
branch_37fb270: @ 37fb270 :arm
	orr     r3, r12, r3, lsl #8
	strh    r3, [r1, #-0x1]
	add     r0, r0, #0x1
	add     r1, r1, #0x1
	subs    r2, r2, #0x1
	beq     branch_37fb28c
	b       branch_37fb290
@ 0x37fb28c

.arm
branch_37fb28c: @ 37fb28c :arm
	bx      lr
@ 0x37fb290

.arm
branch_37fb290: @ 37fb290 :arm
	eor     r12, r1, r0
	tst     r12, #0x1
	beq     branch_37fb2ec
	bic     r0, r0, #0x1
	ldrh    r12, [r0], #0x2
	mov     r3, r12, lsr #8
	subs    r2, r2, #0x2
	bcc     branch_37fb2c8
.arm
branch_37fb2b0: @ 37fb2b0 :arm
	ldrh    r12, [r0], #0x2
	orr     r12, r3, r12, lsl #8
	strh    r12, [r1], #0x2
	mov     r3, r12, lsr #16
	subs    r2, r2, #0x2
	bcs     branch_37fb2b0
.arm
branch_37fb2c8: @ 37fb2c8 :arm
	tst     r2, #0x1
	beq     branch_37fb2d4
	b       branch_37fb2d8
@ 0x37fb2d4

.arm
branch_37fb2d4: @ 37fb2d4 :arm
	bx      lr
@ 0x37fb2d8

.arm
branch_37fb2d8: @ 37fb2d8 :arm
	ldrh    r12, [r1]
	and     r12, r12, #255, 24 @ #0xff00
	orr     r12, r12, r3
	strh    r12, [r1]
	bx      lr
@ 0x37fb2ec

.arm
branch_37fb2ec: @ 37fb2ec :arm
	tst     r12, #0x2
	beq     branch_37fb318
	bics    r3, r2, #0x1
	beq     branch_37fb37c
	sub     r2, r2, r3
	add     r12, r3, r1
.arm
branch_37fb304: @ 37fb304 :arm
	ldrh    r3, [r0], #0x2
	strh    r3, [r1], #0x2
	cmp     r1, r12
	bcc     branch_37fb304
	b       branch_37fb37c
@ 0x37fb318

.arm
branch_37fb318: @ 37fb318 :arm
	cmp     r2, #0x2
	bcc     branch_37fb37c
	tst     r1, #0x2
	beq     branch_37fb340
	ldrh    r3, [r0], #0x2
	strh    r3, [r1], #0x2
	subs    r2, r2, #0x2
	beq     branch_37fb33c
	b       branch_37fb340
@ 0x37fb33c

.arm
branch_37fb33c: @ 37fb33c :arm
	bx      lr
@ 0x37fb340

.arm
branch_37fb340: @ 37fb340 :arm
	bics    r3, r2, #0x3
	beq     branch_37fb360
	sub     r2, r2, r3
	add     r12, r3, r1
.arm
branch_37fb350: @ 37fb350 :arm
	ldr     r3, [r0], #0x4
	str     r3, [r1], #0x4
	cmp     r1, r12
	bcc     branch_37fb350
.arm
branch_37fb360: @ 37fb360 :arm
	tst     r2, #0x2
	bne     branch_37fb36c
	b       branch_37fb370
@ 0x37fb36c

.arm
branch_37fb36c: @ 37fb36c :arm
	ldrh    r3, [r0], #0x2
.arm
branch_37fb370: @ 37fb370 :arm
	bne     branch_37fb378
	b       branch_37fb37c
@ 0x37fb378

.arm
branch_37fb378: @ 37fb378 :arm
	strh    r3, [r1], #0x2
.arm
branch_37fb37c: @ 37fb37c :arm
	tst     r2, #0x1
	beq     branch_37fb388
	b       branch_37fb38c
@ 0x37fb388

.arm
branch_37fb388: @ 37fb388 :arm
	bx      lr
@ 0x37fb38c

.arm
branch_37fb38c: @ 37fb38c :arm
	ldrh    r2, [r1]
	ldrh    r0, [r0]
	and     r2, r2, #255, 24 @ #0xff00
	and     r0, r0, #0xff
	orr     r0, r2, r0
	strh    r0, [r1]
	bx      lr
@ 0x37fb3a8

.arm
Function_37fb3a8: @ 37fb3a8 :arm
	swp     r0, r0, [r1]
	bx      lr
@ 0x37fb3b0

.arm
Function_37fb3b0: @ 37fb3b0 :arm
	ldr     r12, [pc, #0x0] @ [0x37fb3b8] (=0x37fb3bc)
	bx      r12
@ 0x37fb3b8

.word 0x37fb3bc @ 0x37fb3b8
.arm
Function_37fb3bc: @ 37fb3bc :arm
	stmfd   sp!, {r4-r8,lr}
	bl      Function_37fada4
	ldr     r1, [pc, #0xb0] @ [0x37fb47c] (=0x3806ee8)
	mov     r4, r0
	ldrh    r0, [r1]
	cmp     r0, #0x0
	bne     branch_37fb46c
	ldr     r0, [pc, #0xa0] @ [0x37fb480] (=0x27ffc00)
	mov     r2, #0x1
	strh    r2, [r1]
	mov     r2, #0x0
	str     r2, [r0, #0x38c]
	ldr     r0, [pc, #0x90] @ [0x37fb484] (=0x3806eec)
	mov     r1, r2
.arm
branch_37fb3f4: @ 37fb3f4 :arm
	str     r1, [r0, r2, lsl #0x2]
	add     r2, r2, #0x1
	cmp     r2, #0x20
	blt     branch_37fb3f4
	ldr     r2, [pc, #0x7c] @ [0x37fb488] (=0xc408)
	ldr     r1, [pc, #0x7c] @ [0x37fb48c] (=0x4000184)
	mov     r0, #1, 14 @ #0x40000
	strh    r2, [r1]
	bl      Function_37f89c0
	ldr     r1, [pc, #0x70] @ [0x37fb490] (=0x37fb5a4)
	mov     r0, #1, 14 @ #0x40000
	bl      Function_37f8818
	mov     r0, #1, 14 @ #0x40000
	bl      Function_37f894c
	mov     r5, #0x8
	ldr     r8, [pc, #0x5c] @ [0x37fb494] (=0x4000180)
	mov     r6, r5
	mov     r7, #250, 30 @ #0x3e8
	b       branch_37fb464
@ 0x37fb440

.arm
branch_37fb440: @ 37fb440 :arm
	mov     r0, r5, lsl #8
	strh    r0, [r8]
	mov     r0, r7
	bl      Function_37fae08
	ldrh    r0, [r8]
	and     r0, r0, #0xf
	cmp     r0, r5
	movne   r5, r6
	sub     r5, r5, #0x1
.arm
branch_37fb464: @ 37fb464 :arm
	cmp     r5, #0x0
	bge     branch_37fb440
.arm
branch_37fb46c: @ 37fb46c :arm
	mov     r0, r4
	bl      Function_37fadb8
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37fb47c

.word 0x3806ee8 @ 0x37fb47c
.word 0x27ffc00 @ 0x37fb480
.word 0x3806eec @ 0x37fb484
.word 0xc408 @ 0x37fb488
.word 0x4000184 @ 0x37fb48c
.word 0x37fb5a4 @ 0x37fb490
.word 0x4000180 @ 0x37fb494
.arm
Function_37fb498: @ 37fb498 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	mov     r5, r1
	bl      Function_37fada4
	ldr     r1, [pc, #0x30] @ [0x37fb4e0] (=0x3806eec)
	ldr     r3, [pc, #0x30] @ [0x37fb4e4] (=0x27ffc00)
	str     r5, [r1, r4, lsl #0x2]
	cmp     r5, #0x0
	ldrne   r2, [r3, #0x38c]
	mov     r1, #0x1
	orrne   r1, r2, r1, lsl r4
	ldreq   r2, [r3, #0x38c]
	mvneq   r1, r1, lsl r4
	andeq   r1, r2, r1
	str     r1, [r3, #0x38c]
	bl      Function_37fadb8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fb4e0

.word 0x3806eec @ 0x37fb4e0
.word 0x27ffc00 @ 0x37fb4e4
.arm
Function_37fb4e8: @ 37fb4e8 :arm
	ldr     r2, [pc, #0x18] @ [0x37fb508] (=0x27ffc00)
	mov     r3, #0x1
	add     r1, r2, r1, lsl #2
	ldr     r1, [r1, #0x388]
	tst     r1, r3, lsl r0
	moveq   r3, #0x0
	mov     r0, r3
	bx      lr
@ 0x37fb508

.word 0x27ffc00 @ 0x37fb508
.arm
Function_37fb50c: @ 37fb50c :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [sp]
	and     r0, r0, #0x1f
	bic     r3, r3, #0x1f
	orr     r0, r3, r0
	bic     r3, r0, #0x20
	mov     r0, r2, lsl #31
	orr     r0, r3, r0, lsr #26
	and     r0, r0, #0x3f
	orr     r0, r0, r1, lsl #6
	str     r0, [sp]
	bl      Function_37fb544
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fb544

.arm
Function_37fb544: @ 37fb544 :arm
	stmfd   sp!, {r4,lr}
	ldr     r2, [pc, #0x50] @ [0x37fb5a0] (=0x4000184)
	mov     r4, r0
	ldrh    r0, [r2]
	tst     r0, #1, 18 @ #0x4000
	ldrneh  r1, [r2]
	mvnne   r0, #0x0
	orrne   r1, r1, #3, 18 @ #0xc000
	strneh  r1, [r2]
	bne     branch_37fb598
	bl      Function_37fada4
	ldr     r2, [pc, #0x28] @ [0x37fb5a0] (=0x4000184)
	ldrh    r1, [r2]
	tst     r1, #0x2
	beq     branch_37fb58c
	bl      Function_37fadb8
	mvn     r0, #0x1
	b       branch_37fb598
@ 0x37fb58c

.arm
branch_37fb58c: @ 37fb58c :arm
	str     r4, [r2, #0x4]
	bl      Function_37fadb8
	mov     r0, #0x0
.arm
branch_37fb598: @ 37fb598 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fb5a0

.word 0x4000184 @ 0x37fb5a0
.arm
Function_37fb5a4: @ 37fb5a4 :arm
	stmfd   sp!, {r3-r10,lr}
	sub     sp, sp, #0x4
	ldr     r6, [sp]
	mvn     r8, #0x3
	ldr     r4, [pc, #0xc0] @ [0x37fb67c] (=0x3806eec)
	ldr     r9, [pc, #0xc0] @ [0x37fb680] (=0x4000184)
	add     r10, r8, #0x1
	mov     r7, #65, 12 @ #0x4100000
	mov     r5, #0x0
.arm
branch_37fb5c8: @ 37fb5c8 :arm
	ldrh    r0, [r9]
	tst     r0, #1, 18 @ #0x4000
	ldrneh  r0, [r9]
	addne   r1, r8, #0x1
	orrne   r0, r0, #3, 18 @ #0xc000
	strneh  r0, [r9]
	bne     branch_37fb610
	bl      Function_37fada4
	ldrh    r1, [r9]
	tst     r1, #1, 24 @ #0x100
	beq     branch_37fb600
	bl      Function_37fadb8
	mov     r1, r8
	b       branch_37fb610
@ 0x37fb600

.arm
branch_37fb600: @ 37fb600 :arm
	ldr     r6, [r7]
	str     r6, [sp]
	bl      Function_37fadb8
	mov     r1, r5
.arm
branch_37fb610: @ 37fb610 :arm
	cmp     r1, r8
	beq     branch_37fb670
	cmp     r1, r10
	beq     branch_37fb5c8
	mov     r0, r6, lsl #27
	movs    r0, r0, lsr #27
	beq     branch_37fb5c8
	ldr     r3, [r4, r0, lsl #0x2]
	cmp     r3, #0x0
	beq     branch_37fb650
	mov     r2, r6, lsl #26
	mov     r1, r6, lsr #6
	mov     r2, r2, lsr #31
	mov     lr, pc
	bx      r3
@ 0x37fb64c

.arm
Function_37fb64c: @ 37fb64c :arm
	b       branch_37fb5c8
@ 0x37fb650

.arm
branch_37fb650: @ 37fb650 :arm
	mov     r0, r6, lsl #26
	movs    r0, r0, lsr #31
	bne     branch_37fb5c8
	orr     r6, r6, #0x20
	mov     r0, r6
	str     r6, [sp]
	bl      Function_37fb544
	b       branch_37fb5c8
@ 0x37fb670

.arm
branch_37fb670: @ 37fb670 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3-r10,lr}
	bx      lr
@ 0x37fb67c

.word 0x3806eec @ 0x37fb67c
.word 0x4000184 @ 0x37fb680
.arm
Function_37fb684: @ 37fb684 :arm
	ldr     r2, [pc, #0x14] @ [0x37fb6a0] (=0x4000134)
	mvn     r3, r0
	ldrh    r0, [r2]
	and     r0, r3, r0
	orr     r0, r1, r0
	strh    r0, [r2]
	bx      lr
@ 0x37fb6a0

.word 0x4000134 @ 0x37fb6a0
.arm
Function_37fb6a4: @ 37fb6a4 :arm
	ldr     r12, [pc, #0xc] @ [0x37fb6b8] (=0x37fb684)
	mov     r0, r0, lsl #16
	mov     r1, r0, lsr #16
	mov     r0, #3, 18 @ #0xc000
	bx      r12
@ 0x37fb6b8

.word Function_37fb684 @ =0x37fb684, 0x37fb6b8
.arm
Function_37fb6bc: @ 37fb6bc :arm
	stmfd   sp!, {lr}
	sub     sp, sp, #0xc
	bl      Function_37fa248
	cmp     r0, #0x0
	beq     branch_37fb6dc
	bl      Function_37fa434
	cmp     r0, #0x0
	bne     branch_37fb6e4
.arm
branch_37fb6dc: @ 37fb6dc :arm
	mov     r0, #0x0
	b       branch_37fb73c
@ 0x37fb6e4

.arm
branch_37fb6e4: @ 37fb6e4 :arm
	ldr     r0, [pc, #0x5c] @ [0x37fb748] (=0x3806f6c)
	ldr     r0, [r0]
	cmp     r0, #0x0
	movne   r0, #0x0
	bne     branch_37fb73c
	ldr     r0, [pc, #0x4c] @ [0x37fb74c] (=0x3806f70)
	bl      Function_37fa444
	bl      Function_37fa2c0
	ldr     r2, [pc, #0x44] @ [0x37fb750] (=0x37fb758)
	ldr     r3, [pc, #0x44] @ [0x37fb754] (=0x82e)
	str     r2, [sp, #0x4]
	adds    r12, r0, r3
	mov     lr, #0x0
	str     lr, [sp, #0x8]
	adc     r2, r1, #0x0
	ldr     r0, [pc, #0x24] @ [0x37fb74c] (=0x3806f70)
	mov     r1, r12
	str     lr, [sp]
	bl      Function_37fa5f0
	ldr     r1, [pc, #0x10] @ [0x37fb748] (=0x3806f6c)
	mov     r0, #0x1
	str     r0, [r1]
.arm
branch_37fb73c: @ 37fb73c :arm
	add     sp, sp, #0xc
	ldmfd   sp!, {lr}
	bx      lr
@ 0x37fb748

.word 0x3806f6c @ 0x37fb748
.word 0x3806f70 @ 0x37fb74c
.word 0x37fb758 @ 0x37fb750
.word 0x82e @ 0x37fb754
.arm
Function_37fb758: @ 37fb758 :arm
	stmfd   sp!, {r4,lr}
	mov     r0, #2, 18 @ #0x8000
	mov     r4, #0x0
	bl      Function_37fb6a4
	ldr     r0, [pc, #0x20] @ [0x37fb790] (=0x4000136)
	ldrh    r1, [r0]
	ldr     r0, [pc, #0x1c] @ [0x37fb794] (=0x27fffa8)
	tst     r1, #0x80
	movne   r4, #2, 18 @ #0x8000
	and     r1, r1, #0xb
	orr     r1, r4, r1, lsl #10
	strh    r1, [r0]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fb790

.word 0x4000136 @ 0x37fb790
.word 0x27fffa8 @ 0x37fb794
.arm
Function_37fb798: @ 37fb798 :arm
	ldr     r1, [pc, #0xc] @ [0x37fb7ac] (=0x4000501)
	ldrb    r0, [r1]
	orr     r0, r0, #0x80
	strb    r0, [r1]
	bx      lr
@ 0x37fb7ac

.word 0x4000501 @ 0x37fb7ac
.arm
Function_37fb7b0: @ 37fb7b0 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0x40] @ [0x37fb7fc] (=0x4000501)
	mov     r5, #0x0
	ldrb    r0, [r1]
	bic     r0, r0, #0x80
	strb    r0, [r1]
	mov     r4, #0x1
.arm
branch_37fb7cc: @ 37fb7cc :arm
	mov     r0, r5
	mov     r1, r4
	bl      Function_37fbb1c
	add     r5, r5, #0x1
	cmp     r5, #0x10
	blt     branch_37fb7cc
	ldr     r0, [pc, #0x14] @ [0x37fb800] (=0x4000508)
	mov     r1, #0x0
	strb    r1, [r0]
	strb    r1, [r0, #0x1]
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fb7fc

.word 0x4000501 @ 0x37fb7fc
.word 0x4000508 @ 0x37fb800
.arm
Function_37fb804: @ 37fb804 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x38] @ [0x37fb848] (=0x4000501)
	mov     r0, #0x80
	ldrb    r1, [r2]
	bic     r1, r1, #0x80
	strb    r1, [r2]
	bl      Function_37fb850
	mov     r0, #1, 14 @ #0x40000
	bl      Function_37fae08
	mov     r0, #0x1
	bl      Function_3801e1c
	ldr     r1, [pc, #0x14] @ [0x37fb84c] (=0x4000304)
	ldrh    r0, [r1]
	bic     r0, r0, #0x1
	strh    r0, [r1]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fb848

.word 0x4000501 @ 0x37fb848
.word 0x4000304 @ 0x37fb84c
.arm
Function_37fb850: @ 37fb850 :arm
	ldr     r12, [pc, #0x0] @ [0x37fb858] (=0x38008e3)
	bx      r12
@ 0x37fb858

.word Function_38008e2+1 @ =0x38008e3, 0x37fb858
.arm
Function_37fb85c: @ 37fb85c :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x38] @ [0x37fb8a0] (=0x4000304)
	mov     r0, #0x1
	ldrh    r1, [r2]
	orr     r1, r1, #0x1
	strh    r1, [r2]
	bl      Function_3801df8
	mov     r0, #1, 24 @ #0x100
	bl      Function_37fb8ac
	ldr     r0, [pc, #0x1c] @ [0x37fb8a4] (=0x7ab80)
	bl      Function_37fae08
	ldr     r1, [pc, #0x18] @ [0x37fb8a8] (=0x4000501)
	ldrb    r0, [r1]
	orr     r0, r0, #0x80
	strb    r0, [r1]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fb8a0

.word 0x4000304 @ 0x37fb8a0
.word 0x7ab80 @ 0x37fb8a4
.word 0x4000501 @ 0x37fb8a8
.arm
Function_37fb8ac: @ 37fb8ac :arm
	ldr     r12, [pc, #0x0] @ [0x37fb8b4] (=0x38008db)
	bx      r12
@ 0x37fb8b4

.word Function_38008da+1 @ =0x38008db, 0x37fb8b4
.arm
Function_37fb8b8: @ 37fb8b8 :arm
	ldr     r1, [pc, #0x4] @ [0x37fb8c4] (=0x4000500)
	strb    r0, [r1]
	bx      lr
@ 0x37fb8c4

.word 0x4000500 @ 0x37fb8c4
.arm
Function_37fb8c8: @ 37fb8c8 :arm
	ldr     r12, [pc, #0x2c] @ [0x37fb8fc] (=0x4000501)
	mov     r3, r3, lsl #5
	ldrb    r12, [r12]
	tst     r12, #0x80
	movne   r12, #0x1
	moveq   r12, #0x0
	orr     r3, r3, r12, lsl #7
	orr     r2, r3, r2, lsl #4
	orr     r2, r2, r1, lsl #2
	ldr     r1, [pc, #0x8] @ [0x37fb8fc] (=0x4000501)
	orr     r0, r0, r2
	strb    r0, [r1]
	bx      lr
@ 0x37fb8fc

.word 0x4000501 @ 0x37fb8fc



.arm
Function_37fb900: @ 37fb900 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r4, [pc, #0xac] @ [0x37fb9b8] (=Unknown_3806be4)
	mov     r8, r1
	ldr     lr, [r4]
	ldr     r1, [pc, #0xa4] @ [0x37fb9bc] (=0x3806f9c)
	mov     r7, r2
	ldr     r5, [sp, #0x2c]
	ldr     r4, [pc, #0x9c] @ [0x37fb9c0] (=0x3806fa0)
	ldr     r12, [sp, #0x20]
	ldr     r2, [pc, #0x98] @ [0x37fb9c4] (=0x3806fb0)
	strb    r5, [r4, r0]
	cmp     lr, #0x0
	ldr     r1, [r1]
	movge   r5, lr
	mov     r6, r3
	mov     r4, r0, lsl #4
	strb    r12, [r2, r0]
	cmp     r1, #0x0
	ble     branch_37fb96c
	ldr     r1, [pc, #0x74] @ [0x37fb9c8] (=0xfff5)
	mov     r2, #0x1
	tst     r1, r2, lsl r0
	beq     branch_37fb96c
	mov     r0, r12
	mov     r1, r5
	bl      Function_37fbd3c
	mov     r12, r0
.arm
branch_37fb96c: @ 37fb96c :arm
	ldr     r2, [sp, #0x24]
	mov     r0, r6, lsl #27
	orr     r0, r0, r7, lsl #29
	orr     r1, r0, r5, lsl #16
	ldr     r0, [sp, #0x28]
	orr     r2, r1, r2, lsl #8
	add     r1, r4, #1, 6 @ #0x4000000
	orr     r2, r12, r2
	str     r2, [r1, #0x400]
	ldr     r3, [sp, #0x18]
	rsb     r2, r0, #1, 16 @ #0x10000
	add     r0, r1, #1, 22 @ #0x400
	strh    r2, [r0, #0x8]
	ldr     r2, [sp, #0x1c]
	strh    r3, [r0, #0xa]
	str     r2, [r1, #0x40c]
	str     r8, [r1, #0x404]
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37fb9b8

.word Unknown_3806be4 @ 0x37fb9b8
.word 0x3806f9c @ 0x37fb9bc
.word 0x3806fa0 @ 0x37fb9c0
.word 0x3806fb0 @ 0x37fb9c4
.word 0xfff5 @ 0x37fb9c8



.arm
Function_37fb9cc: @ 37fb9cc :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r4, [pc, #0x8c] @ [0x37fba64] (=Unknown_3806be4)
	mov     r7, r1
	ldr     r12, [r4]
	ldr     r1, [pc, #0x84] @ [0x37fba68] (=0x3806f9c)
	mov     r6, r3
	ldr     r3, [pc, #0x80] @ [0x37fba6c] (=0x3806fb0)
	ldr     r5, [sp, #0x1c]
	ldr     r4, [pc, #0x7c] @ [0x37fba70] (=0x3806fa0)
	ldr     r1, [r1]
	strb    r5, [r4, r0]
	cmp     r12, #0x0
	movge   r5, r12
	mov     r4, r0, lsl #4
	strb    r2, [r3, r0]
	cmp     r1, #0x0
	ble     branch_37fba30
	ldr     r1, [pc, #0x5c] @ [0x37fba74] (=0xfff5)
	mov     r3, #0x1
	tst     r1, r3, lsl r0
	beq     branch_37fba30
	mov     r0, r2
	mov     r1, r5
	bl      Function_37fbd3c
	mov     r2, r0
.arm
branch_37fba30: @ 37fba30 :arm
	mov     r0, r7, lsl #24
	orr     r0, r0, #6, 4 @ #0x60000000
	orr     r0, r0, r5, lsl #16
	ldr     r1, [sp, #0x18]
	orr     r3, r0, r6, lsl #8
	add     r0, r4, #1, 6 @ #0x4000000
	orr     r2, r2, r3
	str     r2, [r0, #0x400]
	rsb     r1, r1, #1, 16 @ #0x10000
	add     r0, r0, #1, 22 @ #0x400
	strh    r1, [r0, #0x8]
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37fba64

.word Unknown_3806be4 @ 0x37fba64
.word 0x3806f9c @ 0x37fba68
.word 0x3806fb0 @ 0x37fba6c
.word 0x3806fa0 @ 0x37fba70
.word 0xfff5 @ 0x37fba74



.arm
Function_37fba78: @ 37fba78 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r4, [pc, #0x84] @ [0x37fbb08] (=Unknown_3806be4)
	mov     r7, r2
	ldr     r12, [r4]
	ldr     r2, [pc, #0x7c] @ [0x37fbb0c] (=0x3806f9c)
	mov     r6, r3
	ldr     r3, [pc, #0x78] @ [0x37fbb10] (=0x3806fb0)
	ldr     r5, [sp, #0x18]
	ldr     r4, [pc, #0x74] @ [0x37fbb14] (=0x3806fa0)
	ldr     r2, [r2]
	strb    r5, [r4, r0]
	cmp     r12, #0x0
	movge   r5, r12
	mov     r4, r0, lsl #4
	strb    r1, [r3, r0]
	cmp     r2, #0x0
	ble     branch_37fbadc
	ldr     r2, [pc, #0x54] @ [0x37fbb18] (=0xfff5)
	mov     r3, #0x1
	tst     r2, r3, lsl r0
	beq     branch_37fbadc
	mov     r0, r1
	mov     r1, r5
	bl      Function_37fbd3c
	mov     r1, r0
.arm
branch_37fbadc: @ 37fbadc :arm
	mov     r0, r5, lsl #16
	orr     r0, r0, #6, 4 @ #0x60000000
	orr     r2, r0, r7, lsl #8
	add     r0, r4, #1, 6 @ #0x4000000
	orr     r1, r1, r2
	str     r1, [r0, #0x400]
	rsb     r1, r6, #1, 16 @ #0x10000
	add     r0, r0, #1, 22 @ #0x400
	strh    r1, [r0, #0x8]
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37fbb08

.word Unknown_3806be4 @ 0x37fbb08
.word 0x3806f9c @ 0x37fbb0c
.word 0x3806fb0 @ 0x37fbb10
.word 0x3806fa0 @ 0x37fbb14
.word 0xfff5 @ 0x37fbb18



.arm
Function_37fbb1c: @ 37fbb1c :arm
	mov     r3, r0, lsl #4
	add     r0, r3, #1, 6 @ #0x4000000
	ldr     r2, [r0, #0x400]
	add     r0, r3, #1, 22 @ #0x400
	tst     r1, #0x1
	bic     r1, r2, #2, 2 @ #0x80000000
	add     r0, r0, #1, 6 @ #0x4000000
	orrne   r1, r1, #2, 18 @ #0x8000
	str     r1, [r0]
	bx      lr
@ 0x37fbb44

.arm
Function_37fbb44: @ 37fbb44 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r3, [pc, #0x60] @ [0x37fbbb0] (=0x3806f9c)
	ldr     r12, [pc, #0x60] @ [0x37fbbb4] (=0x3806fb0)
	ldr     r3, [r3]
	mov     r5, r0
	mov     r4, r2
	strb    r1, [r12, r5]
	cmp     r3, #0x0
	ble     branch_37fbb94
	ldr     r0, [pc, #0x48] @ [0x37fbbb8] (=0xfff5)
	mov     r2, #0x1
	tst     r0, r2, lsl r5
	beq     branch_37fbb94
	mov     r0, r5, lsl #4
	add     r0, r0, #1, 6 @ #0x4000000
	ldrb    r2, [r0, #0x402]
	mov     r0, r1
	mov     r1, r2
	bl      Function_37fbd3c
	mov     r1, r0
.arm
branch_37fbb94: @ 37fbb94 :arm
	mov     r0, r5, lsl #4
	add     r0, r0, #1, 6 @ #0x4000000
	orr     r1, r1, r4, lsl #8
	add     r0, r0, #1, 22 @ #0x400
	strh    r1, [r0]
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fbbb0

.word 0x3806f9c @ 0x37fbbb0
.word 0x3806fb0 @ 0x37fbbb4
.word 0xfff5 @ 0x37fbbb8
.arm
Function_37fbbbc: @ 37fbbbc :arm
	mov     r0, r0, lsl #4
	add     r0, r0, #1, 6 @ #0x4000000
	rsb     r1, r1, #1, 16 @ #0x10000
	add     r0, r0, #1, 22 @ #0x400
	strh    r1, [r0, #0x8]
	bx      lr
@ 0x37fbbd4


.arm
Function_37fbbd4: @ 37fbbd4 :arm
	stmfd   sp!, {r4,lr}
	ldr     r2, [pc, #0x58] @ [0x37fbc38] (=Unknown_3806be4)
	ldr     r3, [pc, #0x58] @ [0x37fbc3c] (=0x3806fa0)
	ldr     r2, [r2]
	strb    r1, [r3, r0]
	cmp     r2, #0x0
	ldr     r3, [pc, #0x4c] @ [0x37fbc40] (=0x3806f9c)
	mov     r4, r0, lsl #4
	movge   r1, r2
	add     r2, r4, #1, 6 @ #0x4000000
	strb    r1, [r2, #0x402]
	ldr     r2, [r3]
	cmp     r2, #0x0
	ble     branch_37fbc30
	ldr     r2, [pc, #0x30] @ [0x37fbc44] (=0xfff5)
	mov     r3, #0x1
	tst     r2, r3, lsl r0
	beq     branch_37fbc30
	ldr     r2, [pc, #0x24] @ [0x37fbc48] (=0x3806fb0)
	ldrb    r0, [r2, r0]
	bl      Function_37fbd3c
	add     r1, r4, #1, 6 @ #0x4000000
	strb    r0, [r1, #0x400]
branch_37fbc30: @ 37fbc30 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fbc38

.word Unknown_3806be4 @ 0x37fbc38
.word 0x3806fa0 @ 0x37fbc3c
.word 0x3806f9c @ 0x37fbc40
.word 0xfff5 @ 0x37fbc44
.word 0x3806fb0 @ 0x37fbc48



.arm
Function_37fbc4c: @ 37fbc4c :arm
	mov     r0, r0, lsl #4
	add     r0, r0, #1, 6 @ #0x4000000
	ldrb    r0, [r0, #0x403]
	tst     r0, #0x80
	movne   r0, #0x1
	moveq   r0, #0x0
	bx      lr
@ 0x37fbc68


.arm
Function_37fbc68: @ 37fbc68 :arm
	ldr     r1, [pc, #0x54] @ [0x37fbcc4] (=Unknown_3806be4)
	cmp     r0, #0x0
	str     r0, [r1]
	blt     branch_37fbc9c
	mov     r2, #0x0
	and     r1, r0, #0xff
branch_37fbc80: @ 37fbc80 :arm
	mov     r0, r2, lsl #4
	add     r0, r0, #1, 6 @ #0x4000000
	add     r2, r2, #0x1
	strb    r1, [r0, #0x402]
	cmp     r2, #0x10
	blt     branch_37fbc80
	bx      lr
@ 0x37fbc9c

.arm
branch_37fbc9c: @ 37fbc9c :arm
	ldr     r2, [pc, #0x24] @ [0x37fbcc8] (=0x3806fa0)
	mov     r3, #0x0
.arm
branch_37fbca4: @ 37fbca4 :arm
	ldrb    r1, [r2, r3]
	mov     r0, r3, lsl #4
	add     r0, r0, #1, 6 @ #0x4000000
	add     r3, r3, #0x1
	strb    r1, [r0, #0x402]
	cmp     r3, #0x10
	blt     branch_37fbca4
	bx      lr
@ 0x37fbcc4

.word Unknown_3806be4 @ 0x37fbcc4
.word 0x3806fa0 @ 0x37fbcc8



.arm
Function_37fbccc: @ 37fbccc :arm
	mov     r0, r0, lsl #4
	add     r0, r0, #1, 6 @ #0x4000000
	ldr     r0, [r0, #0x400]
	bx      lr
@ 0x37fbcdc


.arm
Function_37fbcdc: @ 37fbcdc :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r1, [pc, #0x48] @ [0x37fbd30] (=0x3806f9c)
	ldr     r5, [pc, #0x48] @ [0x37fbd34] (=0x3806fb0)
	ldr     r4, [pc, #0x48] @ [0x37fbd38] (=0xfff5)
	str     r0, [r1]
	mov     r7, #0x0
	mov     r6, #0x1
.arm
branch_37fbcf8: @ 37fbcf8 :arm
	tst     r4, r6, lsl r7
	beq     branch_37fbd1c
	mov     r8, r7, lsl #4
	add     r0, r8, #1, 6 @ #0x4000000
	ldrb    r1, [r0, #0x402]
	ldrb    r0, [r5, r7]
	bl      Function_37fbd3c
	add     r1, r8, #1, 6 @ #0x4000000
	strb    r0, [r1, #0x400]
.arm
branch_37fbd1c: @ 37fbd1c :arm
	add     r7, r7, #0x1
	cmp     r7, #0x10
	blt     branch_37fbcf8
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37fbd30

.word 0x3806f9c @ 0x37fbd30
.word 0x3806fb0 @ 0x37fbd34
.word 0xfff5 @ 0x37fbd38
.arm
Function_37fbd3c: @ 37fbd3c :arm
	cmp     r1, #0x18
	bge     branch_37fbd6c
	ldr     r2, [pc, #0x54] @ [0x37fbda0] (=0x3806f9c)
	add     r3, r1, #0x28
	ldr     r12, [r2]
	ldr     r1, [pc, #0x4c] @ [0x37fbda4] (=0x7fff)
	mul     r2, r12, r3
	sub     r1, r1, r12
	add     r1, r2, r1, lsl #6
	mul     r1, r0, r1
	mov     r0, r1, asr #21
	bx      lr
@ 0x37fbd6c

.arm
branch_37fbd6c: @ 37fbd6c :arm
	cmp     r1, #0x68
	bxle    lr
	ldr     r2, [pc, #0x24] @ [0x37fbda0] (=0x3806f9c)
	sub     r1, r1, #0x28
	ldr     r12, [r2]
	rsb     r2, r12, #0x0
	mul     r3, r2, r1
	add     r1, r12, #0xff
	add     r1, r1, #127, 24 @ #0x7f00
	add     r1, r3, r1, lsl #6
	mul     r1, r0, r1
	mov     r0, r1, asr #21
	bx      lr
@ 0x37fbda0

.word 0x3806f9c @ 0x37fbda0
.word 0x7fff @ 0x37fbda4
.arm
Function_37fbda8: @ 37fbda8 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r5, r0
	rsb     r0, r1, #0x0
	mov     r4, #0x0
	b       branch_37fbdc4
@ 0x37fbdbc

.arm
branch_37fbdbc: @ 37fbdbc :arm
	sub     r4, r4, #0x1
	add     r0, r0, #3, 24 @ #0x300
.arm
branch_37fbdc4: @ 37fbdc4 :arm
	cmp     r0, #0x0
	blt     branch_37fbdbc
	b       branch_37fbdd8
@ 0x37fbdd0

.arm
branch_37fbdd0: @ 37fbdd0 :arm
	add     r4, r4, #0x1
	sub     r0, r0, #3, 24 @ #0x300
.arm
branch_37fbdd8: @ 37fbdd8 :arm
	cmp     r0, #3, 24 @ #0x300
	bge     branch_37fbdd0
	bl      Function_37fbec8
	adds    r3, r0, #1, 16 @ #0x10000
	mov     r0, r5, asr #31
	umull   r2, r1, r3, r5
	mov     r12, #0x0
	mla     r1, r3, r0, r1
	adc     r3, r12, #0x0
	sub     r0, r4, #0x10
	mla     r1, r3, r5, r1
	cmp     r0, #0x0
	mov     r4, #1, 16 @ #0x10000
	bgt     branch_37fbe30
	rsb     r3, r0, #0x0
	mov     r4, r2, lsr r3
	rsb     r0, r3, #0x20
	orr     r4, r4, r1, lsl r0
	sub     r0, r3, #0x20
	mov     r3, r1, lsr r3
	orr     r4, r4, r1, lsr r0
	b       branch_37fbe8c
@ 0x37fbe30

.arm
branch_37fbe30: @ 37fbe30 :arm
	cmp     r0, #0x20
	bge     branch_37fbe84
	rsb     r5, r0, #0x20
	sub     lr, r12, #0x1
	mov     r6, lr, lsl r5
	rsb     r3, r5, #0x20
	orr     r6, r6, lr, lsr r3
	sub     r3, r5, #0x20
	orr     r6, r6, lr, lsl r3
	and     r3, r1, r6
	and     r6, r2, lr, lsl r5
	cmp     r3, r12
	cmpeq   r6, r12
	subne   r0, r4, #0x1
	bne     branch_37fbebc
	mov     r3, r1, lsl r0
	orr     r3, r3, r2, lsr r5
	sub     r1, r0, #0x20
	mov     r4, r2, lsl r0
	orr     r3, r3, r2, lsl r1
	b       branch_37fbe8c
@ 0x37fbe84

.arm
branch_37fbe84: @ 37fbe84 :arm
	sub     r0, r4, #0x1
	b       branch_37fbebc
@ 0x37fbe8c

.arm
branch_37fbe8c: @ 37fbe8c :arm
	mov     r0, #0x10
	cmp     r3, #0x0
	cmpeq   r4, #0x10
	mov     r1, #0x0
	movcc   r4, r0
	bcc     branch_37fbeb4
	ldr     r0, [pc, #0x18] @ [0x37fbec4] (=0xffff)
	cmp     r3, r1
	cmpeq   r4, r0
	movhi   r4, r0
.arm
branch_37fbeb4: @ 37fbeb4 :arm
	mov     r0, r4, lsl #16
	mov     r0, r0, lsr #16
.arm
branch_37fbebc: @ 37fbebc :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x37fbec4

.word 0xffff @ 0x37fbec4
.arm
Function_37fbec8: @ 37fbec8 :arm
	ldr     r12, [pc, #0x0] @ [0x37fbed0] (=0x3800925)
	bx      r12
@ 0x37fbed0

.word Function_3800924+1 @ =0x3800925, 0x37fbed0
.arm
Function_37fbed4: @ 37fbed4 :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [pc, #0x64] @ [0x37fbf44] (=0xfffffd2d)
	mov     r4, r0
	cmp     r4, r1
	movlt   r4, r1
	blt     branch_37fbef4
	cmp     r4, #0x0
	movgt   r4, #0x0
.arm
branch_37fbef4: @ 37fbef4 :arm
	add     r0, r4, #0xd3
	add     r0, r0, #2, 24 @ #0x200
	bl      Function_37fbf48
	mvn     r2, #0xef
	cmp     r4, r2
	movlt   r1, #0x3
	blt     branch_37fbf30
	add     r1, r2, #0x78
	cmp     r4, r1
	movlt   r1, #0x2
	blt     branch_37fbf30
	add     r1, r2, #0xb4
	cmp     r4, r1
	movlt   r1, #0x1
	movge   r1, #0x0
.arm
branch_37fbf30: @ 37fbf30 :arm
	orr     r0, r0, r1, lsl #8
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fbf44

.word 0xfffffd2d @ 0x37fbf44
.arm
Function_37fbf48: @ 37fbf48 :arm
	ldr     r12, [pc, #0x0] @ [0x37fbf50] (=0x3800929)
	bx      r12
@ 0x37fbf50

.word Function_3800928+1 @ =0x3800929, 0x37fbf50



.arm
Function_37fbf54: @ 37fbf54 :arm
	cmp     r0, #0x20
	ldrlt   r1, [pc, #0x5c] @ [0x37fbfbc] (=Unknown_3806644)
	ldrltsb r0, [r1, r0]
	bxlt    lr
	cmp     r0, #0x40
	ldrlt   r1, [pc, #0x4c] @ [0x37fbfbc] (=Unknown_3806644)
	rsblt   r0, r0, #0x40
	ldrltsb r0, [r1, r0]
	bxlt    lr
	cmp     r0, #0x60
	bge     branch_37fbf9c
	ldr     r1, [pc, #0x34] @ [0x37fbfbc] (=Unknown_3806644)
	sub     r0, r0, #0x40
	ldrsb   r0, [r1, r0]
	rsb     r0, r0, #0x0
	mov     r0, r0, lsl #24
	mov     r0, r0, asr #24
	bx      lr

branch_37fbf9c: @ 37fbf9c :arm
	ldr     r1, [pc, #0x18] @ [0x37fbfbc] (=Unknown_3806644)
	sub     r0, r0, #0x60
	rsb     r0, r0, #0x20
	ldrsb   r0, [r1, r0]
	rsb     r0, r0, #0x0
	mov     r0, r0, lsl #24
	mov     r0, r0, asr #24
	bx      lr
@ 0x37fbfbc

.word Unknown_3806644 @ 0x37fbfbc



.arm
Function_37fbfc0: @ 37fbfc0 :arm
	ldr     r2, [pc, #0x20] @ [0x37fbfe8] (=0x3806be8)
	ldr     r0, [pc, #0x20] @ [0x37fbfec] (=0x19660d)
	ldr     r3, [r2]
	ldr     r1, [pc, #0x1c] @ [0x37fbff0] (=0x3c6ef35f)
	mla     r1, r3, r0, r1
	mov     r0, r1, lsr #16
	mov     r0, r0, lsl #16
	str     r1, [r2]
	mov     r0, r0, lsr #16
	bx      lr
@ 0x37fbfe8

.word 0x3806be8 @ 0x37fbfe8
.word 0x19660d @ 0x37fbfec
.word 0x3c6ef35f @ 0x37fbff0
.arm
Function_37fbff4: @ 37fbff4 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #0x8
	ldr     r1, [pc, #0x4c] @ [0x37fc050] (=0x3806fc0)
	mov     r4, r0
	ldr     r0, [r1]
	cmp     r0, #0x0
	bne     branch_37fc044
	mov     r0, #0x1
	str     r0, [r1]
	bl      Function_37fefd4
	mov     r0, #1, 22 @ #0x400
	str     r0, [sp]
	ldr     r0, [pc, #0x28] @ [0x37fc054] (=0x3807030)
	ldr     r1, [pc, #0x28] @ [0x37fc058] (=0x37fc104)
	ldr     r3, [pc, #0x28] @ [0x37fc05c] (=0x38074d4)
	mov     r2, #0x0
	str     r4, [sp, #0x4]
	bl      Function_37f90b0
	ldr     r0, [pc, #0x10] @ [0x37fc054] (=0x3807030)
	bl      Function_37f9410
.arm
branch_37fc044: @ 37fc044 :arm
	add     sp, sp, #0x8
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fc050

.word 0x3806fc0 @ 0x37fc050
.word 0x3807030 @ 0x37fc054
.word 0x37fc104 @ 0x37fc058
.word 0x38074d4 @ 0x37fc05c
.arm
Function_37fc060: @ 37fc060 :arm
	stmfd   sp!, {lr}
	sub     sp, sp, #0xc
	bl      Function_37fa2c0
	ldr     r3, [pc, #0x30] @ [0x37fc0a4] (=0x37fc0e8)
	adds    r12, r0, #1, 16 @ #0x10000
	str     r3, [sp, #0x4]
	mov     lr, #0x0
	str     lr, [sp, #0x8]
	adc     r2, r1, #0x0
	ldr     r3, [pc, #0x1c] @ [0x37fc0a8] (=0xaa8)
	ldr     r0, [pc, #0x1c] @ [0x37fc0ac] (=0x3807004)
	mov     r1, r12
	str     lr, [sp]
	bl      Function_37fa5f0
	add     sp, sp, #0xc
	ldmfd   sp!, {lr}
	bx      lr
@ 0x37fc0a4

.word Function_37fc0e8 @ =0x37fc0e8, 0x37fc0a4
.word 0xaa8 @ 0x37fc0a8
.word 0x3807004 @ 0x37fc0ac
.arm
Function_37fc0b0: @ 37fc0b0 :arm
	ldr     r12, [pc, #0x4] @ [0x37fc0bc] (=0x37fa664)
	ldr     r0, [pc, #0x4] @ [0x37fc0c0] (=0x3807004)
	bx      r12
@ 0x37fc0bc

.word Function_37fa664 @ =0x37fa664, 0x37fc0bc
.word 0x3807004 @ 0x37fc0c0
.arm
Function_37fc0c4: @ 37fc0c4 :arm
	ldr     r12, [pc, #0xc] @ [0x37fc0d8] (=0x37f9778)
	ldr     r0, [pc, #0xc] @ [0x37fc0dc] (=0x3806fe4)
	mov     r1, #0x2
	mov     r2, #0x0
	bx      r12
@ 0x37fc0d8

.word Function_37f9778 @ =0x37f9778, 0x37fc0d8
.word 0x3806fe4 @ 0x37fc0dc
.arm
Function_37fc0e0: @ 37fc0e0 :arm
	bx      lr
@ 0x37fc0e4

.arm
Function_37fc0e4: @ 37fc0e4 :arm
	bx      lr
@ 0x37fc0e8

.arm
Function_37fc0e8: @ 37fc0e8 :arm
	ldr     r12, [pc, #0xc] @ [0x37fc0fc] (=0x37f9778)
	ldr     r0, [pc, #0xc] @ [0x37fc100] (=0x3806fe4)
	mov     r1, #0x1
	mov     r2, #0x0
	bx      r12
@ 0x37fc0fc

.word Function_37f9778 @ =0x37f9778, 0x37fc0fc
.word 0x3806fe4 @ 0x37fc100
.arm
Function_37fc104: @ 37fc104 :arm
	stmfd   sp!, {r3-r9,lr}
	sub     sp, sp, #0x10
	ldr     r0, [pc, #0xd0] @ [0x37fc1e4] (=0x3806fe4)
	ldr     r1, [pc, #0xd0] @ [0x37fc1e8] (=0x3806fc4)
	mov     r2, #0x8
	bl      Function_37f9750
	ldr     r0, [pc, #0xc8] @ [0x37fc1ec] (=0x3807004)
	bl      Function_37fa444
	bl      Function_37fc260
	bl      Function_37fcfec
	bl      Function_37fee20
	bl      Function_37fb798
	mov     r0, #0x0
	mov     r1, r0
	mov     r2, r0
	mov     r3, r0
	bl      Function_37fb8c8
	mov     r0, #0x7f
	bl      Function_37fb8b8
	bl      Function_37fa2c0
	ldr     r2, [pc, #0x94] @ [0x37fc1f0] (=0x37fc0e8)
	adds    r4, r0, #1, 16 @ #0x10000
	str     r2, [sp, #0x4]
	mov     r0, #0x0
	str     r0, [sp, #0x8]
	str     r0, [sp]
	adc     r2, r1, #0x0
	ldr     r3, [pc, #0x7c] @ [0x37fc1f4] (=0xaa8)
	ldr     r0, [pc, #0x70] @ [0x37fc1ec] (=0x3807004)
	mov     r1, r4
	bl      Function_37fa5f0
	ldr     r7, [pc, #0x5c] @ [0x37fc1e4] (=0x3806fe4)
	mov     r4, #0x1
	add     r6, sp, #0xc
	mov     r8, #0x0
	mov     r5, r4
.arm
branch_37fc194: @ 37fc194 :arm
	mov     r0, r7
	mov     r1, r6
	mov     r2, r5
	mov     r9, r8
	bl      Function_37f9804
	ldr     r0, [sp, #0xc]
	cmp     r0, #0x1
	beq     branch_37fc1bc
	cmp     r0, #0x2
	b       branch_37fc1c0
@ 0x37fc1bc

.arm
branch_37fc1bc: @ 37fc1bc :arm
	mov     r9, r4
.arm
branch_37fc1c0: @ 37fc1c0 :arm
	bl      Function_37fc2bc
	bl      Function_37ff018
	mov     r0, r9
	bl      Function_37fd050
	mov     r0, r9
	bl      Function_37fc4a8
	bl      Function_37fed88
	bl      Function_37fbfc0
	b       branch_37fc194
@ 0x37fc1e4

.word 0x3806fe4 @ 0x37fc1e4
.word 0x3806fc4 @ 0x37fc1e8
.word 0x3807004 @ 0x37fc1ec
.word Function_37fc0e8 @ =0x37fc0e8, 0x37fc1f0
.word 0xaa8 @ 0x37fc1f4
.arm
Function_37fc1f8: @ 37fc1f8 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r4, [sp, #0x10]
	mov     r5, r0, lsl #3
	cmp     r4, #0x0
	movne   r4, #0x0
	moveq   r4, #0x1
	mov     r12, r4, lsl #2
	ldr     lr, [sp, #0x14]
	orr     r1, r12, r1, lsl #3
	orr     r12, r1, lr, lsl #1
	ldr     r4, [sp, #0x18]
	add     r0, r0, #1, 6 @ #0x4000000
	orr     r4, r4, r12
	strb    r4, [r0, #0x508]
	add     r1, r5, #1, 6 @ #0x4000000
	str     r2, [r1, #0x510]
	add     r0, r1, #5, 24 @ #0x500
	strh    r3, [r0, #0x14]
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fc248

.arm
Function_37fc248: @ 37fc248 :arm
	add     r0, r0, #1, 6 @ #0x4000000
	ldrb    r0, [r0, #0x508]
	tst     r0, #0x80
	movne   r0, #0x1
	moveq   r0, #0x0
	bx      lr
@ 0x37fc260

.arm
Function_37fc260: @ 37fc260 :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [pc, #0x48] @ [0x37fc2b4] (=0x38074fc)
	mov     lr, #0x0
	mov     r0, #0x54
.arm
branch_37fc270: @ 37fc270 :arm
	mul     r1, lr, r0
	add     r12, r3, r1
	strb    lr, [r3, r1]
	ldrb    r1, [r12, #0x3]
	add     lr, lr, #0x1
	bic     r2, r1, #0xf8
	and     r1, r2, #0xff
	bic     r1, r1, #0x1
	strb    r1, [r12, #0x3]
	cmp     lr, #0x10
	blt     branch_37fc270
	ldr     r0, [pc, #0x14] @ [0x37fc2b8] (=0x38074d4)
	mov     r1, #0x0
	str     r1, [r0, #0x4]
	str     r1, [r0]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fc2b4

.word 0x38074fc @ 0x37fc2b4
.word 0x38074d4 @ 0x37fc2b8
.arm
Function_37fc2bc: @ 37fc2bc :arm
	stmfd   sp!, {r4-r10,lr}
	sub     sp, sp, #0x18
	ldr     r7, [pc, #0x1d8] @ [0x37fc4a4] (=0x38074fc)
	mov     r9, #0x0
	mov     r4, #0x2
	mov     r5, #0x1
	mov     r6, r9
	mov     r10, #0x54
.arm
branch_37fc2dc: @ 37fc2dc :arm
	mla     r8, r9, r10, r7
	ldrb    r0, [r8, #0x3]
	mov     r0, r0, lsl #24
	movs    r0, r0, lsr #27
	beq     branch_37fc43c
	tst     r0, #0x2
	beq     branch_37fc304
	mov     r0, r9
	mov     r1, r6
	bl      Function_37fbb1c
.arm
branch_37fc304: @ 37fc304 :arm
	ldrb    r0, [r8, #0x3]
	mov     r0, r0, lsl #24
	mov     r0, r0, lsr #27
	tst     r0, #0x1
	beq     branch_37fc3e0
	ldrb    r0, [r8, #0x1]
	cmp     r0, #0x0
	beq     branch_37fc338
	cmp     r0, #0x1
	beq     branch_37fc390
	cmp     r0, #0x2
	beq     branch_37fc3bc
	b       branch_37fc43c
@ 0x37fc338

.arm
branch_37fc338: @ 37fc338 :arm
	ldrb    r0, [r8, #0x39]
	ldrh    r12, [r8, #0x24]
	cmp     r0, #0x0
	ldrh    r0, [r8, #0x3e]
	movne   r3, r5
	str     r0, [sp]
	ldr     r2, [r8, #0x40]
	and     r1, r12, #0xff
	str     r2, [sp, #0x4]
	str     r1, [sp, #0x8]
	mov     r0, r12, asr #8
	str     r0, [sp, #0xc]
	ldrh    r1, [r8, #0x26]
	moveq   r3, r4
	str     r1, [sp, #0x10]
	ldrb    r1, [r8, #0x23]
	mov     r0, r9
	str     r1, [sp, #0x14]
	ldr     r1, [r8, #0x44]
	ldrb    r2, [r8, #0x38]
	bl      Function_37fb900
	b       branch_37fc43c
@ 0x37fc390

.arm
branch_37fc390: @ 37fc390 :arm
	ldrh    r3, [r8, #0x24]
	ldrh    r1, [r8, #0x26]
	mov     r0, r9
	str     r1, [sp]
	ldrb    r1, [r8, #0x23]
	and     r2, r3, #0xff
	str     r1, [sp, #0x4]
	ldr     r1, [r8, #0x44]
	mov     r3, r3, asr #8
	bl      Function_37fb9cc
	b       branch_37fc43c
@ 0x37fc3bc

.arm
branch_37fc3bc: @ 37fc3bc :arm
	ldrh    r2, [r8, #0x24]
	ldrb    r1, [r8, #0x23]
	mov     r0, r9
	str     r1, [sp]
	ldrh    r3, [r8, #0x26]
	and     r1, r2, #0xff
	mov     r2, r2, asr #8
	bl      Function_37fba78
	b       branch_37fc43c
@ 0x37fc3e0

.arm
branch_37fc3e0: @ 37fc3e0 :arm
	tst     r0, #0x4
	beq     branch_37fc3f4
	ldrh    r1, [r8, #0x26]
	mov     r0, r9
	bl      Function_37fbbbc
.arm
branch_37fc3f4: @ 37fc3f4 :arm
	ldrb    r0, [r8, #0x3]
	mov     r0, r0, lsl #24
	mov     r0, r0, lsr #27
	tst     r0, #0x8
	beq     branch_37fc41c
	ldrh    r2, [r8, #0x24]
	mov     r0, r9
	and     r1, r2, #0xff
	mov     r2, r2, asr #8
	bl      Function_37fbb44
.arm
branch_37fc41c: @ 37fc41c :arm
	ldrb    r0, [r8, #0x3]
	mov     r0, r0, lsl #24
	mov     r0, r0, lsr #27
	tst     r0, #0x10
	beq     branch_37fc43c
	ldrb    r1, [r8, #0x23]
	mov     r0, r9
	bl      Function_37fbbd4
.arm
branch_37fc43c: @ 37fc43c :arm
	add     r9, r9, #0x1
	cmp     r9, #0x10
	blt     branch_37fc2dc
	ldr     r3, [pc, #0x54] @ [0x37fc4a4] (=0x38074fc)
	mov     r4, #0x0
	mov     r1, #0x54
.arm
branch_37fc454: @ 37fc454 :arm
	mla     r5, r4, r1, r3
	ldrb    r0, [r5, #0x3]
	mov     r0, r0, lsl #24
	movs    r0, r0, lsr #27
	beq     branch_37fc48c
	tst     r0, #0x1
	movne   r0, r4, lsl #4
	addne   r0, r0, #1, 6 @ #0x4000000
	ldrneb  r2, [r0, #0x403]
	orrne   r2, r2, #0x80
	strneb  r2, [r0, #0x403]
	ldrb    r0, [r5, #0x3]
	bic     r0, r0, #0xf8
	strb    r0, [r5, #0x3]
.arm
branch_37fc48c: @ 37fc48c :arm
	add     r4, r4, #0x1
	cmp     r4, #0x10
	blt     branch_37fc454
	add     sp, sp, #0x18
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x37fc4a4

.word 0x38074fc @ 0x37fc4a4
.arm
Function_37fc4a8: @ 37fc4a8 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r11, #2, 18 @ #0x8000
	mov     r10, r0
	mov     r5, #0x0
	rsb     r11, r11, #0x0
.arm
branch_37fc4bc: @ 37fc4bc :arm
	ldr     r0, [pc, #0x388] @ [0x37fc84c] (=0x38074fc)
	mov     r1, #0x54
	mla     r4, r5, r1, r0
	ldrb    r2, [r4, #0x3]
	mov     r6, #0x0
	mov     r0, r2, lsl #31
	mov     r7, r6
	mov     r8, r6
	movs    r0, r0, lsr #31
	beq     branch_37fc838
	mov     r0, r2, lsl #30
	movs    r0, r0, lsr #31
	beq     branch_37fc520
	bic     r1, r2, #0xf8
	mov     r0, r2, lsl #24
	mov     r0, r0, lsr #27
	orr     r0, r0, #0x1
	and     r0, r0, #0xff
	mov     r0, r0, lsl #27
	orr     r0, r1, r0, lsr #24
	strb    r0, [r4, #0x3]
	and     r0, r0, #0xff
	bic     r0, r0, #0x2
	strb    r0, [r4, #0x3]
	b       branch_37fc570
@ 0x37fc520

.arm
branch_37fc520: @ 37fc520 :arm
	mov     r0, r5
	bl      Function_37fbc4c
	cmp     r0, #0x0
	bne     branch_37fc570
	ldr     r3, [r4, #0x48]
	cmp     r3, #0x0
	moveq   r0, r6
	streqb  r0, [r4, #0x22]
	beq     branch_37fc558
	ldr     r2, [r4, #0x4c]
	mov     r0, r4
	mov     r1, #0x1
	mov     lr, pc
	bx      r3
@ 0x37fc558

.arm
branch_37fc558: @ 37fc558 :arm
	mov     r0, #0x0
	strh    r0, [r4, #0x24]
	ldrb    r0, [r4, #0x3]
	bic     r0, r0, #0x1
	strb    r0, [r4, #0x3]
	b       branch_37fc838
@ 0x37fc570

.arm
branch_37fc570: @ 37fc570 :arm
	ldrb    r0, [r4, #0x9]
	ldrb    r1, [r4, #0x8]
	mov     r2, r0, lsl #1
	ldr     r0, [pc, #0x2cc] @ [0x37fc850] (=0x3806668)
	ldrsh   r2, [r0, r2]
	ldrb    r0, [r4, #0x5]
	add     r6, r6, r2
	sub     r0, r1, r0
	add     r7, r7, r0, lsl #6
	mov     r0, r4
	mov     r1, r10
	bl      Function_37fc928
	ldrsh   r3, [r4, #0x32]
	add     r6, r6, r0
	cmp     r3, #0x0
	moveq   r0, #0x0
	beq     branch_37fc5f8
	ldr     r0, [r4, #0x14]
	ldr     r2, [r4, #0x18]
	cmp     r0, r2
	movge   r0, #0x0
	bge     branch_37fc5f8
	sub     r0, r2, r0
	smull   r0, r1, r3, r0
	mov     r3, r2, asr #31
	bl      Function_380605c
	cmp     r10, #0x0
	beq     branch_37fc5f8
	ldrb    r1, [r4, #0x3]
	mov     r1, r1, lsl #29
	movs    r1, r1, lsr #31
	ldrne   r1, [r4, #0x14]
	addne   r1, r1, #0x1
	strne   r1, [r4, #0x14]
.arm
branch_37fc5f8: @ 37fc5f8 :arm
	ldrsh   r1, [r4, #0xc]
	add     r2, r7, r0
	ldrsh   r0, [r4, #0x6]
	add     r1, r6, r1
	add     r6, r1, r0
	ldrsh   r1, [r4, #0xe]
	add     r0, r4, #0x28
	add     r7, r2, r1
	bl      Function_37fcf10
	mov     r1, r0, asr #31
	cmp     r1, #0x0
	mov     r9, r0
	cmpeq   r0, #0x0
	beq     branch_37fc68c
	ldrb    r2, [r4, #0x28]
	cmp     r2, #0x0
	beq     branch_37fc678
	cmp     r2, #0x1
	beq     branch_37fc658
	cmp     r2, #0x2
	moveq   r1, r1, lsl #6
	orreq   r1, r1, r0, lsr #26
	moveq   r9, r0, lsl #6
	b       branch_37fc684
@ 0x37fc658

.arm
branch_37fc658: @ 37fc658 :arm
	mov     r2, #0x3c
	umull   r9, r3, r0, r2
	mov     r2, #0x0
	mla     r3, r0, r2, r3
	mov     r0, #0x3c
	mla     r3, r1, r0, r3
	mov     r1, r3
	b       branch_37fc684
@ 0x37fc678

.arm
branch_37fc678: @ 37fc678 :arm
	mov     r1, r1, lsl #6
	orr     r1, r1, r0, lsr #26
	mov     r9, r0, lsl #6
.arm
branch_37fc684: @ 37fc684 :arm
	mov     r9, r9, lsr #14
	orr     r9, r9, r1, lsl #18
.arm
branch_37fc68c: @ 37fc68c :arm
	cmp     r10, #0x0
	beq     branch_37fc69c
	add     r0, r4, #0x28
	bl      Function_37fceb0
.arm
branch_37fc69c: @ 37fc69c :arm
	ldrb    r0, [r4, #0x28]
	cmp     r0, #0x0
	beq     branch_37fc6c8
	cmp     r0, #0x1
	beq     branch_37fc6bc
	cmp     r0, #0x2
	addeq   r8, r8, r9
	b       branch_37fc6cc
@ 0x37fc6bc

.arm
branch_37fc6bc: @ 37fc6bc :arm
	cmp     r6, r11
	addgt   r6, r6, r9
	b       branch_37fc6cc
@ 0x37fc6c8

.arm
branch_37fc6c8: @ 37fc6c8 :arm
	add     r7, r7, r9
.arm
branch_37fc6cc: @ 37fc6cc :arm
	ldrsb   r1, [r4, #0xa]
	ldrb    r0, [r4, #0x4]
	add     r8, r8, r1
	cmp     r0, #0x7f
	mulne   r0, r8, r0
	addne   r0, r0, #0x40
	movne   r8, r0, asr #7
	ldrsb   r1, [r4, #0xb]
	ldrb    r0, [r4, #0x2]
	add     r8, r8, r1
	cmp     r0, #0x3
	bne     branch_37fc758
	ldr     r0, [pc, #0x150] @ [0x37fc854] (=0xfffffd2d)
	cmp     r6, r0
	bgt     branch_37fc758
	ldrb    r0, [r4, #0x3]
	bic     r0, r0, #0xf8
	orr     r0, r0, #0x10
	strb    r0, [r4, #0x3]
	ldr     r3, [r4, #0x48]
	cmp     r3, #0x0
	moveq   r0, #0x0
	streqb  r0, [r4, #0x22]
	beq     branch_37fc740
	ldr     r2, [r4, #0x4c]
	mov     r0, r4
	mov     r1, #0x1
	mov     lr, pc
	bx      r3
@ 0x37fc740

.arm
branch_37fc740: @ 37fc740 :arm
	mov     r0, #0x0
	strh    r0, [r4, #0x24]
	ldrb    r0, [r4, #0x3]
	bic     r0, r0, #0x1
	strb    r0, [r4, #0x3]
	b       branch_37fc838
@ 0x37fc758

.arm
branch_37fc758: @ 37fc758 :arm
	mov     r0, r6
	bl      Function_37fbed4
	mov     r6, r0
	ldrh    r0, [r4, #0x3c]
	mov     r1, r7
	bl      Function_37fbda8
	ldrb    r1, [r4, #0x1]
	cmp     r1, #0x1
	ldreq   r1, [pc, #0xd8] @ [0x37fc858] (=0xfffc)
	andeq   r0, r0, r1
	moveq   r0, r0, lsl #16
	moveq   r0, r0, lsr #16
	adds    r8, r8, #0x40
	movmi   r8, #0x0
	bmi     branch_37fc79c
	cmp     r8, #0x7f
	movgt   r8, #0x7f
.arm
branch_37fc79c: @ 37fc79c :arm
	ldrh    r1, [r4, #0x24]
	cmp     r6, r1
	beq     branch_37fc7d0
	strh    r6, [r4, #0x24]
	ldrb    r1, [r4, #0x3]
	bic     r2, r1, #0xf8
	mov     r1, r1, lsl #24
	mov     r1, r1, lsr #27
	orr     r1, r1, #0x8
	and     r1, r1, #0xff
	mov     r1, r1, lsl #27
	orr     r1, r2, r1, lsr #24
	strb    r1, [r4, #0x3]
.arm
branch_37fc7d0: @ 37fc7d0 :arm
	ldrh    r1, [r4, #0x26]
	cmp     r0, r1
	beq     branch_37fc804
	strh    r0, [r4, #0x26]
	ldrb    r0, [r4, #0x3]
	bic     r1, r0, #0xf8
	mov     r0, r0, lsl #24
	mov     r0, r0, lsr #27
	orr     r0, r0, #0x4
	and     r0, r0, #0xff
	mov     r0, r0, lsl #27
	orr     r0, r1, r0, lsr #24
	strb    r0, [r4, #0x3]
.arm
branch_37fc804: @ 37fc804 :arm
	ldrb    r0, [r4, #0x23]
	cmp     r8, r0
	beq     branch_37fc838
	strb    r8, [r4, #0x23]
	ldrb    r0, [r4, #0x3]
	bic     r1, r0, #0xf8
	mov     r0, r0, lsl #24
	mov     r0, r0, lsr #27
	orr     r0, r0, #0x10
	and     r0, r0, #0xff
	mov     r0, r0, lsl #27
	orr     r0, r1, r0, lsr #24
	strb    r0, [r4, #0x3]
.arm
branch_37fc838: @ 37fc838 :arm
	add     r5, r5, #0x1
	cmp     r5, #0x10
	blt     branch_37fc4bc
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x37fc84c

.word 0x38074fc @ 0x37fc84c
.word 0x3806668 @ 0x37fc850
.word 0xfffffd2d @ 0x37fc854
.word 0xfffc @ 0x37fc858
.arm
Function_37fc85c: @ 37fc85c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #0x0
	strb    r0, [r4, #0x1]
	mov     lr, r2
	add     r12, r4, #0x38
	ldmia   r1, {r0-r2}
	stmia   r12, {r0-r2}
	mov     r0, r4
	mov     r1, r3
	str     lr, [r4, #0x44]
	bl      Function_37fcfb4
	mov     r0, #0x1
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fc898

.arm
Function_37fc898: @ 37fc898 :arm
	stmfd   sp!, {r3,lr}
	ldrb    r3, [r0]
	cmp     r3, #0x8
	movcc   r0, #0x0
	bcc     branch_37fc8d8
	cmp     r3, #0xd
	movhi   r0, #0x0
	bhi     branch_37fc8d8
	mov     r3, #0x1
	strb    r3, [r0, #0x1]
	str     r1, [r0, #0x44]
	ldr     r3, [pc, #0x14] @ [0x37fc8e0] (=0x1f46)
	mov     r1, r2
	strh    r3, [r0, #0x3c]
	bl      Function_37fcfb4
	mov     r0, #0x1
.arm
branch_37fc8d8: @ 37fc8d8 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fc8e0

.word 0x1f46 @ 0x37fc8e0
.arm
Function_37fc8e4: @ 37fc8e4 :arm
	stmfd   sp!, {r3,lr}
	ldrb    r2, [r0]
	cmp     r2, #0xe
	movcc   r0, #0x0
	bcc     branch_37fc91c
	cmp     r2, #0xf
	movhi   r0, #0x0
	bhi     branch_37fc91c
	ldr     r2, [pc, #0x18] @ [0x37fc924] (=0x1f46)
	mov     r3, #0x2
	strb    r3, [r0, #0x1]
	strh    r2, [r0, #0x3c]
	bl      Function_37fcfb4
	mov     r0, #0x1
.arm
branch_37fc91c: @ 37fc91c :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fc924

.word 0x1f46 @ 0x37fc924
.arm
Function_37fc928: @ 37fc928 :arm
	cmp     r1, #0x0
	beq     branch_37fc9c0
	ldrb    r1, [r0, #0x2]
	cmp     r1, #0x3
	addls   pc, pc, r1, lsl #2
	b       branch_37fc9c0
@ 0x37fc940

.arm
Function_37fc940: @ 37fc940 :arm
	b       branch_37fc950
@ 0x37fc944

.arm
Function_37fc944: @ 37fc944 :arm
	b       branch_37fc978
@ 0x37fc948

.arm
Function_37fc948: @ 37fc948 :arm
	b       branch_37fc9c0
@ 0x37fc94c

.arm
Function_37fc94c: @ 37fc94c :arm
	b       branch_37fc9b0
@ 0x37fc950

.arm
branch_37fc950: @ 37fc950 :arm
	ldr     r2, [r0, #0x10]
	ldrb    r1, [r0, #0x1c]
	rsb     r2, r2, #0x0
	mul     r1, r2, r1
	mov     r1, r1, asr #8
	rsbs    r1, r1, #0x0
	str     r1, [r0, #0x10]
	moveq   r1, #0x1
	streqb  r1, [r0, #0x2]
	b       branch_37fc9c0
@ 0x37fc978

.arm
branch_37fc978: @ 37fc978 :arm
	ldrb    r2, [r0, #0x1d]
	ldr     r1, [pc, #0x48] @ [0x37fc9cc] (=0x3806668)
	mov     r2, r2, lsl #1
	ldrsh   r3, [r1, r2]
	ldr     r2, [r0, #0x10]
	ldrh    r1, [r0, #0x1e]
	mov     r12, r3, lsl #7
	sub     r1, r2, r1
	str     r1, [r0, #0x10]
	cmp     r1, r3, lsl #7
	strle   r12, [r0, #0x10]
	movle   r1, #0x2
	strleb  r1, [r0, #0x2]
	b       branch_37fc9c0
@ 0x37fc9b0

.arm
branch_37fc9b0: @ 37fc9b0 :arm
	ldr     r2, [r0, #0x10]
	ldrh    r1, [r0, #0x20]
	sub     r1, r2, r1
	str     r1, [r0, #0x10]
.arm
branch_37fc9c0: @ 37fc9c0 :arm
	ldr     r0, [r0, #0x10]
	mov     r0, r0, asr #7
	bx      lr
@ 0x37fc9cc

.word 0x3806668 @ 0x37fc9cc
.arm
Function_37fc9d0: @ 37fc9d0 :arm
	cmp     r1, #0x6d
	ldrge   r2, [pc, #0x10] @ [0x37fc9ec] (=0x380687c)
	rsblt   r1, r1, #0xff
	rsbge   r1, r1, #0x7f
	ldrgeb  r1, [r2, r1]
	strb    r1, [r0, #0x1c]
	bx      lr
@ 0x37fc9ec

.word 0x380687c @ 0x37fc9ec
.arm
Function_37fc9f0: @ 37fc9f0 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, r1
	bl      Function_37fcf60
	strh    r0, [r4, #0x1e]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fca0c

.arm
Function_37fca0c: @ 37fca0c :arm
	strb    r1, [r0, #0x1d]
	bx      lr
@ 0x37fca14

.arm
Function_37fca14: @ 37fca14 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, r1
	bl      Function_37fcf60
	strh    r0, [r4, #0x20]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fca30

.arm
Function_37fca30: @ 37fca30 :arm
	mov     r1, #0x3
	strb    r1, [r0, #0x2]
	bx      lr
@ 0x37fca3c

.arm
Function_37fca3c: @ 37fca3c :arm
	ldrb    r0, [r0, #0x3]
	mov     r0, r0, lsl #31
	mov     r0, r0, lsr #31
	bx      lr
@ 0x37fca4c

.arm
Function_37fca4c: @ 37fca4c :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r4, [pc, #0x1ac] @ [0x37fcc04] (=0x38074d4)
	mov     r6, r1
	ldr     r1, [r4, #0x4]
	mov     r5, r3
	mvn     r1, r1
	cmp     r2, #0x0
	and     r0, r0, r1
	ldreq   r1, [r4]
	mov     r4, #0x0
	mvneq   r1, r1
	andeq   r0, r0, r1
	ldr     r3, [pc, #0x184] @ [0x37fcc08] (=0x3806868)
	ldr     r8, [pc, #0x184] @ [0x37fcc0c] (=0x380686c)
	mov     r9, r4
	mvn     r1, #0x0
	mov     r11, #0x1
.arm
branch_37fca90: @ 37fca90 :arm
	ldrb    r12, [r8, r9]
	tst     r0, r11, lsl r12
	beq     branch_37fcb10
	ldr     r2, [pc, #0x16c] @ [0x37fcc10] (=0x38074fc)
	mov     r7, #0x54
	mla     r10, r12, r7, r2
	cmp     r4, #0x0
	moveq   r4, r10
	beq     branch_37fcb10
	ldrb    r7, [r4, #0x22]
	ldrb    r2, [r10, #0x22]
	cmp     r2, r7
	bhi     branch_37fcb10
	bne     branch_37fcb0c
	ldrh    r2, [r4, #0x24]
	ldrh    r7, [r10, #0x24]
	mov     r12, r2, lsl #24
	mov     r12, r12, lsr #20
	ldrb    r2, [r3, r2, asr #0x8]
	mov     lr, r7, lsl #24
	mov     r2, r12, asr r2
	mov     r12, lr, lsr #20
	ldrb    r7, [r3, r7, asr #0x8]
	cmp     r2, r12, asr r7
	beq     branch_37fcb00
	movlt   r2, r11
	movge   r2, r1
	b       branch_37fcb04
@ 0x37fcb00

.arm
branch_37fcb00: @ 37fcb00 :arm
	mov     r2, #0x0
.arm
branch_37fcb04: @ 37fcb04 :arm
	cmp     r2, #0x0
	bge     branch_37fcb10
.arm
branch_37fcb0c: @ 37fcb0c :arm
	mov     r4, r10
.arm
branch_37fcb10: @ 37fcb10 :arm
	add     r9, r9, #0x1
	cmp     r9, #0x10
	blt     branch_37fca90
	cmp     r4, #0x0
	moveq   r0, #0x0
	beq     branch_37fcbfc
	ldrb    r0, [r4, #0x22]
	cmp     r6, r0
	movlt   r0, #0x0
	blt     branch_37fcbfc
	ldr     r3, [r4, #0x48]
	cmp     r3, #0x0
	beq     branch_37fcb58
	ldr     r2, [r4, #0x4c]
	mov     r0, r4
	mov     r1, #0x0
	mov     lr, pc
	bx      r3
@ 0x37fcb58

.arm
branch_37fcb58: @ 37fcb58 :arm
	ldrb    r0, [r4, #0x3]
	mov     r7, #0x0
	bic     r0, r0, #0xf8
	orr     r1, r0, #0x10
	and     r0, r1, #0xff
	bic     r0, r0, #0x1
	strb    r0, [r4, #0x3]
	str     r7, [r4, #0x50]
	ldr     r0, [sp, #0x28]
	str     r5, [r4, #0x48]
	str     r0, [r4, #0x4c]
	str     r7, [r4, #0x34]
	strb    r6, [r4, #0x22]
	mov     r3, #0x7f
	strh    r3, [r4, #0x24]
	ldrb    r1, [r4, #0x3]
	mov     r0, #0x3c
	bic     r2, r1, #0x2
	and     r1, r2, #0xff
	orr     r1, r1, #0x4
	strb    r1, [r4, #0x3]
	strb    r0, [r4, #0x8]
	strb    r0, [r4, #0x5]
	strb    r3, [r4, #0x9]
	strb    r7, [r4, #0xa]
	strh    r7, [r4, #0xc]
	strh    r7, [r4, #0x6]
	strh    r7, [r4, #0xe]
	strb    r7, [r4, #0xb]
	strb    r3, [r4, #0x4]
	strh    r7, [r4, #0x32]
	str     r7, [r4, #0x18]
	str     r7, [r4, #0x14]
	ldr     r1, [pc, #0x30] @ [0x37fcc14] (=0xffff)
	strb    r7, [r4, #0x1c]
	strh    r1, [r4, #0x1e]
	strb    r3, [r4, #0x1d]
	add     r0, r4, #0x28
	strh    r1, [r4, #0x20]
	bl      Function_37fce8c
	mov     r0, r4
.arm
branch_37fcbfc: @ 37fcbfc :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x37fcc04

.word 0x38074d4 @ 0x37fcc04
.word 0x3806868 @ 0x37fcc08
.word 0x380686c @ 0x37fcc0c
.word 0x38074fc @ 0x37fcc10
.word 0xffff @ 0x37fcc14
.arm
Function_37fcc18: @ 37fcc18 :arm
	cmp     r0, #0x0
	movne   r1, #0x0
	strne   r1, [r0, #0x48]
	strne   r1, [r0, #0x4c]
	bx      lr
@ 0x37fcc2c

.arm
Function_37fcc2c: @ 37fcc2c :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r9, #0x0
	ldr     r7, [pc, #0x98] @ [0x37fccd4] (=0x38074fc)
	ldr     r4, [pc, #0x98] @ [0x37fccd8] (=0x38074d4)
	mov     r10, r0
	mov     r5, r9
	mov     r6, #0x1
	mov     r11, #0x54
	b       branch_37fccbc
@ 0x37fcc50

.arm
branch_37fcc50: @ 37fcc50 :arm
	tst     r10, #0x1
	beq     branch_37fccb4
	ldr     r0, [r4, #0x4]
	mla     r8, r9, r11, r7
	tst     r0, r6, lsl r9
	bne     branch_37fccb4
	ldr     r3, [r8, #0x48]
	cmp     r3, #0x0
	beq     branch_37fcc88
	ldr     r2, [r8, #0x4c]
	mov     r0, r8
	mov     r1, #0x0
	mov     lr, pc
	bx      r3
@ 0x37fcc88

.arm
branch_37fcc88: @ 37fcc88 :arm
	mov     r0, r9
	mov     r1, #0x0
	bl      Function_37fbb1c
	strb    r5, [r8, #0x22]
	mov     r0, r8
	bl      Function_37fcc18
	ldrb    r0, [r8, #0x3]
	bic     r1, r0, #0xf8
	and     r0, r1, #0xff
	bic     r0, r0, #0x1
	strb    r0, [r8, #0x3]
.arm
branch_37fccb4: @ 37fccb4 :arm
	add     r9, r9, #0x1
	mov     r10, r10, lsr #1
.arm
branch_37fccbc: @ 37fccbc :arm
	cmp     r9, #0x10
	bge     branch_37fcccc
	cmp     r10, #0x0
	bne     branch_37fcc50
.arm
branch_37fcccc: @ 37fcccc :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x37fccd4

.word 0x38074fc @ 0x37fccd4
.word 0x38074d4 @ 0x37fccd8
.arm
Function_37fccdc: @ 37fccdc :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r0
	mov     r8, #0x0
	ldr     r5, [pc, #0xc4] @ [0x37fcdb4] (=0x38074fc)
	mov     r9, r1
	mov     r7, r10
	mov     r11, r8
	mov     r4, #0x1
	b       branch_37fcd78
@ 0x37fcd00

.arm
branch_37fcd00: @ 37fcd00 :arm
	tst     r7, #0x1
	beq     branch_37fcd70
	ldr     r0, [pc, #0xa8] @ [0x37fcdb8] (=0x38074d4)
	ldr     r1, [r0, #0x4]
	mov     r0, #0x54
	mla     r6, r8, r0, r5
	tst     r1, r4, lsl r8
	bne     branch_37fcd70
	ldr     r3, [r6, #0x48]
	cmp     r3, #0x0
	beq     branch_37fcd40
	ldr     r2, [r6, #0x4c]
	mov     r0, r6
	mov     r1, #0x0
	mov     lr, pc
	bx      r3
@ 0x37fcd40

.arm
branch_37fcd40: @ 37fcd40 :arm
	mov     r0, r8
	mov     r1, #0x0
	bl      Function_37fbb1c
	strb    r11, [r6, #0x22]
	mov     r0, r6
	bl      Function_37fcc18
	ldrb    r0, [r6, #0x3]
	bic     r0, r0, #0xf8
	strb    r0, [r6, #0x3]
	and     r0, r0, #0xff
	bic     r0, r0, #0x1
	strb    r0, [r6, #0x3]
.arm
branch_37fcd70: @ 37fcd70 :arm
	add     r8, r8, #0x1
	mov     r7, r7, lsr #1
.arm
branch_37fcd78: @ 37fcd78 :arm
	cmp     r8, #0x10
	bge     branch_37fcd88
	cmp     r7, #0x0
	bne     branch_37fcd00
.arm
branch_37fcd88: @ 37fcd88 :arm
	tst     r9, #0x1
	ldrne   r0, [pc, #0x24] @ [0x37fcdb8] (=0x38074d4)
	ldrne   r1, [r0]
	orrne   r1, r1, r10
	strne   r1, [r0]
	ldreq   r0, [pc, #0x14] @ [0x37fcdb8] (=0x38074d4)
	ldreq   r1, [r0, #0x4]
	orreq   r1, r1, r10
	streq   r1, [r0, #0x4]
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x37fcdb4

.word 0x38074fc @ 0x37fcdb4
.word 0x38074d4 @ 0x37fcdb8
.arm
Function_37fcdbc: @ 37fcdbc :arm
	tst     r1, #0x1
	ldreq   r1, [pc, #0x28] @ [0x37fcdf0] (=0x38074d4)
	mvneq   r0, r0
	ldreq   r2, [r1, #0x4]
	andeq   r0, r2, r0
	streq   r0, [r1, #0x4]
	bxeq    lr
	ldr     r1, [pc, #0x10] @ [0x37fcdf0] (=0x38074d4)
	mvn     r0, r0
	ldr     r2, [r1]
	and     r0, r2, r0
	str     r0, [r1]
	bx      lr
@ 0x37fcdf0

.word 0x38074d4 @ 0x37fcdf0
.arm
Function_37fcdf4: @ 37fcdf4 :arm
	tst     r0, #0x1
	ldrne   r0, [pc, #0xc] @ [0x37fce0c] (=0x38074d4)
	ldrne   r0, [r0]
	ldreq   r0, [pc, #0x4] @ [0x37fce0c] (=0x38074d4)
	ldreq   r0, [r0, #0x4]
	bx      lr
@ 0x37fce0c

.word 0x38074d4 @ 0x37fce0c
.arm
Function_37fce10: @ 37fce10 :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r5, [pc, #0x6c] @ [0x37fce88] (=0x38074fc)
	mov     r6, #0x0
	mov     r8, r0
	mov     r7, r1
	mov     r4, r6
	mov     r9, #0x54
.arm
branch_37fce2c: @ 37fce2c :arm
	mla     r2, r6, r9, r5
	ldrb    r1, [r2, #0x3]
	mov     r0, r1, lsl #31
	movs    r0, r0, lsr #31
	beq     branch_37fce70
	ldrb    r0, [r2, #0x1]
	cmp     r0, #0x0
	bne     branch_37fce70
	ldr     r0, [r2, #0x44]
	cmp     r8, r0
	cmpls   r0, r7
	bhi     branch_37fce70
	bic     r3, r1, #0x2
	mov     r0, r6
	mov     r1, r4
	strb    r3, [r2, #0x3]
	bl      Function_37fbb1c
.arm
branch_37fce70: @ 37fce70 :arm
	add     r0, r6, #0x1
	and     r6, r0, #0xff
	cmp     r6, #0x10
	bcc     branch_37fce2c
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x37fce88

.word 0x38074fc @ 0x37fce88
.arm
Function_37fce8c: @ 37fce8c :arm
	mov     r2, #0x0
	strb    r2, [r0]
	strb    r2, [r0, #0x2]
	mov     r1, #0x1
	strb    r1, [r0, #0x3]
	mov     r1, #0x10
	strb    r1, [r0, #0x1]
	strh    r2, [r0, #0x4]
	bx      lr
@ 0x37fceb0

.arm
Function_37fceb0: @ 37fceb0 :arm
	ldrh    r2, [r0, #0x6]
	ldrh    r1, [r0, #0x4]
	cmp     r2, r1
	addcc   r1, r2, #0x1
	strcch  r1, [r0, #0x6]
	bxcc    lr
	ldrh    r1, [r0, #0x8]
	ldrb    r2, [r0, #0x1]
	add     r1, r1, r2, lsl #6
	mov     r3, r1, lsr #8
	b       branch_37fcee0
@ 0x37fcedc

.arm
branch_37fcedc: @ 37fcedc :arm
	sub     r3, r3, #0x80
.arm
branch_37fcee0: @ 37fcee0 :arm
	cmp     r3, #0x80
	bcs     branch_37fcedc
	ldrh    r1, [r0, #0x8]
	add     r1, r1, r2, lsl #6
	strh    r1, [r0, #0x8]
	ldrh    r1, [r0, #0x8]
	and     r1, r1, #0xff
	strh    r1, [r0, #0x8]
	ldrh    r1, [r0, #0x8]
	orr     r1, r1, r3, lsl #8
	strh    r1, [r0, #0x8]
	bx      lr
@ 0x37fcf10

.arm
Function_37fcf10: @ 37fcf10 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldrb    r0, [r4, #0x2]
	cmp     r0, #0x0
	moveq   r0, #0x0
	beq     branch_37fcf58
	ldrh    r1, [r4, #0x6]
	ldrh    r0, [r4, #0x4]
	cmp     r1, r0
	movcc   r0, #0x0
	bcc     branch_37fcf58
	ldrh    r0, [r4, #0x8]
	mov     r0, r0, lsr #8
	bl      Function_37fbf54
	ldrb    r1, [r4, #0x2]
	ldrb    r2, [r4, #0x3]
	mul     r0, r1, r0
	mul     r0, r2, r0
.arm
branch_37fcf58: @ 37fcf58 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fcf60

.arm
Function_37fcf60: @ 37fcf60 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x7f
	ldreq   r0, [pc, #0x40] @ [0x37fcfb0] (=0xffff)
	beq     branch_37fcfa8
	cmp     r0, #0x7e
	moveq   r0, #15, 22 @ #0x3c00
	beq     branch_37fcfa8
	cmp     r0, #0x32
	movlt   r0, r0, lsl #1
	addlt   r0, r0, #0x1
	movlt   r0, r0, lsl #16
	movlt   r0, r0, lsr #16
	blt     branch_37fcfa8
	rsb     r1, r0, #0x7e
	mov     r0, #30, 24 @ #0x1e00
	bl      Function_3806254
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
.arm
branch_37fcfa8: @ 37fcfa8 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fcfb0

.word 0xffff @ 0x37fcfb0
.arm
Function_37fcfb4: @ 37fcfb4 :arm
	ldr     r3, [pc, #0x2c] @ [0x37fcfe8] (=0xfffe9680)
	mov     r2, #0x0
	str     r3, [r0, #0x10]
	strb    r2, [r0, #0x2]
	str     r1, [r0, #0x34]
	strh    r2, [r0, #0x30]
	strh    r2, [r0, #0x2e]
	ldrb    r1, [r0, #0x3]
	orr     r2, r1, #0x2
	bic     r1, r2, #0x1
	orr     r1, r1, #0x1
	strb    r1, [r0, #0x3]
	bx      lr
@ 0x37fcfe8

.word 0xfffe9680 @ 0x37fcfe8
.arm
Function_37fcfec: @ 37fcfec :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [pc, #0x50] @ [0x37fd048] (=0x3807a3c)
	mov     lr, #0x0
	mov     r0, #0x24
.arm
branch_37fcffc: @ 37fcffc :arm
	mul     r2, lr, r0
	ldrb    r1, [r3, r2]
	add     r12, r3, r2
	bic     r1, r1, #0x1
	strb    r1, [r3, r2]
	strb    lr, [r12, #0x1]
	add     lr, lr, #0x1
	cmp     lr, #0x10
	blt     branch_37fcffc
	ldr     r1, [pc, #0x24] @ [0x37fd04c] (=0x3807c7c)
	mov     r2, #0x0
.arm
branch_37fd028: @ 37fd028 :arm
	ldrb    r0, [r1, r2, lsl #0x6]
	bic     r0, r0, #0x1
	strb    r0, [r1, r2, lsl #0x6]
	add     r2, r2, #0x1
	cmp     r2, #0x20
	blt     branch_37fd028
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fd048

.word 0x3807a3c @ 0x37fd048
.word 0x3807c7c @ 0x37fd04c
.arm
Function_37fd050: @ 37fd050 :arm
	stmfd   sp!, {r4-r10,lr}
	mov     r6, #0x0
	mov     r9, r0
	mov     r5, r6
.arm
branch_37fd060: @ 37fd060 :arm
	mov     r0, #0x24
	mul     r0, r5, r0
	ldr     r2, [pc, #0x138] @ [0x37fd1a8] (=0x3807a3c)
	ldrb    r1, [r2, r0]
	add     r4, r2, r0
	mov     r0, r1, lsl #31
	movs    r0, r0, lsr #31
	beq     branch_37fd184
	mov     r0, r1, lsl #30
	movs    r0, r0, lsr #31
	beq     branch_37fd170
	cmp     r9, #0x0
	beq     branch_37fd13c
	mov     r0, r1, lsl #29
	movs    r0, r0, lsr #31
	bne     branch_37fd13c
	mov     r8, #0x0
	b       branch_37fd0b8
@ 0x37fd0a8

.arm
branch_37fd0a8: @ 37fd0a8 :arm
	ldrh    r0, [r4, #0x1c]
	add     r8, r8, #0x1
	sub     r0, r0, #0xf0
	strh    r0, [r4, #0x1c]
.arm
branch_37fd0b8: @ 37fd0b8 :arm
	ldrh    r0, [r4, #0x1c]
	cmp     r0, #0xf0
	bcs     branch_37fd0a8
	mov     r7, #0x0
	mov     r10, #0x1
	b       branch_37fd0f4
@ 0x37fd0d0

.arm
branch_37fd0d0: @ 37fd0d0 :arm
	mov     r0, r4
	mov     r1, r10
	bl      Function_37fddec
	cmp     r0, #0x0
	beq     branch_37fd0f0
	mov     r0, r4
	bl      Function_37fdbfc
	b       branch_37fd0fc
@ 0x37fd0f0

.arm
branch_37fd0f0: @ 37fd0f0 :arm
	add     r7, r7, #0x1
.arm
branch_37fd0f4: @ 37fd0f4 :arm
	cmp     r7, r8
	blt     branch_37fd0d0
.arm
branch_37fd0fc: @ 37fd0fc :arm
	ldr     r0, [pc, #0xa8] @ [0x37fd1ac] (=0x38074f8)
	ldr     r2, [r0]
	cmp     r2, #0x0
	beq     branch_37fd124
	ldrb    r1, [r4, #0x1]
	mov     r0, #0x24
	mla     r2, r1, r0, r2
	ldr     r0, [r2, #0x40]
	add     r0, r0, r7
	str     r0, [r2, #0x40]
.arm
branch_37fd124: @ 37fd124 :arm
	ldrh    r2, [r4, #0x18]
	ldrh    r1, [r4, #0x1a]
	ldrh    r0, [r4, #0x1c]
	mul     r1, r2, r1
	add     r0, r0, r1, asr #8
	strh    r0, [r4, #0x1c]
.arm
branch_37fd13c: @ 37fd13c :arm
	mov     r8, #0x0
	mov     r7, #0x1
.arm
branch_37fd144: @ 37fd144 :arm
	mov     r0, r4
	mov     r1, r8
	bl      Function_37fdb78
	cmp     r0, #0x0
	beq     branch_37fd164
	mov     r1, r4
	mov     r2, r7
	bl      Function_37fdc94
.arm
branch_37fd164: @ 37fd164 :arm
	add     r8, r8, #0x1
	cmp     r8, #0x10
	blt     branch_37fd144
.arm
branch_37fd170: @ 37fd170 :arm
	ldrb    r0, [r4]
	mov     r0, r0, lsl #31
	movs    r0, r0, lsr #31
	movne   r0, #0x1
	orrne   r6, r6, r0, lsl r5
.arm
branch_37fd184: @ 37fd184 :arm
	add     r5, r5, #0x1
	cmp     r5, #0x10
	blt     branch_37fd060
	ldr     r0, [pc, #0x14] @ [0x37fd1ac] (=0x38074f8)
	ldr     r0, [r0]
	cmp     r0, #0x0
	strne   r6, [r0, #0x4]
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x37fd1a8

.word 0x3807a3c @ 0x37fd1a8
.word 0x38074f8 @ 0x37fd1ac
.arm
Function_37fd1b0: @ 37fd1b0 :arm
	stmfd   sp!, {r3-r9,lr}
	mov     r9, r0
	mov     r0, #0x24
	mul     r5, r9, r0
	ldr     r6, [pc, #0x1b8] @ [0x37fd380] (=0x3807a3c)
	mov     r8, r1
	ldrb    r0, [r6, r5]
	mov     r7, r2
	mov     r0, r0, lsl #31
	mov     r4, r3
	add     r5, r6, r5
	movs    r0, r0, lsr #31
	beq     branch_37fd1ec
	mov     r0, r5
	bl      Function_37fdbfc
.arm
branch_37fd1ec: @ 37fd1ec :arm
	ldrb    r1, [r5]
	mov     r0, #0x78
	bic     r1, r1, #0x4
	strb    r1, [r5]
	str     r4, [r5, #0x20]
	strh    r0, [r5, #0x18]
	mov     r0, #1, 24 @ #0x100
	strh    r0, [r5, #0x1a]
	mov     r0, #0xf0
	strh    r0, [r5, #0x1c]
	mov     r0, #0x7f
	strb    r0, [r5, #0x5]
	mov     r2, #0x0
	strh    r2, [r5, #0x6]
	mov     r0, #0x40
	strb    r0, [r5, #0x4]
	mov     r1, #0xff
.arm
branch_37fd230: @ 37fd230 :arm
	add     r0, r5, r2
	add     r2, r2, #0x1
	strb    r1, [r0, #0x8]
	cmp     r2, #0x10
	blt     branch_37fd230
	ldr     r1, [pc, #0x138] @ [0x37fd384] (=0x38074f8)
	ldr     r3, [r1]
	cmp     r3, #0x0
	beq     branch_37fd290
	ldrb    r2, [r5, #0x1]
	mov     r0, #0x24
	mla     r0, r2, r0, r3
	mov     r6, #0x0
	str     r6, [r0, #0x40]
	mvn     r4, #0x0
	mov     r0, #0x24
.arm
branch_37fd270: @ 37fd270 :arm
	ldr     r2, [r1]
	ldrb    r3, [r5, #0x1]
	mla     r2, r3, r0, r2
	add     r2, r2, r6, lsl #1
	add     r6, r6, #0x1
	strh    r4, [r2, #0x20]
	cmp     r6, #0x10
	blt     branch_37fd270
.arm
branch_37fd290: @ 37fd290 :arm
	bl      Function_37fe980
	movs    r4, r0
	bmi     branch_37fd378
	ldr     r0, [pc, #0xe4] @ [0x37fd388] (=0x3807c7c)
	add     r6, r0, r4, lsl #6
	mov     r0, r6
	bl      Function_37fd9ec
	str     r8, [r6, #0x24]
	add     r0, r8, r7
	str     r0, [r6, #0x28]
	strb    r4, [r5, #0x8]
	ldr     r0, [r6, #0x28]
	bl      Function_37fd880
	mov     r0, r6
	bl      Function_37fd38c
	cmp     r0, #0xfe
	ldrne   r0, [r6, #0x28]
	subne   r0, r0, #0x1
	strne   r0, [r6, #0x28]
	bne     branch_37fd344
	mov     r0, r6
	bl      Function_37fd38c
	mov     r4, r0
	mov     r0, r6
	bl      Function_37fd38c
	orr     r0, r4, r0, lsl #8
	mov     r0, r0, lsl #16
	ldr     r4, [pc, #0x84] @ [0x37fd388] (=0x3807c7c)
	mov     r8, r0, lsr #17
	mov     r7, #0x1
	b       branch_37fd33c
@ 0x37fd30c

.arm
branch_37fd30c: @ 37fd30c :arm
	tst     r8, #0x1
	beq     branch_37fd330
	bl      Function_37fe980
	movs    r6, r0
	bmi     branch_37fd344
	add     r0, r4, r6, lsl #6
	bl      Function_37fd9ec
	add     r0, r5, r7
	strb    r6, [r0, #0x8]
.arm
branch_37fd330: @ 37fd330 :arm
	mov     r0, r8, lsl #15
	add     r7, r7, #0x1
	mov     r8, r0, lsr #16
.arm
branch_37fd33c: @ 37fd33c :arm
	cmp     r8, #0x0
	bne     branch_37fd30c
.arm
branch_37fd344: @ 37fd344 :arm
	ldrb    r1, [r5]
	ldr     r0, [pc, #0x34] @ [0x37fd384] (=0x38074f8)
	bic     r1, r1, #0x1
	ldr     r2, [r0]
	orr     r1, r1, #0x1
	and     r0, r1, #0xff
	bic     r0, r0, #0x2
	strb    r0, [r5]
	cmp     r2, #0x0
	ldrne   r1, [r2, #0x4]
	movne   r0, #0x1
	orrne   r0, r1, r0, lsl r9
	strne   r0, [r2, #0x4]
.arm
branch_37fd378: @ 37fd378 :arm
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x37fd380

.word 0x3807a3c @ 0x37fd380
.word 0x38074f8 @ 0x37fd384
.word 0x3807c7c @ 0x37fd388
.arm
Function_37fd38c: @ 37fd38c :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0x4c] @ [0x37fd3e4] (=0x38074dc)
	mov     r5, r0
	ldr     r4, [r5, #0x28]
	ldr     r0, [r1, #0x4]
	cmp     r4, r0
	bcc     branch_37fd3b4
	ldr     r0, [r1, #0x8]
	cmp     r4, r0
	bcc     branch_37fd3bc
.arm
branch_37fd3b4: @ 37fd3b4 :arm
	mov     r0, r4
	bl      Function_37fd880
.arm
branch_37fd3bc: @ 37fd3bc :arm
	ldr     r0, [pc, #0x20] @ [0x37fd3e4] (=0x38074dc)
	ldr     r1, [r5, #0x28]
	ldr     r2, [r0, #0x4]
	ldr     r0, [pc, #0x18] @ [0x37fd3e8] (=0x38074e8)
	sub     r2, r4, r2
	ldrb    r0, [r0, r2]
	add     r1, r1, #0x1
	str     r1, [r5, #0x28]
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fd3e4

.word 0x38074dc @ 0x37fd3e4
.word 0x38074e8 @ 0x37fd3e8
.arm
Function_37fd3ec: @ 37fd3ec :arm
	mov     r1, #0x24
	mul     r1, r0, r1
	ldr     r2, [pc, #0xc] @ [0x37fd408] (=0x3807a3c)
	ldrb    r0, [r2, r1]
	orr     r0, r0, #0x2
	strb    r0, [r2, r1]
	bx      lr
@ 0x37fd408

.word 0x3807a3c @ 0x37fd408
.arm
Function_37fd40c: @ 37fd40c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_37fd1b0
	mov     r0, #0x24
	mul     r1, r4, r0
	ldr     r2, [pc, #0x10] @ [0x37fd438] (=0x3807a3c)
	ldrb    r0, [r2, r1]
	orr     r0, r0, #0x2
	strb    r0, [r2, r1]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fd438

.word 0x3807a3c @ 0x37fd438
.arm
Function_37fd43c: @ 37fd43c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #0x24
	mul     r1, r4, r0
	ldr     r2, [pc, #0x3c] @ [0x37fd490] (=0x3807a3c)
	ldrb    r0, [r2, r1]
	mov     r0, r0, lsl #31
	movs    r0, r0, lsr #31
	beq     branch_37fd488
	add     r0, r2, r1
	bl      Function_37fdbfc
	ldr     r0, [pc, #0x24] @ [0x37fd494] (=0x38074f8)
	ldr     r2, [r0]
	cmp     r2, #0x0
	movne   r0, #0x1
	ldrne   r1, [r2, #0x4]
	mvnne   r0, r0, lsl r4
	andne   r0, r1, r0
	strne   r0, [r2, #0x4]
.arm
branch_37fd488: @ 37fd488 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fd490

.word 0x3807a3c @ 0x37fd490
.word 0x38074f8 @ 0x37fd494
.arm
Function_37fd498: @ 37fd498 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r2, #0x24
	mul     r4, r0, r2
	ldr     r5, [pc, #0x60] @ [0x37fd50c] (=0x3807a3c)
	and     r0, r1, #0xff
	ldrb    r2, [r5, r4]
	mov     r0, r0, lsl #31
	bic     r2, r2, #0x4
	orr     r0, r2, r0, lsr #29
	strb    r0, [r5, r4]
	cmp     r1, #0x0
	beq     branch_37fd504
	mov     r8, #0x0
	mov     r6, #0x7f
.arm
branch_37fd4d0: @ 37fd4d0 :arm
	mov     r1, r8
	add     r0, r5, r4
	bl      Function_37fdb78
	movs    r7, r0
	beq     branch_37fd4f8
	mov     r2, r6
	add     r1, r5, r4
	bl      Function_37fdadc
	mov     r0, r7
	bl      Function_37fdb44
.arm
branch_37fd4f8: @ 37fd4f8 :arm
	add     r8, r8, #0x1
	cmp     r8, #0x10
	blt     branch_37fd4d0
.arm
branch_37fd504: @ 37fd504 :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37fd50c

.word 0x3807a3c @ 0x37fd50c
.arm
Function_37fd510: @ 37fd510 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r3, [pc, #0xb8] @ [0x37fd5d4] (=0x3807a3c)
	mov     r2, #0x24
	mla     r6, r0, r2, r3
	mov     r8, r1
	mov     r7, #0x0
	mov     r4, #0x7f
.arm
branch_37fd52c: @ 37fd52c :arm
	mov     r0, r6
	mov     r1, r7
	bl      Function_37fdb78
	movs    r5, r0
	beq     branch_37fd554
	mov     r1, r6
	mov     r2, r4
	bl      Function_37fdadc
	mov     r0, r5
	bl      Function_37fdb44
.arm
branch_37fd554: @ 37fd554 :arm
	add     r7, r7, #0x1
	cmp     r7, #0x10
	blt     branch_37fd52c
	bl      Function_37fc0b0
	mov     r4, #0x0
	mov     r5, r4
	b       branch_37fd594
@ 0x37fd570

.arm
branch_37fd570: @ 37fd570 :arm
	mov     r0, r6
	mov     r1, r5
	bl      Function_37fddec
	cmp     r0, #0x0
	beq     branch_37fd590
	mov     r0, r6
	bl      Function_37fdbfc
	b       branch_37fd59c
@ 0x37fd590

.arm
branch_37fd590: @ 37fd590 :arm
	add     r4, r4, #0x1
.arm
branch_37fd594: @ 37fd594 :arm
	cmp     r4, r8
	bcc     branch_37fd570
.arm
branch_37fd59c: @ 37fd59c :arm
	bl      Function_37fc060
	ldr     r0, [pc, #0x30] @ [0x37fd5d8] (=0x38074f8)
	ldr     r3, [r0]
	cmp     r3, #0x0
	beq     branch_37fd5cc
	ldrb    r1, [r6, #0x1]
	mov     r0, #0x24
	mul     r2, r1, r0
	add     r1, r3, #0x40
	ldr     r0, [r1, r2]
	add     r0, r0, r4
	str     r0, [r1, r2]
.arm
branch_37fd5cc: @ 37fd5cc :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37fd5d4

.word 0x3807a3c @ 0x37fd5d4
.word 0x38074f8 @ 0x37fd5d8
.arm
Function_37fd5dc: @ 37fd5dc :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r3, #0x24
	mul     r4, r0, r3
	ldr     r5, [pc, #0x54] @ [0x37fd644] (=0x3807a3c)
	mov     r8, r1
	mov     r7, r2
	mov     r6, #0x0
	b       branch_37fd62c
@ 0x37fd5fc

.arm
branch_37fd5fc: @ 37fd5fc :arm
	tst     r8, #0x1
	beq     branch_37fd624
	mov     r1, r6
	add     r0, r5, r4
	bl      Function_37fdb78
	cmp     r0, #0x0
	beq     branch_37fd624
	mov     r2, r7
	add     r1, r5, r4
	bl      Function_37fe9c4
.arm
branch_37fd624: @ 37fd624 :arm
	add     r6, r6, #0x1
	mov     r8, r8, lsr #1
.arm
branch_37fd62c: @ 37fd62c :arm
	cmp     r6, #0x10
	bge     branch_37fd63c
	cmp     r8, #0x0
	bne     branch_37fd5fc
.arm
branch_37fd63c: @ 37fd63c :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37fd644

.word 0x3807a3c @ 0x37fd644
.arm
Function_37fd648: @ 37fd648 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r3, #0x24
	mul     r4, r0, r3
	mov     r0, r2, lsl #16
	ldr     r5, [pc, #0x54] @ [0x37fd6b4] (=0x3807a3c)
	mov     r7, r1
	mov     r6, #0x0
	mov     r8, r0, lsr #16
	b       branch_37fd69c
@ 0x37fd66c

.arm
branch_37fd66c: @ 37fd66c :arm
	tst     r7, #0x1
	beq     branch_37fd694
	mov     r1, r6
	add     r0, r5, r4
	bl      Function_37fdb78
	cmp     r0, #0x0
	strneh  r8, [r0, #0x1e]
	ldrneb  r1, [r0]
	orrne   r1, r1, #0x80
	strneb  r1, [r0]
.arm
branch_37fd694: @ 37fd694 :arm
	add     r6, r6, #0x1
	mov     r7, r7, lsr #1
.arm
branch_37fd69c: @ 37fd69c :arm
	cmp     r6, #0x10
	bge     branch_37fd6ac
	cmp     r7, #0x0
	bne     branch_37fd66c
.arm
branch_37fd6ac: @ 37fd6ac :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37fd6b4

.word 0x3807a3c @ 0x37fd6b4
.arm
Function_37fd6b8: @ 37fd6b8 :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r6, [pc, #0x7c] @ [0x37fd740] (=0x3807a3c)
	mov     r7, #0x0
	mov     r10, r0
	mov     r9, r1
	mov     r11, r7
	mov     r4, #0x24
.arm
branch_37fd6d4: @ 37fd6d4 :arm
	mul     r5, r7, r4
	ldrb    r0, [r6, r5]
	mov     r0, r0, lsl #31
	movs    r0, r0, lsr #31
	beq     branch_37fd72c
	mov     r8, r11
	b       branch_37fd724
@ 0x37fd6f0

.arm
branch_37fd6f0: @ 37fd6f0 :arm
	mov     r1, r8
	add     r0, r6, r5
	bl      Function_37fdb78
	cmp     r0, #0x0
	beq     branch_37fd720
	ldr     r0, [r0, #0x28]
	cmp     r10, r0
	cmpls   r0, r9
	bhi     branch_37fd720
	add     r0, r6, r5
	bl      Function_37fdbfc
	b       branch_37fd72c
@ 0x37fd720

.arm
branch_37fd720: @ 37fd720 :arm
	add     r8, r8, #0x1
.arm
branch_37fd724: @ 37fd724 :arm
	cmp     r8, #0x10
	blt     branch_37fd6f0
.arm
branch_37fd72c: @ 37fd72c :arm
	add     r7, r7, #0x1
	cmp     r7, #0x10
	blt     branch_37fd6d4
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x37fd740

.word 0x3807a3c @ 0x37fd740
.arm
Function_37fd744: @ 37fd744 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r4, [pc, #0x4c] @ [0x37fd79c] (=0x3807a3c)
	mov     r7, r0
	mov     r6, r1
	mov     r5, #0x0
	mov     r8, #0x24
.arm
branch_37fd75c: @ 37fd75c :arm
	mul     r0, r5, r8
	ldrb    r1, [r4, r0]
	add     r0, r4, r0
	mov     r1, r1, lsl #31
	movs    r1, r1, lsr #31
	beq     branch_37fd788
	ldr     r1, [r0, #0x20]
	cmp     r7, r1
	cmpls   r1, r6
	bhi     branch_37fd788
	bl      Function_37fdbfc
.arm
branch_37fd788: @ 37fd788 :arm
	add     r5, r5, #0x1
	cmp     r5, #0x10
	blt     branch_37fd75c
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37fd79c

.word 0x3807a3c @ 0x37fd79c
.arm
Function_37fd7a0: @ 37fd7a0 :arm
	stmfd   sp!, {r3,lr}
	ldr     lr, [pc, #0x34] @ [0x37fd7e0] (=0x3807a3c)
	mov     r12, #0x24
	mla     r12, r0, r12, lr
	cmp     r3, #0x1
	beq     branch_37fd7cc
	cmp     r3, #0x2
	beq     branch_37fd7d4
	cmp     r3, #0x4
	streq   r2, [r12, r1]
	b       branch_37fd7d8
@ 0x37fd7cc

.arm
branch_37fd7cc: @ 37fd7cc :arm
	strb    r2, [r12, r1]
	b       branch_37fd7d8
@ 0x37fd7d4

.arm
branch_37fd7d4: @ 37fd7d4 :arm
	strh    r2, [r12, r1]
.arm
branch_37fd7d8: @ 37fd7d8 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37fd7e0

.word 0x3807a3c @ 0x37fd7e0
.arm
Function_37fd7e4: @ 37fd7e4 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r4, #0x24
	mul     r5, r0, r4
	mov     r8, r3
	mov     r0, r8, lsl #16
	ldr     r7, [sp, #0x28]
	mov     r10, r1
	mov     r9, r2
	mov     r6, #0x0
	mov     r11, r0, lsr #16
	and     r4, r8, #0xff
	b       branch_37fd864
@ 0x37fd814

.arm
branch_37fd814: @ 37fd814 :arm
	tst     r10, #0x1
	beq     branch_37fd85c
	ldr     r0, [pc, #0x58] @ [0x37fd87c] (=0x3807a3c)
	mov     r1, r6
	add     r0, r0, r5
	bl      Function_37fdb78
	cmp     r0, #0x0
	beq     branch_37fd85c
	cmp     r7, #0x1
	beq     branch_37fd850
	cmp     r7, #0x2
	beq     branch_37fd858
	cmp     r7, #0x4
	streq   r8, [r0, r9]
	b       branch_37fd85c
@ 0x37fd850

.arm
branch_37fd850: @ 37fd850 :arm
	strb    r4, [r0, r9]
	b       branch_37fd85c
@ 0x37fd858

.arm
branch_37fd858: @ 37fd858 :arm
	strh    r11, [r0, r9]
.arm
branch_37fd85c: @ 37fd85c :arm
	add     r6, r6, #0x1
	mov     r10, r10, lsr #1
.arm
branch_37fd864: @ 37fd864 :arm
	cmp     r6, #0x10
	bge     branch_37fd874
	cmp     r10, #0x0
	bne     branch_37fd814
.arm
branch_37fd874: @ 37fd874 :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x37fd87c

.word 0x3807a3c @ 0x37fd87c
.arm
Function_37fd880: @ 37fd880 :arm
	ldr     r1, [pc, #0x30] @ [0x37fd8b8] (=0x38074dc)
	bic     r2, r0, #0x3
	str     r2, [r1, #0x4]
	add     r0, r2, #0x10
	str     r0, [r1, #0x8]
	ldr     r0, [r2]
	str     r0, [r1, #0xc]
	ldr     r0, [r2, #0x4]
	str     r0, [r1, #0x10]
	ldr     r0, [r2, #0x8]
	str     r0, [r1, #0x14]
	ldr     r0, [r2, #0xc]
	str     r0, [r1, #0x18]
	bx      lr
@ 0x37fd8b8

.word 0x38074dc @ 0x37fd8b8
.arm
Function_37fd8bc: @ 37fd8bc :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	bl      Function_37fd38c
	mov     r4, r0
	mov     r0, r5
	bl      Function_37fd38c
	orr     r4, r4, r0, lsl #8
	mov     r0, r5
	bl      Function_37fd38c
	orr     r0, r4, r0, lsl #16
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fd8ec

.arm
Function_37fd8ec: @ 37fd8ec :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r4, r0
	mov     r6, r1
	cmp     r2, #0x4
	addls   pc, pc, r2, lsl #2
	b       branch_37fd9e0
@ 0x37fd904

.arm
Function_37fd904: @ 37fd904 :arm
	b       branch_37fd918
@ 0x37fd908

.arm
Function_37fd908: @ 37fd908 :arm
	b       branch_37fd924
@ 0x37fd90c

.arm
Function_37fd90c: @ 37fd90c :arm
	b       branch_37fd944
@ 0x37fd910

.arm
Function_37fd910: @ 37fd910 :arm
	b       branch_37fd980
@ 0x37fd914

.arm
Function_37fd914: @ 37fd914 :arm
	b       branch_37fd964
@ 0x37fd918

.arm
branch_37fd918: @ 37fd918 :arm
	bl      Function_37fd38c
	mov     r5, r0
	b       branch_37fd9e0
@ 0x37fd924

.arm
branch_37fd924: @ 37fd924 :arm
	bl      Function_37fd38c
	mov     r5, r0
	mov     r0, r4
	bl      Function_37fd38c
	orr     r0, r5, r0, lsl #8
	mov     r0, r0, lsl #16
	mov     r5, r0, lsr #16
	b       branch_37fd9e0
@ 0x37fd944

.arm
branch_37fd944: @ 37fd944 :arm
	mov     r5, #0x0
.arm
branch_37fd948: @ 37fd948 :arm
	mov     r0, r4
	bl      Function_37fd38c
	and     r1, r0, #0x7f
	tst     r0, #0x80
	orr     r5, r1, r5, lsl #7
	bne     branch_37fd948
	b       branch_37fd9e0
@ 0x37fd964

.arm
branch_37fd964: @ 37fd964 :arm
	bl      Function_37fd38c
	mov     r1, r0
	mov     r0, r6
	bl      Function_37fe93c
	cmp     r0, #0x0
	ldrnesh r5, [r0]
	b       branch_37fd9e0
@ 0x37fd980

.arm
branch_37fd980: @ 37fd980 :arm
	bl      Function_37fd38c
	mov     r5, r0
	mov     r0, r4
	bl      Function_37fd38c
	orr     r0, r5, r0, lsl #8
	mov     r0, r0, lsl #16
	mov     r1, r0, lsr #16
	mov     r0, r4
	mov     r5, r1, lsl #16
	bl      Function_37fd38c
	mov     r6, r0
	mov     r0, r4
	bl      Function_37fd38c
	orr     r0, r6, r0, lsl #8
	mov     r0, r0, lsl #16
	mov     r4, r0, lsr #16
	bl      Function_37fbfc0
	mov     r1, r4, lsl #16
	mov     r1, r1, asr #16
	sub     r1, r1, r5, asr #16
	add     r1, r1, #0x1
	mul     r1, r0, r1
	mov     r0, r1, asr #16
	add     r5, r0, r5, asr #16
.arm
branch_37fd9e0: @ 37fd9e0 :arm
	mov     r0, r5
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x37fd9ec

.arm
Function_37fd9ec: @ 37fd9ec :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #0x0
	str     r0, [r4, #0x24]
	str     r0, [r4, #0x28]
	ldrb    r1, [r4]
	mov     r2, #0xff
	orr     r1, r1, #0x2
	bic     r12, r1, #0x4
	strb    r1, [r4]
	and     r1, r12, #0xff
	bic     r3, r1, #0x8
	strb    r12, [r4]
	and     r1, r3, #0xff
	bic     r12, r1, #0x10
	strb    r3, [r4]
	and     r1, r12, #0xff
	bic     r3, r1, #0x20
	and     r1, r3, #0xff
	orr     r1, r1, #0x40
	strb    r12, [r4]
	bic     r1, r1, #0x80
	strb    r1, [r4]
	strb    r0, [r4, #0x3b]
	strh    r0, [r4, #0x2]
	mov     r1, #0x40
	strb    r1, [r4, #0x12]
	mov     r1, #0x7f
	strb    r1, [r4, #0x4]
	strb    r1, [r4, #0x5]
	strh    r0, [r4, #0xa]
	strb    r0, [r4, #0x8]
	strb    r0, [r4, #0x9]
	strb    r0, [r4, #0x6]
	strh    r0, [r4, #0xc]
	strb    r2, [r4, #0xe]
	strb    r2, [r4, #0xf]
	strb    r2, [r4, #0x10]
	strb    r2, [r4, #0x11]
	strb    r1, [r4, #0x1]
	mov     r1, #0x2
	strb    r1, [r4, #0x7]
	mov     r1, #0x3c
	strb    r1, [r4, #0x14]
	strb    r0, [r4, #0x15]
	strh    r0, [r4, #0x16]
	strb    r0, [r4, #0x13]
	add     r0, r2, #255, 24 @ #0xff00
	strh    r0, [r4, #0x1e]
	add     r0, r4, #0x18
	bl      Function_37fce8c
	mov     r0, #0x0
	str     r0, [r4, #0x20]
	str     r0, [r4, #0x3c]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fdacc

.arm
Function_37fdacc: @ 37fdacc :arm
	str     r1, [r0, #0x24]
	add     r1, r1, r2
	str     r1, [r0, #0x28]
	bx      lr
@ 0x37fdadc

.arm
Function_37fdadc: @ 37fdadc :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r2
	mov     r4, r0
	mov     r2, #0x0
	bl      Function_37fdc94
	ldr     r5, [r4, #0x3c]
	and     r6, r7, #0xff
	mov     r4, #0x1
	b       branch_37fdb34
@ 0x37fdb00

.arm
branch_37fdb00: @ 37fdb00 :arm
	mov     r0, r5
	bl      Function_37fca3c
	cmp     r0, #0x0
	beq     branch_37fdb30
	cmp     r7, #0x0
	blt     branch_37fdb24
	mov     r0, r5
	mov     r1, r6
	bl      Function_37fca14
.arm
branch_37fdb24: @ 37fdb24 :arm
	mov     r0, r5
	strb    r4, [r5, #0x22]
	bl      Function_37fca30
.arm
branch_37fdb30: @ 37fdb30 :arm
	ldr     r5, [r5, #0x50]
.arm
branch_37fdb34: @ 37fdb34 :arm
	cmp     r5, #0x0
	bne     branch_37fdb00
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37fdb44

.arm
Function_37fdb44: @ 37fdb44 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	ldr     r4, [r5, #0x3c]
	b       branch_37fdb60
@ 0x37fdb54

.arm
branch_37fdb54: @ 37fdb54 :arm
	mov     r0, r4
	bl      Function_37fcc18
	ldr     r4, [r4, #0x50]
.arm
branch_37fdb60: @ 37fdb60 :arm
	cmp     r4, #0x0
	bne     branch_37fdb54
	mov     r0, #0x0
	str     r0, [r5, #0x3c]
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fdb78

.arm
Function_37fdb78: @ 37fdb78 :arm
	cmp     r1, #0xf
	movgt   r0, #0x0
	bxgt    lr
	add     r0, r0, r1
	ldrb    r1, [r0, #0x8]
	cmp     r1, #0xff
	moveq   r0, #0x0
	ldrne   r0, [pc, #0x4] @ [0x37fdba0] (=0x3807c7c)
	addne   r0, r0, r1, lsl #6
	bx      lr
@ 0x37fdba0

.word 0x3807c7c @ 0x37fdba0
.arm
Function_37fdba4: @ 37fdba4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r4, r1
	bl      Function_37fdb78
	movs    r5, r0
	beq     branch_37fdbf0
	mov     r1, r6
	mvn     r2, #0x0
	bl      Function_37fdadc
	mov     r0, r5
	bl      Function_37fdb44
	add     r12, r6, #0x8
	ldrb    r2, [r12, r4]
	ldr     r3, [pc, #0x18] @ [0x37fdbf8] (=0x3807c7c)
	mov     r0, #0xff
	ldrb    r1, [r3, r2, lsl #0x6]
	bic     r1, r1, #0x1
	strb    r1, [r3, r2, lsl #0x6]
	strb    r0, [r12, r4]
.arm
branch_37fdbf0: @ 37fdbf0 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x37fdbf8

.word 0x3807c7c @ 0x37fdbf8
.arm
Function_37fdbfc: @ 37fdbfc :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, #0x0
.arm
branch_37fdc08: @ 37fdc08 :arm
	mov     r0, r5
	mov     r1, r4
	bl      Function_37fdba4
	add     r4, r4, #0x1
	cmp     r4, #0x10
	blt     branch_37fdc08
	ldrb    r0, [r5]
	bic     r0, r0, #0x1
	strb    r0, [r5]
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fdc34

.arm
Function_37fdc34: @ 37fdc34 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r2
	cmp     r1, #0x1
	bne     branch_37fdc54
	mov     r1, #0x0
	strb    r1, [r5, #0x22]
	bl      Function_37fcc18
.arm
branch_37fdc54: @ 37fdc54 :arm
	ldr     r1, [r4, #0x3c]
	cmp     r1, r5
	ldreq   r0, [r5, #0x50]
	streq   r0, [r4, #0x3c]
	beq     branch_37fdc8c
	b       branch_37fdc80
@ 0x37fdc6c

.arm
branch_37fdc6c: @ 37fdc6c :arm
	cmp     r0, r5
	ldreq   r0, [r5, #0x50]
	streq   r0, [r1, #0x50]
	beq     branch_37fdc8c
	mov     r1, r0
.arm
branch_37fdc80: @ 37fdc80 :arm
	ldr     r0, [r1, #0x50]
	cmp     r0, #0x0
	bne     branch_37fdc6c
.arm
branch_37fdc8c: @ 37fdc8c :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fdc94

.arm
Function_37fdc94: @ 37fdc94 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r0
	ldrb    r0, [r10, #0x7]
	ldrb    r6, [r10, #0x4]
	ldrb    r3, [r10, #0x5]
	ldrb    r11, [r1, #0x5]
	mov     r5, r0, lsl #6
	mov     r8, r3, lsl #1
	ldrb    r4, [r10, #0x1]
	ldrsb   r7, [r10, #0x6]
	mov     r9, r6, lsl #1
	ldr     r0, [pc, #0x120] @ [0x37fdde8] (=0x3806668)
	mul     r6, r7, r5
	mov     r3, r11, lsl #1
	ldrsh   r9, [r0, r9]
	ldrsh   r7, [r0, r8]
	ldrsh   r0, [r0, r3]
	add     r8, r9, r7
	ldrsb   r3, [r10, #0x8]
	cmp     r4, #0x7f
	mulne   r4, r3, r4
	addne   r3, r4, #0x40
	mov     r4, #2, 18 @ #0x8000
	ldrsh   r5, [r10, #0xc]
	mov     r9, r2
	add     r2, r5, r6, asr #7
	ldrsh   r7, [r10, #0xa]
	ldrsh   r1, [r1, #0x6]
	ldrsb   r5, [r10, #0x9]
	movne   r3, r3, asr #7
	add     r0, r0, r8
	rsb     r4, r4, #0x0
	cmp     r0, r4
	movlt   r0, r4
	mov     r4, #2, 18 @ #0x8000
	add     r1, r7, r1
	rsb     r4, r4, #0x0
	cmp     r1, r4
	movlt   r1, r4
	add     r3, r3, r5
	mvn     r4, #0x7f
	cmp     r3, r4
	movlt   r3, r4
	blt     branch_37fdd4c
	cmp     r3, #0x7f
	movgt   r3, #0x7f
.arm
branch_37fdd4c: @ 37fdd4c :arm
	mov     r0, r0, lsl #16
	mov     r2, r2, lsl #16
	mov     r3, r3, lsl #24
	mov     r1, r1, lsl #16
	ldr     r8, [r10, #0x3c]
	mov     r6, r0, asr #16
	mov     r5, r2, asr #16
	mov     r4, r3, asr #24
	mov     r7, r1, asr #16
	mov     r11, #0x1
	b       branch_37fddd8
@ 0x37fdd78

.arm
branch_37fdd78: @ 37fdd78 :arm
	strh    r7, [r8, #0x6]
	ldrb    r0, [r8, #0x2]
	cmp     r0, #0x3
	beq     branch_37fddd4
	strh    r6, [r8, #0xc]
	strh    r5, [r8, #0xe]
	strb    r4, [r8, #0xb]
	ldrb    r0, [r10, #0x1]
	strb    r0, [r8, #0x4]
	ldrh    r0, [r10, #0x18]
	strh    r0, [r8, #0x28]
	ldrh    r0, [r10, #0x1a]
	strh    r0, [r8, #0x2a]
	ldrh    r0, [r10, #0x1c]
	strh    r0, [r8, #0x2c]
	ldr     r0, [r8, #0x34]
	cmp     r0, #0x0
	bne     branch_37fddd4
	cmp     r9, #0x0
	beq     branch_37fddd4
	mov     r0, r8
	strb    r11, [r8, #0x22]
	bl      Function_37fca30
.arm
branch_37fddd4: @ 37fddd4 :arm
	ldr     r8, [r8, #0x50]
.arm
branch_37fddd8: @ 37fddd8 :arm
	cmp     r8, #0x0
	bne     branch_37fdd78
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x37fdde8

.word 0x3806668 @ 0x37fdde8
.arm
Function_37fddec: @ 37fddec :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x24
	mov     r2, #0x0
	str     r2, [sp, #0x10]
	str     r1, [sp, #0x8]
	mov     r7, r0
	mov     r10, r2
.arm
branch_37fde08: @ 37fde08 :arm
	mov     r0, r7
	mov     r1, r10
	bl      Function_37fdb78
	movs    r8, r0
	ldrne   r0, [r8, #0x28]
	cmpne   r0, #0x0
	beq     branch_37fe908
	ldr     r0, [r8, #0x3c]
	b       branch_37fde64
@ 0x37fde2c

.arm
branch_37fde2c: @ 37fde2c :arm
	ldr     r1, [r0, #0x34]
	cmp     r1, #0x0
	subgt   r1, r1, #0x1
	strgt   r1, [r0, #0x34]
	ldrb    r1, [r0, #0x3]
	mov     r1, r1, lsl #29
	movs    r1, r1, lsr #31
	bne     branch_37fde60
	ldr     r2, [r0, #0x14]
	ldr     r1, [r0, #0x18]
	cmp     r2, r1
	addlt   r1, r2, #0x1
	strlt   r1, [r0, #0x14]
.arm
branch_37fde60: @ 37fde60 :arm
	ldr     r0, [r0, #0x50]
.arm
branch_37fde64: @ 37fde64 :arm
	cmp     r0, #0x0
	bne     branch_37fde2c
	ldrb    r1, [r8]
	mov     r0, r1, lsl #27
	movs    r0, r0, lsr #31
	beq     branch_37fde94
	ldr     r0, [r8, #0x3c]
	cmp     r0, #0x0
	movne   r0, #0x0
	bne     branch_37fe8ec
	bic     r0, r1, #0x10
	strb    r0, [r8]
.arm
branch_37fde94: @ 37fde94 :arm
	ldr     r0, [r8, #0x20]
	cmp     r0, #0x0
	subgt   r0, r0, #0x1
	strgt   r0, [r8, #0x20]
	cmpgt   r0, #0x0
	movgt   r0, #0x0
	bgt     branch_37fe8ec
	ldr     r0, [r8, #0x28]
	bl      Function_37fd880
	ldr     r0, [pc, #0xa70] @ [0x37fe930] (=0xffff)
	sub     r11, r0, #1, 16 @ #0x10000
	b       branch_37fe8cc
@ 0x37fdec4

.arm
branch_37fdec4: @ 37fdec4 :arm
	mov     r0, r8
	mov     r9, #0x0
	mov     r4, #0x1
	bl      Function_37fd38c
	mov     r6, r0
	cmp     r6, #0xa2
	bne     branch_37fdef8
	mov     r0, r8
	bl      Function_37fd38c
	mov     r6, r0
	ldrb    r0, [r8]
	mov     r0, r0, lsl #25
	mov     r4, r0, lsr #31
.arm
branch_37fdef8: @ 37fdef8 :arm
	cmp     r6, #0xa0
	bne     branch_37fdf14
	mov     r0, r8
	bl      Function_37fd38c
	mov     r6, r0
	mov     r5, #0x3
	mov     r9, #0x1
.arm
branch_37fdf14: @ 37fdf14 :arm
	cmp     r6, #0xa1
	bne     branch_37fdf30
	mov     r0, r8
	bl      Function_37fd38c
	mov     r6, r0
	mov     r5, #0x4
	mov     r9, #0x1
.arm
branch_37fdf30: @ 37fdf30 :arm
	tst     r6, #0x80
	bne     branch_37fe1b4
	mov     r0, r8
	bl      Function_37fd38c
	cmp     r9, #0x0
	str     r0, [sp, #0xc]
	movne   r2, r5
	moveq   r2, #0x2
	mov     r0, r8
	mov     r1, r7
	bl      Function_37fd8ec
	cmp     r4, #0x0
	mov     r4, r0
	ldrsb   r0, [r8, #0x13]
	add     r9, r6, r0
	beq     branch_37fe8cc
	cmp     r9, #0x0
	movlt   r9, #0x0
	blt     branch_37fdf84
	cmp     r9, #0x7f
	movgt   r9, #0x7f
.arm
branch_37fdf84: @ 37fdf84 :arm
	ldrb    r1, [r8]
	mov     r0, r1, lsl #29
	movs    r0, r0, lsr #31
	bne     branch_37fe188
	ldr     r0, [sp, #0x8]
	cmp     r0, #0x0
	beq     branch_37fe188
	mov     r0, r1, lsl #28
	mov     r6, #0x0
	movs    r0, r0, lsr #31
	ldrne   r6, [r8, #0x3c]
	cmpne   r6, #0x0
	strneb  r9, [r6, #0x8]
	ldrne   r0, [sp, #0xc]
	strneb  r0, [r6, #0x9]
	cmp     r6, #0x0
	bne     branch_37fe0b8
	ldr     r0, [r7, #0x20]
	ldrh    r1, [r8, #0x2]
	mov     r2, r9
	add     r3, sp, #0x16
	bl      Function_37fea44
	cmp     r0, #0x0
	beq     branch_37fe188
	ldrb    r0, [sp, #0x16]
	cmp     r0, #0x4
	addls   pc, pc, r0, lsl #2
	b       branch_37fe188
@ 0x37fdff4

.arm
Function_37fdff4: @ 37fdff4 :arm
	b       branch_37fe188
@ 0x37fdff8

.arm
Function_37fdff8: @ 37fdff8 :arm
	b       branch_37fe008
@ 0x37fdffc

.arm
Function_37fdffc: @ 37fdffc :arm
	b       branch_37fe010
@ 0x37fe000

.arm
Function_37fe000: @ 37fe000 :arm
	b       branch_37fe018
@ 0x37fe004

.arm
Function_37fe004: @ 37fe004 :arm
	b       branch_37fe008
@ 0x37fe008

.arm
branch_37fe008: @ 37fe008 :arm
	ldr     r1, [pc, #0x920] @ [0x37fe930] (=0xffff)
	b       branch_37fe01c
@ 0x37fe010

.arm
branch_37fe010: @ 37fe010 :arm
	mov     r1, #63, 24 @ #0x3f00
	b       branch_37fe01c
@ 0x37fe018

.arm
branch_37fe018: @ 37fe018 :arm
	mov     r1, #3, 18 @ #0xc000
.arm
branch_37fe01c: @ 37fe01c :arm
	ldrh    r0, [r8, #0x1e]
	ldr     r3, [pc, #0x90c] @ [0x37fe934] (=0x37fdc34)
	str     r8, [sp]
	ldrb    r2, [r8]
	and     r0, r1, r0
	mov     r2, r2, lsl #24
	ldrb    r6, [r7, #0x4]
	ldrb    r1, [r8, #0x12]
	mov     r2, r2, lsr #31
	add     r1, r6, r1
	bl      Function_37fca4c
	movs    r6, r0
	beq     branch_37fe188
	ldrb    r0, [r8]
	mov     r0, r0, lsl #28
	movs    r0, r0, lsr #31
	movne   r3, r11
	bne     branch_37fe070
	cmp     r4, #0x0
	movgt   r3, r4
	movle   r3, r11
.arm
branch_37fe070: @ 37fe070 :arm
	ldr     r2, [sp, #0xc]
	ldr     r1, [r7, #0x20]
	mov     r0, r6
	str     r1, [sp]
	add     r1, sp, #0x16
	str     r1, [sp, #0x4]
	mov     r1, r9
	bl      Function_37fec04
	cmp     r0, #0x0
	bne     branch_37fe0ac
	mov     r0, #0x0
	strb    r0, [r6, #0x22]
	mov     r0, r6
	bl      Function_37fcc18
	b       branch_37fe188
@ 0x37fe0ac

.arm
branch_37fe0ac: @ 37fe0ac :arm
	ldr     r0, [r8, #0x3c]
	str     r0, [r6, #0x50]
	str     r6, [r8, #0x3c]
.arm
branch_37fe0b8: @ 37fe0b8 :arm
	ldrb    r1, [r8, #0xe]
	cmp     r1, #0xff
	beq     branch_37fe0cc
	mov     r0, r6
	bl      Function_37fc9d0
.arm
branch_37fe0cc: @ 37fe0cc :arm
	ldrb    r1, [r8, #0xf]
	cmp     r1, #0xff
	beq     branch_37fe0e0
	mov     r0, r6
	bl      Function_37fc9f0
.arm
branch_37fe0e0: @ 37fe0e0 :arm
	ldrb    r1, [r8, #0x10]
	cmp     r1, #0xff
	beq     branch_37fe0f4
	mov     r0, r6
	bl      Function_37fca0c
.arm
branch_37fe0f4: @ 37fe0f4 :arm
	ldrb    r1, [r8, #0x11]
	cmp     r1, #0xff
	beq     branch_37fe108
	mov     r0, r6
	bl      Function_37fca14
.arm
branch_37fe108: @ 37fe108 :arm
	ldrsh   r0, [r8, #0x16]
	strh    r0, [r6, #0x32]
	ldrb    r0, [r8]
	mov     r0, r0, lsl #26
	movs    r0, r0, lsr #31
	beq     branch_37fe138
	ldrsh   r1, [r6, #0x32]
	ldrb    r0, [r8, #0x14]
	sub     r0, r0, r9
	mov     r0, r0, lsl #22
	add     r0, r1, r0, asr #16
	strh    r0, [r6, #0x32]
.arm
branch_37fe138: @ 37fe138 :arm
	ldrb    r0, [r8, #0x15]
	cmp     r0, #0x0
	bne     branch_37fe164
	cmp     r4, #0x0
	movgt   r0, r4
	movle   r0, r11
	str     r0, [r6, #0x18]
	ldrb    r0, [r6, #0x3]
	bic     r0, r0, #0x4
	strb    r0, [r6, #0x3]
	b       branch_37fe180
@ 0x37fe164

.arm
branch_37fe164: @ 37fe164 :arm
	mul     r1, r0, r0
	ldrsh   r0, [r6, #0x32]
	cmp     r0, #0x0
	rsblt   r0, r0, #0x0
	mul     r0, r1, r0
	mov     r0, r0, asr #11
	str     r0, [r6, #0x18]
.arm
branch_37fe180: @ 37fe180 :arm
	mov     r0, #0x0
	str     r0, [r6, #0x14]
.arm
branch_37fe188: @ 37fe188 :arm
	strb    r9, [r8, #0x14]
	ldrb    r0, [r8]
	mov     r0, r0, lsl #30
	movs    r0, r0, lsr #31
	beq     branch_37fe8cc
	str     r4, [r8, #0x20]
	cmp     r4, #0x0
	ldreqb  r0, [r8]
	orreq   r0, r0, #0x10
	streqb  r0, [r8]
	b       branch_37fe8cc
@ 0x37fe1b4

.arm
branch_37fe1b4: @ 37fe1b4 :arm
	and     r0, r6, #0xf0
	cmp     r0, #0xc0
	bgt     branch_37fe1e8
	bge     branch_37fe330
	cmp     r0, #0x90
	bgt     branch_37fe1dc
	bge     branch_37fe254
	cmp     r0, #0x80
	beq     branch_37fe20c
	b       branch_37fe8cc
@ 0x37fe1dc

.arm
branch_37fe1dc: @ 37fe1dc :arm
	cmp     r0, #0xb0
	beq     branch_37fe5e0
	b       branch_37fe8cc
@ 0x37fe1e8

.arm
branch_37fe1e8: @ 37fe1e8 :arm
	cmp     r0, #0xe0
	bgt     branch_37fe200
	bge     branch_37fe58c
	cmp     r0, #0xd0
	beq     branch_37fe330
	b       branch_37fe8cc
@ 0x37fe200

.arm
branch_37fe200: @ 37fe200 :arm
	cmp     r0, #0xf0
	beq     branch_37fe828
	b       branch_37fe8cc
@ 0x37fe20c

.arm
branch_37fe20c: @ 37fe20c :arm
	cmp     r9, #0x0
	movne   r2, r5
	moveq   r2, #0x2
	mov     r0, r8
	mov     r1, r7
	bl      Function_37fd8ec
	cmp     r4, #0x0
	beq     branch_37fe8cc
	cmp     r6, #0x80
	beq     branch_37fe240
	cmp     r6, #0x81
	beq     branch_37fe248
	b       branch_37fe8cc
@ 0x37fe240

.arm
branch_37fe240: @ 37fe240 :arm
	str     r0, [r8, #0x20]
	b       branch_37fe8cc
@ 0x37fe248

.arm
branch_37fe248: @ 37fe248 :arm
	cmp     r0, #1, 16 @ #0x10000
	strlth  r0, [r8, #0x2]
	b       branch_37fe8cc
@ 0x37fe254

.arm
branch_37fe254: @ 37fe254 :arm
	cmp     r6, #0x93
	beq     branch_37fe270
	cmp     r6, #0x94
	beq     branch_37fe2d0
	cmp     r6, #0x95
	beq     branch_37fe2ec
	b       branch_37fe8cc
@ 0x37fe270

.arm
branch_37fe270: @ 37fe270 :arm
	mov     r0, r8
	bl      Function_37fd38c
	mov     r6, r0
	mov     r0, r8
	bl      Function_37fd8bc
	cmp     r4, #0x0
	mov     r9, r0
	beq     branch_37fe8cc
	mov     r1, r6
	mov     r0, r7
	bl      Function_37fdb78
	movs    r4, r0
	cmpne   r4, r8
	beq     branch_37fe8cc
	mov     r1, r7
	mov     r2, r11
	bl      Function_37fdadc
	mov     r0, r4
	bl      Function_37fdb44
	mov     r0, r4
	mov     r2, r9
	ldr     r1, [r8, #0x24]
	bl      Function_37fdacc
	b       branch_37fe8cc
@ 0x37fe2d0

.arm
branch_37fe2d0: @ 37fe2d0 :arm
	mov     r0, r8
	bl      Function_37fd8bc
	cmp     r4, #0x0
	ldrne   r1, [r8, #0x24]
	addne   r0, r1, r0
	strne   r0, [r8, #0x28]
	b       branch_37fe8cc
@ 0x37fe2ec

.arm
branch_37fe2ec: @ 37fe2ec :arm
	mov     r0, r8
	bl      Function_37fd8bc
	cmp     r4, #0x0
	beq     branch_37fe8cc
	ldrb    r1, [r8, #0x3b]
	cmp     r1, #0x3
	bcs     branch_37fe8cc
	add     r1, r8, r1, lsl #2
	ldr     r2, [r8, #0x28]
	str     r2, [r1, #0x2c]
	ldrb    r1, [r8, #0x3b]
	add     r1, r1, #0x1
	strb    r1, [r8, #0x3b]
	ldr     r1, [r8, #0x24]
	add     r0, r1, r0
	str     r0, [r8, #0x28]
	b       branch_37fe8cc
@ 0x37fe330

.arm
branch_37fe330: @ 37fe330 :arm
	cmp     r9, #0x0
	movne   r2, r5
	moveq   r2, #0x0
	mov     r0, r8
	mov     r1, r7
	bl      Function_37fd8ec
	cmp     r4, #0x0
	strb    r0, [sp, #0x14]
	beq     branch_37fe8cc
	sub     r1, r6, #0xc0
	cmp     r1, #0x17
	addls   pc, pc, r1, lsl #2
	b       branch_37fe8cc
@ 0x37fe364

.arm
Function_37fe364: @ 37fe364 :arm
	b       branch_37fe55c
@ 0x37fe368

.arm
Function_37fe368: @ 37fe368 :arm
	b       branch_37fe3c4
@ 0x37fe36c

.arm
Function_37fe36c: @ 37fe36c :arm
	b       branch_37fe3dc
@ 0x37fe370

.arm
Function_37fe370: @ 37fe370 :arm
	b       branch_37fe544
@ 0x37fe374

.arm
Function_37fe374: @ 37fe374 :arm
	b       branch_37fe550
@ 0x37fe378

.arm
Function_37fe378: @ 37fe378 :arm
	b       branch_37fe3e8
@ 0x37fe37c

.arm
Function_37fe37c: @ 37fe37c :arm
	b       branch_37fe3f4
@ 0x37fe380

.arm
Function_37fe380: @ 37fe380 :arm
	b       branch_37fe400
@ 0x37fe384

.arm
Function_37fe384: @ 37fe384 :arm
	b       branch_37fe4c0
@ 0x37fe388

.arm
Function_37fe388: @ 37fe388 :arm
	b       branch_37fe508
@ 0x37fe38c

.arm
Function_37fe38c: @ 37fe38c :arm
	b       branch_37fe428
@ 0x37fe390

.arm
Function_37fe390: @ 37fe390 :arm
	b       branch_37fe434
@ 0x37fe394

.arm
Function_37fe394: @ 37fe394 :arm
	b       branch_37fe440
@ 0x37fe398

.arm
Function_37fe398: @ 37fe398 :arm
	b       branch_37fe44c
@ 0x37fe39c

.arm
Function_37fe39c: @ 37fe39c :arm
	b       branch_37fe528
@ 0x37fe3a0

.arm
Function_37fe3a0: @ 37fe3a0 :arm
	b       branch_37fe41c
@ 0x37fe3a4

.arm
Function_37fe3a4: @ 37fe3a4 :arm
	b       branch_37fe458
@ 0x37fe3a8

.arm
Function_37fe3a8: @ 37fe3a8 :arm
	b       branch_37fe464
@ 0x37fe3ac

.arm
Function_37fe3ac: @ 37fe3ac :arm
	b       branch_37fe470
@ 0x37fe3b0

.arm
Function_37fe3b0: @ 37fe3b0 :arm
	b       branch_37fe47c
@ 0x37fe3b4

.arm
Function_37fe3b4: @ 37fe3b4 :arm
	b       branch_37fe488
@ 0x37fe3b8

.arm
Function_37fe3b8: @ 37fe3b8 :arm
	b       branch_37fe3d0
@ 0x37fe3bc

.arm
Function_37fe3bc: @ 37fe3bc :arm
	b       branch_37fe56c
@ 0x37fe3c0

.arm
Function_37fe3c0: @ 37fe3c0 :arm
	b       branch_37fe4f4
@ 0x37fe3c4

.arm
branch_37fe3c4: @ 37fe3c4 :arm
	and     r0, r0, #0xff
	strb    r0, [r8, #0x4]
	b       branch_37fe8cc
@ 0x37fe3d0

.arm
branch_37fe3d0: @ 37fe3d0 :arm
	and     r0, r0, #0xff
	strb    r0, [r8, #0x5]
	b       branch_37fe8cc
@ 0x37fe3dc

.arm
branch_37fe3dc: @ 37fe3dc :arm
	and     r0, r0, #0xff
	strb    r0, [r7, #0x5]
	b       branch_37fe8cc
@ 0x37fe3e8

.arm
branch_37fe3e8: @ 37fe3e8 :arm
	and     r0, r0, #0xff
	strb    r0, [r8, #0x7]
	b       branch_37fe8cc
@ 0x37fe3f4

.arm
branch_37fe3f4: @ 37fe3f4 :arm
	and     r0, r0, #0xff
	strb    r0, [r8, #0x12]
	b       branch_37fe8cc
@ 0x37fe400

.arm
branch_37fe400: @ 37fe400 :arm
	and     r0, r0, #0xff
	mov     r0, r0, lsl #31
	ldrb    r1, [r8]
	bic     r1, r1, #0x2
	orr     r0, r1, r0, lsr #30
	strb    r0, [r8]
	b       branch_37fe8cc
@ 0x37fe41c

.arm
branch_37fe41c: @ 37fe41c :arm
	and     r0, r0, #0xff
	strb    r0, [r8, #0x15]
	b       branch_37fe8cc
@ 0x37fe428

.arm
branch_37fe428: @ 37fe428 :arm
	and     r0, r0, #0xff
	strb    r0, [r8, #0x1a]
	b       branch_37fe8cc
@ 0x37fe434

.arm
branch_37fe434: @ 37fe434 :arm
	and     r0, r0, #0xff
	strb    r0, [r8, #0x19]
	b       branch_37fe8cc
@ 0x37fe440

.arm
branch_37fe440: @ 37fe440 :arm
	and     r0, r0, #0xff
	strb    r0, [r8, #0x18]
	b       branch_37fe8cc
@ 0x37fe44c

.arm
branch_37fe44c: @ 37fe44c :arm
	and     r0, r0, #0xff
	strb    r0, [r8, #0x1b]
	b       branch_37fe8cc
@ 0x37fe458

.arm
branch_37fe458: @ 37fe458 :arm
	and     r0, r0, #0xff
	strb    r0, [r8, #0xe]
	b       branch_37fe8cc
@ 0x37fe464

.arm
branch_37fe464: @ 37fe464 :arm
	and     r0, r0, #0xff
	strb    r0, [r8, #0xf]
	b       branch_37fe8cc
@ 0x37fe470

.arm
branch_37fe470: @ 37fe470 :arm
	and     r0, r0, #0xff
	strb    r0, [r8, #0x10]
	b       branch_37fe8cc
@ 0x37fe47c

.arm
branch_37fe47c: @ 37fe47c :arm
	and     r0, r0, #0xff
	strb    r0, [r8, #0x11]
	b       branch_37fe8cc
@ 0x37fe488

.arm
branch_37fe488: @ 37fe488 :arm
	ldrb    r1, [r8, #0x3b]
	cmp     r1, #0x3
	bcs     branch_37fe8cc
	add     r2, r8, r1, lsl #2
	and     r1, r0, #0xff
	ldr     r0, [r8, #0x28]
	str     r0, [r2, #0x2c]
	ldrb    r0, [r8, #0x3b]
	add     r0, r8, r0
	strb    r1, [r0, #0x38]
	ldrb    r0, [r8, #0x3b]
	add     r0, r0, #0x1
	strb    r0, [r8, #0x3b]
	b       branch_37fe8cc
@ 0x37fe4c0

.arm
branch_37fe4c0: @ 37fe4c0 :arm
	and     r0, r0, #0xff
	mov     r1, r0, lsl #31
	ldrb    r2, [r8]
	mov     r0, r8
	bic     r2, r2, #0x8
	orr     r1, r2, r1, lsr #28
	strb    r1, [r8]
	mov     r1, r7
	mov     r2, r11
	bl      Function_37fdadc
	mov     r0, r8
	bl      Function_37fdb44
	b       branch_37fe8cc
@ 0x37fe4f4

.arm
branch_37fe4f4: @ 37fe4f4 :arm
	and     r2, r0, #0xff
	mov     r0, r8
	mov     r1, r7
	bl      Function_37fe9c4
	b       branch_37fe8cc
@ 0x37fe508

.arm
branch_37fe508: @ 37fe508 :arm
	and     r1, r0, #0xff
	ldrsb   r0, [r8, #0x13]
	add     r0, r1, r0
	strb    r0, [r8, #0x14]
	ldrb    r0, [r8]
	orr     r0, r0, #0x20
	strb    r0, [r8]
	b       branch_37fe8cc
@ 0x37fe528

.arm
branch_37fe528: @ 37fe528 :arm
	and     r0, r0, #0xff
	mov     r0, r0, lsl #31
	ldrb    r1, [r8]
	bic     r1, r1, #0x20
	orr     r0, r1, r0, lsr #26
	strb    r0, [r8]
	b       branch_37fe8cc
@ 0x37fe544

.arm
branch_37fe544: @ 37fe544 :arm
	ldrsb   r0, [sp, #0x14]
	strb    r0, [r8, #0x13]
	b       branch_37fe8cc
@ 0x37fe550

.arm
branch_37fe550: @ 37fe550 :arm
	ldrsb   r0, [sp, #0x14]
	strb    r0, [r8, #0x6]
	b       branch_37fe8cc
@ 0x37fe55c

.arm
branch_37fe55c: @ 37fe55c :arm
	and     r0, r0, #0xff
	sub     r0, r0, #0x40
	strb    r0, [r8, #0x8]
	b       branch_37fe8cc
@ 0x37fe56c

.arm
branch_37fe56c: @ 37fe56c :arm
	ldr     r1, [pc, #0x3c4] @ [0x37fe938] (=0x38074dc)
	ldr     r1, [r1]
	cmp     r1, #0x0
	beq     branch_37fe8cc
	and     r1, r0, #0xff
	mov     r0, r7
	bl      Function_37fe93c
	b       branch_37fe8cc
@ 0x37fe58c

.arm
branch_37fe58c: @ 37fe58c :arm
	cmp     r9, #0x0
	movne   r2, r5
	moveq   r2, #0x1
	mov     r0, r8
	mov     r1, r7
	bl      Function_37fd8ec
	mov     r0, r0, lsl #16
	cmp     r4, #0x0
	mov     r0, r0, asr #16
	beq     branch_37fe8cc
	cmp     r6, #0xe0
	beq     branch_37fe5d8
	cmp     r6, #0xe1
	beq     branch_37fe5d0
	cmp     r6, #0xe3
	streqh  r0, [r8, #0x16]
	b       branch_37fe8cc
@ 0x37fe5d0

.arm
branch_37fe5d0: @ 37fe5d0 :arm
	strh    r0, [r7, #0x18]
	b       branch_37fe8cc
@ 0x37fe5d8

.arm
branch_37fe5d8: @ 37fe5d8 :arm
	strh    r0, [r8, #0x1c]
	b       branch_37fe8cc
@ 0x37fe5e0

.arm
branch_37fe5e0: @ 37fe5e0 :arm
	mov     r0, r8
	bl      Function_37fd38c
	cmp     r9, #0x0
	movne   r2, r5
	mov     r9, r0
	moveq   r2, #0x1
	mov     r0, r8
	mov     r1, r7
	bl      Function_37fd8ec
	mov     r0, r0, lsl #16
	mov     r1, r9
	mov     r9, r0, asr #16
	mov     r0, r7
	bl      Function_37fe93c
	cmp     r4, #0x0
	mov     r4, r0
	cmpne   r4, #0x0
	beq     branch_37fe8cc
	sub     r0, r6, #0xb0
	cmp     r0, #0xd
	addls   pc, pc, r0, lsl #2
	b       branch_37fe8cc
@ 0x37fe638

.arm
Function_37fe638: @ 37fe638 :arm
	b       branch_37fe670
@ 0x37fe63c

.arm
Function_37fe63c: @ 37fe63c :arm
	b       branch_37fe678
@ 0x37fe640

.arm
Function_37fe640: @ 37fe640 :arm
	b       branch_37fe688
@ 0x37fe644

.arm
Function_37fe644: @ 37fe644 :arm
	b       branch_37fe698
@ 0x37fe648

.arm
Function_37fe648: @ 37fe648 :arm
	b       branch_37fe6a8
@ 0x37fe64c

.arm
Function_37fe64c: @ 37fe64c :arm
	b       branch_37fe6c4
@ 0x37fe650

.arm
Function_37fe650: @ 37fe650 :arm
	b       branch_37fe6e8
@ 0x37fe654

.arm
Function_37fe654: @ 37fe654 :arm
	b       branch_37fe8cc
@ 0x37fe658

.arm
Function_37fe658: @ 37fe658 :arm
	b       branch_37fe720
@ 0x37fe65c

.arm
Function_37fe65c: @ 37fe65c :arm
	b       branch_37fe74c
@ 0x37fe660

.arm
Function_37fe660: @ 37fe660 :arm
	b       branch_37fe778
@ 0x37fe664

.arm
Function_37fe664: @ 37fe664 :arm
	b       branch_37fe7a4
@ 0x37fe668

.arm
Function_37fe668: @ 37fe668 :arm
	b       branch_37fe7d0
@ 0x37fe66c

.arm
Function_37fe66c: @ 37fe66c :arm
	b       branch_37fe7fc
@ 0x37fe670

.arm
branch_37fe670: @ 37fe670 :arm
	strh    r9, [r4]
	b       branch_37fe8cc
@ 0x37fe678

.arm
branch_37fe678: @ 37fe678 :arm
	ldrsh   r0, [r4]
	add     r0, r0, r9
	strh    r0, [r4]
	b       branch_37fe8cc
@ 0x37fe688

.arm
branch_37fe688: @ 37fe688 :arm
	ldrsh   r0, [r4]
	sub     r0, r0, r9
	strh    r0, [r4]
	b       branch_37fe8cc
@ 0x37fe698

.arm
branch_37fe698: @ 37fe698 :arm
	ldrsh   r0, [r4]
	mul     r1, r0, r9
	strh    r1, [r4]
	b       branch_37fe8cc
@ 0x37fe6a8

.arm
branch_37fe6a8: @ 37fe6a8 :arm
	cmp     r9, #0x0
	beq     branch_37fe8cc
	mov     r1, r9
	ldrsh   r0, [r4]
	bl      Function_3806254
	strh    r0, [r4]
	b       branch_37fe8cc
@ 0x37fe6c4

.arm
branch_37fe6c4: @ 37fe6c4 :arm
	cmp     r9, #0x0
	ldrgesh r0, [r4]
	movge   r0, r0, lsl r9
	strgeh  r0, [r4]
	ldrltsh r1, [r4]
	rsblt   r0, r9, #0x0
	movlt   r0, r1, asr r0
	strlth  r0, [r4]
	b       branch_37fe8cc
@ 0x37fe6e8

.arm
branch_37fe6e8: @ 37fe6e8 :arm
	cmp     r9, #0x0
	rsblt   r0, r9, #0x0
	movlt   r0, r0, lsl #16
	mov     r6, #0x0
	movlt   r9, r0, asr #16
	movlt   r6, #0x1
	bl      Function_37fbfc0
	add     r1, r9, #0x1
	mul     r1, r0, r1
	mov     r0, r1, asr #16
	cmp     r6, #0x0
	rsbne   r0, r0, #0x0
	strh    r0, [r4]
	b       branch_37fe8cc
@ 0x37fe720

.arm
branch_37fe720: @ 37fe720 :arm
	ldrsh   r0, [r4]
	ldrb    r1, [r8]
	cmp     r0, r9
	moveq   r0, #0x1
	movne   r0, #0x0
	and     r0, r0, #0xff
	mov     r0, r0, lsl #31
	bic     r1, r1, #0x40
	orr     r0, r1, r0, lsr #25
	strb    r0, [r8]
	b       branch_37fe8cc
@ 0x37fe74c

.arm
branch_37fe74c: @ 37fe74c :arm
	ldrsh   r0, [r4]
	ldrb    r1, [r8]
	cmp     r0, r9
	movge   r0, #0x1
	movlt   r0, #0x0
	and     r0, r0, #0xff
	mov     r0, r0, lsl #31
	bic     r1, r1, #0x40
	orr     r0, r1, r0, lsr #25
	strb    r0, [r8]
	b       branch_37fe8cc
@ 0x37fe778

.arm
branch_37fe778: @ 37fe778 :arm
	ldrsh   r0, [r4]
	ldrb    r1, [r8]
	cmp     r0, r9
	movgt   r0, #0x1
	movle   r0, #0x0
	and     r0, r0, #0xff
	mov     r0, r0, lsl #31
	bic     r1, r1, #0x40
	orr     r0, r1, r0, lsr #25
	strb    r0, [r8]
	b       branch_37fe8cc
@ 0x37fe7a4

.arm
branch_37fe7a4: @ 37fe7a4 :arm
	ldrsh   r0, [r4]
	ldrb    r1, [r8]
	cmp     r0, r9
	movle   r0, #0x1
	movgt   r0, #0x0
	and     r0, r0, #0xff
	mov     r0, r0, lsl #31
	bic     r1, r1, #0x40
	orr     r0, r1, r0, lsr #25
	strb    r0, [r8]
	b       branch_37fe8cc
@ 0x37fe7d0

.arm
branch_37fe7d0: @ 37fe7d0 :arm
	ldrsh   r0, [r4]
	ldrb    r1, [r8]
	cmp     r0, r9
	movlt   r0, #0x1
	movge   r0, #0x0
	and     r0, r0, #0xff
	mov     r0, r0, lsl #31
	bic     r1, r1, #0x40
	orr     r0, r1, r0, lsr #25
	strb    r0, [r8]
	b       branch_37fe8cc
@ 0x37fe7fc

.arm
branch_37fe7fc: @ 37fe7fc :arm
	ldrsh   r0, [r4]
	ldrb    r1, [r8]
	cmp     r0, r9
	movne   r0, #0x1
	moveq   r0, #0x0
	and     r0, r0, #0xff
	mov     r0, r0, lsl #31
	bic     r1, r1, #0x40
	orr     r0, r1, r0, lsr #25
	strb    r0, [r8]
	b       branch_37fe8cc
@ 0x37fe828

.arm
branch_37fe828: @ 37fe828 :arm
	cmp     r4, #0x0
	beq     branch_37fe8cc
	sub     r0, r6, #0xfc
	cmp     r0, #0x3
	addls   pc, pc, r0, lsl #2
	b       branch_37fe8cc
@ 0x37fe840

.arm
Function_37fe840: @ 37fe840 :arm
	b       branch_37fe878
@ 0x37fe844

.arm
Function_37fe844: @ 37fe844 :arm
	b       branch_37fe850
@ 0x37fe848

.arm
Function_37fe848: @ 37fe848 :arm
	b       branch_37fe8cc
@ 0x37fe84c

.arm
Function_37fe84c: @ 37fe84c :arm
	b       branch_37fe8c4
@ 0x37fe850

.arm
branch_37fe850: @ 37fe850 :arm
	ldrb    r0, [r8, #0x3b]
	cmp     r0, #0x0
	beq     branch_37fe8cc
	sub     r0, r0, #0x1
	strb    r0, [r8, #0x3b]
	and     r0, r0, #0xff
	add     r0, r8, r0, lsl #2
	ldr     r0, [r0, #0x2c]
	str     r0, [r8, #0x28]
	b       branch_37fe8cc
@ 0x37fe878

.arm
branch_37fe878: @ 37fe878 :arm
	ldrb    r0, [r8, #0x3b]
	cmp     r0, #0x0
	beq     branch_37fe8cc
	add     r1, r8, r0
	ldrb    r0, [r1, #0x37]
	cmp     r0, #0x0
	beq     branch_37fe8ac
	sub     r0, r0, #0x1
	ands    r0, r0, #0xff
	ldreqb  r0, [r8, #0x3b]
	subeq   r0, r0, #0x1
	streqb  r0, [r8, #0x3b]
	beq     branch_37fe8cc
.arm
branch_37fe8ac: @ 37fe8ac :arm
	strb    r0, [r1, #0x37]
	ldrb    r0, [r8, #0x3b]
	add     r0, r8, r0, lsl #2
	ldr     r0, [r0, #0x28]
	str     r0, [r8, #0x28]
	b       branch_37fe8cc
@ 0x37fe8c4

.arm
branch_37fe8c4: @ 37fe8c4 :arm
	mvn     r0, #0x0
	b       branch_37fe8ec
@ 0x37fe8cc

.arm
branch_37fe8cc: @ 37fe8cc :arm
	ldr     r0, [r8, #0x20]
	cmp     r0, #0x0
	bne     branch_37fe8e8
	ldrb    r0, [r8]
	mov     r0, r0, lsl #27
	movs    r0, r0, lsr #31
	beq     branch_37fdec4
.arm
branch_37fe8e8: @ 37fe8e8 :arm
	mov     r0, #0x0
.arm
branch_37fe8ec: @ 37fe8ec :arm
	cmp     r0, #0x0
	moveq   r0, #0x1
	streq   r0, [sp, #0x10]
	beq     branch_37fe908
	mov     r0, r7
	mov     r1, r10
	bl      Function_37fdba4
.arm
branch_37fe908: @ 37fe908 :arm
	add     r10, r10, #0x1
	cmp     r10, #0x10
	blt     branch_37fde08
	ldr     r0, [sp, #0x10]
	cmp     r0, #0x0
	moveq   r0, #0x1
	movne   r0, #0x0
	add     sp, sp, #0x24
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x37fe930

.word 0xffff @ 0x37fe930
.word 0x37fdc34 @ 0x37fe934
.word 0x38074dc @ 0x37fe938
.arm
Function_37fe93c: @ 37fe93c :arm
	ldr     r2, [pc, #0x38] @ [0x37fe97c] (=0x38074f8)
	ldr     r3, [r2]
	cmp     r3, #0x0
	moveq   r0, #0x0
	bxeq    lr
	cmp     r1, #0x10
	addge   r2, r3, #38, 28 @ #0x260
	subge   r0, r1, #0x10
	addge   r0, r2, r0, lsl #1
	bxge    lr
	ldrb    r2, [r0, #0x1]
	add     r3, r3, #0x20
	mov     r0, #0x24
	mla     r0, r2, r0, r3
	add     r0, r0, r1, lsl #1
	bx      lr
@ 0x37fe97c

.word 0x38074f8 @ 0x37fe97c
.arm
Function_37fe980: @ 37fe980 :arm
	ldr     r12, [pc, #0x38] @ [0x37fe9c0] (=0x3807c7c)
	mov     r0, #0x0
	b       branch_37fe9b0
@ 0x37fe98c

.arm
branch_37fe98c: @ 37fe98c :arm
	ldrb    r1, [r12, r0, lsl #0x6]
	mov     r3, r0, lsl #6
	mov     r2, r1, lsl #31
	movs    r2, r2, lsr #31
	biceq   r1, r1, #0x1
	orreq   r1, r1, #0x1
	streqb  r1, [r12, r3]
	bxeq    lr
	add     r0, r0, #0x1
.arm
branch_37fe9b0: @ 37fe9b0 :arm
	cmp     r0, #0x20
	blt     branch_37fe98c
	mvn     r0, #0x0
	bx      lr
@ 0x37fe9c0

.word 0x3807c7c @ 0x37fe9c0
.arm
Function_37fe9c4: @ 37fe9c4 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	cmp     r2, #0x3
	addls   pc, pc, r2, lsl #2
	b       branch_37fea3c
@ 0x37fe9d8

.arm
Function_37fe9d8: @ 37fe9d8 :arm
	b       branch_37fe9e8
@ 0x37fe9dc

.arm
Function_37fe9dc: @ 37fe9dc :arm
	b       branch_37fe9f8
@ 0x37fe9e0

.arm
Function_37fe9e0: @ 37fe9e0 :arm
	b       branch_37fea08
@ 0x37fe9e4

.arm
Function_37fe9e4: @ 37fe9e4 :arm
	b       branch_37fea20
@ 0x37fe9e8

.arm
branch_37fe9e8: @ 37fe9e8 :arm
	ldrb    r0, [r4]
	bic     r0, r0, #0x4
	strb    r0, [r4]
	b       branch_37fea3c
@ 0x37fe9f8

.arm
branch_37fe9f8: @ 37fe9f8 :arm
	ldrb    r0, [r4]
	orr     r0, r0, #0x4
	strb    r0, [r4]
	b       branch_37fea3c
@ 0x37fea08

.arm
branch_37fea08: @ 37fea08 :arm
	ldrb    r3, [r4]
	mvn     r2, #0x0
	orr     r3, r3, #0x4
	strb    r3, [r4]
	bl      Function_37fdadc
	b       branch_37fea3c
@ 0x37fea20

.arm
branch_37fea20: @ 37fea20 :arm
	ldrb    r3, [r4]
	mov     r2, #0x7f
	orr     r3, r3, #0x4
	strb    r3, [r4]
	bl      Function_37fdadc
	mov     r0, r4
	bl      Function_37fdb44
.arm
branch_37fea3c: @ 37fea3c :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fea44

.arm
Function_37fea44: @ 37fea44 :arm
	stmfd   sp!, {r3-r7,lr}
	movs    r7, r1
	mov     r6, r0
	mov     r5, r2
	mov     r4, r3
	movmi   r0, #0x0
	bmi     branch_37febbc
	bl      Function_37fc0e0
	ldr     r0, [r6, #0x38]
	cmp     r7, r0
	bcc     branch_37fea7c
	bl      Function_37fc0e4
	mov     r0, #0x0
	b       branch_37febbc
@ 0x37fea7c

.arm
branch_37fea7c: @ 37fea7c :arm
	add     r0, r6, r7, lsl #2
	ldr     r1, [r0, #0x3c]
	and     r0, r1, #0xff
	strb    r1, [r4]
	cmp     r0, #0x11
	mov     r1, r1, lsr #8
	addls   pc, pc, r0, lsl #2
	b       branch_37feba8
@ 0x37fea9c

.arm
Function_37fea9c: @ 37fea9c :arm
	b       branch_37feba8
@ 0x37feaa0

.arm
Function_37feaa0: @ 37feaa0 :arm
	b       branch_37feae4
@ 0x37feaa4

.arm
Function_37feaa4: @ 37feaa4 :arm
	b       branch_37feae4
@ 0x37feaa8

.arm
Function_37feaa8: @ 37feaa8 :arm
	b       branch_37feae4
@ 0x37feaac

.arm
Function_37feaac: @ 37feaac :arm
	b       branch_37feae4
@ 0x37feab0

.arm
Function_37feab0: @ 37feab0 :arm
	b       branch_37feae4
@ 0x37feab4

.arm
Function_37feab4: @ 37feab4 :arm
	b       branch_37feba8
@ 0x37feab8

.arm
Function_37feab8: @ 37feab8 :arm
	b       branch_37feba8
@ 0x37feabc

.arm
Function_37feabc: @ 37feabc :arm
	b       branch_37feba8
@ 0x37feac0

.arm
Function_37feac0: @ 37feac0 :arm
	b       branch_37feba8
@ 0x37feac4

.arm
Function_37feac4: @ 37feac4 :arm
	b       branch_37feba8
@ 0x37feac8

.arm
Function_37feac8: @ 37feac8 :arm
	b       branch_37feba8
@ 0x37feacc

.arm
Function_37feacc: @ 37feacc :arm
	b       branch_37feba8
@ 0x37fead0

.arm
Function_37fead0: @ 37fead0 :arm
	b       branch_37feba8
@ 0x37fead4

.arm
Function_37fead4: @ 37fead4 :arm
	b       branch_37feba8
@ 0x37fead8

.arm
Function_37fead8: @ 37fead8 :arm
	b       branch_37feba8
@ 0x37feadc

.arm
Function_37feadc: @ 37feadc :arm
	b       branch_37feb04
@ 0x37feae0

.arm
Function_37feae0: @ 37feae0 :arm
	b       branch_37feb54
@ 0x37feae4

.arm
branch_37feae4: @ 37feae4 :arm
	add     r3, r6, r1
	add     r2, r4, #0x2
	mov     r1, #0x5
.arm
branch_37feaf0: @ 37feaf0 :arm
	ldrh    r0, [r3], #0x2
	subs    r1, r1, #0x1
	strh    r0, [r2], #0x2
	bne     branch_37feaf0
	b       branch_37febb4
@ 0x37feb04

.arm
branch_37feb04: @ 37feb04 :arm
	ldrb    r0, [r6, r1]
	add     r2, r6, r1
	ldrb    r1, [r2, #0x1]
	cmp     r5, r0
	blt     branch_37feb20
	cmp     r5, r1
	ble     branch_37feb2c
.arm
branch_37feb20: @ 37feb20 :arm
	bl      Function_37fc0e4
	mov     r0, #0x0
	b       branch_37febbc
@ 0x37feb2c

.arm
branch_37feb2c: @ 37feb2c :arm
	sub     r1, r5, r0
	mov     r0, #0xc
	mla     r0, r1, r0, r2
	add     r2, r0, #0x2
	mov     r1, #0x6
.arm
branch_37feb40: @ 37feb40 :arm
	ldrh    r0, [r2], #0x2
	subs    r1, r1, #0x1
	strh    r0, [r4], #0x2
	bne     branch_37feb40
	b       branch_37febb4
@ 0x37feb54

.arm
branch_37feb54: @ 37feb54 :arm
	add     r2, r6, r1
	mov     r1, #0x0
	b       branch_37feb78
@ 0x37feb60

.arm
branch_37feb60: @ 37feb60 :arm
	add     r1, r1, #0x1
	cmp     r1, #0x8
	blt     branch_37feb78
	bl      Function_37fc0e4
	mov     r0, #0x0
	b       branch_37febbc
@ 0x37feb78

.arm
branch_37feb78: @ 37feb78 :arm
	ldrb    r0, [r2, r1]
	cmp     r5, r0
	bgt     branch_37feb60
	mov     r0, #0xc
	mla     r0, r1, r0, r2
	add     r2, r0, #0x8
	mov     r1, #0x6
.arm
branch_37feb94: @ 37feb94 :arm
	ldrh    r0, [r2], #0x2
	subs    r1, r1, #0x1
	strh    r0, [r4], #0x2
	bne     branch_37feb94
	b       branch_37febb4
@ 0x37feba8

.arm
branch_37feba8: @ 37feba8 :arm
	bl      Function_37fc0e4
	mov     r0, #0x0
	b       branch_37febbc
@ 0x37febb4

.arm
branch_37febb4: @ 37febb4 :arm
	bl      Function_37fc0e4
	mov     r0, #0x1
.arm
branch_37febbc: @ 37febbc :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37febc4

.arm
Function_37febc4: @ 37febc4 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	bl      Function_37fc0e0
	add     r0, r5, r4, lsl #2
	ldr     r4, [r0, #0x3c]
	cmp     r4, #0x0
	beq     branch_37febf0
	cmp     r4, #2, 8 @ #0x2000000
	addcc   r4, r5, r4
	b       branch_37febf4
@ 0x37febf0

.arm
branch_37febf0: @ 37febf0 :arm
	mov     r4, #0x0
.arm
branch_37febf4: @ 37febf4 :arm
	bl      Function_37fc0e4
	mov     r0, r4
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37fec04

.arm
Function_37fec04: @ 37fec04 :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r5, [sp, #0x24]
	mov     r9, r0
	ldrb    r4, [r5, #0xa]
	ldrb    r0, [r5]
	cmp     r4, #0xff
	mov     r6, r3
	mov     r8, r1
	mov     r7, r2
	mvneq   r6, #0x0
	moveq   r4, #0x0
	cmp     r0, #0x4
	addls   pc, pc, r0, lsl #2
	b       branch_37fece4
@ 0x37fec3c

.arm
Function_37fec3c: @ 37fec3c :arm
	b       branch_37fece4
@ 0x37fec40

.arm
Function_37fec40: @ 37fec40 :arm
	b       branch_37fec50
@ 0x37fec44

.arm
Function_37fec44: @ 37fec44 :arm
	b       branch_37fecc0
@ 0x37fec48

.arm
Function_37fec48: @ 37fec48 :arm
	b       branch_37fecd4
@ 0x37fec4c

.arm
Function_37fec4c: @ 37fec4c :arm
	b       branch_37fec50
@ 0x37fec50

.arm
branch_37fec50: @ 37fec50 :arm
	cmp     r0, #0x1
	bne     branch_37fec94
	ldr     r2, [sp, #0x20]
	ldrh    r0, [r5, #0x4]
	ldrh    r1, [r5, #0x2]
	add     r0, r2, r0, lsl #3
	ldr     r0, [r0, #0x18]
	cmp     r0, #0x0
	moveq   r1, #0x0
	beq     branch_37feca0
	ldr     r2, [r0, #0x38]
	cmp     r1, r2
	movcs   r1, #0x0
	bcs     branch_37feca0
	bl      Function_37febc4
	mov     r1, r0
	b       branch_37feca0
@ 0x37fec94

.arm
branch_37fec94: @ 37fec94 :arm
	ldrh    r1, [r5, #0x4]
	ldrh    r0, [r5, #0x2]
	orr     r1, r0, r1, lsl #16
.arm
branch_37feca0: @ 37feca0 :arm
	cmp     r1, #0x0
	moveq   r0, #0x0
	beq     branch_37fece8
	mov     r0, r9
	mov     r3, r6
	add     r2, r1, #0xc
	bl      Function_37fc85c
	b       branch_37fece8
@ 0x37fecc0

.arm
branch_37fecc0: @ 37fecc0 :arm
	ldrh    r1, [r5, #0x2]
	mov     r0, r9
	mov     r2, r6
	bl      Function_37fc898
	b       branch_37fece8
@ 0x37fecd4

.arm
branch_37fecd4: @ 37fecd4 :arm
	mov     r0, r9
	mov     r1, r6
	bl      Function_37fc8e4
	b       branch_37fece8
@ 0x37fece4

.arm
branch_37fece4: @ 37fece4 :arm
	mov     r0, #0x0
.arm
branch_37fece8: @ 37fece8 :arm
	cmp     r0, #0x0
	moveq   r0, #0x0
	beq     branch_37fed44
	strb    r8, [r9, #0x8]
	ldrb    r1, [r5, #0x6]
	mov     r0, r9
	strb    r1, [r9, #0x5]
	strb    r7, [r9, #0x9]
	ldrb    r1, [r5, #0x7]
	bl      Function_37fc9d0
	ldrb    r1, [r5, #0x8]
	mov     r0, r9
	bl      Function_37fc9f0
	ldrb    r1, [r5, #0x9]
	mov     r0, r9
	bl      Function_37fca0c
	mov     r0, r9
	mov     r1, r4
	bl      Function_37fca14
	ldrb    r1, [r5, #0xb]
	mov     r0, #0x1
	sub     r1, r1, #0x40
	strb    r1, [r9, #0xa]
.arm
branch_37fed44: @ 37fed44 :arm
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x37fed4c

.arm
Function_37fed4c: @ 37fed4c :arm
	ldr     r12, [pc, #0x14] @ [0x37fed68] (=0x38074f8)
	mov     r3, #0x24
	ldr     r12, [r12]
	mla     r3, r0, r3, r12
	add     r0, r3, r1, lsl #1
	strh    r2, [r0, #0x20]
	bx      lr
@ 0x37fed68

.word 0x38074f8 @ 0x37fed68
.arm
Function_37fed6c: @ 37fed6c :arm
	ldr     r2, [pc, #0x10] @ [0x37fed84] (=0x38074f8)
	ldr     r2, [r2]
	add     r0, r2, r0, lsl #1
	add     r0, r0, #2, 24 @ #0x200
	strh    r1, [r0, #0x60]
	bx      lr
@ 0x37fed84

.word 0x38074f8 @ 0x37fed84
.arm
Function_37fed88: @ 37fed88 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r0, [pc, #0x88] @ [0x37fee1c] (=0x38074f8)
	mov     r4, #0x0
	ldr     r0, [r0]
	mov     r5, r4
	cmp     r0, #0x0
	beq     branch_37fee14
	mov     r7, r4
	mov     r6, #0x1
.arm
branch_37fedac: @ 37fedac :arm
	mov     r0, r7
	bl      Function_37fbc4c
	cmp     r0, #0x0
	orrne   r0, r4, r6, lsl r7
	movne   r0, r0, lsl #16
	add     r7, r7, #0x1
	movne   r4, r0, lsr #16
	cmp     r7, #0x10
	blt     branch_37fedac
	mov     r0, #0x0
	bl      Function_37fc248
	cmp     r0, #0x0
	orrne   r0, r5, #0x1
	movne   r0, r0, lsl #16
	movne   r5, r0, lsr #16
	mov     r0, #0x1
	bl      Function_37fc248
	cmp     r0, #0x0
	orrne   r0, r5, #0x2
	movne   r0, r0, lsl #16
	movne   r5, r0, lsr #16
	ldr     r0, [pc, #0x14] @ [0x37fee1c] (=0x38074f8)
	ldr     r1, [r0]
	strh    r4, [r1, #0x8]
	ldr     r0, [r0]
	strh    r5, [r0, #0xa]
.arm
branch_37fee14: @ 37fee14 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37fee1c

.word 0x38074f8 @ 0x37fee1c
.arm
Function_37fee20: @ 37fee20 :arm
	ldr     r1, [pc, #0x20] @ [0x37fee48] (=0x38074fc)
	mov     r3, #0x0
	mov     r2, r3
.arm
branch_37fee2c: @ 37fee2c :arm
	add     r0, r1, r3, lsl #6
	strb    r2, [r0, #0xf80]
	add     r3, r3, #0x1
	strb    r2, [r0, #0xf81]
	cmp     r3, #0x8
	blt     branch_37fee2c
	bx      lr
@ 0x37fee48

.word 0x38074fc @ 0x37fee48
.arm
Function_37fee4c: @ 37fee4c :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     lr, [pc, #0x4c] @ [0x37feea4] (=0x380847c)
	ldr     r4, [sp, #0x18]
	ldrb    r12, [lr, r0, lsl #0x6]
	mov     r7, r1
	mov     r6, r2
	mov     r5, r3
	cmp     r12, #0x0
	add     r8, lr, r0, lsl #6
	beq     branch_37fee84
	add     r0, r8, #0x14
	bl      Function_37fa664
	mov     r0, #0x0
	strb    r0, [r8]
.arm
branch_37fee84: @ 37fee84 :arm
	str     r7, [r8, #0x4]
	str     r6, [r8, #0x8]
	str     r5, [r8, #0xc]
	ldr     r0, [sp, #0x1c]
	str     r4, [r8, #0x10]
	strb    r0, [r8, #0x1]
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37feea4

.word 0x380847c @ 0x37feea4
.arm
Function_37feea8: @ 37feea8 :arm
	stmfd   sp!, {r4-r9,lr}
	sub     sp, sp, #0xc
	ldr     r1, [pc, #0xa4] @ [0x37fef5c] (=0x380847c)
	mov     r9, r0
	ldrb    r0, [r1, r9, lsl #0x6]
	add     r8, r1, r9, lsl #6
	cmp     r0, #0x0
	beq     branch_37feed8
	add     r0, r8, #0x14
	bl      Function_37fa664
	mov     r0, #0x0
	strb    r0, [r8]
.arm
branch_37feed8: @ 37feed8 :arm
	ldrb    r1, [r8, #0x1]
	ldr     r7, [r8, #0xc]
	ldr     r6, [r8, #0x10]
	add     r0, r8, #0x14
	ldr     r5, [r8, #0x4]
	ldr     r4, [r8, #0x8]
	orr     r9, r9, r1, lsl #8
	bl      Function_37fa444
	cmp     r6, #0x0
	cmpeq   r7, #0x0
	bne     branch_37fef20
	ldr     r3, [pc, #0x54] @ [0x37fef60] (=0x37fefa4)
	mov     r1, r5
	mov     r2, r4
	add     r0, r8, #0x14
	str     r9, [sp]
	bl      Function_37fa580
	b       branch_37fef48
@ 0x37fef20

.arm
branch_37fef20: @ 37fef20 :arm
	bl      Function_37fa2c0
	ldr     r2, [pc, #0x34] @ [0x37fef60] (=0x37fefa4)
	adds    r0, r5, r0
	stmfa   sp, {r2,r9}
	adc     r2, r4, r1
	mov     r1, r0
	mov     r3, r7
	add     r0, r8, #0x14
	str     r6, [sp]
	bl      Function_37fa5f0
.arm
branch_37fef48: @ 37fef48 :arm
	mov     r0, #0x1
	strb    r0, [r8]
	add     sp, sp, #0xc
	ldmfd   sp!, {r4-r9,lr}
	bx      lr
@ 0x37fef5c

.word 0x380847c @ 0x37fef5c
.word 0x37fefa4 @ 0x37fef60
.arm
Function_37fef64: @ 37fef64 :arm
	stmfd   sp!, {r4,lr}
	ldr     r2, [pc, #0x30] @ [0x37fefa0] (=0x380847c)
	ldrb    r1, [r2, r0, lsl #0x6]
	add     r4, r2, r0, lsl #6
	cmp     r1, #0x0
	beq     branch_37fef98
	add     r0, r4, #0x14
	bl      Function_37fa664
	ldrb    r1, [r4, #0x1]
	mov     r0, #0x0
	add     r1, r1, #0x1
	strb    r1, [r4, #0x1]
	strb    r0, [r4]
.arm
branch_37fef98: @ 37fef98 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37fefa0

.word 0x380847c @ 0x37fefa0
.arm
Function_37fefa4: @ 37fefa4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, #0x7
	mov     r4, #0x0
.arm
branch_37fefb4: @ 37fefb4 :arm
	mov     r0, r5
	mov     r1, r6
	mov     r2, r4
	bl      Function_37fb50c
	cmp     r0, #0x0
	blt     branch_37fefb4
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x37fefd4

.arm
Function_37fefd4: @ 37fefd4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x28] @ [0x37ff008] (=0x380867c)
	ldr     r1, [pc, #0x28] @ [0x37ff00c] (=0x380869c)
	mov     r2, #0x8
	bl      Function_37f9750
	ldr     r1, [pc, #0x20] @ [0x37ff010] (=0x37ff6c8)
	mov     r0, #0x7
	bl      Function_37fb498
	ldr     r0, [pc, #0x18] @ [0x37ff014] (=0x38074f8)
	mov     r1, #0x0
	str     r1, [r0]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37ff008

.word 0x380867c @ 0x37ff008
.word 0x380869c @ 0x37ff00c
.word 0x37ff6c8 @ 0x37ff010
.word 0x38074f8 @ 0x37ff014
.arm
Function_37ff018: @ 37ff018 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x34
	b       branch_37ff690
@ 0x37ff024

.arm
branch_37ff024: @ 37ff024 :arm
	ldr     r10, [pc, #0x688] @ [0x37ff6b4] (=0x4000509)
	ldr     r6, [sp, #0x18]
	sub     r4, r10, #0x1
	b       branch_37ff674
@ 0x37ff034

.arm
branch_37ff034: @ 37ff034 :arm
	add     r5, sp, #0x1c
	ldmia   r6!, {r0-r3}
	stmia   r5!, {r0-r3}
	ldmia   r6, {r0,r1}
	stmia   r5, {r0,r1}
	ldr     r0, [sp, #0x20]
	cmp     r0, #0x21
	addls   pc, pc, r0, lsl #2
	b       branch_37ff670
@ 0x37ff058

.arm
Function_37ff058: @ 37ff058 :arm
	b       branch_37ff0e0
@ 0x37ff05c

.arm
Function_37ff05c: @ 37ff05c :arm
	b       branch_37ff0f8
@ 0x37ff060

.arm
Function_37ff060: @ 37ff060 :arm
	b       branch_37ff104
@ 0x37ff064

.arm
Function_37ff064: @ 37ff064 :arm
	b       branch_37ff11c
@ 0x37ff068

.arm
Function_37ff068: @ 37ff068 :arm
	b       branch_37ff128
@ 0x37ff06c

.arm
Function_37ff06c: @ 37ff06c :arm
	b       branch_37ff138
@ 0x37ff070

.arm
Function_37ff070: @ 37ff070 :arm
	b       branch_37ff148
@ 0x37ff074

.arm
Function_37ff074: @ 37ff074 :arm
	b       branch_37ff160
@ 0x37ff078

.arm
Function_37ff078: @ 37ff078 :arm
	b       branch_37ff188
@ 0x37ff07c

.arm
Function_37ff07c: @ 37ff07c :arm
	b       branch_37ff19c
@ 0x37ff080

.arm
Function_37ff080: @ 37ff080 :arm
	b       branch_37ff1b0
@ 0x37ff084

.arm
Function_37ff084: @ 37ff084 :arm
	b       branch_37ff1cc
@ 0x37ff088

.arm
Function_37ff088: @ 37ff088 :arm
	b       branch_37ff1e4
@ 0x37ff08c

.arm
Function_37ff08c: @ 37ff08c :arm
	b       branch_37ff2ac
@ 0x37ff090

.arm
Function_37ff090: @ 37ff090 :arm
	b       branch_37ff488
@ 0x37ff094

.arm
Function_37ff094: @ 37ff094 :arm
	b       branch_37ff508
@ 0x37ff098

.arm
Function_37ff098: @ 37ff098 :arm
	b       branch_37ff540
@ 0x37ff09c

.arm
Function_37ff09c: @ 37ff09c :arm
	b       branch_37ff350
@ 0x37ff0a0

.arm
Function_37ff0a0: @ 37ff0a0 :arm
	b       branch_37ff398
@ 0x37ff0a4

.arm
Function_37ff0a4: @ 37ff0a4 :arm
	b       branch_37ff3c0
@ 0x37ff0a8

.arm
Function_37ff0a8: @ 37ff0a8 :arm
	b       branch_37ff400
@ 0x37ff0ac

.arm
Function_37ff0ac: @ 37ff0ac :arm
	b       branch_37ff448
@ 0x37ff0b0

.arm
Function_37ff0b0: @ 37ff0b0 :arm
	b       branch_37ff570
@ 0x37ff0b4

.arm
Function_37ff0b4: @ 37ff0b4 :arm
	b       branch_37ff57c
@ 0x37ff0b8

.arm
Function_37ff0b8: @ 37ff0b8 :arm
	b       branch_37ff588
@ 0x37ff0bc

.arm
Function_37ff0bc: @ 37ff0bc :arm
	b       branch_37ff594
@ 0x37ff0c0

.arm
Function_37ff0c0: @ 37ff0c0 :arm
	b       branch_37ff5ac
@ 0x37ff0c4

.arm
Function_37ff0c4: @ 37ff0c4 :arm
	b       branch_37ff5bc
@ 0x37ff0c8

.arm
Function_37ff0c8: @ 37ff0c8 :arm
	b       branch_37ff5cc
@ 0x37ff0cc

.arm
Function_37ff0cc: @ 37ff0cc :arm
	b       branch_37ff60c
@ 0x37ff0d0

.arm
Function_37ff0d0: @ 37ff0d0 :arm
	b       branch_37ff5dc
@ 0x37ff0d4

.arm
Function_37ff0d4: @ 37ff0d4 :arm
	b       branch_37ff5ec
@ 0x37ff0d8

.arm
Function_37ff0d8: @ 37ff0d8 :arm
	b       branch_37ff5fc
@ 0x37ff0dc

.arm
Function_37ff0dc: @ 37ff0dc :arm
	b       branch_37ff61c
@ 0x37ff0e0

.arm
branch_37ff0e0: @ 37ff0e0 :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	ldr     r2, [sp, #0x2c]
	ldr     r3, [sp, #0x30]
	bl      Function_37fd40c
	b       branch_37ff670
@ 0x37ff0f8

.arm
branch_37ff0f8: @ 37ff0f8 :arm
	ldr     r0, [sp, #0x24]
	bl      Function_37fd43c
	b       branch_37ff670
@ 0x37ff104

.arm
branch_37ff104: @ 37ff104 :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	ldr     r2, [sp, #0x2c]
	ldr     r3, [sp, #0x30]
	bl      Function_37fd1b0
	b       branch_37ff670
@ 0x37ff11c

.arm
branch_37ff11c: @ 37ff11c :arm
	ldr     r0, [sp, #0x24]
	bl      Function_37fd3ec
	b       branch_37ff670
@ 0x37ff128

.arm
branch_37ff128: @ 37ff128 :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	bl      Function_37fd498
	b       branch_37ff670
@ 0x37ff138

.arm
branch_37ff138: @ 37ff138 :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	bl      Function_37fd510
	b       branch_37ff670
@ 0x37ff148

.arm
branch_37ff148: @ 37ff148 :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	ldr     r2, [sp, #0x2c]
	ldr     r3, [sp, #0x30]
	bl      Function_37fd7a0
	b       branch_37ff670
@ 0x37ff160

.arm
branch_37ff160: @ 37ff160 :arm
	ldr     r1, [sp, #0x24]
	mov     r0, r1, lsr #24
	and     r0, r0, #0xff
	str     r0, [sp]
	bic     r0, r1, #255, 8 @ #0xff000000
	ldr     r1, [sp, #0x28]
	ldr     r2, [sp, #0x2c]
	ldr     r3, [sp, #0x30]
	bl      Function_37fd7e4
	b       branch_37ff670
@ 0x37ff188

.arm
branch_37ff188: @ 37ff188 :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	ldr     r2, [sp, #0x2c]
	bl      Function_37fd5dc
	b       branch_37ff670
@ 0x37ff19c

.arm
branch_37ff19c: @ 37ff19c :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	ldr     r2, [sp, #0x2c]
	bl      Function_37fd648
	b       branch_37ff670
@ 0x37ff1b0

.arm
branch_37ff1b0: @ 37ff1b0 :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	ldr     r2, [sp, #0x2c]
	mov     r2, r2, lsl #16
	mov     r2, r2, asr #16
	bl      Function_37fed4c
	b       branch_37ff670
@ 0x37ff1cc

.arm
branch_37ff1cc: @ 37ff1cc :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	mov     r1, r1, lsl #16
	mov     r1, r1, asr #16
	bl      Function_37fed6c
	b       branch_37ff670
@ 0x37ff1e4

.arm
branch_37ff1e4: @ 37ff1e4 :arm
	ldr     r7, [sp, #0x2c]
	ldr     r6, [sp, #0x28]
	ldr     r5, [sp, #0x24]
	bl      Function_37fada4
	mov     r8, r0
	mov     r2, #0x0
	b       branch_37ff220
@ 0x37ff200

.arm
branch_37ff200: @ 37ff200 :arm
	tst     r5, #0x1
	movne   r0, r2, lsl #4
	addne   r0, r0, #1, 6 @ #0x4000000
	ldrneb  r1, [r0, #0x403]
	add     r2, r2, #0x1
	orrne   r1, r1, #0x80
	strneb  r1, [r0, #0x403]
	mov     r5, r5, lsr #1
.arm
branch_37ff220: @ 37ff220 :arm
	cmp     r2, #0x10
	bge     branch_37ff230
	cmp     r5, #0x0
	bne     branch_37ff200
.arm
branch_37ff230: @ 37ff230 :arm
	tst     r6, #0x1
	beq     branch_37ff25c
	tst     r6, #0x2
	ldrneh  r1, [r4]
	orrne   r0, r1, #0x80
	orrne   r0, r0, #2, 18 @ #0x8000
	strneh  r0, [r4]
	ldreqb  r0, [r4]
	orreq   r0, r0, #0x80
	streqb  r0, [r4]
	b       branch_37ff26c
@ 0x37ff25c

.arm
branch_37ff25c: @ 37ff25c :arm
	tst     r6, #0x2
	ldrneb  r0, [r10]
	orrne   r0, r0, #0x80
	strneb  r0, [r10]
.arm
branch_37ff26c: @ 37ff26c :arm
	mov     r5, #0x0
	b       branch_37ff28c
@ 0x37ff274

.arm
branch_37ff274: @ 37ff274 :arm
	tst     r7, #0x1
	beq     branch_37ff284
	mov     r0, r5
	bl      Function_37feea8
.arm
branch_37ff284: @ 37ff284 :arm
	add     r5, r5, #0x1
	mov     r7, r7, lsr #1
.arm
branch_37ff28c: @ 37ff28c :arm
	cmp     r5, #0x8
	bge     branch_37ff29c
	cmp     r7, #0x0
	bne     branch_37ff274
.arm
branch_37ff29c: @ 37ff29c :arm
	mov     r0, r8
	bl      Function_37fadb8
	bl      Function_37fed88
	b       branch_37ff670
@ 0x37ff2ac

.arm
branch_37ff2ac: @ 37ff2ac :arm
	ldr     r9, [sp, #0x30]
	ldr     r7, [sp, #0x2c]
	ldr     r6, [sp, #0x28]
	ldr     r5, [sp, #0x24]
	bl      Function_37fada4
	mov     r11, r0
	mov     r8, #0x0
	b       branch_37ff2e4
@ 0x37ff2cc

.arm
branch_37ff2cc: @ 37ff2cc :arm
	tst     r7, #0x1
	beq     branch_37ff2dc
	mov     r0, r8
	bl      Function_37fef64
.arm
branch_37ff2dc: @ 37ff2dc :arm
	add     r8, r8, #0x1
	mov     r7, r7, lsr #1
.arm
branch_37ff2e4: @ 37ff2e4 :arm
	cmp     r8, #0x8
	bge     branch_37ff2f4
	cmp     r7, #0x0
	bne     branch_37ff2cc
.arm
branch_37ff2f4: @ 37ff2f4 :arm
	mov     r7, #0x0
	b       branch_37ff318
@ 0x37ff2fc

.arm
branch_37ff2fc: @ 37ff2fc :arm
	tst     r5, #0x1
	beq     branch_37ff310
	mov     r0, r7
	mov     r1, r9
	bl      Function_37fbb1c
.arm
branch_37ff310: @ 37ff310 :arm
	add     r7, r7, #0x1
	mov     r5, r5, lsr #1
.arm
branch_37ff318: @ 37ff318 :arm
	cmp     r7, #0x10
	bge     branch_37ff328
	cmp     r5, #0x0
	bne     branch_37ff2fc
.arm
branch_37ff328: @ 37ff328 :arm
	tst     r6, #0x1
	movne   r0, #0x0
	strneb  r0, [r4]
	tst     r6, #0x2
	movne   r0, #0x0
	strneb  r0, [r10]
	mov     r0, r11
	bl      Function_37fadb8
	bl      Function_37fed88
	b       branch_37ff670
@ 0x37ff350

.arm
branch_37ff350: @ 37ff350 :arm
	ldr     r1, [sp, #0x2c]
	mov     r0, r1, lsr #29
	and     r0, r0, #0x1
	str     r0, [sp]
	mov     r0, r1, lsr #28
	and     r0, r0, #0x1
	str     r0, [sp, #0x4]
	mov     r0, r1, lsr #27
	and     r0, r0, #0x1
	str     r0, [sp, #0x8]
	mov     r0, r1, lsr #31
	and     r0, r0, #0x1
	mov     r1, r1, lsr #30
	and     r1, r1, #0x1
	ldr     r2, [sp, #0x24]
	ldr     r3, [sp, #0x28]
	bl      Function_37fc1f8
	b       branch_37ff670
@ 0x37ff398

.arm
branch_37ff398: @ 37ff398 :arm
	ldr     r0, [sp, #0x30]
	mov     r2, #0x0
	str     r0, [sp, #0x4]
	ldr     r3, [sp, #0x2c]
	mov     r0, #0x0
	str     r0, [sp]
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	bl      Function_37fee4c
	b       branch_37ff670
@ 0x37ff3c0

.arm
branch_37ff3c0: @ 37ff3c0 :arm
	ldr     r6, [sp, #0x28]
	ldr     r5, [sp, #0x24]
	mov     r7, #0x0
	b       branch_37ff3ec
@ 0x37ff3d0

.arm
branch_37ff3d0: @ 37ff3d0 :arm
	tst     r5, #0x1
	beq     branch_37ff3e4
	mov     r0, r7
	mov     r1, r6
	bl      Function_37fbbbc
.arm
branch_37ff3e4: @ 37ff3e4 :arm
	add     r7, r7, #0x1
	mov     r5, r5, lsr #1
.arm
branch_37ff3ec: @ 37ff3ec :arm
	cmp     r7, #0x10
	bge     branch_37ff670
	cmp     r5, #0x0
	bne     branch_37ff3d0
	b       branch_37ff670
@ 0x37ff400

.arm
branch_37ff400: @ 37ff400 :arm
	ldr     r7, [sp, #0x2c]
	ldr     r6, [sp, #0x28]
	ldr     r5, [sp, #0x24]
	mov     r8, #0x0
	b       branch_37ff434
@ 0x37ff414

.arm
branch_37ff414: @ 37ff414 :arm
	tst     r5, #0x1
	beq     branch_37ff42c
	mov     r0, r8
	mov     r1, r6
	mov     r2, r7
	bl      Function_37fbb44
.arm
branch_37ff42c: @ 37ff42c :arm
	add     r8, r8, #0x1
	mov     r5, r5, lsr #1
.arm
branch_37ff434: @ 37ff434 :arm
	cmp     r8, #0x10
	bge     branch_37ff670
	cmp     r5, #0x0
	bne     branch_37ff414
	b       branch_37ff670
@ 0x37ff448

.arm
branch_37ff448: @ 37ff448 :arm
	ldr     r6, [sp, #0x28]
	ldr     r5, [sp, #0x24]
	mov     r7, #0x0
	b       branch_37ff474
@ 0x37ff458

.arm
branch_37ff458: @ 37ff458 :arm
	tst     r5, #0x1
	beq     branch_37ff46c
	mov     r0, r7
	mov     r1, r6
	bl      Function_37fbbd4
.arm
branch_37ff46c: @ 37ff46c :arm
	add     r7, r7, #0x1
	mov     r5, r5, lsr #1
.arm
branch_37ff474: @ 37ff474 :arm
	cmp     r7, #0x10
	bge     branch_37ff670
	cmp     r5, #0x0
	bne     branch_37ff458
	b       branch_37ff670
@ 0x37ff488

.arm
branch_37ff488: @ 37ff488 :arm
	ldr     r3, [sp, #0x30]
	ldr     r0, [sp, #0x24]
	mov     r1, r3, lsl #16
	ldr     r2, [sp, #0x2c]
	mov     r1, r1, lsr #16
	str     r1, [sp]
	ldr     r1, [pc, #0x210] @ [0x37ff6b8] (=0x3fffff)
	and     r1, r2, r1
	str     r1, [sp, #0x4]
	mov     r1, r2, lsr #24
	and     r1, r1, #0x7f
	str     r1, [sp, #0x8]
	mov     r1, r2, lsr #22
	and     r1, r1, #0x3
	str     r1, [sp, #0xc]
	mov     r1, r0, lsr #16
	mov     r1, r1, lsl #16
	mov     r1, r1, lsr #16
	str     r1, [sp, #0x10]
	mov     r1, r3, lsr #16
	mov     r2, r3, lsr #24
	and     r1, r1, #0x7f
	str     r1, [sp, #0x14]
	ldr     r1, [sp, #0x28]
	mov     r0, r0, lsl #16
	mov     r3, r3, lsr #26
	mov     r0, r0, lsr #16
	bic     r1, r1, #62, 6 @ #0xf8000000
	and     r2, r2, #0x3
	and     r3, r3, #0x3
	bl      Function_37fb900
	b       branch_37ff670
@ 0x37ff508

.arm
branch_37ff508: @ 37ff508 :arm
	ldr     r1, [sp, #0x2c]
	ldr     r3, [sp, #0x28]
	mov     r0, r1, lsl #8
	mov     r0, r0, lsr #16
	str     r0, [sp]
	and     r0, r1, #0x7f
	str     r0, [sp, #0x4]
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x30]
	and     r2, r3, #0x7f
	mov     r3, r3, lsr #8
	and     r3, r3, #0x3
	bl      Function_37fb9cc
	b       branch_37ff670
@ 0x37ff540

.arm
branch_37ff540: @ 37ff540 :arm
	ldr     r1, [sp, #0x2c]
	ldr     r2, [sp, #0x28]
	and     r0, r1, #0x7f
	str     r0, [sp]
	mov     r0, r1, lsl #8
	mov     r3, r0, lsr #16
	ldr     r0, [sp, #0x24]
	and     r1, r2, #0x7f
	mov     r2, r2, lsr #8
	and     r2, r2, #0x3
	bl      Function_37fba78
	b       branch_37ff670
@ 0x37ff570

.arm
branch_37ff570: @ 37ff570 :arm
	ldr     r0, [sp, #0x24]
	bl      Function_37fbcdc
	b       branch_37ff670
@ 0x37ff57c

.arm
branch_37ff57c: @ 37ff57c :arm
	ldr     r0, [sp, #0x24]
	bl      Function_37fb8b8
	b       branch_37ff670
@ 0x37ff588

.arm
branch_37ff588: @ 37ff588 :arm
	ldr     r0, [sp, #0x24]
	bl      Function_37fbc68
	b       branch_37ff670
@ 0x37ff594

.arm
branch_37ff594: @ 37ff594 :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	ldr     r2, [sp, #0x2c]
	ldr     r3, [sp, #0x30]
	bl      Function_37fb8c8
	b       branch_37ff670
@ 0x37ff5ac

.arm
branch_37ff5ac: @ 37ff5ac :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	bl      Function_37fccdc
	b       branch_37ff670
@ 0x37ff5bc

.arm
branch_37ff5bc: @ 37ff5bc :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	bl      Function_37fcdbc
	b       branch_37ff670
@ 0x37ff5cc

.arm
branch_37ff5cc: @ 37ff5cc :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	bl      Function_37fcc2c
	b       branch_37ff670
@ 0x37ff5dc

.arm
branch_37ff5dc: @ 37ff5dc :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	bl      Function_37fd6b8
	b       branch_37ff670
@ 0x37ff5ec

.arm
branch_37ff5ec: @ 37ff5ec :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	bl      Function_37fd744
	b       branch_37ff670
@ 0x37ff5fc

.arm
branch_37ff5fc: @ 37ff5fc :arm
	ldr     r0, [sp, #0x24]
	ldr     r1, [sp, #0x28]
	bl      Function_37fce10
	b       branch_37ff670
@ 0x37ff60c

.arm
branch_37ff60c: @ 37ff60c :arm
	ldr     r1, [sp, #0x24]
	ldr     r0, [pc, #0xa4] @ [0x37ff6bc] (=0x38074f8)
	str     r1, [r0]
	b       branch_37ff670
@ 0x37ff61c

.arm
branch_37ff61c: @ 37ff61c :arm
	ldr     r5, [sp, #0x24]
	ldr     r0, [pc, #0x98] @ [0x37ff6c0] (=0x38074fc)
	mov     r1, r5
	mov     r2, #70, 26 @ #0x1180
	bl      Function_37fb090
	ldr     r0, [pc, #0x88] @ [0x37ff6c0] (=0x38074fc)
	add     r1, r5, #1, 20 @ #0x1000
	str     r0, [r1, #0x1c0]
	mov     r6, #0x0
.arm
branch_37ff640: @ 37ff640 :arm
	mov     r0, r6
	bl      Function_37fbccc
	add     r1, r5, r6, lsl #2
	add     r1, r1, #1, 20 @ #0x1000
	str     r0, [r1, #0x180]
	add     r6, r6, #0x1
	cmp     r6, #0x10
	blt     branch_37ff640
	mov     r0, #0x0
	bl      Function_37fcdf4
	add     r1, r5, #1, 20 @ #0x1000
	str     r0, [r1, #0x1c4]
.arm
branch_37ff670: @ 37ff670 :arm
	ldr     r6, [sp, #0x1c]
.arm
branch_37ff674: @ 37ff674 :arm
	cmp     r6, #0x0
	bne     branch_37ff034
	ldr     r0, [pc, #0x38] @ [0x37ff6bc] (=0x38074f8)
	ldr     r1, [r0]
	ldr     r0, [r1]
	add     r0, r0, #0x1
	str     r0, [r1]
.arm
branch_37ff690: @ 37ff690 :arm
	ldr     r0, [pc, #0x2c] @ [0x37ff6c4] (=0x380867c)
	add     r1, sp, #0x18
	mov     r2, #0x0
	bl      Function_37f9804
	cmp     r0, #0x0
	bne     branch_37ff024
	add     sp, sp, #0x34
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x37ff6b4

.word 0x4000509 @ 0x37ff6b4
.word 0x3fffff @ 0x37ff6b8
.word 0x38074f8 @ 0x37ff6bc
.word 0x38074fc @ 0x37ff6c0
.word 0x380867c @ 0x37ff6c4
.arm
Function_37ff6c8: @ 37ff6c8 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r1
	bl      Function_37fada4
	mov     r4, r0
	cmp     r5, #2, 8 @ #0x2000000
	bcc     branch_37ff6f4
	ldr     r0, [pc, #0x28] @ [0x37ff710] (=0x380867c)
	mov     r1, r5
	mov     r2, #0x0
	bl      Function_37f9778
	b       branch_37ff700
@ 0x37ff6f4

.arm
branch_37ff6f4: @ 37ff6f4 :arm
	cmp     r5, #0x0
	bne     branch_37ff700
	bl      Function_37fc0c4
.arm
branch_37ff700: @ 37ff700 :arm
	mov     r0, r4
	bl      Function_37fadb8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x37ff710

.word 0x380867c @ 0x37ff710
.arm
Function_37ff714: @ 37ff714 :arm
	ldr     r12, [pc, #0x0] @ [0x37ff71c] (=0x3800264)
	bx      r12
@ 0x37ff71c

.word 0x3800264 @ 0x37ff71c
.arm
Function_37ff720: @ 37ff720 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #0x8
	ldr     r4, [pc, #0x94] @ [0x37ff7c4] (=0x38086e0)
	mov     r2, #0x0
	mvn     r1, #0x2
	str     r1, [r4, #0xc]
	mov     r0, #0x4
	str     r0, [r4, #0xf0]
	str     r2, [r4, #0x10]
	str     r2, [r4, #0x1c]
	str     r2, [r4]
	str     r2, [r4, #0x8]
	str     r2, [r4, #0x18]
	str     r2, [r4, #0x14]
	str     r2, [r4, #0xf8]
	str     r2, [r4, #0xf4]
	mov     r0, #1, 22 @ #0x400
	str     r0, [sp]
	ldr     r12, [r4, #0xf0]
	ldr     r1, [pc, #0x54] @ [0x37ff7c8] (=0x38003b4)
	ldr     r3, [pc, #0x54] @ [0x37ff7cc] (=0x3808ce0)
	add     r0, r4, #0x48
	str     r12, [sp, #0x4]
	bl      Function_37f90b0
	add     r0, r4, #0x48
	bl      Function_37f9410
	ldr     r1, [pc, #0x40] @ [0x37ff7d0] (=0x38002d0)
	mov     r0, #0xb
	bl      Function_37fb498
	ldr     r0, [pc, #0x38] @ [0x37ff7d4] (=0x27ffc40)
	ldrh    r0, [r0]
	cmp     r0, #0x2
	moveq   r0, #0x1
	movne   r0, #0x0
	cmp     r0, #0x0
	ldreq   r0, [pc, #0x24] @ [0x37ff7d8] (=0x38086c0)
	moveq   r1, #0x1
	streq   r1, [r0]
	add     sp, sp, #0x8
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37ff7c4

.word 0x38086e0 @ 0x37ff7c4
.word 0x38003b4 @ 0x37ff7c8
.word 0x3808ce0 @ 0x37ff7cc
.word 0x38002d0 @ 0x37ff7d0
.word 0x27ffc40 @ 0x37ff7d4
.word 0x38086c0 @ 0x37ff7d8
.arm
Function_37ff7dc: @ 37ff7dc :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r5, [pc, #0x30] @ [0x37ff818] (=0x38086e0)
	mov     r7, r0
	bl      Function_37fada4
	ldr     r6, [r5, #0xf0]
	mov     r4, r0
	mov     r1, r7
	add     r0, r5, #0x48
	str     r7, [r5, #0xf0]
	bl      Function_37f9464
	mov     r0, r4
	bl      Function_37fadb8
	mov     r0, r6
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37ff818

.word 0x38086e0 @ 0x37ff818
.arm
Function_37ff81c: @ 37ff81c :arm
	ldr     r0, [pc, #0x0] @ [0x37ff824] (=0x27ffa80)
	bx      lr
@ 0x37ff824

.word 0x27ffa80 @ 0x37ff824
.arm
Function_37ff828: @ 37ff828 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r5, r0
	mov     r4, r1
	adds    r1, r5, r4
	beq     branch_37ff8c0
	cmp     r5, #0x0
	beq     branch_37ff848
	bl      Function_37f950c
.arm
branch_37ff848: @ 37ff848 :arm
	cmp     r4, #0x0
	beq     branch_37ff89c
	sub     r7, r4, r5
	mov     r4, #0x0
	mov     r5, #0x1
	mov     r6, #0x5
	b       branch_37ff87c
@ 0x37ff864

.arm
branch_37ff864: @ 37ff864 :arm
	cmp     r7, #0x5
	movlt   r8, r7
	movge   r8, r6
	mov     r0, r8
	bl      Function_37f950c
	sub     r7, r7, r8
.arm
branch_37ff87c: @ 37ff87c :arm
	bl      Function_37ff8cc
	tst     r0, #0x1
	moveq   r0, r5
	movne   r0, r4
	cmp     r0, #0x0
	bne     branch_37ff89c
	cmp     r7, #0x0
	bgt     branch_37ff864
.arm
branch_37ff89c: @ 37ff89c :arm
	bl      Function_37ff8cc
	tst     r0, #0x1
	moveq   r0, #0x1
	movne   r0, #0x0
	cmp     r0, #0x0
	ldreq   r0, [pc, #0x10] @ [0x37ff8c8] (=0x38086e0)
	moveq   r1, #0x4
	ldreq   r0, [r0]
	streq   r1, [r0]
.arm
branch_37ff8c0: @ 37ff8c0 :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37ff8c8

.word 0x38086e0 @ 0x37ff8c8
.arm
Function_37ff8cc: @ 37ff8cc :arm
	stmfd   sp!, {r3,lr}
	ldr     r12, [pc, #0x38] @ [0x37ff910] (=0x3808ce0)
	mov     lr, #0x2
	ldr     r0, [pc, #0x34] @ [0x37ff914] (=0x3806898)
	ldr     r3, [pc, #0x34] @ [0x37ff918] (=0x37ffa20)
	mov     r1, #0x0
	mov     r2, #0x1
	str     lr, [r12, #0x4]
	bl      Function_37ff95c
	ldr     r3, [pc, #0x24] @ [0x37ff91c] (=0x37ff9e0)
	add     r1, sp, #0x0
	mov     r0, #0x0
	mov     r2, #0x1
	bl      Function_37ff95c
	ldrb    r0, [sp]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37ff910

.word 0x3808ce0 @ 0x37ff910
.word 0x3806898 @ 0x37ff914
.word Function_37ffa20 @ =0x37ffa20, 0x37ff918
.word Function_37ff9e0 @ =0x37ff9e0, 0x37ff91c
.arm
Function_37ff920: @ 37ff920 :arm
	stmfd   sp!, {r3,lr}
	mov     r0, #0x0
	mov     r1, #0x32
	bl      Function_37ff828
	ldr     r0, [pc, #0x20] @ [0x37ff958] (=0x38086e0)
	ldr     r1, [r0]
	ldr     r0, [r1]
	cmp     r0, #0x4
	moveq   r0, #0x6
	streq   r0, [r1]
	moveq   r0, #0x0
	movne   r0, #0x1
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37ff958

.word 0x38086e0 @ 0x37ff958
.arm
Function_37ff95c: @ 37ff95c :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r5, [pc, #0x6c] @ [0x37ff9d4] (=0x3808ce4)
	ldr     r8, [pc, #0x6c] @ [0x37ff9d8] (=0xa040)
	ldr     r4, [pc, #0x6c] @ [0x37ff9dc] (=0x40001a0)
	stmib   r5, {r0,r1}
	strh    r8, [r4]
	mov     r7, r2
	mov     r6, r3
	mov     r8, #10, 20 @ #0xa000
	b       branch_37ff9b0
@ 0x37ff984

.arm
branch_37ff984: @ 37ff984 :arm
	ldr     r0, [r5]
	subs    r0, r0, #0x1
	str     r0, [r5]
	streqh  r8, [r4]
.arm
branch_37ff994: @ 37ff994 :arm
	ldrh    r0, [r4]
	tst     r0, #0x80
	bne     branch_37ff994
	mov     r0, r5
	mov     lr, pc
	bx      r6
@ 0x37ff9ac

.arm
Function_37ff9ac: @ 37ff9ac :arm
	sub     r7, r7, #0x1
.arm
branch_37ff9b0: @ 37ff9b0 :arm
	cmp     r7, #0x0
	bne     branch_37ff984
	ldr     r0, [r5]
	cmp     r0, #0x0
	ldreq   r0, [pc, #0x14] @ [0x37ff9dc] (=0x40001a0)
	moveq   r1, #0x0
	streqh  r1, [r0]
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x37ff9d4

.word 0x3808ce4 @ 0x37ff9d4
.word 0xa040 @ 0x37ff9d8
.word 0x40001a0 @ 0x37ff9dc
.arm
Function_37ff9e0: @ 37ff9e0 :arm
	ldr     r1, [pc, #0x34] @ [0x37ffa1c] (=0x40001a2)
	mov     r2, #0x0
	strh    r2, [r1]
	sub     r2, r1, #0x2
.arm
branch_37ff9f0: @ 37ff9f0 :arm
	ldrh    r1, [r2]
	tst     r1, #0x80
	bne     branch_37ff9f0
	ldr     r2, [pc, #0x18] @ [0x37ffa1c] (=0x40001a2)
	ldr     r1, [r0, #0x8]
	ldrh    r2, [r2]
	strb    r2, [r1]
	ldr     r1, [r0, #0x8]
	add     r1, r1, #0x1
	str     r1, [r0, #0x8]
	bx      lr
@ 0x37ffa1c

.word 0x40001a2 @ 0x37ffa1c
.arm
Function_37ffa20: @ 37ffa20 :arm
	stmfd   sp!, {r3}
	sub     sp, sp, #0x4
	ldr     r1, [r0, #0x4]
	ldr     r2, [pc, #0x38] @ [0x37ffa6c] (=0x40001a2)
	ldrb    r1, [r1]
	strh    r1, [r2]
	ldr     r1, [r0, #0x4]
	add     r1, r1, #0x1
	str     r1, [r0, #0x4]
	sub     r1, r2, #0x2
.arm
branch_37ffa48: @ 37ffa48 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_37ffa48
	ldr     r0, [pc, #0x10] @ [0x37ffa6c] (=0x40001a2)
	ldrh    r0, [r0]
	strh    r0, [sp]
	add     sp, sp, #0x4
	ldmfd   sp!, {r3}
	bx      lr
@ 0x37ffa6c

.word 0x40001a2 @ 0x37ffa6c
.arm
Function_37ffa70: @ 37ffa70 :arm
	ldr     r1, [pc, #0x58] @ [0x37ffad0] (=0x40001a2)
	mov     r2, #0x0
	strh    r2, [r1]
	sub     r2, r1, #0x2
.arm
branch_37ffa80: @ 37ffa80 :arm
	ldrh    r1, [r2]
	tst     r1, #0x80
	bne     branch_37ffa80
	ldr     r2, [pc, #0x3c] @ [0x37ffad0] (=0x40001a2)
	ldr     r1, [r0, #0x4]
	ldrh    r2, [r2]
	ldrb    r1, [r1]
	and     r2, r2, #0xff
	cmp     r2, r1
	beq     branch_37ffac0
	mov     r1, #0x0
	str     r1, [r0, #0xc]
	ldr     r1, [r0]
	cmp     r1, #0x1
	movhi   r1, #0x1
	strhi   r1, [r0]
.arm
branch_37ffac0: @ 37ffac0 :arm
	ldr     r1, [r0, #0x4]
	add     r1, r1, #0x1
	str     r1, [r0, #0x4]
	bx      lr
@ 0x37ffad0

.word 0x40001a2 @ 0x37ffad0
.arm
Function_37ffad4: @ 37ffad4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r12, [pc, #0x1c] @ [0x37ffafc] (=0x3808ce0)
	mov     r2, #0x1
	ldr     r0, [pc, #0x18] @ [0x37ffb00] (=0x3806890)
	ldr     r3, [pc, #0x18] @ [0x37ffb04] (=0x37ffa20)
	mov     r1, #0x0
	str     r2, [r12, #0x4]
	bl      Function_37ff95c
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37ffafc

.word 0x3808ce0 @ 0x37ffafc
.word 0x3806890 @ 0x37ffb00
.word Function_37ffa20 @ =0x37ffa20, 0x37ffb04
.arm
Function_37ffb08: @ 37ffb08 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x8c] @ [0x37ffba0] (=0x38086e0)
	ldr     r2, [r2]
	ldr     r2, [r2, #0x28]
	cmp     r2, #0x1
	beq     branch_37ffb34
	cmp     r2, #0x2
	beq     branch_37ffb50
	cmp     r2, #0x3
	beq     branch_37ffb68
	b       branch_37ffb84
@ 0x37ffb34

.arm
branch_37ffb34: @ 37ffb34 :arm
	mov     r3, r0, lsr #5
	and     r3, r3, #0x8
	mov     r12, r0, lsl #24
	orr     r0, r1, r3
	orr     r0, r0, r12, lsr #16
	str     r0, [sp]
	b       branch_37ffb84
@ 0x37ffb50

.arm
branch_37ffb50: @ 37ffb50 :arm
	and     r3, r0, #255, 24 @ #0xff00
	mov     r12, r0, lsl #24
	orr     r0, r1, r3
	orr     r0, r0, r12, lsr #8
	str     r0, [sp]
	b       branch_37ffb84
@ 0x37ffb68

.arm
branch_37ffb68: @ 37ffb68 :arm
	mov     r3, r0, lsr #8
	and     r3, r3, #255, 24 @ #0xff00
	and     r12, r0, #255, 24 @ #0xff00
	orr     r1, r1, r3
	orr     r1, r1, r12, lsl #8
	orr     r0, r1, r0, lsl #24
	str     r0, [sp]
.arm
branch_37ffb84: @ 37ffb84 :arm
	ldr     r3, [pc, #0x18] @ [0x37ffba4] (=0x37ffa20)
	add     r0, sp, #0x0
	add     r2, r2, #0x1
	mov     r1, #0x0
	bl      Function_37ff95c
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x37ffba0

.word 0x38086e0 @ 0x37ffba0
.word Function_37ffa20 @ =0x37ffa20, 0x37ffba4
.arm
Function_37ffba8: @ 37ffba8 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x44] @ [0x37ffbf8] (=0x38086e0)
	ldr     r0, [r0]
	ldrb    r4, [r0, #0x54]
	cmp     r4, #0xff
	beq     branch_37ffbf0
	ldr     r0, [pc, #0x34] @ [0x37ffbfc] (=0x3808ce0)
	ldr     r0, [r0]
	cmp     r0, #0x0
	bne     branch_37ffbf0
	bl      Function_37ff8cc
	cmp     r4, r0
	beq     branch_37ffbe4
	mov     r0, r4
	bl      Function_3800000
.arm
branch_37ffbe4: @ 37ffbe4 :arm
	ldr     r0, [pc, #0x10] @ [0x37ffbfc] (=0x3808ce0)
	mov     r1, #0x1
	str     r1, [r0]
.arm
branch_37ffbf0: @ 37ffbf0 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37ffbf8

.word 0x38086e0 @ 0x37ffbf8
.word 0x3808ce0 @ 0x37ffbfc
.arm
Function_37ffc00: @ 37ffc00 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	mov     r4, r2
	bl      Function_37ff920
	cmp     r0, #0x0
	beq     branch_37ffc58
	ldr     r0, [pc, #0x3c] @ [0x37ffc60] (=0x38086e0)
	ldr     r2, [pc, #0x3c] @ [0x37ffc64] (=0x3808ce0)
	ldr     r1, [r0]
	mov     r0, r6
	ldr     r3, [r1, #0x28]
	mov     r1, #0x3
	add     r3, r3, #0x1
	add     r3, r3, r4
	str     r3, [r2, #0x4]
	bl      Function_37ffb08
	ldr     r3, [pc, #0x1c] @ [0x37ffc68] (=0x37ff9e0)
	mov     r1, r5
	mov     r2, r4
	mov     r0, #0x0
	bl      Function_37ff95c
.arm
branch_37ffc58: @ 37ffc58 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x37ffc60

.word 0x38086e0 @ 0x37ffc60
.word 0x3808ce0 @ 0x37ffc64
.word Function_37ff9e0 @ =0x37ff9e0, 0x37ffc68
.arm
Function_37ffc6c: @ 37ffc6c :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r0
	mov     r9, r1
	mov     r8, r2
	bl      Function_37ff920
	cmp     r0, #0x0
	beq     branch_37ffd10
	ldr     r0, [pc, #0x88] @ [0x37ffd18] (=0x38086e0)
	ldr     r11, [pc, #0x88] @ [0x37ffd1c] (=0x3808ce0)
	ldr     r5, [r0]
	ldr     r6, [r5, #0x24]
	sub     r4, r6, #0x1
	b       branch_37ffd08
@ 0x37ffca0

.arm
branch_37ffca0: @ 37ffca0 :arm
	and     r0, r10, r4
	sub     r7, r6, r0
	cmp     r7, r8
	movhi   r7, r8
	bl      Function_37ffad4
	ldr     r1, [r5, #0x28]
	mov     r0, r10
	add     r1, r1, #0x1
	add     r1, r1, r7
	str     r1, [r11, #0x4]
	mov     r1, #0x2
	bl      Function_37ffb08
	ldr     r3, [pc, #0x48] @ [0x37ffd20] (=0x37ffa20)
	mov     r0, r9
	mov     r1, #0x0
	mov     r2, r7
	bl      Function_37ff95c
	ldr     r0, [r5, #0x2c]
	mov     r1, #0x0
	bl      Function_37ff828
	ldr     r0, [r5]
	cmp     r0, #0x0
	bne     branch_37ffd10
	add     r9, r9, r7
	add     r10, r10, r7
	sub     r8, r8, r7
.arm
branch_37ffd08: @ 37ffd08 :arm
	cmp     r8, #0x0
	bne     branch_37ffca0
.arm
branch_37ffd10: @ 37ffd10 :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x37ffd18

.word 0x38086e0 @ 0x37ffd18
.word 0x3808ce0 @ 0x37ffd1c
.word Function_37ffa20 @ =0x37ffa20, 0x37ffd20
.arm
Function_37ffd24: @ 37ffd24 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r0
	mov     r9, r1
	mov     r8, r2
	bl      Function_37ff920
	cmp     r0, #0x0
	beq     branch_37ffdc8
	ldr     r0, [pc, #0x88] @ [0x37ffdd0] (=0x38086e0)
	ldr     r11, [pc, #0x88] @ [0x37ffdd4] (=0x3808ce0)
	ldr     r5, [r0]
	ldr     r6, [r5, #0x24]
	sub     r4, r6, #0x1
	b       branch_37ffdc0
@ 0x37ffd58

.arm
branch_37ffd58: @ 37ffd58 :arm
	and     r0, r10, r4
	sub     r7, r6, r0
	cmp     r7, r8
	movhi   r7, r8
	bl      Function_37ffad4
	ldr     r1, [r5, #0x28]
	mov     r0, r10
	add     r1, r1, #0x1
	add     r1, r1, r7
	str     r1, [r11, #0x4]
	mov     r1, #0xa
	bl      Function_37ffb08
	ldr     r3, [pc, #0x48] @ [0x37ffdd8] (=0x37ffa20)
	mov     r0, r9
	mov     r1, #0x0
	mov     r2, r7
	bl      Function_37ff95c
	ldr     r0, [r5, #0x30]
	ldr     r1, [r5, #0x34]
	bl      Function_37ff828
	ldr     r0, [r5]
	cmp     r0, #0x0
	bne     branch_37ffdc8
	add     r9, r9, r7
	add     r10, r10, r7
	sub     r8, r8, r7
.arm
branch_37ffdc0: @ 37ffdc0 :arm
	cmp     r8, #0x0
	bne     branch_37ffd58
.arm
branch_37ffdc8: @ 37ffdc8 :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x37ffdd0

.word 0x38086e0 @ 0x37ffdd0
.word 0x3808ce0 @ 0x37ffdd4
.word Function_37ffa20 @ =0x37ffa20, 0x37ffdd8
.arm
Function_37ffddc: @ 37ffddc :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r6, r1
	mov     r5, r2
	bl      Function_37ff920
	cmp     r0, #0x0
	beq     branch_37ffe58
	ldr     r0, [pc, #0x60] @ [0x37ffe60] (=0x38086e0)
	ldr     r2, [pc, #0x60] @ [0x37ffe64] (=0x3808ce0)
	ldr     r4, [r0]
	mov     r0, #0x1
	str     r0, [r2, #0x10]
	ldr     r1, [r4, #0x28]
	mov     r0, r7
	add     r1, r1, #0x1
	add     r3, r1, r5
	mov     r1, #0x3
	str     r3, [r2, #0x4]
	bl      Function_37ffb08
	ldr     r3, [pc, #0x38] @ [0x37ffe68] (=0x37ffa70)
	mov     r0, r6
	mov     r2, r5
	mov     r1, #0x0
	bl      Function_37ff95c
	ldr     r0, [r4]
	cmp     r0, #0x0
	ldreq   r0, [pc, #0x18] @ [0x37ffe64] (=0x3808ce0)
	ldreq   r0, [r0, #0x10]
	cmpeq   r0, #0x0
	moveq   r0, #0x1
	streq   r0, [r4]
.arm
branch_37ffe58: @ 37ffe58 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x37ffe60

.word 0x38086e0 @ 0x37ffe60
.word 0x3808ce0 @ 0x37ffe64
.word Function_37ffa70 @ =0x37ffa70, 0x37ffe68
.arm
Function_37ffe6c: @ 37ffe6c :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r2, [pc, #0x88] @ [0x37fff00] (=0x38086e0)
	mov     r7, r0
	ldr     r4, [r2]
	mov     r6, r1
	ldr     r5, [r4, #0x1c]
	orr     r0, r7, r6
	sub     r1, r5, #0x1
	tst     r1, r0
	movne   r0, #0x2
	strne   r0, [r4]
	bne     branch_37ffef8
	bl      Function_37ff920
	cmp     r0, #0x0
	beq     branch_37ffef8
	ldr     r8, [pc, #0x54] @ [0x37fff04] (=0x3808ce0)
	mov     r9, #0xd8
	b       branch_37ffef0
@ 0x37ffeb4

.arm
branch_37ffeb4: @ 37ffeb4 :arm
	bl      Function_37ffad4
	ldr     r1, [r4, #0x28]
	mov     r0, r7
	add     r1, r1, #0x1
	str     r1, [r8, #0x4]
	mov     r1, r9
	bl      Function_37ffb08
	ldr     r0, [r4, #0x40]
	ldr     r1, [r4, #0x44]
	bl      Function_37ff828
	ldr     r0, [r4]
	cmp     r0, #0x0
	bne     branch_37ffef8
	add     r7, r7, r5
	sub     r6, r6, r5
.arm
branch_37ffef0: @ 37ffef0 :arm
	cmp     r6, #0x0
	bne     branch_37ffeb4
.arm
branch_37ffef8: @ 37ffef8 :arm
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x37fff00

.word 0x38086e0 @ 0x37fff00
.word 0x3808ce0 @ 0x37fff04
.arm
Function_37fff08: @ 37fff08 :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r2, [pc, #0x88] @ [0x37fff9c] (=0x38086e0)
	mov     r7, r0
	ldr     r4, [r2]
	mov     r6, r1
	ldr     r5, [r4, #0x20]
	orr     r0, r7, r6
	sub     r1, r5, #0x1
	tst     r1, r0
	movne   r0, #0x2
	strne   r0, [r4]
	bne     branch_37fff94
	bl      Function_37ff920
	cmp     r0, #0x0
	beq     branch_37fff94
	ldr     r8, [pc, #0x54] @ [0x37fffa0] (=0x3808ce0)
	mov     r9, #0x20
	b       branch_37fff8c
@ 0x37fff50

.arm
branch_37fff50: @ 37fff50 :arm
	bl      Function_37ffad4
	ldr     r1, [r4, #0x28]
	mov     r0, r7
	add     r1, r1, #0x1
	str     r1, [r8, #0x4]
	mov     r1, r9
	bl      Function_37ffb08
	ldr     r0, [r4, #0x48]
	ldr     r1, [r4, #0x4c]
	bl      Function_37ff828
	ldr     r0, [r4]
	cmp     r0, #0x0
	bne     branch_37fff94
	add     r7, r7, r5
	sub     r6, r6, r5
.arm
branch_37fff8c: @ 37fff8c :arm
	cmp     r6, #0x0
	bne     branch_37fff50
.arm
branch_37fff94: @ 37fff94 :arm
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x37fff9c

.word 0x38086e0 @ 0x37fff9c
.word 0x3808ce0 @ 0x37fffa0
.arm
Function_37fffa4: @ 37fffa4 :arm
	stmfd   sp!, {r4,lr}
	bl      Function_37ff920
	cmp     r0, #0x0
	beq     branch_37fffe8
	ldr     r0, [pc, #0x34] @ [0x37ffff0] (=0x38086e0)
	ldr     r4, [r0]
	bl      Function_37ffad4
	ldr     r1, [pc, #0x2c] @ [0x37ffff4] (=0x3808ce0)
	mov     r2, #0x1
	ldr     r0, [pc, #0x28] @ [0x37ffff8] (=0x3806894)
	ldr     r3, [pc, #0x28] @ [0x37ffffc] (=0x37ffa20)
	str     r2, [r1, #0x4]
	mov     r1, #0x0
	bl      Function_37ff95c
	ldr     r0, [r4, #0x38]
	ldr     r1, [r4, #0x3c]
	bl      Function_37ff828
.arm
branch_37fffe8: @ 37fffe8 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x37ffff0

.word 0x38086e0 @ 0x37ffff0
.word 0x3808ce0 @ 0x37ffff4
.word 0x3806894 @ 0x37ffff8
.word Function_37ffa20 @ =0x37ffa20, 0x37ffffc
.arm
Function_3800000: @ 3800000 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r4, r0
	bl      Function_37ff920
	cmp     r0, #0x0
	beq     branch_3800084
	ldr     r0, [pc, #0x70] @ [0x380008c] (=0x38086e0)
	strb    r4, [sp, #0x1]
	mov     r1, #0x1
	ldr     r9, [r0]
	ldr     r5, [pc, #0x64] @ [0x3800090] (=0x37ffa20)
	ldr     r4, [pc, #0x64] @ [0x3800094] (=0x3808ce0)
	strb    r1, [sp]
	mov     r10, #0xa
	add     r7, sp, #0x0
	mov     r8, #0x2
	mov     r6, #0x0
	mov     r11, #0x5
.arm
branch_3800044: @ 3800044 :arm
	bl      Function_37ffad4
	mov     r0, r7
	str     r8, [r4, #0x4]
	mov     r1, r6
	mov     r2, r8
	mov     r3, r5
	bl      Function_37ff95c
	mov     r0, r11
	mov     r1, #0x0
	bl      Function_37ff828
	ldr     r0, [r9]
	cmp     r0, #0x4
	bne     branch_3800084
	sub     r10, r10, #0x1
	cmp     r10, #0x0
	bgt     branch_3800044
.arm
branch_3800084: @ 3800084 :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x380008c

.word 0x38086e0 @ 0x380008c
.word Function_37ffa20 @ =0x37ffa20, 0x3800090
.word 0x3808ce0 @ 0x3800094
.arm
Function_3800098: @ 3800098 :arm
	ldr     r3, [pc, #0x50] @ [0x38000f0] (=0x40001a4)
.arm
branch_380009c: @ 380009c :arm
	ldr     r2, [r3]
	tst     r2, #2, 2 @ #0x80000000
	bne     branch_380009c
	ldr     r3, [pc, #0x44] @ [0x38000f4] (=0x40001a1)
	mov     r2, #0xc0
	strb    r2, [r3]
	mov     r2, r0, lsr #24
	strb    r2, [r3, #0x7]
	mov     r2, r0, lsr #16
	strb    r2, [r3, #0x8]
	mov     r2, r0, lsr #8
	strb    r2, [r3, #0x9]
	strb    r0, [r3, #0xa]
	mov     r0, r1, lsr #24
	strb    r0, [r3, #0xb]
	mov     r0, r1, lsr #16
	strb    r0, [r3, #0xc]
	mov     r0, r1, lsr #8
	strb    r0, [r3, #0xd]
	strb    r1, [r3, #0xe]
	bx      lr
@ 0x38000f0

.word 0x40001a4 @ 0x38000f0
.word 0x40001a1 @ 0x38000f4
.arm
Function_38000f8: @ 38000f8 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r4, [pc, #0x64] @ [0x3800168] (=0x38086e0)
	mov     r1, #0x0
	ldr     r0, [r4]
	str     r1, [r0]
	ldr     r7, [r4, #0x3c]
	ldr     r6, [r4, #0x40]
	bl      Function_37fada4
	ldr     r1, [r4, #0xfc]
	mov     r5, r0
	bic     r0, r1, #0x4c
	str     r0, [r4, #0xfc]
	add     r0, r4, #0xf4
	bl      Function_37f9388
	ldr     r0, [r4, #0xfc]
	tst     r0, #0x10
	beq     branch_3800144
	add     r0, r4, #0x48
	bl      Function_37f9410
.arm
branch_3800144: @ 3800144 :arm
	mov     r0, r5
	bl      Function_37fadb8
	cmp     r7, #0x0
	beq     branch_3800160
	mov     r0, r6
	mov     lr, pc
	bx      r7
@ 0x3800160

.arm
branch_3800160: @ 3800160 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x3800168

.word 0x38086e0 @ 0x3800168
.arm
Function_380016c: @ 380016c :arm
	ldr     r1, [pc, #0x14] @ [0x3800188] (=0x3806bec)
	ldr     r1, [r1]
	ldr     r1, [r1, #0x60]
	bic     r1, r1, #7, 8 @ #0x7000000
	orr     r0, r1, r0
	orr     r0, r0, #10, 4 @ #0xa0000000
	bx      lr
@ 0x3800188

.word 0x3806bec @ 0x3800188
.arm
Function_380018c: @ 380018c :arm
	bx      lr
@ 0x3800190

.arm
Function_3800190: @ 3800190 :arm
	stmfd   sp!, {r3,lr}
	mov     r0, #46, 6 @ #0xb8000000
	mov     r1, #0x0
	bl      Function_3800098
	mov     r0, #7, 8 @ #0x7000000
	bl      Function_380016c
	mov     r1, #2, 20 @ #0x2000
	rsb     r1, r1, #0x0
	ldr     r2, [pc, #0x20] @ [0x38001d8] (=0x40001a4)
	and     r0, r0, r1
	str     r0, [r2]
.arm
branch_38001bc: @ 38001bc :arm
	ldr     r0, [r2]
	tst     r0, #2, 10 @ #0x800000
	beq     branch_38001bc
	ldr     r0, [pc, #0xc] @ [0x38001dc] (=0x4100010)
	ldr     r0, [r0]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x38001d8

.word 0x40001a4 @ 0x38001d8
.word 0x4100010 @ 0x38001dc
.arm
Function_38001e0: @ 38001e0 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x20] @ [0x380020c] (=0x38086e0)
	mov     r1, #0x0
	mov     r2, r1
	bl      Function_3800210
	bl      Function_3800190
	mov     r4, r0
	bl      Function_38000f8
	mov     r0, r4
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x380020c

.word 0x38086e0 @ 0x380020c
.arm
Function_3800210: @ 3800210 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r6, r1
	mov     r5, r2
	bl      Function_37fada4
	mov     r4, r0
	b       branch_3800234
@ 0x380022c

.arm
branch_380022c: @ 380022c :arm
	add     r0, r7, #0xf4
	bl      Function_37f9334
.arm
branch_3800234: @ 3800234 :arm
	ldr     r0, [r7, #0xfc]
	tst     r0, #0x4
	bne     branch_380022c
	ldr     r1, [r7, #0xfc]
	mov     r0, r4
	orr     r1, r1, #0x4
	str     r1, [r7, #0xfc]
	str     r6, [r7, #0x3c]
	str     r5, [r7, #0x40]
	bl      Function_37fadb8
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x3800264

.arm
Function_3800264: @ 3800264 :arm
	stmfd   sp!, {r3,lr}
	ldr     r12, [pc, #0x54] @ [0x38002c4] (=0x38086e0)
	ldr     r0, [r12, #0xfc]
	cmp     r0, #0x0
	bne     branch_38002bc
	ldr     r0, [pc, #0x48] @ [0x38002c8] (=0x3808d00)
	mov     r2, #0x0
	sub     r1, r2, #0x1
	mov     r3, #0x1
	str     r3, [r12, #0xfc]
	str     r2, [r12, #0x28]
	str     r2, [r12, #0x24]
	str     r2, [r12, #0x20]
	str     r1, [r12, #0x2c]
	str     r2, [r12, #0x3c]
	str     r2, [r12, #0x40]
	str     r2, [r0]
	bl      Function_37ff720
	ldr     r1, [pc, #0x18] @ [0x38002cc] (=0x380018c)
	ldr     r0, [pc, #0x10] @ [0x38002c8] (=0x3808d00)
	str     r1, [r0, #0x20]
	bl      Function_38005e8
.arm
branch_38002bc: @ 38002bc :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x38002c4

.word 0x38086e0 @ 0x38002c4
.word 0x3808d00 @ 0x38002c8
.word 0x380018c @ 0x38002cc
.arm
Function_38002d0: @ 38002d0 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0xb
	bne     branch_38003a8
	cmp     r2, #0x0
	beq     branch_38003a8
	ldr     r0, [pc, #0xc4] @ [0x38003b0] (=0x38086e0)
	ldr     r2, [r0, #0x8]
	cmp     r2, #0x0
	streq   r1, [r0, #0x4]
	ldr     r2, [r0, #0x4]
	cmp     r2, #0xf
	addls   pc, pc, r2, lsl #2
	b       branch_3800374
@ 0x3800304

.arm
Function_3800304: @ 3800304 :arm
	b       branch_3800344
@ 0x3800308

.arm
Function_3800308: @ 3800308 :arm
	b       branch_3800374
@ 0x380030c

.arm
Function_380030c: @ 380030c :arm
	b       branch_3800368
@ 0x3800310

.arm
Function_3800310: @ 3800310 :arm
	b       branch_3800368
@ 0x3800314

.arm
Function_3800314: @ 3800314 :arm
	b       branch_3800368
@ 0x3800318

.arm
Function_3800318: @ 3800318 :arm
	b       branch_3800368
@ 0x380031c

.arm
Function_380031c: @ 380031c :arm
	b       branch_3800368
@ 0x3800320

.arm
Function_3800320: @ 3800320 :arm
	b       branch_3800368
@ 0x3800324

.arm
Function_3800324: @ 3800324 :arm
	b       branch_3800368
@ 0x3800328

.arm
Function_3800328: @ 3800328 :arm
	b       branch_3800368
@ 0x380032c

.arm
Function_380032c: @ 380032c :arm
	b       branch_3800368
@ 0x3800330

.arm
Function_3800330: @ 3800330 :arm
	b       branch_3800368
@ 0x3800334

.arm
Function_3800334: @ 3800334 :arm
	b       branch_3800368
@ 0x3800338

.arm
Function_3800338: @ 3800338 :arm
	b       branch_3800368
@ 0x380033c

.arm
Function_380033c: @ 380033c :arm
	b       branch_3800368
@ 0x3800340

.arm
Function_3800340: @ 3800340 :arm
	b       branch_3800368
@ 0x3800344

.arm
branch_3800344: @ 3800344 :arm
	ldr     r2, [r0, #0x8]
	cmp     r2, #0x0
	beq     branch_3800374
	cmp     r2, #0x1
	ldreq   r2, [r0, #0xfc]
	streq   r1, [r0]
	orreq   r1, r2, #0x10
	streq   r1, [r0, #0xfc]
	b       branch_3800374
@ 0x3800368

.arm
branch_3800368: @ 3800368 :arm
	ldr     r1, [r0, #0xfc]
	orr     r1, r1, #0x10
	str     r1, [r0, #0xfc]
.arm
branch_3800374: @ 3800374 :arm
	ldr     r1, [r0, #0xfc]
	tst     r1, #0x10
	ldreq   r1, [r0, #0x8]
	addeq   r1, r1, #0x1
	streq   r1, [r0, #0x8]
	beq     branch_38003a8
	ldr     r1, [r0, #0xfc]
	mov     r2, #0x0
	str     r2, [r0, #0x8]
	tst     r1, #0x4
	ldrne   r0, [r0, #0xec]
	addeq   r0, r0, #0x48
	bl      Function_37f9410
.arm
branch_38003a8: @ 38003a8 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x38003b0

.word 0x38086e0 @ 0x38003b0
.arm
Function_38003b4: @ 38003b4 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r4, [pc, #0x224] @ [0x38005e4] (=0x38086e0)
.arm
branch_38003bc: @ 38003bc :arm
	mov     r5, #0x0
	bl      Function_37fada4
	mov     r6, r0
	add     r8, r4, #0x48
	mov     r7, r5
.arm
branch_38003d0: @ 38003d0 :arm
	ldr     r0, [r4, #0xfc]
	tst     r0, #0x4
	bne     branch_3800408
	ldr     r0, [r4, #0xfc]
	tst     r0, #0x10
	beq     branch_3800414
	ldr     r0, [r4, #0xfc]
	mov     r5, #0x1
	orr     r0, r0, #0x4
	str     r0, [r4, #0xfc]
	ldr     r0, [r4, #0xfc]
	bic     r0, r0, #0x10
	str     r0, [r4, #0xfc]
	b       branch_3800424
@ 0x3800408

.arm
branch_3800408: @ 3800408 :arm
	ldr     r0, [r4, #0xfc]
	tst     r0, #0x8
	bne     branch_3800424
.arm
branch_3800414: @ 3800414 :arm
	mov     r0, r7
	str     r8, [r4, #0xec]
	bl      Function_37f9334
	b       branch_38003d0
@ 0x3800424

.arm
branch_3800424: @ 3800424 :arm
	mov     r0, r6
	bl      Function_37fadb8
	cmp     r5, #0x0
	beq     branch_38005d0
	ldr     r0, [r4]
	mov     r1, #0x0
	str     r1, [r0]
	ldr     r3, [r4]
	ldr     r2, [r4, #0x4]
	ldr     r1, [r3, #0x58]
	mov     r0, #0x1
	tst     r1, r0, lsl r2
	moveq   r0, #0x3
	streq   r0, [r3]
	beq     branch_3800574
	cmp     r2, #0xf
	addls   pc, pc, r2, lsl #2
	b       branch_380056c
@ 0x380046c

.arm
Function_380046c: @ 380046c :arm
	b       branch_3800574
@ 0x3800470

.arm
Function_3800470: @ 3800470 :arm
	b       branch_3800574
@ 0x3800474

.arm
Function_3800474: @ 3800474 :arm
	b       branch_38004ac
@ 0x3800478

.arm
Function_3800478: @ 3800478 :arm
	b       branch_38004b4
@ 0x380047c

.arm
Function_380047c: @ 380047c :arm
	b       branch_38004c4
@ 0x3800480

.arm
Function_3800480: @ 3800480 :arm
	b       branch_380056c
@ 0x3800484

.arm
Function_3800484: @ 3800484 :arm
	b       branch_38004d0
@ 0x3800488

.arm
Function_3800488: @ 3800488 :arm
	b       branch_38004e4
@ 0x380048c

.arm
Function_380048c: @ 380048c :arm
	b       branch_38004f8
@ 0x3800490

.arm
Function_3800490: @ 3800490 :arm
	b       branch_380050c
@ 0x3800494

.arm
Function_3800494: @ 3800494 :arm
	b       branch_380056c
@ 0x3800498

.arm
Function_3800498: @ 3800498 :arm
	b       branch_3800520
@ 0x380049c

.arm
Function_380049c: @ 380049c :arm
	b       branch_3800540
@ 0x38004a0

.arm
Function_38004a0: @ 38004a0 :arm
	b       branch_3800548
@ 0x38004a4

.arm
Function_38004a4: @ 38004a4 :arm
	b       branch_380055c
@ 0x38004a8

.arm
Function_38004a8: @ 38004a8 :arm
	b       branch_3800530
@ 0x38004ac

.arm
branch_38004ac: @ 38004ac :arm
	bl      Function_37ffba8
	b       branch_3800574
@ 0x38004b4

.arm
branch_38004b4: @ 38004b4 :arm
	bl      Function_3800190
	ldr     r1, [r4]
	str     r0, [r1, #0x8]
	b       branch_3800574
@ 0x38004c4

.arm
branch_38004c4: @ 38004c4 :arm
	mov     r0, #0x3
	str     r0, [r3]
	b       branch_3800574
@ 0x38004d0

.arm
branch_38004d0: @ 38004d0 :arm
	ldr     r0, [r3, #0xc]
	ldr     r1, [r3, #0x10]
	ldr     r2, [r3, #0x14]
	bl      Function_37ffc00
	b       branch_3800574
@ 0x38004e4

.arm
branch_38004e4: @ 38004e4 :arm
	ldr     r0, [r3, #0x10]
	ldr     r1, [r3, #0xc]
	ldr     r2, [r3, #0x14]
	bl      Function_37ffd24
	b       branch_3800574
@ 0x38004f8

.arm
branch_38004f8: @ 38004f8 :arm
	ldr     r0, [r3, #0x10]
	ldr     r1, [r3, #0xc]
	ldr     r2, [r3, #0x14]
	bl      Function_37ffc6c
	b       branch_3800574
@ 0x380050c

.arm
branch_380050c: @ 380050c :arm
	ldr     r0, [r3, #0x10]
	ldr     r1, [r3, #0xc]
	ldr     r2, [r3, #0x14]
	bl      Function_37ffddc
	b       branch_3800574
@ 0x3800520

.arm
branch_3800520: @ 3800520 :arm
	ldr     r0, [r3, #0x10]
	ldr     r1, [r3, #0x14]
	bl      Function_37ffe6c
	b       branch_3800574
@ 0x3800530

.arm
branch_3800530: @ 3800530 :arm
	ldr     r0, [r3, #0x10]
	ldr     r1, [r3, #0x14]
	bl      Function_37fff08
	b       branch_3800574
@ 0x3800540

.arm
branch_3800540: @ 3800540 :arm
	bl      Function_37fffa4
	b       branch_3800574
@ 0x3800548

.arm
branch_3800548: @ 3800548 :arm
	bl      Function_37ff8cc
	ldr     r1, [r4]
	ldr     r1, [r1, #0x10]
	strb    r0, [r1]
	b       branch_3800574
@ 0x380055c

.arm
branch_380055c: @ 380055c :arm
	ldr     r0, [r3, #0xc]
	ldrb    r0, [r0]
	bl      Function_3800000
	b       branch_3800574
@ 0x380056c

.arm
branch_380056c: @ 380056c :arm
	mov     r0, #0x3
	str     r0, [r3]
.arm
branch_3800574: @ 3800574 :arm
	mov     r6, #0xb
	mov     r5, #0x1
.arm
branch_380057c: @ 380057c :arm
	mov     r0, r6
	mov     r1, r5
	mov     r2, r5
	bl      Function_37fb50c
	cmp     r0, #0x0
	blt     branch_380057c
	bl      Function_37fada4
	ldr     r1, [r4, #0xfc]
	mov     r5, r0
	bic     r0, r1, #0x4c
	str     r0, [r4, #0xfc]
	add     r0, r4, #0xf4
	bl      Function_37f9388
	ldr     r0, [r4, #0xfc]
	tst     r0, #0x10
	beq     branch_38005c4
	add     r0, r4, #0x48
	bl      Function_37f9410
.arm
branch_38005c4: @ 38005c4 :arm
	mov     r0, r5
	bl      Function_37fadb8
	b       branch_38003bc
@ 0x38005d0

.arm
branch_38005d0: @ 38005d0 :arm
	ldr     r1, [r4, #0x44]
	mov     r0, r4
	mov     lr, pc
	bx      r1
@ 0x38005e0

.arm
Function_38005e0: @ 38005e0 :arm
	b       branch_38003bc
@ 0x38005e4

.word 0x38086e0 @ 0x38005e4
.arm
Function_38005e8: @ 38005e8 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0x44] @ [0x3800638] (=0x3808f40)
	ldr     r1, [r0, #0x8]
	cmp     r1, #0x0
	bne     branch_3800630
	mov     r1, #0x1
	str     r1, [r0, #0x8]
	bl      Function_37fb3b0
	mov     r5, #0xe
	mov     r4, #0x0
.arm
branch_3800610: @ 3800610 :arm
	mov     r0, r5
	mov     r1, r4
	bl      Function_37fb4e8
	cmp     r0, #0x0
	beq     branch_3800610
	ldr     r1, [pc, #0x10] @ [0x380063c] (=0x3800640)
	mov     r0, #0xe
	bl      Function_37fb498
.arm
branch_3800630: @ 3800630 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x3800638

.word 0x3808f40 @ 0x3800638
.word 0x3800640 @ 0x380063c
.arm
Function_3800640: @ 3800640 :arm
	stmfd   sp!, {r4,lr}
	and     r0, r1, #0x3f
	cmp     r0, #0x1
	bne     branch_3800698
	mov     r0, #0x0
	bl      Function_37faf98
	mov     r0, #0x1
	bl      Function_37faf98
	mov     r0, #0x2
	bl      Function_37faf98
	mov     r0, #0x3
	bl      Function_37faf98
	mov     r0, #0x0
	bl      Function_3803458
	bl      Function_37fada4
	mov     r4, r0
	bl      Function_37fb804
	bl      Function_3805a34
	mov     r0, r4
	bl      Function_37fadb8
	bl      Function_37faf14
	b       branch_380069c
@ 0x3800698

.arm
branch_3800698: @ 3800698 :arm
	bl      Function_37faf14
.arm
branch_380069c: @ 380069c :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x38006a4

.arm
Function_38006a4: @ 38006a4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x34] @ [0x38006e4] (=0x3808f40)
	ldr     r0, [r0, #0xc]
	cmp     r0, #0x0
	bne     branch_38006d4
	ldr     r0, [pc, #0x28] @ [0x38006e8] (=0x27ffe1f)
	ldrb    r0, [r0]
	tst     r0, #0x80
	beq     branch_38006d0
	bl      Function_38006ec
	b       branch_38006d4
@ 0x38006d0

.arm
branch_38006d0: @ 38006d0 :arm
	bl      Function_380078c
.arm
branch_38006d4: @ 38006d4 :arm
	ldr     r0, [pc, #0x8] @ [0x38006e4] (=0x3808f40)
	ldr     r0, [r0, #0xc]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x38006e4

.word 0x3808f40 @ 0x38006e4
.word 0x27ffe1f @ 0x38006e8
.arm
Function_38006ec: @ 38006ec :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, #0x1
	bl      Function_37f8c58
	mov     r4, r0
	mvn     r0, #0x2
	cmp     r4, r0
	beq     branch_3800764
	mov     r0, r4, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_37f8c28
	cmp     r0, #0x0
	bne     branch_3800758
	ldr     r1, [pc, #0x60] @ [0x3800784] (=0x27ffc10)
	ldrh    r0, [r1]
	cmp     r0, #0x0
	subeq   r0, r1, #65, 28 @ #0x410
	subne   r0, r1, #0x10
	ldr     r0, [r0]
	str     r0, [sp]
	bl      Function_38001e0
	ldr     r1, [sp]
	cmp     r0, r1
	mov     r0, r4, lsl #16
	moveq   r5, #0x1
	mov     r0, r0, lsr #16
	movne   r5, #0x0
	bl      Function_37f8c08
.arm
branch_3800758: @ 3800758 :arm
	mov     r0, r4, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_37f8d00
.arm
branch_3800764: @ 3800764 :arm
	ldr     r1, [pc, #0x1c] @ [0x3800788] (=0x3808f40)
	cmp     r5, #0x0
	moveq   r2, #0x1
	movne   r2, #0x0
	str     r2, [r1, #0xc]
	mov     r0, r5
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x3800784

.word 0x27ffc10 @ 0x3800784
.word 0x3808f40 @ 0x3800788
.arm
Function_380078c: @ 380078c :arm
	ldr     r0, [pc, #0x1c] @ [0x38007b0] (=0x4000214)
	mov     r2, #0x1
	ldr     r1, [r0]
	mov     r0, r2
	tst     r1, #1, 12 @ #0x100000
	ldrne   r1, [pc, #0xc] @ [0x38007b4] (=0x3808f40)
	movne   r0, #0x0
	strne   r2, [r1, #0xc]
	bx      lr
@ 0x38007b0

.word 0x4000214 @ 0x38007b0
.word 0x3808f40 @ 0x38007b4
.arm
Function_38007b8: @ 38007b8 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r0, [pc, #0xe0] @ [0x38008a4] (=0x3808f40)
	ldr     r0, [r0, #0x4]
	cmp     r0, #0x0
	bne     branch_380089c
	ldr     r2, [pc, #0xd4] @ [0x38008a8] (=0x27ffc40)
	ldrh    r0, [r2]
	cmp     r0, #0x2
	beq     branch_380089c
	ldr     r1, [pc, #0xc8] @ [0x38008ac] (=0x3806bf0)
	mvn     r0, #0x0
	ldr     r3, [r1]
	cmp     r3, r0
	ldreq   r0, [r2, #-0x4]
	addeq   r0, r0, #0xa
	streq   r0, [r1]
	beq     branch_380089c
	ldr     r0, [r2, #-0x4]!
	cmp     r0, r3
	bcc     branch_380089c
	ldr     r0, [r2]
	add     r0, r0, #0xa
	str     r0, [r1]
	bl      Function_38006a4
	cmp     r0, #0x0
	beq     branch_380084c
	ldr     r0, [pc, #0x7c] @ [0x38008a4] (=0x3808f40)
	mov     r1, #0x1
	str     r1, [r0, #0x4]
	bl      Function_37ff81c
	ldr     r0, [r0, #0xc]
	cmp     r0, #0x0
	bne     branch_380084c
	ldr     r0, [pc, #0x68] @ [0x38008ac] (=0x3806bf0)
	ldr     r0, [r0, #0x4]
	cmp     r0, #0x0
	bne     branch_380089c
.arm
branch_380084c: @ 380084c :arm
	ldr     r0, [pc, #0x50] @ [0x38008a4] (=0x3808f40)
	ldr     r1, [pc, #0x54] @ [0x38008ac] (=0x3806bf0)
	ldr     r0, [r0, #0x4]
	mov     r2, #0x0
	str     r2, [r1, #0x4]
	cmp     r0, #0x0
	beq     branch_380089c
	mov     r7, #0x64
	mov     r6, #0xe
	mov     r5, #0x11
	mov     r4, r2
	b       branch_3800884
@ 0x380087c

.arm
branch_380087c: @ 380087c :arm
	mov     r0, r7
	bl      Function_37f8a68
.arm
branch_3800884: @ 3800884 :arm
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      Function_37fb50c
	cmp     r0, #0x0
	bne     branch_380087c
.arm
branch_380089c: @ 380089c :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x38008a4

.word 0x3808f40 @ 0x38008a4
.word 0x27ffc40 @ 0x38008a8
.word 0x3806bf0 @ 0x38008ac
.thumb
Function_38008b0: @ 38008b0 :thumb
	swi     0x0
	bx      lr
@ 0x38008b4

.thumb
Function_38008b4: @ 38008b4 :thumb
	swi     0x3
	bx      lr
@ 0x38008b8

.thumb
Function_38008b8: @ 38008b8 :thumb
	ldr     r2, [pc, #0x8] @ 0x38008c4, (=0x4000000)
	mov     r12, r2
	mov     r2, #0x0
	swi     0x4
	bx      lr
@ 0x38008c2


.align 2, 0


.word 0x4000000 @ 0x38008c4
.thumb
Function_38008c8: @ 38008c8 :thumb
	mov     r2, #0x0
	swi     0x5
	bx      lr
@ 0x38008ce

.thumb
Function_38008ce: @ 38008ce :thumb
	swi     0x6
	bx      lr
@ 0x38008d2

.thumb
Function_38008d2: @ 38008d2 :thumb
	swi     0x7
	bx      lr
@ 0x38008d6

.thumb
Function_38008d6: @ 38008d6 :thumb
	swi     0x8
	bx      lr
@ 0x38008da

.thumb
Function_38008da: @ 38008da :thumb
	mov     r1, r0
	mov     r0, #0x1
	swi     0x8
	bx      lr
@ 0x38008e2

.thumb
Function_38008e2: @ 38008e2 :thumb
	mov     r1, r0
	mov     r0, #0x0
	swi     0x8
	bx      lr
@ 0x38008ea

.thumb
Function_38008ea: @ 38008ea :thumb
	swi     0x9
	bx      lr
@ 0x38008ee

.thumb
Function_38008ee: @ 38008ee :thumb
	swi     0x9
	mov     r0, r1
	bx      lr
@ 0x38008f4

.thumb
Function_38008f4: @ 38008f4 :thumb
	swi     0xb
	bx      lr
@ 0x38008f8

.thumb
Function_38008f8: @ 38008f8 :thumb
	swi     0xc
	bx      lr
@ 0x38008fc

.thumb
Function_38008fc: @ 38008fc :thumb
	swi     0xd
	bx      lr
@ 0x3800900

.thumb
Function_3800900: @ 3800900 :thumb
	swi     0xe
	bx      lr
@ 0x3800904

.thumb
Function_3800904: @ 3800904 :thumb
	swi     0xf
	bx      lr
@ 0x3800908

.thumb
Function_3800908: @ 3800908 :thumb
	swi     0x10
	bx      lr
@ 0x380090c

.thumb
Function_380090c: @ 380090c :thumb
	swi     0x11
	bx      lr
@ 0x3800910

.thumb
Function_3800910: @ 3800910 :thumb
	swi     0x12
	bx      lr
@ 0x3800914

.thumb
Function_3800914: @ 3800914 :thumb
	swi     0x13
	bx      lr
@ 0x3800918

.thumb
Function_3800918: @ 3800918 :thumb
	swi     0x14
	bx      lr
@ 0x380091c

.thumb
Function_380091c: @ 380091c :thumb
	swi     0x15
	bx      lr
@ 0x3800920

.thumb
Function_3800920: @ 3800920 :thumb
	swi     0x1a
	bx      lr
@ 0x3800924

.thumb
Function_3800924: @ 3800924 :thumb
	swi     0x1b
	bx      lr
@ 0x3800928

.thumb
Function_3800928: @ 3800928 :thumb
	swi     0x1c
	bx      lr
@ 0x380092c

.arm
Function_380092c: @ 380092c :arm
	stmfd   sp!, {r3-r9,lr}
	sub     sp, sp, #0x8
	ldr     r1, [pc, #0xec] @ [0x3800a28] (=0x3808f50)
	mov     r4, r0
	ldrh    r0, [r1]
	cmp     r0, #0x0
	bne     branch_3800a1c
	mov     r0, #0x1
	strh    r0, [r1]
	mov     r0, #0x0
	str     r0, [r1, #0x4]
	mov     r0, #0x5
	str     r0, [r1, #0x8]
	bl      Function_3800e08
	bl      Function_3803808
	bl      Function_3802300
	bl      Function_380195c
	bl      Function_37fb3b0
	ldr     r1, [pc, #0xb0] @ [0x3800a2c] (=0x3800da0)
	mov     r0, #0x6
	bl      Function_37fb498
	ldr     r1, [pc, #0xa4] @ [0x3800a2c] (=0x3800da0)
	mov     r0, #0x9
	bl      Function_37fb498
	ldr     r1, [pc, #0x98] @ [0x3800a2c] (=0x3800da0)
	mov     r0, #0x8
	bl      Function_37fb498
	ldr     r1, [pc, #0x8c] @ [0x3800a2c] (=0x3800da0)
	mov     r0, #0x4
	bl      Function_37fb498
	ldr     r0, [pc, #0x84] @ [0x3800a30] (=0x3809200)
	ldr     r1, [pc, #0x84] @ [0x3800a34] (=0x3809220)
	mov     r2, #0x10
	bl      Function_37f9750
	mov     r9, #0x0
	mov     r6, #0x18
	ldr     r8, [pc, #0x74] @ [0x3800a38] (=0x3809260)
	mov     r7, r9
	mov     r5, r6
.arm
branch_38009c8: @ 38009c8 :arm
	mla     r0, r9, r5, r8
	mov     r1, r7
	mov     r2, r6
	bl      Function_37fb16c
	add     r9, r9, #0x1
	cmp     r9, #0x10
	blt     branch_38009c8
	ldr     r0, [pc, #0x3c] @ [0x3800a28] (=0x3808f50)
	mov     r2, #0x0
	str     r2, [r0, #0x490]
	str     r2, [r0, #0x498]
	str     r2, [r0, #0x494]
	mov     r0, #2, 24 @ #0x200
	str     r0, [sp]
	ldr     r0, [pc, #0x34] @ [0x3800a3c] (=0x3808f5c)
	ldr     r1, [pc, #0x34] @ [0x3800a40] (=0x3800d34)
	ldr     r3, [pc, #0x20] @ [0x3800a30] (=0x3809200)
	str     r4, [sp, #0x4]
	bl      Function_37f90b0
	ldr     r0, [pc, #0x20] @ [0x3800a3c] (=0x3808f5c)
	bl      Function_37f9410
.arm
branch_3800a1c: @ 3800a1c :arm
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x3800a28

.word 0x3808f50 @ 0x3800a28
.word 0x3800da0 @ 0x3800a2c
.word 0x3809200 @ 0x3800a30
.word 0x3809220 @ 0x3800a34
.word 0x3809260 @ 0x3800a38
.word 0x3808f5c @ 0x3800a3c
.word 0x3800d34 @ 0x3800a40
.arm
Function_3800a44: @ 3800a44 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r5, [pc, #0x48] @ [0x3800a98] (=0x38093e4)
	ldr     r4, [pc, #0x48] @ [0x3800a9c] (=0x3808f50)
	mov     r6, r0
.arm
branch_3800a54: @ 3800a54 :arm
	bl      Function_37fada4
	ldr     r1, [r4, #0x4]
	cmp     r1, #0x0
	beq     branch_3800a74
	bl      Function_37fadb8
	mov     r0, r5
	bl      Function_37f9334
	b       branch_3800a54
@ 0x3800a74

.arm
branch_3800a74: @ 3800a74 :arm
	ldr     r1, [pc, #0x20] @ [0x3800a9c] (=0x3808f50)
	mov     r2, #0x1
	str     r2, [r1, #0x4]
	mov     r2, #0x4
	str     r2, [r1, #0x8]
	str     r6, [r1, #0x49c]
	bl      Function_37fadb8
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x3800a98

.word 0x38093e4 @ 0x3800a98
.word 0x3808f50 @ 0x3800a9c
.arm
Function_3800aa0: @ 3800aa0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x4c] @ [0x3800af8] (=0x3808f50)
	ldr     r2, [r1, #0x4]
	cmp     r2, #0x0
	beq     branch_3800af0
	ldr     r2, [r1, #0x8]
	cmp     r2, #0x4
	ldreq   r1, [r1, #0x49c]
	cmpeq   r1, r0
	bne     branch_3800af0
	bl      Function_37fada4
	ldr     r1, [pc, #0x24] @ [0x3800af8] (=0x3808f50)
	mov     r2, #0x5
	str     r2, [r1, #0x8]
	mov     r2, #0x0
	str     r2, [r1, #0x4]
	str     r2, [r1, #0x49c]
	bl      Function_37fadb8
	ldr     r0, [pc, #0xc] @ [0x3800afc] (=0x38093e4)
	bl      Function_37f9388
.arm
branch_3800af0: @ 3800af0 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3800af8

.word 0x3808f50 @ 0x3800af8
.word 0x38093e4 @ 0x3800afc
.arm
Function_3800b00: @ 3800b00 :arm
	stmfd   sp!, {r4-r6,lr}
	and     r2, r0, #0x70
	cmp     r2, #0x30
	bgt     branch_3800b38
	bge     branch_3800b84
	cmp     r2, #0x10
	bgt     branch_3800b2c
	bge     branch_3800b6c
	cmp     r2, #0x0
	beq     branch_3800b6c
	b       branch_3800b88
@ 0x3800b2c

.arm
branch_3800b2c: @ 3800b2c :arm
	cmp     r2, #0x20
	beq     branch_3800b84
	b       branch_3800b88
@ 0x3800b38

.arm
branch_3800b38: @ 3800b38 :arm
	cmp     r2, #0x50
	bgt     branch_3800b50
	bge     branch_3800b74
	cmp     r2, #0x40
	beq     branch_3800b74
	b       branch_3800b88
@ 0x3800b50

.arm
branch_3800b50: @ 3800b50 :arm
	cmp     r2, #0x60
	bgt     branch_3800b60
	beq     branch_3800b7c
	b       branch_3800b88
@ 0x3800b60

.arm
branch_3800b60: @ 3800b60 :arm
	cmp     r2, #0x70
	beq     branch_3800b7c
	b       branch_3800b88
@ 0x3800b6c

.arm
branch_3800b6c: @ 3800b6c :arm
	mov     r4, #0x6
	b       branch_3800b88
@ 0x3800b74

.arm
branch_3800b74: @ 3800b74 :arm
	mov     r4, #0x9
	b       branch_3800b88
@ 0x3800b7c

.arm
branch_3800b7c: @ 3800b7c :arm
	mov     r4, #0x8
	b       branch_3800b88
@ 0x3800b84

.arm
branch_3800b84: @ 3800b84 :arm
	mov     r4, #0x4
.arm
branch_3800b88: @ 3800b88 :arm
	and     r0, r0, #0xff
	orr     r0, r0, #0x80
	mov     r0, r0, lsl #8
	orr     r2, r0, #3, 8 @ #0x3000000
	and     r0, r1, #0xff
	orr     r6, r2, r0
	mov     r5, #0x0
.arm
branch_3800ba4: @ 3800ba4 :arm
	mov     r0, r4
	mov     r1, r6
	mov     r2, r5
	bl      Function_37fb50c
	cmp     r0, #0x0
	blt     branch_3800ba4
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x3800bc4

.arm
Function_3800bc4: @ 3800bc4 :arm
	ldr     r0, [pc, #0x10] @ [0x3800bdc] (=0x3808f50)
	ldr     r0, [r0, #0x4]
	cmp     r0, #0x0
	moveq   r0, #0x1
	movne   r0, #0x0
	bx      lr
@ 0x3800bdc

.word 0x3808f50 @ 0x3800bdc
.arm
Function_3800be0: @ 3800be0 :arm
	ldr     r1, [pc, #0xc] @ [0x3800bf4] (=0x3808f50)
	mov     r2, #0x1
	str     r2, [r1, #0x4]
	str     r0, [r1, #0x8]
	bx      lr
@ 0x3800bf4

.word 0x3808f50 @ 0x3800bf4
.arm
Function_3800bf8: @ 3800bf8 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x28] @ [0x3800c2c] (=0x3808f50)
	ldr     r2, [r1, #0x8]
	cmp     r2, r0
	bne     branch_3800c24
	ldr     r0, [pc, #0x1c] @ [0x3800c30] (=0x38093e4)
	mov     r2, #0x5
	str     r2, [r1, #0x8]
	mov     r2, #0x0
	str     r2, [r1, #0x4]
	bl      Function_37f9388
.arm
branch_3800c24: @ 3800c24 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3800c2c

.word 0x3808f50 @ 0x3800c2c
.word 0x38093e4 @ 0x3800c30
.arm
Function_3800c34: @ 3800c34 :arm
	stmfd   sp!, {r0-r3}
.arm
Function_3800c38: @ 3800c38 :arm
	stmfd   sp!, {r4-r6,lr}
	ldrh    r2, [sp, #0x18]
	mov     r5, r0
	cmp     r2, #0x4
	mov     r4, r1
	movhi   r0, #0x0
	bhi     branch_3800cf4
	bl      Function_37fada4
	ldr     r3, [pc, #0xa0] @ [0x3800d00] (=0x3808f50)
	add     r2, sp, #0x18
	ldr     r12, [r3, #0x490]
	mov     r1, #0x18
	mul     r6, r12, r1
	ldr     lr, [pc, #0x90] @ [0x3800d04] (=0x3809260)
	ldr     r12, [pc, #0x90] @ [0x3800d08] (=0x3809264)
	str     r5, [lr, r6]
	ldr     r5, [r3, #0x490]
	bic     r2, r2, #0x3
	mul     lr, r5, r1
	str     r4, [r12, lr]
	add     r6, r2, #0x4
	ldrh    r1, [sp, #0x18]
	ldr     r5, [pc, #0x74] @ [0x3800d0c] (=0x3808f54)
	mov     lr, #0x0
	mov     r2, #0x18
	b       branch_3800cbc
@ 0x3800ca0

.arm
branch_3800ca0: @ 3800ca0 :arm
	ldr     r12, [r3, #0x490]
	add     r6, r6, #0x4
	mla     r4, r12, r2, r5
	add     r4, r4, lr, lsl #2
	ldr     r12, [r6, #-0x4]
	add     lr, lr, #0x1
	str     r12, [r4, #0x314]
.arm
branch_3800cbc: @ 3800cbc :arm
	cmp     lr, r1
	blt     branch_3800ca0
	ldr     r1, [pc, #0x34] @ [0x3800d00] (=0x3808f50)
	ldr     r4, [r1, #0x490]
	add     r2, r4, #0x1
	and     r2, r2, #0xf
	str     r2, [r1, #0x490]
	bl      Function_37fadb8
	ldr     r1, [pc, #0x20] @ [0x3800d04] (=0x3809260)
	mov     r0, #0x18
	mla     r1, r4, r0, r1
	ldr     r0, [pc, #0x20] @ [0x3800d10] (=0x3809200)
	mov     r2, #0x0
	bl      Function_37f9778
.arm
branch_3800cf4: @ 3800cf4 :arm
	ldmfd   sp!, {r4-r6,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x3800d00

.word 0x3808f50 @ 0x3800d00
.word 0x3809260 @ 0x3800d04
.word 0x3809264 @ 0x3800d08
.word 0x3808f54 @ 0x3800d0c
.word 0x3809200 @ 0x3800d10
.arm
Function_3800d14: @ 3800d14 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x10] @ [0x3800d30] (=0x3809200)
	add     r1, sp, #0x0
	mov     r2, #0x0
	bl      Function_37f98a0
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3800d30

.word 0x3809200 @ 0x3800d30
.arm
Function_3800d34: @ 3800d34 :arm
	stmfd   sp!, {r3-r6,lr}
	sub     sp, sp, #0x4
	ldr     r6, [pc, #0x58] @ [0x3800d9c] (=0x3809200)
	add     r5, sp, #0x0
	mov     r4, #0x1
.arm
branch_3800d48: @ 3800d48 :arm
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      Function_37f9804
	ldr     r0, [sp]
	ldr     r1, [r0]
	cmp     r1, #0x3
	addls   pc, pc, r1, lsl #2
	b       branch_3800d48
@ 0x3800d6c

.arm
Function_3800d6c: @ 3800d6c :arm
	b       branch_3800d7c
@ 0x3800d70

.arm
Function_3800d70: @ 3800d70 :arm
	b       branch_3800d94
@ 0x3800d74

.arm
Function_3800d74: @ 3800d74 :arm
	b       branch_3800d84
@ 0x3800d78

.arm
Function_3800d78: @ 3800d78 :arm
	b       branch_3800d8c
@ 0x3800d7c

.arm
branch_3800d7c: @ 3800d7c :arm
	bl      Function_3801100
	b       branch_3800d48
@ 0x3800d84

.arm
branch_3800d84: @ 3800d84 :arm
	bl      Function_38026b4
	b       branch_3800d48
@ 0x3800d8c

.arm
branch_3800d8c: @ 3800d8c :arm
	bl      Function_3801b54
	b       branch_3800d48
@ 0x3800d94

.arm
branch_3800d94: @ 3800d94 :arm
	bl      Function_38039d8
	b       branch_3800d48
@ 0x3800d9c

.word 0x3809200 @ 0x3800d9c
.arm
Function_3800da0: @ 3800da0 :arm
	stmfd   sp!, {r3,lr}
	cmp     r2, #0x0
	bne     branch_3800e00
	sub     r0, r0, #0x4
	cmp     r0, #0x5
	addls   pc, pc, r0, lsl #2
	b       branch_3800e00
@ 0x3800dbc

.arm
Function_3800dbc: @ 3800dbc :arm
	b       branch_3800df8
@ 0x3800dc0

.arm
Function_3800dc0: @ 3800dc0 :arm
	b       branch_3800e00
@ 0x3800dc4

.arm
Function_3800dc4: @ 3800dc4 :arm
	b       branch_3800dd4
@ 0x3800dc8

.arm
Function_3800dc8: @ 3800dc8 :arm
	b       branch_3800e00
@ 0x3800dcc

.arm
Function_3800dcc: @ 3800dcc :arm
	b       branch_3800dec
@ 0x3800dd0

.arm
Function_3800dd0: @ 3800dd0 :arm
	b       branch_3800de0
@ 0x3800dd4

.arm
branch_3800dd4: @ 3800dd4 :arm
	mov     r0, r1
	bl      Function_3800f18
	b       branch_3800e00
@ 0x3800de0

.arm
branch_3800de0: @ 3800de0 :arm
	mov     r0, r1
	bl      Function_3802348
	b       branch_3800e00
@ 0x3800dec

.arm
branch_3800dec: @ 3800dec :arm
	mov     r0, r1
	bl      Function_3801998
	b       branch_3800e00
@ 0x3800df8

.arm
branch_3800df8: @ 3800df8 :arm
	mov     r0, r1
	bl      Function_3803830
.arm
branch_3800e00: @ 3800e00 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3800e08

.arm
Function_3800e08: @ 3800e08 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r0, [pc, #0xc0] @ [0x3800ed4] (=0x38093f0)
	mov     r3, #0x0
	str     r3, [r0, #0x24]
	mov     r1, #0x14
	str     r1, [r0, #0x28]
	str     r1, [r0, #0x2c]
	ldr     r0, [pc, #0xac] @ [0x3800ed8] (=0x38093f4)
	mov     r2, r3
.arm
branch_3800e2c: @ 3800e2c :arm
	mov     r1, r3, lsl #1
	add     r3, r3, #0x1
	strh    r2, [r0, r1]
	cmp     r3, #0x10
	blt     branch_3800e2c
	bl      Function_37fa83c
	cmp     r0, #0x0
	bne     branch_3800e50
	bl      Function_37fa7f0
.arm
branch_3800e50: @ 3800e50 :arm
	ldr     r7, [pc, #0x84] @ [0x3800edc] (=0x3809420)
	ldr     r5, [pc, #0x84] @ [0x3800ee0] (=0x54505641)
	mov     r8, #0x0
	mov     r4, #0x28
.arm
branch_3800e60: @ 3800e60 :arm
	mul     r6, r8, r4
	add     r0, r7, r6
	bl      Function_37fa928
	mov     r1, r5
	add     r0, r7, r6
	bl      Function_37faab8
	add     r8, r8, #0x1
	cmp     r8, #0x4
	blt     branch_3800e60
	ldr     r2, [pc, #0x58] @ [0x3800ee4] (=0x40001c0)
.arm
branch_3800e88: @ 3800e88 :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_3800e88
	ldr     r1, [pc, #0x4c] @ [0x3800ee8] (=0x8a01)
	ldr     r0, [pc, #0x4c] @ [0x3800eec] (=0x40001c2)
	strh    r1, [r2]
	mov     r1, #0x84
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_3800eac: @ 3800eac :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3800eac
	bl      Function_3800ef4
	ldr     r1, [pc, #0x2c] @ [0x3800ef0] (=0x8201)
	ldr     r0, [pc, #0x1c] @ [0x3800ee4] (=0x40001c0)
	strh    r1, [r0]
	bl      Function_3800ef4
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x3800ed4

.word 0x38093f0 @ 0x3800ed4
.word 0x38093f4 @ 0x3800ed8
.word 0x3809420 @ 0x3800edc
.word 0x54505641 @ 0x3800ee0
.word 0x40001c0 @ 0x3800ee4
.word 0x8a01 @ 0x3800ee8
.word 0x40001c2 @ 0x3800eec
.word 0x8201 @ 0x3800ef0
.arm
Function_3800ef4: @ 3800ef4 :arm
	ldr     r0, [pc, #0x18] @ [0x3800f14] (=0x40001c2)
	mov     r1, #0x0
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_3800f04: @ 3800f04 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3800f04
	bx      lr
@ 0x3800f14

.word 0x40001c2 @ 0x3800f14
.arm
Function_3800f18: @ 3800f18 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	tst     r0, #2, 8 @ #0x2000000
	beq     branch_3800f48
	ldr     r1, [pc, #0x1c4] @ [0x38010f4] (=0x38093f4)
	mov     r4, #0x0
	mov     r3, r4
.arm
branch_3800f34: @ 3800f34 :arm
	mov     r2, r4, lsl #1
	add     r4, r4, #0x1
	strh    r3, [r1, r2]
	cmp     r4, #0x10
	blt     branch_3800f34
.arm
branch_3800f48: @ 3800f48 :arm
	ldr     r1, [pc, #0x1a4] @ [0x38010f4] (=0x38093f4)
	and     r2, r0, #15, 16 @ #0xf0000
	mov     r2, r2, lsr #16
	mov     r2, r2, lsl #1
	strh    r0, [r1, r2]
	tst     r0, #1, 8 @ #0x1000000
	beq     branch_38010e8
	ldr     r2, [pc, #0x18c] @ [0x38010f8] (=0x38093f0)
	ldrh    r1, [r2, #0x4]
	and     r0, r1, #255, 24 @ #0xff00
	mov     r0, r0, lsl #8
	mov     r4, r0, lsr #16
	cmp     r4, #0x3
	addls   pc, pc, r4, lsl #2
	b       branch_38010dc
@ 0x3800f84

.arm
Function_3800f84: @ 3800f84 :arm
	b       branch_3800fc8
@ 0x3800f88

.arm
Function_3800f88: @ 3800f88 :arm
	b       branch_3800ff0
@ 0x3800f8c

.arm
Function_3800f8c: @ 3800f8c :arm
	b       branch_380108c
@ 0x3800f90

.arm
Function_3800f90: @ 3800f90 :arm
	b       branch_3800f94
@ 0x3800f94

.arm
branch_3800f94: @ 3800f94 :arm
	and     r0, r1, #0xff
	mov     r0, r0, lsl #16
	movs    r3, r0, lsr #16
	mov     r0, #0x3
	bne     branch_3800fb4
	mov     r1, #0x2
	bl      Function_3800b00
	b       branch_38010e8
@ 0x3800fb4

.arm
branch_3800fb4: @ 3800fb4 :arm
	str     r3, [r2, #0x28]
	mov     r1, #0x0
	str     r3, [r2, #0x2c]
	bl      Function_3800b00
	b       branch_38010e8
@ 0x3800fc8

.arm
branch_3800fc8: @ 3800fc8 :arm
	mov     r0, #0x0
	mov     r1, r4
	mov     r2, r0
	bl      Function_3800c34
	cmp     r0, #0x0
	bne     branch_38010e8
	mov     r0, r4
	mov     r1, #0x4
	bl      Function_3800b00
	b       branch_38010e8
@ 0x3800ff0

.arm
branch_3800ff0: @ 3800ff0 :arm
	ldr     r0, [r2, #0x24]
	cmp     r0, #0x0
	beq     branch_380100c
	mov     r0, r4
	mov     r1, #0x3
	bl      Function_3800b00
	b       branch_38010e8
@ 0x380100c

.arm
branch_380100c: @ 380100c :arm
	and     r0, r1, #0xff
	mov     r0, r0, lsl #16
	movs    r3, r0, lsr #16
	beq     branch_3801024
	cmp     r3, #0x4
	bls     branch_3801034
.arm
branch_3801024: @ 3801024 :arm
	mov     r0, r4
	mov     r1, #0x2
	bl      Function_3800b00
	b       branch_38010e8
@ 0x3801034

.arm
branch_3801034: @ 3801034 :arm
	ldrh    r12, [r2, #0x6]
	ldr     r0, [pc, #0xbc] @ [0x38010fc] (=0x107)
	cmp     r12, r0
	bcc     branch_3801054
	mov     r0, r4
	mov     r1, #0x2
	bl      Function_3800b00
	b       branch_38010e8
@ 0x3801054

.arm
branch_3801054: @ 3801054 :arm
	mov     r1, r4
	mov     r0, #0x0
	mov     r2, #0x2
	str     r12, [sp]
	bl      Function_3800c34
	cmp     r0, #0x0
	ldrne   r0, [pc, #0x84] @ [0x38010f8] (=0x38093f0)
	movne   r1, #0x1
	strne   r1, [r0, #0x24]
	bne     branch_38010e8
	mov     r0, r4
	mov     r1, #0x4
	bl      Function_3800b00
	b       branch_38010e8
@ 0x380108c

.arm
branch_380108c: @ 380108c :arm
	ldr     r0, [r2, #0x24]
	cmp     r0, #0x2
	beq     branch_38010a8
	mov     r0, r4
	mov     r1, #0x3
	bl      Function_3800b00
	b       branch_38010e8
@ 0x38010a8

.arm
branch_38010a8: @ 38010a8 :arm
	mov     r0, #0x0
	mov     r1, r4
	mov     r2, r0
	bl      Function_3800c34
	cmp     r0, #0x0
	ldrne   r0, [pc, #0x34] @ [0x38010f8] (=0x38093f0)
	movne   r1, #0x3
	strne   r1, [r0, #0x24]
	bne     branch_38010e8
	mov     r0, r4
	mov     r1, #0x4
	bl      Function_3800b00
	b       branch_38010e8
@ 0x38010dc

.arm
branch_38010dc: @ 38010dc :arm
	mov     r0, r4
	mov     r1, #0x1
	bl      Function_3800b00
.arm
branch_38010e8: @ 38010e8 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x38010f4

.word 0x38093f4 @ 0x38010f4
.word 0x38093f0 @ 0x38010f8
.word 0x107 @ 0x38010fc
.arm
Function_3801100: @ 3801100 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0xc
	mov     r10, r0
	ldr     r1, [r10, #0x4]
	cmp     r1, #0x2
	bhi     branch_3801134
	cmp     r1, #0x0
	beq     branch_380114c
	cmp     r1, #0x1
	beq     branch_38012b8
	cmp     r1, #0x2
	beq     branch_3801380
	b       branch_38013cc
@ 0x3801134

.arm
branch_3801134: @ 3801134 :arm
	cmp     r1, #0x10
	bne     branch_38013cc
	ldr     r0, [pc, #0x294] @ [0x38013d8] (=0x38093f0)
	ldr     r0, [r0, #0x24]
	cmp     r0, #0x2
	bne     branch_38013cc
.arm
branch_380114c: @ 380114c :arm
	bl      Function_37fada4
	mov     r4, r0
	mov     r0, #0x0
	bl      Function_3800bc4
	cmp     r0, #0x0
	bne     branch_3801184
	mov     r0, r4
	bl      Function_37fadb8
	ldr     r0, [r10, #0x4]
	mov     r1, #0x4
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	b       branch_38013cc
@ 0x3801184

.arm
branch_3801184: @ 3801184 :arm
	mov     r0, #0x0
	bl      Function_3800be0
	mov     r0, r4
	bl      Function_37fadb8
	ldr     r1, [pc, #0x23c] @ [0x38013d8] (=0x38093f0)
	add     r0, sp, #0x8
	ldr     r1, [r1, #0x28]
	add     r2, sp, #0x4
	bl      Function_3801764
	ldr     r0, [sp, #0x8]
	ldrh    r2, [sp, #0x4]
	mov     r1, r0, lsl #7
	movs    r1, r1, lsr #31
	ldreq   r0, [pc, #0x218] @ [0x38013d8] (=0x38093f0)
	moveq   r1, #0x0
	streqb  r1, [r0, #0x1]
	streqb  r1, [r0]
	beq     branch_3801264
	mov     r0, r0, lsl #5
	movs    r0, r0, lsr #30
	beq     branch_3801214
	ldr     r0, [pc, #0x1f8] @ [0x38013d8] (=0x38093f0)
	mov     r3, #0x0
	strb    r3, [r0]
	ldrb    r1, [r0, #0x1]
	add     r2, r1, #0x1
	and     r1, r2, #0xff
	strb    r2, [r0, #0x1]
	cmp     r1, #0x4
	bcc     branch_3801264
	strb    r3, [r0, #0x1]
	ldr     r1, [r0, #0x28]
	cmp     r1, #0x23
	addlt   r1, r1, #0x1
	strlt   r1, [r0, #0x28]
	b       branch_3801264
@ 0x3801214

.arm
branch_3801214: @ 3801214 :arm
	ldr     r0, [pc, #0x1bc] @ [0x38013d8] (=0x38093f0)
	mov     r4, #0x0
	strb    r4, [r0, #0x1]
	ldr     r3, [r0, #0x28]
	cmp     r2, r3, asr #1
	strgeb  r4, [r0]
	bge     branch_3801264
	ldrb    r1, [r0]
	add     r2, r1, #0x1
	and     r1, r2, #0xff
	strb    r2, [r0]
	cmp     r1, #0x4
	bcc     branch_3801264
	strb    r4, [r0]
	ldr     r1, [r0, #0x2c]
	cmp     r3, r1
	subgt   r1, r3, #0x1
	strgt   r1, [r0, #0x28]
	movgt   r1, #0x3
	strgtb  r1, [r0, #0x1]
.arm
branch_3801264: @ 3801264 :arm
	ldrh    r0, [sp, #0x8]
	ldr     r1, [pc, #0x16c] @ [0x38013dc] (=0x27fffaa)
	strh    r0, [r1]
	ldrh    r0, [sp, #0xa]
	strh    r0, [r1, #0x2]
	ldr     r0, [r10, #0x4]
	cmp     r0, #0x0
	bne     branch_3801298
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x0
	bl      Function_3800b00
	b       branch_38012ac
@ 0x3801298

.arm
branch_3801298: @ 3801298 :arm
	ldr     r1, [r10, #0x8]
	mov     r0, r0, lsl #16
	and     r1, r1, #0xff
	mov     r0, r0, lsr #16
	bl      Function_3800b00
.arm
branch_38012ac: @ 38012ac :arm
	mov     r0, #0x0
	bl      Function_3800bf8
	b       branch_38013cc
@ 0x38012b8

.arm
branch_38012b8: @ 38012b8 :arm
	ldr     r0, [pc, #0x118] @ [0x38013d8] (=0x38093f0)
	ldr     r0, [r0, #0x24]
	cmp     r0, #0x1
	bne     branch_380136c
	ldr     r8, [pc, #0x110] @ [0x38013e0] (=0x107)
	ldr     r6, [pc, #0x110] @ [0x38013e4] (=0x38093f4)
	ldr     r5, [pc, #0x110] @ [0x38013e8] (=0x3809420)
	mov     r9, #0x0
	mov     r7, #0xd7
	mov     r11, #0xa
	mov     r4, #0x28
	b       branch_380133c
@ 0x38012e8

.arm
branch_38012e8: @ 38012e8 :arm
	mul     r0, r9, r8
	bl      Function_3806460
	ldr     r2, [r10, #0xc]
	mov     r1, r8
	add     r0, r2, r0
	bl      Function_3806460
	mov     r0, r1, lsl #16
	mov     r0, r0, lsr #16
	cmp     r0, #0xc8
	bcc     branch_3801318
	cmp     r0, #0xd7
	movcc   r0, r7
.arm
branch_3801318: @ 3801318 :arm
	add     r1, r6, r9, lsl #1
	strh    r0, [r1, #0xcc]
	str     r9, [sp]
	mla     r0, r9, r4, r5
	ldrsh   r1, [r1, #0xcc]
	ldr     r3, [pc, #0xb8] @ [0x38013ec] (=0x38013f4)
	mov     r2, r11
	bl      Function_37fa9cc
	add     r9, r9, #0x1
.arm
branch_380133c: @ 380133c :arm
	ldr     r1, [r10, #0x8]
	cmp     r9, r1
	bcc     branch_38012e8
	ldr     r0, [r10, #0x4]
	mov     r1, #0x0
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	ldr     r0, [pc, #0x74] @ [0x38013d8] (=0x38093f0)
	mov     r1, #0x2
	str     r1, [r0, #0x24]
	b       branch_38013cc
@ 0x380136c

.arm
branch_380136c: @ 380136c :arm
	mov     r0, r1, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x3
	bl      Function_3800b00
	b       branch_38013cc
@ 0x3801380

.arm
branch_3801380: @ 3801380 :arm
	ldr     r0, [pc, #0x50] @ [0x38013d8] (=0x38093f0)
	ldr     r0, [r0, #0x24]
	cmp     r0, #0x3
	bne     branch_38013bc
	ldr     r0, [pc, #0x58] @ [0x38013f0] (=0x54505641)
	bl      Function_37fab28
	ldr     r0, [r10, #0x4]
	mov     r1, #0x0
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	ldr     r0, [pc, #0x24] @ [0x38013d8] (=0x38093f0)
	mov     r1, #0x0
	str     r1, [r0, #0x24]
	b       branch_38013cc
@ 0x38013bc

.arm
branch_38013bc: @ 38013bc :arm
	mov     r0, r1, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x3
	bl      Function_3800b00
.arm
branch_38013cc: @ 38013cc :arm
	add     sp, sp, #0xc
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x38013d8

.word 0x38093f0 @ 0x38013d8
.word 0x27fffaa @ 0x38013dc
.word 0x107 @ 0x38013e0
.word 0x38093f4 @ 0x38013e4
.word 0x3809420 @ 0x38013e8
.word 0x38013f4 @ 0x38013ec
.word 0x54505641 @ 0x38013f0
.arm
Function_38013f4: @ 38013f4 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	mov     r4, r0
	mov     r3, r4
	mov     r0, #0x0
	mov     r1, #0x10
	mov     r2, #0x1
	bl      Function_3800c34
	cmp     r0, #0x0
	bne     branch_380144c
	ldr     r0, [sp]
	ldr     r3, [pc, #0x30] @ [0x3801458] (=0x27fffaa)
	bic     r0, r0, #6, 8 @ #0x6000000
	orr     r0, r0, #6, 8 @ #0x6000000
	str     r0, [sp]
	ldrh    r0, [sp]
	ldrh    r2, [sp, #0x2]
	strh    r0, [r3]
	and     r1, r4, #0xff
	mov     r0, #0x10
	strh    r2, [r3, #0x2]
	bl      Function_3800b00
.arm
branch_380144c: @ 380144c :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x3801458

.word 0x27fffaa @ 0x3801458
.arm
Function_380145c: @ 380145c :arm
	stmfd   sp!, {r3,lr}
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	ldr     r2, [pc, #0xc8] @ [0x3801538] (=0x40001c0)
.arm
branch_380146c: @ 380146c :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_380146c
	ldr     r1, [pc, #0xbc] @ [0x380153c] (=0x8a01)
	ldr     r0, [pc, #0xbc] @ [0x3801540] (=0x40001c2)
	strh    r1, [r2]
	mov     r1, #0x84
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_3801490: @ 3801490 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3801490
	bl      Function_3801550
	ldr     r1, [pc, #0x9c] @ [0x3801544] (=0x8201)
	ldr     r0, [pc, #0x8c] @ [0x3801538] (=0x40001c0)
	strh    r1, [r0]
	bl      Function_3801550
	ldr     r0, [pc, #0x90] @ [0x3801548] (=0x38094c8)
	ldrh    r0, [r0]
	cmp     r0, #0x0
	bne     branch_38014d8
	ldr     r0, [pc, #0x84] @ [0x380154c] (=0x4000136)
	ldrh    r0, [r0]
	tst     r0, #0x40
	moveq   r0, #0x1
	movne   r0, #0x0
	b       branch_3801530
@ 0x38014d8

.arm
branch_38014d8: @ 38014d8 :arm
	ldr     r2, [pc, #0x6c] @ [0x380154c] (=0x4000136)
	ldrh    r0, [r2]
	tst     r0, #0x40
	moveq   r0, #0x1
	beq     branch_3801530
	ldr     r1, [pc, #0x48] @ [0x380153c] (=0x8a01)
	mov     r0, #0x84
	strh    r1, [r2, #0x8a]
	strh    r0, [r2, #0x8c]
.arm
branch_38014fc: @ 38014fc :arm
	ldrh    r0, [r2, #0x8a]
	tst     r0, #0x80
	bne     branch_38014fc
	bl      Function_3801550
	ldr     r1, [pc, #0x30] @ [0x3801544] (=0x8201)
	ldr     r0, [pc, #0x20] @ [0x3801538] (=0x40001c0)
	strh    r1, [r0]
	bl      Function_3801550
	ldr     r0, [pc, #0x28] @ [0x380154c] (=0x4000136)
	ldrh    r0, [r0]
	tst     r0, #0x40
	movne   r0, #0x0
	moveq   r0, #0x2
.arm
branch_3801530: @ 3801530 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3801538

.word 0x40001c0 @ 0x3801538
.word 0x8a01 @ 0x380153c
.word 0x40001c2 @ 0x3801540
.word 0x8201 @ 0x3801544
.word 0x38094c8 @ 0x3801548
.word 0x4000136 @ 0x380154c
.arm
Function_3801550: @ 3801550 :arm
	ldr     r0, [pc, #0x18] @ [0x3801570] (=0x40001c2)
	mov     r1, #0x0
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_3801560: @ 3801560 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3801560
	bx      lr
@ 0x3801570

.word 0x40001c2 @ 0x3801570
.arm
Function_3801574: @ 3801574 :arm
	stmfd   sp!, {r4-r9,lr}
	sub     sp, sp, #0x14
	cmp     r2, #0x0
	ldr     r2, [pc, #0x1c8] @ [0x3801750] (=0x40001c0)
	mov     r5, r3
	moveq   r3, #0xd1
	moveq   r4, #0x1
	mov     r7, r0
	mov     r6, r1
	movne   r3, #0x91
	movne   r4, #0x2
.arm
branch_38015a0: @ 38015a0 :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_38015a0
	ldr     r1, [pc, #0x1a0] @ [0x3801754] (=0x8a01)
	ldr     r0, [pc, #0x1a0] @ [0x3801758] (=0x40001c2)
	strh    r1, [r2]
	and     r2, r3, #0xff
	strh    r2, [r0]
	sub     r1, r0, #0x2
.arm
branch_38015c4: @ 38015c4 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_38015c4
	mov     r0, r2, lsl #16
	ldr     r2, [pc, #0x174] @ [0x3801750] (=0x40001c0)
	mov     r12, #0x0
	ldr     r8, [pc, #0x178] @ [0x380175c] (=0x7ff8)
	add     r1, sp, #0x0
	mov     r0, r0, lsr #16
	mov     r3, r12
.arm
branch_38015ec: @ 38015ec :arm
	strh    r3, [r2, #0x2]
.arm
branch_38015f0: @ 38015f0 :arm
	ldrh    r9, [r2]
	tst     r9, #0x80
	bne     branch_38015f0
	ldrh    r9, [r2, #0x2]
	and     r9, r9, #0xff
	mov     lr, r9, lsl #16
	mov     r9, lr, lsr #8
	str     r9, [r1, r12, lsl #0x2]
	strh    r0, [r2, #0x2]
.arm
branch_3801614: @ 3801614 :arm
	ldrh    r9, [r2]
	tst     r9, #0x80
	bne     branch_3801614
	ldrh    lr, [r2, #0x2]
	ldr     r9, [r1, r12, lsl #0x2]
	and     lr, lr, #0xff
	mov     lr, lr, lsl #16
	orr     r9, r9, lr, lsr #16
	and     lr, r9, r8
	mov     lr, lr, asr #3
	str     lr, [r1, r12, lsl #0x2]
	add     r12, r12, #0x1
	cmp     r12, #0x5
	blt     branch_38015ec
	ldr     r0, [pc, #0x10c] @ [0x3801760] (=0x8201)
	strh    r0, [r2]
	bl      Function_3801550
	mov     r8, #0x0
	mov     r9, r8
	add     r2, sp, #0x0
.arm
branch_3801664: @ 3801664 :arm
	ldr     r1, [r2, r9, lsl #0x2]
	add     r3, r9, #0x1
	b       branch_3801688
@ 0x3801670

.arm
branch_3801670: @ 3801670 :arm
	ldr     r0, [r2, r3, lsl #0x2]
	add     r3, r3, #0x1
	subs    r0, r1, r0
	rsbmi   r0, r0, #0x0
	cmp     r0, r8
	movgt   r8, r0
.arm
branch_3801688: @ 3801688 :arm
	cmp     r3, #0x5
	blt     branch_3801670
	add     r9, r9, #0x1
	cmp     r9, #0x4
	blt     branch_3801664
	strh    r8, [r5]
	mov     r8, #0x0
	add     r0, sp, #0x0
	b       branch_3801720
@ 0x38016ac

.arm
branch_38016ac: @ 38016ac :arm
	ldr     r3, [r0, r8, lsl #0x2]
	add     r9, r8, #0x1
	b       branch_3801714
@ 0x38016b8

.arm
branch_38016b8: @ 38016b8 :arm
	ldr     r2, [r0, r9, lsl #0x2]
	subs    r1, r3, r2
	rsbmi   r1, r1, #0x0
	cmp     r1, r6
	bgt     branch_3801710
	add     r1, r9, #0x1
	b       branch_3801708
@ 0x38016d4

.arm
branch_38016d4: @ 38016d4 :arm
	ldr     r5, [r0, r1, lsl #0x2]
	subs    r12, r3, r5
	rsbmi   r12, r12, #0x0
	cmp     r12, r6
	bgt     branch_3801704
	add     r0, r2, r3, lsl #1
	add     r0, r5, r0
	mov     r0, r0, asr #2
	bic     r0, r0, #0x7
	strh    r0, [r7]
	mov     r0, #0x0
	b       branch_3801744
@ 0x3801704

.arm
branch_3801704: @ 3801704 :arm
	add     r1, r1, #0x1
.arm
branch_3801708: @ 3801708 :arm
	cmp     r1, #0x5
	blt     branch_38016d4
.arm
branch_3801710: @ 3801710 :arm
	add     r9, r9, #0x1
.arm
branch_3801714: @ 3801714 :arm
	cmp     r9, #0x4
	blt     branch_38016b8
	add     r8, r8, #0x1
.arm
branch_3801720: @ 3801720 :arm
	cmp     r8, #0x3
	blt     branch_38016ac
	ldr     r2, [sp]
	ldr     r1, [sp, #0x10]
	mov     r0, r4
	add     r1, r2, r1
	mov     r1, r1, asr #1
	bic     r1, r1, #0x7
	strh    r1, [r7]
.arm
branch_3801744: @ 3801744 :arm
	add     sp, sp, #0x14
	ldmfd   sp!, {r4-r9,lr}
	bx      lr
@ 0x3801750

.word 0x40001c0 @ 0x3801750
.word 0x8a01 @ 0x3801754
.word 0x40001c2 @ 0x3801758
.word 0x7ff8 @ 0x380175c
.word 0x8201 @ 0x3801760
.arm
Function_3801764: @ 3801764 :arm
	stmfd   sp!, {r3-r7,lr}
	sub     sp, sp, #0x8
	movs    r6, r1
	mov     r5, r2
	mov     r1, #0x0
	mov     r7, r0
	strh    r1, [r5]
	rsbmi   r6, r6, #0x0
	bl      Function_380145c
	movs    r4, r0
	bne     branch_38017cc
	ldr     r1, [r7]
	mov     r0, #1, 20 @ #0x1000
	rsb     r0, r0, #0x0
	and     r1, r1, r0
	ldr     r0, [pc, #0x1a0] @ [0x3801948] (=0xff000fff)
	and     r0, r1, r0
	bic     r1, r0, #1, 8 @ #0x1000000
	bic     r0, r1, #6, 8 @ #0x6000000
	str     r1, [r7]
	orr     r1, r0, #6, 8 @ #0x6000000
	str     r1, [r7]
	ldr     r0, [pc, #0x188] @ [0x380194c] (=0x38094c8)
	mov     r1, #0x0
	strh    r1, [r0]
	b       branch_380193c
@ 0x38017cc

.arm
branch_38017cc: @ 38017cc :arm
	add     r0, sp, #0x4
	add     r3, sp, #0x2
	mov     r1, r6
	mov     r2, #0x0
	bl      Function_3801574
	ldr     r1, [r7]
	mov     r0, r0, lsl #30
	bic     r1, r1, #6, 8 @ #0x6000000
	orr     r12, r1, r0, lsr #5
	str     r12, [r7]
	mov     r1, #1, 20 @ #0x1000
	rsb     r1, r1, #0x0
	ldrh    r2, [sp, #0x4]
	and     r12, r12, r1
	and     r1, r2, r1, lsr #20
	orr     r12, r12, r1
	add     r0, sp, #0x4
	add     r3, sp, #0x0
	mov     r1, r6
	mov     r2, #0x1
	str     r12, [r7]
	bl      Function_3801574
	cmp     r0, #0x2
	bne     branch_380184c
	ldr     r1, [r7]
	mov     r0, r1, lsl #5
	mov     r0, r0, lsr #30
	orr     r0, r0, #0x2
	bic     r1, r1, #6, 8 @ #0x6000000
	mov     r0, r0, lsl #30
	orr     r0, r1, r0, lsr #5
	str     r0, [r7]
.arm
branch_380184c: @ 380184c :arm
	ldrh    r1, [sp, #0x4]
	ldr     r2, [r7]
	ldr     r0, [pc, #0xec] @ [0x3801948] (=0xff000fff)
	mov     r1, r1, lsl #20
	and     r0, r2, r0
	orr     r2, r0, r1, lsr #8
	ldr     r1, [pc, #0xe4] @ [0x3801950] (=0x8a01)
	ldr     r0, [pc, #0xe4] @ [0x3801954] (=0x40001c0)
	str     r2, [r7]
	strh    r1, [r0]
	mov     r6, #0x0
.arm
branch_3801878: @ 3801878 :arm
	bl      Function_3801550
	add     r6, r6, #0x1
	cmp     r6, #0xc
	blt     branch_3801878
	ldr     r1, [pc, #0xc8] @ [0x3801958] (=0x8201)
	ldr     r0, [pc, #0xc0] @ [0x3801954] (=0x40001c0)
	strh    r1, [r0]
	bl      Function_3801550
	cmp     r4, #0x2
	ldreq   r0, [r7]
	biceq   r0, r0, #6, 8 @ #0x6000000
	orreq   r0, r0, #6, 8 @ #0x6000000
	streq   r0, [r7]
	bl      Function_380145c
	cmp     r0, #0x0
	beq     branch_380191c
	cmp     r0, #0x1
	beq     branch_38018ec
	cmp     r0, #0x2
	bne     branch_3801938
	ldr     r1, [r7]
	ldr     r0, [pc, #0x78] @ [0x380194c] (=0x38094c8)
	orr     r2, r1, #1, 8 @ #0x1000000
	bic     r1, r2, #6, 8 @ #0x6000000
	orr     r1, r1, #6, 8 @ #0x6000000
	str     r1, [r7]
	mov     r1, #0x0
	strh    r1, [r0]
	b       branch_380193c
@ 0x38018ec

.arm
branch_38018ec: @ 38018ec :arm
	ldr     r1, [r7]
	ldr     r0, [pc, #0x54] @ [0x380194c] (=0x38094c8)
	orr     r1, r1, #1, 8 @ #0x1000000
	str     r1, [r7]
	mov     r2, #0x1
	ldrh    r1, [sp]
	ldrh    r3, [sp, #0x2]
	strh    r2, [r0]
	cmp     r3, r1
	movcc   r3, r1
	strh    r3, [r5]
	b       branch_380193c
@ 0x380191c

.arm
branch_380191c: @ 380191c :arm
	ldr     r1, [r7]
	ldr     r0, [pc, #0x24] @ [0x380194c] (=0x38094c8)
	bic     r1, r1, #1, 8 @ #0x1000000
	str     r1, [r7]
	mov     r1, #0x0
	strh    r1, [r0]
	b       branch_380193c
@ 0x3801938

.arm
branch_3801938: @ 3801938 :arm
	bl      Function_37faf14
.arm
branch_380193c: @ 380193c :arm
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x3801948

.word 0xff000fff @ 0x3801948
.word 0x38094c8 @ 0x380194c
.word 0x8a01 @ 0x3801950
.word 0x40001c0 @ 0x3801954
.word 0x8201 @ 0x3801958
.arm
Function_380195c: @ 380195c :arm
	ldr     r0, [pc, #0x2c] @ [0x3801990] (=0x38094cc)
	mov     r1, #0x1
	str     r1, [r0, #0x4]
	mov     r3, #0x0
	str     r3, [r0, #0x28]
	ldr     r0, [pc, #0x1c] @ [0x3801994] (=0x38094d4)
	mov     r2, r3
.arm
branch_3801978: @ 3801978 :arm
	mov     r1, r3, lsl #1
	add     r3, r3, #0x1
	strh    r2, [r0, r1]
	cmp     r3, #0x10
	blt     branch_3801978
	bx      lr
@ 0x3801990

.word 0x38094cc @ 0x3801990
.word 0x38094d4 @ 0x3801994
.arm
Function_3801998: @ 3801998 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	tst     r0, #2, 8 @ #0x2000000
	beq     branch_38019c8
	ldr     r1, [pc, #0x19c] @ [0x3801b4c] (=0x38094d4)
	mov     r4, #0x0
	mov     r3, r4
.arm
branch_38019b4: @ 38019b4 :arm
	mov     r2, r4, lsl #1
	add     r4, r4, #0x1
	strh    r3, [r1, r2]
	cmp     r4, #0x10
	blt     branch_38019b4
.arm
branch_38019c8: @ 38019c8 :arm
	ldr     r1, [pc, #0x17c] @ [0x3801b4c] (=0x38094d4)
	and     r2, r0, #15, 16 @ #0xf0000
	mov     r2, r2, lsr #16
	mov     r2, r2, lsl #1
	strh    r0, [r1, r2]
	tst     r0, #1, 8 @ #0x1000000
	beq     branch_3801b40
	ldr     r1, [pc, #0x164] @ [0x3801b50] (=0x38094cc)
	ldrh    r2, [r1, #0x8]
	and     r0, r2, #255, 24 @ #0xff00
	mov     r0, r0, lsl #8
	mov     r4, r0, lsr #16
	sub     r0, r4, #0x60
	cmp     r0, #0x7
	addls   pc, pc, r0, lsl #2
	b       branch_3801b34
@ 0x3801a08

.arm
Function_3801a08: @ 3801a08 :arm
	b       branch_3801a28
@ 0x3801a0c

.arm
Function_3801a0c: @ 3801a0c :arm
	b       branch_3801a38
@ 0x3801a10

.arm
Function_3801a10: @ 3801a10 :arm
	b       branch_3801b34
@ 0x3801a14

.arm
Function_3801a14: @ 3801a14 :arm
	b       branch_3801ad0
@ 0x3801a18

.arm
Function_3801a18: @ 3801a18 :arm
	b       branch_3801a6c
@ 0x3801a1c

.arm
Function_3801a1c: @ 3801a1c :arm
	b       branch_3801aa0
@ 0x3801a20

.arm
Function_3801a20: @ 3801a20 :arm
	b       branch_3801b04
@ 0x3801a24

.arm
Function_3801a24: @ 3801a24 :arm
	b       branch_3801b1c
@ 0x3801a28

.arm
branch_3801a28: @ 3801a28 :arm
	mov     r0, #0x60
	mov     r1, #0x0
	bl      Function_3800b00
	b       branch_3801b40
@ 0x3801a38

.arm
branch_3801a38: @ 3801a38 :arm
	ldrh    r12, [r1, #0xa]
	mov     r1, r4
	and     r3, r2, #0xff
	mov     r0, #0x3
	mov     r2, #0x2
	str     r12, [sp]
	bl      Function_3800c34
	cmp     r0, #0x0
	bne     branch_3801b40
	mov     r0, r4
	mov     r1, #0x4
	bl      Function_3800b00
	b       branch_3801b40
@ 0x3801a6c

.arm
branch_3801a6c: @ 3801a6c :arm
	ldrh    r12, [r1, #0xa]
	mov     r1, r4
	and     r3, r2, #0xff
	mov     r0, #0x3
	mov     r2, #0x2
	str     r12, [sp]
	bl      Function_3800c34
	cmp     r0, #0x0
	bne     branch_3801b40
	mov     r0, r4
	mov     r1, #0x4
	bl      Function_3800b00
	b       branch_3801b40
@ 0x3801aa0

.arm
branch_3801aa0: @ 3801aa0 :arm
	mov     r0, r2, lsl #16
	mov     r1, r4
	mov     r3, r0, lsr #16
	mov     r0, #0x3
	mov     r2, #0x1
	bl      Function_3800c34
	cmp     r0, #0x0
	bne     branch_3801b40
	mov     r0, r4
	mov     r1, #0x4
	bl      Function_3800b00
	b       branch_3801b40
@ 0x3801ad0

.arm
branch_3801ad0: @ 3801ad0 :arm
	ldrh    r0, [r1, #0xa]
	mov     r2, r2, lsl #24
	mov     r1, r4
	orr     r3, r0, r2, lsr #8
	mov     r0, #0x3
	mov     r2, #0x1
	bl      Function_3800c34
	cmp     r0, #0x0
	bne     branch_3801b40
	mov     r0, r4
	mov     r1, #0x4
	bl      Function_3800b00
	b       branch_3801b40
@ 0x3801b04

.arm
branch_3801b04: @ 3801b04 :arm
	and     r0, r2, #0xff
	bl      Function_38022d4
	mov     r0, #0x66
	mov     r1, #0x0
	bl      Function_3800b00
	b       branch_3801b40
@ 0x3801b1c

.arm
branch_3801b1c: @ 3801b1c :arm
	bl      Function_38022f0
	mov     r0, r0, lsl #16
	mov     r1, r0, lsr #16
	mov     r0, #0x67
	bl      Function_3800b00
	b       branch_3801b40
@ 0x3801b34

.arm
branch_3801b34: @ 3801b34 :arm
	mov     r0, r4
	mov     r1, #0x1
	bl      Function_3800b00
.arm
branch_3801b40: @ 3801b40 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x3801b4c

.word 0x38094d4 @ 0x3801b4c
.word 0x38094cc @ 0x3801b50
.arm
Function_3801b54: @ 3801b54 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	bl      Function_37fada4
	mov     r5, r0
	mov     r0, #0x3
	bl      Function_3800bc4
	cmp     r0, #0x0
	bne     branch_3801b94
	mov     r0, r5
	bl      Function_37fadb8
	ldr     r0, [r4, #0x4]
	mov     r1, #0x4
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	b       branch_3801cb8
@ 0x3801b94

.arm
branch_3801b94: @ 3801b94 :arm
	mov     r0, #0x3
	bl      Function_3800be0
	mov     r0, r5
	bl      Function_37fadb8
	ldr     r1, [r4, #0x4]
	sub     r0, r1, #0x61
	cmp     r0, #0x5
	addls   pc, pc, r0, lsl #2
	b       branch_3801ca0
@ 0x3801bb8

.arm
Function_3801bb8: @ 3801bb8 :arm
	b       branch_3801bd0
@ 0x3801bbc

.arm
Function_3801bbc: @ 3801bbc :arm
	b       branch_3801ca0
@ 0x3801bc0

.arm
Function_3801bc0: @ 3801bc0 :arm
	b       branch_3801c6c
@ 0x3801bc4

.arm
Function_3801bc4: @ 3801bc4 :arm
	b       branch_3801bf4
@ 0x3801bc8

.arm
Function_3801bc8: @ 3801bc8 :arm
	b       branch_3801c30
@ 0x3801bcc

.arm
Function_3801bcc: @ 3801bcc :arm
	b       branch_3801c94
@ 0x3801bd0

.arm
branch_3801bd0: @ 3801bd0 :arm
	ldr     r0, [pc, #0xe8] @ [0x3801cc0] (=0x38094cc)
	mov     r1, #0x1
	str     r1, [r0, #0x28]
	ldr     r1, [r4, #0x8]
	strh    r1, [r0, #0x2]
	ldr     r1, [r4, #0xc]
	strh    r1, [r0]
	bl      Function_3801fd4
	b       branch_3801cb0
@ 0x3801bf4

.arm
branch_3801bf4: @ 3801bf4 :arm
	ldr     r2, [pc, #0xc4] @ [0x3801cc0] (=0x38094cc)
	mov     r0, #0x4
	str     r0, [r2, #0x28]
	ldr     r0, [r4, #0x8]
	str     r0, [r2, #0x30]
	ldr     r3, [r4, #0xc]
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	and     r1, r3, #0xff
	str     r3, [r2, #0x2c]
	bl      Function_3801d08
	mov     r0, #0x64
	mov     r1, #0x0
	bl      Function_3800b00
	b       branch_3801cb0
@ 0x3801c30

.arm
branch_3801c30: @ 3801c30 :arm
	ldr     r1, [pc, #0x88] @ [0x3801cc0] (=0x38094cc)
	mov     r0, #0x3
	str     r0, [r1, #0x28]
	ldr     r2, [r4, #0x8]
	mov     r0, r2, lsl #16
	mov     r4, r0, lsr #16
	mov     r0, r4
	str     r2, [r1, #0x30]
	bl      Function_3801d84
	add     r1, r4, #0x70
	mov     r2, r1, lsl #16
	mov     r1, r0
	mov     r0, r2, lsr #16
	bl      Function_3800b00
	b       branch_3801cb0
@ 0x3801c6c

.arm
branch_3801c6c: @ 3801c6c :arm
	ldr     r1, [pc, #0x4c] @ [0x3801cc0] (=0x38094cc)
	mov     r0, #0x2
	str     r0, [r1, #0x28]
	ldr     r0, [r4, #0x8]
	str     r0, [r1, #0x2c]
	bl      Function_3801e48
	mov     r0, #0x63
	mov     r1, #0x0
	bl      Function_3800b00
	b       branch_3801cb0
@ 0x3801c94

.arm
branch_3801c94: @ 3801c94 :arm
	ldr     r0, [r4, #0x8]
	bl      Function_3801f6c
	b       branch_3801cb0
@ 0x3801ca0

.arm
branch_3801ca0: @ 3801ca0 :arm
	mov     r0, r1, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x1
	bl      Function_3800b00
.arm
branch_3801cb0: @ 3801cb0 :arm
	mov     r0, #0x3
	bl      Function_3800bf8
.arm
branch_3801cb8: @ 3801cb8 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x3801cc0

.word 0x38094cc @ 0x3801cc0
.arm
Function_3801cc4: @ 3801cc4 :arm
	stmfd   sp!, {r4-r6,lr}
	and     r1, r1, #63, 16 @ #0x3f0000
	and     r3, r0, #15, 10 @ #0x3c00000
	mov     r1, r1, lsl #16
	mov     r0, r2, lsl #16
	orr     r1, r1, r3, lsl #22
	orr     r6, r1, r0, lsr #16
	mov     r5, #0x8
	mov     r4, #0x0
.arm
branch_3801ce8: @ 3801ce8 :arm
	mov     r0, r5
	mov     r1, r6
	mov     r2, r4
	bl      Function_37fb50c
	cmp     r0, #0x0
	bne     branch_3801ce8
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x3801d08

.arm
Function_3801d08: @ 3801d08 :arm
	stmfd   sp!, {r4,lr}
	ldr     r2, [pc, #0x40] @ [0x3801d54] (=0x40001c0)
	mov     r4, r1
.arm
branch_3801d14: @ 3801d14 :arm
	ldrh    r1, [r2]
	tst     r1, #0x80
	bne     branch_3801d14
	ldr     r1, [pc, #0x30] @ [0x3801d58] (=0x8202)
	and     r0, r0, #0xff
	strh    r1, [r2]
	add     r1, r1, #6, 24 @ #0x600
	strh    r1, [r2]
	bl      Function_3801d60
	ldr     r2, [pc, #0x1c] @ [0x3801d5c] (=0x8002)
	ldr     r1, [pc, #0x10] @ [0x3801d54] (=0x40001c0)
	and     r0, r4, #0xff
	strh    r2, [r1]
	strh    r0, [r1, #0x2]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3801d54

.word 0x40001c0 @ 0x3801d54
.word 0x8202 @ 0x3801d58
.word 0x8002 @ 0x3801d5c
.arm
Function_3801d60: @ 3801d60 :arm
	ldr     r1, [pc, #0x18] @ [0x3801d80] (=0x40001c2)
	and     r0, r0, #0xff
	strh    r0, [r1]
	sub     r1, r1, #0x2
.arm
branch_3801d70: @ 3801d70 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3801d70
	bx      lr
@ 0x3801d80

.word 0x40001c2 @ 0x3801d80
.arm
Function_3801d84: @ 3801d84 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x58] @ [0x3801de8] (=0x40001c0)
.arm
branch_3801d8c: @ 3801d8c :arm
	ldrh    r1, [r2]
	tst     r1, #0x80
	bne     branch_3801d8c
	ldr     r1, [pc, #0x4c] @ [0x3801dec] (=0x8202)
	orr     r0, r0, #0x80
	strh    r1, [r2]
	add     r1, r1, #6, 24 @ #0x600
	and     r0, r0, #0xff
	strh    r1, [r2]
	bl      Function_3801d60
	ldr     r2, [pc, #0x34] @ [0x3801df0] (=0x8002)
	ldr     r1, [pc, #0x28] @ [0x3801de8] (=0x40001c0)
	mov     r0, #0x0
	strh    r2, [r1]
	strh    r0, [r1, #0x2]
.arm
branch_3801dc8: @ 3801dc8 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3801dc8
	ldr     r0, [pc, #0x18] @ [0x3801df4] (=0x40001c2)
	ldrh    r0, [r0]
	and     r0, r0, #0xff
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3801de8

.word 0x40001c0 @ 0x3801de8
.word 0x8202 @ 0x3801dec
.word 0x8002 @ 0x3801df0
.word 0x40001c2 @ 0x3801df4
.arm
Function_3801df8: @ 3801df8 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #0x0
	bl      Function_3801d84
	orr     r1, r0, r4
	mov     r0, #0x0
	bl      Function_3801d08
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3801e1c

.arm
Function_3801e1c: @ 3801e1c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #0x0
	bl      Function_3801d84
	mvn     r1, r4
	and     r0, r0, r1
	and     r1, r0, #0xff
	mov     r0, #0x0
	bl      Function_3801d08
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3801e48

.arm
Function_3801e48: @ 3801e48 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0xf
	addls   pc, pc, r0, lsl #2
	b       branch_3801f64
@ 0x3801e58

.arm
Function_3801e58: @ 3801e58 :arm
	b       branch_3801f64
@ 0x3801e5c

.arm
Function_3801e5c: @ 3801e5c :arm
	b       branch_3801e98
@ 0x3801e60

.arm
Function_3801e60: @ 3801e60 :arm
	b       branch_3801eac
@ 0x3801e64

.arm
Function_3801e64: @ 3801e64 :arm
	b       branch_3801ec0
@ 0x3801e68

.arm
Function_3801e68: @ 3801e68 :arm
	b       branch_3801ed4
@ 0x3801e6c

.arm
Function_3801e6c: @ 3801e6c :arm
	b       branch_3801ee0
@ 0x3801e70

.arm
Function_3801e70: @ 3801e70 :arm
	b       branch_3801eec
@ 0x3801e74

.arm
Function_3801e74: @ 3801e74 :arm
	b       branch_3801ef8
@ 0x3801e78

.arm
Function_3801e78: @ 3801e78 :arm
	b       branch_3801f04
@ 0x3801e7c

.arm
Function_3801e7c: @ 3801e7c :arm
	b       branch_3801f10
@ 0x3801e80

.arm
Function_3801e80: @ 3801e80 :arm
	b       branch_3801f1c
@ 0x3801e84

.arm
Function_3801e84: @ 3801e84 :arm
	b       branch_3801f28
@ 0x3801e88

.arm
Function_3801e88: @ 3801e88 :arm
	b       branch_3801f34
@ 0x3801e8c

.arm
Function_3801e8c: @ 3801e8c :arm
	b       branch_3801f40
@ 0x3801e90

.arm
Function_3801e90: @ 3801e90 :arm
	b       branch_3801f58
@ 0x3801e94

.arm
Function_3801e94: @ 3801e94 :arm
	b       branch_3801f4c
@ 0x3801e98

.arm
branch_3801e98: @ 3801e98 :arm
	mov     r0, #0x1
	bl      Function_38022d4
	mov     r0, #0x1
	bl      Function_3801f6c
	b       branch_3801f64
@ 0x3801eac

.arm
branch_3801eac: @ 3801eac :arm
	mov     r0, #0x3
	bl      Function_38022d4
	mov     r0, #0x3
	bl      Function_3801f6c
	b       branch_3801f64
@ 0x3801ec0

.arm
branch_3801ec0: @ 3801ec0 :arm
	mov     r0, #0x2
	bl      Function_38022d4
	mov     r0, #0x2
	bl      Function_3801f6c
	b       branch_3801f64
@ 0x3801ed4

.arm
branch_3801ed4: @ 3801ed4 :arm
	mov     r0, #0x4
	bl      Function_3801df8
	b       branch_3801f64
@ 0x3801ee0

.arm
branch_3801ee0: @ 3801ee0 :arm
	mov     r0, #0x4
	bl      Function_3801e1c
	b       branch_3801f64
@ 0x3801eec

.arm
branch_3801eec: @ 3801eec :arm
	mov     r0, #0x8
	bl      Function_3801df8
	b       branch_3801f64
@ 0x3801ef8

.arm
branch_3801ef8: @ 3801ef8 :arm
	mov     r0, #0x8
	bl      Function_3801e1c
	b       branch_3801f64
@ 0x3801f04

.arm
branch_3801f04: @ 3801f04 :arm
	mov     r0, #0xc
	bl      Function_3801df8
	b       branch_3801f64
@ 0x3801f10

.arm
branch_3801f10: @ 3801f10 :arm
	mov     r0, #0xc
	bl      Function_3801e1c
	b       branch_3801f64
@ 0x3801f1c

.arm
branch_3801f1c: @ 3801f1c :arm
	mov     r0, #0x1
	bl      Function_3801df8
	b       branch_3801f64
@ 0x3801f28

.arm
branch_3801f28: @ 3801f28 :arm
	mov     r0, #0x1
	bl      Function_3801e1c
	b       branch_3801f64
@ 0x3801f34

.arm
branch_3801f34: @ 3801f34 :arm
	mov     r0, #0x2
	bl      Function_3801e1c
	b       branch_3801f64
@ 0x3801f40

.arm
branch_3801f40: @ 3801f40 :arm
	mov     r0, #0x2
	bl      Function_3801df8
	b       branch_3801f64
@ 0x3801f4c

.arm
branch_3801f4c: @ 3801f4c :arm
	mov     r0, #0x40
	bl      Function_3801e1c
	b       branch_3801f64
@ 0x3801f58

.arm
branch_3801f58: @ 3801f58 :arm
	bl      Function_37fb804
	mov     r0, #0x40
	bl      Function_3801df8
.arm
branch_3801f64: @ 3801f64 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3801f6c

.arm
Function_3801f6c: @ 3801f6c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	cmp     r4, #0x1
	beq     branch_3801f90
	cmp     r4, #0x2
	beq     branch_3801fa8
	cmp     r4, #0x3
	beq     branch_3801f9c
	b       branch_3801fbc
@ 0x3801f90

.arm
branch_3801f90: @ 3801f90 :arm
	mov     r0, #0x10
	bl      Function_3801e1c
	b       branch_3801fc0
@ 0x3801f9c

.arm
branch_3801f9c: @ 3801f9c :arm
	mov     r0, #0x30
	bl      Function_3801df8
	b       branch_3801fc0
@ 0x3801fa8

.arm
branch_3801fa8: @ 3801fa8 :arm
	mov     r0, #0x20
	bl      Function_3801e1c
	mov     r0, #0x10
	bl      Function_3801df8
	b       branch_3801fc0
@ 0x3801fbc

.arm
branch_3801fbc: @ 3801fbc :arm
	bl      Function_37faf14
.arm
branch_3801fc0: @ 3801fc0 :arm
	ldr     r0, [pc, #0x8] @ [0x3801fd0] (=0x3806bf8)
	str     r4, [r0]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3801fd0

.word 0x3806bf8 @ 0x3801fd0
.arm
Function_3801fd4: @ 3801fd4 :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r0, [pc, #0x1b0] @ [0x3802190] (=0x4000208)
	mov     r8, #0x0
	ldrh    r9, [r0]
	strh    r8, [r0]
	bl      Function_37fada4
	mov     r4, r0
	mvn     r0, #254, 8 @ #0xfe000000
	bl      Function_37f8984
	mov     r5, r0
	mov     r0, r8
	bl      Function_3801d84
	mov     r6, r0
	mov     r0, #0x2
	bl      Function_38022d4
	mov     r0, #0x2
	bl      Function_3801f6c
	mov     r0, #0x2
	bl      Function_3801f6c
	bl      Function_37fb804
	mov     r0, #0x1
	bl      Function_3801e1c
	ldr     r0, [pc, #0x160] @ [0x3802194] (=0x38094ce)
	ldrh    r0, [r0]
	tst     r0, #0x1
	beq     branch_3802058
	ldr     r0, [pc, #0x154] @ [0x3802198] (=0x38094cc)
	ldr     r1, [pc, #0x154] @ [0x380219c] (=0x4000132)
	ldrh    r2, [r0]
	mov     r0, #1, 20 @ #0x1000
	orr     r2, r2, #1, 18 @ #0x4000
	strh    r2, [r1]
	bl      Function_37f894c
.arm
branch_3802058: @ 3802058 :arm
	ldr     r0, [pc, #0x134] @ [0x3802194] (=0x38094ce)
	ldrh    r0, [r0]
	tst     r0, #0x4
	beq     branch_3802070
	mov     r0, #1, 10 @ #0x400000
	bl      Function_37f894c
.arm
branch_3802070: @ 3802070 :arm
	ldr     r0, [pc, #0x11c] @ [0x3802194] (=0x38094ce)
	ldrh    r0, [r0]
	tst     r0, #0x2
	beq     branch_38020b4
	ldr     r1, [pc, #0x118] @ [0x38021a0] (=0x4000134)
	mov     r0, #2, 18 @ #0x8000
	ldrh    r7, [r1]
	mov     r8, #0x1
	bl      Function_37fb6a4
	mov     r0, #0x40
	mov     r1, #0x0
	bl      Function_37fb684
	mov     r0, #1, 24 @ #0x100
	mov     r1, r0
	bl      Function_37fb684
	mov     r0, #0x80
	bl      Function_37f894c
.arm
branch_38020b4: @ 38020b4 :arm
	ldr     r0, [pc, #0xd8] @ [0x3802194] (=0x38094ce)
	ldrh    r0, [r0]
	tst     r0, #0x8
	beq     branch_38020cc
	mov     r0, #1, 12 @ #0x100000
	bl      Function_37f894c
.arm
branch_38020cc: @ 38020cc :arm
	ldr     r0, [pc, #0xc0] @ [0x3802194] (=0x38094ce)
	ldrh    r0, [r0]
	tst     r0, #0x10
	beq     branch_38020e4
	mov     r0, #2, 20 @ #0x2000
	bl      Function_37f894c
.arm
branch_38020e4: @ 38020e4 :arm
	mov     r0, r4
	bl      Function_37fadb8
	ldr     r2, [pc, #0x9c] @ [0x3802190] (=0x4000208)
	mov     r0, #0x1
	ldrh    r1, [r2]
	strh    r0, [r2]
	bl      Function_38021a8
	mov     r1, r6
	mov     r0, #0x0
	bl      Function_3801d08
	ldr     r0, [pc, #0x80] @ [0x3802194] (=0x38094ce)
	ldrh    r1, [r0]
	tst     r1, #0x20
	movne   r0, #0x6
	moveq   r0, #0x7
	tst     r1, #0x40
	movne   r6, #0x4
	moveq   r6, #0x5
	bl      Function_3801e48
	mov     r0, r6
	bl      Function_3801e48
	cmp     r8, #0x0
	ldrne   r0, [pc, #0x5c] @ [0x38021a0] (=0x4000134)
	strneh  r7, [r0]
	mov     r0, #0x1
	bl      Function_3801df8
	bl      Function_37fb85c
	mov     r1, #0x0
	ldr     r3, [pc, #0x48] @ [0x38021a4] (=0x38094d4)
	mov     r2, r1
	mov     r0, #0x62
	str     r1, [r3, #0x20]
	bl      Function_3801cc4
	bl      Function_37fada4
	mov     r0, r5
	bl      Function_37f8900
	mov     r0, r4
	bl      Function_37fadb8
	ldr     r1, [pc, #0xc] @ [0x3802190] (=0x4000208)
	ldrh    r0, [r1]
	strh    r9, [r1]
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x3802190

.word 0x4000208 @ 0x3802190
.word 0x38094ce @ 0x3802194
.word 0x38094cc @ 0x3802198
.word 0x4000132 @ 0x380219c
.word 0x4000134 @ 0x38021a0
.word 0x38094d4 @ 0x38021a4
.arm
Function_38021a8: @ 38021a8 :arm
	ldr     r12, [pc, #0x0] @ [0x38021b0] (=0x38008d3)
	bx      r12
@ 0x38021b0

.word Function_38008d2+1 @ =0x38008d3, 0x38021b0
.arm
Function_38021b4: @ 38021b4 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r1, [pc, #0x108] @ [0x38022c8] (=0x3809500)
	ldr     r3, [r1, #0x4]
	cmp     r3, #0x0
	bne     branch_38021f0
	mov     r2, #0x1
	mov     r3, r2
	mov     r0, #0x3
	mov     r1, #0x66
	bl      Function_3800c34
	cmp     r0, #0x0
	beq     branch_38022c0
	mov     r0, #0x1
	bl      Function_38022d4
	b       branch_38022c0
@ 0x38021f0

.arm
branch_38021f0: @ 38021f0 :arm
	cmp     r3, #0x4
	bge     branch_380221c
	ldr     r0, [pc, #0xcc] @ [0x38022cc] (=0x3806bf8)
	ldr     r0, [r0]
	cmp     r3, r0
	beq     branch_38022c0
	mov     r0, #0x3
	mov     r1, #0x66
	mov     r2, #0x1
	bl      Function_3800c34
	b       branch_38022c0
@ 0x380221c

.arm
branch_380221c: @ 380221c :arm
	sub     r2, r3, #0x4
	mov     r0, #0xc
	mul     r4, r2, r0
	ldr     r5, [pc, #0xa0] @ [0x38022d0] (=0x3806bfc)
	ldr     r0, [r1]
	add     r6, r5, r4
	ldrh    r1, [r6, #0xa]
	bl      Function_3806460
	mov     r1, #0x0
	mov     r3, r1, lsr r0
	ldr     r12, [r6, #0x4]
	mov     r2, #2, 2 @ #0x80000000
	rsb     r1, r0, #0x20
	orr     r3, r3, r2, lsl r1
	sub     r1, r0, #0x20
	and     r12, r12, r2, lsr r0
	orr     r3, r3, r2, lsr r1
	ldr     r0, [r5, r4]
	cmp     r12, #0x0
	and     r0, r0, r3
	cmpeq   r0, #0x0
	movne   r3, #0x1
	ldrh    r2, [r6, #0x8]
	ldrh    r1, [r6, #0xa]
	ldr     r0, [pc, #0x44] @ [0x38022c8] (=0x3809500)
	mul     r1, r2, r1
	ldr     r2, [r0]
	moveq   r3, #0x2
	add     r2, r2, #0x1
	cmp     r2, r1
	str     r2, [r0]
	movcs   r1, #0x0
	strcs   r1, [r0]
	ldr     r0, [pc, #0x24] @ [0x38022cc] (=0x3806bf8)
	ldr     r0, [r0]
	cmp     r3, r0
	beq     branch_38022c0
	mov     r0, #0x3
	mov     r1, #0x66
	mov     r2, #0x1
	bl      Function_3800c34
.arm
branch_38022c0: @ 38022c0 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x38022c8

.word 0x3809500 @ 0x38022c8
.word 0x3806bf8 @ 0x38022cc
.word 0x3806bfc @ 0x38022d0
.arm
Function_38022d4: @ 38022d4 :arm
	cmp     r0, #0xf
	ldrle   r1, [pc, #0xc] @ [0x38022ec] (=0x3809500)
	movle   r2, #0x0
	strle   r0, [r1, #0x4]
	strle   r2, [r1]
	bx      lr
@ 0x38022ec

.word 0x3809500 @ 0x38022ec
.arm
Function_38022f0: @ 38022f0 :arm
	ldr     r0, [pc, #0x4] @ [0x38022fc] (=0x3809500)
	ldr     r0, [r0, #0x4]
	bx      lr
@ 0x38022fc

.word 0x3809500 @ 0x38022fc
.arm
Function_3802300: @ 3802300 :arm
	ldr     r0, [pc, #0x34] @ [0x380233c] (=0x3809508)
	mov     r3, #0x0
	str     r3, [r0, #0x20]
	ldr     r0, [pc, #0x2c] @ [0x3802340] (=0x3809508)
	mov     r2, r3
.arm
branch_3802314: @ 3802314 :arm
	mov     r1, r3, lsl #1
	add     r3, r3, #0x1
	strh    r2, [r0, r1]
	cmp     r3, #0x10
	blt     branch_3802314
	ldr     r1, [pc, #0x14] @ [0x3802344] (=0x400010e)
	ldrh    r0, [r1]
	bic     r0, r0, #0x80
	strh    r0, [r1]
	bx      lr
@ 0x380233c

.word 0x3809508 @ 0x380233c
.word 0x3809508 @ 0x3802340
.word 0x400010e @ 0x3802344
.arm
Function_3802348: @ 3802348 :arm
	stmfd   sp!, {r4,lr}
	tst     r0, #2, 8 @ #0x2000000
	beq     branch_3802374
	ldr     r1, [pc, #0x2a4] @ [0x3802600] (=0x3809508)
	mov     r4, #0x0
	mov     r3, r4
.arm
branch_3802360: @ 3802360 :arm
	mov     r2, r4, lsl #1
	add     r4, r4, #0x1
	strh    r3, [r1, r2]
	cmp     r4, #0x10
	blt     branch_3802360
.arm
branch_3802374: @ 3802374 :arm
	ldr     r1, [pc, #0x284] @ [0x3802600] (=0x3809508)
	and     r2, r0, #15, 16 @ #0xf0000
	mov     r2, r2, lsr #16
	mov     r2, r2, lsl #1
	strh    r0, [r1, r2]
	tst     r0, #1, 8 @ #0x1000000
	beq     branch_38025f8
	ldr     r1, [pc, #0x26c] @ [0x3802604] (=0x3809508)
	ldrh    r2, [r1]
	and     r0, r2, #255, 24 @ #0xff00
	mov     r0, r0, lsl #8
	mov     r4, r0, lsr #16
	sub     r0, r4, #0x40
	cmp     r0, #0x3
	addls   pc, pc, r0, lsl #2
	b       branch_38025ec
@ 0x38023b4

.arm
Function_38023b4: @ 38023b4 :arm
	b       branch_38023c4
@ 0x38023b8

.arm
Function_38023b8: @ 38023b8 :arm
	b       branch_3802400
@ 0x38023bc

.arm
Function_38023bc: @ 38023bc :arm
	b       branch_3802504
@ 0x38023c0

.arm
Function_38023c0: @ 38023c0 :arm
	b       branch_3802568
@ 0x38023c4

.arm
branch_38023c4: @ 38023c4 :arm
	mov     r1, r4
	and     r3, r2, #0xff
	mov     r0, #0x2
	mov     r2, #0x1
	bl      Function_3800c34
	cmp     r0, #0x0
	bne     branch_38023ec
	mov     r0, r4
	mov     r1, #0x4
	bl      Function_3800b00
.arm
branch_38023ec: @ 38023ec :arm
	ldr     r0, [pc, #0x214] @ [0x3802608] (=0x27fff94)
	mov     r1, #0x0
	strh    r1, [r0]
	str     r1, [r0, #-0x4]
	b       branch_38025f8
@ 0x3802400

.arm
branch_3802400: @ 3802400 :arm
	ldr     r0, [r1, #0x20]
	cmp     r0, #0x0
	beq     branch_380241c
	mov     r0, r4
	mov     r1, #0x3
	bl      Function_3800b00
	b       branch_38025f8
@ 0x380241c

.arm
branch_380241c: @ 380241c :arm
	and     r0, r2, #0xff
	strh    r0, [r1, #0x24]
	ldrh    r2, [r1, #0x2]
	ldrh    r0, [r1, #0x4]
	orr     r3, r0, r2, lsl #16
	cmp     r3, #2, 8 @ #0x2000000
	bcc     branch_3802440
	cmp     r3, #9, 10 @ #0x2400000
	bcc     branch_3802450
.arm
branch_3802440: @ 3802440 :arm
	mov     r0, r4
	mov     r1, #0x2
	bl      Function_3800b00
	b       branch_38025f8
@ 0x3802450

.arm
branch_3802450: @ 3802450 :arm
	str     r3, [r1, #0x28]
	ldrh    r2, [r1, #0x6]
	ldrh    r0, [r1, #0x8]
	orr     r2, r0, r2, lsl #16
	add     r0, r3, r2
	cmp     r0, #9, 10 @ #0x2400000
	bls     branch_380247c
	mov     r0, r4
	mov     r1, #0x2
	bl      Function_3800b00
	b       branch_38025f8
@ 0x380247c

.arm
branch_380247c: @ 380247c :arm
	str     r2, [r1, #0x30]
	ldrh    r2, [r1, #0xa]
	ldrh    r0, [r1, #0xc]
	orr     r0, r0, r2, lsl #16
	bl      Function_3802610
	cmp     r0, #0x0
	bne     branch_38024a8
	mov     r0, r4
	mov     r1, #0x2
	bl      Function_3800b00
	b       branch_38025f8
@ 0x38024a8

.arm
branch_38024a8: @ 38024a8 :arm
	ldr     r3, [pc, #0x154] @ [0x3802604] (=0x3809508)
	mov     r2, #0x0
	str     r2, [r3, #0x2c]
	ldrh    r0, [r3, #0x24]
	mov     r1, r4
	and     r12, r0, #0x7
	mov     r0, #0x2
	strh    r12, [r3, #0x26]
	bl      Function_3800c34
	cmp     r0, #0x0
	bne     branch_38024e4
	mov     r0, r4
	mov     r1, #0x4
	bl      Function_3800b00
	b       branch_38025f8
@ 0x38024e4

.arm
branch_38024e4: @ 38024e4 :arm
	ldr     r1, [pc, #0x11c] @ [0x3802608] (=0x27fff94)
	mov     r2, #0x0
	strh    r2, [r1]
	ldr     r0, [pc, #0x10c] @ [0x3802604] (=0x3809508)
	str     r2, [r1, #-0x4]
	mov     r1, #0x1
	str     r1, [r0, #0x20]
	b       branch_38025f8
@ 0x3802504

.arm
branch_3802504: @ 3802504 :arm
	ldr     r0, [r1, #0x20]
	cmp     r0, #0x2
	beq     branch_3802520
	mov     r0, r4
	mov     r1, #0x3
	bl      Function_3800b00
	b       branch_38025f8
@ 0x3802520

.arm
branch_3802520: @ 3802520 :arm
	mov     r1, r4
	mov     r0, #0x2
	mov     r2, #0x0
	bl      Function_3800c34
	cmp     r0, #0x0
	bne     branch_3802548
	mov     r0, r4
	mov     r1, #0x4
	bl      Function_3800b00
	b       branch_38025f8
@ 0x3802548

.arm
branch_3802548: @ 3802548 :arm
	ldr     r0, [pc, #0xb4] @ [0x3802604] (=0x3809508)
	mov     r2, #0x3
	ldr     r1, [pc, #0xb4] @ [0x380260c] (=0x400010e)
	str     r2, [r0, #0x20]
	ldrh    r0, [r1]
	bic     r0, r0, #0x80
	strh    r0, [r1]
	b       branch_38025f8
@ 0x3802568

.arm
branch_3802568: @ 3802568 :arm
	ldr     r0, [r1, #0x20]
	cmp     r0, #0x2
	beq     branch_3802584
	mov     r0, r4
	mov     r1, #0x3
	bl      Function_3800b00
	b       branch_38025f8
@ 0x3802584

.arm
branch_3802584: @ 3802584 :arm
	ldrh    r2, [r1, #0x2]
	ldrh    r0, [r1, #0x4]
	orr     r0, r0, r2, lsl #16
	bl      Function_3802610
	cmp     r0, #0x0
	bne     branch_38025ac
	mov     r0, r4
	mov     r1, #0x2
	bl      Function_3800b00
	b       branch_38025f8
@ 0x38025ac

.arm
branch_38025ac: @ 38025ac :arm
	bl      Function_37fada4
	ldr     r3, [pc, #0x54] @ [0x380260c] (=0x400010e)
	ldr     r1, [pc, #0x48] @ [0x3802604] (=0x3809508)
	ldrh    r2, [r3]
	bic     r2, r2, #0x80
	strh    r2, [r3]
	ldrh    r2, [r1, #0x34]
	strh    r2, [r3, #-0x2]
	ldrh    r1, [r1, #0x36]
	orr     r1, r1, #0xc0
	strh    r1, [r3]
	bl      Function_37fadb8
	mov     r0, r4
	mov     r1, #0x0
	bl      Function_3800b00
	b       branch_38025f8
@ 0x38025ec

.arm
branch_38025ec: @ 38025ec :arm
	mov     r0, r4
	mov     r1, #0x1
	bl      Function_3800b00
.arm
branch_38025f8: @ 38025f8 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3802600

.word 0x3809508 @ 0x3802600
.word 0x3809508 @ 0x3802604
.word 0x27fff94 @ 0x3802608
.word 0x400010e @ 0x380260c
.arm
Function_3802610: @ 3802610 :arm
	cmp     r0, #1, 16 @ #0x10000
	bcs     branch_3802634
	ldr     r1, [pc, #0x90] @ [0x38026b0] (=0x3809508)
	mov     r2, #0x0
	strh    r2, [r1, #0x36]
	rsb     r0, r0, #1, 16 @ #0x10000
	strh    r0, [r1, #0x34]
	mov     r0, #0x1
	bx      lr
@ 0x3802634

.arm
branch_3802634: @ 3802634 :arm
	cmp     r0, #1, 10 @ #0x400000
	bcs     branch_380265c
	ldr     r1, [pc, #0x6c] @ [0x38026b0] (=0x3809508)
	mov     r3, #0x1
	mov     r0, r0, lsr #6
	rsb     r2, r0, #1, 16 @ #0x10000
	strh    r3, [r1, #0x36]
	mov     r0, r3
	strh    r2, [r1, #0x34]
	bx      lr
@ 0x380265c

.arm
branch_380265c: @ 380265c :arm
	cmp     r0, #1, 8 @ #0x1000000
	bcs     branch_3802684
	ldr     r1, [pc, #0x44] @ [0x38026b0] (=0x3809508)
	mov     r2, #0x2
	mov     r0, r0, lsr #8
	strh    r2, [r1, #0x36]
	rsb     r0, r0, #1, 16 @ #0x10000
	strh    r0, [r1, #0x34]
	mov     r0, #0x1
	bx      lr
@ 0x3802684

.arm
branch_3802684: @ 3802684 :arm
	cmp     r0, #1, 6 @ #0x4000000
	movcs   r0, #0x0
	bxcs    lr
	ldr     r1, [pc, #0x18] @ [0x38026b0] (=0x3809508)
	mov     r2, #0x3
	mov     r0, r0, lsr #10
	strh    r2, [r1, #0x36]
	rsb     r0, r0, #1, 16 @ #0x10000
	strh    r0, [r1, #0x34]
	mov     r0, #0x1
	bx      lr
@ 0x38026b0

.word 0x3809508 @ 0x38026b0
.arm
Function_38026b4: @ 38026b4 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	ldr     r2, [r4, #0x4]
	cmp     r2, #0x40
	beq     branch_38026dc
	cmp     r2, #0x41
	beq     branch_380278c
	cmp     r2, #0x42
	beq     branch_3802824
	b       branch_38028c0
@ 0x38026dc

.arm
branch_38026dc: @ 38026dc :arm
	bl      Function_37fada4
	mov     r5, r0
	mov     r0, #0x2
	bl      Function_3800bc4
	cmp     r0, #0x0
	bne     branch_3802714
	mov     r0, r5
	bl      Function_37fadb8
	ldr     r0, [r4, #0x4]
	mov     r1, #0x4
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	b       branch_38028c0
@ 0x3802714

.arm
branch_3802714: @ 3802714 :arm
	mov     r0, #0x2
	bl      Function_3800be0
	mov     r0, r5
	bl      Function_37fadb8
	ldr     r0, [r4, #0x8]
	and     r0, r0, #0x1
	cmp     r0, #0x1
	bne     branch_3802748
	bl      Function_3802b60
	ldr     r1, [r4, #0x8]
	tst     r1, #0x2
	eorne   r0, r0, #2, 18 @ #0x8000
	b       branch_3802758
@ 0x3802748

.arm
branch_3802748: @ 3802748 :arm
	bl      Function_3802ab0
	ldr     r1, [r4, #0x8]
	tst     r1, #0x2
	eorne   r0, r0, #0x80
.arm
branch_3802758: @ 3802758 :arm
	ldr     r1, [pc, #0x168] @ [0x38028c8] (=0x27fff94)
	movne   r0, r0, lsl #16
	movne   r0, r0, lsr #16
	strh    r0, [r1]
	str     r1, [r1, #-0x4]
	ldr     r0, [r4, #0x4]
	mov     r1, #0x0
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	mov     r0, #0x2
	bl      Function_3800bf8
	b       branch_38028c0
@ 0x380278c

.arm
branch_380278c: @ 380278c :arm
	ldr     r0, [pc, #0x138] @ [0x38028cc] (=0x3809508)
	ldr     r1, [r0, #0x20]
	cmp     r1, #0x1
	bne     branch_3802810
	mov     r1, #0x0
	strh    r1, [r0, #0x3a]
	strh    r1, [r0, #0x38]
	bl      Function_37fada4
	mov     r5, r0
	mov     r0, #0x40
	bl      Function_37f894c
	ldr     r1, [pc, #0x110] @ [0x38028d0] (=0x38028dc)
	mov     r0, #0x40
	bl      Function_3802be0
	bl      Function_3802c08
	ldr     r1, [pc, #0xfc] @ [0x38028cc] (=0x3809508)
	ldr     r2, [pc, #0x100] @ [0x38028d4] (=0x400010c)
	ldrh    r3, [r1, #0x34]
	mov     r0, r5
	strh    r3, [r2]
	ldrh    r1, [r1, #0x36]
	orr     r1, r1, #0xc0
	strh    r1, [r2, #0x2]
	bl      Function_37fadb8
	ldr     r0, [r4, #0x4]
	mov     r1, #0x0
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	ldr     r0, [pc, #0xc4] @ [0x38028cc] (=0x3809508)
	mov     r1, #0x2
	str     r1, [r0, #0x20]
	b       branch_38028c0
@ 0x3802810

.arm
branch_3802810: @ 3802810 :arm
	mov     r0, r2, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x3
	bl      Function_3800b00
	b       branch_38028c0
@ 0x3802824

.arm
branch_3802824: @ 3802824 :arm
	ldr     r0, [pc, #0xa0] @ [0x38028cc] (=0x3809508)
	ldr     r1, [r0, #0x20]
	sub     r0, r1, #0x3
	cmp     r0, #0x1
	bhi     branch_38028a0
	ldr     r1, [pc, #0x98] @ [0x38028d8] (=0x400010e)
	ldrh    r0, [r1]
	bic     r0, r0, #0x80
	strh    r0, [r1]
	bl      Function_37fada4
	mov     r4, r0
	mov     r0, #0x40
	mov     r1, #0x0
	bl      Function_3802be0
	bl      Function_3802c68
	mov     r0, r4
	bl      Function_37fadb8
	ldr     r0, [pc, #0x5c] @ [0x38028cc] (=0x3809508)
	mov     r1, #0x0
	ldr     r0, [r0, #0x20]
	cmp     r0, #0x3
	bne     branch_3802888
	mov     r0, #0x42
	bl      Function_3800b00
	b       branch_3802890
@ 0x3802888

.arm
branch_3802888: @ 3802888 :arm
	mov     r0, #0x51
	bl      Function_3800b00
.arm
branch_3802890: @ 3802890 :arm
	ldr     r0, [pc, #0x34] @ [0x38028cc] (=0x3809508)
	mov     r1, #0x0
	str     r1, [r0, #0x20]
	b       branch_38028c0
@ 0x38028a0

.arm
branch_38028a0: @ 38028a0 :arm
	cmp     r1, #0x3
	mov     r1, #0x3
	bne     branch_38028b8
	mov     r0, #0x42
	bl      Function_3800b00
	b       branch_38028c0
@ 0x38028b8

.arm
branch_38028b8: @ 38028b8 :arm
	mov     r0, #0x51
	bl      Function_3800b00
.arm
branch_38028c0: @ 38028c0 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x38028c8

.word 0x27fff94 @ 0x38028c8
.word 0x3809508 @ 0x38028cc
.word 0x38028dc @ 0x38028d0
.word 0x400010c @ 0x38028d4
.word 0x400010e @ 0x38028d8
.arm
Function_38028dc: @ 38028dc :arm
	stmfd   sp!, {r3,lr}
	bl      Function_3802910
	ldr     r3, [pc, #0x1c] @ [0x3802908] (=0x380fff8)
	ldr     r0, [pc, #0x1c] @ [0x380290c] (=0x4000214)
	ldr     r2, [r3]
	mov     r1, #0x40
	orr     r2, r2, #0x40
	str     r2, [r3]
	str     r1, [r0]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3802908

.word 0x380fff8 @ 0x3802908
.word 0x4000214 @ 0x380290c
.arm
Function_3802910: @ 3802910 :arm
	stmfd   sp!, {r4-r7,lr}
	ldr     r4, [pc, #0x184] @ [0x3802aa0] (=0x3809508)
	ldrh    r5, [r4, #0x26]
	and     r0, r5, #0x4
	cmp     r0, #0x4
	ldrh    r6, [r4, #0x38]
	bne     branch_3802930
	b       branch_3802934
@ 0x3802930

.arm
branch_3802930: @ 3802930 :arm
	ldrh    r7, [r4, #0x3a]
.arm
branch_3802934: @ 3802934 :arm
	beq     branch_380293c
	b       branch_3802940
@ 0x380293c

.arm
branch_380293c: @ 380293c :arm
	ldr     r7, [pc, #0x160] @ [0x3802aa4] (=0xffff)
.arm
branch_3802940: @ 3802940 :arm
	bl      Function_3800d14
	cmp     r0, #0x0
	bne     branch_38029ac
	mov     r0, #0x2
	bl      Function_3800bc4
	cmp     r0, #0x0
	beq     branch_38029ac
	and     r0, r5, #0x1
	cmp     r0, #0x1
	bne     branch_380298c
	bl      Function_3802b60
	tst     r5, #0x2
	beq     branch_3802978
	b       branch_380297c
@ 0x3802978

.arm
branch_3802978: @ 3802978 :arm
	mov     r7, r0
.arm
branch_380297c: @ 380297c :arm
	bne     branch_3802984
	b       branch_3802988
@ 0x3802984

.arm
branch_3802984: @ 3802984 :arm
	eor     r7, r0, #2, 18 @ #0x8000
.arm
branch_3802988: @ 3802988 :arm
	b       branch_38029ac
@ 0x380298c

.arm
branch_380298c: @ 380298c :arm
	bl      Function_3802ab0
	tst     r5, #0x2
	beq     branch_380299c
	b       branch_38029a0
@ 0x380299c

.arm
branch_380299c: @ 380299c :arm
	mov     r7, r0
.arm
branch_38029a0: @ 38029a0 :arm
	bne     branch_38029a8
	b       branch_38029ac
@ 0x38029a8

.arm
branch_38029a8: @ 38029a8 :arm
	eor     r7, r0, #0x80
.arm
branch_38029ac: @ 38029ac :arm
	and     r0, r5, #0x1
	ldr     r3, [pc, #0xf0] @ [0x3802aa8] (=0x27ffc00)
	ldr     r1, [r4, #0x2c]
	cmp     r0, #0x1
	bne     branch_38029dc
	ldr     r2, [r4, #0x28]
	strh    r7, [r2, r1]!
	str     r2, [r3, #0x390]
	add     r3, r3, #229, 30 @ #0x394
	strh    r7, [r3]
	add     r1, r1, #0x2
	b       branch_3802a14
@ 0x38029dc

.arm
branch_38029dc: @ 38029dc :arm
	and     r7, r7, #0xff
	tst     r1, #0x1
	bne     branch_38029f4
	mov     r6, r7
	add     r1, r1, #0x1
	b       branch_3802a14
@ 0x38029f4

.arm
branch_38029f4: @ 38029f4 :arm
	orr     r0, r6, r7, lsl #8
	ldr     r2, [r4, #0x28]
	sub     r1, r1, #0x1
	strh    r0, [r2, r1]!
	str     r2, [r3, #0x390]
	add     r3, r3, #229, 30 @ #0x394
	strh    r0, [r3]
	add     r1, r1, #0x2
.arm
branch_3802a14: @ 3802a14 :arm
	strh    r6, [r4, #0x38]
	strh    r7, [r4, #0x3a]
	ldr     r0, [r4, #0x30]
	cmp     r1, r0
	bcs     branch_3802a2c
	b       branch_3802a30
@ 0x3802a2c

.arm
branch_3802a2c: @ 3802a2c :arm
	mov     r1, #0x0
.arm
branch_3802a30: @ 3802a30 :arm
	str     r1, [r4, #0x2c]
	bcc     branch_3802a98
	ldrh    r0, [r4, #0x24]
	and     r0, r0, #0x10
	cmp     r0, #0x10
	bne     branch_3802a58
	mov     r0, #0x51
	mov     r1, #0x0
	bl      Function_3800b00
	b       branch_3802a98
@ 0x3802a58

.arm
branch_3802a58: @ 3802a58 :arm
	mov     r0, #0x2
	mov     r1, #0x42
	mov     r2, #0x0
	bl      Function_3800c34
	cmp     r0, #0x0
	bne     branch_3802a80
	mov     r0, #0x51
	mov     r1, #0x4
	bl      Function_3800b00
	b       branch_3802a98
@ 0x3802a80

.arm
branch_3802a80: @ 3802a80 :arm
	mov     r0, #0x4
	str     r0, [r4, #0x20]
	ldr     r1, [pc, #0x1c] @ [0x3802aac] (=0x400010e)
	ldrh    r0, [r1]
	bic     r0, r0, #0x80
	strh    r0, [r1]
.arm
branch_3802a98: @ 3802a98 :arm
	ldmfd   sp!, {r4-r7,lr}
	bx      lr
@ 0x3802aa0

.word 0x3809508 @ 0x3802aa0
.word 0xffff @ 0x3802aa4
.word 0x27ffc00 @ 0x3802aa8
.word 0x400010e @ 0x3802aac
.arm
Function_3802ab0: @ 3802ab0 :arm
	stmfd   sp!, {r4,lr}
	ldr     r2, [pc, #0x60] @ [0x3802b1c] (=0x40001c0)
.arm
branch_3802ab8: @ 3802ab8 :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_3802ab8
	ldr     r1, [pc, #0x54] @ [0x3802b20] (=0x8a01)
	ldr     r0, [pc, #0x54] @ [0x3802b24] (=0x40001c2)
	strh    r1, [r2]
	mov     r1, #0xec
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_3802adc: @ 3802adc :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3802adc
	bl      Function_3802b30
	ldr     r2, [pc, #0x34] @ [0x3802b28] (=0x8201)
	ldr     r1, [pc, #0x24] @ [0x3802b1c] (=0x40001c0)
	mov     r4, r0, lsl #24
	strh    r2, [r1]
	bl      Function_3802b30
	ldr     r1, [pc, #0x24] @ [0x3802b2c] (=0x7f80)
	orr     r0, r0, r4, lsr #16
	and     r0, r0, r1
	mov     r0, r0, lsl #9
	mov     r0, r0, lsr #16
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3802b1c

.word 0x40001c0 @ 0x3802b1c
.word 0x8a01 @ 0x3802b20
.word 0x40001c2 @ 0x3802b24
.word 0x8201 @ 0x3802b28
.word 0x7f80 @ 0x3802b2c
.arm
Function_3802b30: @ 3802b30 :arm
	ldr     r0, [pc, #0x24] @ [0x3802b5c] (=0x40001c2)
	mov     r1, #0x0
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_3802b40: @ 3802b40 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3802b40
	ldr     r0, [pc, #0x8] @ [0x3802b5c] (=0x40001c2)
	ldrh    r0, [r0]
	and     r0, r0, #0xff
	bx      lr
@ 0x3802b5c

.word 0x40001c2 @ 0x3802b5c
.arm
Function_3802b60: @ 3802b60 :arm
	stmfd   sp!, {r4,lr}
	ldr     r2, [pc, #0x60] @ [0x3802bcc] (=0x40001c0)
.arm
branch_3802b68: @ 3802b68 :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_3802b68
	ldr     r1, [pc, #0x54] @ [0x3802bd0] (=0x8a01)
	ldr     r0, [pc, #0x54] @ [0x3802bd4] (=0x40001c2)
	strh    r1, [r2]
	mov     r1, #0xe4
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_3802b8c: @ 3802b8c :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3802b8c
	bl      Function_3802b30
	ldr     r2, [pc, #0x34] @ [0x3802bd8] (=0x8201)
	ldr     r1, [pc, #0x24] @ [0x3802bcc] (=0x40001c0)
	mov     r4, r0, lsl #24
	strh    r2, [r1]
	bl      Function_3802b30
	ldr     r1, [pc, #0x24] @ [0x3802bdc] (=0x7ff8)
	orr     r0, r0, r4, lsr #16
	and     r0, r0, r1
	mov     r0, r0, lsl #17
	mov     r0, r0, lsr #16
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3802bcc

.word 0x40001c0 @ 0x3802bcc
.word 0x8a01 @ 0x3802bd0
.word 0x40001c2 @ 0x3802bd4
.word 0x8201 @ 0x3802bd8
.word 0x7ff8 @ 0x3802bdc



.arm
Function_3802be0: @ 3802be0 :arm
	ldr     r2, [pc, #0x1c] @ [0x3802c04] (=Jumptable_3806b80)
	mov     r3, #0x0
branch_3802be8: @ 3802be8 :arm
	tst     r0, #0x1
	strne   r1, [r2, r3, lsl #0x2]
	add     r3, r3, #0x1
	cmp     r3, #0x19
	mov     r0, r0, lsr #1
	blt     branch_3802be8
	bx      lr
@ 0x3802c04

.word Jumptable_3806b80 @ 0x3802c04



.arm
Function_3802c08: @ 3802c08 :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [pc, #0x48] @ [0x3802c5c] (=0x380fffc)
	ldr     r0, [pc, #0x48] @ [0x3802c60] (=0x3802cac)
	ldr     r2, [r3]
	cmp     r2, r0
	beq     branch_3802c54
	ldr     r0, [pc, #0x3c] @ [0x3802c64] (=0x3809544)
	mov     r1, #0x0
	str     r1, [r0]
	sub     r1, r3, #95, 30 @ #0x17c
	str     r1, [r0, #0x4]
	mov     r1, #0x40
	str     r1, [r0, #0x8]
	str     r2, [r0, #0xc]
	bl      Function_37fada4
	ldr     r2, [pc, #0x14] @ [0x3802c60] (=0x3802cac)
	ldr     r1, [pc, #0xc] @ [0x3802c5c] (=0x380fffc)
	str     r2, [r1]
	bl      Function_37fadb8
.arm
branch_3802c54: @ 3802c54 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3802c5c

.word 0x380fffc @ 0x3802c5c
.word Function_3802cac @ =0x3802cac, 0x3802c60
.word 0x3809544 @ 0x3802c64
.arm
Function_3802c68: @ 3802c68 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x2c] @ [0x3802ca0] (=0x380fffc)
	ldr     r0, [pc, #0x2c] @ [0x3802ca4] (=0x3802cac)
	ldr     r1, [r1]
	cmp     r1, r0
	bne     branch_3802c98
	bl      Function_37fada4
	ldr     r1, [pc, #0x1c] @ [0x3802ca8] (=0x3809544)
	ldr     r2, [pc, #0x10] @ [0x3802ca0] (=0x380fffc)
	ldr     r1, [r1, #0xc]
	str     r1, [r2]
	bl      Function_37fadb8
.arm
branch_3802c98: @ 3802c98 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3802ca0

.word 0x380fffc @ 0x3802ca0
.word Function_3802cac @ =0x3802cac, 0x3802ca4
.word 0x3809544 @ 0x3802ca8
.arm
Function_3802cac: @ 3802cac :arm
	mov     r12, #1, 6 @ #0x4000000
	add     r1, r12, #130, 30 @ #0x208
	ldrh    r0, [r1]
	tst     r0, r0
	beq     branch_3802cc4
	b       branch_3802cc8
@ 0x3802cc4

.arm
branch_3802cc4: @ 3802cc4 :arm
	bx      lr
@ 0x3802cc8

.arm
branch_3802cc8: @ 3802cc8 :arm
	ldr     r3, [r12, #0x210]
	ldr     r1, [r12, #0x214]
	ands    r2, r1, r3
	beq     branch_3802cdc
	b       branch_3802ce0
@ 0x3802cdc

.arm
branch_3802cdc: @ 3802cdc :arm
	bx      lr
@ 0x3802ce0

.arm
branch_3802ce0: @ 3802ce0 :arm
	ldr     r0, [pc, #0x1e0] @ [0x3802ec8] (=0x1df3fff)
	tst     r2, r0
	beq     branch_3802cf0
	b       branch_3802cf4
@ 0x3802cf0

.arm
branch_3802cf0: @ 3802cf0 :arm
	str     r2, [r12, #0x214]
.arm
branch_3802cf4: @ 3802cf4 :arm
	beq     branch_3802cfc
	b       branch_3802d00
@ 0x3802cfc

.arm
branch_3802cfc: @ 3802cfc :arm
	bx      lr
@ 0x3802d00

.arm
branch_3802d00: @ 3802d00 :arm
	stmfd   sp!, {lr}
	mrs     r0, SPSR
	stmfd   sp!, {r0}
.arm
Function_3802d0c: @ 3802d0c :arm
	stmfd   sp, {sp,lr}^
	sub     sp, sp, #0x8
	mov     r0, #0x9f
	msr     CPSR_c, r0
	ldr     r1, [pc, #0x1a8] @ [0x3802ecc] (=0x3806d30)
	ldrh    r0, [r1, #0x2]
	add     r0, r0, #0x1
	strh    r0, [r1, #0x2]
	ldr     r1, [pc, #0x19c] @ [0x3802ed0] (=0x3809544)
	cmp     r0, #0x1
	beq     branch_3802d3c
	b       branch_3802d40
@ 0x3802d3c

.arm
branch_3802d3c: @ 3802d3c :arm
	mov     r0, sp
.arm
branch_3802d40: @ 3802d40 :arm
	beq     branch_3802d48
	b       branch_3802d4c
@ 0x3802d48

.arm
branch_3802d48: @ 3802d48 :arm
	ldr     sp, [r1, #0x4]
.arm
branch_3802d4c: @ 3802d4c :arm
	beq     branch_3802d54
	b       branch_3802d58
@ 0x3802d54

.arm
branch_3802d54: @ 3802d54 :arm
	str     r0, [r1, #0x4]
.arm
branch_3802d58: @ 3802d58 :arm
	stmfd   sp!, {r3}
	ldr     r1, [pc, #0x170] @ [0x3802ed4] (=0x380689c)
	ldr     r0, [r1]
	tst     r0, r2
	bne     branch_3802d70
	b       branch_3802d74
@ 0x3802d70

.arm
branch_3802d70: @ 3802d70 :arm
	str     r0, [r12, #0x214]
.arm
branch_3802d74: @ 3802d74 :arm
	bne     branch_3802d7c
	b       branch_3802d80
@ 0x3802d7c

.arm
branch_3802d7c: @ 3802d7c :arm
	ldr     r0, [r1, #0x4]
branch_3802d80: @ 3802d80 :arm
	bne     branch_3802d88
	b       branch_3802d8c

branch_3802d88: @ 3802d88 :arm
	ldr     r3, [pc, #0x148] @ [0x3802ed8] (=Jumptable_3806b80)
branch_3802d8c: @ 3802d8c :arm
	bne     branch_3802d94
	b       branch_3802d98

branch_3802d94: @ 3802d94 :arm
	ldr     r0, [r3, r0, lsl #0x2]
branch_3802d98: @ 3802d98 :arm
	bne     branch_3802e08
	mov     r3, #0x1
branch_3802da0: @ 3802da0 :arm
	ldr     r0, [r1, r3, lsl #0x3]
	tst     r0, r2
	beq     branch_3802db0
	b       branch_3802db4
@ 0x3802db0

.arm
branch_3802db0: @ 3802db0 :arm
	add     r3, r3, #0x1
branch_3802db4: @ 3802db4 :arm
	beq     branch_3802da0
	str     r0, [r12, #0x214]
	add     r0, r1, r3, lsl #3
	ldr     r2, [r0, #0x4]
	ldr     r3, [pc, #0x10c] @ [0x3802ed8] (=Jumptable_3806b80)
	ldr     r0, [r3, r2, lsl #0x2]
	ldr     r2, [pc, #0xf8] @ [0x3802ecc] (=0x3806d30)
	ldrh    r3, [r2, #0x2]
	cmp     r3, #0x1
	beq     branch_3802de0
	b       branch_3802de4

branch_3802de0: @ 3802de0 :arm
	ldr     r2, [r1]
branch_3802de4: @ 3802de4 :arm
	beq     branch_3802dec
	b       branch_3802df0
@ 0x3802dec

.arm
branch_3802dec: @ 3802dec :arm
	str     r2, [r12, #0x210]
.arm
branch_3802df0: @ 3802df0 :arm
	beq     branch_3802df8
	b       branch_3802dfc
@ 0x3802df8

.arm
branch_3802df8: @ 3802df8 :arm
	mov     r2, #0x1f
.arm
branch_3802dfc: @ 3802dfc :arm
	beq     branch_3802e04
	b       branch_3802e08
@ 0x3802e04

.arm
branch_3802e04: @ 3802e04 :arm
	msr     CPSR_c, r2
.arm
branch_3802e08: @ 3802e08 :arm
	ldr     r1, [r12, #0x210]
	stmfd   sp!, {r1}
	add     lr, pc, #0x0
	bx      r0
@ 0x3802e18

.arm
Function_3802e18: @ 3802e18 :arm
	mov     r0, #0x9f
	msr     CPSR_c, r0
	mov     r12, #1, 6 @ #0x4000000
	ldmfd   sp!, {r0}
	ldr     r1, [r12, #0x210]
	eor     r2, r0, r1
	and     r1, r2, r1
	and     r0, r2, r0
	ldmfd   sp!, {r3}
	orr     r3, r3, r1
	bic     r3, r3, r0
	str     r3, [r12, #0x210]
	ldr     r2, [pc, #0x7c] @ [0x3802ecc] (=0x3806d30)
	ldr     r3, [pc, #0x7c] @ [0x3802ed0] (=0x3809544)
	ldrh    r0, [r2, #0x2]
	subs    r1, r0, #0x1
	strh    r1, [r2, #0x2]
	beq     branch_3802e64
	b       branch_3802e68
@ 0x3802e64

.arm
branch_3802e64: @ 3802e64 :arm
	mov     r0, sp
.arm
branch_3802e68: @ 3802e68 :arm
	beq     branch_3802e70
	b       branch_3802e74
@ 0x3802e70

.arm
branch_3802e70: @ 3802e70 :arm
	ldr     sp, [r3, #0x4]
.arm
branch_3802e74: @ 3802e74 :arm
	beq     branch_3802e7c
	b       branch_3802e80
@ 0x3802e7c

.arm
branch_3802e7c: @ 3802e7c :arm
	str     r0, [r3, #0x4]
.arm
branch_3802e80: @ 3802e80 :arm
	mov     r0, #0x92
	msr     CPSR_c, r0
	ldmfd   sp, {sp,lr}^
	mov     r0, r0
	add     sp, sp, #0x8
	ldmfd   sp!, {r0}
	msr     SPSR_fc, r0
	tst     r1, r1
	beq     branch_3802ea8
	b       branch_3802eac
@ 0x3802ea8

.arm
branch_3802ea8: @ 3802ea8 :arm
	ldr     r0, [pc, #0x2c] @ [0x3802edc] (=0x37f8550)
.arm
branch_3802eac: @ 3802eac :arm
	beq     branch_3802eb4
	b       branch_3802eb8
@ 0x3802eb4

.arm
branch_3802eb4: @ 3802eb4 :arm
	add     lr, pc, #0x0
.arm
branch_3802eb8: @ 3802eb8 :arm
	beq     branch_3802ec0
	b       branch_3802ec4
@ 0x3802ec0

.arm
branch_3802ec0: @ 3802ec0 :arm
	bx      r0
@ 0x3802ec4

.arm
branch_3802ec4: @ 3802ec4 :arm
	ldmfd   sp!, {pc}
@ 0x3802ec8

.word 0x1df3fff @ 0x3802ec8
.word 0x3806d30 @ 0x3802ecc
.word 0x3809544 @ 0x3802ed0
.word 0x380689c @ 0x3802ed4
.word Jumptable_3806b80 @ 0x3802ed8
.word Function_37f8550 @ =0x37f8550, 0x3802edc



.arm
Function_3802ee0: @ 3802ee0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x24] @ [0x3802f10] (=0x3809558)
	mov     r3, #0x0
	ldr     r2, [pc, #0x20] @ [0x3802f14] (=0x5000001)
	add     r0, sp, #0x0
	str     r3, [sp]
	bl      Function_3802f1c
	bl      Function_37f8c58
	ldr     r1, [pc, #0x10] @ [0x3802f18] (=0x3809554)
	strh    r0, [r1, #0x6]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3802f10

.word 0x3809558 @ 0x3802f10
.word 0x5000001 @ 0x3802f14
.word 0x3809554 @ 0x3802f18
.arm
Function_3802f1c: @ 3802f1c :arm
	ldr     r12, [pc, #0x0] @ [0x3802f24] (=0x38008f5)
	bx      r12
@ 0x3802f24

.word 0x38008f5 @ 0x3802f24
.arm
Function_3802f28: @ 3802f28 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x3c] @ [0x3802f70] (=0x27ffc30)
	ldr     r0, [pc, #0x3c] @ [0x3802f74] (=0xffff)
	ldrh    r1, [r2]
	cmp     r1, r0
	moveq   r0, #0x0
	beq     branch_3802f68
	ldrb    r0, [r2, #0x5]
	mov     r0, r0, lsl #30
	movs    r0, r0, lsr #31
	bne     branch_3802f58
	bl      Function_3802f78
.arm
branch_3802f58: @ 3802f58 :arm
	ldr     r0, [pc, #0x10] @ [0x3802f70] (=0x27ffc30)
	ldrb    r0, [r0, #0x5]
	mov     r0, r0, lsl #30
	mov     r0, r0, lsr #31
.arm
branch_3802f68: @ 3802f68 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3802f70

.word 0x27ffc30 @ 0x3802f70
.word 0xffff @ 0x3802f74
.arm
Function_3802f78: @ 3802f78 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #0x10
	ldr     r2, [pc, #0x108] @ [0x3803090] (=0x27ffc30)
	mov     r4, #0x1
	ldrh    r1, [r2]
	rsb     r0, r4, #1, 16 @ #0x10000
	cmp     r1, r0
	moveq   r0, #0x0
	beq     branch_3803084
	ldrb    r0, [r2, #0x5]
	mov     r0, r0, lsl #30
	mov     r0, r0, lsr #31
	cmp     r0, #0x1
	moveq   r0, #0x0
	beq     branch_3803084
	ldr     r0, [pc, #0xd8] @ [0x3803094] (=0x3809554)
	add     r1, sp, #0x8
	ldrh    r0, [r0, #0x6]
	bl      Function_3803118
	cmp     r0, #0x0
	bne     branch_3802fdc
	ldr     r0, [sp, #0xc]
	bl      Function_37fadb8
	mov     r0, r4
	b       branch_3803084
@ 0x3802fdc

.arm
branch_3802fdc: @ 3802fdc :arm
	add     r0, sp, #0x0
	bl      Function_380309c
	mov     r0, #2, 6 @ #0x8000000
	ldrb    r2, [r0, #0xb2]
	cmp     r2, #0x96
	bne     branch_3803008
	ldr     r1, [pc, #0x94] @ [0x3803090] (=0x27ffc30)
	ldrh    r0, [r0, #0xbe]
	ldrh    r1, [r1]
	cmp     r1, r0
	bne     branch_380304c
.arm
branch_3803008: @ 3803008 :arm
	cmp     r2, #0x96
	ldrne   r1, [pc, #0x7c] @ [0x3803090] (=0x27ffc30)
	ldrne   r0, [pc, #0x80] @ [0x3803098] (=0x801fffe)
	ldrneh  r1, [r1]
	ldrneh  r0, [r0]
	cmpne   r1, r0
	bne     branch_380304c
	ldr     r2, [pc, #0x64] @ [0x3803090] (=0x27ffc30)
	mov     r0, #2, 6 @ #0x8000000
	ldr     r1, [r2, #0x8]
	ldr     r0, [r0, #0xac]
	cmp     r1, r0
	beq     branch_3803060
	ldrb    r0, [r2, #0x5]
	mov     r0, r0, lsl #31
	movs    r0, r0, lsr #31
	beq     branch_3803060
.arm
branch_380304c: @ 380304c :arm
	ldr     r1, [pc, #0x3c] @ [0x3803090] (=0x27ffc30)
	mov     r4, #0x0
	ldrb    r0, [r1, #0x5]
	orr     r0, r0, #0x2
	strb    r0, [r1, #0x5]
.arm
branch_3803060: @ 3803060 :arm
	ldr     r0, [sp]
	bl      Function_38030e0
	ldr     r0, [sp, #0x4]
	bl      Function_38030fc
	ldr     r0, [pc, #0x1c] @ [0x3803094] (=0x3809554)
	add     r1, sp, #0x8
	ldrh    r0, [r0, #0x6]
	bl      Function_3803168
	mov     r0, r4
.arm
branch_3803084: @ 3803084 :arm
	add     sp, sp, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3803090

.word 0x27ffc30 @ 0x3803090
.word 0x3809554 @ 0x3803094
.word 0x801fffe @ 0x3803098
.arm
Function_380309c: @ 380309c :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x34] @ [0x38030dc] (=0x4000204)
	ldrh    r1, [r2]
	and     r1, r1, #0xc
	mov     r1, r1, asr #2
	str     r1, [r0]
	ldrh    r1, [r2]
	and     r1, r1, #0x10
	mov     r1, r1, asr #4
	str     r1, [r0, #0x4]
	mov     r0, #0x3
	bl      Function_38030e0
	mov     r0, #0x0
	bl      Function_38030fc
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x38030dc

.word 0x4000204 @ 0x38030dc
.arm
Function_38030e0: @ 38030e0 :arm
	ldr     r2, [pc, #0x10] @ [0x38030f8] (=0x4000204)
	ldrh    r1, [r2]
	bic     r1, r1, #0xc
	orr     r0, r1, r0, lsl #2
	strh    r0, [r2]
	bx      lr
@ 0x38030f8

.word 0x4000204 @ 0x38030f8
.arm
Function_38030fc: @ 38030fc :arm
	ldr     r2, [pc, #0x10] @ [0x3803114] (=0x4000204)
	ldrh    r1, [r2]
	bic     r1, r1, #0x10
	orr     r0, r1, r0, lsl #4
	strh    r0, [r2]
	bx      lr
@ 0x3803114

.word 0x4000204 @ 0x3803114
.arm
Function_3803118: @ 3803118 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r1
	mov     r5, r0
	bl      Function_37fada4
	str     r0, [r4, #0x4]
	ldr     r0, [pc, #0x30] @ [0x3803164] (=0x27fffe8)
	bl      Function_37f8c50
	ands    r0, r0, #0x80
	str     r0, [r4]
	bne     branch_3803150
	mov     r0, r5
	bl      Function_37f8be0
	cmp     r0, #0x0
	bne     branch_3803158
.arm
branch_3803150: @ 3803150 :arm
	mov     r0, #0x1
	b       branch_380315c
@ 0x3803158

.arm
branch_3803158: @ 3803158 :arm
	mov     r0, #0x0
.arm
branch_380315c: @ 380315c :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x3803164

.word 0x27fffe8 @ 0x3803164
.arm
Function_3803168: @ 3803168 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r1
	ldr     r1, [r4]
	cmp     r1, #0x0
	bne     branch_3803180
	bl      Function_37f8bd4
.arm
branch_3803180: @ 3803180 :arm
	ldr     r0, [r4, #0x4]
	bl      Function_37fadb8
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3803190

.arm
Function_3803190: @ 3803190 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r6, #0x1
	mov     r5, #0xd
	mov     r4, #0x0
	b       branch_38031b0
@ 0x38031a8

.arm
branch_38031a8: @ 38031a8 :arm
	mov     r0, r6
	bl      Function_37f8a68
.arm
branch_38031b0: @ 38031b0 :arm
	mov     r0, r5
	mov     r1, r7
	mov     r2, r4
	bl      Function_37fb50c
	cmp     r0, #0x0
	bne     branch_38031a8
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x38031d0

.arm
Function_38031d0: @ 38031d0 :arm
	stmfd   sp!, {r3,lr}
	bl      Function_37fa1cc
	bl      Function_37fa3f0
	ldr     r0, [pc, #0x74] @ [0x3803258] (=0x380958c)
	bl      Function_37fa444
	ldr     r0, [pc, #0x70] @ [0x380325c] (=0x380955c)
	ldr     r1, [r0, #0x14]
	cmp     r1, #0x0
	bne     branch_3803250
	mov     r1, #0x1
	str     r1, [r0, #0x14]
	bl      Function_3802ee0
	bl      Function_37f8c58
	mvn     r1, #0x2
	cmp     r0, r1
	beq     branch_3803250
	ldr     r1, [pc, #0x44] @ [0x380325c] (=0x380955c)
	strh    r0, [r1]
	bl      Function_37fb3b0
	ldr     r1, [pc, #0x3c] @ [0x3803260] (=0x38033e4)
	mov     r0, #0xd
	bl      Function_37fb498
	bl      Function_3803270
	ldr     r1, [pc, #0x30] @ [0x3803264] (=0x3803414)
	mov     r0, #0xd
	bl      Function_37fb498
	ldr     r1, [pc, #0x28] @ [0x3803268] (=0x3803448)
	mov     r0, #0x10
	bl      Function_37fb498
	ldr     r1, [pc, #0x20] @ [0x380326c] (=0x380378c)
	mov     r0, #0x11
	bl      Function_37fb498
.arm
branch_3803250: @ 3803250 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3803258

.word 0x380958c @ 0x3803258
.word 0x380955c @ 0x380325c
.word 0x38033e4 @ 0x3803260
.word 0x3803414 @ 0x3803264
.word 0x3803448 @ 0x3803268
.word 0x380378c @ 0x380326c
.arm
Function_3803270: @ 3803270 :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r0, [pc, #0x150] @ [0x38033cc] (=0x380955c)
	ldr     r1, [r0, #0x8]
	cmp     r1, #0x0
	bne     branch_38033c4
	ldr     r1, [pc, #0x144] @ [0x38033d0] (=0x4000300)
	mov     r2, #0x1
	ldrh    r1, [r1]
	str     r2, [r0, #0x8]
	tst     r1, #0x1
	beq     branch_38033c4
	mov     r0, #1, 14 @ #0x40000
	bl      Function_37f8900
	ldr     r2, [pc, #0x128] @ [0x38033d4] (=0x4000208)
	mov     r1, #0x1
	ldrh    r9, [r2]
	ldr     r5, [pc, #0x114] @ [0x38033cc] (=0x380955c)
	mov     r4, r0
	strh    r1, [r2]
	mov     r6, #1, 24 @ #0x100
	b       branch_38032cc
@ 0x38032c4

.arm
branch_38032c4: @ 38032c4 :arm
	mov     r0, r6
	bl      Function_37f8a68
.arm
branch_38032cc: @ 38032cc :arm
	ldr     r0, [r5, #0x28]
	cmp     r0, #0x1
	bne     branch_38032c4
	ldr     r0, [pc, #0xec] @ [0x38033cc] (=0x380955c)
	mov     r1, #2, 6 @ #0x8000000
	ldr     r2, [r0, #0x18]
	ldr     r0, [pc, #0xec] @ [0x38033d8] (=0x1ffffc0)
	add     r8, r1, #0x4
	and     r0, r2, r0
	mov     r0, r0, lsr #6
	mov     r0, r0, lsl #5
	add     r5, r0, #2, 8 @ #0x2000000
	mov     r6, #0x1
	bl      Function_37f8c58
	mov     r0, r0, lsl #16
	mov     r7, r0, lsr #16
	mov     r0, r7
	bl      Function_37f8b64
	ldr     r12, [pc, #0xc0] @ [0x38033dc] (=0xffff)
	mov     r10, #0x0
	eor     r0, r12, #0x3
	eor     r1, r12, #0x84
	mov     r0, r0, lsl #16
	mov     r1, r1, lsl #16
	mov     r2, r0, lsr #16
	mov     r3, r1, lsr #16
	b       branch_3803374
@ 0x3803338

.arm
branch_3803338: @ 3803338 :arm
	mov     lr, r12
	cmp     r10, #0x4c
	moveq   lr, r3
	beq     branch_3803350
	cmp     r10, #0x4d
	moveq   lr, r2
.arm
branch_3803350: @ 3803350 :arm
	add     r0, r5, r10, lsl #1
	mov     r1, r10, lsl #1
	ldrh    r0, [r0, #0x4]
	ldrh    r1, [r8, r1]
	and     r0, lr, r0
	cmp     r0, r1
	movne   r6, #0x0
	bne     branch_380337c
	add     r10, r10, #0x1
.arm
branch_3803374: @ 3803374 :arm
	cmp     r10, #0x4e
	blt     branch_3803338
.arm
branch_380337c: @ 380337c :arm
	mov     r0, r7
	bl      Function_37f8bd4
	mov     r0, r7
	bl      Function_37f8d00
	ldr     r2, [pc, #0x4c] @ [0x38033e0] (=0x27ffc30)
	and     r0, r6, #0xff
	ldrb    r1, [r2, #0x5]
	and     r0, r0, #0x1
	bic     r1, r1, #0x1
	orr     r1, r1, r0
	mov     r0, #0x1
	strb    r1, [r2, #0x5]
	bl      Function_3803190
	ldr     r2, [pc, #0x1c] @ [0x38033d4] (=0x4000208)
	mov     r0, r4
	ldrh    r1, [r2]
	strh    r9, [r2]
	bl      Function_37f8900
.arm
branch_38033c4: @ 38033c4 :arm
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x38033cc

.word 0x380955c @ 0x38033cc
.word 0x4000300 @ 0x38033d0
.word 0x4000208 @ 0x38033d4
.word 0x1ffffc0 @ 0x38033d8
.word 0xffff @ 0x38033dc
.word 0x27ffc30 @ 0x38033e0
.arm
Function_38033e4: @ 38033e4 :arm
	stmfd   sp!, {r3,lr}
	and     r0, r1, #0x3f
	cmp     r0, #0x1
	ldreq   r0, [pc, #0x18] @ [0x3803410] (=0x380955c)
	moveq   r2, #0x1
	streq   r1, [r0, #0x18]
	streq   r2, [r0, #0x28]
	beq     branch_3803408
	bl      Function_37faf14
.arm
branch_3803408: @ 3803408 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3803410

.word 0x380955c @ 0x3803410
.arm
Function_3803414: @ 3803414 :arm
	stmfd   sp!, {r3,lr}
	and     r0, r1, #0x3f
	cmp     r0, #0x2
	bne     branch_380343c
	mov     r0, #0x0
	bl      Function_3803458
	bl      Function_37fb804
	bl      Function_3805a34
	bl      Function_37faf14
	b       branch_3803440
@ 0x380343c

.arm
branch_380343c: @ 380343c :arm
	bl      Function_37faf14
.arm
branch_3803440: @ 3803440 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3803448

.arm
Function_3803448: @ 3803448 :arm
	ldr     r12, [pc, #0x4] @ [0x3803454] (=0x3803458)
	mov     r0, r1
	bx      r12
@ 0x3803454

.word Function_3803458 @ =0x3803458, 0x3803454
.arm
Function_3803458: @ 3803458 :arm
	stmfd   sp!, {r3-r11,lr}
	movs    r5, r0
	beq     branch_3803494
	ldr     r0, [r5]
	cmp     r0, #0x0
	bne     branch_3803494
	ldr     r0, [r5, #0x44]
	add     r0, r0, #0x1
	str     r0, [r5, #0x44]
	ldr     r1, [r5, #0x40]
	cmp     r1, #0x0
	beq     branch_3803494
	ldr     r0, [r5, #0x44]
	cmp     r0, r1
	movhi   r5, #0x0
.arm
branch_3803494: @ 3803494 :arm
	cmp     r5, #0x0
	ldrne   r0, [r5, #0x3c]
	cmpne   r0, #0x0
	bne     branch_3803538
	bl      Function_37fada4
	ldr     r4, [pc, #0x1c4] @ [0x3803674] (=0x380955c)
	mov     r9, r0
	ldr     r0, [r4, #0x4]
	cmp     r0, #0x2
	bne     branch_3803524
	mov     r10, #0x0
	ldr     r7, [pc, #0x1b0] @ [0x3803678] (=0x27fffe8)
	ldr     r5, [pc, #0x1b0] @ [0x380367c] (=0x8001000)
	mov     r6, r10
	mov     r11, #0x1
	b       branch_380351c
@ 0x38034d4

.arm
branch_38034d4: @ 38034d4 :arm
	mov     r0, r7
	bl      Function_37f8c50
	ands    r8, r0, #0x80
	bne     branch_38034f4
	ldrh    r0, [r4]
	bl      Function_37f8be0
	cmp     r0, #0x0
	bne     branch_3803514
.arm
branch_38034f4: @ 38034f4 :arm
	str     r6, [r4, #0x4]
	mov     r10, r11
	strh    r6, [r5]
	cmp     r8, #0x0
	bne     branch_380351c
	ldrh    r0, [r4]
	bl      Function_37f8bb4
	b       branch_380351c
@ 0x3803514

.arm
branch_3803514: @ 3803514 :arm
	ldr     r0, [pc, #0x164] @ [0x3803680] (=0x80e8)
	bl      Function_37fae08
.arm
branch_380351c: @ 380351c :arm
	cmp     r10, #0x0
	beq     branch_38034d4
.arm
branch_3803524: @ 3803524 :arm
	ldr     r0, [pc, #0x158] @ [0x3803684] (=0x380958c)
	bl      Function_37fa664
	mov     r0, r9
	bl      Function_37fadb8
	b       branch_380366c
@ 0x3803538

.arm
branch_3803538: @ 3803538 :arm
	cmp     r5, #0x0
	beq     branch_380366c
	ldr     r0, [pc, #0x130] @ [0x3803678] (=0x27fffe8)
	bl      Function_37f8c50
	ands    r4, r0, #0x80
	bne     branch_3803564
	ldr     r0, [pc, #0x11c] @ [0x3803674] (=0x380955c)
	ldrh    r0, [r0]
	bl      Function_37f8be0
	cmp     r0, #0x0
	bne     branch_3803654
.arm
branch_3803564: @ 3803564 :arm
	ldr     r1, [r5]
	ldr     r0, [r5, #0x4]
	cmp     r1, r0
	bne     branch_38035ac
	ldr     r0, [pc, #0xf8] @ [0x3803674] (=0x380955c)
	mov     r2, #0x0
	ldr     r1, [pc, #0xf8] @ [0x380367c] (=0x8001000)
	str     r2, [r0, #0x4]
	strh    r2, [r1]
	str     r5, [sp]
	ldr     r1, [r5, #0x8]
	ldr     r0, [pc, #0xec] @ [0x3803684] (=0x380958c)
	ldr     r3, [pc, #0xec] @ [0x3803688] (=0x3803458)
	mov     r2, #0x0
	bl      Function_37fa580
	mov     r0, #0x0
	str     r0, [r5]
	b       branch_380363c
@ 0x38035ac

.arm
branch_38035ac: @ 38035ac :arm
	tst     r1, #0x1
	ldr     r1, [pc, #0xc4] @ [0x380367c] (=0x8001000)
	beq     branch_38035fc
	ldr     r0, [pc, #0xb4] @ [0x3803674] (=0x380955c)
	mov     r2, #0x0
	str     r2, [r0, #0x4]
	strh    r2, [r1]
	str     r5, [sp]
	ldr     r1, [r5]
	ldr     r0, [pc, #0xac] @ [0x3803684] (=0x380958c)
	mov     r1, r1, lsr #1
	add     r1, r5, r1, lsl #2
	ldr     r1, [r1, #0x24]
	ldr     r3, [pc, #0xa0] @ [0x3803688] (=0x3803458)
	mov     r2, #0x0
	bl      Function_37fa580
	ldr     r0, [r5]
	add     r0, r0, #0x1
	str     r0, [r5]
	b       branch_380363c
@ 0x38035fc

.arm
branch_38035fc: @ 38035fc :arm
	ldr     r0, [pc, #0x70] @ [0x3803674] (=0x380955c)
	mov     r2, #0x2
	str     r2, [r0, #0x4]
	strh    r2, [r1]
	str     r5, [sp]
	ldr     r1, [r5]
	ldr     r0, [pc, #0x68] @ [0x3803684] (=0x380958c)
	mov     r1, r1, lsr #1
	add     r1, r5, r1, lsl #2
	ldr     r1, [r1, #0xc]
	ldr     r3, [pc, #0x5c] @ [0x3803688] (=0x3803458)
	mov     r2, #0x0
	bl      Function_37fa580
	ldr     r0, [r5]
	add     r0, r0, #0x1
	str     r0, [r5]
.arm
branch_380363c: @ 380363c :arm
	cmp     r4, #0x0
	bne     branch_380366c
	ldr     r0, [pc, #0x28] @ [0x3803674] (=0x380955c)
	ldrh    r0, [r0]
	bl      Function_37f8bb4
	b       branch_380366c
@ 0x3803654

.arm
branch_3803654: @ 3803654 :arm
	ldr     r0, [pc, #0x28] @ [0x3803684] (=0x380958c)
	ldr     r1, [pc, #0x2c] @ [0x380368c] (=0x20b)
	ldr     r3, [pc, #0x24] @ [0x3803688] (=0x3803458)
	mov     r2, #0x0
	str     r5, [sp]
	bl      Function_37fa580
.arm
branch_380366c: @ 380366c :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x3803674

.word 0x380955c @ 0x3803674
.word 0x27fffe8 @ 0x3803678
.word 0x8001000 @ 0x380367c
.word 0x80e8 @ 0x3803680
.word 0x380958c @ 0x3803684
.word Function_3803458 @ =0x3803458, 0x3803688
.word 0x20b @ 0x380368c
.arm
Function_3803690: @ 3803690 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r1, [pc, #0xe4] @ [0x3803780] (=0x3806c8c)
	mvn     r0, #0x0
	ldr     r3, [r1, #0x4]
	cmp     r3, r0
	ldreq   r0, [pc, #0xd8] @ [0x3803784] (=0x27ffc3c)
	ldreq   r0, [r0]
	addeq   r0, r0, #0xa
	streq   r0, [r1, #0x4]
	beq     branch_3803778
	ldr     r0, [pc, #0xc8] @ [0x3803788] (=0x380955c)
	ldr     r2, [r0, #0x10]
	cmp     r2, #0x0
	ldreq   r0, [r0, #0xc]
	cmpeq   r0, #0x0
	bne     branch_3803778
	ldr     r2, [pc, #0xac] @ [0x3803784] (=0x27ffc3c)
	ldr     r0, [r2]
	cmp     r0, r3
	bcc     branch_3803778
	ldr     r0, [r2]
	add     r0, r0, #0xa
	str     r0, [r1, #0x4]
	bl      Function_3802f28
	ldr     r1, [pc, #0x90] @ [0x3803788] (=0x380955c)
	str     r0, [r1, #0xc]
	bl      Function_3802f78
	cmp     r0, #0x0
	bne     branch_3803728
	ldr     r0, [pc, #0x74] @ [0x3803780] (=0x3806c8c)
	mov     r1, #0x1
	ldr     r0, [r0]
	cmp     r0, #0x0
	ldrne   r0, [pc, #0x6c] @ [0x3803788] (=0x380955c)
	strne   r1, [r0, #0x10]
	bne     branch_3803778
	ldr     r0, [pc, #0x60] @ [0x3803788] (=0x380955c)
	str     r1, [r0, #0xc]
.arm
branch_3803728: @ 3803728 :arm
	ldr     r0, [pc, #0x58] @ [0x3803788] (=0x380955c)
	ldr     r1, [pc, #0x4c] @ [0x3803780] (=0x3806c8c)
	ldr     r0, [r0, #0xc]
	mov     r2, #0x0
	str     r2, [r1]
	cmp     r0, #0x0
	beq     branch_3803778
	mov     r7, #0x64
	mov     r6, #0xd
	mov     r5, #0x11
	mov     r4, r2
	b       branch_3803760
@ 0x3803758

.arm
branch_3803758: @ 3803758 :arm
	mov     r0, r7
	bl      Function_37f950c
.arm
branch_3803760: @ 3803760 :arm
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      Function_37fb50c
	cmp     r0, #0x0
	bne     branch_3803758
.arm
branch_3803778: @ 3803778 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x3803780

.word 0x3806c8c @ 0x3803780
.word 0x27ffc3c @ 0x3803784
.word 0x380955c @ 0x3803788
.arm
Function_380378c: @ 380378c :arm
	stmfd   sp!, {r3-r7,lr}
	and     r0, r1, #0x3f
	cmp     r0, #0x3
	bne     branch_38037f4
	ldr     r3, [pc, #0x5c] @ [0x3803800] (=0x4000204)
	ldr     r0, [pc, #0x5c] @ [0x3803804] (=0x1ffffc0)
	ldrh    r2, [r3]
	and     r0, r1, r0
	mov     r1, r0, lsr #6
	bic     r0, r2, #0x60
	orr     r0, r0, r1, lsl #5
	strh    r0, [r3]
	mov     r7, #0x1
	mov     r6, #0x11
	mov     r5, #0x12
	mov     r4, #0x0
	b       branch_38037d8
@ 0x38037d0

.arm
branch_38037d0: @ 38037d0 :arm
	mov     r0, r7
	bl      Function_37f8a68
.arm
branch_38037d8: @ 38037d8 :arm
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      Function_37fb50c
	cmp     r0, #0x0
	bne     branch_38037d0
	b       branch_38037f8
@ 0x38037f4

.arm
branch_38037f4: @ 38037f4 :arm
	bl      Function_37faf14
.arm
branch_38037f8: @ 38037f8 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x3803800

.word 0x4000204 @ 0x3803800
.word 0x1ffffc0 @ 0x3803804
.arm
Function_3803808: @ 3803808 :arm
	ldr     r0, [pc, #0x1c] @ [0x380382c] (=0x38095b8)
	mov     r3, #0x0
	mov     r2, r3
.arm
branch_3803814: @ 3803814 :arm
	mov     r1, r3, lsl #1
	add     r3, r3, #0x1
	strh    r2, [r0, r1]
	cmp     r3, #0x10
	blt     branch_3803814
	bx      lr
@ 0x380382c

.word 0x38095b8 @ 0x380382c
.arm
Function_3803830: @ 3803830 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x8
	tst     r0, #2, 8 @ #0x2000000
	beq     branch_3803860
	ldr     r2, [pc, #0x188] @ [0x38039d0] (=0x38095b8)
	mov     r5, #0x0
	mov     lr, r5
.arm
branch_380384c: @ 380384c :arm
	mov     r4, r5, lsl #1
	add     r5, r5, #0x1
	strh    lr, [r2, r4]
	cmp     r5, #0x10
	blt     branch_380384c
.arm
branch_3803860: @ 3803860 :arm
	ldr     r2, [pc, #0x168] @ [0x38039d0] (=0x38095b8)
	and     r4, r0, #15, 16 @ #0xf0000
	mov     r4, r4, lsr #16
	mov     r4, r4, lsl #1
	strh    r0, [r2, r4]
	tst     r0, #1, 8 @ #0x1000000
	beq     branch_38039c4
	ldr     lr, [pc, #0x150] @ [0x38039d4] (=0x38095b8)
	ldrh    r0, [lr]
	and     r2, r0, #255, 24 @ #0xff00
	mov     r2, r2, lsl #8
	mov     r4, r2, lsr #16
	sub     r2, r4, #0x22
	cmp     r2, #0xa
	addls   pc, pc, r2, lsl #2
	b       branch_3803998
@ 0x38038a0

.arm
Function_38038a0: @ 38038a0 :arm
	b       branch_38038cc
@ 0x38038a4

.arm
Function_38038a4: @ 38038a4 :arm
	b       branch_3803904
@ 0x38038a8

.arm
Function_38038a8: @ 38038a8 :arm
	b       branch_3803904
@ 0x38038ac

.arm
Function_38038ac: @ 38038ac :arm
	b       branch_380394c
@ 0x38038b0

.arm
Function_38038b0: @ 38038b0 :arm
	b       branch_380394c
@ 0x38038b4

.arm
Function_38038b4: @ 38038b4 :arm
	b       branch_380398c
@ 0x38038b8

.arm
Function_38038b8: @ 38038b8 :arm
	b       branch_380398c
@ 0x38038bc

.arm
Function_38038bc: @ 38038bc :arm
	b       branch_3803998
@ 0x38038c0

.arm
Function_38038c0: @ 38038c0 :arm
	b       branch_3803998
@ 0x38038c4

.arm
Function_38038c4: @ 38038c4 :arm
	b       branch_3803998
@ 0x38038c8

.arm
Function_38038c8: @ 38038c8 :arm
	b       branch_38038cc
@ 0x38038cc

.arm
branch_38038cc: @ 38038cc :arm
	ldrh    r12, [lr, #0x4]
	ldrh    r2, [lr, #0x2]
	mov     r0, r0, lsl #24
	and     r12, r12, #255, 24 @ #0xff00
	orr     r0, r0, r2, lsl #8
	orr     r12, r0, r12, lsr #8
	cmp     r12, #2, 8 @ #0x2000000
	bcc     branch_38038f4
	cmp     r12, #10, 10 @ #0x2800000
	bcc     branch_3803998
.arm
branch_38038f4: @ 38038f4 :arm
	mov     r0, r4
	mov     r1, #0x2
	bl      Function_3800b00
	b       branch_38039c4
@ 0x3803904

.arm
branch_3803904: @ 3803904 :arm
	ldrh    r2, [lr, #0x8]
	ldrh    r1, [lr, #0xa]
	orr     r12, r1, r2, lsl #16
	cmp     r12, #2, 8 @ #0x2000000
	bcc     branch_3803920
	cmp     r12, #10, 10 @ #0x2800000
	bcc     branch_3803930
.arm
branch_3803920: @ 3803920 :arm
	mov     r0, r4
	mov     r1, #0x2
	bl      Function_3800b00
	b       branch_38039c4
@ 0x3803930

.arm
branch_3803930: @ 3803930 :arm
	ldrh    r2, [lr, #0x2]
	mov     r3, r0, lsl #24
	ldrh    r1, [lr, #0x4]
	ldrh    r0, [lr, #0x6]
	orr     r3, r2, r3, lsr #8
	orr     r1, r0, r1, lsl #16
	b       branch_3803998
@ 0x380394c

.arm
branch_380394c: @ 380394c :arm
	ldrh    r2, [lr, #0x6]
	ldrh    r1, [lr, #0x8]
	orr     r12, r1, r2, lsl #16
	cmp     r12, #2, 8 @ #0x2000000
	bcc     branch_3803968
	cmp     r12, #10, 10 @ #0x2800000
	bcc     branch_3803978
.arm
branch_3803968: @ 3803968 :arm
	mov     r0, r4
	mov     r1, #0x2
	bl      Function_3800b00
	b       branch_38039c4
@ 0x3803978

.arm
branch_3803978: @ 3803978 :arm
	ldrh    r2, [lr, #0x2]
	mov     r0, r0, lsl #24
	ldrh    r1, [lr, #0x4]
	orr     r3, r2, r0, lsr #8
	b       branch_3803998
@ 0x380398c

.arm
branch_380398c: @ 380398c :arm
	ldrh    r2, [lr, #0x2]
	mov     r0, r0, lsl #24
	orr     r3, r2, r0, lsr #8
.arm
branch_3803998: @ 3803998 :arm
	str     r1, [sp]
	mov     r1, r4
	mov     r0, #0x1
	mov     r2, #0x3
	str     r12, [sp, #0x4]
	bl      Function_3800c34
	cmp     r0, #0x0
	bne     branch_38039c4
	mov     r0, r4
	mov     r1, #0x4
	bl      Function_3800b00
.arm
branch_38039c4: @ 38039c4 :arm
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x38039d0

.word 0x38095b8 @ 0x38039d0
.word 0x38095b8 @ 0x38039d4
.arm
Function_38039d8: @ 38039d8 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	bl      Function_37fada4
	mov     r5, r0
	mov     r0, #0x1
	bl      Function_3800bc4
	cmp     r0, #0x0
	bne     branch_3803a18
	mov     r0, r5
	bl      Function_37fadb8
	ldr     r0, [r4, #0x4]
	mov     r1, #0x4
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	b       branch_3803ca4
@ 0x3803a18

.arm
branch_3803a18: @ 3803a18 :arm
	mov     r0, #0x1
	bl      Function_3800be0
	mov     r0, r5
	bl      Function_37fadb8
	ldr     r0, [r4, #0x4]
	sub     r0, r0, #0x20
	cmp     r0, #0xd
	addls   pc, pc, r0, lsl #2
	b       branch_3803c68
@ 0x3803a3c

.arm
Function_3803a3c: @ 3803a3c :arm
	b       branch_3803a74
@ 0x3803a40

.arm
Function_3803a40: @ 3803a40 :arm
	b       branch_3803a7c
@ 0x3803a44

.arm
Function_3803a44: @ 3803a44 :arm
	b       branch_3803a84
@ 0x3803a48

.arm
Function_3803a48: @ 3803a48 :arm
	b       branch_3803a90
@ 0x3803a4c

.arm
Function_3803a4c: @ 3803a4c :arm
	b       branch_3803ad0
@ 0x3803a50

.arm
Function_3803a50: @ 3803a50 :arm
	b       branch_3803b10
@ 0x3803a54

.arm
Function_3803a54: @ 3803a54 :arm
	b       branch_3803b58
@ 0x3803a58

.arm
Function_3803a58: @ 3803a58 :arm
	b       branch_3803ba0
@ 0x3803a5c

.arm
Function_3803a5c: @ 3803a5c :arm
	b       branch_3803bd8
@ 0x3803a60

.arm
Function_3803a60: @ 3803a60 :arm
	b       branch_3803c10
@ 0x3803a64

.arm
Function_3803a64: @ 3803a64 :arm
	b       branch_3803c18
@ 0x3803a68

.arm
Function_3803a68: @ 3803a68 :arm
	b       branch_3803c20
@ 0x3803a6c

.arm
Function_3803a6c: @ 3803a6c :arm
	b       branch_3803c54
@ 0x3803a70

.arm
Function_3803a70: @ 3803a70 :arm
	b       branch_3803c60
@ 0x3803a74

.arm
branch_3803a74: @ 3803a74 :arm
	bl      Function_3803d00
	b       branch_3803c88
@ 0x3803a7c

.arm
branch_3803a7c: @ 3803a7c :arm
	bl      Function_3803d64
	b       branch_3803c88
@ 0x3803a84

.arm
branch_3803a84: @ 3803a84 :arm
	ldr     r0, [r4, #0x10]
	bl      Function_3803da4
	b       branch_3803c88
@ 0x3803a90

.arm
branch_3803a90: @ 3803a90 :arm
	bl      Function_3803cac
	cmp     r0, #0x0
	bne     branch_3803abc
	ldr     r0, [r4, #0x4]
	mov     r1, #0x3
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	mov     r0, #0x1
	bl      Function_3800bf8
	b       branch_3803ca4
@ 0x3803abc

.arm
branch_3803abc: @ 3803abc :arm
	ldr     r0, [r4, #0x8]
	ldr     r1, [r4, #0xc]
	ldr     r2, [r4, #0x10]
	bl      Function_3803e14
	b       branch_3803c88
@ 0x3803ad0

.arm
branch_3803ad0: @ 3803ad0 :arm
	bl      Function_3803cac
	cmp     r0, #0x0
	bne     branch_3803afc
	ldr     r0, [r4, #0x4]
	mov     r1, #0x3
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	mov     r0, #0x1
	bl      Function_3800bf8
	b       branch_3803ca4
@ 0x3803afc

.arm
branch_3803afc: @ 3803afc :arm
	ldr     r0, [r4, #0x8]
	ldr     r1, [r4, #0xc]
	ldr     r2, [r4, #0x10]
	bl      Function_3803f3c
	b       branch_3803c88
@ 0x3803b10

.arm
branch_3803b10: @ 3803b10 :arm
	bl      Function_3803cd0
	cmp     r0, #0x0
	bne     branch_3803b3c
	ldr     r0, [r4, #0x4]
	mov     r1, #0x3
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	mov     r0, #0x1
	bl      Function_3800bf8
	b       branch_3803ca4
@ 0x3803b3c

.arm
branch_3803b3c: @ 3803b3c :arm
	ldr     r1, [r4, #0xc]
	ldr     r0, [r4, #0x8]
	mov     r1, r1, lsl #16
	ldr     r2, [r4, #0x10]
	mov     r1, r1, lsr #16
	bl      Function_380405c
	b       branch_3803c88
@ 0x3803b58

.arm
branch_3803b58: @ 3803b58 :arm
	bl      Function_3803cd0
	cmp     r0, #0x0
	bne     branch_3803b84
	ldr     r0, [r4, #0x4]
	mov     r1, #0x3
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	mov     r0, #0x1
	bl      Function_3800bf8
	b       branch_3803ca4
@ 0x3803b84

.arm
branch_3803b84: @ 3803b84 :arm
	ldr     r1, [r4, #0xc]
	ldr     r0, [r4, #0x8]
	mov     r1, r1, lsl #16
	ldr     r2, [r4, #0x10]
	mov     r1, r1, lsr #16
	bl      Function_3804168
	b       branch_3803c88
@ 0x3803ba0

.arm
branch_3803ba0: @ 3803ba0 :arm
	bl      Function_3803cd0
	cmp     r0, #0x0
	bne     branch_3803bcc
	ldr     r0, [r4, #0x4]
	mov     r1, #0x3
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	mov     r0, #0x1
	bl      Function_3800bf8
	b       branch_3803ca4
@ 0x3803bcc

.arm
branch_3803bcc: @ 3803bcc :arm
	ldr     r0, [r4, #0x8]
	bl      Function_3804274
	b       branch_3803c88
@ 0x3803bd8

.arm
branch_3803bd8: @ 3803bd8 :arm
	bl      Function_3803cd0
	cmp     r0, #0x0
	bne     branch_3803c04
	ldr     r0, [r4, #0x4]
	mov     r1, #0x3
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	mov     r0, #0x1
	bl      Function_3800bf8
	b       branch_3803ca4
@ 0x3803c04

.arm
branch_3803c04: @ 3803c04 :arm
	ldr     r0, [r4, #0x8]
	bl      Function_38042fc
	b       branch_3803c88
@ 0x3803c10

.arm
branch_3803c10: @ 3803c10 :arm
	bl      Function_3804384
	b       branch_3803c88
@ 0x3803c18

.arm
branch_3803c18: @ 3803c18 :arm
	bl      Function_38043c4
	b       branch_3803c88
@ 0x3803c20

.arm
branch_3803c20: @ 3803c20 :arm
	bl      Function_3803cd0
	cmp     r0, #0x0
	bne     branch_3803c4c
	ldr     r0, [r4, #0x4]
	mov     r1, #0x3
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	mov     r0, #0x1
	bl      Function_3800bf8
	b       branch_3803ca4
@ 0x3803c4c

.arm
branch_3803c4c: @ 3803c4c :arm
	bl      Function_3804404
	b       branch_3803c88
@ 0x3803c54

.arm
branch_3803c54: @ 3803c54 :arm
	ldr     r0, [r4, #0x10]
	bl      Function_3804444
	b       branch_3803c88
@ 0x3803c60

.arm
branch_3803c60: @ 3803c60 :arm
	bl      Function_38044e0
	b       branch_3803c88
@ 0x3803c68

.arm
branch_3803c68: @ 3803c68 :arm
	mov     r0, #0x1
	bl      Function_3800bf8
	ldr     r0, [r4, #0x4]
	mov     r1, #0x1
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	b       branch_3803ca4
@ 0x3803c88

.arm
branch_3803c88: @ 3803c88 :arm
	ldr     r0, [r4, #0x4]
	mov     r1, #0x0
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_3800b00
	mov     r0, #0x1
	bl      Function_3800bf8
.arm
branch_3803ca4: @ 3803ca4 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x3803cac

.arm
Function_3803cac: @ 3803cac :arm
	stmfd   sp!, {r3,lr}
	add     r0, sp, #0x0
	bl      Function_3803da4
	ldrh    r0, [sp]
	tst     r0, #0x1
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3803cd0

.arm
Function_3803cd0: @ 3803cd0 :arm
	stmfd   sp!, {r3,lr}
	add     r0, sp, #0x0
	bl      Function_3803da4
	ldrh    r0, [sp]
	tst     r0, #0x1
	movne   r0, #0x0
	bne     branch_3803cf8
	tst     r0, #0x2
	movne   r0, #0x1
	moveq   r0, #0x0
.arm
branch_3803cf8: @ 3803cf8 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3803d00

.arm
Function_3803d00: @ 3803d00 :arm
	ldr     r2, [pc, #0x30] @ [0x3803d38] (=0x40001c0)
.arm
branch_3803d04: @ 3803d04 :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_3803d04
	ldr     r0, [pc, #0x24] @ [0x3803d3c] (=0x40001c2)
	mov     r1, #129, 24 @ #0x8100
	strh    r1, [r2]
	mov     r1, #0x6
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_3803d28: @ 3803d28 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3803d28
	bx      lr
@ 0x3803d38

.word 0x40001c0 @ 0x3803d38
.word 0x40001c2 @ 0x3803d3c
.arm
Function_3803d40: @ 3803d40 :arm
	ldr     r1, [pc, #0x18] @ [0x3803d60] (=0x40001c2)
	and     r0, r0, #0xff
	strh    r0, [r1]
	sub     r1, r1, #0x2
.arm
branch_3803d50: @ 3803d50 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3803d50
	bx      lr
@ 0x3803d60

.word 0x40001c2 @ 0x3803d60
.arm
Function_3803d64: @ 3803d64 :arm
	ldr     r2, [pc, #0x30] @ [0x3803d9c] (=0x40001c0)
.arm
branch_3803d68: @ 3803d68 :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_3803d68
	ldr     r0, [pc, #0x24] @ [0x3803da0] (=0x40001c2)
	mov     r1, #129, 24 @ #0x8100
	strh    r1, [r2]
	mov     r1, #0x4
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_3803d8c: @ 3803d8c :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3803d8c
	bx      lr
@ 0x3803d9c

.word 0x40001c0 @ 0x3803d9c
.word 0x40001c2 @ 0x3803da0
.arm
Function_3803da4: @ 3803da4 :arm
	ldr     r3, [pc, #0x60] @ [0x3803e0c] (=0x40001c0)
.arm
branch_3803da8: @ 3803da8 :arm
	ldrh    r1, [r3]
	tst     r1, #0x80
	bne     branch_3803da8
	ldr     r1, [pc, #0x54] @ [0x3803e10] (=0x40001c2)
	mov     r2, #137, 24 @ #0x8900
	strh    r2, [r3]
	mov     r2, #0x5
	strh    r2, [r1]
	sub     r3, r1, #0x2
.arm
branch_3803dcc: @ 3803dcc :arm
	ldrh    r1, [r3]
	tst     r1, #0x80
	bne     branch_3803dcc
	ldr     r1, [pc, #0x30] @ [0x3803e10] (=0x40001c2)
	mov     r2, #129, 24 @ #0x8100
	strh    r2, [r3]
	mov     r2, #0x0
	strh    r2, [r1]
	sub     r2, r1, #0x2
.arm
branch_3803df0: @ 3803df0 :arm
	ldrh    r1, [r2]
	tst     r1, #0x80
	bne     branch_3803df0
	ldr     r1, [pc, #0xc] @ [0x3803e10] (=0x40001c2)
	ldrh    r1, [r1]
	strb    r1, [r0]
	bx      lr
@ 0x3803e0c

.word 0x40001c0 @ 0x3803e0c
.word 0x40001c2 @ 0x3803e10
.arm
Function_3803e14: @ 3803e14 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x8
	mov     r5, r2
	cmp     r1, #0x1
	bcc     branch_3803f04
	and     r2, r0, #255, 24 @ #0xff00
	mov     r2, r2, lsr #8
	and     r3, r0, #255, 16 @ #0xff0000
	strh    r2, [sp, #0x2]
	mov     r3, r3, lsr #16
	and     r0, r0, #0xff
	ldr     r2, [pc, #0xc8] @ [0x3803f10] (=0x40001c0)
	strh    r3, [sp]
	strh    r0, [sp, #0x4]
.arm
branch_3803e4c: @ 3803e4c :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_3803e4c
	ldr     r4, [pc, #0xb4] @ [0x3803f14] (=0x40001c2)
	mov     r0, #137, 24 @ #0x8900
	strh    r0, [r2]
	mov     r0, #0x3
	strh    r0, [r4]
	mov     r12, #0x0
	add     r2, sp, #0x0
	sub     r3, r4, #0x2
.arm
branch_3803e78: @ 3803e78 :arm
	ldrh    r0, [r3]
	tst     r0, #0x80
	bne     branch_3803e78
	mov     r0, r12, lsl #1
	ldrh    r0, [r2, r0]
	add     r12, r12, #0x1
	and     r0, r0, #0xff
	strh    r0, [r4]
	cmp     r12, #0x3
	blt     branch_3803e78
	ldr     r2, [pc, #0x68] @ [0x3803f10] (=0x40001c0)
.arm
branch_3803ea4: @ 3803ea4 :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_3803ea4
	mov     r4, #0x0
	ldr     r2, [pc, #0x54] @ [0x3803f10] (=0x40001c0)
	sub     r0, r1, #0x1
	mov     r3, r4
	b       branch_3803ee0
@ 0x3803ec4

.arm
branch_3803ec4: @ 3803ec4 :arm
	strh    r3, [r2, #0x2]
.arm
branch_3803ec8: @ 3803ec8 :arm
	ldrh    r1, [r2]
	tst     r1, #0x80
	bne     branch_3803ec8
	ldrh    r1, [r2, #0x2]
	strb    r1, [r5, r4]
	add     r4, r4, #0x1
.arm
branch_3803ee0: @ 3803ee0 :arm
	cmp     r4, r0
	bcc     branch_3803ec4
	ldr     r0, [pc, #0x20] @ [0x3803f10] (=0x40001c0)
	mov     r1, #129, 24 @ #0x8100
	strh    r1, [r0]
	bl      Function_3803f18
	ldr     r0, [pc, #0x14] @ [0x3803f14] (=0x40001c2)
	ldrh    r0, [r0]
	strb    r0, [r5, r4]
.arm
branch_3803f04: @ 3803f04 :arm
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x3803f10

.word 0x40001c0 @ 0x3803f10
.word 0x40001c2 @ 0x3803f14
.arm
Function_3803f18: @ 3803f18 :arm
	ldr     r0, [pc, #0x18] @ [0x3803f38] (=0x40001c2)
	mov     r1, #0x0
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_3803f28: @ 3803f28 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3803f28
	bx      lr
@ 0x3803f38

.word 0x40001c2 @ 0x3803f38
.arm
Function_3803f3c: @ 3803f3c :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x8
	mov     r5, r2
	cmp     r1, #0x1
	bcc     branch_3804048
	and     r2, r0, #255, 24 @ #0xff00
	mov     r2, r2, lsr #8
	and     r3, r0, #255, 16 @ #0xff0000
	strh    r2, [sp, #0x2]
	mov     r3, r3, lsr #16
	and     r0, r0, #0xff
	ldr     r2, [pc, #0xe4] @ [0x3804054] (=0x40001c0)
	strh    r3, [sp]
	strh    r0, [sp, #0x4]
.arm
branch_3803f74: @ 3803f74 :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_3803f74
	ldr     r4, [pc, #0xd0] @ [0x3804058] (=0x40001c2)
	mov     r0, #137, 24 @ #0x8900
	strh    r0, [r2]
	mov     r0, #0xb
	strh    r0, [r4]
	mov     r12, #0x0
	add     r2, sp, #0x0
	sub     r3, r4, #0x2
.arm
branch_3803fa0: @ 3803fa0 :arm
	ldrh    r0, [r3]
	tst     r0, #0x80
	bne     branch_3803fa0
	mov     r0, r12, lsl #1
	ldrh    r0, [r2, r0]
	add     r12, r12, #0x1
	and     r0, r0, #0xff
	strh    r0, [r4]
	cmp     r12, #0x3
	blt     branch_3803fa0
	ldr     r2, [pc, #0x84] @ [0x3804054] (=0x40001c0)
.arm
branch_3803fcc: @ 3803fcc :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_3803fcc
	ldr     r0, [pc, #0x78] @ [0x3804058] (=0x40001c2)
	mov     r2, #0x0
	strh    r2, [r0]
	sub     r2, r0, #0x2
.arm
branch_3803fe8: @ 3803fe8 :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_3803fe8
	mov     r4, #0x0
	ldr     r2, [pc, #0x54] @ [0x3804054] (=0x40001c0)
	sub     r0, r1, #0x1
	mov     r3, r4
	b       branch_3804024
@ 0x3804008

.arm
branch_3804008: @ 3804008 :arm
	strh    r3, [r2, #0x2]
.arm
branch_380400c: @ 380400c :arm
	ldrh    r1, [r2]
	tst     r1, #0x80
	bne     branch_380400c
	ldrh    r1, [r2, #0x2]
	strb    r1, [r5, r4]
	add     r4, r4, #0x1
.arm
branch_3804024: @ 3804024 :arm
	cmp     r4, r0
	bcc     branch_3804008
	ldr     r0, [pc, #0x20] @ [0x3804054] (=0x40001c0)
	mov     r1, #129, 24 @ #0x8100
	strh    r1, [r0]
	bl      Function_3803f18
	ldr     r0, [pc, #0x14] @ [0x3804058] (=0x40001c2)
	ldrh    r0, [r0]
	strb    r0, [r5, r4]
.arm
branch_3804048: @ 3804048 :arm
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x3804054

.word 0x40001c0 @ 0x3804054
.word 0x40001c2 @ 0x3804058
.arm
Function_380405c: @ 380405c :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #0x8
	cmp     r1, #0x1
	bcc     branch_3804154
	add     r3, r0, r1
	sub     r3, r3, #0x1
	mov     r3, r3, lsr #8
	cmp     r3, r0, lsr #8
	and     r3, r0, #255, 24 @ #0xff00
	mov     r3, r3, lsr #8
	andhi   r1, r0, #0xff
	and     r12, r0, #255, 16 @ #0xff0000
	strh    r3, [sp, #0x2]
	rsbhi   r1, r1, #1, 24 @ #0x100
	mov     r12, r12, lsr #16
	and     r0, r0, #0xff
	movhi   r1, r1, lsl #16
	ldr     r3, [pc, #0xb8] @ [0x3804160] (=0x40001c0)
	strh    r12, [sp]
	strh    r0, [sp, #0x4]
	movhi   r1, r1, lsr #16
.arm
branch_38040b0: @ 38040b0 :arm
	ldrh    r0, [r3]
	tst     r0, #0x80
	bne     branch_38040b0
	ldr     lr, [pc, #0xa0] @ [0x3804164] (=0x40001c2)
	mov     r0, #137, 24 @ #0x8900
	strh    r0, [r3]
	mov     r0, #0xa
	strh    r0, [lr]
	mov     r4, #0x0
	add     r3, sp, #0x0
	sub     r12, lr, #0x2
.arm
branch_38040dc: @ 38040dc :arm
	ldrh    r0, [r12]
	tst     r0, #0x80
	bne     branch_38040dc
	mov     r0, r4, lsl #1
	ldrh    r0, [r3, r0]
	add     r4, r4, #0x1
	and     r0, r0, #0xff
	strh    r0, [lr]
	cmp     r4, #0x3
	blt     branch_38040dc
	sub     r3, r1, #0x1
	ldr     r1, [pc, #0x50] @ [0x3804160] (=0x40001c0)
	mov     r4, #0x0
	b       branch_380412c
@ 0x3804114

.arm
branch_3804114: @ 3804114 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3804114
	ldrb    r0, [r2, r4]
	add     r4, r4, #0x1
	strh    r0, [r1, #0x2]
.arm
branch_380412c: @ 380412c :arm
	cmp     r4, r3
	blt     branch_3804114
	ldr     r1, [pc, #0x24] @ [0x3804160] (=0x40001c0)
.arm
branch_3804138: @ 3804138 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3804138
	mov     r0, #129, 24 @ #0x8100
	strh    r0, [r1]
	ldrb    r0, [r2, r4]
	bl      Function_3803d40
.arm
branch_3804154: @ 3804154 :arm
	add     sp, sp, #0x8
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3804160

.word 0x40001c0 @ 0x3804160
.word 0x40001c2 @ 0x3804164
.arm
Function_3804168: @ 3804168 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #0x8
	cmp     r1, #0x1
	bcc     branch_3804260
	add     r3, r0, r1
	sub     r3, r3, #0x1
	mov     r3, r3, lsr #8
	cmp     r3, r0, lsr #8
	and     r3, r0, #255, 24 @ #0xff00
	mov     r3, r3, lsr #8
	andhi   r1, r0, #0xff
	and     r12, r0, #255, 16 @ #0xff0000
	strh    r3, [sp, #0x2]
	rsbhi   r1, r1, #1, 24 @ #0x100
	mov     r12, r12, lsr #16
	and     r0, r0, #0xff
	movhi   r1, r1, lsl #16
	ldr     r3, [pc, #0xb8] @ [0x380426c] (=0x40001c0)
	strh    r12, [sp]
	strh    r0, [sp, #0x4]
	movhi   r1, r1, lsr #16
.arm
branch_38041bc: @ 38041bc :arm
	ldrh    r0, [r3]
	tst     r0, #0x80
	bne     branch_38041bc
	ldr     lr, [pc, #0xa0] @ [0x3804270] (=0x40001c2)
	mov     r0, #137, 24 @ #0x8900
	strh    r0, [r3]
	mov     r0, #0x2
	strh    r0, [lr]
	mov     r4, #0x0
	add     r3, sp, #0x0
	sub     r12, lr, #0x2
.arm
branch_38041e8: @ 38041e8 :arm
	ldrh    r0, [r12]
	tst     r0, #0x80
	bne     branch_38041e8
	mov     r0, r4, lsl #1
	ldrh    r0, [r3, r0]
	add     r4, r4, #0x1
	and     r0, r0, #0xff
	strh    r0, [lr]
	cmp     r4, #0x3
	blt     branch_38041e8
	sub     r3, r1, #0x1
	ldr     r1, [pc, #0x50] @ [0x380426c] (=0x40001c0)
	mov     r4, #0x0
	b       branch_3804238
@ 0x3804220

.arm
branch_3804220: @ 3804220 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3804220
	ldrb    r0, [r2, r4]
	add     r4, r4, #0x1
	strh    r0, [r1, #0x2]
.arm
branch_3804238: @ 3804238 :arm
	cmp     r4, r3
	blt     branch_3804220
	ldr     r1, [pc, #0x24] @ [0x380426c] (=0x40001c0)
.arm
branch_3804244: @ 3804244 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3804244
	mov     r0, #129, 24 @ #0x8100
	strh    r0, [r1]
	ldrb    r0, [r2, r4]
	bl      Function_3803d40
.arm
branch_3804260: @ 3804260 :arm
	add     sp, sp, #0x8
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x380426c

.word 0x40001c0 @ 0x380426c
.word 0x40001c2 @ 0x3804270
.arm
Function_3804274: @ 3804274 :arm
	stmfd   sp!, {r3-r5,lr}
	and     r1, r0, #255, 16 @ #0xff0000
	mov     r1, r1, lsr #16
	and     r2, r0, #255, 24 @ #0xff00
	mov     r2, r2, lsl #8
	ldr     r3, [pc, #0x64] @ [0x38042f4] (=0x40001c0)
	mov     r1, r1, lsl #16
	and     r5, r0, #0xff
	mov     r0, r1, lsr #16
	mov     r4, r2, lsr #16
.arm
branch_380429c: @ 380429c :arm
	ldrh    r1, [r3]
	tst     r1, #0x80
	bne     branch_380429c
	ldr     r1, [pc, #0x48] @ [0x38042f8] (=0x40001c2)
	mov     r2, #137, 24 @ #0x8900
	strh    r2, [r3]
	mov     r2, #0xdb
	strh    r2, [r1]
	sub     r2, r1, #0x2
.arm
branch_38042c0: @ 38042c0 :arm
	ldrh    r1, [r2]
	tst     r1, #0x80
	bne     branch_38042c0
	bl      Function_3803d40
	mov     r0, r4
	bl      Function_3803d40
	ldr     r1, [pc, #0x14] @ [0x38042f4] (=0x40001c0)
	mov     r2, #129, 24 @ #0x8100
	mov     r0, r5
	strh    r2, [r1]
	bl      Function_3803d40
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x38042f4

.word 0x40001c0 @ 0x38042f4
.word 0x40001c2 @ 0x38042f8
.arm
Function_38042fc: @ 38042fc :arm
	stmfd   sp!, {r3-r5,lr}
	and     r1, r0, #255, 16 @ #0xff0000
	mov     r1, r1, lsr #16
	and     r2, r0, #255, 24 @ #0xff00
	mov     r2, r2, lsl #8
	ldr     r3, [pc, #0x64] @ [0x380437c] (=0x40001c0)
	mov     r1, r1, lsl #16
	and     r5, r0, #0xff
	mov     r0, r1, lsr #16
	mov     r4, r2, lsr #16
.arm
branch_3804324: @ 3804324 :arm
	ldrh    r1, [r3]
	tst     r1, #0x80
	bne     branch_3804324
	ldr     r1, [pc, #0x48] @ [0x3804380] (=0x40001c2)
	mov     r2, #137, 24 @ #0x8900
	strh    r2, [r3]
	mov     r2, #0xd8
	strh    r2, [r1]
	sub     r2, r1, #0x2
.arm
branch_3804348: @ 3804348 :arm
	ldrh    r1, [r2]
	tst     r1, #0x80
	bne     branch_3804348
	bl      Function_3803d40
	mov     r0, r4
	bl      Function_3803d40
	ldr     r1, [pc, #0x14] @ [0x380437c] (=0x40001c0)
	mov     r2, #129, 24 @ #0x8100
	mov     r0, r5
	strh    r2, [r1]
	bl      Function_3803d40
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x380437c

.word 0x40001c0 @ 0x380437c
.word 0x40001c2 @ 0x3804380
.arm
Function_3804384: @ 3804384 :arm
	ldr     r2, [pc, #0x30] @ [0x38043bc] (=0x40001c0)
.arm
branch_3804388: @ 3804388 :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_3804388
	ldr     r0, [pc, #0x24] @ [0x38043c0] (=0x40001c2)
	mov     r1, #129, 24 @ #0x8100
	strh    r1, [r2]
	mov     r1, #0xb9
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_38043ac: @ 38043ac :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_38043ac
	bx      lr
@ 0x38043bc

.word 0x40001c0 @ 0x38043bc
.word 0x40001c2 @ 0x38043c0
.arm
Function_38043c4: @ 38043c4 :arm
	ldr     r2, [pc, #0x30] @ [0x38043fc] (=0x40001c0)
.arm
branch_38043c8: @ 38043c8 :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_38043c8
	ldr     r0, [pc, #0x24] @ [0x3804400] (=0x40001c2)
	mov     r1, #129, 24 @ #0x8100
	strh    r1, [r2]
	mov     r1, #0xab
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_38043ec: @ 38043ec :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_38043ec
	bx      lr
@ 0x38043fc

.word 0x40001c0 @ 0x38043fc
.word 0x40001c2 @ 0x3804400
.arm
Function_3804404: @ 3804404 :arm
	ldr     r2, [pc, #0x30] @ [0x380443c] (=0x40001c0)
.arm
branch_3804408: @ 3804408 :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_3804408
	ldr     r0, [pc, #0x24] @ [0x3804440] (=0x40001c2)
	mov     r1, #129, 24 @ #0x8100
	strh    r1, [r2]
	mov     r1, #0xc7
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_380442c: @ 380442c :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_380442c
	bx      lr
@ 0x380443c

.word 0x40001c0 @ 0x380443c
.word 0x40001c2 @ 0x3804440
.arm
Function_3804444: @ 3804444 :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [pc, #0x88] @ [0x38044d8] (=0x40001c0)
.arm
branch_380444c: @ 380444c :arm
	ldrh    r1, [r3]
	tst     r1, #0x80
	bne     branch_380444c
	ldr     r1, [pc, #0x7c] @ [0x38044dc] (=0x40001c2)
	mov     r2, #137, 24 @ #0x8900
	strh    r2, [r3]
	mov     r2, #0x9f
	strh    r2, [r1]
	sub     r2, r1, #0x2
.arm
branch_3804470: @ 3804470 :arm
	ldrh    r1, [r2]
	tst     r1, #0x80
	bne     branch_3804470
	ldr     r1, [pc, #0x58] @ [0x38044dc] (=0x40001c2)
	mov     r2, #0x0
	strh    r2, [r1]
	sub     lr, r1, #0x2
.arm
branch_380448c: @ 380448c :arm
	ldrh    r1, [lr]
	tst     r1, #0x80
	bne     branch_380448c
	ldr     r12, [pc, #0x3c] @ [0x38044dc] (=0x40001c2)
	mov     r2, #129, 24 @ #0x8100
	ldrh    r3, [r12]
	mov     r1, #0x0
	strb    r3, [r0]
	strh    r2, [lr]
	strh    r1, [r12]
	sub     r2, r12, #0x2
.arm
branch_38044b8: @ 38044b8 :arm
	ldrh    r1, [r2]
	tst     r1, #0x80
	bne     branch_38044b8
	ldr     r1, [pc, #0x10] @ [0x38044dc] (=0x40001c2)
	ldrh    r1, [r1]
	strb    r1, [r0, #0x1]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x38044d8

.word 0x40001c0 @ 0x38044d8
.word 0x40001c2 @ 0x38044dc
.arm
Function_38044e0: @ 38044e0 :arm
	ldr     r2, [pc, #0x30] @ [0x3804518] (=0x40001c0)
.arm
branch_38044e4: @ 38044e4 :arm
	ldrh    r0, [r2]
	tst     r0, #0x80
	bne     branch_38044e4
	ldr     r0, [pc, #0x24] @ [0x380451c] (=0x40001c2)
	mov     r1, #129, 24 @ #0x8100
	strh    r1, [r2]
	mov     r1, #0xff
	strh    r1, [r0]
	sub     r1, r0, #0x2
.arm
branch_3804508: @ 3804508 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bne     branch_3804508
	bx      lr
@ 0x3804518

.word 0x40001c0 @ 0x3804518
.word 0x40001c2 @ 0x380451c
.arm
Function_3804520: @ 3804520 :arm
	stmfd   sp!, {r3-r8,lr}
	sub     sp, sp, #0xc
	ldr     r1, [pc, #0x22c] @ [0x380475c] (=0x38095d8)
	mov     r8, r0
	ldrh    r0, [r1]
	cmp     r0, #0x0
	bne     branch_3804750
	mov     r2, #0x1
	strh    r2, [r1]
	add     r0, sp, #0x8
	str     r2, [r1, #0x1d8]
	bl      Function_3805360
	add     r0, sp, #0xa
	bl      Function_38053c4
	ldrh    r0, [sp, #0x8]
	mov     r1, r0, lsl #24
	movs    r1, r1, lsr #31
	bne     branch_3804584
	mov     r0, r0, lsl #25
	movs    r0, r0, lsr #31
	bne     branch_3804584
	ldrh    r0, [sp, #0xa]
	mov     r0, r0, lsl #24
	movs    r0, r0, lsr #31
	beq     branch_380459c
.arm
branch_3804584: @ 3804584 :arm
	ldrh    r1, [sp, #0x8]
	add     r0, sp, #0x8
	bic     r1, r1, #0x1
	orr     r1, r1, #0x1
	strh    r1, [sp, #0x8]
	bl      Function_380538c
.arm
branch_380459c: @ 380459c :arm
	ldrh    r0, [sp, #0x8]
	mov     r1, r0, lsl #27
	movs    r1, r1, lsr #31
	bne     branch_38045b8
	mov     r0, r0, lsl #26
	movs    r0, r0, lsr #31
	beq     branch_38045d8
.arm
branch_38045b8: @ 38045b8 :arm
	ldrh    r1, [sp, #0xa]
	add     r0, sp, #0xa
	bic     r1, r1, #0xf
	strh    r1, [sp, #0xa]
	ldrh    r1, [sp, #0xa]
	bic     r1, r1, #0x40
	strh    r1, [sp, #0xa]
	bl      Function_38053f0
.arm
branch_38045d8: @ 38045d8 :arm
	ldr     r0, [pc, #0x180] @ [0x3804760] (=0x27ffde8)
	bl      Function_3804ff0
	ldr     r0, [pc, #0x178] @ [0x3804760] (=0x27ffde8)
	ldr     r0, [r0]
	mov     r0, r0, lsl #10
	mov     r0, r0, lsr #26
	bl      Function_3804e18
	ldr     r1, [pc, #0x164] @ [0x3804760] (=0x27ffde8)
	mov     r5, r0
	ldr     r0, [r1]
	mov     r0, r0, lsl #19
	mov     r0, r0, lsr #27
	bl      Function_3804e18
	ldr     r1, [pc, #0x14c] @ [0x3804760] (=0x27ffde8)
	mov     r6, r0
	ldr     r0, [r1]
	mov     r0, r0, lsl #24
	mov     r0, r0, lsr #24
	bl      Function_3804e18
	sub     r1, r6, #0x1
	cmp     r1, #0x1
	add     r7, r0, #125, 28 @ #0x7d0
	subls   r7, r7, #0x1
	mov     r0, r7
	mov     r1, #25, 28 @ #0x190
	addls   r6, r6, #0xc
	bl      Function_3806460
	mov     r4, r0
	mov     r0, r7
	mov     r1, #0x64
	bl      Function_3806460
	mov     r1, #0xd
	mul     r1, r6, r1
	mov     r6, r0
	add     r0, r1, #0x8
	mov     r1, #0x5
	bl      Function_3806460
	add     r1, r7, r7, lsr #2
	sub     r1, r1, r6
	add     r1, r4, r1
	add     r0, r1, r0
	add     r0, r5, r0
	mov     r1, #0x7
	bl      Function_3806460
	ldr     r0, [pc, #0xd0] @ [0x3804760] (=0x27ffde8)
	ldr     r2, [r0]
	mov     r3, r2, lsl #5
	mov     r3, r3, lsr #29
	cmp     r3, r1
	beq     branch_38046b4
	bic     r2, r2, #7, 8 @ #0x7000000
	mov     r1, r1, lsl #29
	orr     r1, r2, r1, lsr #5
	str     r1, [r0]
	bl      Function_380501c
.arm
branch_38046b4: @ 38046b4 :arm
	mov     r0, #0x1
	bl      Function_3804ecc
	ldr     r0, [pc, #0x98] @ [0x380475c] (=0x38095d8)
	mov     r1, #0x0
	str     r1, [r0, #0x1d8]
	bl      Function_37fb3b0
	ldr     r1, [pc, #0x90] @ [0x3804764] (=0x3804780)
	mov     r0, #0x5
	bl      Function_37fb498
	ldr     r0, [pc, #0x88] @ [0x3804768] (=0x38095dc)
	ldr     r1, [pc, #0x88] @ [0x380476c] (=0x38095fc)
	mov     r2, #0x4
	bl      Function_37f9750
	mov     r0, #1, 24 @ #0x100
	stmea   sp, {r0,r8}
	ldr     r0, [pc, #0x78] @ [0x3804770] (=0x380960c)
	ldr     r1, [pc, #0x78] @ [0x3804774] (=0x3804904)
	ldr     r3, [pc, #0x78] @ [0x3804778] (=0x38097b0)
	mov     r2, #0x0
	bl      Function_37f90b0
	ldr     r0, [pc, #0x64] @ [0x3804770] (=0x380960c)
	bl      Function_37f9410
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	mov     r0, #0x40
	mov     r1, #0x0
	bl      Function_37fb684
	mov     r0, #1, 24 @ #0x100
	mov     r1, r0
	bl      Function_37fb684
	bl      Function_37fada4
	mov     r4, r0
	ldr     r1, [pc, #0x40] @ [0x380477c] (=0x3804d88)
	mov     r0, #0x80
	bl      Function_37f8818
	mov     r0, #0x80
	bl      Function_37f894c
	mov     r0, r4
	bl      Function_37fadb8
.arm
branch_3804750: @ 3804750 :arm
	add     sp, sp, #0xc
	ldmfd   sp!, {r3-r8,lr}
	bx      lr
@ 0x380475c

.word 0x38095d8 @ 0x380475c
.word 0x27ffde8 @ 0x3804760
.word 0x3804780 @ 0x3804764
.word 0x38095dc @ 0x3804768
.word 0x38095fc @ 0x380476c
.word 0x380960c @ 0x3804770
.word 0x3804904 @ 0x3804774
.word 0x38097b0 @ 0x3804778
.word 0x3804d88 @ 0x380477c
.arm
Function_3804780: @ 3804780 :arm
	stmfd   sp!, {r4,lr}
	cmp     r2, #0x0
	bne     branch_38048b0
	and     r0, r1, #127, 24 @ #0x7f00
	mov     r0, r0, lsl #8
	mov     r4, r0, lsr #16
	cmp     r4, #0x29
	addls   pc, pc, r4, lsl #2
	b       branch_38048a4
@ 0x38047a4

.arm
Function_38047a4: @ 38047a4 :arm
	b       branch_380484c
@ 0x38047a8

.arm
Function_38047a8: @ 38047a8 :arm
	b       branch_380484c
@ 0x38047ac

.arm
Function_38047ac: @ 38047ac :arm
	b       branch_38048a4
@ 0x38047b0

.arm
Function_38047b0: @ 38047b0 :arm
	b       branch_38048a4
@ 0x38047b4

.arm
Function_38047b4: @ 38047b4 :arm
	b       branch_38048a4
@ 0x38047b8

.arm
Function_38047b8: @ 38047b8 :arm
	b       branch_38048a4
@ 0x38047bc

.arm
Function_38047bc: @ 38047bc :arm
	b       branch_38048a4
@ 0x38047c0

.arm
Function_38047c0: @ 38047c0 :arm
	b       branch_38048a4
@ 0x38047c4

.arm
Function_38047c4: @ 38047c4 :arm
	b       branch_38048a4
@ 0x38047c8

.arm
Function_38047c8: @ 38047c8 :arm
	b       branch_38048a4
@ 0x38047cc

.arm
Function_38047cc: @ 38047cc :arm
	b       branch_38048a4
@ 0x38047d0

.arm
Function_38047d0: @ 38047d0 :arm
	b       branch_38048a4
@ 0x38047d4

.arm
Function_38047d4: @ 38047d4 :arm
	b       branch_38048a4
@ 0x38047d8

.arm
Function_38047d8: @ 38047d8 :arm
	b       branch_38048a4
@ 0x38047dc

.arm
Function_38047dc: @ 38047dc :arm
	b       branch_38048a4
@ 0x38047e0

.arm
Function_38047e0: @ 38047e0 :arm
	b       branch_38048a4
@ 0x38047e4

.arm
Function_38047e4: @ 38047e4 :arm
	b       branch_380484c
@ 0x38047e8

.arm
Function_38047e8: @ 38047e8 :arm
	b       branch_380484c
@ 0x38047ec

.arm
Function_38047ec: @ 38047ec :arm
	b       branch_380484c
@ 0x38047f0

.arm
Function_38047f0: @ 38047f0 :arm
	b       branch_380484c
@ 0x38047f4

.arm
Function_38047f4: @ 38047f4 :arm
	b       branch_380484c
@ 0x38047f8

.arm
Function_38047f8: @ 38047f8 :arm
	b       branch_380484c
@ 0x38047fc

.arm
Function_38047fc: @ 38047fc :arm
	b       branch_380484c
@ 0x3804800

.arm
Function_3804800: @ 3804800 :arm
	b       branch_380484c
@ 0x3804804

.arm
Function_3804804: @ 3804804 :arm
	b       branch_380484c
@ 0x3804808

.arm
Function_3804808: @ 3804808 :arm
	b       branch_380484c
@ 0x380480c

.arm
Function_380480c: @ 380480c :arm
	b       branch_38048a4
@ 0x3804810

.arm
Function_3804810: @ 3804810 :arm
	b       branch_38048a4
@ 0x3804814

.arm
Function_3804814: @ 3804814 :arm
	b       branch_38048a4
@ 0x3804818

.arm
Function_3804818: @ 3804818 :arm
	b       branch_38048a4
@ 0x380481c

.arm
Function_380481c: @ 380481c :arm
	b       branch_38048a4
@ 0x3804820

.arm
Function_3804820: @ 3804820 :arm
	b       branch_38048a4
@ 0x3804824

.arm
Function_3804824: @ 3804824 :arm
	b       branch_38048a4
@ 0x3804828

.arm
Function_3804828: @ 3804828 :arm
	b       branch_38048a4
@ 0x380482c

.arm
Function_380482c: @ 380482c :arm
	b       branch_38048a4
@ 0x3804830

.arm
Function_3804830: @ 3804830 :arm
	b       branch_380484c
@ 0x3804834

.arm
Function_3804834: @ 3804834 :arm
	b       branch_380484c
@ 0x3804838

.arm
Function_3804838: @ 3804838 :arm
	b       branch_380484c
@ 0x380483c

.arm
Function_380483c: @ 380483c :arm
	b       branch_380484c
@ 0x3804840

.arm
Function_3804840: @ 3804840 :arm
	b       branch_380484c
@ 0x3804844

.arm
Function_3804844: @ 3804844 :arm
	b       branch_380484c
@ 0x3804848

.arm
Function_3804848: @ 3804848 :arm
	b       branch_380484c
@ 0x380484c

.arm
branch_380484c: @ 380484c :arm
	ldr     r0, [pc, #0x64] @ [0x38048b8] (=0x38095d8)
	ldr     r1, [r0, #0x1d8]
	cmp     r1, #0x0
	beq     branch_380486c
	mov     r0, r4
	mov     r1, #0x3
	bl      Function_38048c4
	b       branch_38048b0
@ 0x380486c

.arm
branch_380486c: @ 380486c :arm
	ldr     r3, [pc, #0x48] @ [0x38048bc] (=0x38096d8)
	mov     r1, #0x1
	str     r1, [r0, #0x1d8]
	mov     r1, #0x0
	ldr     r0, [pc, #0x3c] @ [0x38048c0] (=0x38095dc)
	mov     r2, r1
	strh    r4, [r3, #0xdc]
	bl      Function_37f9778
	cmp     r0, #0x0
	bne     branch_38048b0
	mov     r0, r4
	mov     r1, #0x4
	bl      Function_38048c4
	b       branch_38048b0
@ 0x38048a4

.arm
branch_38048a4: @ 38048a4 :arm
	mov     r0, r4
	mov     r1, #0x1
	bl      Function_38048c4
.arm
branch_38048b0: @ 38048b0 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x38048b8

.word 0x38095d8 @ 0x38048b8
.word 0x38096d8 @ 0x38048bc
.word 0x38095dc @ 0x38048c0
.arm
Function_38048c4: @ 38048c4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r0, r0, lsl #8
	and     r0, r0, #127, 24 @ #0x7f00
	orr     r2, r0, #2, 18 @ #0x8000
	and     r0, r1, #0xff
	orr     r6, r2, r0
	mov     r5, #0x5
	mov     r4, #0x0
.arm
branch_38048e4: @ 38048e4 :arm
	mov     r0, r5
	mov     r1, r6
	mov     r2, r4
	bl      Function_37fb50c
	cmp     r0, #0x0
	blt     branch_38048e4
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x3804904

.arm
Function_3804904: @ 3804904 :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r9, [pc, #0x468] @ [0x3804d78] (=0x27ffde8)
	mov     r8, #0x0
	ldr     r4, [pc, #0x464] @ [0x3804d7c] (=0x38095d8)
	mov     r7, r8
	mov     r6, r8
	mov     r5, r8
	mov     r10, r8
	mov     r11, r8
.arm
branch_3804928: @ 3804928 :arm
	ldr     r0, [pc, #0x450] @ [0x3804d80] (=0x38095dc)
	add     r1, sp, #0x0
	mov     r2, #0x1
	bl      Function_37f9804
	ldr     r0, [pc, #0x444] @ [0x3804d84] (=0x38096d8)
	ldrh    r0, [r0, #0xdc]
	cmp     r0, #0x29
	addls   pc, pc, r0, lsl #2
	b       branch_3804d64
@ 0x380494c

.arm
Function_380494c: @ 380494c :arm
	b       branch_38049f4
@ 0x3804950

.arm
Function_3804950: @ 3804950 :arm
	b       branch_3804a0c
@ 0x3804954

.arm
Function_3804954: @ 3804954 :arm
	b       branch_3804d64
@ 0x3804958

.arm
Function_3804958: @ 3804958 :arm
	b       branch_3804d64
@ 0x380495c

.arm
Function_380495c: @ 380495c :arm
	b       branch_3804d64
@ 0x3804960

.arm
Function_3804960: @ 3804960 :arm
	b       branch_3804d64
@ 0x3804964

.arm
Function_3804964: @ 3804964 :arm
	b       branch_3804d64
@ 0x3804968

.arm
Function_3804968: @ 3804968 :arm
	b       branch_3804d64
@ 0x380496c

.arm
Function_380496c: @ 380496c :arm
	b       branch_3804d64
@ 0x3804970

.arm
Function_3804970: @ 3804970 :arm
	b       branch_3804d64
@ 0x3804974

.arm
Function_3804974: @ 3804974 :arm
	b       branch_3804d64
@ 0x3804978

.arm
Function_3804978: @ 3804978 :arm
	b       branch_3804d64
@ 0x380497c

.arm
Function_380497c: @ 380497c :arm
	b       branch_3804d64
@ 0x3804980

.arm
Function_3804980: @ 3804980 :arm
	b       branch_3804d64
@ 0x3804984

.arm
Function_3804984: @ 3804984 :arm
	b       branch_3804d64
@ 0x3804988

.arm
Function_3804988: @ 3804988 :arm
	b       branch_3804d64
@ 0x380498c

.arm
Function_380498c: @ 380498c :arm
	b       branch_3804a34
@ 0x3804990

.arm
Function_3804990: @ 3804990 :arm
	b       branch_3804a54
@ 0x3804994

.arm
Function_3804994: @ 3804994 :arm
	b       branch_3804a74
@ 0x3804998

.arm
Function_3804998: @ 3804998 :arm
	b       branch_3804a94
@ 0x380499c

.arm
Function_380499c: @ 380499c :arm
	b       branch_3804ad0
@ 0x38049a0

.arm
Function_38049a0: @ 38049a0 :arm
	b       branch_3804b0c
@ 0x38049a4

.arm
Function_38049a4: @ 38049a4 :arm
	b       branch_3804b48
@ 0x38049a8

.arm
Function_38049a8: @ 38049a8 :arm
	b       branch_3804b68
@ 0x38049ac

.arm
Function_38049ac: @ 38049ac :arm
	b       branch_3804b88
@ 0x38049b0

.arm
Function_38049b0: @ 38049b0 :arm
	b       branch_3804ba8
@ 0x38049b4

.arm
Function_38049b4: @ 38049b4 :arm
	b       branch_3804d64
@ 0x38049b8

.arm
Function_38049b8: @ 38049b8 :arm
	b       branch_3804d64
@ 0x38049bc

.arm
Function_38049bc: @ 38049bc :arm
	b       branch_3804d64
@ 0x38049c0

.arm
Function_38049c0: @ 38049c0 :arm
	b       branch_3804d64
@ 0x38049c4

.arm
Function_38049c4: @ 38049c4 :arm
	b       branch_3804d64
@ 0x38049c8

.arm
Function_38049c8: @ 38049c8 :arm
	b       branch_3804d64
@ 0x38049cc

.arm
Function_38049cc: @ 38049cc :arm
	b       branch_3804bc8
@ 0x38049d0

.arm
Function_38049d0: @ 38049d0 :arm
	b       branch_3804be8
@ 0x38049d4

.arm
Function_38049d4: @ 38049d4 :arm
	b       branch_3804c10
@ 0x38049d8

.arm
Function_38049d8: @ 38049d8 :arm
	b       branch_3804c30
@ 0x38049dc

.arm
Function_38049dc: @ 38049dc :arm
	b       branch_3804c6c
@ 0x38049e0

.arm
Function_38049e0: @ 38049e0 :arm
	b       branch_3804ca8
@ 0x38049e4

.arm
Function_38049e4: @ 38049e4 :arm
	b       branch_3804ce4
@ 0x38049e8

.arm
Function_38049e8: @ 38049e8 :arm
	b       branch_3804d04
@ 0x38049ec

.arm
Function_38049ec: @ 38049ec :arm
	b       branch_3804d24
@ 0x38049f0

.arm
Function_38049f0: @ 38049f0 :arm
	b       branch_3804d44
@ 0x38049f4

.arm
branch_38049f4: @ 38049f4 :arm
	bl      Function_3804e88
	mov     r0, #0x0
	mov     r1, r0
	str     r0, [r4, #0x1d8]
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804a0c

.arm
branch_3804a0c: @ 3804a0c :arm
	ldrh    r0, [r9]
	mov     r0, r0, lsl #30
	mov     r0, r0, lsr #31
	bl      Function_3804ecc
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x1
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804a34

.arm
branch_3804a34: @ 3804a34 :arm
	mov     r0, r9
	bl      Function_3804ff0
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x10
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804a54

.arm
branch_3804a54: @ 3804a54 :arm
	mov     r0, r9
	bl      Function_3805054
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x11
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804a74

.arm
branch_3804a74: @ 3804a74 :arm
	add     r0, r9, #0x4
	bl      Function_3805080
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x12
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804a94

.arm
branch_3804a94: @ 3804a94 :arm
	add     r0, r9, #0x4
	bl      Function_38050e4
	cmp     r0, #0x0
	bne     branch_3804ab8
	mov     r0, #0x13
	mov     r1, #0x2
	str     r8, [r4, #0x1d8]
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804ab8

.arm
branch_3804ab8: @ 3804ab8 :arm
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x13
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804ad0

.arm
branch_3804ad0: @ 3804ad0 :arm
	add     r0, r9, #0x4
	bl      Function_38051c0
	cmp     r0, #0x0
	bne     branch_3804af4
	mov     r0, #0x14
	mov     r1, #0x2
	str     r7, [r4, #0x1d8]
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804af4

.arm
branch_3804af4: @ 3804af4 :arm
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x14
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804b0c

.arm
branch_3804b0c: @ 3804b0c :arm
	add     r0, r9, #0x4
	bl      Function_3805294
	cmp     r0, #0x0
	bne     branch_3804b30
	mov     r0, #0x15
	mov     r1, #0x2
	str     r6, [r4, #0x1d8]
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804b30

.arm
branch_3804b30: @ 3804b30 :arm
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x15
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804b48

.arm
branch_3804b48: @ 3804b48 :arm
	mov     r0, r9
	bl      Function_3805360
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x16
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804b68

.arm
branch_3804b68: @ 3804b68 :arm
	add     r0, r9, #0x2
	bl      Function_38053c4
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x17
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804b88

.arm
branch_3804b88: @ 3804b88 :arm
	add     r0, r9, #0x4
	bl      Function_3805428
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x18
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804ba8

.arm
branch_3804ba8: @ 3804ba8 :arm
	add     r0, r9, #0x4
	bl      Function_380548c
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x19
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804bc8

.arm
branch_3804bc8: @ 3804bc8 :arm
	mov     r0, r9
	bl      Function_380501c
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x20
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804be8

.arm
branch_3804be8: @ 3804be8 :arm
	add     r0, r9, #0x4
	bl      Function_3805080
	mov     r0, r9
	bl      Function_380501c
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x21
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804c10

.arm
branch_3804c10: @ 3804c10 :arm
	add     r0, r9, #0x4
	bl      Function_38050ac
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x22
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804c30

.arm
branch_3804c30: @ 3804c30 :arm
	add     r0, r9, #0x4
	bl      Function_380514c
	cmp     r0, #0x0
	bne     branch_3804c54
	mov     r0, #0x23
	mov     r1, #0x2
	str     r5, [r4, #0x1d8]
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804c54

.arm
branch_3804c54: @ 3804c54 :arm
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x23
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804c6c

.arm
branch_3804c6c: @ 3804c6c :arm
	add     r0, r9, #0x4
	bl      Function_3805224
	cmp     r0, #0x0
	bne     branch_3804c90
	mov     r0, #0x24
	mov     r1, #0x2
	str     r10, [r4, #0x1d8]
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804c90

.arm
branch_3804c90: @ 3804c90 :arm
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x24
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804ca8

.arm
branch_3804ca8: @ 3804ca8 :arm
	add     r0, r9, #0x4
	bl      Function_38052f4
	cmp     r0, #0x0
	bne     branch_3804ccc
	mov     r0, #0x25
	mov     r1, #0x2
	str     r11, [r4, #0x1d8]
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804ccc

.arm
branch_3804ccc: @ 3804ccc :arm
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x25
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804ce4

.arm
branch_3804ce4: @ 3804ce4 :arm
	mov     r0, r9
	bl      Function_380538c
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x26
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804d04

.arm
branch_3804d04: @ 3804d04 :arm
	add     r0, r9, #0x2
	bl      Function_38053f0
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x27
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804d24

.arm
branch_3804d24: @ 3804d24 :arm
	add     r0, r9, #0x4
	bl      Function_3805454
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x28
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804d44

.arm
branch_3804d44: @ 3804d44 :arm
	add     r0, r9, #0x4
	bl      Function_38054b8
	mov     r0, #0x0
	str     r0, [r4, #0x1d8]
	mov     r0, #0x29
	mov     r1, #0x0
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804d64

.arm
branch_3804d64: @ 3804d64 :arm
	mov     r1, #0x0
	str     r1, [r4, #0x1d8]
	mov     r1, #0x1
	bl      Function_38048c4
	b       branch_3804928
@ 0x3804d78

.word 0x27ffde8 @ 0x3804d78
.word 0x38095d8 @ 0x3804d7c
.word 0x38095dc @ 0x3804d80
.word 0x38096d8 @ 0x3804d84
.arm
Function_3804d88: @ 3804d88 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	add     r0, sp, #0x2
	bl      Function_3805360
	ldrh    r0, [sp, #0x2]
	mov     r1, r0, lsl #27
	movs    r1, r1, lsr #31
	bne     branch_3804db4
	mov     r0, r0, lsl #26
	movs    r0, r0, lsr #31
	beq     branch_3804e0c
.arm
branch_3804db4: @ 3804db4 :arm
	add     r0, sp, #0x0
	bl      Function_38053c4
	ldrh    r0, [sp, #0x2]
	mov     r4, #0x0
	mov     r0, r0, lsl #27
	movs    r0, r0, lsr #31
	ldrneh  r0, [sp]
	orrne   r4, r4, #0x1
	bicne   r0, r0, #0xf
	strneh  r0, [sp]
	ldrh    r0, [sp, #0x2]
	mov     r0, r0, lsl #26
	movs    r0, r0, lsr #31
	ldrneh  r0, [sp]
	orrne   r4, r4, #0x2
	bicne   r0, r0, #0x40
	strneh  r0, [sp]
	add     r0, sp, #0x0
	bl      Function_38053f0
	mov     r1, r4
	mov     r0, #0x30
	bl      Function_38048c4
.arm
branch_3804e0c: @ 3804e0c :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x3804e18

.arm
Function_3804e18: @ 3804e18 :arm
	stmfd   sp!, {r4,lr}
	mov     r12, #0x0
	mov     r2, r12
	b       branch_3804e44
@ 0x3804e28

.arm
branch_3804e28: @ 3804e28 :arm
	mov     r1, r2, lsl #2
	mov     r1, r0, lsr r1
	and     r1, r1, #0xf
	cmp     r1, #0xa
	movcs   r0, #0x0
	bcs     branch_3804e80
	add     r2, r2, #0x1
.arm
branch_3804e44: @ 3804e44 :arm
	cmp     r2, #0x8
	blt     branch_3804e28
	mov     r4, #0x0
	mov     lr, #0x1
	mov     r2, #0xa
.arm
branch_3804e58: @ 3804e58 :arm
	mov     r1, r4, lsl #2
	mov     r1, r0, lsr r1
	and     r3, r1, #0xf
	mul     r1, lr, r2
	mla     r12, lr, r3, r12
	add     r4, r4, #0x1
	mov     lr, r1
	cmp     r4, #0x8
	blt     branch_3804e58
	mov     r0, r12
.arm
branch_3804e80: @ 3804e80 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3804e88

.arm
Function_3804e88: @ 3804e88 :arm
	stmfd   sp!, {r3,lr}
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	ldrh    r0, [sp]
	bic     r0, r0, #0x1
	orr     r0, r0, #0x1
	strh    r0, [sp]
	bl      Function_380576c
	mov     r0, #0x6
	mov     r1, #0x0
	bl      Function_38057e0
	add     r0, sp, #0x0
	mov     r1, #0x1
	bl      Function_3805860
	bl      Function_38057ac
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3804ecc

.arm
Function_3804ecc: @ 3804ecc :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #0x8
	mov     r4, r0
	and     r4, r4, #0x1
	cmp     r4, #0x1
	bne     branch_3804fe4
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	add     r2, sp, #0x0
	mov     r0, #0x86
	mov     r1, #0x0
	mov     r3, #0x1
	bl      Function_3805710
	ldrh    r0, [sp]
	mov     r1, r0, lsl #30
	mov     r1, r1, lsr #31
	cmp     r1, r4
	beq     branch_3804fe4
	bic     r1, r0, #0x2
	mov     r0, r4, lsl #31
	orr     r1, r1, r0, lsr #30
	mov     r0, #2, 18 @ #0x8000
	strh    r1, [sp]
	bl      Function_37fb6a4
	bl      Function_380576c
	mov     r0, #0x6
	mov     r1, #0x0
	bl      Function_38057e0
	add     r0, sp, #0x0
	mov     r1, #0x1
	bl      Function_3805860
	bl      Function_38057ac
	mov     r0, #0x86
	mov     r1, #0x10
	add     r2, sp, #0x4
	mov     r3, #0x3
	bl      Function_3805710
	cmp     r4, #0x0
	add     r0, sp, #0x4
	bne     branch_3804f74
	bl      Function_38054f0
	b       branch_3804f78
@ 0x3804f74

.arm
branch_3804f74: @ 3804f74 :arm
	bl      Function_3805600
.arm
branch_3804f78: @ 3804f78 :arm
	bl      Function_380576c
	mov     r0, #0x6
	mov     r1, #0x10
	bl      Function_38057e0
	add     r0, sp, #0x4
	mov     r1, #0x3
	bl      Function_3805860
	bl      Function_38057ac
	mov     r0, #0x86
	mov     r1, #0x50
	add     r2, sp, #0x4
	mov     r3, #0x3
	bl      Function_3805710
	cmp     r4, #0x0
	add     r0, sp, #0x4
	bne     branch_3804fc0
	bl      Function_38054f0
	b       branch_3804fc4
@ 0x3804fc0

.arm
branch_3804fc0: @ 3804fc0 :arm
	bl      Function_3805600
.arm
branch_3804fc4: @ 3804fc4 :arm
	bl      Function_380576c
	mov     r0, #0x6
	mov     r1, #0x50
	bl      Function_38057e0
	add     r0, sp, #0x4
	mov     r1, #0x3
	bl      Function_3805860
	bl      Function_38057ac
.arm
branch_3804fe4: @ 3804fe4 :arm
	add     sp, sp, #0x8
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3804ff0

.arm
Function_3804ff0: @ 3804ff0 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	mov     r2, r4
	mov     r0, #0x86
	mov     r1, #0x20
	mov     r3, #0x7
	bl      Function_3805710
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x380501c

.arm
Function_380501c: @ 380501c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	bl      Function_380576c
	mov     r0, #0x6
	mov     r1, #0x20
	bl      Function_38057e0
	mov     r0, r4
	mov     r1, #0x7
	bl      Function_3805860
	bl      Function_38057ac
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3805054

.arm
Function_3805054: @ 3805054 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	mov     r2, r4
	mov     r0, #0x86
	mov     r1, #0x20
	mov     r3, #0x4
	bl      Function_3805710
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3805080

.arm
Function_3805080: @ 3805080 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	mov     r2, r4
	mov     r0, #0x86
	mov     r1, #0x60
	mov     r3, #0x3
	bl      Function_3805710
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x38050ac

.arm
Function_38050ac: @ 38050ac :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	bl      Function_380576c
	mov     r0, #0x6
	mov     r1, #0x60
	bl      Function_38057e0
	mov     r0, r4
	mov     r1, #0x3
	bl      Function_3805860
	bl      Function_38057ac
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x38050e4

.arm
Function_38050e4: @ 38050e4 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	add     r2, sp, #0x0
	mov     r0, #0x86
	mov     r1, #0x40
	mov     r3, #0x1
	bl      Function_3805710
	ldrh    r0, [sp]
	mov     r0, r0, lsl #28
	mov     r0, r0, lsr #28
	and     r0, r0, #0xb
	cmp     r0, #0x1
	movne   r0, #0x0
	bne     branch_3805140
	mov     r2, r4
	mov     r0, #0x86
	mov     r1, #0x10
	mov     r3, #0x1
	bl      Function_3805710
	mov     r0, #0x1
.arm
branch_3805140: @ 3805140 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x380514c

.arm
Function_380514c: @ 380514c :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	add     r2, sp, #0x0
	mov     r0, #0x86
	mov     r1, #0x40
	mov     r3, #0x1
	bl      Function_3805710
	ldrh    r0, [sp]
	mov     r0, r0, lsl #28
	mov     r0, r0, lsr #28
	and     r0, r0, #0xb
	cmp     r0, #0x1
	movne   r0, #0x0
	bne     branch_38051b4
	bl      Function_380576c
	mov     r0, #0x6
	mov     r1, #0x10
	bl      Function_38057e0
	mov     r0, r4
	mov     r1, #0x1
	bl      Function_3805860
	bl      Function_38057ac
	mov     r0, #0x1
.arm
branch_38051b4: @ 38051b4 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x38051c0

.arm
Function_38051c0: @ 38051c0 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	add     r2, sp, #0x0
	mov     r0, #0x86
	mov     r1, #0x40
	mov     r3, #0x1
	bl      Function_3805710
	ldrh    r0, [sp]
	mov     r0, r0, lsl #28
	mov     r0, r0, lsr #28
	cmp     r0, #0x4
	movne   r0, #0x0
	bne     branch_3805218
	mov     r2, r4
	mov     r0, #0x86
	mov     r1, #0x10
	mov     r3, #0x3
	bl      Function_3805710
	mov     r0, #0x1
.arm
branch_3805218: @ 3805218 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x3805224

.arm
Function_3805224: @ 3805224 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	add     r2, sp, #0x0
	mov     r0, #0x86
	mov     r1, #0x40
	mov     r3, #0x1
	bl      Function_3805710
	ldrh    r0, [sp]
	mov     r0, r0, lsl #28
	mov     r0, r0, lsr #28
	cmp     r0, #0x4
	movne   r0, #0x0
	bne     branch_3805288
	bl      Function_380576c
	mov     r0, #0x6
	mov     r1, #0x10
	bl      Function_38057e0
	mov     r0, r4
	mov     r1, #0x3
	bl      Function_3805860
	bl      Function_38057ac
	mov     r0, #0x1
.arm
branch_3805288: @ 3805288 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x3805294

.arm
Function_3805294: @ 3805294 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	add     r2, sp, #0x0
	mov     r0, #0x86
	mov     r1, #0x40
	mov     r3, #0x1
	bl      Function_3805710
	ldrh    r0, [sp]
	mov     r0, r0, lsl #25
	movs    r0, r0, lsr #31
	moveq   r0, #0x0
	beq     branch_38052e8
	mov     r2, r4
	mov     r0, #0x86
	mov     r1, #0x50
	mov     r3, #0x3
	bl      Function_3805710
	mov     r0, #0x1
.arm
branch_38052e8: @ 38052e8 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x38052f4

.arm
Function_38052f4: @ 38052f4 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	add     r2, sp, #0x0
	mov     r0, #0x86
	mov     r1, #0x40
	mov     r3, #0x1
	bl      Function_3805710
	ldrh    r0, [sp]
	mov     r0, r0, lsl #25
	movs    r0, r0, lsr #31
	moveq   r0, #0x0
	beq     branch_3805354
	bl      Function_380576c
	mov     r0, #0x6
	mov     r1, #0x50
	bl      Function_38057e0
	mov     r0, r4
	mov     r1, #0x3
	bl      Function_3805860
	bl      Function_38057ac
	mov     r0, #0x1
.arm
branch_3805354: @ 3805354 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x3805360

.arm
Function_3805360: @ 3805360 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	mov     r2, r4
	mov     r0, #0x86
	mov     r1, #0x0
	mov     r3, #0x1
	bl      Function_3805710
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x380538c

.arm
Function_380538c: @ 380538c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	bl      Function_380576c
	mov     r0, #0x6
	mov     r1, #0x0
	bl      Function_38057e0
	mov     r0, r4
	mov     r1, #0x1
	bl      Function_3805860
	bl      Function_38057ac
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x38053c4

.arm
Function_38053c4: @ 38053c4 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	mov     r2, r4
	mov     r0, #0x86
	mov     r1, #0x40
	mov     r3, #0x1
	bl      Function_3805710
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x38053f0

.arm
Function_38053f0: @ 38053f0 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	bl      Function_380576c
	mov     r0, #0x6
	mov     r1, #0x40
	bl      Function_38057e0
	mov     r0, r4
	mov     r1, #0x1
	bl      Function_3805860
	bl      Function_38057ac
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3805428

.arm
Function_3805428: @ 3805428 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	mov     r2, r4
	mov     r0, #0x86
	mov     r1, #0x30
	mov     r3, #0x1
	bl      Function_3805710
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x3805454

.arm
Function_3805454: @ 3805454 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	bl      Function_380576c
	mov     r0, #0x6
	mov     r1, #0x30
	bl      Function_38057e0
	mov     r0, r4
	mov     r1, #0x1
	bl      Function_3805860
	bl      Function_38057ac
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x380548c

.arm
Function_380548c: @ 380548c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	mov     r2, r4
	mov     r0, #0x86
	mov     r1, #0x70
	mov     r3, #0x1
	bl      Function_3805710
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x38054b8

.arm
Function_38054b8: @ 38054b8 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #2, 18 @ #0x8000
	bl      Function_37fb6a4
	bl      Function_380576c
	mov     r0, #0x6
	mov     r1, #0x70
	bl      Function_38057e0
	mov     r0, r4
	mov     r1, #0x1
	bl      Function_3805860
	bl      Function_38057ac
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x38054f0

.arm
Function_38054f0: @ 38054f0 :arm
	ldr     r1, [r0]
	mov     r2, r1, lsl #18
	mov     r2, r2, lsr #26
	cmp     r2, #0x23
	addls   pc, pc, r2, lsl #2
	b       branch_38055ec
@ 0x3805508

.arm
Function_3805508: @ 3805508 :arm
	b       branch_3805598
@ 0x380550c

.arm
Function_380550c: @ 380550c :arm
	b       branch_3805598
@ 0x3805510

.arm
Function_3805510: @ 3805510 :arm
	b       branch_3805598
@ 0x3805514

.arm
Function_3805514: @ 3805514 :arm
	b       branch_3805598
@ 0x3805518

.arm
Function_3805518: @ 3805518 :arm
	b       branch_3805598
@ 0x380551c

.arm
Function_380551c: @ 380551c :arm
	b       branch_3805598
@ 0x3805520

.arm
Function_3805520: @ 3805520 :arm
	b       branch_3805598
@ 0x3805524

.arm
Function_3805524: @ 3805524 :arm
	b       branch_3805598
@ 0x3805528

.arm
Function_3805528: @ 3805528 :arm
	b       branch_3805598
@ 0x380552c

.arm
Function_380552c: @ 380552c :arm
	b       branch_3805598
@ 0x3805530

.arm
Function_3805530: @ 3805530 :arm
	b       branch_38055ec
@ 0x3805534

.arm
Function_3805534: @ 3805534 :arm
	b       branch_38055ec
@ 0x3805538

.arm
Function_3805538: @ 3805538 :arm
	b       branch_38055ec
@ 0x380553c

.arm
Function_380553c: @ 380553c :arm
	b       branch_38055ec
@ 0x3805540

.arm
Function_3805540: @ 3805540 :arm
	b       branch_38055ec
@ 0x3805544

.arm
Function_3805544: @ 3805544 :arm
	b       branch_38055ec
@ 0x3805548

.arm
Function_3805548: @ 3805548 :arm
	b       branch_3805598
@ 0x380554c

.arm
Function_380554c: @ 380554c :arm
	b       branch_3805598
@ 0x3805550

.arm
Function_3805550: @ 3805550 :arm
	b       branch_38055a4
@ 0x3805554

.arm
Function_3805554: @ 3805554 :arm
	b       branch_38055a4
@ 0x3805558

.arm
Function_3805558: @ 3805558 :arm
	b       branch_38055a4
@ 0x380555c

.arm
Function_380555c: @ 380555c :arm
	b       branch_38055a4
@ 0x3805560

.arm
Function_3805560: @ 3805560 :arm
	b       branch_38055a4
@ 0x3805564

.arm
Function_3805564: @ 3805564 :arm
	b       branch_38055a4
@ 0x3805568

.arm
Function_3805568: @ 3805568 :arm
	b       branch_38055a4
@ 0x380556c

.arm
Function_380556c: @ 380556c :arm
	b       branch_38055a4
@ 0x3805570

.arm
Function_3805570: @ 3805570 :arm
	b       branch_38055ec
@ 0x3805574

.arm
Function_3805574: @ 3805574 :arm
	b       branch_38055ec
@ 0x3805578

.arm
Function_3805578: @ 3805578 :arm
	b       branch_38055ec
@ 0x380557c

.arm
Function_380557c: @ 380557c :arm
	b       branch_38055ec
@ 0x3805580

.arm
Function_3805580: @ 3805580 :arm
	b       branch_38055ec
@ 0x3805584

.arm
Function_3805584: @ 3805584 :arm
	b       branch_38055ec
@ 0x3805588

.arm
Function_3805588: @ 3805588 :arm
	b       branch_38055c8
@ 0x380558c

.arm
Function_380558c: @ 380558c :arm
	b       branch_38055c8
@ 0x3805590

.arm
Function_3805590: @ 3805590 :arm
	b       branch_38055a4
@ 0x3805594

.arm
Function_3805594: @ 3805594 :arm
	b       branch_38055a4
@ 0x3805598

.arm
branch_3805598: @ 3805598 :arm
	bic     r1, r1, #1, 18 @ #0x4000
	str     r1, [r0]
	bx      lr
@ 0x38055a4

.arm
branch_38055a4: @ 38055a4 :arm
	orr     r2, r1, #1, 18 @ #0x4000
	mov     r1, r2, lsl #18
	mov     r1, r1, lsr #26
	sub     r1, r1, #0x12
	bic     r2, r2, #63, 24 @ #0x3f00
	mov     r1, r1, lsl #26
	orr     r1, r2, r1, lsr #18
	str     r1, [r0]
	bx      lr
@ 0x38055c8

.arm
branch_38055c8: @ 38055c8 :arm
	orr     r2, r1, #1, 18 @ #0x4000
	mov     r1, r2, lsl #18
	mov     r1, r1, lsr #26
	sub     r1, r1, #0x18
	bic     r2, r2, #63, 24 @ #0x3f00
	mov     r1, r1, lsl #26
	orr     r1, r2, r1, lsr #18
	str     r1, [r0]
	bx      lr
@ 0x38055ec

.arm
branch_38055ec: @ 38055ec :arm
	ldr     r1, [r0]
	bic     r1, r1, #1, 18 @ #0x4000
	bic     r1, r1, #63, 24 @ #0x3f00
	str     r1, [r0]
	bx      lr
@ 0x3805600

.arm
Function_3805600: @ 3805600 :arm
	ldr     r2, [r0]
	mov     r1, r2, lsl #18
	mov     r3, r1, lsr #26
	cmp     r3, #0x23
	addls   pc, pc, r3, lsl #2
	b       branch_38056fc
@ 0x3805618

.arm
Function_3805618: @ 3805618 :arm
	b       branch_38056a8
@ 0x380561c

.arm
Function_380561c: @ 380561c :arm
	b       branch_38056a8
@ 0x3805620

.arm
Function_3805620: @ 3805620 :arm
	b       branch_38056a8
@ 0x3805624

.arm
Function_3805624: @ 3805624 :arm
	b       branch_38056a8
@ 0x3805628

.arm
Function_3805628: @ 3805628 :arm
	b       branch_38056a8
@ 0x380562c

.arm
Function_380562c: @ 380562c :arm
	b       branch_38056a8
@ 0x3805630

.arm
Function_3805630: @ 3805630 :arm
	b       branch_38056a8
@ 0x3805634

.arm
Function_3805634: @ 3805634 :arm
	b       branch_38056a8
@ 0x3805638

.arm
Function_3805638: @ 3805638 :arm
	b       branch_38056cc
@ 0x380563c

.arm
Function_380563c: @ 380563c :arm
	b       branch_38056cc
@ 0x3805640

.arm
Function_3805640: @ 3805640 :arm
	b       branch_38056fc
@ 0x3805644

.arm
Function_3805644: @ 3805644 :arm
	b       branch_38056fc
@ 0x3805648

.arm
Function_3805648: @ 3805648 :arm
	b       branch_38056fc
@ 0x380564c

.arm
Function_380564c: @ 380564c :arm
	b       branch_38056fc
@ 0x3805650

.arm
Function_3805650: @ 3805650 :arm
	b       branch_38056fc
@ 0x3805654

.arm
Function_3805654: @ 3805654 :arm
	b       branch_38056fc
@ 0x3805658

.arm
Function_3805658: @ 3805658 :arm
	b       branch_38056a8
@ 0x380565c

.arm
Function_380565c: @ 380565c :arm
	b       branch_38056a8
@ 0x3805660

.arm
Function_3805660: @ 3805660 :arm
	b       branch_38056f0
@ 0x3805664

.arm
Function_3805664: @ 3805664 :arm
	b       branch_38056f0
@ 0x3805668

.arm
Function_3805668: @ 3805668 :arm
	b       branch_38056f0
@ 0x380566c

.arm
Function_380566c: @ 380566c :arm
	b       branch_38056f0
@ 0x3805670

.arm
Function_3805670: @ 3805670 :arm
	b       branch_38056f0
@ 0x3805674

.arm
Function_3805674: @ 3805674 :arm
	b       branch_38056f0
@ 0x3805678

.arm
Function_3805678: @ 3805678 :arm
	b       branch_38056f0
@ 0x380567c

.arm
Function_380567c: @ 380567c :arm
	b       branch_38056f0
@ 0x3805680

.arm
Function_3805680: @ 3805680 :arm
	b       branch_38056fc
@ 0x3805684

.arm
Function_3805684: @ 3805684 :arm
	b       branch_38056fc
@ 0x3805688

.arm
Function_3805688: @ 3805688 :arm
	b       branch_38056fc
@ 0x380568c

.arm
Function_380568c: @ 380568c :arm
	b       branch_38056fc
@ 0x3805690

.arm
Function_3805690: @ 3805690 :arm
	b       branch_38056fc
@ 0x3805694

.arm
Function_3805694: @ 3805694 :arm
	b       branch_38056fc
@ 0x3805698

.arm
Function_3805698: @ 3805698 :arm
	b       branch_38056f0
@ 0x380569c

.arm
Function_380569c: @ 380569c :arm
	b       branch_38056f0
@ 0x38056a0

.arm
Function_38056a0: @ 38056a0 :arm
	b       branch_38056f0
@ 0x38056a4

.arm
Function_38056a4: @ 38056a4 :arm
	b       branch_38056f0
@ 0x38056a8

.arm
branch_38056a8: @ 38056a8 :arm
	mov     r1, r2, lsl #17
	movs    r1, r1, lsr #31
	bxeq    lr
	add     r1, r3, #0x12
	bic     r2, r2, #63, 24 @ #0x3f00
	mov     r1, r1, lsl #26
	orr     r1, r2, r1, lsr #18
	str     r1, [r0]
	bx      lr
@ 0x38056cc

.arm
branch_38056cc: @ 38056cc :arm
	mov     r1, r2, lsl #17
	movs    r1, r1, lsr #31
	bxeq    lr
	add     r1, r3, #0x18
	bic     r2, r2, #63, 24 @ #0x3f00
	mov     r1, r1, lsl #26
	orr     r1, r2, r1, lsr #18
	str     r1, [r0]
	bx      lr
@ 0x38056f0

.arm
branch_38056f0: @ 38056f0 :arm
	orr     r1, r2, #1, 18 @ #0x4000
	str     r1, [r0]
	bx      lr
@ 0x38056fc

.arm
branch_38056fc: @ 38056fc :arm
	ldr     r1, [r0]
	bic     r1, r1, #1, 18 @ #0x4000
	bic     r1, r1, #63, 24 @ #0x3f00
	str     r1, [r0]
	bx      lr
@ 0x3805710

.arm
Function_3805710: @ 3805710 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r6, r1
	mov     r5, r2
	mov     r4, r3
	bl      Function_380576c
	mov     r0, r7
	mov     r1, r6
	bl      Function_38057e0
	cmp     r7, #0x6
	beq     branch_3805754
	cmp     r7, #0x86
	bne     branch_3805760
	mov     r0, r5
	mov     r1, r4
	bl      Function_3805918
	b       branch_3805760
@ 0x3805754

.arm
branch_3805754: @ 3805754 :arm
	mov     r0, r5
	mov     r1, r4
	bl      Function_3805860
.arm
branch_3805760: @ 3805760 :arm
	bl      Function_38057ac
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x380576c

.arm
Function_380576c: @ 380576c :arm
	mov     r12, #1, 6 @ #0x4000000
	add     r12, r12, #78, 30 @ #0x138
	ldrh    r0, [r12]
	bic     r0, r0, #0x77
	orr     r0, r0, #0x72
	strh    r0, [r12]
	mov     r3, #0x2
.arm
branch_3805788: @ 3805788 :arm
	subs    r3, r3, #0x1
	bne     branch_3805788
	bic     r0, r0, #0x4
	orr     r0, r0, #0x4
	strh    r0, [r12]
	mov     r3, #0x2
.arm
branch_38057a0: @ 38057a0 :arm
	subs    r3, r3, #0x1
	bne     branch_38057a0
	bx      lr
@ 0x38057ac

.arm
Function_38057ac: @ 38057ac :arm
	mov     r12, #1, 6 @ #0x4000000
	add     r12, r12, #78, 30 @ #0x138
	mov     r3, #0x2
.arm
branch_38057b8: @ 38057b8 :arm
	subs    r3, r3, #0x1
	bne     branch_38057b8
	ldrh    r0, [r12]
	bic     r0, r0, #0x4
	orr     r0, r0, #0x0
	strh    r0, [r12]
	mov     r3, #0x2
.arm
branch_38057d4: @ 38057d4 :arm
	subs    r3, r3, #0x1
	bne     branch_38057d4
	bx      lr
@ 0x38057e0

.arm
Function_38057e0: @ 38057e0 :arm
	mov     r12, #1, 6 @ #0x4000000
	add     r12, r12, #78, 30 @ #0x138
	orr     r1, r0, r1
	ldrh    r0, [r12]
	bic     r0, r0, #0x77
	orr     r0, r0, #0x74
	mov     r2, #0x0
.arm
branch_38057fc: @ 38057fc :arm
	bic     r0, r0, #0x3
	orr     r0, r0, #0x0
	mov     r3, #0x1
	tst     r3, r1, lsr r2
	bne     branch_3805814
	b       branch_3805818
@ 0x3805814

.arm
branch_3805814: @ 3805814 :arm
	mov     r3, #0x1
.arm
branch_3805818: @ 3805818 :arm
	beq     branch_3805820
	b       branch_3805824
@ 0x3805820

.arm
branch_3805820: @ 3805820 :arm
	mov     r3, #0x0
.arm
branch_3805824: @ 3805824 :arm
	orr     r0, r0, r3
	strh    r0, [r12]
	mov     r3, #0x9
.arm
branch_3805830: @ 3805830 :arm
	subs    r3, r3, #0x1
	bne     branch_3805830
	bic     r0, r0, #0x2
	orr     r0, r0, #0x2
	strh    r0, [r12]
	mov     r3, #0x9
.arm
branch_3805848: @ 3805848 :arm
	subs    r3, r3, #0x1
	bne     branch_3805848
	add     r2, r2, #0x1
	cmp     r2, #0x8
	bne     branch_38057fc
	bx      lr
@ 0x3805860

.arm
Function_3805860: @ 3805860 :arm
	mov     r12, #1, 6 @ #0x4000000
	add     r12, r12, #78, 30 @ #0x138
.arm
branch_3805868: @ 3805868 :arm
	stmfd   sp!, {r0,r1}
	tst     r0, #0x1
	beq     branch_3805878
	b       branch_380587c
@ 0x3805878

.arm
branch_3805878: @ 3805878 :arm
	ldrh    r1, [r0]
.arm
branch_380587c: @ 380587c :arm
	bne     branch_3805884
	b       branch_3805888
@ 0x3805884

.arm
branch_3805884: @ 3805884 :arm
	ldrh    r1, [r0, #-0x1]
.arm
branch_3805888: @ 3805888 :arm
	bne     branch_3805890
	b       branch_3805894
@ 0x3805890

.arm
branch_3805890: @ 3805890 :arm
	mov     r1, r1, lsr #8
.arm
branch_3805894: @ 3805894 :arm
	ldrh    r0, [r12]
	bic     r0, r0, #0x77
	orr     r0, r0, #0x74
	mov     r2, #0x0
.arm
branch_38058a4: @ 38058a4 :arm
	bic     r0, r0, #0x3
	orr     r0, r0, #0x0
	mov     r3, #0x1
	tst     r3, r1, lsr r2
	bne     branch_38058bc
	b       branch_38058c0
@ 0x38058bc

.arm
branch_38058bc: @ 38058bc :arm
	mov     r3, #0x1
.arm
branch_38058c0: @ 38058c0 :arm
	beq     branch_38058c8
	b       branch_38058cc
@ 0x38058c8

.arm
branch_38058c8: @ 38058c8 :arm
	mov     r3, #0x0
.arm
branch_38058cc: @ 38058cc :arm
	orr     r0, r0, r3
	strh    r0, [r12]
	mov     r3, #0x9
.arm
branch_38058d8: @ 38058d8 :arm
	subs    r3, r3, #0x1
	bne     branch_38058d8
	bic     r0, r0, #0x2
	orr     r0, r0, #0x2
	strh    r0, [r12]
	mov     r3, #0x9
.arm
branch_38058f0: @ 38058f0 :arm
	subs    r3, r3, #0x1
	bne     branch_38058f0
	add     r2, r2, #0x1
	cmp     r2, #0x8
	bne     branch_38058a4
	ldmfd   sp!, {r0,r1}
	add     r0, r0, #0x1
	subs    r1, r1, #0x1
	bne     branch_3805868
	bx      lr
@ 0x3805918

.arm
Function_3805918: @ 3805918 :arm
	mov     r12, #1, 6 @ #0x4000000
	add     r12, r12, #78, 30 @ #0x138
.arm
branch_3805920: @ 3805920 :arm
	stmfd   sp!, {r0,r1}
	ldrh    r0, [r12]
	bic     r0, r0, #0x77
	orr     r0, r0, #0x64
	mov     r2, #0x0
	mov     r1, #0x0
.arm
branch_3805938: @ 3805938 :arm
	bic     r0, r0, #0x3
	orr     r0, r0, #0x0
	strh    r0, [r12]
	mov     r3, #0x9
.arm
branch_3805948: @ 3805948 :arm
	subs    r3, r3, #0x1
	bne     branch_3805948
	ldrh    r0, [r12]
	and     r3, r0, #0x1
	cmp     r3, #0x1
	beq     branch_3805964
	b       branch_3805968
@ 0x3805964

.arm
branch_3805964: @ 3805964 :arm
	mov     r3, #0x80
.arm
branch_3805968: @ 3805968 :arm
	bne     branch_3805970
	b       branch_3805974
@ 0x3805970

.arm
branch_3805970: @ 3805970 :arm
	mov     r3, #0x0
.arm
branch_3805974: @ 3805974 :arm
	orr     r2, r3, r2, lsr #1
	bic     r0, r0, #0x2
	orr     r0, r0, #0x2
	strh    r0, [r12]
	mov     r3, #0x9
.arm
branch_3805988: @ 3805988 :arm
	subs    r3, r3, #0x1
	bne     branch_3805988
	add     r1, r1, #0x1
	cmp     r1, #0x8
	bne     branch_3805938
	ldmfd   sp!, {r0,r1}
	tst     r0, #0x1
	beq     branch_38059c0
	ldrh    r3, [r0, #-0x1]
	bic     r3, r3, #255, 24 @ #0xff00
	mov     r2, r2, lsl #8
	orr     r3, r2, r3
	strh    r3, [r0, #-0x1]
	b       branch_38059d0
@ 0x38059c0

.arm
branch_38059c0: @ 38059c0 :arm
	ldrh    r3, [r0]
	bic     r3, r3, #0xff
	orr     r3, r3, r2
	strh    r3, [r0]
.arm
branch_38059d0: @ 38059d0 :arm
	add     r0, r0, #0x1
	subs    r1, r1, #0x1
	bne     branch_3805920
	bx      lr
@ 0x38059e0

.arm
Function_38059e0: @ 38059e0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [pc, #0x38] @ [0x3805a24] (=0x3809990)
	mov     r12, #0x1
	str     r0, [r3, #0x8]
	ldr     r0, [pc, #0x30] @ [0x3805a28] (=0x38099a0)
	mov     r1, #0x0
	mov     r2, #0xa4
	strb    r12, [r3]
	bl      Function_37fb16c
	ldr     r1, [pc, #0x20] @ [0x3805a2c] (=0x3805bc0)
	mov     r0, #0xf
	bl      Function_37fb498
	ldr     r1, [pc, #0x18] @ [0x3805a30] (=0x3805b10)
	mov     r0, #0xa
	bl      Function_37fb498
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3805a24

.word 0x3809990 @ 0x3805a24
.word 0x38099a0 @ 0x3805a28
.word 0x3805bc0 @ 0x3805a2c
.word 0x3805b10 @ 0x3805a30
.arm
Function_3805a34: @ 3805a34 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x20] @ [0x3805a60] (=0x4000304)
	mov     r0, #0x1
	ldrh    r1, [r2]
	bic     r1, r1, #0x2
	strh    r1, [r2]
	bl      Function_38022d4
	mov     r0, #0x1
	bl      Function_3801f6c
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x3805a60

.word 0x4000304 @ 0x3805a60
.arm
Function_3805a64: @ 3805a64 :arm
	stmfd   sp!, {r4-r10,lr}
	sub     sp, sp, #0x50
	str     r0, [sp, #0x44]
	ldr     r0, [pc, #0x84] @ [0x3805afc] (=0x380a604)
	mov     r9, #0x4
	mov     r7, #0x8
	mov     r4, #0x3
	ldr     r1, [pc, #0x78] @ [0x3805b00] (=0x380a604)
	ldr     r6, [pc, #0x78] @ [0x3805b04] (=0x3809a44)
	mov     r10, #6, 24 @ #0x600
	mov     r8, #0x0
	mov     r5, #7, 26 @ #0x1c0
	mov     lr, #0x40
	mov     r12, #0x5
	mov     r3, #0x7
	mov     r2, #0x9
	str     r0, [sp, #0x1c]
	str     r1, [sp, #0x20]
	add     r0, sp, #0x1c
	add     r1, sp, #0x0
	str     r10, [sp, #0x24]
	str     r9, [sp, #0x28]
	str     r8, [sp, #0x3c]
	str     r7, [sp, #0x40]
	str     r6, [sp, #0x48]
	str     r5, [sp, #0x4c]
	str     r4, [sp]
	str     lr, [sp, #0x38]
	str     r4, [sp, #0x8]
	str     r9, [sp, #0x18]
	str     r12, [sp, #0x10]
	str     r3, [sp, #0x4]
	str     r7, [sp, #0x14]
	str     r2, [sp, #0xc]
	bl      Function_3805b08
	add     sp, sp, #0x50
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x3805afc

.word 0x380a604 @ 0x3805afc
.word 0x380a604 @ 0x3805b00
.word 0x3809a44 @ 0x3805b04



.arm
Function_3805b08: @ 3805b08 :arm
	ldr     pc, [pc, #-0x4] @ [0x3805b0c] (=Function_6000000)
@ 0x3805b0c

.word Function_6000000 @ 0x3805b0c



.arm
Function_3805b10: @ 3805b10 :arm
	stmfd   sp!, {r4-r6,lr}
	movs    r6, r1
	ldrh    r4, [r6]
	beq     branch_3805b58
	mov     r0, #0x0
	mov     r2, #1, 24 @ #0x100
	bl      Function_37fb074
	strh    r4, [r6]
	mov     r0, #0x4
	strh    r0, [r6, #0x2]
	mov     r5, #0xa
	mov     r4, #0x0
.arm
branch_3805b40: @ 3805b40 :arm
	mov     r0, r5
	mov     r1, r6
	mov     r2, r4
	bl      Function_37fb50c
	cmp     r0, #0x0
	blt     branch_3805b40
.arm
branch_3805b58: @ 3805b58 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x3805b60

.arm
Function_3805b60: @ 3805b60 :arm
	cmp     r0, #0x0
	moveq   r0, #0x0
	bxeq    lr
	ldr     r1, [pc, #0x48] @ [0x3805bbc] (=0x3806d30)
	ldr     r1, [r1, #0x8]
	b       branch_3805bac
@ 0x3805b78

.arm
branch_3805b78: @ 3805b78 :arm
	cmp     r1, r0
	bne     branch_3805ba8
	ldr     r0, [r0, #0x48]
	cmp     r0, #0x0
	cmpne   r0, #0x1
	beq     branch_3805b98
	cmp     r0, #0x2
	b       branch_3805ba0
@ 0x3805b98

.arm
branch_3805b98: @ 3805b98 :arm
	mov     r0, #0x1
	bx      lr
@ 0x3805ba0

.arm
branch_3805ba0: @ 3805ba0 :arm
	mov     r0, #0x0
	bx      lr
@ 0x3805ba8

.arm
branch_3805ba8: @ 3805ba8 :arm
	ldr     r1, [r1, #0x4c]
.arm
branch_3805bac: @ 3805bac :arm
	cmp     r1, #0x0
	bne     branch_3805b78
	mov     r0, #0x0
	bx      lr
@ 0x3805bbc

.word 0x3806d30 @ 0x3805bbc
.arm
Function_3805bc0: @ 3805bc0 :arm
	stmfd   sp!, {r4-r6,lr}
	sub     sp, sp, #0x8
	mov     r4, r1
	cmp     r4, #1, 16 @ #0x10000
	beq     branch_3805be0
	cmp     r4, #2, 16 @ #0x20000
	beq     branch_3805c78
	b       branch_3805d1c
@ 0x3805be0

.arm
branch_3805be0: @ 3805be0 :arm
	bl      Function_37fada4
	mov     r5, r0
	ldr     r0, [pc, #0x15c] @ [0x3805d4c] (=0x38099a0)
	bl      Function_3805b60
	cmp     r0, #0x0
	beq     branch_3805c08
	mov     r0, r5
	bl      Function_37fadb8
	mov     r0, #0x0
	b       branch_3805c68
@ 0x3805c08

.arm
branch_3805c08: @ 3805c08 :arm
	ldr     r1, [pc, #0x140] @ [0x3805d50] (=0x3809990)
	ldrb    r0, [r1]
	cmp     r0, #0x1
	beq     branch_3805c28
	mov     r0, r5
	bl      Function_37fadb8
	mov     r0, #0x0
	b       branch_3805c68
@ 0x3805c28

.arm
branch_3805c28: @ 3805c28 :arm
	mov     r2, #0x2
	mov     r0, r5
	strb    r2, [r1]
	bl      Function_37fadb8
	mov     r2, #1, 22 @ #0x400
	ldr     r0, [pc, #0x108] @ [0x3805d4c] (=0x38099a0)
	ldr     r1, [pc, #0x10c] @ [0x3805d54] (=0x3805d64)
	ldr     r3, [pc, #0x10c] @ [0x3805d58] (=0x380a004)
	str     r2, [sp]
	mov     r5, #0xa
	mov     r2, #0x0
	str     r5, [sp, #0x4]
	bl      Function_37f90b0
	ldr     r0, [pc, #0xe8] @ [0x3805d4c] (=0x38099a0)
	bl      Function_37f9410
	mov     r0, #0x1
.arm
branch_3805c68: @ 3805c68 :arm
	cmp     r0, #0x0
	bne     branch_3805d40
	orr     r6, r4, #0x5
	b       branch_3805d20
@ 0x3805c78

.arm
branch_3805c78: @ 3805c78 :arm
	bl      Function_37fada4
	mov     r5, r0
	ldr     r0, [pc, #0xc4] @ [0x3805d4c] (=0x38099a0)
	bl      Function_3805b60
	cmp     r0, #0x0
	beq     branch_3805ca0
	mov     r0, r5
	bl      Function_37fadb8
	mov     r0, #0x0
	b       branch_3805d0c
@ 0x3805ca0

.arm
branch_3805ca0: @ 3805ca0 :arm
	ldr     r1, [pc, #0xa8] @ [0x3805d50] (=0x3809990)
	ldrb    r0, [r1]
	cmp     r0, #0x3
	beq     branch_3805cc0
	mov     r0, r5
	bl      Function_37fadb8
	mov     r0, #0x0
	b       branch_3805d0c
@ 0x3805cc0

.arm
branch_3805cc0: @ 3805cc0 :arm
	mov     r2, #0x4
	mov     r0, r5
	strb    r2, [r1]
	bl      Function_37fadb8
	ldr     r1, [pc, #0x84] @ [0x3805d5c] (=0x3805b10)
	mov     r0, #0xa
	bl      Function_37fb498
	mov     r2, #1, 22 @ #0x400
	ldr     r0, [pc, #0x64] @ [0x3805d4c] (=0x38099a0)
	ldr     r1, [pc, #0x74] @ [0x3805d60] (=0x3805dd4)
	ldr     r3, [pc, #0x68] @ [0x3805d58] (=0x380a004)
	str     r2, [sp]
	mov     r5, #0x2
	mov     r2, #0x0
	str     r5, [sp, #0x4]
	bl      Function_37f90b0
	ldr     r0, [pc, #0x44] @ [0x3805d4c] (=0x38099a0)
	bl      Function_37f9410
	mov     r0, #0x1
.arm
branch_3805d0c: @ 3805d0c :arm
	cmp     r0, #0x0
	bne     branch_3805d40
	orr     r6, r4, #0x5
	b       branch_3805d20
@ 0x3805d1c

.arm
branch_3805d1c: @ 3805d1c :arm
	orr     r6, r4, #0x7
.arm
branch_3805d20: @ 3805d20 :arm
	mov     r5, #0xf
	mov     r4, #0x0
.arm
branch_3805d28: @ 3805d28 :arm
	mov     r0, r5
	mov     r1, r6
	mov     r2, r4
	bl      Function_37fb50c
	cmp     r0, #0x0
	blt     branch_3805d28
.arm
branch_3805d40: @ 3805d40 :arm
	add     sp, sp, #0x8
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x3805d4c

.word 0x38099a0 @ 0x3805d4c
.word 0x3809990 @ 0x3805d50
.word 0x3805d64 @ 0x3805d54
.word 0x380a004 @ 0x3805d58
.word Function_3805b10 @ =0x3805b10, 0x3805d5c
.word 0x3805dd4 @ 0x3805d60
.arm
Function_3805d64: @ 3805d64 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r1, [pc, #0x60] @ [0x3805dd0] (=0x3809990)
	ldr     r0, [r1, #0x4]
	cmp     r0, #0x0
	beq     branch_3805d84
	ldr     r2, [r1, #0xc]
	mov     r1, #6, 8 @ #0x6000000
	bl      Function_37fb114
.arm
branch_3805d84: @ 3805d84 :arm
	ldr     r0, [pc, #0x44] @ [0x3805dd0] (=0x3809990)
	ldr     r0, [r0, #0x8]
	bl      Function_3805a64
	mov     r6, #0xf
	mov     r5, #1, 16 @ #0x10000
	mov     r4, #0x0
.arm
branch_3805d9c: @ 3805d9c :arm
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      Function_37fb50c
	cmp     r0, #0x0
	blt     branch_3805d9c
	bl      Function_37fada4
	ldr     r0, [pc, #0x10] @ [0x3805dd0] (=0x3809990)
	mov     r1, #0x3
	strb    r1, [r0]
	bl      Function_37f91b8
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x3805dd0

.word 0x3809990 @ 0x3805dd0
.arm
Function_3805dd4: @ 3805dd4 :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r0, [pc, #0x1f4] @ [0x3805fd4] (=0x60198a0)
	ldr     r10, [pc, #0x1f4] @ [0x3805fd8] (=0x60188a0)
	ldr     r0, [r0, #0x54c]
	cmp     r0, #0x0
	addne   r0, r10, #1, 20 @ #0x1000
	ldrne   r0, [r0, #0x54c]
	ldrne   r0, [r0]
	ldrneh  r0, [r0]
	cmpne   r0, #0x0
	beq     branch_3805e08
	bl      Function_3805fe0
	bl      Function_3805fe8
.arm
branch_3805e08: @ 3805e08 :arm
	mov     r6, #0x0
	add     r9, sp, #0x0
	add     r4, r10, #1, 20 @ #0x1000
	mov     r11, #1, 24 @ #0x100
	mov     r5, #0x4
	mov     r8, r6
.arm
branch_3805e20: @ 3805e20 :arm
	mov     r1, r9
	mov     r2, r8
	add     r0, r10, #0x88
	bl      Function_37f9804
	cmp     r0, #0x0
	beq     branch_3805e88
	ldr     r0, [r4, #0x54c]
	cmp     r0, #0x0
	beq     branch_3805e20
	bl      Function_3806a0c
	mov     r7, r0
	mov     r0, r6
	mov     r1, r7
	mov     r2, r11
	bl      Function_37fb074
	ldr     r1, [sp]
	mov     r0, r7
	ldrh    r1, [r1]
	strh    r1, [r7]
	strh    r5, [r7, #0x2]
	bl      Function_38069c0
	ldr     r1, [sp]
	ldrh    r0, [r1]
	orr     r0, r0, #2, 18 @ #0x8000
	strh    r0, [r1]
	b       branch_3805e20
@ 0x3805e88

.arm
branch_3805e88: @ 3805e88 :arm
	bl      Function_3805ff0
	bl      Function_3805b60
	cmp     r0, #0x0
	beq     branch_3805eb0
	add     r0, r10, #0x88
	mov     r1, #0x0
	mov     r2, #0x1
	bl      Function_37f9778
	bl      Function_3805ff0
	bl      Function_37f92ec
.arm
branch_3805eb0: @ 3805eb0 :arm
	add     r1, sp, #0x0
	add     r0, r10, #0x88
	mov     r2, #0x0
	bl      Function_37f9804
	mov     r5, r0
	add     r1, sp, #0x0
	add     r0, r10, #0x58
	mov     r2, #0x0
	bl      Function_37f9804
	mov     r4, r0
	add     r1, sp, #0x0
	mov     r0, r10
	mov     r2, #0x0
	bl      Function_37f9804
	orr     r1, r5, r4
	orrs    r0, r0, r1
	beq     branch_3805ef8
	bl      Function_37faf14
.arm
branch_3805ef8: @ 3805ef8 :arm
	bl      Function_3805ff8
	add     r5, sp, #0x0
	mov     r4, #0x0
.arm
branch_3805f04: @ 3805f04 :arm
	mov     r1, r5
	mov     r2, r4
	add     r0, r10, #0x28
	bl      Function_37f9804
	cmp     r0, #0x0
	bne     branch_3805f04
	bl      Function_3806000
	bl      Function_3805b60
	cmp     r0, #0x0
	beq     branch_3805f44
	add     r0, r10, #0x28
	mov     r1, #0x0
	mov     r2, #0x1
	bl      Function_37f9778
	bl      Function_3806000
	bl      Function_37f92ec
.arm
branch_3805f44: @ 3805f44 :arm
	mov     r0, #0x1
	bl      Function_38022d4
	mov     r0, #0x1
	bl      Function_3801f6c
	add     r0, r10, #1, 20 @ #0x1000
	ldr     r0, [r0, #0x54c]
	cmp     r0, #0x0
	ldrne   r1, [r0]
	ldrneh  r0, [r1]
	cmpne   r0, #0x0
	movne   r0, #0x0
	strneh  r0, [r1]
	ldr     r0, [pc, #0x60] @ [0x3805fdc] (=0x3809990)
	ldr     r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_3805f94
	ldr     r2, [r0, #0xc]
	mov     r0, #0x0
	mov     r1, #6, 8 @ #0x6000000
	bl      Function_37fb0b8
.arm
branch_3805f94: @ 3805f94 :arm
	mov     r6, #0xf
	mov     r5, #2, 16 @ #0x20000
	mov     r4, #0x0
.arm
branch_3805fa0: @ 3805fa0 :arm
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      Function_37fb50c
	cmp     r0, #0x0
	blt     branch_3805fa0
	bl      Function_37fada4
	ldr     r0, [pc, #0x18] @ [0x3805fdc] (=0x3809990)
	mov     r1, #0x1
	strb    r1, [r0]
	bl      Function_37f91b8
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x3805fd4

.word 0x60198a0 @ 0x3805fd4
.word 0x60188a0 @ 0x3805fd8
.word 0x3809990 @ 0x3805fdc
.arm
Function_3805fe0: @ 3805fe0 :arm
	ldr     pc, [pc, #-0x4] @ [0x3805fe4] (=0x6005cd0)
@ 0x3805fe4

.word 0x6005cd0 @ 0x3805fe4
.arm
Function_3805fe8: @ 3805fe8 :arm
	ldr     pc, [pc, #-0x4] @ [0x3805fec] (=0x6001dc8)
@ 0x3805fec

.word 0x6001dc8 @ 0x3805fec
.arm
Function_3805ff0: @ 3805ff0 :arm
	ldr     pc, [pc, #-0x4] @ [0x3805ff4] (=0x60007a8)
@ 0x3805ff4

.word 0x60007a8 @ 0x3805ff4
.arm
Function_3805ff8: @ 3805ff8 :arm
	ldr     pc, [pc, #-0x4] @ [0x3805ffc] (=0x6008d50)
@ 0x3805ffc

.word 0x6008d50 @ 0x3805ffc
.arm
Function_3806000: @ 3806000 :arm
	ldr     pc, [pc, #-0x4] @ [0x3806004] (=0x60007b4)
@ 0x3806004

.word 0x60007b4 @ 0x3806004
.arm
Function_3806008: @ 3806008 :arm
	ldr     r1, [pc, #0x30] @ [0x3806040] (=0x55555555)
	ldr     r2, [pc, #0x30] @ [0x3806044] (=0x33333333)
	and     r1, r1, r0, lsr #1
	sub     r1, r0, r1
	ldr     r0, [pc, #0x28] @ [0x3806048] (=0xf0f0f0f)
	and     r3, r1, r2
	and     r1, r2, r1, lsr #2
	add     r1, r3, r1
	add     r1, r1, r1, lsr #4
	and     r0, r1, r0
	add     r0, r0, r0, lsr #8
	add     r0, r0, r0, lsr #16
	and     r0, r0, #0xff
	bx      lr
@ 0x3806040

.word 0x55555555 @ 0x3806040
.word 0x33333333 @ 0x3806044
.word 0xf0f0f0f @ 0x3806048
.arm
Function_380604c: @ 380604c :arm
	stmfd   sp!, {r4-r7,r11,r12,lr}
	mov     r4, r1
	orr     r4, r4, #0x1
	b       branch_380606c
@ 0x380605c

.arm
Function_380605c: @ 380605c :arm
	stmfd   sp!, {r4-r7,r11,r12,lr}
	eor     r4, r1, r3
	mov     r4, r4, asr #1
	mov     r4, r4, lsl #1
.arm
branch_380606c: @ 380606c :arm
	orrs    r5, r3, r2
	bne     branch_380607c
	ldmfd   sp!, {r4-r7,r11,r12,lr}
	bx      lr
@ 0x380607c

.arm
branch_380607c: @ 380607c :arm
	mov     r5, r0, lsr #31
	add     r5, r5, r1
	mov     r6, r2, lsr #31
	add     r6, r6, r3
	orrs    r6, r5, r6
	bne     branch_38060b0
	mov     r1, r2
	bl      Function_3806254
	ands    r4, r4, #0x1
	movne   r0, r1
	mov     r1, r0, asr #31
	ldmfd   sp!, {r4-r7,r11,r12,lr}
	bx      lr
@ 0x38060b0

.arm
branch_38060b0: @ 38060b0 :arm
	cmp     r1, #0x0
	bge     branch_38060c0
	rsbs    r0, r0, #0x0
	rsc     r1, r1, #0x0
.arm
branch_38060c0: @ 38060c0 :arm
	cmp     r3, #0x0
	bge     branch_38060d0
	rsbs    r2, r2, #0x0
	rsc     r3, r3, #0x0
.arm
branch_38060d0: @ 38060d0 :arm
	orrs    r5, r1, r0
	beq     branch_38061f4
	mov     r5, #0x0
	mov     r6, #0x1
	cmp     r3, #0x0
	bmi     branch_38060fc
.arm
branch_38060e8: @ 38060e8 :arm
	add     r5, r5, #0x1
	adds    r2, r2, r2
	adcs    r3, r3, r3
	bpl     branch_38060e8
	add     r6, r6, r5
.arm
branch_38060fc: @ 38060fc :arm
	cmp     r1, #0x0
	blt     branch_380611c
.arm
branch_3806104: @ 3806104 :arm
	cmp     r6, #0x1
	beq     branch_380611c
	sub     r6, r6, #0x1
	adds    r0, r0, r0
	adcs    r1, r1, r1
	bpl     branch_3806104
.arm
branch_380611c: @ 380611c :arm
	mov     r7, #0x0
	mov     r12, #0x0
	mov     r11, #0x0
	b       branch_3806144
@ 0x380612c

.arm
branch_380612c: @ 380612c :arm
	orr     r12, r12, #0x1
	subs    r6, r6, #0x1
	beq     branch_380619c
	adds    r0, r0, r0
	adcs    r1, r1, r1
	adcs    r7, r7, r7
.arm
branch_3806144: @ 3806144 :arm
	subs    r0, r0, r2
	sbcs    r1, r1, r3
	sbcs    r7, r7, #0x0
	adds    r12, r12, r12
	adc     r11, r11, r11
	cmp     r7, #0x0
	bge     branch_380612c
.arm
branch_3806160: @ 3806160 :arm
	subs    r6, r6, #0x1
	beq     branch_3806194
	adds    r0, r0, r0
	adcs    r1, r1, r1
	adc     r7, r7, r7
	adds    r0, r0, r2
	adcs    r1, r1, r3
	adc     r7, r7, #0x0
	adds    r12, r12, r12
	adc     r11, r11, r11
	cmp     r7, #0x0
	bge     branch_380612c
	b       branch_3806160
@ 0x3806194

.arm
branch_3806194: @ 3806194 :arm
	adds    r0, r0, r2
	adc     r1, r1, r3
.arm
branch_380619c: @ 380619c :arm
	ands    r7, r4, #0x1
	moveq   r0, r12
	moveq   r1, r11
	beq     branch_38061d4
	subs    r7, r5, #0x20
	movge   r0, r1, lsr r7
	bge     branch_38061f8
	rsb     r7, r5, #0x20
	mov     r0, r0, lsr r5
	orr     r0, r0, r1, lsl r7
	mov     r1, r1, lsr r5
	b       branch_38061d4
@ 0x38061cc

.arm
Function_38061cc: @ 38061cc :arm
	mov     r0, r1, lsr r7
	mov     r1, #0x0
.arm
branch_38061d4: @ 38061d4 :arm
	cmp     r4, #0x0
	blt     branch_38061e4
	ldmfd   sp!, {r4-r7,r11,r12,lr}
	bx      lr
@ 0x38061e4

.arm
branch_38061e4: @ 38061e4 :arm
	rsbs    r0, r0, #0x0
	rsc     r1, r1, #0x0
	ldmfd   sp!, {r4-r7,r11,r12,lr}
	bx      lr
@ 0x38061f4

.arm
branch_38061f4: @ 38061f4 :arm
	mov     r0, #0x0
.arm
branch_38061f8: @ 38061f8 :arm
	mov     r1, #0x0
	cmp     r4, #0x0
	blt     branch_38061e4
	ldmfd   sp!, {r4-r7,r11,r12,lr}
	bx      lr
@ 0x380620c

.arm
Function_380620c: @ 380620c :arm
	stmfd   sp!, {r4-r7,r11,r12,lr}
	mov     r4, #0x0
	b       branch_3806220
@ 0x3806218

.arm
Function_3806218: @ 3806218 :arm
	stmfd   sp!, {r4-r7,r11,r12,lr}
	mov     r4, #0x1
.arm
branch_3806220: @ 3806220 :arm
	orrs    r5, r3, r2
	bne     branch_3806230
	ldmfd   sp!, {r4-r7,r11,r12,lr}
	bx      lr
@ 0x3806230

.arm
branch_3806230: @ 3806230 :arm
	orrs    r5, r1, r3
	bne     branch_38060d0
	mov     r1, r2
	bl      Function_3806468
	cmp     r4, #0x0
	movne   r0, r1
	mov     r1, #0x0
	ldmfd   sp!, {r4-r7,r11,r12,lr}
	bx      lr
@ 0x3806254

.arm
Function_3806254: @ 3806254 :arm
	eor     r12, r0, r1
	and     r12, r12, #2, 2 @ #0x80000000
	cmp     r0, #0x0
	rsblt   r0, r0, #0x0
	addlt   r12, r12, #0x1
	cmp     r1, #0x0
	rsblt   r1, r1, #0x0
	beq     branch_380644c
	cmp     r0, r1
	movcc   r1, r0
	movcc   r0, #0x0
	bcc     branch_380644c
	mov     r2, #0x1c
	mov     r3, r0, lsr #4
	cmp     r1, r3, lsr #12
	suble   r2, r2, #0x10
	movle   r3, r3, lsr #16
	cmp     r1, r3, lsr #4
	suble   r2, r2, #0x8
	movle   r3, r3, lsr #8
	cmp     r1, r3
	suble   r2, r2, #0x4
	movle   r3, r3, lsr #4
	mov     r0, r0, lsl r2
	rsb     r1, r1, #0x0
	adds    r0, r0, r0
	add     r2, r2, r2, lsl #1
	add     pc, pc, r2, lsl #2
	mov     r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	mov     r1, r3
.arm
branch_380644c: @ 380644c :arm
	ands    r3, r12, #2, 2 @ #0x80000000
	rsbne   r0, r0, #0x0
	ands    r3, r12, #0x1
	rsbne   r1, r1, #0x0
	bx      lr
@ 0x3806460

.arm
Function_3806460: @ 3806460 :arm
	cmp     r1, #0x0
	bxeq    lr
.arm
Function_3806468: @ 3806468 :arm
	cmp     r0, r1
	movcc   r1, r0
	movcc   r0, #0x0
	bxcc    lr
	mov     r2, #0x1c
	mov     r3, r0, lsr #4
	cmp     r1, r3, lsr #12
	suble   r2, r2, #0x10
	movle   r3, r3, lsr #16
	cmp     r1, r3, lsr #4
	suble   r2, r2, #0x8
	movle   r3, r3, lsr #8
	cmp     r1, r3
	suble   r2, r2, #0x4
	movle   r3, r3, lsr #4
	mov     r0, r0, lsl r2
	rsb     r1, r1, #0x0
	adds    r0, r0, r0
	add     r2, r2, r2, lsl #1
	add     pc, pc, r2, lsl #2
	mov     r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	adcs    r3, r1, r3, lsl #1
	subcc   r3, r3, r1
	adcs    r0, r0, r0
	mov     r1, r3
	bx      lr
@ 0x3806644


Unknown_3806644: @ 0x3806644
.incbin "./baserom/arm7.bin", 0xe8e8, 0x380694c - 0x3806644


.arm
Function_380694c: @ 380694c :arm
	mov     r12, #1, 6 @ #0x4000000
	str     r12, [r12, #0x208]
	ldr     r1, [pc, #0x58] @ [0x38069b4] (=0x380fffc)
	mov     r0, #0x0
	str     r0, [r1]
	ldr     r1, [pc, #0x50] @ [0x38069b8] (=0x4000180)
	mov     r0, #1, 24 @ #0x100
	strh    r0, [r1]
.arm
branch_380696c: @ 380696c :arm
	ldrh    r0, [r1]
	and     r0, r0, #0xf
	cmp     r0, #0x1
	bne     branch_380696c
	ldr     r1, [pc, #0x34] @ [0x38069b8] (=0x4000180)
	mov     r0, #0x0
	strh    r0, [r1]
.arm
branch_3806988: @ 3806988 :arm
	ldrh    r0, [r1]
	cmp     r0, #0x1
	beq     branch_3806988
	ldr     r3, [pc, #0x20] @ [0x38069bc] (=0x27ffe00)
	ldr     r12, [r3, #0x34]
	mov     lr, r12
	mov     r0, #0x0
	mov     r1, #0x0
	mov     r2, #0x0
	mov     r3, #0x0
	bx      r12
@ 0x38069b4

.word 0x380fffc @ 0x38069b4
.word 0x4000180 @ 0x38069b8
.word 0x27ffe00 @ 0x38069bc
.arm
Function_38069c0: @ 38069c0 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r6, #1, 24 @ #0x100
	mov     r5, #0xa
	mov     r4, #0x0
	b       branch_38069e0
@ 0x38069d8

.arm
branch_38069d8: @ 38069d8 :arm
	mov     r0, r6
	bl      Function_37f8a68
.arm
branch_38069e0: @ 38069e0 :arm
	mov     r0, r5
	mov     r1, r7
	mov     r2, r4
	bl      Function_37fb50c
	cmp     r0, #0x0
	blt     branch_38069d8
	ldr     r0, [pc, #0x8] @ [0x3806a08] (=0x6019dc8)
	bl      Function_37f99b0
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x3806a08

.word 0x6019dc8 @ 0x3806a08
.arm
Function_3806a0c: @ 3806a0c :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0x3c] @ [0x3806a54] (=0x6019dc8)
	bl      Function_37f992c
	ldr     r4, [pc, #0x38] @ [0x3806a58] (=0x27fff96)
	mov     r5, #1, 24 @ #0x100
	b       branch_3806a2c
@ 0x3806a24

.arm
branch_3806a24: @ 3806a24 :arm
	mov     r0, r5
	bl      Function_37f8a68
.arm
branch_3806a2c: @ 3806a2c :arm
	ldrh    r1, [r4]
	tst     r1, #0x1
	bne     branch_3806a24
	ldr     r0, [pc, #0x1c] @ [0x3806a5c] (=0x60198a0)
	orr     r1, r1, #0x1
	strh    r1, [r4]
	ldr     r0, [r0, #0x54c]
	ldr     r0, [r0, #0x8]
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x3806a54

.word 0x6019dc8 @ 0x3806a54
.word 0x27fff96 @ 0x3806a58
.word 0x60198a0 @ 0x3806a5c
.arm
Function_3806a60: @ 3806a60 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r1, [pc, #0xfc] @ [0x3806b68] (=0x1fff)
	and     r0, r0, r1
	mov     r0, r0, lsl #16
	movs    r2, r0, lsr #16
	moveq   r0, #0x0
	beq     branch_3806b60
	mov     r1, #0x0
	mov     r0, #0x1
	b       branch_3806a94
@ 0x3806a88

.arm
branch_3806a88: @ 3806a88 :arm
	tst     r2, r0, lsl r1
	bne     branch_3806a9c
	add     r1, r1, #0x1
.arm
branch_3806a94: @ 3806a94 :arm
	cmp     r1, #0x10
	blt     branch_3806a88
.arm
branch_3806a9c: @ 3806a9c :arm
	mov     r0, #0xf
	mov     r3, #0x1
	b       branch_3806ab4
@ 0x3806aa8

.arm
branch_3806aa8: @ 3806aa8 :arm
	tst     r2, r3, lsl r0
	bne     branch_3806abc
	sub     r0, r0, #0x1
.arm
branch_3806ab4: @ 3806ab4 :arm
	cmp     r0, #0x0
	bne     branch_3806aa8
.arm
branch_3806abc: @ 3806abc :arm
	sub     r6, r0, r1
	cmp     r6, #0x5
	movlt   r0, #0x1
	movlt   r0, r0, lsl r1
	movlt   r0, r0, lsl #16
	movlt   r0, r0, lsr #16
	blt     branch_3806b60
	add     r3, r0, r1
	add     r3, r3, r3, lsr #31
	mov     r4, r3, asr #1
	mov     r5, #0x0
	mov     lr, #0x1
	b       branch_3806b14
@ 0x3806af0

.arm
branch_3806af0: @ 3806af0 :arm
	mov     r12, r5, lsr #31
	rsb     r3, r12, r5, lsl #31
	add     r3, r12, r3, ror #31
	mov     r3, r3, lsl #1
	sub     r3, r3, #0x1
	mla     r4, r5, r3, r4
	tst     r2, lr, lsl r4
	bne     branch_3806b1c
	add     r5, r5, #0x1
.arm
branch_3806b14: @ 3806b14 :arm
	cmp     r5, r6
	blt     branch_3806af0
.arm
branch_3806b1c: @ 3806b1c :arm
	sub     r2, r0, r4
	cmp     r2, #0x5
	subge   r2, r4, r1
	cmpge   r2, #0x5
	bge     branch_3806b48
	mov     r2, #0x1
	mov     r0, r2, lsl r0
	orr     r0, r0, r2, lsl r1
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	b       branch_3806b60
@ 0x3806b48

.arm
branch_3806b48: @ 3806b48 :arm
	mov     r3, #0x1
	mov     r2, r3, lsl r4
	orr     r0, r2, r3, lsl r0
	orr     r0, r0, r3, lsl r1
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
branch_3806b60: @ 3806b60 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x3806b68

.word 0x1fff @ 0x3806b68



Unknown_3806b6c: @ 0x3806b6c
.incbin "./baserom/arm7.bin", 0xee10, 0x3806b80 - 0x3806b6c


Jumptable_3806b80: @ 0x3806b80
.word Function_37f87a4 @ =0x37f87a4, 0x3806b80
.word Function_37f8694 @ =0x37f8694, 0x3806b84
.word Function_37f8694 @ =0x37f8694, 0x3806b88
.word Function_37f8764 @ =0x37f8764, 0x3806b8c
.word Function_37f8774 @ =0x37f8774, 0x3806b90
.word Function_37f8784 @ =0x37f8784, 0x3806b94
.word Function_37f8794 @ =0x37f8794, 0x3806b98
.word Function_37f8694 @ =0x37f8694, 0x3806b9c
.word Function_37f8724 @ =0x37f8724, 0x3806ba0
.word Function_37f8734 @ =0x37f8734, 0x3806ba4
.word Function_37f8744 @ =0x37f8744, 0x3806ba8
.word Function_37f8754 @ =0x37f8754, 0x3806bac
.word Function_37f8694 @ =0x37f8694, 0x3806bb0
.word Function_37f8694 @ =0x37f8694, 0x3806bb4
.word Function_37f8694 @ =0x37f8694, 0x3806bb8
.word Function_37f8694 @ =0x37f8694, 0x3806bbc
.word Function_37f8694 @ =0x37f8694, 0x3806bc0
.word Function_37f8694 @ =0x37f8694, 0x3806bc4
.word Function_37f8694 @ =0x37f8694, 0x3806bc8
.word Function_37f8694 @ =0x37f8694, 0x3806bcc
.word Function_37f8694 @ =0x37f8694, 0x3806bd0
.word Function_37f8694 @ =0x37f8694, 0x3806bd4
.word Function_37f8694 @ =0x37f8694, 0x3806bd8
.word Function_37f8694 @ =0x37f8694, 0x3806bdc
.word Function_37f8694 @ =0x37f8694, 0x3806be0



Unknown_3806be4: @ 0x3806be4
.incbin "./baserom/arm7.bin", 0xee88, 0xef38 - 0xee88



/***********************************************************
***********************************************************/
.section .text4, "ax" @ 0xef38


.arm
Function_6000000: @ 6000000 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x8
	mov     r4, r1
	ldr     r1, [r4]
	ldr     r3, [pc, #0x174] @ [0x600018c] (=0x60198a0)
	mov     r5, r0
	str     r1, [r3, #0x540]
	ldr     r1, [r5, #0x24]
	ldr     r0, [pc, #0x168] @ [0x6000190] (=0x60188a0)
	str     r1, [r3, #0x544]
	ldr     r2, [r5, #0x28]
	ldr     r1, [pc, #0x160] @ [0x6000194] (=0x60188c0)
	str     r2, [r3, #0x548]
	mov     r12, #0x0
	str     r12, [r3, #0x54c]
	mov     r2, #0x2
	str     r12, [r3, #0x550]
	bl      Function_60001cc
	ldr     r0, [pc, #0x148] @ [0x6000198] (=0x60188c8)
	ldr     r1, [pc, #0x148] @ [0x600019c] (=0x60188e8)
	mov     r2, #0x4
	bl      Function_60001cc
	ldr     r0, [pc, #0x140] @ [0x60001a0] (=0x60188f8)
	ldr     r1, [pc, #0x140] @ [0x60001a4] (=0x6018918)
	mov     r2, #0x4
	bl      Function_60001cc
	ldr     r0, [pc, #0x138] @ [0x60001a8] (=0x6018928)
	ldr     r1, [pc, #0x138] @ [0x60001ac] (=0x6018948)
	mov     r2, #0x20
	bl      Function_60001cc
	ldr     r1, [pc, #0x110] @ [0x6000190] (=0x60188a0)
	ldr     r0, [pc, #0x114] @ [0x6000198] (=0x60188c8)
	str     r1, [r5, #0x10]
	str     r0, [r5, #0x14]
	ldr     r2, [r4, #0x8]
	ldr     r1, [pc, #0xf8] @ [0x600018c] (=0x60198a0)
	ldr     r0, [pc, #0x118] @ [0x60001b0] (=0x6019dc8)
	str     r2, [r1, #0x578]
	ldr     r2, [r4, #0x18]
	str     r2, [r1, #0x57c]
	ldr     r2, [r4, #0x10]
	str     r2, [r1, #0x580]
	ldr     r2, [r4, #0x4]
	str     r2, [r1, #0x584]
	ldr     r2, [r4, #0x14]
	str     r2, [r1, #0x588]
	ldr     r2, [r4, #0xc]
	str     r2, [r1, #0x58c]
	bl      Function_60001d4
	mov     r0, #1, 22 @ #0x400
	str     r0, [sp]
	ldr     r1, [r4, #0x4]
	ldr     r0, [pc, #0xdc] @ [0x60001b4] (=0x380ada8)
	str     r1, [sp, #0x4]
	ldr     r1, [pc, #0xd8] @ [0x60001b8] (=0x6000958)
	ldr     r3, [pc, #0xcc] @ [0x60001b0] (=0x6019dc8)
	mov     r2, #0x0
	bl      Function_60001dc
	ldr     r0, [pc, #0xc4] @ [0x60001b4] (=0x380ada8)
	bl      Function_60001e4
	mov     r0, #1, 20 @ #0x1000
	str     r0, [sp]
	ldr     r1, [r4, #0xc]
	ldr     r0, [pc, #0xb8] @ [0x60001bc] (=0x380ad04)
	str     r1, [sp, #0x4]
	ldr     r1, [pc, #0xb4] @ [0x60001c0] (=0x6001dec)
	ldr     r3, [pc, #0xb4] @ [0x60001c4] (=0x60199c8)
	mov     r2, #0x0
	bl      Function_60001dc
	ldr     r0, [pc, #0xa0] @ [0x60001bc] (=0x380ad04)
	bl      Function_60001e4
	mov     r3, #0x0
	ldr     r1, [pc, #0x68] @ [0x6000190] (=0x60188a0)
	mov     r2, r3
.arm
branch_6000128: @ 6000128 :arm
	add     r0, r1, r3
	add     r0, r0, #1, 20 @ #0x1000
	add     r3, r3, #0x1
	strb    r2, [r0, #0x554]
	cmp     r3, #0x20
	blt     branch_6000128
	ldr     r0, [pc, #0x44] @ [0x600018c] (=0x60198a0)
	str     r2, [r0, #0x574]
	bl      Function_60001ec
	cmp     r0, #0x0
	bne     branch_6000158
	bl      Function_60001f4
.arm
branch_6000158: @ 6000158 :arm
	bl      Function_60001fc
	ldr     r1, [pc, #0x64] @ [0x60001c8] (=0x60002b4)
	mov     r0, #0xa
	bl      Function_6000204
	mov     r0, #0x2
	str     r0, [r5, #0x18]
	ldr     r1, [r4, #0x14]
	mov     r0, r5
	str     r1, [r5, #0xc]
	bl      Function_6008b5c
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600018c

.word 0x60198a0 @ 0x600018c
.word 0x60188a0 @ 0x6000190
.word 0x60188c0 @ 0x6000194
.word 0x60188c8 @ 0x6000198
.word 0x60188e8 @ 0x600019c
.word 0x60188f8 @ 0x60001a0
.word 0x6018918 @ 0x60001a4
.word 0x6018928 @ 0x60001a8
.word 0x6018948 @ 0x60001ac
.word 0x6019dc8 @ 0x60001b0
.word 0x380ada8 @ 0x60001b4
.word 0x6000958 @ 0x60001b8
.word 0x380ad04 @ 0x60001bc
.word 0x6001dec @ 0x60001c0
.word 0x60199c8 @ 0x60001c4
.word 0x60002b4 @ 0x60001c8
.arm
Function_60001cc: @ 60001cc :arm
	ldr     pc, [pc, #-0x4] @ [0x60001d0] (=0x37f9750)
@ 0x60001d0

.word 0x37f9750 @ 0x60001d0
.arm
Function_60001d4: @ 60001d4 :arm
	ldr     pc, [pc, #-0x4] @ [0x60001d8] (=0x37f9914)
@ 0x60001d8

.word 0x37f9914 @ 0x60001d8
.arm
Function_60001dc: @ 60001dc :arm
	ldr     pc, [pc, #-0x4] @ [0x60001e0] (=0x37f90b0)
@ 0x60001e0

.word 0x37f90b0 @ 0x60001e0
.arm
Function_60001e4: @ 60001e4 :arm
	ldr     pc, [pc, #-0x4] @ [0x60001e8] (=0x37f9410)
@ 0x60001e8

.word 0x37f9410 @ 0x60001e8
.arm
Function_60001ec: @ 60001ec :arm
	ldr     pc, [pc, #-0x4] @ [0x60001f0] (=0x37fa83c)
@ 0x60001f0

.word 0x37fa83c @ 0x60001f0
.arm
Function_60001f4: @ 60001f4 :arm
	ldr     pc, [pc, #-0x4] @ [0x60001f8] (=0x37fa7f0)
@ 0x60001f8

.word 0x37fa7f0 @ 0x60001f8
.arm
Function_60001fc: @ 60001fc :arm
	ldr     pc, [pc, #-0x4] @ [0x6000200] (=0x37fb3b0)
@ 0x6000200

.word 0x37fb3b0 @ 0x6000200
.arm
Function_6000204: @ 6000204 :arm
	ldr     pc, [pc, #-0x4] @ [0x6000208] (=0x37fb498)
@ 0x6000208

.word 0x37fb498 @ 0x6000208
.arm
Function_600020c: @ 600020c :arm
	stmfd   sp!, {r3,lr}
	mov     r1, r0
	ldr     r0, [pc, #0x60] @ [0x600027c] (=0x60188a0)
	mov     r2, #0x1
	bl      Function_6000284
	ldr     r0, [pc, #0x58] @ [0x6000280] (=0x60188f8)
	add     r1, sp, #0x0
	mov     r2, #0x1
	bl      Function_600028c
	ldr     r1, [sp]
	ldrh    r0, [r1, #0xe]
	add     r0, r1, r0, lsl #1
	ldrh    r0, [r0, #0x14]
	cmp     r0, #0xe
	bne     branch_6000270
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x13
	strh    r1, [r0, #0x2]
	mov     r1, #0x18
	strh    r1, [r0, #0x4]
	bl      Function_600029c
	bl      Function_60002a4
	bl      Function_60002ac
.arm
branch_6000270: @ 6000270 :arm
	ldr     r0, [sp]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600027c

.word 0x60188a0 @ 0x600027c
.word 0x60188f8 @ 0x6000280
.arm
Function_6000284: @ 6000284 :arm
	ldr     pc, [pc, #-0x4] @ [0x6000288] (=0x37f9778)
@ 0x6000288

.word 0x37f9778 @ 0x6000288
.arm
Function_600028c: @ 600028c :arm
	ldr     pc, [pc, #-0x4] @ [0x6000290] (=0x37f9804)
@ 0x6000290

.word 0x37f9804 @ 0x6000290
.arm
Function_6000294: @ 6000294 :arm
	ldr     pc, [pc, #-0x4] @ [0x6000298] (=0x3806a0c)
@ 0x6000298

.word 0x3806a0c @ 0x6000298
.arm
Function_600029c: @ 600029c :arm
	ldr     pc, [pc, #-0x4] @ [0x60002a0] (=0x38069c0)
@ 0x60002a0

.word 0x38069c0 @ 0x60002a0
.arm
Function_60002a4: @ 60002a4 :arm
	ldr     pc, [pc, #-0x4] @ [0x60002a8] (=0x37fb804)
@ 0x60002a8

.word 0x37fb804 @ 0x60002a8
.arm
Function_60002ac: @ 60002ac :arm
	ldr     pc, [pc, #-0x4] @ [0x60002b0] (=0x37faf14)
@ 0x60002b0

.word 0x37faf14 @ 0x60002b0
.arm
Function_60002b4: @ 60002b4 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r1
	cmp     r2, #0x0
	bne     branch_600030c
	ldr     r0, [pc, #0x48] @ [0x6000314] (=0x6018928)
	mov     r2, #0x0
	bl      Function_6000284
	cmp     r0, #0x0
	bne     branch_600030c
	ldr     r0, [pc, #0x38] @ [0x6000318] (=0x60198a0)
	ldr     r0, [r0, #0x54c]
	cmp     r0, #0x0
	beq     branch_600030c
	bl      Function_6000294
	ldrh    r2, [r4]
	mov     r1, #0x8
	strh    r2, [r0]
	strh    r1, [r0, #0x2]
	mov     r1, #0x0
	strh    r1, [r0, #0x4]
	strh    r1, [r0, #0x6]
	bl      Function_600029c
.arm
branch_600030c: @ 600030c :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6000314

.word 0x6018928 @ 0x6000314
.word 0x60198a0 @ 0x6000318
.arm
Function_600031c: @ 600031c :arm
	ldr     r1, [pc, #0x54] @ [0x6000378] (=0x60198a0)
	ldrb    r2, [r0]
	ldr     r3, [r1, #0x550]
	ldrb    r1, [r3, #0xe0]
	cmp     r2, r1
	ldreqb  r2, [r0, #0x1]
	ldreqb  r1, [r3, #0xe1]
	cmpeq   r2, r1
	ldreqb  r2, [r0, #0x2]
	ldreqb  r1, [r3, #0xe2]
	cmpeq   r2, r1
	ldreqb  r2, [r0, #0x3]
	ldreqb  r1, [r3, #0xe3]
	cmpeq   r2, r1
	ldreqb  r2, [r0, #0x4]
	ldreqb  r1, [r3, #0xe4]
	cmpeq   r2, r1
	ldreqb  r1, [r0, #0x5]
	ldreqb  r0, [r3, #0xe5]
	cmpeq   r1, r0
	moveq   r0, #0x1
	movne   r0, #0x0
	bx      lr
@ 0x6000378

.word 0x60198a0 @ 0x6000378
.arm
Function_600037c: @ 600037c :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [r1, #0x8]
	mov     r2, r0
	str     r3, [r2, #0x4]
	ldrh    r0, [r1, #0xc]
	strh    r0, [r2, #0x8]
	ldrh    r0, [r1, #0x12]
	cmp     r0, #0x0
	movne   r3, #0x2
	ldrh    r0, [r1, #0xe]
	moveq   r3, #0x0
	cmp     r0, #0x0
	movne   r12, #0x1
	ldrh    r0, [r1, #0x14]
	moveq   r12, #0x0
	cmp     r0, #0x0
	movne   lr, #0x4
	moveq   lr, #0x0
	orr     r0, r12, r3
	orr     r0, lr, r0
	strb    r0, [r2, #0xb]
	ldrh    r3, [r1, #0x4]
	mov     r0, #0x1
	strb    r3, [r2, #0xa]
	strh    r0, [r2]
	strb    r0, [r2, #0x2]
	mov     r0, #0x0
	strb    r0, [r2, #0x3]
	ldrh    r0, [r1, #0x34]
	strh    r0, [r2, #0xc]
	ldrh    r0, [r1, #0x12]
	cmp     r0, #0x0
	beq     branch_6000410
	ldrh    r0, [r1, #0x36]
	cmp     r0, #0x8
	movcs   r0, #0x8
	bcs     branch_6000414
.arm
branch_6000410: @ 6000410 :arm
	ldrh    r0, [r1, #0x36]
.arm
branch_6000414: @ 6000414 :arm
	strh    r0, [r2, #0xe]
	ldrb    r3, [r2, #0xa]
	cmp     r3, #0x0
	beq     branch_6000438
	ldr     r0, [r1]
	add     r3, r3, #0x1
	add     r1, r2, #0x10
	bic     r2, r3, #0x1
	bl      Function_6000440
.arm
branch_6000438: @ 6000438 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6000440

.arm
Function_6000440: @ 6000440 :arm
	ldr     pc, [pc, #-0x4] @ [0x6000444] (=0x37fb228)
@ 0x6000444

.word 0x37fb228 @ 0x6000444
.arm
Function_6000448: @ 6000448 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [pc, #0x13c] @ [0x6000590] (=0x60198a0)
	mov     r5, r1
	ldr     r4, [r2, #0x550]
	mov     r6, r0
	add     r0, r4, #0xe0
	add     r1, r5, #0x10
	mov     r2, #0x6
	bl      Function_6000440
	mov     r0, #0x7
	strh    r0, [r5, #0x16]
	add     r0, r4, #1, 24 @ #0x100
	ldrh    r1, [r0, #0xf4]
	strh    r1, [r5, #0x18]
	ldrh    r1, [r0, #0xec]
	strh    r1, [r5, #0x1e]
	ldrh    r1, [r4, #0xe6]
	strh    r1, [r5, #0x1c]
	ldr     r1, [r4, #0x198]
	cmp     r1, #0x0
	bne     branch_60004bc
	mov     r0, #0x0
	strh    r0, [r5, #0x20]
	add     r1, r5, #0x24
	mov     r2, #0x50
	strh    r0, [r5, #0x22]
	bl      Function_6000598
	mov     r0, #0x0
	b       branch_60004e0
@ 0x60004bc

.arm
branch_60004bc: @ 60004bc :arm
	ldrh    r1, [r0, #0x96]
	add     r0, r4, #103, 30 @ #0x19c
	strh    r1, [r5, #0x20]
	ldrh    r2, [r4, #0xc4]
	add     r1, r5, #0x24
	strh    r2, [r5, #0x22]
	mov     r2, #0x50
	bl      Function_6000440
	mov     r0, #0x1
.arm
branch_60004e0: @ 60004e0 :arm
	strh    r0, [r5, #0x9e]
	mov     r0, #0x1
	strh    r0, [r5, #0x74]
	strh    r0, [r5, #0x76]
	ldrh    r0, [r4, #0xe6]
	add     r1, r5, #0x7c
	cmp     r0, #0x1
	moveq   r0, #0x0
	movne   r0, #0x10
	strh    r0, [r5, #0x78]
	mov     r0, #0xa
	strh    r0, [r5, #0x7a]
	cmp     r6, #0x26
	mov     r0, #0x0
	bne     branch_6000528
	mov     r2, #0x20
	bl      Function_6000598
	b       branch_6000540
@ 0x6000528

.arm
branch_6000528: @ 6000528 :arm
	mov     r2, #0x8
	bl      Function_6000598
	ldr     r0, [pc, #0x5c] @ [0x6000594] (=0xffff)
	add     r1, r5, #0x84
	mov     r2, #0x18
	bl      Function_6000598
.arm
branch_6000540: @ 6000540 :arm
	add     r0, r4, #1, 24 @ #0x100
	ldrh    r1, [r0, #0xee]
	mov     r0, r5
	strh    r1, [r5, #0x9c]
	bl      Function_6002530
	ldrh    r4, [r0, #0x4]
	cmp     r4, #0x0
	moveq   r0, #0x1
	beq     branch_6000588
	bl      Function_6000294
	strh    r6, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	mov     r1, #2, 24 @ #0x200
	strh    r1, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
	mov     r0, #0x0
.arm
branch_6000588: @ 6000588 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6000590

.word 0x60198a0 @ 0x6000590
.word 0xffff @ 0x6000594
.arm
Function_6000598: @ 6000598 :arm
	ldr     pc, [pc, #-0x4] @ [0x600059c] (=0x37fb018)
@ 0x600059c

.word 0x37fb018 @ 0x600059c
.arm
Function_60005a0: @ 60005a0 :arm
	ldr     r1, [pc, #0x30] @ [0x60005d8] (=0x60198a0)
	ldr     r3, [pc, #0x30] @ [0x60005dc] (=0x6019df4)
	ldr     r12, [r1, #0x574]
	ldr     r2, [pc, #0x2c] @ [0x60005e0] (=0x27fff98)
	strb    r0, [r3, r12]
	ldr     r3, [r1, #0x574]
	add     r3, r3, #0x1
	and     r3, r3, #0x1f
	str     r3, [r1, #0x574]
	ldrh    r1, [r2]
	eor     r0, r0, r1, lsl #1
	eor     r0, r0, r0, lsr #16
	strh    r0, [r2]
	bx      lr
@ 0x60005d8

.word 0x60198a0 @ 0x60005d8
.word 0x6019df4 @ 0x60005dc
.word 0x27fff98 @ 0x60005e0
.arm
Function_60005e4: @ 60005e4 :arm
	ldr     r2, [pc, #0x28] @ [0x6000614] (=0x60188a0)
	mov     r3, #0x0
.arm
branch_60005ec: @ 60005ec :arm
	add     r1, r2, r3
	add     r1, r1, #1, 20 @ #0x1000
	add     r3, r3, #0x1
	strb    r0, [r1, #0x554]
	cmp     r3, #0x20
	blt     branch_60005ec
	ldr     r0, [pc, #0xc] @ [0x6000618] (=0x60198a0)
	mov     r1, #0x0
	str     r1, [r0, #0x574]
	bx      lr
@ 0x6000614

.word 0x60188a0 @ 0x6000614
.word 0x60198a0 @ 0x6000618
.arm
Function_600061c: @ 600061c :arm
	ldr     r1, [pc, #0x2c] @ [0x6000650] (=0x60188a0)
	mov     r3, #0x0
	mov     r2, r3
.arm
branch_6000628: @ 6000628 :arm
	add     r0, r1, r2
	add     r0, r0, #1, 20 @ #0x1000
	ldrb    r0, [r0, #0x554]
	add     r2, r2, #0x1
	cmp     r2, #0x20
	add     r3, r3, r0
	blt     branch_6000628
	ldr     r12, [pc, #0x8] @ [0x6000654] (=0x6000658)
	mov     r0, r3, lsr #5
	bx      r12
@ 0x6000650

.word 0x60188a0 @ 0x6000650
.word Function_6000658 @ =0x6000658, 0x6000654
.arm
Function_6000658: @ 6000658 :arm
	ldr     r1, [pc, #0x5c] @ [0x60006bc] (=0x60198a0)
	ldr     r1, [r1, #0x54c]
	ldrb    r1, [r1, #0x53]
	cmp     r1, #0x8
	bne     branch_6000694
	cmp     r0, #0x16
	movcc   r0, #0x0
	bxcc    lr
	cmp     r0, #0x1c
	movcc   r0, #0x1
	bxcc    lr
	cmp     r0, #0x22
	movcc   r0, #0x2
	movcs   r0, #0x3
	bx      lr
@ 0x6000694

.arm
branch_6000694: @ 6000694 :arm
	cmp     r0, #0x8
	movcc   r0, #0x0
	bxcc    lr
	cmp     r0, #0xe
	movcc   r0, #0x1
	bxcc    lr
	cmp     r0, #0x14
	movcc   r0, #0x2
	movcs   r0, #0x3
	bx      lr
@ 0x60006bc

.word 0x60198a0 @ 0x60006bc
.arm
Function_60006c0: @ 60006c0 :arm
	stmfd   sp!, {r4,lr}
	bl      Function_6000720
	mov     r4, r0
	bl      Function_6000728
	ldr     r1, [pc, #0x3c] @ [0x6000714] (=0x60198a0)
	ldr     r0, [pc, #0x3c] @ [0x6000718] (=0x380ad04)
	ldr     r1, [r1, #0x58c]
	bl      Function_6000730
	bl      Function_6008d3c
	ldr     r1, [pc, #0x28] @ [0x6000714] (=0x60198a0)
	ldr     r1, [r1, #0x588]
	bl      Function_6000730
	ldr     r1, [pc, #0x1c] @ [0x6000714] (=0x60198a0)
	ldr     r0, [pc, #0x20] @ [0x600071c] (=0x380ada8)
	ldr     r1, [r1, #0x584]
	bl      Function_6000730
	bl      Function_6000738
	mov     r0, r4
	bl      Function_6000740
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6000714

.word 0x60198a0 @ 0x6000714
.word 0x380ad04 @ 0x6000718
.word 0x380ada8 @ 0x600071c
.arm
Function_6000720: @ 6000720 :arm
	ldr     pc, [pc, #-0x4] @ [0x6000724] (=0x37fada4)
@ 0x6000724

.word 0x37fada4 @ 0x6000724
.arm
Function_6000728: @ 6000728 :arm
	ldr     pc, [pc, #-0x4] @ [0x600072c] (=0x37f95fc)
@ 0x600072c

.word 0x37f95fc @ 0x600072c
.arm
Function_6000730: @ 6000730 :arm
	ldr     pc, [pc, #-0x4] @ [0x6000734] (=0x37f9464)
@ 0x6000734

.word 0x37f9464 @ 0x6000734
.arm
Function_6000738: @ 6000738 :arm
	ldr     pc, [pc, #-0x4] @ [0x600073c] (=0x37f9634)
@ 0x600073c

.word 0x37f9634 @ 0x600073c
.arm
Function_6000740: @ 6000740 :arm
	ldr     pc, [pc, #-0x4] @ [0x6000744] (=0x37fadb8)
@ 0x6000744

.word 0x37fadb8 @ 0x6000744
.arm
Function_6000748: @ 6000748 :arm
	stmfd   sp!, {r4,lr}
	bl      Function_6000720
	mov     r4, r0
	bl      Function_6000728
	ldr     r1, [pc, #0x3c] @ [0x600079c] (=0x60198a0)
	ldr     r0, [pc, #0x3c] @ [0x60007a0] (=0x380ada8)
	ldr     r1, [r1, #0x578]
	bl      Function_6000730
	bl      Function_6008d3c
	ldr     r1, [pc, #0x28] @ [0x600079c] (=0x60198a0)
	ldr     r1, [r1, #0x57c]
	bl      Function_6000730
	ldr     r1, [pc, #0x1c] @ [0x600079c] (=0x60198a0)
	ldr     r0, [pc, #0x20] @ [0x60007a4] (=0x380ad04)
	ldr     r1, [r1, #0x580]
	bl      Function_6000730
	bl      Function_6000738
	mov     r0, r4
	bl      Function_6000740
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600079c

.word 0x60198a0 @ 0x600079c
.word 0x380ada8 @ 0x60007a0
.word 0x380ad04 @ 0x60007a4
.arm
Function_60007a8: @ 60007a8 :arm
	ldr     r0, [pc, #0x0] @ [0x60007b0] (=0x380ad04)
	bx      lr
@ 0x60007b0

.word 0x380ad04 @ 0x60007b0
.arm
Function_60007b4: @ 60007b4 :arm
	ldr     r0, [pc, #0x0] @ [0x60007bc] (=0x380ada8)
	bx      lr
@ 0x60007bc

.word 0x380ada8 @ 0x60007bc
.arm
Function_60007c0: @ 60007c0 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, #0x0
	bl      Function_6000720
	ldr     r1, [pc, #0x54] @ [0x6000828] (=0x60198a0)
	ldr     r2, [r1, #0x54c]
	cmp     r2, #0x0
	beq     branch_6000818
	mov     r3, r4
	b       branch_6000810
@ 0x60007e4

.arm
branch_60007e4: @ 60007e4 :arm
	add     r1, r2, r3, lsl #4
	ldr     r1, [r1, #0xd0]
	tst     r1, #2, 18 @ #0x8000
	beq     branch_600080c
	add     r2, r2, #0xd0
	ldr     r1, [r2, r3, lsl #0x4]
	add     r4, r2, r3, lsl #4
	bic     r1, r1, #2, 18 @ #0x8000
	str     r1, [r2, r3, lsl #0x4]
	b       branch_6000818
@ 0x600080c

.arm
branch_600080c: @ 600080c :arm
	add     r3, r3, #0x1
.arm
branch_6000810: @ 6000810 :arm
	cmp     r3, #0x20
	blt     branch_60007e4
.arm
branch_6000818: @ 6000818 :arm
	bl      Function_6000740
	mov     r0, r4
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6000828

.word 0x60198a0 @ 0x6000828
.arm
Function_600082c: @ 600082c :arm
	ldr     r0, [pc, #0x28] @ [0x600085c] (=0x60198a0)
	mov     r1, #0x0
	ldr     r0, [r0, #0x550]
	strh    r1, [r0, #0x38]
	strh    r1, [r0, #0x3a]
	strh    r1, [r0, #0x30]
	strh    r1, [r0, #0x32]
	strh    r1, [r0, #0x3c]
	strh    r1, [r0, #0x3e]
	strh    r1, [r0, #0x34]
	strh    r1, [r0, #0x36]
	bx      lr
@ 0x600085c

.word 0x60198a0 @ 0x600085c
.arm
Function_6000860: @ 6000860 :arm
	ldr     r1, [pc, #0x44] @ [0x60008ac] (=0x60198a0)
	cmp     r0, #2, 24 @ #0x200
	ldr     r2, [r1, #0x550]
	movhi   r0, #2, 24 @ #0x200
	strh    r0, [r2, #0x30]
	strh    r0, [r2, #0x34]
	add     r1, r2, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x88]
	add     r0, r0, #0x4
	cmp     r1, #0x0
	moveq   r0, r0, lsl #16
	moveq   r0, r0, lsr #16
	streqh  r0, [r2, #0x3c]
	streqh  r0, [r2, #0x38]
	movne   r0, r0, lsl #16
	movne   r0, r0, lsr #16
	strneh  r0, [r2, #0x3e]
	strneh  r0, [r2, #0x3a]
	bx      lr
@ 0x60008ac

.word 0x60198a0 @ 0x60008ac
.arm
Function_60008b0: @ 60008b0 :arm
	ldr     r1, [pc, #0x44] @ [0x60008fc] (=0x60198a0)
	cmp     r0, #2, 24 @ #0x200
	ldr     r2, [r1, #0x550]
	movhi   r0, #2, 24 @ #0x200
	strh    r0, [r2, #0x36]
	strh    r0, [r2, #0x32]
	add     r1, r2, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x88]
	add     r0, r0, #0x2
	cmp     r1, #0x0
	moveq   r0, r0, lsl #16
	moveq   r0, r0, lsr #16
	streqh  r0, [r2, #0x3e]
	streqh  r0, [r2, #0x3a]
	movne   r0, r0, lsl #16
	movne   r0, r0, lsr #16
	strneh  r0, [r2, #0x3c]
	strneh  r0, [r2, #0x38]
	bx      lr
@ 0x60008fc

.word 0x60198a0 @ 0x60008fc
.arm
Function_6000900: @ 6000900 :arm
	ldr     r1, [pc, #0x20] @ [0x6000928] (=0x60198a0)
	ldr     r2, [r1, #0x550]
	strh    r0, [r2, #0x30]
	add     r1, r2, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x88]
	add     r0, r0, #0x4
	cmp     r1, #0x0
	streqh  r0, [r2, #0x38]
	strneh  r0, [r2, #0x3a]
	bx      lr
@ 0x6000928

.word 0x60198a0 @ 0x6000928
.arm
Function_600092c: @ 600092c :arm
	ldr     r1, [pc, #0x20] @ [0x6000954] (=0x60198a0)
	ldr     r2, [r1, #0x550]
	strh    r0, [r2, #0x32]
	add     r1, r2, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x88]
	add     r0, r0, #0x2
	cmp     r1, #0x0
	streqh  r0, [r2, #0x3a]
	strneh  r0, [r2, #0x38]
	bx      lr
@ 0x6000954

.word 0x60198a0 @ 0x6000954
.arm
Function_6000958: @ 6000958 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x20
.arm
branch_6000960: @ 6000960 :arm
	ldr     r0, [pc, #0xe48] @ [0x60017b0] (=0x60188a0)
	add     r1, sp, #0x1c
	add     r0, r0, #0x28
	mov     r2, #0x1
	bl      Function_600028c
	ldr     r9, [sp, #0x1c]
	cmp     r9, #0x0
	bne     branch_6000988
	bl      Function_6001ac8
	b       branch_6001ab0
@ 0x6000988

.arm
branch_6000988: @ 6000988 :arm
	ldrh    r1, [r9, #0xc]
	and     r0, r1, #255, 24 @ #0xff00
	mov     r0, r0, lsl #16
	movs    r0, r0, lsr #16
	and     r1, r1, #0xff
	cmpne   r0, #1, 24 @ #0x100
	bne     branch_6001a98
	tst     r1, #0x80
	beq     branch_6001a98
	ldr     r0, [pc, #0xe00] @ [0x60017b4] (=0x60198a0)
	ldr     r1, [r0, #0x54c]
	cmp     r1, #0x0
	ldrne   r8, [r0, #0x550]
	ldrneh  r3, [r8]
	cmpne   r3, #0x1
	beq     branch_6000960
	ldrh    r2, [r9, #0xc]
	ldr     r1, [pc, #0xde4] @ [0x60017b8] (=0x182)
	cmp     r2, r1
	bgt     branch_6000a24
	bge     branch_60010dc
	cmp     r2, #0x8d
	bgt     branch_6000a18
	subs    r0, r2, #0x84
	addpl   pc, pc, r0, lsl #2
	b       branch_6001a8c
@ 0x60009f0

.arm
Function_60009f0: @ 60009f0 :arm
	b       branch_6000a50
@ 0x60009f4

.arm
Function_60009f4: @ 60009f4 :arm
	b       branch_6000a74
@ 0x60009f8

.arm
Function_60009f8: @ 60009f8 :arm
	b       branch_6000d00
@ 0x60009fc

.arm
Function_60009fc: @ 60009fc :arm
	b       branch_6000e64
@ 0x6000a00

.arm
Function_6000a00: @ 6000a00 :arm
	b       branch_6000e88
@ 0x6000a04

.arm
Function_6000a04: @ 6000a04 :arm
	b       branch_6001a8c
@ 0x6000a08

.arm
Function_6000a08: @ 6000a08 :arm
	b       branch_6001a8c
@ 0x6000a0c

.arm
Function_6000a0c: @ 6000a0c :arm
	b       branch_6000eac
@ 0x6000a10

.arm
Function_6000a10: @ 6000a10 :arm
	b       branch_6000edc
@ 0x6000a14

.arm
Function_6000a14: @ 6000a14 :arm
	b       branch_6000f0c
@ 0x6000a18

.arm
branch_6000a18: @ 6000a18 :arm
	cmp     r2, #6, 26 @ #0x180
	beq     branch_6001024
	b       branch_6001a8c
@ 0x6000a24

.arm
branch_6000a24: @ 6000a24 :arm
	add     r0, r1, #0x3
	cmp     r2, r0
	bgt     branch_6000a40
	bge     branch_6001730
	cmp     r2, #97, 30 @ #0x184
	beq     branch_60013d8
	b       branch_6001a8c
@ 0x6000a40

.arm
branch_6000a40: @ 6000a40 :arm
	add     r0, r1, #0x4
	cmp     r2, r0
	beq     branch_6001994
	b       branch_6001a8c
@ 0x6000a50

.arm
branch_6000a50: @ 6000a50 :arm
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0x13
	strh    r1, [r0, #0x4]
	bl      Function_600029c
	b       branch_6001a8c
@ 0x6000a74

.arm
branch_6000a74: @ 6000a74 :arm
	cmp     r3, #0x7
	cmpne   r3, #0x9
	bne     branch_6000bfc
	add     r1, sp, #0x14
	add     r0, r9, #0x10
	mov     r2, #0x6
	bl      Function_6000440
	mov     r6, #0x0
	mov     r5, r6
	add     r4, r8, #1, 24 @ #0x100
	mov     r10, #0x1
	b       branch_6000b74
@ 0x6000aa4

.arm
branch_6000aa4: @ 6000aa4 :arm
	bl      Function_6000720
	ldrh    r2, [r4, #0x82]
	add     r1, r5, #0x1
	mov     r7, r0
	tst     r2, r10, lsl r1
	beq     branch_6000b68
	mov     r0, #0x6
	mul     r2, r5, r0
	add     r0, r8, r2
	ldrb    r11, [sp, #0x14]
	ldrb    r3, [r0, #0x128]
	cmp     r11, r3
	ldreqb  r11, [sp, #0x15]
	ldreqb  r3, [r0, #0x129]
	cmpeq   r11, r3
	ldreqb  r11, [sp, #0x16]
	ldreqb  r3, [r0, #0x12a]
	cmpeq   r11, r3
	ldreqb  r11, [sp, #0x17]
	ldreqb  r3, [r0, #0x12b]
	cmpeq   r11, r3
	ldreqb  r11, [sp, #0x18]
	ldreqb  r3, [r0, #0x12c]
	cmpeq   r11, r3
	ldreqb  r3, [sp, #0x19]
	ldreqb  r0, [r0, #0x12d]
	cmpeq   r3, r0
	bne     branch_6000b68
	add     r3, r8, #1, 24 @ #0x100
	mov     r0, r1, lsl #16
	mov     r6, r0, lsr #16
	ldrh    r0, [r3, #0x82]
	mvn     r1, r10, lsl r6
	and     r0, r0, r1
	strh    r0, [r3, #0x82]
	ldrh    r0, [r8, #0x86]
	add     r3, r8, r6, lsl #3
	and     r1, r0, r1
	add     r0, r8, #74, 30 @ #0x128
	strh    r1, [r8, #0x86]
	mov     r1, #0x0
	str     r1, [r3, #0x738]
	add     r0, r0, r2
	mov     r2, #0x6
	str     r1, [r3, #0x73c]
	bl      Function_6001ad0
	mov     r0, r7
	bl      Function_6000740
	b       branch_6000b7c
@ 0x6000b68

.arm
branch_6000b68: @ 6000b68 :arm
	mov     r0, r7
	bl      Function_6000740
	add     r5, r5, #0x1
.arm
branch_6000b74: @ 6000b74 :arm
	cmp     r5, #0xf
	blt     branch_6000aa4
.arm
branch_6000b7c: @ 6000b7c :arm
	cmp     r6, #0x0
	beq     branch_6001a8c
	bl      Function_6000294
	mov     r4, r0
	mov     r0, #0x8
	strh    r0, [r4]
	mov     r0, #0x0
	strh    r0, [r4, #0x2]
	mov     r0, #0x9
	strh    r0, [r4, #0x8]
	ldrh    r1, [r9, #0x16]
	add     r0, r9, #0x10
	strh    r1, [r4, #0x12]
	strh    r6, [r4, #0x10]
	add     r1, r4, #0xa
	mov     r2, #0x6
	bl      Function_6000440
	ldrh    r1, [r8, #0x30]
	mov     r0, r4
	strh    r1, [r4, #0x2c]
	ldrh    r1, [r8, #0x32]
	strh    r1, [r4, #0x2e]
	bl      Function_600029c
	ldr     r0, [r8, #0xc]
	cmp     r0, #0x1
	bne     branch_6001a8c
	mov     r0, #0x1
	mov     r0, r0, lsl r6
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_6007990
	b       branch_6001a8c
@ 0x6000bfc

.arm
branch_6000bfc: @ 6000bfc :arm
	mov     r5, #0x0
	bl      Function_6000720
	add     r1, r8, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x82]
	mov     r4, r0
	cmp     r1, #0x0
	bne     branch_6000c20
	bl      Function_6000740
	b       branch_6001a8c
@ 0x6000c20

.arm
branch_6000c20: @ 6000c20 :arm
	ldr     r0, [r8, #0xc]
	cmp     r0, #0x1
	bne     branch_6000c40
	mov     r0, r5
	str     r0, [r8, #0xc]
	mov     r5, #0x1
	bl      Function_6005cd0
	bl      Function_60006c0
.arm
branch_6000c40: @ 6000c40 :arm
	add     r0, r8, #1, 24 @ #0x100
	mov     r1, #0x0
	strh    r1, [r0, #0x82]
	strh    r1, [r8, #0x86]
	str     r1, [r8, #0x14]
	str     r1, [r8, #0x10]
	str     r1, [r8, #0x1c]
	str     r1, [r8, #0x198]
	strh    r1, [r0, #0x96]
	add     r0, r8, #103, 30 @ #0x19c
	mov     r2, #0x50
	bl      Function_6001ad0
	bl      Function_600082c
	mov     r0, #0x0
	strh    r0, [r8, #0xc2]
	mov     r1, #0x3
	mov     r0, r4
	strh    r1, [r8]
	bl      Function_6000740
	bl      Function_6000294
	mov     r4, r0
	mov     r0, #0xc
	strh    r0, [r4]
	mov     r0, #0x0
	strh    r0, [r4, #0x2]
	mov     r0, #0x9
	strh    r0, [r4, #0x8]
	ldrh    r1, [r9, #0x16]
	add     r0, r8, #1, 24 @ #0x100
	strh    r1, [r4, #0xc]
	ldrh    r1, [r0, #0x88]
	add     r0, r8, #0x8a
	strh    r1, [r4, #0xa]
	add     r0, r0, #1, 24 @ #0x100
	add     r1, r4, #0x10
	mov     r2, #0x6
	bl      Function_6000440
	ldrh    r1, [r8, #0x30]
	mov     r0, r4
	strh    r1, [r4, #0x16]
	ldrh    r1, [r8, #0x32]
	strh    r1, [r4, #0x18]
	bl      Function_600029c
	cmp     r5, #0x0
	beq     branch_6001a8c
	mov     r0, #0x1
	bl      Function_6007990
	b       branch_6001a8c
@ 0x6000d00

.arm
branch_6000d00: @ 6000d00 :arm
	ldrh    r5, [r9, #0x16]
	cmp     r5, #0x0
	beq     branch_6001a8c
	cmp     r5, #0x10
	bcs     branch_6001a8c
	ldrh    r0, [r8, #0xf6]
	cmp     r0, #0x0
	bne     branch_6000d8c
	bl      Function_60007c0
	movs    r4, r0
	moveq   r0, #0x0
	beq     branch_6000d58
	mov     r3, #0x22
	add     r0, r9, #0x10
	add     r1, r4, #0x4
	mov     r2, #0x6
	str     r3, [r4]
	bl      Function_6000440
	ldr     r0, [pc, #0xa6c] @ [0x60017bc] (=0x6018928)
	mov     r1, r4
	mov     r2, #0x0
	bl      Function_6000284
.arm
branch_6000d58: @ 6000d58 :arm
	cmp     r0, #0x0
	bne     branch_6001a8c
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x8
	strh    r1, [r0, #0x2]
	mov     r1, #0x16
	strh    r1, [r0, #0x4]
	mov     r1, #0x22
	strh    r1, [r0, #0x6]
	bl      Function_600029c
	b       branch_6001a8c
@ 0x6000d8c

.arm
branch_6000d8c: @ 6000d8c :arm
	bl      Function_6000720
	add     r1, r8, #1, 24 @ #0x100
	mov     r4, #0x1
	ldrh    r3, [r1, #0x82]
	mvn     r2, r4, lsl r5
	orr     r3, r3, r4, lsl r5
	strh    r3, [r1, #0x82]
	ldrh    r1, [r8, #0x86]
	mov     r4, r0
	and     r0, r1, r2
	strh    r0, [r8, #0x86]
	bl      Function_6001ad8
	orr     r2, r0, #0x1
	add     r0, r8, r5, lsl #3
	add     r3, r8, #74, 30 @ #0x128
	str     r2, [r0, #0x738]
	orr     r1, r1, #0x0
	str     r1, [r0, #0x73c]
	sub     r0, r5, #0x1
	mov     r2, #0x6
	mla     r1, r0, r2, r3
	add     r0, r9, #0x10
	bl      Function_6000440
	mov     r0, r4
	bl      Function_6000740
	mov     r0, #0x1
	add     r1, r8, #126, 30 @ #0x1f8
	add     r1, r1, r5, lsl #4
	mov     r2, #0x10
	bl      Function_6000598
	bl      Function_6000294
	mov     r4, r0
	mov     r0, #0x8
	strh    r0, [r4]
	mov     r0, #0x0
	strh    r0, [r4, #0x2]
	mov     r0, #0x7
	strh    r0, [r4, #0x8]
	add     r0, r9, #0x10
	add     r1, r4, #0xa
	mov     r2, #0x6
	bl      Function_6000440
	strh    r5, [r4, #0x10]
	add     r0, r9, #0x22
	add     r1, r4, #0x14
	mov     r2, #0x18
	bl      Function_6001ae0
	ldrh    r1, [r8, #0x30]
	mov     r0, r4
	strh    r1, [r4, #0x2c]
	ldrh    r1, [r8, #0x32]
	strh    r1, [r4, #0x2e]
	bl      Function_600029c
	b       branch_6001a8c
@ 0x6000e64

.arm
branch_6000e64: @ 6000e64 :arm
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0x12
	strh    r1, [r0, #0x4]
	bl      Function_600029c
	b       branch_6001a8c
@ 0x6000e88

.arm
branch_6000e88: @ 6000e88 :arm
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0x11
	strh    r1, [r0, #0x4]
	bl      Function_600029c
	b       branch_6001a8c
@ 0x6000eac

.arm
branch_6000eac: @ 6000eac :arm
	ldrh    r0, [r8, #0xc2]
	cmp     r0, #0x0
	beq     branch_6001a8c
	bl      Function_6000294
	mov     r1, #0xc
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0x8
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_6001a8c
@ 0x6000edc

.arm
branch_6000edc: @ 6000edc :arm
	ldrh    r0, [r8, #0xc2]
	cmp     r0, #0x0
	beq     branch_6001a8c
	bl      Function_6000294
	mov     r1, #0x8
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0x2
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_6001a8c
@ 0x6000f0c

.arm
branch_6000f0c: @ 6000f0c :arm
	ldrb    r0, [r9, #0x1f]
	bl      Function_6001b38
	ldr     r2, [pc, #0x8a4] @ [0x60017c0] (=0x27fff98)
	ldrh    r1, [r2]
	eor     r0, r0, r1, lsl #1
	eor     r0, r0, r0, lsr #16
	strh    r0, [r2]
	ldrh    r0, [r8]
	cmp     r0, #0x8
	cmpne   r0, #0xa
	bne     branch_6001a8c
	ldrh    r1, [r8, #0xba]
	ldrh    r0, [r9, #0x44]
	cmp     r1, r0
	beq     branch_6000fb0
	bl      Function_60007c0
	movs    r1, r0
	moveq   r0, #0x0
	beq     branch_6000f7c
	mov     r0, #0x25
	str     r0, [r1]
	mov     r0, #0x1
	ldr     r3, [pc, #0x858] @ [0x60017c4] (=0x8002)
	str     r0, [r1, #0x4]
	ldr     r0, [pc, #0x848] @ [0x60017bc] (=0x6018928)
	mov     r2, #0x0
	str     r3, [r1, #0x8]
	bl      Function_6000284
.arm
branch_6000f7c: @ 6000f7c :arm
	cmp     r0, #0x0
	bne     branch_6001a8c
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x8
	strh    r1, [r0, #0x2]
	mov     r1, #0x16
	strh    r1, [r0, #0x4]
	mov     r1, #0x25
	strh    r1, [r0, #0x6]
	bl      Function_600029c
	b       branch_6001a8c
@ 0x6000fb0

.arm
branch_6000fb0: @ 6000fb0 :arm
	ldr     r0, [pc, #0x7fc] @ [0x60017b4] (=0x60198a0)
	ldr     r0, [r0, #0x550]
	ldrh    r0, [r0, #0xc2]
	cmp     r0, #0x0
	beq     branch_6001a8c
	bl      Function_6000294
	mov     r4, r0
	mov     r0, #0x80
	strh    r0, [r4]
	mov     r0, #0x0
	strh    r0, [r4, #0x2]
	mov     r0, #0x10
	strh    r0, [r4, #0x4]
	ldrh    r0, [r9, #0x44]
	strh    r0, [r4, #0x6]
	ldrh    r0, [r8]
	strh    r0, [r4, #0x8]
	ldrh    r0, [r9, #0x16]
	strh    r0, [r4, #0xa]
	cmp     r0, #0x80
	bhi     branch_6001018
	add     r2, r0, #0x1
	add     r0, r9, #0x3c
	add     r1, r4, #0xc
	bic     r2, r2, #0x1
	bl      Function_6001ae0
.arm
branch_6001018: @ 6001018 :arm
	mov     r0, r4
	bl      Function_600029c
	b       branch_6001a8c
@ 0x6001024

.arm
branch_6001024: @ 6001024 :arm
	ldr     r0, [r8, #0x10]
	cmp     r0, #0x0
	beq     branch_6001a8c
	ldrb    r0, [r9, #0x1f]
	bl      Function_6001b38
	bl      Function_60005a0
	bl      Function_600061c
	strh    r0, [r8, #0xbc]
	add     r0, r9, #0x2e
	bl      Function_600031c
	cmp     r0, #0x1
	beq     branch_6001a8c
	ldrh    r1, [r9, #0x16]
	ldr     r0, [pc, #0x768] @ [0x60017c8] (=0x5e4)
	cmp     r1, r0
	bhi     branch_6001a8c
	ldrh    r1, [r8, #0xae]
	add     r0, r9, #0x10
	eor     r1, r1, #0x1
	strh    r1, [r8, #0xae]
	ldrh    r2, [r8, #0xae]
	ldrh    r1, [r9, #0x16]
	add     r2, r8, r2, lsl #2
	ldr     r4, [r2, #0xb0]
	add     r2, r1, #0x2d
	mov     r1, r4
	bic     r2, r2, #0x1
	bl      Function_6000440
	add     r0, r9, #0x28
	add     r1, r4, #0x18
	mov     r2, #0x6
	bl      Function_6000440
	add     r0, r9, #0x2e
	add     r1, r4, #0x1e
	mov     r2, #0x6
	bl      Function_6000440
	bl      Function_6000294
	mov     r1, #0x11
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0xf
	strh    r1, [r0, #0x4]
	str     r4, [r0, #0x8]
	bl      Function_600029c
	b       branch_6001a8c
@ 0x60010dc

.arm
branch_60010dc: @ 60010dc :arm
	ldrb    r0, [r9, #0x1f]
	bl      Function_6001b38
	ldrh    r1, [r8, #0xbe]
	cmp     r1, r0
	strhih  r0, [r8, #0xbe]
	ldr     r0, [r8, #0xc]
	cmp     r0, #0x0
	beq     branch_6001a8c
	ldrh    r0, [r8, #0x60]
	cmp     r0, #0x1
	moveq   r0, #0x0
	streqh  r0, [r8, #0x60]
	ldrh    r0, [r8, #0x70]
	ldrh    r10, [r8, #0x8e]
	eor     r0, r0, #0x1
	strh    r0, [r8, #0x70]
	ldrh    r0, [r8, #0x70]
	ldrh    r1, [r9, #0x16]
	add     r3, r8, r0, lsl #2
	ldrh    r0, [r8, #0x72]
	add     r2, r1, #0x30
	ldr     r4, [r3, #0x74]
	cmp     r0, r2
	movcc   r2, r0
	mov     r1, r4
	add     r0, r9, #0x10
	bl      Function_6000440
	bl      Function_6000720
	ldrh    r1, [r8, #0x84]
	mov     r11, r0
	cmp     r1, #0x1
	mov     r5, #0x0
	bne     branch_600116c
	ldr     r0, [pc, #0x664] @ [0x60017cc] (=0x380ae4c)
	mov     r5, #0x1
	bl      Function_6001ae8
.arm
branch_600116c: @ 600116c :arm
	mov     r7, #0x1
	strh    r7, [r8, #0x84]
	ldrh    r0, [r4, #0xa]
	mov     r12, #0x0
	strh    r0, [r8, #0x82]
	ldrh    r6, [r9, #0x18]
	ldr     r0, [pc, #0x644] @ [0x60017d0] (=0x82ea)
	tst     r6, #2, 20 @ #0x2000
	moveq   r7, #0x0
	strh    r7, [r8, #0x90]
	str     r12, [sp]
	ldrh    r2, [r4, #0xa]
	ldrh    r1, [r4, #0xc]
	sub     r1, r2, r1
	mov     r1, r1, lsl #16
	mov     r1, r1, lsr #16
	add     r1, r1, #0x80
	mov     r1, r1, lsl #4
	umull   r3, r2, r1, r0
	mla     r2, r1, r12, r2
	mov     r1, r1, asr #31
	mla     r2, r1, r0, r2
	mov     r0, r3, lsr #6
	orr     r0, r0, r2, lsl #26
	mov     r3, r2, lsr #6
	mov     r1, r0, lsr #10
	ldr     r0, [pc, #0x5f0] @ [0x60017cc] (=0x380ae4c)
	mov     r2, r3, lsr #10
	orr     r1, r1, r3, lsl #22
	ldr     r3, [pc, #0x5ec] @ [0x60017d4] (=0x6001c60)
	bl      Function_6001af0
	and     r0, r6, #10, 22 @ #0x2800
	cmp     r0, #10, 22 @ #0x2800
	moveq   r1, #0x1
	and     r0, r6, #6, 20 @ #0x6000
	movne   r1, #0x0
	cmp     r0, #6, 20 @ #0x6000
	moveq   r2, #0x1
	movne   r2, #0x0
	cmp     r2, #0x0
	movne   r0, #0x0
	strneh  r0, [r8, #0x8a]
	cmp     r1, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	strh    r0, [r8, #0x8e]
	cmp     r2, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	strh    r0, [r8, #0x8c]
	cmp     r7, #0x0
	beq     branch_6001278
	ldrh    r0, [r4, #0x2c]
	sub     r1, r0, #0x66
	mov     r0, r1, asr #1
	add     r0, r1, r0, lsr #30
	mov     r0, r0, asr #2
	subs    r1, r0, #0x20
	bmi     branch_6001278
	ldrh    r0, [r8, #0x32]
	cmp     r1, #2, 24 @ #0x200
	movgt   r1, #2, 24 @ #0x200
	cmp     r1, r0
	beq     branch_6001278
	mov     r0, r1, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_600092c
.arm
branch_6001278: @ 6001278 :arm
	mov     r0, r11
	bl      Function_6000740
	cmp     r5, #0x0
	beq     branch_60012c4
	cmp     r10, #0x1
	bne     branch_600129c
	mov     r0, r5
	mov     r1, #0x0
	bl      Function_6007660
.arm
branch_600129c: @ 600129c :arm
	bl      Function_6000294
	mov     r1, #0xe
	strh    r1, [r0]
	mov     r1, #0x9
	strh    r1, [r0, #0x2]
	mov     r1, #0xd
	strh    r1, [r0, #0x4]
	mov     r1, #0x0
	str     r1, [r0, #0x8]
	bl      Function_600029c
.arm
branch_60012c4: @ 60012c4 :arm
	cmp     r7, #0x0
	bne     branch_60012f0
	ldrh    r0, [r4, #0x6]
	cmp     r0, #0x2
	bcc     branch_6001a8c
	ldrh    r0, [r4, #0x30]
	tst     r0, #2, 18 @ #0x8000
	movne   r0, #0x1
	moveq   r0, #0x0
	strh    r0, [r8, #0x5e]
	b       branch_6001a8c
@ 0x60012f0

.arm
branch_60012f0: @ 60012f0 :arm
	add     r0, r9, #0x28
	add     r1, r4, #0x18
	mov     r2, #0x6
	bl      Function_6000440
	add     r0, r9, #0x2e
	add     r1, r4, #0x1e
	mov     r2, #0x6
	bl      Function_6000440
	ldrh    r0, [r4, #0x6]
	cmp     r0, #0x2
	bcc     branch_6001380
	sub     r0, r0, #0x2
	strh    r0, [r4, #0x6]
	ldrh    r0, [r4, #0x30]
	tst     r0, #2, 18 @ #0x8000
	movne   r0, #0x1
	moveq   r0, #0x0
	strh    r0, [r8, #0x5e]
	bl      Function_6000294
	mov     r1, #0xe
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0xc
	strh    r1, [r0, #0x4]
	str     r4, [r0, #0x8]
	bl      Function_600029c
	ldrh    r3, [r4, #0x6]
	cmp     r3, #0x0
	beq     branch_60013ac
	str     r4, [sp]
	ldrh    r1, [r4, #0x30]
	add     r2, r4, #0x32
	mov     r0, #0x0
	bl      Function_6007b84
	b       branch_60013ac
@ 0x6001380

.arm
branch_6001380: @ 6001380 :arm
	mov     r0, #0x0
	strh    r0, [r4, #0x6]
	strh    r0, [r8, #0x5e]
	bl      Function_6000294
	mov     r1, #0xe
	strh    r1, [r0]
	strh    r1, [r0, #0x2]
	mov     r1, #0xc
	strh    r1, [r0, #0x4]
	str     r4, [r0, #0x8]
	bl      Function_600029c
.arm
branch_60013ac: @ 60013ac :arm
	ldr     r0, [r8, #0x7bc]
	ldr     r1, [r8, #0x7b8]
	cmp     r0, #0x0
	cmpeq   r1, #0x0
	beq     branch_6001a8c
	bl      Function_6001ad8
	orr     r0, r0, #0x1
	str     r0, [r8, #0x738]
	orr     r0, r1, #0x0
	str     r0, [r8, #0x73c]
	b       branch_6001a8c
@ 0x60013d8

.arm
branch_60013d8: @ 60013d8 :arm
	ldr     r0, [r8, #0xc]
	mov     r11, #0x0
	cmp     r0, #0x0
	beq     branch_6001a8c
	ldrh    r0, [r9, #0x12]
	cmp     r0, #0x0
	bne     branch_600140c
	ldrh    r1, [r8, #0x66]
	cmp     r1, #0x1
	bne     branch_6001414
	ldrh    r0, [r9, #0x10]
	cmp     r0, #0x0
	beq     branch_6001414
.arm
branch_600140c: @ 600140c :arm
	bl      Function_6001b4c
	b       branch_6001a8c
@ 0x6001414

.arm
branch_6001414: @ 6001414 :arm
	cmp     r1, #0x0
	movne   r0, #0x0
	strneh  r0, [r8, #0x66]
	ldrh    r1, [r9, #0x16]
	ldrh    r0, [r9, #0x14]
	ldrh    r3, [r8, #0x70]
	mul     r2, r1, r0
	add     r1, r8, r3, lsl #2
	ldr     r4, [r1, #0x74]
	ldrh    r0, [r8, #0x72]
	add     r2, r2, #0xa
	cmp     r0, r2
	movcc   r2, r0
	mov     r1, r4
	add     r0, r9, #0x10
	bl      Function_6000440
	ldr     r0, [pc, #0x358] @ [0x60017b4] (=0x60198a0)
	ldrh    r1, [r4]
	ldr     r7, [r0, #0x550]
	cmp     r1, #0x0
	ldrh    r5, [r7, #0xbe]
	bne     branch_60014b0
	ldrh    r0, [r9, #0x14]
	cmp     r0, #0x1
	bcc     branch_60014b0
	add     r10, r9, #0x1a
	mov     r6, #0x0
	b       branch_60014a0
@ 0x6001484

.arm
branch_6001484: @ 6001484 :arm
	ldrh    r1, [r9, #0x16]
	mla     r0, r1, r6, r10
	ldrb    r0, [r0, #0x3]
	bl      Function_6001b38
	cmp     r0, r5
	movcc   r5, r0
	add     r6, r6, #0x1
.arm
branch_60014a0: @ 60014a0 :arm
	ldrh    r0, [r9, #0x14]
	cmp     r6, r0
	blt     branch_6001484
	strh    r5, [r7, #0xbe]
.arm
branch_60014b0: @ 60014b0 :arm
	bl      Function_6001ad8
	orr     r0, r0, #0x1
	str     r0, [sp, #0x8]
	ldr     r0, [pc, #0x314] @ [0x60017d8] (=0x8001)
	orr     r1, r1, #0x0
	rsb     r0, r0, #6, 18 @ #0x18000
	ldrh    r6, [r4]
	str     r1, [sp, #0xc]
	add     r5, r4, #0xa
	mov     r10, #0x0
	str     r0, [sp, #0x10]
	b       branch_6001648
@ 0x60014e0

.arm
branch_60014e0: @ 60014e0 :arm
	ldrh    r7, [r5, #0x4]
	ldrh    r1, [r5]
	cmp     r7, #0x1
	bcc     branch_6001634
	cmp     r7, #0xf
	bhi     branch_6001634
	cmp     r1, #0x2
	bcc     branch_600155c
	ldr     r0, [sp, #0x10]
	cmp     r1, r0
	beq     branch_600155c
	sub     r0, r1, #0x2
	mov     r0, r0, lsl #16
	movs    r3, r0, lsr #16
	strh    r3, [r5]
	ldrh    r2, [r8, #0x86]
	mov     r1, #0x1
	orr     r1, r2, r1, lsl r7
	strh    r1, [r8, #0x86]
	ldr     r1, [sp, #0x8]
	add     r0, r8, r7, lsl #3
	str     r1, [r0, #0x738]
	ldr     r1, [sp, #0xc]
	str     r1, [r0, #0x73c]
	beq     branch_6001634
	mov     r0, r7
	str     r4, [sp]
	ldrh    r1, [r5, #0x8]
	add     r2, r5, #0xa
	bl      Function_6007b84
	b       branch_6001634
@ 0x600155c

.arm
branch_600155c: @ 600155c :arm
	cmp     r1, #0x0
	bne     branch_6001634
	add     r0, r8, r7, lsl #3
	ldr     r2, [r0, #0x738]
	ldr     r1, [r0, #0x73c]
	mov     r0, #0x1
	mov     r0, r0, lsl r7
	str     r0, [sp, #0x4]
	mov     r0, #0x1
	orr     r6, r6, r0, lsl r7
	ldr     r12, [r8, #0x7bc]
	ldr     r0, [r8, #0x7b8]
	cmp     r12, #0x0
	mov     r3, #0x0
	cmpeq   r0, #0x0
	beq     branch_6001634
	cmp     r1, r3
	cmpeq   r2, r3
	beq     branch_6001634
	ldr     r3, [sp, #0x8]
	subs    r3, r3, r2
	ldr     r2, [sp, #0xc]
	sbc     r1, r2, r1
	cmp     r1, r12
	cmpeq   r3, r0
	bls     branch_6001634
	bl      Function_60007c0
	movs    r1, r0
	add     r2, r8, r7, lsl #3
	mov     r0, #0x0
	str     r0, [r2, #0x738]
	str     r0, [r2, #0x73c]
	beq     branch_6001604
	mov     r0, #0x25
	str     r0, [r1]
	ldr     r0, [sp, #0x4]
	mov     r2, #0x0
	str     r0, [r1, #0x4]
	ldr     r0, [pc, #0x1dc] @ [0x60017d8] (=0x8001)
	str     r0, [r1, #0x8]
	ldr     r0, [pc, #0x1b8] @ [0x60017bc] (=0x6018928)
	bl      Function_6000284
.arm
branch_6001604: @ 6001604 :arm
	cmp     r0, #0x0
	bne     branch_6001634
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x8
	strh    r1, [r0, #0x2]
	mov     r1, #0x16
	strh    r1, [r0, #0x4]
	mov     r1, #0x25
	strh    r1, [r0, #0x6]
	bl      Function_600029c
.arm
branch_6001634: @ 6001634 :arm
	add     r0, r10, #0x1
	mov     r0, r0, lsl #16
	mov     r10, r0, lsr #16
	ldrh    r0, [r4, #0x6]
	add     r5, r5, r0
.arm
branch_6001648: @ 6001648 :arm
	ldrh    r0, [r4, #0x4]
	cmp     r10, r0
	bcc     branch_60014e0
	mov     r0, r6, lsl #16
	mov     r1, r0, lsr #16
	mov     r0, #0x0
	bl      Function_6007660
	ldrh    r0, [r4]
	cmp     r0, #0x0
	movne   r11, #0x1
	bl      Function_6000294
	mov     r1, #0xe
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0xb
	strh    r1, [r0, #0x4]
	str     r4, [r0, #0x8]
	bl      Function_600029c
	ldrh    r0, [r8, #0x70]
	eor     r0, r0, #0x1
	strh    r0, [r8, #0x70]
	bl      Function_6000720
	cmp     r11, #0x0
	ldreqsh r1, [r8, #0x62]
	subeq   r1, r1, #0x1
	streqh  r1, [r8, #0x62]
	ldrsh   r1, [r8, #0x64]
	cmp     r1, #0x0
	subgt   r1, r1, #0x1
	strgth  r1, [r8, #0x64]
	ldrsh   r1, [r8, #0x62]
	cmp     r1, #0x0
	ldrgtsh r1, [r8, #0x64]
	cmpgt   r1, #0x0
	movgt   r4, #0x1
	movle   r4, #0x0
	bl      Function_6000740
	cmp     r4, #0x0
	beq     branch_6001a8c
	cmp     r11, #0x1
	ldreqh  r4, [r9, #0x10]
	ldrh    r0, [r8, #0x44]
	ldrne   r4, [pc, #0xe0] @ [0x60017dc] (=0xffff)
	cmp     r0, #0x0
	beq     branch_6001724
	ldr     r0, [pc, #0xd8] @ [0x60017e0] (=0x380ae78)
	bl      Function_6001ae8
	str     r4, [sp]
	ldr     r1, [r8, #0x48]
	ldr     r2, [r8, #0x4c]
	ldr     r0, [pc, #0xc4] @ [0x60017e0] (=0x380ae78)
	ldr     r3, [pc, #0xc4] @ [0x60017e4] (=0x6001bcc)
	bl      Function_6001af0
	b       branch_6001a8c
@ 0x6001724

.arm
branch_6001724: @ 6001724 :arm
	mov     r0, r4
	bl      Function_6001be0
	b       branch_6001a8c
@ 0x6001730

.arm
branch_6001730: @ 6001730 :arm
	ldr     r0, [r8, #0xc]
	mov     r5, #0x0
	cmp     r0, #0x0
	beq     branch_6001a8c
	ldrh    r0, [r9, #0xe]
	cmp     r0, #0x0
	bne     branch_6001790
	ldr     r1, [pc, #0x94] @ [0x60017e8] (=0x48080f8)
	mov     r4, #0x1
	ldrh    r0, [r1]
	ldrh    r3, [r1, #0x2]
	ldrh    r2, [r1]
	cmp     r0, r2
	ldrhih  r3, [r1, #0x2]
	mov     r0, r2, asr #4
	orr     r0, r0, r3, lsl #12
	ldrh    r1, [r8, #0x82]
	mov     r0, r0, lsl #16
	rsb     r0, r1, r0, lsr #16
	mov     r0, r0, lsl #16
	mov     r0, r0, asr #16
	cmp     r0, #0x0
	ble     branch_6001a8c
	b       branch_6001794
@ 0x6001790

.arm
branch_6001790: @ 6001790 :arm
	mov     r4, r5
.arm
branch_6001794: @ 6001794 :arm
	bl      Function_6000720
	ldrh    r1, [r8, #0x84]
	mov     r7, r0
	cmp     r1, #0x0
	bne     branch_60017ec
	bl      Function_6000740
	b       branch_6001a8c
@ 0x60017b0

.word 0x60188a0 @ 0x60017b0
.word 0x60198a0 @ 0x60017b4
.word 0x182 @ 0x60017b8
.word 0x6018928 @ 0x60017bc
.word 0x27fff98 @ 0x60017c0
.word 0x8002 @ 0x60017c4
.word 0x5e4 @ 0x60017c8
.word 0x380ae4c @ 0x60017cc
.word 0x82ea @ 0x60017d0
.word 0x6001c60 @ 0x60017d4
.word 0x8001 @ 0x60017d8
.word 0xffff @ 0x60017dc
.word 0x380ae78 @ 0x60017e0
.word Function_6001bcc @ =0x6001bcc, 0x60017e4
.word 0x48080f8 @ 0x60017e8
.arm
branch_60017ec: @ 60017ec :arm
	ldr     r0, [pc, #-0x28] @ [0x60017cc] (=0x380ae4c)
	mov     r1, #0x0
	strh    r1, [r8, #0x84]
	ldrh    r6, [r8, #0x90]
	bl      Function_6001ae8
	mov     r0, r7
	bl      Function_6000740
	ldrh    r3, [r8, #0x8c]
	mov     r2, #0x1
	cmp     r3, #0x0
	beq     branch_6001838
	cmp     r4, #0x0
	bne     branch_6001834
	add     r0, r8, #1, 24 @ #0x100
	ldrh    r1, [r9, #0x3e]
	ldrh    r0, [r0, #0x88]
	tst     r1, r2, lsl r0
	bne     branch_6001838
.arm
branch_6001834: @ 6001834 :arm
	mov     r2, #0x0
.arm
branch_6001838: @ 6001838 :arm
	cmp     r3, #0x0
	movne   r0, #0x0
	strneh  r0, [r8, #0x8c]
	ldrh    r0, [r8, #0x8e]
	cmp     r0, #0x0
	beq     branch_6001874
	mov     r0, #0x0
	strh    r0, [r8, #0x8e]
	cmp     r2, #0x0
	movne   r0, #0x1
	mov     r1, r0, lsl #16
	mov     r0, r4
	mov     r1, r1, lsr #16
	bl      Function_6007660
	mov     r5, r0
.arm
branch_6001874: @ 6001874 :arm
	cmp     r6, #0x0
	beq     branch_6001a8c
	bl      Function_6000294
	mov     r7, r0
	mov     r0, #0xe
	strh    r0, [r7]
	cmp     r4, #0x0
	movne   r0, #0x9
	strneh  r0, [r7, #0x2]
	bne     branch_60018c0
	add     r0, r8, #1, 24 @ #0x100
	ldrh    r2, [r9, #0x3e]
	ldrh    r0, [r0, #0x88]
	mov     r1, #0x1
	tst     r2, r1, lsl r0
	movne   r0, #0xf
	strneh  r0, [r7, #0x2]
	moveq   r0, #0x0
	streqh  r0, [r7, #0x2]
.arm
branch_60018c0: @ 60018c0 :arm
	mov     r0, #0xd
	strh    r0, [r7, #0x4]
	mov     r0, #0x0
	str     r0, [r7, #0x8]
	cmp     r4, #0x0
	bne     branch_6001920
	ldrh    r1, [r9, #0x1c]
	add     r0, r9, #0x28
	strh    r1, [r7, #0xc]
	ldrh    r2, [r9, #0x1e]
	add     r1, r7, #0x10
	strh    r2, [r7, #0xe]
	mov     r2, #0x6
	bl      Function_6000440
	add     r0, r9, #0x2e
	add     r1, r7, #0x16
	mov     r2, #0x6
	bl      Function_6000440
	ldrh    r0, [r9, #0x3a]
	strh    r0, [r7, #0x1c]
	ldrh    r0, [r9, #0x3c]
	strh    r0, [r7, #0x1e]
	ldrh    r0, [r9, #0x3e]
	strh    r0, [r7, #0x20]
.arm
branch_6001920: @ 6001920 :arm
	mov     r0, r7
	bl      Function_600029c
	cmp     r6, #0x0
	beq     branch_6001a8c
	cmp     r5, #0x1
	ldrneh  r0, [r8, #0x5e]
	cmpne   r0, #0x0
	bne     branch_600197c
	ldrh    r0, [r8, #0x46]
	cmp     r0, #0x0
	beq     branch_6001974
	ldr     r0, [pc, #-0x174] @ [0x60017e0] (=0x380ae78)
	bl      Function_6001ae8
	mov     r0, #0x0
	str     r0, [sp]
	ldr     r1, [r8, #0x50]
	ldr     r2, [r8, #0x54]
	ldr     r0, [pc, #-0x18c] @ [0x60017e0] (=0x380ae78)
	ldr     r3, [pc, #0x14c] @ [0x6001abc] (=0x6001d00)
	bl      Function_6001af0
	b       branch_6001a8c
@ 0x6001974

.arm
branch_6001974: @ 6001974 :arm
	bl      Function_6001d0c
	b       branch_6001a8c
@ 0x600197c

.arm
branch_600197c: @ 600197c :arm
	mov     r1, #0x0
	strh    r1, [r8, #0x5e]
	mov     r0, #0x1
	strh    r0, [r8, #0x60]
	strh    r1, [r8, #0x88]
	b       branch_6001a8c
@ 0x6001994

.arm
branch_6001994: @ 6001994 :arm
	add     r0, r8, #7, 24 @ #0x700
	ldrh    r0, [r0, #0xcc]
	cmp     r0, #0x1
	ldreqh  r0, [r9, #0x10]
	cmpeq   r0, #0x20
	bne     branch_6001a08
	bl      Function_6000720
	mov     r4, r0
	ldr     r0, [pc, #-0x1f0] @ [0x60017cc] (=0x380ae4c)
	bl      Function_6001ae8
	mov     r1, #0x0
	mov     r0, r4
	strh    r1, [r8, #0x84]
	bl      Function_6000740
	mov     r1, #0x0
	strh    r1, [r8, #0x8a]
	mov     r0, #0x1
	bl      Function_6007660
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0x17
	strh    r1, [r0, #0x4]
	mov     r1, #0x1
	strh    r1, [r0, #0x6]
	bl      Function_600029c
	b       branch_6001a8c
@ 0x6001a08

.arm
branch_6001a08: @ 6001a08 :arm
	bl      Function_60007c0
	movs    r1, r0
	moveq   r0, #0x0
	beq     branch_6001a5c
	ldr     r0, [pc, #0xa0] @ [0x6001ac0] (=0x8003)
	mov     r2, #0x25
	str     r2, [r1]
	str     r0, [r1, #0x8]
	ldrh    r0, [r8]
	cmp     r0, #0x9
	cmpne   r0, #0x7
	ldreq   r0, [pc, #0x88] @ [0x6001ac4] (=0x7ffe)
	streq   r0, [r1, #0x4]
	beq     branch_6001a50
	cmp     r0, #0xa
	cmpne   r0, #0x8
	moveq   r0, #0x1
	streq   r0, [r1, #0x4]
.arm
branch_6001a50: @ 6001a50 :arm
	ldr     r0, [pc, #-0x29c] @ [0x60017bc] (=0x6018928)
	mov     r2, #0x0
	bl      Function_6000284
.arm
branch_6001a5c: @ 6001a5c :arm
	cmp     r0, #0x0
	bne     branch_6001a8c
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x8
	strh    r1, [r0, #0x2]
	mov     r1, #0x16
	strh    r1, [r0, #0x4]
	mov     r1, #0x25
	strh    r1, [r0, #0x6]
	bl      Function_600029c
.arm
branch_6001a8c: @ 6001a8c :arm
	mov     r0, r9
	bl      Function_6001af8
	b       branch_6000960
@ 0x6001a98

.arm
branch_6001a98: @ 6001a98 :arm
	ldr     r0, [pc, #-0x2f0] @ [0x60017b0] (=0x60188a0)
	mov     r1, r9
	add     r0, r0, #0x58
	mov     r2, #0x1
	bl      Function_6000284
	b       branch_6000960
@ 0x6001ab0

.arm
branch_6001ab0: @ 6001ab0 :arm
	add     sp, sp, #0x20
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x6001abc

.word Function_6001d00 @ =0x6001d00, 0x6001abc
.word 0x8003 @ 0x6001ac0
.word 0x7ffe @ 0x6001ac4
.arm
Function_6001ac8: @ 6001ac8 :arm
	ldr     pc, [pc, #-0x4] @ [0x6001acc] (=0x37f91b8)
@ 0x6001acc

.word 0x37f91b8 @ 0x6001acc
.arm
Function_6001ad0: @ 6001ad0 :arm
	ldr     pc, [pc, #-0x4] @ [0x6001ad4] (=0x37fb16c)
@ 0x6001ad4

.word 0x37fb16c @ 0x6001ad4
.arm
Function_6001ad8: @ 6001ad8 :arm
	ldr     pc, [pc, #-0x4] @ [0x6001adc] (=0x37fa2c0)
@ 0x6001adc

.word 0x37fa2c0 @ 0x6001adc
.arm
Function_6001ae0: @ 6001ae0 :arm
	ldr     pc, [pc, #-0x4] @ [0x6001ae4] (=0x37fb040)
@ 0x6001ae4

.word 0x37fb040 @ 0x6001ae4
.arm
Function_6001ae8: @ 6001ae8 :arm
	ldr     pc, [pc, #-0x4] @ [0x6001aec] (=0x37fa664)
@ 0x6001aec

.word 0x37fa664 @ 0x6001aec
.arm
Function_6001af0: @ 6001af0 :arm
	ldr     pc, [pc, #-0x4] @ [0x6001af4] (=0x37fa580)
@ 0x6001af4

.word 0x37fa580 @ 0x6001af4
.arm
Function_6001af8: @ 6001af8 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	bl      Function_6000720
	ldr     r1, [pc, #0x20] @ [0x6001b2c] (=0x60198a0)
	mov     r4, r0
	ldr     r0, [r1, #0x544]
	ldr     r1, [r1, #0x548]
	mov     r2, r5
	bl      Function_6001b30
	mov     r0, r4
	bl      Function_6000740
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6001b2c

.word 0x60198a0 @ 0x6001b2c
.arm
Function_6001b30: @ 6001b30 :arm
	ldr     pc, [pc, #-0x4] @ [0x6001b34] (=0x37f9e28)
@ 0x6001b34

.word 0x37f9e28 @ 0x6001b34
.arm
Function_6001b38: @ 6001b38 :arm
	tst     r0, #0x2
	mov     r0, r0, asr #2
	addeq   r0, r0, #0x19
	and     r0, r0, #0xff
	bx      lr
@ 0x6001b4c

.arm
Function_6001b4c: @ 6001b4c :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x6c] @ [0x6001bc4] (=0x60198a0)
	ldr     r4, [r0, #0x550]
	bl      Function_60007c0
	movs    r1, r0
	moveq   r0, #0x0
	beq     branch_6001b84
	mov     r0, #0x2d
	str     r0, [r1]
	ldrh    r3, [r4, #0x68]
	ldr     r0, [pc, #0x4c] @ [0x6001bc8] (=0x6018928)
	mov     r2, #0x0
	str     r3, [r1, #0x4]
	bl      Function_6000284
.arm
branch_6001b84: @ 6001b84 :arm
	cmp     r0, #0x0
	movne   r0, #0x1
	strneh  r0, [r4, #0x66]
	bne     branch_6001bbc
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x8
	strh    r1, [r0, #0x2]
	mov     r1, #0x16
	strh    r1, [r0, #0x4]
	mov     r1, #0x2d
	strh    r1, [r0, #0x6]
	bl      Function_600029c
.arm
branch_6001bbc: @ 6001bbc :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6001bc4

.word 0x60198a0 @ 0x6001bc4
.word 0x6018928 @ 0x6001bc8
.arm
Function_6001bcc: @ 6001bcc :arm
	ldr     r12, [pc, #0x8] @ [0x6001bdc] (=0x6001be0)
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bx      r12
@ 0x6001bdc

.word 0x6001be0 @ 0x6001bdc
.arm
Function_6001be0: @ 6001be0 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	bl      Function_60007c0
	movs    r1, r0
	ldr     r4, [pc, #0x64] @ [0x6001c5c] (=0x60188a0)
	moveq   r0, #0x0
	beq     branch_6001c14
	mov     r0, #0x2b
	str     r0, [r1]
	add     r0, r4, #0x88
	mov     r2, #0x0
	str     r5, [r1, #0x4]
	bl      Function_6000284
.arm
branch_6001c14: @ 6001c14 :arm
	cmp     r0, #0x0
	bne     branch_6001c54
	add     r0, r4, #1, 20 @ #0x1000
	ldr     r0, [r0, #0x54c]
	cmp     r0, #0x0
	beq     branch_6001c54
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x8
	strh    r1, [r0, #0x2]
	mov     r1, #0x16
	strh    r1, [r0, #0x4]
	mov     r1, #0x2b
	strh    r1, [r0, #0x6]
	bl      Function_600029c
.arm
branch_6001c54: @ 6001c54 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6001c5c

.word 0x60188a0 @ 0x6001c5c
.arm
Function_6001c60: @ 6001c60 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0x7c] @ [0x6001ce8] (=0x60198a0)
	mov     r2, #0x40
	ldr     r0, [r1, #0x544]
	ldr     r1, [r1, #0x548]
	ldr     r5, [pc, #0x70] @ [0x6001cec] (=0x60188a0)
	bl      Function_6001cf8
	mov     r4, r0
	ldr     r1, [pc, #0x68] @ [0x6001cf0] (=0x185)
	ldr     r0, [pc, #0x68] @ [0x6001cf4] (=0x60188c8)
	strh    r1, [r4, #0xc]
	mov     r2, #0x0
	mov     r1, r4
	strh    r2, [r4, #0xe]
	bl      Function_6000284
	cmp     r0, #0x0
	bne     branch_6001ce0
	mov     r0, r4
	bl      Function_6001af8
	add     r0, r5, #1, 20 @ #0x1000
	ldr     r0, [r0, #0x54c]
	cmp     r0, #0x0
	beq     branch_6001ce0
	bl      Function_6000294
	mov     r2, #0x80
	strh    r2, [r0]
	mov     r1, #0x8
	strh    r1, [r0, #0x2]
	mov     r1, #0x16
	strh    r1, [r0, #0x4]
	strh    r2, [r0, #0x6]
	bl      Function_600029c
.arm
branch_6001ce0: @ 6001ce0 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6001ce8

.word 0x60198a0 @ 0x6001ce8
.word 0x60188a0 @ 0x6001cec
.word 0x185 @ 0x6001cf0
.word 0x60188c8 @ 0x6001cf4
.arm
Function_6001cf8: @ 6001cf8 :arm
	ldr     pc, [pc, #-0x4] @ [0x6001cfc] (=0x37f9d18)
@ 0x6001cfc

.word 0x37f9d18 @ 0x6001cfc
.arm
Function_6001d00: @ 6001d00 :arm
	ldr     r12, [pc, #0x0] @ [0x6001d08] (=0x6001d0c)
	bx      r12
@ 0x6001d08

.word 0x6001d0c @ 0x6001d08
.arm
Function_6001d0c: @ 6001d0c :arm
	stmfd   sp!, {r4,lr}
	bl      Function_60007c0
	ldr     r2, [pc, #0x78] @ [0x6001d94] (=0x60198a0)
	movs    r1, r0
	ldr     r0, [r2, #0x550]
	mov     r2, #0x0
	strh    r2, [r0, #0x5e]
	strh    r2, [r0, #0x60]
	ldr     r4, [pc, #0x64] @ [0x6001d98] (=0x60188a0)
	strh    r2, [r0, #0x88]
	beq     branch_6001d4c
	mov     r3, #0x2c
	add     r0, r4, #0x88
	str     r3, [r1]
	bl      Function_6000284
	mov     r2, r0
.arm
branch_6001d4c: @ 6001d4c :arm
	cmp     r2, #0x0
	bne     branch_6001d8c
	add     r0, r4, #1, 20 @ #0x1000
	ldr     r0, [r0, #0x54c]
	cmp     r0, #0x0
	beq     branch_6001d8c
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x8
	strh    r1, [r0, #0x2]
	mov     r1, #0x16
	strh    r1, [r0, #0x4]
	mov     r1, #0x2c
	strh    r1, [r0, #0x6]
	bl      Function_600029c
.arm
branch_6001d8c: @ 6001d8c :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6001d94

.word 0x60198a0 @ 0x6001d94
.word 0x60188a0 @ 0x6001d98
.arm
Function_6001d9c: @ 6001d9c :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x10] @ [0x6001db8] (=0x380ae78)
	bl      Function_6001dc0
	ldr     r0, [pc, #0xc] @ [0x6001dbc] (=0x380ae4c)
	bl      Function_6001dc0
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6001db8

.word 0x380ae78 @ 0x6001db8
.word 0x380ae4c @ 0x6001dbc
.arm
Function_6001dc0: @ 6001dc0 :arm
	ldr     pc, [pc, #-0x4] @ [0x6001dc4] (=0x37fa444)
@ 0x6001dc4

.word 0x37fa444 @ 0x6001dc4
.arm
Function_6001dc8: @ 6001dc8 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x10] @ [0x6001de4] (=0x380ae78)
	bl      Function_6001ae8
	ldr     r0, [pc, #0xc] @ [0x6001de8] (=0x380ae4c)
	bl      Function_6001ae8
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6001de4

.word 0x380ae78 @ 0x6001de4
.word 0x380ae4c @ 0x6001de8



.arm
Function_6001dec: @ 6001dec :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r0, [pc, #0x8c] @ [0x6001e84] (=0x60198a0)
	mov     r6, #0x1
	ldr     r8, [pc, #0x88] @ [0x6001e88] (=0x60188a0)
	ldr     r9, [r0, #0x550]
	ldr     r5, [pc, #0x84] @ [0x6001e8c] (=Jumptable_60181ac)
	add     r7, sp, #0x0
	mov     r4, #0x0
	mov     r11, r6
branch_6001e10: @ 6001e10 :arm
	mov     r1, r7
	mov     r2, r11
	add     r0, r8, #0x88
	bl      Function_600028c
	ldr     r0, [sp]
	cmp     r0, #0x0
	bne     branch_6001e34
	bl      Function_6001ac8
	b       branch_6001e7c
@ 0x6001e34

.arm
branch_6001e34: @ 6001e34 :arm
	ldrh    r10, [r0]
	tst     r10, #2, 18 @ #0x8000
	bicne   r0, r10, #2, 18 @ #0x8000
	movne   r0, r0, lsl #16
	movne   r10, r0, lsr #16
	cmp     r10, #0x2e
	bcs     branch_6001e6c
	str     r6, [r9, #0x4]
	strh    r10, [r9, #0x2]
	ldr     r0, [sp]
	ldr     r1, [r5, r10, lsl #0x2]
	mov     lr, pc
	bx      r1
@ 0x6001e68

.arm
Function_6001e68: @ 6001e68 :arm
	str     r4, [r9, #0x4]
.arm
branch_6001e6c: @ 6001e6c :arm
	ldr     r0, [sp]
	orr     r1, r10, #2, 18 @ #0x8000
	strh    r1, [r0]
	b       branch_6001e10

branch_6001e7c: @ 6001e7c :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x6001e84

.word 0x60198a0 @ 0x6001e84
.word 0x60188a0 @ 0x6001e88
.word Jumptable_60181ac @ 0x6001e8c



.arm
Function_6001e90: @ 6001e90 :arm
	bx      lr
@ 0x6001e94


.arm
Function_6001e94: @ 6001e94 :arm
	stmfd   sp!, {r4,lr}
	mov     r2, #0x0
	strh    r2, [r0]
	strh    r2, [r0, #0x2]
	strh    r2, [r0, #0x4]
	strh    r2, [r0, #0x6]
	strh    r2, [r0, #0x8]
	strh    r2, [r0, #0xa]
	strh    r2, [r0, #0xc]
	mov     r3, #0x1
	strh    r3, [r0, #0xe]
	strh    r1, [r0, #0x10]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	strh    r3, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6001ee8

.arm
Function_6001ee8: @ 6001ee8 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, #0x0
	strh    r4, [r0]
	strh    r4, [r0, #0x2]
	strh    r4, [r0, #0x4]
	strh    r4, [r0, #0x6]
	strh    r4, [r0, #0x8]
	strh    r4, [r0, #0xa]
	mov     r12, #0x1
	strh    r12, [r0, #0xc]
	mov     r4, #0x3
	strh    r4, [r0, #0xe]
	strh    r1, [r0, #0x10]
	strh    r2, [r0, #0x12]
	strh    r3, [r0, #0x14]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	strh    r12, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6001f48

.arm
Function_6001f48: @ 6001f48 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r4, r0
	mov     r0, #0x0
	strh    r0, [r4]
	strh    r0, [r4, #0x2]
	strh    r0, [r4, #0x4]
	strh    r0, [r4, #0x6]
	strh    r0, [r4, #0x8]
	strh    r0, [r4, #0xa]
	mov     r5, #0x2
	mov     r7, r1
	mov     r0, r2
	strh    r5, [r4, #0xc]
	mov     r5, #0x1f
	add     r1, r4, #0x10
	mov     r2, #0x6
	mov     r6, r3
	strh    r5, [r4, #0xe]
	bl      Function_6001ae0
	ldr     r0, [sp, #0x18]
	add     r1, r4, #0x18
	mov     r2, #0x20
	strh    r6, [r4, #0x16]
	bl      Function_6001ae0
	ldrh    r2, [sp, #0x1c]
	ldr     r0, [sp, #0x20]
	add     r1, r4, #0x3a
	strh    r2, [r4, #0x38]
	mov     r2, #0x10
	bl      Function_6001ae0
	ldrh    r1, [sp, #0x24]
	mov     r0, r7, lsr #1
	strh    r1, [r4, #0x4a]
	mov     r1, #0x0
	strh    r1, [r4, #0x4c]
	ldrh    r2, [r4, #0xe]
	ldrh    r1, [r4, #0xc]
	add     r5, r4, r2, lsl #1
	strh    r1, [r5, #0x10]
	sub     r1, r0, #0x2c
	mov     r0, r4
	strh    r1, [r5, #0x12]
	bl      Function_600020c
	add     r0, r5, #0x10
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6002000

.arm
Function_6002000: @ 6002000 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	mov     r3, #0x0
	strh    r3, [r4]
	strh    r3, [r4, #0x2]
	strh    r3, [r4, #0x4]
	strh    r3, [r4, #0x6]
	strh    r3, [r4, #0x8]
	strh    r3, [r4, #0xa]
	mov     r0, #0x3
	strh    r0, [r4, #0xc]
	mov     r0, #0x22
	strh    r0, [r4, #0xe]
	strh    r1, [r4, #0x10]
	mov     r0, r2
	strh    r3, [r4, #0x12]
	add     r1, r4, #0x14
	mov     r2, #0x44
	bl      Function_6001ae0
	ldrh    r1, [r4, #0xe]
	ldrh    r0, [r4, #0xc]
	add     r5, r4, r1, lsl #1
	strh    r0, [r5, #0x10]
	mov     r1, #0x5
	mov     r0, r4
	strh    r1, [r5, #0x12]
	bl      Function_600020c
	add     r0, r5, #0x10
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6002078

.arm
Function_6002078: @ 6002078 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r4, r0
	mov     r0, #0x0
	strh    r0, [r4]
	strh    r0, [r4, #0x2]
	strh    r0, [r4, #0x4]
	strh    r0, [r4, #0x6]
	strh    r0, [r4, #0x8]
	strh    r0, [r4, #0xa]
	mov     r0, #0x4
	strh    r0, [r4, #0xc]
	mov     r5, #0x5
	mov     r6, r2
	mov     r0, r1
	strh    r5, [r4, #0xe]
	add     r1, r4, #0x10
	mov     r2, #0x6
	mov     r5, r3
	bl      Function_6001ae0
	strh    r6, [r4, #0x16]
	strh    r5, [r4, #0x18]
	ldrh    r1, [r4, #0xe]
	ldrh    r0, [r4, #0xc]
	add     r5, r4, r1, lsl #1
	strh    r0, [r5, #0x10]
	mov     r1, #0x6
	mov     r0, r4
	strh    r1, [r5, #0x12]
	bl      Function_600020c
	add     r0, r5, #0x10
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x60020f8

.arm
Function_60020f8: @ 60020f8 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	mov     r0, #0x0
	strh    r0, [r4]
	strh    r0, [r4, #0x2]
	strh    r0, [r4, #0x4]
	strh    r0, [r4, #0x6]
	strh    r0, [r4, #0x8]
	strh    r0, [r4, #0xa]
	mov     r0, #0x5
	strh    r0, [r4, #0xc]
	mov     r3, #0x4
	mov     r5, r2
	mov     r0, r1
	strh    r3, [r4, #0xe]
	add     r1, r4, #0x10
	mov     r2, #0x6
	bl      Function_6001ae0
	strh    r5, [r4, #0x16]
	ldrh    r1, [r4, #0xe]
	ldrh    r0, [r4, #0xc]
	add     r5, r4, r1, lsl #1
	strh    r0, [r5, #0x10]
	mov     r1, #0x4
	mov     r0, r4
	strh    r1, [r5, #0x12]
	bl      Function_600020c
	add     r0, r5, #0x10
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6002170

.arm
Function_6002170: @ 6002170 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r4, r0
	mov     r0, #0x0
	strh    r0, [r4]
	strh    r0, [r4, #0x2]
	strh    r0, [r4, #0x4]
	strh    r0, [r4, #0x6]
	strh    r0, [r4, #0x8]
	mov     r6, r2
	strh    r0, [r4, #0xa]
	mov     r2, #0x6
	mov     r0, r1
	strh    r2, [r4, #0xc]
	mov     r1, #0x5
	strh    r1, [r4, #0xe]
	add     r1, r4, #0x10
	mov     r5, r3
	bl      Function_6001ae0
	strh    r6, [r4, #0x16]
	strh    r5, [r4, #0x18]
	ldrh    r1, [r4, #0xe]
	ldrh    r0, [r4, #0xc]
	add     r5, r4, r1, lsl #1
	strh    r0, [r5, #0x10]
	mov     r1, #0x3
	mov     r0, r4
	strh    r1, [r5, #0x12]
	bl      Function_600020c
	add     r0, r5, #0x10
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x60021ec

.arm
Function_60021ec: @ 60021ec :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	mov     r12, #0x0
	strh    r12, [r4]
	strh    r12, [r4, #0x2]
	strh    r12, [r4, #0x4]
	strh    r12, [r4, #0x6]
	ldrh    r0, [sp, #0x20]
	strh    r12, [r4, #0x8]
	add     r0, r0, #0x1
	add     r0, r0, r0, lsr #31
	mov     r5, r0, asr #1
	mov     r0, r2
	strh    r12, [r4, #0xa]
	mov     r2, #0x9
	strh    r2, [r4, #0xc]
	add     r2, r5, #0x17
	strh    r2, [r4, #0xe]
	strh    r1, [r4, #0x10]
	add     r1, r4, #0x12
	mov     r2, #0x20
	mov     r5, r3
	bl      Function_6001ae0
	ldrh    r1, [sp, #0x10]
	strh    r5, [r4, #0x32]
	ldrh    r0, [sp, #0x14]
	strh    r1, [r4, #0x34]
	ldrh    r1, [sp, #0x18]
	strh    r0, [r4, #0x36]
	ldrh    r0, [sp, #0x1c]
	strh    r1, [r4, #0x38]
	ldrh    r2, [sp, #0x20]
	strh    r0, [r4, #0x3a]
	ldr     r0, [sp, #0x24]
	strh    r2, [r4, #0x3c]
	add     r1, r4, #0x3e
	bl      Function_6001ae0
	ldrh    r1, [r4, #0xe]
	ldrh    r0, [r4, #0xc]
	add     r5, r4, r1, lsl #1
	strh    r0, [r5, #0x10]
	mov     r1, #0x1
	mov     r0, r4
	strh    r1, [r5, #0x12]
	bl      Function_600020c
	add     r0, r5, #0x10
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x60022ac

.arm
Function_60022ac: @ 60022ac :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	mov     r5, #0x0
	strh    r5, [r4]
	strh    r5, [r4, #0x2]
	strh    r5, [r4, #0x4]
	strh    r5, [r4, #0x6]
	strh    r5, [r4, #0x8]
	strh    r5, [r4, #0xa]
	mov     r0, #0xa
	strh    r0, [r4, #0xc]
	mov     r0, #0xc
	strh    r0, [r4, #0xe]
	strh    r5, [r4, #0x10]
	strh    r1, [r4, #0x12]
	strh    r2, [r4, #0x14]
	ldr     r0, [sp, #0x10]
	strh    r3, [r4, #0x16]
	add     r1, r4, #0x18
	mov     r2, #0x10
	bl      Function_6001ae0
	ldrh    r1, [r4, #0xe]
	ldrh    r0, [r4, #0xc]
	add     r5, r4, r1, lsl #1
	strh    r0, [r5, #0x10]
	mov     r1, #0x12
	mov     r0, r4
	strh    r1, [r5, #0x12]
	bl      Function_600020c
	add     r0, r5, #0x10
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600232c

.arm
Function_600232c: @ 600232c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	mov     r0, #0x0
	strh    r0, [r4]
	strh    r0, [r4, #0x2]
	strh    r0, [r4, #0x4]
	strh    r0, [r4, #0x6]
	strh    r0, [r4, #0x8]
	strh    r0, [r4, #0xa]
	mov     r5, r1
	mov     r0, #1, 24 @ #0x100
	strh    r0, [r4, #0xc]
	mov     r1, #0x18
	mov     r0, r5
	strh    r1, [r4, #0xe]
	add     r1, r4, #0x10
	mov     r2, #0x30
	bl      Function_6001ae0
	mov     r0, #0x0
	strh    r0, [r5, #0x2]
	strh    r0, [r5, #0x4]
	strh    r0, [r5, #0x8]
	strh    r0, [r5, #0xa]
	strh    r0, [r5, #0xc]
	strh    r0, [r5, #0x10]
	strh    r0, [r5, #0x12]
	strh    r0, [r5, #0x14]
	strh    r0, [r5, #0x16]
	strh    r0, [r5, #0x24]
	strh    r0, [r5, #0x26]
	strh    r0, [r5, #0x28]
	strh    r0, [r5, #0x2a]
	ldrh    r1, [r4, #0xe]
	ldrh    r0, [r4, #0xc]
	add     r5, r4, r1, lsl #1
	strh    r0, [r5, #0x10]
	mov     r1, #0x2
	mov     r0, r4
	strh    r1, [r5, #0x12]
	bl      Function_600020c
	add     r0, r5, #0x10
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x60023d8

.arm
Function_60023d8: @ 60023d8 :arm
	stmfd   sp!, {r4,lr}
	mov     r12, #0x0
	strh    r12, [r0]
	strh    r12, [r0, #0x2]
	strh    r12, [r0, #0x4]
	strh    r12, [r0, #0x6]
	strh    r12, [r0, #0x8]
	ldr     r4, [pc, #0x40] @ [0x600243c] (=0x101)
	strh    r12, [r0, #0xa]
	strh    r4, [r0, #0xc]
	mov     r4, #0x4
	strh    r4, [r0, #0xe]
	strh    r1, [r0, #0x10]
	strh    r2, [r0, #0x12]
	str     r3, [r0, #0x14]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	mov     r1, #0x1
	strh    r1, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600243c

.word 0x101 @ 0x600243c
.arm
Function_6002440: @ 6002440 :arm
	stmfd   sp!, {r4,lr}
	mov     r12, #0x0
	strh    r12, [r0]
	strh    r12, [r0, #0x2]
	strh    r12, [r0, #0x4]
	strh    r12, [r0, #0x6]
	strh    r12, [r0, #0x8]
	ldr     r4, [pc, #0x70] @ [0x60024d4] (=0x102)
	strh    r12, [r0, #0xa]
	strh    r4, [r0, #0xc]
	mov     r4, #0xa
	strh    r4, [r0, #0xe]
	strh    r1, [r0, #0x10]
	strh    r2, [r0, #0x12]
	ldrh    r2, [sp, #0x8]
	strh    r3, [r0, #0x14]
	ldrh    r1, [sp, #0xc]
	strh    r2, [r0, #0x16]
	ldrh    r2, [sp, #0x10]
	strh    r1, [r0, #0x18]
	ldrh    r1, [sp, #0x14]
	strh    r2, [r0, #0x1a]
	ldrh    r2, [sp, #0x18]
	strh    r1, [r0, #0x1c]
	ldr     r1, [sp, #0x1c]
	strh    r2, [r0, #0x1e]
	str     r1, [r0, #0x20]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	mov     r1, #0x1
	strh    r1, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x60024d4

.word 0x102 @ 0x60024d4
.arm
Function_60024d8: @ 60024d8 :arm
	stmfd   sp!, {r4,lr}
	mov     r2, #0x0
	strh    r2, [r0]
	strh    r2, [r0, #0x2]
	strh    r2, [r0, #0x4]
	strh    r2, [r0, #0x6]
	strh    r2, [r0, #0x8]
	strh    r2, [r0, #0xa]
	mov     r2, #65, 30 @ #0x104
	strh    r2, [r0, #0xc]
	mov     r3, #0x1
	strh    r3, [r0, #0xe]
	strh    r1, [r0, #0x10]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	strh    r3, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6002530

.arm
Function_6002530: @ 6002530 :arm
	stmfd   sp!, {r4,lr}
	mov     r1, #0x0
	strh    r1, [r0]
	strh    r1, [r0, #0x2]
	strh    r1, [r0, #0x4]
	strh    r1, [r0, #0x6]
	strh    r1, [r0, #0x8]
	strh    r1, [r0, #0xa]
	mov     r1, #2, 24 @ #0x200
	mov     r2, #0x48
	strh    r1, [r0, #0xc]
	strh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	mov     r1, #0x1
	strh    r1, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6002584

.arm
Function_6002584: @ 6002584 :arm
	stmfd   sp!, {r4,lr}
	mov     r3, #0x0
	strh    r3, [r0]
	strh    r3, [r0, #0x2]
	strh    r3, [r0, #0x4]
	strh    r3, [r0, #0x6]
	strh    r3, [r0, #0x8]
	ldr     r2, [pc, #0x34] @ [0x60025dc] (=0x207)
	strh    r3, [r0, #0xa]
	strh    r2, [r0, #0xc]
	mov     r3, #0x1
	strh    r3, [r0, #0xe]
	strh    r1, [r0, #0x10]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	strh    r3, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x60025dc

.word 0x207 @ 0x60025dc
.arm
Function_60025e0: @ 60025e0 :arm
	stmfd   sp!, {r4,lr}
	mov     r3, #0x0
	strh    r3, [r0]
	strh    r3, [r0, #0x2]
	strh    r3, [r0, #0x4]
	strh    r3, [r0, #0x6]
	strh    r3, [r0, #0x8]
	ldr     r2, [pc, #0x34] @ [0x6002638] (=0x20b)
	strh    r3, [r0, #0xa]
	strh    r2, [r0, #0xc]
	mov     r3, #0x1
	strh    r3, [r0, #0xe]
	strh    r1, [r0, #0x10]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	strh    r3, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6002638

.word 0x20b @ 0x6002638
.arm
Function_600263c: @ 600263c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	mov     r0, #0x0
	strh    r0, [r4]
	strh    r0, [r4, #0x2]
	strh    r0, [r4, #0x4]
	strh    r0, [r4, #0x6]
	strh    r0, [r4, #0x8]
	ldr     r2, [pc, #0x48] @ [0x60026ac] (=0x20d)
	strh    r0, [r4, #0xa]
	mov     r0, r1
	strh    r2, [r4, #0xc]
	mov     r1, #0x10
	strh    r1, [r4, #0xe]
	add     r1, r4, #0x10
	mov     r2, #0x20
	bl      Function_6001ae0
	ldrh    r1, [r4, #0xe]
	ldrh    r0, [r4, #0xc]
	add     r5, r4, r1, lsl #1
	strh    r0, [r5, #0x10]
	mov     r1, #0x1
	mov     r0, r4
	strh    r1, [r5, #0x12]
	bl      Function_600020c
	add     r0, r5, #0x10
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x60026ac

.word 0x20d @ 0x60026ac
.arm
Function_60026b0: @ 60026b0 :arm
	stmfd   sp!, {r4,lr}
	mov     r3, #0x0
	strh    r3, [r0]
	strh    r3, [r0, #0x2]
	strh    r3, [r0, #0x4]
	strh    r3, [r0, #0x6]
	strh    r3, [r0, #0x8]
	ldr     r2, [pc, #0x34] @ [0x6002708] (=0x20e)
	strh    r3, [r0, #0xa]
	strh    r2, [r0, #0xc]
	mov     r3, #0x1
	strh    r3, [r0, #0xe]
	strh    r1, [r0, #0x10]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	strh    r3, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6002708

.word 0x20e @ 0x6002708
.arm
Function_600270c: @ 600270c :arm
	stmfd   sp!, {r4,lr}
	mov     r12, #0x0
	strh    r12, [r0]
	strh    r12, [r0, #0x2]
	strh    r12, [r0, #0x4]
	strh    r12, [r0, #0x6]
	strh    r12, [r0, #0x8]
	ldr     r4, [pc, #0x40] @ [0x6002770] (=0x211)
	strh    r12, [r0, #0xa]
	strh    r4, [r0, #0xc]
	mov     r4, #0x3
	strh    r4, [r0, #0xe]
	strh    r1, [r0, #0x10]
	strh    r2, [r0, #0x12]
	strh    r3, [r0, #0x14]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	mov     r1, #0x1
	strh    r1, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6002770

.word 0x211 @ 0x6002770
.arm
Function_6002774: @ 6002774 :arm
	stmfd   sp!, {r4,lr}
	mov     r3, #0x0
	strh    r3, [r0]
	strh    r3, [r0, #0x2]
	strh    r3, [r0, #0x4]
	strh    r3, [r0, #0x6]
	strh    r3, [r0, #0x8]
	ldr     r2, [pc, #0x34] @ [0x60027cc] (=0x212)
	strh    r3, [r0, #0xa]
	strh    r2, [r0, #0xc]
	mov     r3, #0x1
	strh    r3, [r0, #0xe]
	strh    r1, [r0, #0x10]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	strh    r3, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x60027cc

.word 0x212 @ 0x60027cc
.arm
Function_60027d0: @ 60027d0 :arm
	stmfd   sp!, {r4,lr}
	mov     r3, #0x0
	strh    r3, [r0]
	strh    r3, [r0, #0x2]
	strh    r3, [r0, #0x4]
	strh    r3, [r0, #0x6]
	strh    r3, [r0, #0x8]
	ldr     r2, [pc, #0x34] @ [0x6002828] (=0x215)
	strh    r3, [r0, #0xa]
	strh    r2, [r0, #0xc]
	mov     r3, #0x1
	strh    r3, [r0, #0xe]
	strh    r1, [r0, #0x10]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	strh    r3, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6002828

.word 0x215 @ 0x6002828
.arm
Function_600282c: @ 600282c :arm
	stmfd   sp!, {r4,lr}
	mov     r3, #0x0
	strh    r3, [r0]
	strh    r3, [r0, #0x2]
	strh    r3, [r0, #0x4]
	strh    r3, [r0, #0x6]
	strh    r3, [r0, #0x8]
	ldr     r2, [pc, #0x34] @ [0x6002884] (=0x216)
	strh    r3, [r0, #0xa]
	strh    r2, [r0, #0xc]
	mov     r3, #0x1
	strh    r3, [r0, #0xe]
	strh    r1, [r0, #0x10]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	strh    r3, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6002884

.word 0x216 @ 0x6002884
.arm
Function_6002888: @ 6002888 :arm
	stmfd   sp!, {r4,lr}
	mov     r3, #0x0
	strh    r3, [r0]
	strh    r3, [r0, #0x2]
	strh    r3, [r0, #0x4]
	strh    r3, [r0, #0x6]
	strh    r3, [r0, #0x8]
	ldr     r2, [pc, #0x34] @ [0x60028e0] (=0x242)
	strh    r3, [r0, #0xa]
	strh    r2, [r0, #0xc]
	mov     r3, #0x1
	strh    r3, [r0, #0xe]
	strh    r1, [r0, #0x10]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	strh    r3, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x60028e0

.word 0x242 @ 0x60028e0
.arm
Function_60028e4: @ 60028e4 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	mov     r12, #0x0
	strh    r12, [r4]
	strh    r12, [r4, #0x2]
	strh    r12, [r4, #0x4]
	strh    r12, [r4, #0x6]
	strh    r12, [r4, #0x8]
	add     r0, r1, #0x1
	add     r0, r0, r0, lsr #31
	mov     r3, r0, asr #1
	mov     r0, r2
	ldr     r5, [pc, #0x48] @ [0x6002964] (=0x245)
	strh    r12, [r4, #0xa]
	strh    r5, [r4, #0xc]
	add     r2, r3, #0x1
	strh    r2, [r4, #0xe]
	strh    r1, [r4, #0x10]
	mov     r2, r1
	add     r1, r4, #0x12
	bl      Function_6001ae0
	ldrh    r1, [r4, #0xe]
	ldrh    r0, [r4, #0xc]
	add     r5, r4, r1, lsl #1
	strh    r0, [r5, #0x10]
	mov     r1, #0x1
	mov     r0, r4
	strh    r1, [r5, #0x12]
	bl      Function_600020c
	add     r0, r5, #0x10
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6002964

.word 0x245 @ 0x6002964
.arm
Function_6002968: @ 6002968 :arm
	ldr     r12, [pc, #0x8] @ [0x6002978] (=0x6002ad4)
	ldr     r1, [pc, #0x8] @ [0x600297c] (=0x281)
	mov     r2, #0x4
	bx      r12
@ 0x6002978

.word 0x6002ad4 @ 0x6002978
.word 0x281 @ 0x600297c
.arm
Function_6002980: @ 6002980 :arm
	ldr     r12, [pc, #0x8] @ [0x6002990] (=0x6002ad4)
	ldr     r1, [pc, #0x8] @ [0x6002994] (=0x283)
	mov     r2, #0x3
	bx      r12
@ 0x6002990

.word 0x6002ad4 @ 0x6002990
.word 0x283 @ 0x6002994
.arm
Function_6002998: @ 6002998 :arm
	ldr     r12, [pc, #0x8] @ [0x60029a8] (=0x6002ad4)
	mov     r1, #161, 30 @ #0x284
	mov     r2, #0x2
	bx      r12
@ 0x60029a8

.word 0x6002ad4 @ 0x60029a8
.arm
Function_60029ac: @ 60029ac :arm
	ldr     r12, [pc, #0x8] @ [0x60029bc] (=0x6002ad4)
	ldr     r1, [pc, #0x8] @ [0x60029c0] (=0x301)
	mov     r2, #0x1
	bx      r12
@ 0x60029bc

.word 0x6002ad4 @ 0x60029bc
.word 0x301 @ 0x60029c0
.arm
Function_60029c4: @ 60029c4 :arm
	ldr     r12, [pc, #0x8] @ [0x60029d4] (=0x6002ad4)
	ldr     r1, [pc, #0x8] @ [0x60029d8] (=0x302)
	mov     r2, #0x1
	bx      r12
@ 0x60029d4

.word 0x6002ad4 @ 0x60029d4
.word 0x302 @ 0x60029d8
.arm
Function_60029dc: @ 60029dc :arm
	ldr     r12, [pc, #0x8] @ [0x60029ec] (=0x6002ad4)
	ldr     r1, [pc, #0x8] @ [0x60029f0] (=0x303)
	mov     r2, #0x1
	bx      r12
@ 0x60029ec

.word 0x6002ad4 @ 0x60029ec
.word 0x303 @ 0x60029f0
.arm
Function_60029f4: @ 60029f4 :arm
	ldr     r12, [pc, #0x8] @ [0x6002a04] (=0x6002ad4)
	mov     r1, #193, 30 @ #0x304
	mov     r2, #0x1
	bx      r12
@ 0x6002a04

.word 0x6002ad4 @ 0x6002a04
.arm
Function_6002a08: @ 6002a08 :arm
	ldr     r12, [pc, #0x8] @ [0x6002a18] (=0x6002ad4)
	ldr     r1, [pc, #0x8] @ [0x6002a1c] (=0x305)
	mov     r2, #0x1
	bx      r12
@ 0x6002a18

.word 0x6002ad4 @ 0x6002a18
.word 0x305 @ 0x6002a1c
.arm
Function_6002a20: @ 6002a20 :arm
	ldr     r12, [pc, #0x8] @ [0x6002a30] (=0x6002ad4)
	ldr     r1, [pc, #0x8] @ [0x6002a34] (=0x306)
	mov     r2, #0x9
	bx      r12
@ 0x6002a30

.word 0x6002ad4 @ 0x6002a30
.word 0x306 @ 0x6002a34
.arm
Function_6002a38: @ 6002a38 :arm
	ldr     r12, [pc, #0x8] @ [0x6002a48] (=0x6002ad4)
	ldr     r1, [pc, #0x8] @ [0x6002a4c] (=0x307)
	mov     r2, #0x5c
	bx      r12
@ 0x6002a48

.word 0x6002ad4 @ 0x6002a48
.word 0x307 @ 0x6002a4c
.arm
Function_6002a50: @ 6002a50 :arm
	ldr     r12, [pc, #0x8] @ [0x6002a60] (=0x6002ad4)
	mov     r1, #194, 30 @ #0x308
	mov     r2, #0x2
	bx      r12
@ 0x6002a60

.word 0x6002ad4 @ 0x6002a60
.arm
Function_6002a64: @ 6002a64 :arm
	stmfd   sp!, {r4,lr}
	mov     r12, #0x0
	strh    r12, [r0]
	strh    r12, [r0, #0x2]
	strh    r12, [r0, #0x4]
	strh    r12, [r0, #0x6]
	strh    r12, [r0, #0x8]
	ldr     r4, [pc, #0x48] @ [0x6002ad0] (=0x309)
	strh    r12, [r0, #0xa]
	strh    r4, [r0, #0xc]
	mov     r4, #0x4
	strh    r4, [r0, #0xe]
	strh    r1, [r0, #0x10]
	strh    r2, [r0, #0x12]
	ldrh    r1, [sp, #0x8]
	strh    r3, [r0, #0x14]
	strh    r1, [r0, #0x16]
	ldrh    r2, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r2, lsl #1
	strh    r1, [r4, #0x10]
	mov     r1, #0x1
	strh    r1, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6002ad0

.word 0x309 @ 0x6002ad0
.arm
Function_6002ad4: @ 6002ad4 :arm
	stmfd   sp!, {r4,lr}
	mov     r3, #0x0
	strh    r3, [r0]
	strh    r3, [r0, #0x2]
	strh    r3, [r0, #0x4]
	strh    r3, [r0, #0x6]
	strh    r3, [r0, #0x8]
	strh    r3, [r0, #0xa]
	strh    r1, [r0, #0xc]
	strh    r3, [r0, #0xe]
	ldrh    r1, [r0, #0xc]
	add     r4, r0, r3, lsl #1
	strh    r1, [r4, #0x10]
	strh    r2, [r4, #0x12]
	bl      Function_600020c
	add     r0, r4, #0x10
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6002b1c

.arm
Function_6002b1c: @ 6002b1c :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	ldr     r4, [r0, #0x4]
	ldr     r1, [pc, #0x88] @ [0x6002bb8] (=0x60198a0)
	str     r4, [r1, #0x54c]
	ldr     r2, [r0, #0x8]
	str     r2, [r1, #0x550]
	str     r2, [r4]
	ldr     r1, [r0, #0xc]
	str     r1, [r4, #0x8]
	ldr     r0, [r0, #0x10]
	bl      Function_6007fbc
	add     r0, sp, #0x2
	add     r1, sp, #0x0
	bl      Function_6008278
	cmp     r0, #0x0
	bne     branch_6002b8c
	bl      Function_6000294
	mov     r1, #0x0
	strh    r1, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	ldrh    r1, [sp, #0x2]
	strh    r1, [r0, #0x4]
	ldrh    r1, [sp]
	strh    r1, [r0, #0x6]
	bl      Function_600029c
	b       branch_6002bac
@ 0x6002b8c

.arm
branch_6002b8c: @ 6002b8c :arm
	ldr     r0, [r4]
	mov     r1, #0x2
	strh    r1, [r0]
	bl      Function_6000294
	mov     r1, #0x0
	strh    r1, [r0]
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_6002bac: @ 6002bac :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x6002bb8

.word 0x60198a0 @ 0x6002bb8
.arm
Function_6002bbc: @ 6002bbc :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #33, 28 @ #0x210
	ldr     r0, [pc, #0x3bc] @ [0x6002f88] (=0x60198a0)
	mov     r4, #0x0
	ldr     r8, [r0, #0x550]
	bl      Function_6000720
	ldr     r1, [r8, #0xc]
	mov     r5, r0
	cmp     r1, #0x1
	bne     branch_6002c18
	mov     r0, r4
	str     r0, [r8, #0xc]
	mov     r4, #0x1
	bl      Function_6005cd0
	bl      Function_60006c0
	ldrh    r0, [r8]
	cmp     r0, #0xa
	moveq   r0, #0x8
	streqh  r0, [r8]
	beq     branch_6002c18
	cmp     r0, #0x9
	moveq   r0, #0x7
	streqh  r0, [r8]
.arm
branch_6002c18: @ 6002c18 :arm
	ldrh    r1, [r8]
	add     r0, r1, #0xf9
	add     r0, r0, #255, 24 @ #0xff00
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	cmp     r0, #0x1
	bhi     branch_6002c4c
	add     r0, r8, #1, 24 @ #0x100
	cmp     r1, #0x7
	moveq   r10, #0x1
	ldrh    r9, [r0, #0x82]
	movne   r10, #0x0
	b       branch_6002c50
@ 0x6002c4c

.arm
branch_6002c4c: @ 6002c4c :arm
	mov     r9, #0x0
.arm
branch_6002c50: @ 6002c50 :arm
	add     r0, r8, #1, 24 @ #0x100
	mov     r1, #0x0
	strh    r1, [r0, #0x82]
	strh    r1, [r8, #0x86]
	str     r1, [r8, #0x14]
	str     r1, [r8, #0x10]
	str     r1, [r8, #0x1c]
	mov     r0, r5
	strh    r1, [r8, #0xc2]
	bl      Function_6000740
	cmp     r4, #0x0
	beq     branch_6002c88
	ldr     r0, [pc, #0x304] @ [0x6002f8c] (=0xffff)
	bl      Function_6007990
.arm
branch_6002c88: @ 6002c88 :arm
	cmp     r10, #0x0
	movne   r0, #0x0
	strneh  r0, [r8, #0xf6]
	cmp     r9, #0x0
	beq     branch_6002ce4
	mov     r7, #0x0
	add     r5, r8, #74, 30 @ #0x128
	add     r4, r8, #0x8a
	mov     r6, #0x1
	mov     r11, #0x6
.arm
branch_6002cb0: @ 6002cb0 :arm
	tst     r9, r6, lsl r7
	beq     branch_6002cd8
	cmp     r7, #0x0
	addeq   r2, r4, #1, 24 @ #0x100
	subne   r0, r7, #0x1
	mlane   r2, r0, r11, r5
	mov     r1, r7, lsl #16
	mov     r0, r10
	mov     r1, r1, lsr #16
	bl      Function_6004bcc
.arm
branch_6002cd8: @ 6002cd8 :arm
	add     r7, r7, #0x1
	cmp     r7, #0x10
	blt     branch_6002cb0
.arm
branch_6002ce4: @ 6002ce4 :arm
	add     r0, r8, #74, 30 @ #0x128
	mov     r1, #0x0
	mov     r2, #0x5a
	bl      Function_6001ad0
	add     r0, sp, #0x10
	bl      Function_6002a50
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6002d14
	mov     r0, #194, 30 @ #0x308
	bl      Function_6002f9c
	b       branch_6002f7c
@ 0x6002d14

.arm
branch_6002d14: @ 6002d14 :arm
	ldrh    r4, [r0, #0x6]
	add     r0, sp, #0x10
	bl      Function_6002998
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6002d38
	mov     r0, #161, 30 @ #0x284
	bl      Function_6002f9c
	b       branch_6002f7c
@ 0x6002d38

.arm
branch_6002d38: @ 6002d38 :arm
	ldrh    r1, [r0, #0x6]
	cmp     r4, #0x20
	bgt     branch_6002d7c
	bge     branch_6002e50
	cmp     r4, #0x0
	bgt     branch_6002d58
	beq     branch_6002e74
	b       branch_6002f54
@ 0x6002d58

.arm
branch_6002d58: @ 6002d58 :arm
	cmp     r4, #0x12
	bgt     branch_6002f54
	cmp     r4, #0x10
	blt     branch_6002f54
	beq     branch_6002e94
	cmp     r4, #0x11
	cmpne   r4, #0x12
	beq     branch_6002eec
	b       branch_6002f54
@ 0x6002d7c

.arm
branch_6002d7c: @ 6002d7c :arm
	cmp     r4, #0x30
	bgt     branch_6002d8c
	beq     branch_6002d94
	b       branch_6002f54
@ 0x6002d8c

.arm
branch_6002d8c: @ 6002d8c :arm
	cmp     r4, #0x40
	bne     branch_6002f54
.arm
branch_6002d94: @ 6002d94 :arm
	add     r0, r1, #0xfe
	add     r0, r0, #255, 24 @ #0xff00
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	cmp     r0, #0x1
	bhi     branch_6002e18
	add     r0, r8, #0x8a
	add     r1, sp, #0xa
	add     r0, r0, #1, 24 @ #0x100
	mov     r2, #0x6
	bl      Function_6000440
	mov     r6, #0x0
	add     r5, sp, #0xa
	mov     r4, #0x3
	b       branch_6002e0c
@ 0x6002dd0

.arm
branch_6002dd0: @ 6002dd0 :arm
	add     r0, sp, #0x10
	mov     r1, r5
	mov     r2, r4
	bl      Function_60020f8
	ldrh    r0, [r0, #0x4]
	cmp     r0, #0x0
	beq     branch_6002dfc
	cmp     r0, #0x7
	cmpne   r0, #0xc
	beq     branch_6002e08
	b       branch_6002e50
@ 0x6002dfc

.arm
branch_6002dfc: @ 6002dfc :arm
	mov     r0, #0x3
	strh    r0, [r8]
	b       branch_6002e50
@ 0x6002e08

.arm
branch_6002e08: @ 6002e08 :arm
	add     r6, r6, #0x1
.arm
branch_6002e0c: @ 6002e0c :arm
	cmp     r6, #0x2
	blt     branch_6002dd0
	b       branch_6002e50
@ 0x6002e18

.arm
branch_6002e18: @ 6002e18 :arm
	cmp     r1, #0x1
	bne     branch_6002e50
	add     r0, sp, #0x4
	mov     r1, #0xff
	mov     r2, #0x6
	bl      Function_6001ad0
	add     r1, sp, #0x4
	add     r0, sp, #0x10
	mov     r2, #0x3
	bl      Function_60020f8
	ldrh    r0, [r0, #0x4]
	cmp     r0, #0x0
	moveq   r0, #0x3
	streqh  r0, [r8]
.arm
branch_6002e50: @ 6002e50 :arm
	add     r0, sp, #0x10
	mov     r1, #0x1
	bl      Function_6001e94
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6002e74
	mov     r0, #0x0
	bl      Function_6002f9c
	b       branch_6002f7c
@ 0x6002e74

.arm
branch_6002e74: @ 6002e74 :arm
	add     r0, sp, #0x10
	bl      Function_60029c4
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6002e94
	ldr     r0, [pc, #0x100] @ [0x6002f90] (=0x302)
	bl      Function_6002f9c
	b       branch_6002f7c
@ 0x6002e94

.arm
branch_6002e94: @ 6002e94 :arm
	add     r0, r8, #1, 24 @ #0x100
	ldrh    r0, [r0, #0xee]
	cmp     r0, #0x0
	bne     branch_6002ed4
	add     r0, sp, #0x10
	mov     r1, #0x1
	bl      Function_60026b0
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6002ec8
	ldr     r0, [pc, #0xd0] @ [0x6002f94] (=0x20e)
	bl      Function_6002f9c
	b       branch_6002f7c
@ 0x6002ec8

.arm
branch_6002ec8: @ 6002ec8 :arm
	add     r0, r8, #1, 24 @ #0x100
	mov     r1, #0x1
	strh    r1, [r0, #0xee]
.arm
branch_6002ed4: @ 6002ed4 :arm
	mov     r0, #0x2
	strh    r0, [r8]
	mov     r0, #0x0
	str     r0, [r8, #0x198]
	bl      Function_600082c
	b       branch_6002f64
@ 0x6002eec

.arm
branch_6002eec: @ 6002eec :arm
	cmp     r1, #0x0
	bne     branch_6002f28
	mov     r0, #0x1
	mov     r1, #0x0
	str     r0, [sp]
	add     r0, sp, #0x10
	mov     r2, r1
	mov     r3, #0x14
	bl      Function_6002a64
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6002f28
	ldr     r0, [pc, #0x74] @ [0x6002f98] (=0x309)
	bl      Function_6002f9c
	b       branch_6002f7c
@ 0x6002f28

.arm
branch_6002f28: @ 6002f28 :arm
	add     r0, sp, #0x10
	bl      Function_60029c4
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6002f48
	ldr     r0, [pc, #0x4c] @ [0x6002f90] (=0x302)
	bl      Function_6002f9c
	b       branch_6002f7c
@ 0x6002f48

.arm
branch_6002f48: @ 6002f48 :arm
	mov     r0, #0x2
	strh    r0, [r8]
	b       branch_6002f64
@ 0x6002f54

.arm
branch_6002f54: @ 6002f54 :arm
	mov     r0, #194, 30 @ #0x308
	mov     r1, #0x0
	bl      Function_6002f9c
	b       branch_6002f7c
@ 0x6002f64

.arm
branch_6002f64: @ 6002f64 :arm
	bl      Function_6000294
	mov     r1, #0x1
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_6002f7c: @ 6002f7c :arm
	add     sp, sp, #33, 28 @ #0x210
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x6002f88

.word 0x60198a0 @ 0x6002f88
.word 0xffff @ 0x6002f8c
.word 0x302 @ 0x6002f90
.word 0x20e @ 0x6002f94
.word 0x309 @ 0x6002f98
.arm
Function_6002f9c: @ 6002f9c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	bl      Function_6000294
	mov     r1, #0x1
	strh    r1, [r0]
	strh    r1, [r0, #0x2]
	strh    r5, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6002fcc

.arm
Function_6002fcc: @ 6002fcc :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #2, 24 @ #0x200
	ldr     r0, [pc, #0x9c] @ [0x6003078] (=0x60198a0)
	ldr     r4, [r0, #0x550]
	ldrh    r0, [r4]
	cmp     r0, #0x2
	beq     branch_6003004
	bl      Function_6000294
	mov     r1, #0x2
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	b       branch_600306c
@ 0x6003004

.arm
branch_6003004: @ 6003004 :arm
	add     r0, sp, #0x0
	bl      Function_60029ac
	ldrh    r5, [r0, #0x4]
	cmp     r5, #0x0
	beq     branch_6003040
	bl      Function_6000294
	mov     r2, #0x2
	mov     r1, #0x1
	strh    r2, [r0]
	strh    r1, [r0, #0x2]
	add     r1, r1, #3, 24 @ #0x300
	strh    r1, [r0, #0x4]
	strh    r5, [r0, #0x6]
	bl      Function_600029c
	b       branch_600306c
@ 0x6003040

.arm
branch_6003040: @ 6003040 :arm
	mov     r0, #0x1
	strh    r0, [r4]
	bl      Function_600307c
	mov     r0, #0x0
	strh    r0, [r4]
	bl      Function_6000294
	mov     r1, #0x2
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_600306c: @ 600306c :arm
	add     sp, sp, #2, 24 @ #0x200
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6003078

.word 0x60198a0 @ 0x6003078
.arm
Function_600307c: @ 600307c :arm
	ldr     pc, [pc, #-0x4] @ [0x6003080] (=0x38022d4)
@ 0x6003080

.word 0x38022d4 @ 0x6003080
.arm
Function_6003084: @ 6003084 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #2, 24 @ #0x200
	ldr     r1, [pc, #0xa8] @ [0x600313c] (=0x60198a0)
	ldr     r0, [r0, #0x4]
	ldr     r4, [r1, #0x550]
	mov     r2, #0x40
	add     r1, r4, #0xe8
	bl      Function_6000440
	add     r0, r4, #1, 24 @ #0x100
	ldrh    r1, [r0, #0x1a]
	ldrh    r0, [r0, #0xf4]
	mov     r2, #0x1
	tst     r0, r2, lsl r1
	bne     branch_60030d8
	bl      Function_6000294
	mov     r1, #0x7
	strh    r1, [r0]
	mov     r1, #0x6
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	b       branch_6003130
@ 0x60030d8

.arm
branch_60030d8: @ 60030d8 :arm
	ldrh    r1, [r4, #0xf8]
	add     r0, sp, #0x0
	bl      Function_6002774
	ldrh    r4, [r0, #0x4]
	cmp     r4, #0x0
	beq     branch_6003118
	bl      Function_6000294
	mov     r1, #0x7
	strh    r1, [r0]
	mov     r2, #0x1
	ldr     r1, [pc, #0x38] @ [0x6003140] (=0x212)
	strh    r2, [r0, #0x2]
	strh    r1, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
	b       branch_6003130
@ 0x6003118

.arm
branch_6003118: @ 6003118 :arm
	bl      Function_6000294
	mov     r1, #0x7
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_6003130: @ 6003130 :arm
	add     sp, sp, #2, 24 @ #0x200
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600313c

.word 0x60198a0 @ 0x600313c
.word 0x212 @ 0x6003140
.arm
Function_6003144: @ 6003144 :arm
	stmfd   sp!, {r4-r6,lr}
	sub     sp, sp, #174, 30 @ #0x2b8
	ldr     r1, [pc, #0x274] @ [0x60033c8] (=0x60198a0)
	add     r5, sp, #0xb8
	ldr     r4, [r1, #0x550]
	ldrh    r1, [r4]
	cmp     r1, #0x2
	bne     branch_6003170
	ldr     r1, [r4, #0xc8]
	tst     r1, #0x1
	beq     branch_6003194
.arm
branch_6003170: @ 6003170 :arm
	bl      Function_6000294
	mov     r1, #0x8
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	mov     r1, #0x0
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_60033bc
@ 0x6003194

.arm
branch_6003194: @ 6003194 :arm
	add     r1, r4, #1, 24 @ #0x100
	ldrh    r2, [r1, #0x1a]
	mov     r3, #0x1
	ldrh    r12, [r1, #0xf6]
	mov     r2, r3, lsl r2
	ldr     r6, [r0, #0x4]
	tst     r12, r2, asr #1
	bne     branch_60031d8
	bl      Function_6000294
	mov     r1, #0x8
	strh    r1, [r0]
	mov     r1, #0x6
	strh    r1, [r0, #0x2]
	mov     r1, #0x0
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_60033bc
@ 0x60031d8

.arm
branch_60031d8: @ 60031d8 :arm
	strh    r3, [r4, #0xe6]
	mov     r0, #0x0
	strh    r0, [r1, #0x88]
	bl      Function_6000720
	add     r1, r4, #1, 24 @ #0x100
	mov     r2, #0x0
	strh    r2, [r1, #0x82]
	strh    r2, [r4, #0x86]
	bl      Function_6000740
	mov     r1, r5
	add     r2, r4, #1, 24 @ #0x100
	mov     r3, #0x1
	mov     r0, #0x8
	strh    r3, [r2, #0xee]
	bl      Function_6000448
	cmp     r0, #0x0
	beq     branch_60033bc
	mov     r0, r5
	bl      Function_60029dc
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_600323c
	ldr     r0, [pc, #0x194] @ [0x60033cc] (=0x303)
	bl      Function_60033d0
	b       branch_60033bc
@ 0x600323c

.arm
branch_600323c: @ 600323c :arm
	cmp     r6, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	mov     r0, r0, lsl #16
	mov     r6, r0, lsr #16
	mov     r0, r5
	mov     r1, r6
	mov     r2, #0x0
	mov     r3, #0x1
	bl      Function_6001ee8
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_600327c
	mov     r0, #0x1
	bl      Function_60033d0
	b       branch_60033bc
@ 0x600327c

.arm
branch_600327c: @ 600327c :arm
	strh    r6, [r4, #0xc6]
	add     r1, sp, #0x38
	mov     r0, #0x0
	mov     r2, #0x80
	add     r6, r4, #0xe8
	bl      Function_6000598
	add     r0, sp, #0x38
	mov     r1, r6
	bl      Function_600037c
	add     r1, sp, #0x18
	mov     r0, #0x0
	mov     r2, #0x20
	bl      Function_6000598
	ldr     r1, [r6, #0x8]
	mov     r0, r5
	strh    r1, [sp, #0x18]
	ldr     r2, [r6, #0x8]
	mov     r3, #0x0
	mov     r2, r2, lsr #16
	strh    r2, [sp, #0x1a]
	ldrh    r5, [r6, #0xc]
	mov     r2, #0x2
	strh    r5, [sp, #0x1c]
	strh    r3, [sp, #0x1e]
	str     r2, [sp]
	ldrh    r3, [r6, #0x32]
	mov     r2, #0x3
	str     r3, [sp, #0x4]
	str     r2, [sp, #0x8]
	str     r2, [sp, #0xc]
	ldrh    r2, [r6, #0x4]
	add     r3, sp, #0x38
	add     r2, r2, #0x10
	mov     r2, r2, lsl #16
	mov     r2, r2, lsr #16
	str     r2, [sp, #0x10]
	str     r3, [sp, #0x14]
	ldrh    r3, [r6, #0x18]
	mov     r1, #0x20
	add     r2, sp, #0x18
	bl      Function_60021ec
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6003338
	mov     r0, #0x9
	bl      Function_60033d0
	b       branch_60033bc
@ 0x6003338

.arm
branch_6003338: @ 6003338 :arm
	ldrh    r0, [r6, #0x14]
	cmp     r0, #0x0
	ldrh    r0, [r6, #0x34]
	movne   r1, #0x2a
	moveq   r1, #0x0
	add     r0, r0, r1
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_6000860
	ldrh    r0, [r6, #0x14]
	cmp     r0, #0x0
	movne   r1, #0x6
	ldrh    r0, [r6, #0x36]
	moveq   r1, #0x0
	add     r0, r0, r1
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_60008b0
	bl      Function_6000294
	mov     r1, #0x7
	strh    r1, [r4]
	mov     r1, #0x8
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	strh    r1, [r0, #0x8]
	ldrh    r1, [r4, #0x30]
	strh    r1, [r0, #0x2c]
	ldrh    r1, [r4, #0x32]
	strh    r1, [r0, #0x2e]
	bl      Function_600029c
	mov     r0, #0x1
	strh    r0, [r4, #0xc2]
.arm
branch_60033bc: @ 60033bc :arm
	add     sp, sp, #174, 30 @ #0x2b8
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x60033c8

.word 0x60198a0 @ 0x60033c8
.word 0x303 @ 0x60033cc
.arm
Function_60033d0: @ 60033d0 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	bl      Function_6000294
	mov     r1, #0x8
	strh    r1, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	mov     r1, #0x0
	strh    r1, [r0, #0x8]
	strh    r5, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600340c

.arm
Function_600340c: @ 600340c :arm
	stmfd   sp!, {r4-r10,lr}
	sub     sp, sp, #130, 30 @ #0x208
	ldr     r0, [pc, #0x1ac] @ [0x60035c8] (=0x60198a0)
	ldr     r10, [r0, #0x550]
	ldrh    r0, [r10]
	cmp     r0, #0x7
	beq     branch_6003444
	bl      Function_6000294
	mov     r1, #0x9
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	b       branch_60035bc
@ 0x6003444

.arm
branch_6003444: @ 6003444 :arm
	mov     r0, #0x0
	strh    r0, [r10, #0xf6]
	mov     r8, #0x1
.arm
branch_6003450: @ 6003450 :arm
	add     r0, r10, #1, 24 @ #0x100
	ldrh    r0, [r0, #0x82]
	mov     r7, #0x1
	tst     r0, r7, lsl r8
	beq     branch_6003520
	add     r0, r10, #74, 30 @ #0x128
	sub     r1, r8, #0x1
	mov     r2, #0x6
	mla     r0, r1, r2, r0
	add     r1, sp, #0x0
	bl      Function_6000440
	mov     r9, #0x0
	add     r6, sp, #0x8
	add     r5, sp, #0x0
	mov     r4, #0x3
	b       branch_60034bc
@ 0x6003490

.arm
branch_6003490: @ 6003490 :arm
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      Function_60020f8
	ldrh    r0, [r0, #0x4]
	cmp     r0, #0x0
	beq     branch_60034c4
	cmp     r0, #0x7
	cmpne   r0, #0xc
	bne     branch_60034c4
	add     r9, r9, #0x1
.arm
branch_60034bc: @ 60034bc :arm
	cmp     r9, #0x2
	blt     branch_6003490
.arm
branch_60034c4: @ 60034c4 :arm
	bl      Function_6000720
	add     r1, r10, #1, 24 @ #0x100
	ldrh    r2, [r1, #0x82]
	tst     r2, r7, lsl r8
	beq     branch_600351c
	mvn     r3, r7, lsl r8
	and     r2, r2, r3
	strh    r2, [r1, #0x82]
	ldrh    r2, [r10, #0x86]
	add     r1, r10, r8, lsl #3
	and     r2, r2, r3
	strh    r2, [r10, #0x86]
	mov     r2, #0x0
	str     r2, [r1, #0x738]
	str     r2, [r1, #0x73c]
	bl      Function_6000740
	mov     r0, r8, lsl #16
	mov     r1, r0, lsr #16
	add     r2, sp, #0x0
	mov     r0, #0x1
	bl      Function_6004bcc
	b       branch_6003520
@ 0x600351c

.arm
branch_600351c: @ 600351c :arm
	bl      Function_6000740
.arm
branch_6003520: @ 6003520 :arm
	add     r8, r8, #0x1
	cmp     r8, #0x10
	blt     branch_6003450
	add     r0, sp, #0x8
	mov     r1, #0x1
	bl      Function_6001e94
	ldrh    r1, [r0, #0x4]
	mov     r0, #0x0
	cmp     r1, #0x0
	beq     branch_6003550
	bl      Function_60035d0
	b       branch_60035bc
@ 0x6003550

.arm
branch_6003550: @ 6003550 :arm
	strh    r0, [r10, #0xc2]
	mov     r1, #0x3
	strh    r1, [r10]
	add     r0, sp, #0x8
	bl      Function_60029c4
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_600357c
	ldr     r0, [pc, #0x54] @ [0x60035cc] (=0x302)
	bl      Function_60035d0
	b       branch_60035bc
@ 0x600357c

.arm
branch_600357c: @ 600357c :arm
	mov     r0, #0x2
	strh    r0, [r10]
	mov     r1, #0x0
	str     r1, [r10, #0x198]
	add     r0, r10, #1, 24 @ #0x100
	strh    r1, [r0, #0x96]
	add     r0, r10, #103, 30 @ #0x19c
	mov     r2, #0x50
	bl      Function_6001ad0
	bl      Function_600082c
	bl      Function_6000294
	mov     r1, #0x9
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_60035bc: @ 60035bc :arm
	add     sp, sp, #130, 30 @ #0x208
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x60035c8

.word 0x60198a0 @ 0x60035c8
.word 0x302 @ 0x60035cc
.arm
Function_60035d0: @ 60035d0 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	bl      Function_6000294
	mov     r1, #0x9
	strh    r1, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	strh    r5, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6003604

.arm
Function_6003604: @ 6003604 :arm
	stmfd   sp!, {r3-r7,lr}
	sub     sp, sp, #146, 30 @ #0x248
	ldr     r1, [pc, #0x340] @ [0x6003954] (=0x60198a0)
	add     r4, sp, #0x48
	ldr     r7, [r1, #0x550]
	ldrh    r1, [r7]
	cmp     r1, #0x2
	cmpne   r1, #0x3
	cmpne   r1, #0x5
	beq     branch_6003650
	bl      Function_6000294
	mov     r1, #0xa
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	mov     r1, #0x4
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_6003948
@ 0x6003650

.arm
branch_6003650: @ 6003650 :arm
	ldr     r1, [r0, #0x4]
	add     r2, r7, #1, 24 @ #0x100
	str     r1, [r7, #0x184]
	ldrh    r5, [r0, #0x2]
	add     r1, sp, #0x10
	strh    r5, [r2, #0x90]
	ldrh    r6, [r0, #0x8]
	add     r0, r0, #0xa
	mov     r2, #0x6
	bl      Function_6000440
	ldrh    r1, [sp, #0x10]
	ldr     r0, [pc, #0x2d4] @ [0x6003958] (=0xffff)
	cmp     r1, r0
	beq     branch_6003694
	tst     r1, #0x1
	bicne   r0, r1, #0x1
	strneh  r0, [sp, #0x10]
.arm
branch_6003694: @ 6003694 :arm
	cmp     r5, #0x0
	bne     branch_60036c0
	bl      Function_6000294
	mov     r1, #0xa
	strh    r1, [r0]
	mov     r1, #0x6
	strh    r1, [r0, #0x2]
	mov     r1, #0x4
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_6003948
@ 0x60036c0

.arm
branch_60036c0: @ 60036c0 :arm
	add     r0, r7, #1, 24 @ #0x100
	ldrh    r0, [r0, #0xf4]
	mov     r1, #0x1
	tst     r0, r1, lsl r5
	bne     branch_60036f8
	bl      Function_6000294
	mov     r1, #0xa
	strh    r1, [r0]
	mov     r1, #0x6
	strh    r1, [r0, #0x2]
	mov     r1, #0x4
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_6003948
@ 0x60036f8

.arm
branch_60036f8: @ 60036f8 :arm
	mov     r0, #0x2
	strh    r0, [r7, #0xe6]
	mov     r0, r4
	bl      Function_6002a50
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6003724
	mov     r0, #194, 30 @ #0x308
	mov     r2, #0x0
	bl      Function_6003eb0
	b       branch_6003948
@ 0x6003724

.arm
branch_6003724: @ 6003724 :arm
	ldrh    r0, [r0, #0x6]
	cmp     r0, #0x10
	bne     branch_60037a0
	mov     r1, r4
	mov     r0, #0xa
	bl      Function_6000448
	cmp     r0, #0x0
	beq     branch_6003948
	mov     r0, r4
	bl      Function_60029dc
	ldrh    r1, [r0, #0x4]
	mov     r2, #0x0
	cmp     r1, #0x0
	beq     branch_6003768
	ldr     r0, [pc, #0x1f8] @ [0x600395c] (=0x303)
	bl      Function_6003eb0
	b       branch_6003948
@ 0x6003768

.arm
branch_6003768: @ 6003768 :arm
	mov     r0, #0x3
	mov     r1, #0x1
	strh    r0, [r7]
	mov     r0, r4
	mov     r3, r1
	bl      Function_6001ee8
	ldrh    r1, [r0, #0x4]
	mov     r0, #0x1
	cmp     r1, #0x0
	beq     branch_600379c
	mov     r2, #0x0
	bl      Function_6003eb0
	b       branch_6003948
@ 0x600379c

.arm
branch_600379c: @ 600379c :arm
	strh    r0, [r7, #0xc6]
.arm
branch_60037a0: @ 60037a0 :arm
	ldr     r0, [pc, #0x1b0] @ [0x6003958] (=0xffff)
	mov     r3, #0x5
	strh    r3, [r7]
	add     r1, sp, #0x26
	mov     r2, #0x20
	bl      Function_6000598
	add     r0, sp, #0x17
	mov     r1, #0x0
	mov     r2, #0xf
	strb    r5, [sp, #0x16]
	bl      Function_6001ad0
	add     r1, sp, #0x26
	str     r1, [sp]
	mov     r1, #0x1
	str     r1, [sp, #0x4]
	add     r0, sp, #0x16
	str     r0, [sp, #0x8]
	ldr     r1, [pc, #0x174] @ [0x6003960] (=0x11e)
	add     r2, sp, #0x10
	str     r6, [sp, #0xc]
	mov     r0, r4
	mov     r3, #0x0
	bl      Function_6001f48
	mov     r4, r0
	ldrh    r1, [r4, #0x4]
	cmp     r1, #0x0
	beq     branch_600381c
	mov     r0, #0x2
	mov     r2, #0x0
	bl      Function_6003eb0
	b       branch_6003948
@ 0x600381c

.arm
branch_600381c: @ 600381c :arm
	bl      Function_6000294
	ldrh    r1, [r4, #0x8]
	mov     r6, r0
	cmp     r1, #0x0
	bne     branch_6003854
	mov     r0, #0xa
	strh    r0, [r6]
	mov     r1, #0x0
	strh    r1, [r6, #0x2]
	mov     r0, #0x4
	strh    r0, [r6, #0x8]
	strh    r5, [r6, #0x10]
	strh    r1, [r6, #0x12]
	b       branch_6003940
@ 0x6003854

.arm
branch_6003854: @ 6003854 :arm
	ldr     r1, [r7, #0x184]
	mov     r0, #0x0
	add     r1, r1, #0x40
	mov     r2, #0x80
	bl      Function_6000598
	ldrh    r2, [r4, #0xa]
	ldr     r1, [r7, #0x184]
	add     r0, r4, #0xa
	mov     r2, r2, lsl #1
	bl      Function_6000440
	mov     r0, #0xa
	strh    r0, [r6]
	mov     r0, #0x0
	strh    r0, [r6, #0x2]
	mov     r0, #0x5
	strh    r0, [r6, #0x8]
	ldrh    r0, [r4, #0x40]
	strh    r0, [r6, #0x10]
	ldrh    r0, [r4, #0xc]
	and     r0, r0, #0xff
	bl      Function_6003964
	mov     r7, r0
	bl      Function_6000658
	strh    r0, [r6, #0x12]
	mov     r0, r7
	bl      Function_6003978
	ldrh    r1, [r4, #0x14]
	add     r0, r4, #0xe
	strh    r1, [r6, #0x14]
	add     r1, r6, #0xa
	mov     r2, #0x6
	bl      Function_6000440
	add     r0, r4, #0x16
	add     r1, r6, #0x16
	mov     r2, #0x20
	bl      Function_6001ae0
	ldrh    r0, [r4, #0x46]
	strh    r0, [r6, #0x36]
	cmp     r0, #0x80
	bls     branch_6003918
	mov     r0, #0xa
	strh    r0, [r6]
	mov     r1, #0x0
	strh    r1, [r6, #0x2]
	mov     r0, #0x4
	strh    r0, [r6, #0x8]
	strh    r5, [r6, #0x10]
	strh    r1, [r6, #0x12]
	b       branch_6003940
@ 0x6003918

.arm
branch_6003918: @ 6003918 :arm
	add     r1, r6, #0x38
	mov     r0, #0x0
	mov     r2, #0x80
	bl      Function_6000598
	ldrh    r1, [r6, #0x36]
	add     r0, r4, #0x4a
	add     r2, r1, #0x1
	add     r1, r6, #0x38
	bic     r2, r2, #0x1
	bl      Function_6001ae0
.arm
branch_6003940: @ 6003940 :arm
	mov     r0, r6
	bl      Function_600029c
.arm
branch_6003948: @ 6003948 :arm
	add     sp, sp, #146, 30 @ #0x248
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6003954

.word 0x60198a0 @ 0x6003954
.word 0xffff @ 0x6003958
.word 0x303 @ 0x600395c
.word 0x11e @ 0x6003960
.arm
Function_6003964: @ 6003964 :arm
	tst     r0, #0x2
	mov     r0, r0, asr #2
	addeq   r0, r0, #0x19
	and     r0, r0, #0xff
	bx      lr
@ 0x6003978

.arm
Function_6003978: @ 6003978 :arm
	ldr     r2, [pc, #0x10] @ [0x6003990] (=0x27fff98)
	ldrh    r1, [r2]
	eor     r0, r0, r1, lsl #1
	eor     r0, r0, r0, lsr #16
	strh    r0, [r2]
	bx      lr
@ 0x6003990

.word 0x27fff98 @ 0x6003990
.arm
Function_6003994: @ 6003994 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0xc8
	sub     sp, sp, #1, 22 @ #0x400
	ldr     r1, [pc, #0x4ec] @ [0x6003e94] (=0x60198a0)
	mov     r9, r0
	ldr     r8, [r1, #0x550]
	ldrh    r0, [r8]
	cmp     r0, #0x2
	cmpne   r0, #0x3
	cmpne   r0, #0x5
	beq     branch_60039e4
	bl      Function_6000294
	mov     r1, #0x26
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	mov     r1, #0x4
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_6003e84
@ 0x60039e4

.arm
branch_60039e4: @ 60039e4 :arm
	ldr     r0, [r9, #0x4]
	add     r1, sp, #0x18
	str     r0, [r8, #0x184]
	ldrh    r10, [r9, #0x2]
	add     r0, r8, #1, 24 @ #0x100
	strh    r10, [r0, #0x90]
	ldrh    r3, [r9, #0xa]
	add     r0, r9, #0xc
	str     r3, [sp, #0x10]
	mov     r2, #0x6
	bl      Function_6000440
	ldrh    r5, [r9, #0x12]
	ldrh    r11, [r9, #0x36]
	cmp     r5, #0x2
	beq     branch_6003a2c
	cmp     r5, #0x3
	beq     branch_6003a38
	b       branch_6003a44
@ 0x6003a2c

.arm
branch_6003a2c: @ 6003a2c :arm
	mov     r6, #0x1
	mov     r5, #0x0
	b       branch_6003a48
@ 0x6003a38

.arm
branch_6003a38: @ 6003a38 :arm
	mov     r6, #0x1
	mov     r5, r6
	b       branch_6003a48
@ 0x6003a44

.arm
branch_6003a44: @ 6003a44 :arm
	mov     r6, #0x0
.arm
branch_6003a48: @ 6003a48 :arm
	add     r1, sp, #0x4e
	add     r0, r9, #0x16
	mov     r2, #0x20
	ldrh    r4, [r9, #0x14]
	bl      Function_6000440
	ldrh    r1, [sp, #0x18]
	ldr     r0, [pc, #0x430] @ [0x6003e98] (=0xffff)
	ldrh    r7, [r9, #0x8]
	cmp     r1, r0
	beq     branch_6003a7c
	tst     r1, #0x1
	bicne   r0, r1, #0x1
	strneh  r0, [sp, #0x18]
.arm
branch_6003a7c: @ 6003a7c :arm
	add     r0, r8, #1, 24 @ #0x100
	ldrh    r1, [r0, #0xf4]
	mov     r0, r10, lsl #17
	ands    r10, r1, r0, lsr #16
	beq     branch_6003ac0
	ldr     r0, [r8, #0xc8]
	tst     r0, #0x1
	cmpne   r5, #0x1
	bne     branch_6003ac0
	ldr     r0, [r9, #0x4]
	cmp     r0, #0x0
	beq     branch_6003ac0
	tst     r0, #0x3
	bne     branch_6003ac0
	ldrh    r0, [r9, #0x8]
	cmp     r0, #0x40
	bcs     branch_6003ae4
.arm
branch_6003ac0: @ 6003ac0 :arm
	bl      Function_6000294
	mov     r1, #0x26
	strh    r1, [r0]
	mov     r1, #0x6
	strh    r1, [r0, #0x2]
	mov     r1, #0x4
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_6003e84
@ 0x6003ae4

.arm
branch_6003ae4: @ 6003ae4 :arm
	mov     r0, #0x2
	strh    r0, [r8, #0xe6]
	add     r0, sp, #0x70
	bl      Function_6002a50
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6003b10
	mov     r0, #194, 30 @ #0x308
	mov     r2, #0x1
	bl      Function_6003eb0
	b       branch_6003e84
@ 0x6003b10

.arm
branch_6003b10: @ 6003b10 :arm
	ldrh    r0, [r0, #0x6]
	cmp     r0, #0x10
	bne     branch_6003b90
	add     r1, sp, #0x70
	mov     r0, #0x26
	bl      Function_6000448
	cmp     r0, #0x0
	beq     branch_6003e84
	add     r0, sp, #0x70
	bl      Function_60029dc
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6003b54
	ldr     r0, [pc, #0x350] @ [0x6003e9c] (=0x303)
	mov     r2, #0x1
	bl      Function_6003eb0
	b       branch_6003e84
@ 0x6003b54

.arm
branch_6003b54: @ 6003b54 :arm
	mov     r0, #0x3
	mov     r1, #0x1
	strh    r0, [r8]
	add     r0, sp, #0x70
	mov     r3, r1
	mov     r2, #0x0
	bl      Function_6001ee8
	ldrh    r1, [r0, #0x4]
	mov     r0, #0x1
	cmp     r1, #0x0
	beq     branch_6003b8c
	mov     r2, r0
	bl      Function_6003eb0
	b       branch_6003e84
@ 0x6003b8c

.arm
branch_6003b8c: @ 6003b8c :arm
	strh    r0, [r8, #0xc6]
.arm
branch_6003b90: @ 6003b90 :arm
	add     r0, r8, #1, 24 @ #0x100
	ldrh    r0, [r0, #0xee]
	cmp     r5, #0x0
	bne     branch_6003be0
	cmp     r0, #0x1
	bne     branch_6003c1c
	add     r0, sp, #0x70
	mov     r1, #0x0
	bl      Function_60026b0
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6003bd0
	ldr     r0, [pc, #0x2d8] @ [0x6003ea0] (=0x20e)
	mov     r2, #0x1
	bl      Function_6003eb0
	b       branch_6003e84
@ 0x6003bd0

.arm
branch_6003bd0: @ 6003bd0 :arm
	add     r0, r8, #1, 24 @ #0x100
	mov     r1, #0x0
	strh    r1, [r0, #0xee]
	b       branch_6003c1c
@ 0x6003be0

.arm
branch_6003be0: @ 6003be0 :arm
	cmp     r0, #0x0
	bne     branch_6003c1c
	add     r0, sp, #0x70
	mov     r1, #0x1
	bl      Function_60026b0
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6003c10
	ldr     r0, [pc, #0x298] @ [0x6003ea0] (=0x20e)
	mov     r2, #0x1
	bl      Function_6003eb0
	b       branch_6003e84
@ 0x6003c10

.arm
branch_6003c10: @ 6003c10 :arm
	add     r0, r8, #1, 24 @ #0x100
	mov     r1, #0x1
	strh    r1, [r0, #0xee]
.arm
branch_6003c1c: @ 6003c1c :arm
	cmp     r6, #0x1
	bne     branch_6003c74
	add     r0, sp, #0x2e
	mov     r1, #0xff
	mov     r2, #0x20
	bl      Function_6001ad0
	cmp     r11, #0x20
	bhi     branch_6003c4c
	add     r0, sp, #0x2e
	mov     r2, r11
	mov     r1, #0x0
	bl      Function_6001ad0
.arm
branch_6003c4c: @ 6003c4c :arm
	add     r1, sp, #0x2e
	add     r0, sp, #0x70
	bl      Function_600263c
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6003c74
	ldr     r0, [pc, #0x238] @ [0x6003ea4] (=0x20d)
	mov     r2, #0x1
	bl      Function_6003eb0
	b       branch_6003e84
@ 0x6003c74

.arm
branch_6003c74: @ 6003c74 :arm
	mov     r6, #0x0
	mov     r3, #0x5
	add     r0, sp, #0x1e
	mov     r1, r6
	mov     r2, #0x10
	strh    r3, [r8]
	bl      Function_6001ad0
	mov     r3, #0x1
	add     r1, sp, #0x1e
	mov     r2, r3
.arm
branch_6003c9c: @ 6003c9c :arm
	tst     r10, r2, lsl r3
	addne   r0, r6, #0x1
	movne   r0, r0, lsl #16
	strneb  r3, [r1, r6]
	movne   r6, r0, lsr #16
	add     r0, r3, #0x1
	mov     r0, r0, lsl #16
	mov     r3, r0, lsr #16
	cmp     r3, #0xf
	bcc     branch_6003c9c
	sub     r0, r7, #0x40
	mov     r1, #0x42
	bl      Function_6003ea8
	add     r2, sp, #0x4e
	stmea   sp, {r2,r5}
	add     r1, sp, #0x1e
	str     r1, [sp, #0x8]
	ldr     r1, [sp, #0x10]
	sub     r5, r7, r0, lsl #1
	str     r1, [sp, #0xc]
	add     r2, sp, #0x18
	add     r0, sp, #0x70
	mov     r3, r4
	add     r1, r5, #0x5e
	bl      Function_6001f48
	mov     r5, r0
	ldrh    r1, [r5, #0x4]
	cmp     r1, #0x0
	beq     branch_6003d20
	mov     r0, #0x2
	mov     r2, #0x1
	bl      Function_6003eb0
	b       branch_6003e84
@ 0x6003d20

.arm
branch_6003d20: @ 6003d20 :arm
	bl      Function_6000294
	ldrh    r1, [r5, #0x8]
	mov     r6, r0
	cmp     r1, #0x0
	bne     branch_6003d5c
	mov     r0, #0x26
	strh    r0, [r6]
	mov     r1, #0x0
	strh    r1, [r6, #0x2]
	mov     r0, #0x4
	strh    r0, [r6, #0x8]
	strh    r1, [r6, #0xe]
	mov     r0, r10, asr #1
	strh    r0, [r6, #0xa]
	b       branch_6003e7c
@ 0x6003d5c

.arm
branch_6003d5c: @ 6003d5c :arm
	ldr     r9, [r8, #0x184]
	mov     r2, r7
	mov     r1, r9
	mov     r0, #0x0
	add     r8, r5, #0xa
	bl      Function_6000598
	mov     r7, #0x0
	b       branch_6003e48
@ 0x6003d7c

.arm
branch_6003d7c: @ 6003d7c :arm
	ldrh    r1, [r8]
	mov     r0, r8
	mov     r1, r1, lsl #17
	mov     r11, r1, lsr #16
	mov     r1, r9
	mov     r2, r11
	bl      Function_6000440
	cmp     r4, #0x0
	beq     branch_6003e04
	ldrh    r2, [r9, #0xa]
	cmp     r2, #0x0
	moveq   r0, #0x0
	beq     branch_6003de8
	cmp     r2, #0x20
	movhi   r0, #0x0
	bhi     branch_6003de8
	mov     r1, #0x0
	b       branch_6003ddc
@ 0x6003dc4

.arm
branch_6003dc4: @ 6003dc4 :arm
	add     r0, r9, r1
	ldrb    r0, [r0, #0xc]
	cmp     r0, #0x0
	movne   r0, #0x1
	bne     branch_6003de8
	add     r1, r1, #0x1
.arm
branch_6003ddc: @ 6003ddc :arm
	cmp     r1, r2
	blt     branch_6003dc4
	mov     r0, #0x0
.arm
branch_6003de8: @ 6003de8 :arm
	cmp     r0, #0x0
	bne     branch_6003e04
	add     r0, sp, #0x4e
	add     r1, r9, #0xc
	mov     r2, #0x20
	strh    r4, [r9, #0xa]
	bl      Function_6000440
.arm
branch_6003e04: @ 6003e04 :arm
	add     r0, r6, r7, lsl #2
	str     r9, [r0, #0x10]
	ldrh    r0, [r8, #0x2]
	and     r0, r0, #0xff
	bl      Function_6003964
	str     r0, [sp, #0x14]
	bl      Function_6000658
	add     r1, r6, r7, lsl #1
	strh    r0, [r1, #0x50]
	ldr     r0, [sp, #0x14]
	bl      Function_6003978
	add     r9, r9, r11
	tst     r9, #0x2
	addne   r0, r9, #0x2
	add     r8, r8, r11
	bicne   r9, r0, #0x3
	add     r7, r7, #0x1
.arm
branch_6003e48: @ 6003e48 :arm
	ldrh    r0, [r5, #0x8]
	cmp     r7, r0
	blt     branch_6003d7c
	mov     r0, #0x26
	strh    r0, [r6]
	mov     r0, #0x0
	strh    r0, [r6, #0x2]
	mov     r0, #0x5
	strh    r0, [r6, #0x8]
	ldrh    r1, [r5, #0x8]
	mov     r0, r10, asr #1
	strh    r1, [r6, #0xe]
	strh    r0, [r6, #0xa]
.arm
branch_6003e7c: @ 6003e7c :arm
	mov     r0, r6
	bl      Function_600029c
.arm
branch_6003e84: @ 6003e84 :arm
	add     sp, sp, #0xc8
	add     sp, sp, #1, 22 @ #0x400
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x6003e94

.word 0x60198a0 @ 0x6003e94
.word 0xffff @ 0x6003e98
.word 0x303 @ 0x6003e9c
.word 0x20e @ 0x6003ea0
.word 0x20d @ 0x6003ea4
.arm
Function_6003ea8: @ 6003ea8 :arm
	ldr     pc, [pc, #-0x4] @ [0x6003eac] (=0x3806460)
@ 0x6003eac

.word 0x3806460 @ 0x6003eac
.arm
Function_6003eb0: @ 6003eb0 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r4, r2
	mov     r6, r0
	mov     r5, r1
	bl      Function_6000294
	cmp     r4, #0x0
	movne   r1, #0x26
	moveq   r1, #0xa
	strh    r1, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	mov     r1, #0x4
	strh    r1, [r0, #0x8]
	strh    r6, [r0, #0x4]
	strh    r5, [r0, #0x6]
	bl      Function_600029c
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6003ef8

.arm
Function_6003ef8: @ 6003ef8 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #2, 24 @ #0x200
	ldr     r0, [pc, #0xb8] @ [0x6003fc0] (=0x60198a0)
	add     r4, sp, #0x0
	ldr     r5, [r0, #0x550]
	ldrh    r0, [r5]
	cmp     r0, #0x5
	beq     branch_6003f34
	bl      Function_6000294
	mov     r1, #0xb
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	b       branch_6003fb4
@ 0x6003f34

.arm
branch_6003f34: @ 6003f34 :arm
	mov     r0, r4
	bl      Function_60029c4
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6003f54
	ldr     r0, [pc, #0x74] @ [0x6003fc4] (=0x302)
	bl      Function_6003fcc
	b       branch_6003fb4
@ 0x6003f54

.arm
branch_6003f54: @ 6003f54 :arm
	mov     r0, #0x2
	strh    r0, [r5]
	add     r0, r5, #1, 24 @ #0x100
	ldrh    r0, [r0, #0xee]
	cmp     r0, #0x0
	bne     branch_6003f9c
	mov     r0, r4
	mov     r1, #0x1
	bl      Function_60026b0
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6003f90
	ldr     r0, [pc, #0x3c] @ [0x6003fc8] (=0x20e)
	bl      Function_6003fcc
	b       branch_6003fb4
@ 0x6003f90

.arm
branch_6003f90: @ 6003f90 :arm
	add     r0, r5, #1, 24 @ #0x100
	mov     r1, #0x1
	strh    r1, [r0, #0xee]
.arm
branch_6003f9c: @ 6003f9c :arm
	bl      Function_6000294
	mov     r1, #0xb
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_6003fb4: @ 6003fb4 :arm
	add     sp, sp, #2, 24 @ #0x200
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6003fc0

.word 0x60198a0 @ 0x6003fc0
.word 0x302 @ 0x6003fc4
.word 0x20e @ 0x6003fc8
.arm
Function_6003fcc: @ 6003fcc :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	bl      Function_6000294
	mov     r1, #0xb
	strh    r1, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	strh    r5, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6004000

.arm
Function_6004000: @ 6004000 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #37, 28 @ #0x250
	ldr     r1, [pc, #0x580] @ [0x6004590] (=0x60198a0)
	add     r4, sp, #0x50
	ldr     r7, [r1, #0x550]
	ldr     r5, [r1, #0x54c]
	ldrh    r1, [r7]
	mov     r6, r0
	cmp     r1, #0x2
	bne     branch_6004034
	ldr     r0, [r7, #0xc8]
	tst     r0, #0x1
	beq     branch_6004058
.arm
branch_6004034: @ 6004034 :arm
	bl      Function_6000294
	mov     r1, #0xc
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	mov     r1, #0x6
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_6004584
@ 0x6004058

.arm
branch_6004058: @ 6004058 :arm
	ldr     r0, [r6, #0x4]
	add     r1, r5, #0x10
	mov     r2, #0xc0
	bl      Function_6000440
	ldrh    r0, [r5, #0x4c]
	cmp     r0, #0x10
	bcc     branch_60040a4
	ldrb    r0, [r5, #0x5b]
	tst     r0, #0x1
	bne     branch_60040a4
	bl      Function_6000294
	mov     r1, #0xc
	strh    r1, [r0]
	mov     r1, #0xb
	strh    r1, [r0, #0x2]
	mov     r1, #0x6
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_6004584
@ 0x60040a4

.arm
branch_60040a4: @ 60040a4 :arm
	ldrh    r1, [r5, #0x46]
	add     r0, r7, #1, 24 @ #0x100
	mov     r2, #0x1
	ldrh    r0, [r0, #0xf4]
	mov     r1, r2, lsl r1
	tst     r1, r0
	beq     branch_60040cc
	rsb     r0, r2, #2, 20 @ #0x2000
	tst     r0, r1, asr #1
	bne     branch_60040ec
.arm
branch_60040cc: @ 60040cc :arm
	bl      Function_6000294
	mov     r1, #0xc
	strh    r1, [r0]
	mov     r1, #0x6
	strh    r1, [r0, #0x2]
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_6004584
@ 0x60040ec

.arm
branch_60040ec: @ 60040ec :arm
	bl      Function_6000294
	mov     r1, #0xc
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0x6
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	add     r0, r7, #1, 24 @ #0x100
	ldrh    r1, [r0, #0xec]
	cmp     r1, #0x1
	ldrh    r1, [r5, #0x3e]
	bne     branch_6004134
	tst     r1, #0x1
	movne   r1, #0x1
	strneh  r1, [r0, #0xec]
	moveq   r1, #0x2
	b       branch_6004144
@ 0x6004134

.arm
branch_6004134: @ 6004134 :arm
	tst     r1, #0x2
	movne   r1, #0x2
	strneh  r1, [r0, #0xec]
	moveq   r1, #0x1
.arm
branch_6004144: @ 6004144 :arm
	streqh  r1, [r0, #0xec]
	ldrh    r0, [r5, #0x3c]
	tst     r0, #0x20
	movne   r1, #0x1
	add     r0, r7, #1, 24 @ #0x100
	moveq   r1, #0x0
	strh    r1, [r0, #0xee]
	ldrh    r0, [r5, #0x4c]
	mov     r1, r4
	cmp     r0, #0x0
	moveq   r0, #0x3
	movne   r0, #0x2
	strh    r0, [r7, #0xe6]
	mov     r0, #0xc
	bl      Function_6000448
	cmp     r0, #0x0
	beq     branch_6004584
	mov     r0, r4
	mov     r1, #0x0
	bl      Function_600282c
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_60041b0
	ldr     r0, [pc, #0x3ec] @ [0x6004594] (=0x216)
	mov     r2, #0x0
	bl      Function_60045ac
	b       branch_6004584
@ 0x60041b0

.arm
branch_60041b0: @ 60041b0 :arm
	ldrh    r0, [r5, #0x4c]
	cmp     r0, #0x10
	bcs     branch_600420c
	ldrh    r1, [r5, #0x42]
	cmp     r1, #0x0
	moveq   r0, #0x1
	beq     branch_60041d8
	ldr     r0, [pc, #0x3c4] @ [0x6004598] (=0x2710)
	bl      Function_60045a4
	add     r0, r0, #0x1
.arm
branch_60041d8: @ 60041d8 :arm
	mov     r0, r0, lsl #16
	mov     r1, r0, lsr #16
	cmp     r1, #0xff
	movhi   r1, #0xff
	mov     r0, r4
	bl      Function_60025e0
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_600420c
	ldr     r0, [pc, #0x398] @ [0x600459c] (=0x20b)
	mov     r2, #0x0
	bl      Function_60045ac
	b       branch_6004584
@ 0x600420c

.arm
branch_600420c: @ 600420c :arm
	mov     r0, r4
	bl      Function_60029dc
	ldrh    r1, [r0, #0x4]
	mov     r2, #0x0
	cmp     r1, #0x0
	beq     branch_6004230
	ldr     r0, [pc, #0x374] @ [0x60045a0] (=0x303)
	bl      Function_60045ac
	b       branch_6004584
@ 0x6004230

.arm
branch_6004230: @ 6004230 :arm
	mov     r0, #0x3
	strh    r0, [r7]
	ldr     r0, [r6, #0x20]
	mov     r3, #0x1
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	mov     r0, r0, lsl #16
	mov     r8, r0, lsr #16
	mov     r0, r4
	mov     r1, r8
	bl      Function_6001ee8
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_600427c
	mov     r0, #0x1
	mov     r2, #0x0
	bl      Function_60045ac
	b       branch_6004584
@ 0x600427c

.arm
branch_600427c: @ 600427c :arm
	strh    r8, [r7, #0xc6]
	add     r1, sp, #0xc
	add     r0, r5, #0x10
	mov     r2, #0x40
	bl      Function_6000440
	ldrh    r0, [r7, #0xe6]
	cmp     r0, #0x2
	bne     branch_60042d8
	mov     r0, #0x20
	strh    r0, [sp, #0x16]
	ldr     r0, [r5, #0x54]
	add     r1, sp, #0x20
	strh    r0, [sp, #0x18]
	ldr     r2, [r5, #0x54]
	add     r0, r6, #0x8
	mov     r2, r2, lsr #16
	strh    r2, [sp, #0x1a]
	ldrh    r12, [r5, #0x58]
	mov     r3, #0x0
	mov     r2, #0x18
	strh    r12, [sp, #0x1c]
	strh    r3, [sp, #0x1e]
	bl      Function_6000440
.arm
branch_60042d8: @ 60042d8 :arm
	add     r2, sp, #0xc
	mov     r0, r4
	mov     r1, #125, 28 @ #0x7d0
	bl      Function_6002000
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	ldreqh  r2, [r0, #0x6]
	cmpeq   r2, #0x0
	beq     branch_600430c
	ldrh    r2, [r0, #0x6]
	mov     r0, #0x3
	bl      Function_60045ac
	b       branch_6004584
@ 0x600430c

.arm
branch_600430c: @ 600430c :arm
	add     r1, r7, #0x8a
	add     r0, r0, #0x8
	add     r1, r1, #1, 24 @ #0x100
	mov     r2, #0x6
	bl      Function_6000440
	add     r0, r7, #0x8a
	add     r1, sp, #0x6
	add     r0, r0, #1, 24 @ #0x100
	mov     r2, #0x6
	bl      Function_6000440
	ldrh    r2, [r6, #0x26]
	add     r1, sp, #0x6
	mov     r0, r4
	mov     r3, #125, 28 @ #0x7d0
	bl      Function_6002078
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0xc
	ldreqh  r2, [r0, #0x6]
	cmpeq   r2, #0x13
	bne     branch_600437c
	bl      Function_6000294
	mov     r1, #0xc
	strh    r1, [r0]
	strh    r1, [r0, #0x2]
	mov     r1, #0x6
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_6004584
@ 0x600437c

.arm
branch_600437c: @ 600437c :arm
	cmp     r1, #0x0
	ldreqh  r2, [r0, #0x6]
	cmpeq   r2, #0x0
	beq     branch_600439c
	ldrh    r2, [r0, #0x6]
	mov     r0, #0x4
	bl      Function_60045ac
	b       branch_6004584
@ 0x600439c

.arm
branch_600439c: @ 600439c :arm
	add     r0, r7, #0x8a
	add     r1, sp, #0x0
	add     r0, r0, #1, 24 @ #0x100
	mov     r2, #0x6
	bl      Function_6000440
	add     r1, sp, #0x0
	mov     r0, r4
	mov     r2, #0x1
	mov     r3, #125, 28 @ #0x7d0
	bl      Function_6002170
	mov     r4, r0
	bl      Function_6000720
	ldrh    r2, [r4, #0x4]
	mov     r6, r0
	cmp     r2, #0xc
	ldreqh  r1, [r4, #0x6]
	cmpeq   r1, #0x13
	bne     branch_6004408
	bl      Function_6000740
	bl      Function_6000294
	mov     r1, #0xc
	strh    r1, [r0]
	strh    r1, [r0, #0x2]
	mov     r1, #0x6
	strh    r1, [r0, #0x8]
	bl      Function_600029c
	b       branch_6004584
@ 0x6004408

.arm
branch_6004408: @ 6004408 :arm
	cmp     r2, #0x0
	ldreqh  r0, [r4, #0x6]
	cmpeq   r0, #0x0
	beq     branch_6004434
	mov     r0, r6
	bl      Function_6000740
	ldrh    r1, [r4, #0x4]
	ldrh    r2, [r4, #0x6]
	mov     r0, #0x6
	bl      Function_60045ac
	b       branch_6004584
@ 0x6004434

.arm
branch_6004434: @ 6004434 :arm
	ldrh    r1, [r4, #0x8]
	add     r0, r7, #1, 24 @ #0x100
	strh    r1, [r0, #0x88]
	ldrh    r0, [r5, #0x58]
	add     r1, r7, #126, 30 @ #0x1f8
	strh    r0, [r7, #0xba]
	mov     r0, #0x1
	mov     r2, #0x10
	bl      Function_6000598
	ldrh    r0, [r5, #0x12]
	and     r0, r0, #0xff
	tst     r0, #0x2
	mov     r0, r0, asr #2
	addeq   r0, r0, #0x19
	and     r4, r0, #0xff
	mov     r0, r4
	bl      Function_6000658
	strh    r0, [r7, #0xbc]
	mov     r0, r4
	bl      Function_60005e4
	bl      Function_6000720
	add     r1, r7, #1, 24 @ #0x100
	mov     r2, #0x1
	strh    r2, [r1, #0x82]
	strh    r2, [r7, #0x86]
	ldr     r1, [r7, #0x7bc]
	ldr     r2, [r7, #0x7b8]
	cmp     r1, #0x0
	mov     r4, r0
	cmpeq   r2, #0x0
	beq     branch_60044c4
	bl      Function_6001ad8
	orr     r0, r0, #0x1
	str     r0, [r7, #0x738]
	orr     r0, r1, #0x0
	str     r0, [r7, #0x73c]
.arm
branch_60044c4: @ 60044c4 :arm
	mov     r0, #0x8
	strh    r0, [r7]
	ldrb    r0, [r5, #0x5b]
	tst     r0, #0x4
	movne   r1, #0x2a
	ldrh    r0, [r5, #0x5c]
	moveq   r1, #0x0
	add     r0, r0, r1
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_6000860
	ldrb    r0, [r5, #0x5b]
	tst     r0, #0x4
	movne   r1, #0x6
	ldrh    r0, [r5, #0x5e]
	moveq   r1, #0x0
	add     r0, r0, r1
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_60008b0
	mov     r0, r4
	bl      Function_6000740
	mov     r0, #0x1
	strh    r0, [r7, #0xc2]
	bl      Function_6000294
	mov     r4, r0
	mov     r0, #0xc
	strh    r0, [r4]
	mov     r0, #0x0
	strh    r0, [r4, #0x2]
	mov     r0, #0x7
	strh    r0, [r4, #0x8]
	add     r0, r7, #1, 24 @ #0x100
	ldrh    r2, [r0, #0x88]
	add     r1, r7, #0x8a
	strh    r2, [r4, #0xa]
	add     r0, r1, #1, 24 @ #0x100
	add     r1, r4, #0x10
	mov     r2, #0x6
	bl      Function_6000440
	ldrh    r1, [r7, #0x30]
	mov     r0, r4
	strh    r1, [r4, #0x16]
	ldrh    r1, [r7, #0x32]
	strh    r1, [r4, #0x18]
	bl      Function_600029c
	mov     r0, r6
	bl      Function_6000740
.arm
branch_6004584: @ 6004584 :arm
	add     sp, sp, #37, 28 @ #0x250
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x6004590

.word 0x60198a0 @ 0x6004590
.word 0x216 @ 0x6004594
.word 0x2710 @ 0x6004598
.word 0x20b @ 0x600459c
.word 0x303 @ 0x60045a0
.arm
Function_60045a4: @ 60045a4 :arm
	ldr     pc, [pc, #-0x4] @ [0x60045a8] (=0x3806254)
@ 0x60045a8

.word 0x3806254 @ 0x60045a8
.arm
Function_60045ac: @ 60045ac :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	mov     r4, r2
	bl      Function_6000294
	mov     r1, #0xc
	strh    r1, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	strh    r6, [r0, #0x4]
	strh    r5, [r0, #0x6]
	strh    r4, [r0, #0xe]
	bl      Function_600029c
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x60045e8

.arm
Function_60045e8: @ 60045e8 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	ldr     r1, [r0, #0x4]
	add     r2, sp, #0x0
	mov     r3, r1, lsl #16
	mov     r1, #0x0
	mov     r4, r3, lsr #16
	bl      Function_6004640
	cmp     r0, #0x1
	bne     branch_6004634
	bl      Function_6000294
	mov     r1, #0xd
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	strh    r4, [r0, #0x8]
	ldrh    r1, [sp]
	strh    r1, [r0, #0xa]
	bl      Function_600029c
.arm
branch_6004634: @ 6004634 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x6004640

.arm
Function_6004640: @ 6004640 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #34, 28 @ #0x220
	ldr     r3, [pc, #0x574] @ [0x6004bc4] (=0x60198a0)
	ldr     r4, [r0, #0x4]
	movs    r10, r1
	ldrne   r0, [r0, #0x8]
	mov     r1, r4, lsl #16
	moveq   r0, #0x0
	mov     r0, r0, lsl #16
	mov     r11, #0x0
	ldr     r7, [r3, #0x550]
	mov     r8, r1, lsr #16
	ldrh    r1, [r7]
	mov     r0, r0, lsr #16
	cmp     r1, #0x9
	str     r2, [sp]
	mov     r5, r11
	str     r0, [sp, #0x8]
	cmpne   r1, #0x7
	bne     branch_60046a0
	ldr     r0, [r7, #0xc]
	cmp     r0, #0x1
	moveq   r5, #0x1
	b       branch_6004798
@ 0x60046a0

.arm
branch_60046a0: @ 60046a0 :arm
	cmp     r1, #0xa
	cmpne   r1, #0x8
	bne     branch_600475c
	bl      Function_6000720
	add     r1, r7, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x82]
	mov     r4, r0
	cmp     r1, #0x0
	bne     branch_6004704
	bl      Function_6000740
	cmp     r10, #0x0
	bne     branch_60046fc
	bl      Function_6000294
	mov     r1, #0xd
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	mov     r1, #0x0
	strh    r1, [r0, #0x4]
	strh    r1, [r0, #0x6]
	strh    r8, [r0, #0x8]
	strh    r1, [r0, #0xa]
	bl      Function_600029c
.arm
branch_60046fc: @ 60046fc :arm
	mov     r0, #0x0
	b       branch_6004bb8
@ 0x6004704

.arm
branch_6004704: @ 6004704 :arm
	ldr     r0, [r7, #0xc]
	cmp     r0, #0x1
	bne     branch_6004734
	mov     r0, #0x0
	str     r0, [r7, #0xc]
	mov     r5, #0x1
	bl      Function_6005cd0
	bl      Function_60006c0
	ldrh    r0, [r7]
	cmp     r0, #0xa
	moveq   r0, #0x8
	streqh  r0, [r7]
.arm
branch_6004734: @ 6004734 :arm
	add     r0, r7, #1, 24 @ #0x100
	mov     r1, #0x0
	strh    r1, [r0, #0x82]
	strh    r1, [r7, #0x86]
	str     r1, [r7, #0x14]
	str     r1, [r7, #0x10]
	mov     r0, r4
	str     r1, [r7, #0x1c]
	bl      Function_6000740
	b       branch_6004798
@ 0x600475c

.arm
branch_600475c: @ 600475c :arm
	cmp     r10, #0x0
	bne     branch_6004790
	bl      Function_6000294
	mov     r1, #0xd
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	mov     r1, r11
	strh    r1, [r0, #0x4]
	strh    r1, [r0, #0x6]
	strh    r8, [r0, #0x8]
	strh    r1, [r0, #0xa]
	bl      Function_600029c
.arm
branch_6004790: @ 6004790 :arm
	mov     r0, #0x0
	b       branch_6004bb8
@ 0x6004798

.arm
branch_6004798: @ 6004798 :arm
	ldrh    r0, [r7]
	cmp     r0, #0xa
	cmpne   r0, #0x8
	bne     branch_60049c0
	add     r0, r7, #0x8a
	add     r1, sp, #0x1a
	add     r0, r0, #1, 24 @ #0x100
	mov     r2, #0x6
	bl      Function_6000440
	mov     r9, #0x0
	add     r6, sp, #0x1a
	mov     r4, #0x3
	b       branch_6004850
@ 0x60047cc

.arm
branch_60047cc: @ 60047cc :arm
	add     r0, sp, #0x20
	mov     r1, r6
	mov     r2, r4
	bl      Function_60020f8
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x7
	bgt     branch_6004808
	bge     branch_6004810
	cmp     r1, #0x1
	bgt     branch_6004818
	cmp     r1, #0x0
	blt     branch_6004818
	cmpne   r1, #0x1
	beq     branch_6004858
	b       branch_6004818
@ 0x6004808

.arm
branch_6004808: @ 6004808 :arm
	cmp     r1, #0xc
	bne     branch_6004818
.arm
branch_6004810: @ 6004810 :arm
	add     r9, r9, #0x1
	b       branch_6004850
@ 0x6004818

.arm
branch_6004818: @ 6004818 :arm
	cmp     r10, #0x0
	mov     r2, r8
	mov     r0, #0x5
	mov     r3, #0x0
	beq     branch_6004834
	bl      Function_6004cd4
	b       branch_6004838
@ 0x6004834

.arm
branch_6004834: @ 6004834 :arm
	bl      Function_6004c90
.arm
branch_6004838: @ 6004838 :arm
	cmp     r5, #0x0
	beq     branch_6004848
	mov     r0, #0x1
	bl      Function_6007990
.arm
branch_6004848: @ 6004848 :arm
	mov     r0, #0x0
	b       branch_6004bb8
@ 0x6004850

.arm
branch_6004850: @ 6004850 :arm
	cmp     r9, #0x2
	blt     branch_60047cc
.arm
branch_6004858: @ 6004858 :arm
	mov     r0, #0x0
	strh    r0, [r7, #0xc2]
	mov     r0, #0x3
	mov     r11, #0x1
	strh    r0, [r7]
	add     r0, sp, #0x20
	mov     r1, r11
	bl      Function_6001e94
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_60048bc
	cmp     r10, #0x0
	mov     r2, r8
	mov     r0, #0x0
	mov     r3, r11
	beq     branch_60048a0
	bl      Function_6004cd4
	b       branch_60048a4
@ 0x60048a0

.arm
branch_60048a0: @ 60048a0 :arm
	bl      Function_6004c90
.arm
branch_60048a4: @ 60048a4 :arm
	cmp     r5, #0x0
	beq     branch_60048b4
	mov     r0, #0x1
	bl      Function_6007990
.arm
branch_60048b4: @ 60048b4 :arm
	mov     r0, #0x0
	b       branch_6004bb8
@ 0x60048bc

.arm
branch_60048bc: @ 60048bc :arm
	add     r0, sp, #0x20
	bl      Function_60029c4
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_600490c
	ldr     r0, [pc, #0x2f0] @ [0x6004bc8] (=0x302)
	cmp     r10, #0x0
	mov     r2, r8
	beq     branch_60048ec
	mov     r3, r11
	bl      Function_6004cd4
	b       branch_60048f4
@ 0x60048ec

.arm
branch_60048ec: @ 60048ec :arm
	mov     r3, r11
	bl      Function_6004c90
.arm
branch_60048f4: @ 60048f4 :arm
	cmp     r5, #0x0
	beq     branch_6004904
	mov     r0, #0x1
	bl      Function_6007990
.arm
branch_6004904: @ 6004904 :arm
	mov     r0, #0x0
	b       branch_6004bb8
@ 0x600490c

.arm
branch_600490c: @ 600490c :arm
	mov     r0, #0x2
	strh    r0, [r7]
	mov     r1, #0x0
	str     r1, [r7, #0x198]
	add     r3, r7, #1, 24 @ #0x100
	add     r0, r7, #103, 30 @ #0x19c
	mov     r2, #0x50
	strh    r1, [r3, #0x96]
	bl      Function_6001ad0
	bl      Function_600082c
	cmp     r10, #0x1
	bne     branch_600499c
	bl      Function_6000294
	mov     r4, r0
	mov     r0, #0xc
	strh    r0, [r4]
	mov     r0, #0x0
	strh    r0, [r4, #0x2]
	mov     r0, #0x9
	strh    r0, [r4, #0x8]
	ldr     r0, [sp, #0x8]
	mov     r2, #0x6
	strh    r0, [r4, #0xc]
	add     r0, r7, #1, 24 @ #0x100
	ldrh    r1, [r0, #0x88]
	add     r0, sp, #0x1a
	strh    r1, [r4, #0xa]
	add     r1, r4, #0x10
	bl      Function_6000440
	ldrh    r1, [r7, #0x30]
	mov     r0, r4
	strh    r1, [r4, #0x16]
	ldrh    r1, [r7, #0x32]
	strh    r1, [r4, #0x18]
	bl      Function_600029c
	b       branch_60049ac
@ 0x600499c

.arm
branch_600499c: @ 600499c :arm
	mov     r0, #0x0
	add     r2, sp, #0x1a
	mov     r1, r0
	bl      Function_6004bcc
.arm
branch_60049ac: @ 60049ac :arm
	cmp     r5, #0x0
	beq     branch_6004ba8
	mov     r0, #0x1
	bl      Function_6007990
	b       branch_6004ba8
@ 0x60049c0

.arm
branch_60049c0: @ 60049c0 :arm
	mov     r6, #0x1
	b       branch_6004ba0
@ 0x60049c8

.arm
branch_60049c8: @ 60049c8 :arm
	add     r0, r7, #1, 24 @ #0x100
	ldrh    r0, [r0, #0x82]
	mov     r1, #0x1
	mov     r9, r1, lsl r6
	and     r0, r0, r8
	tst     r9, r0
	beq     branch_6004b9c
	sub     r1, r6, #0x1
	mov     r2, #0x6
	mul     r0, r1, r2
	str     r0, [sp, #0x10]
	add     r0, r7, #74, 30 @ #0x128
	str     r0, [sp, #0xc]
	mov     r0, r6, lsl #16
	mov     r0, r0, lsr #16
	str     r0, [sp, #0x4]
	ldr     r1, [sp, #0xc]
	ldr     r0, [sp, #0x10]
	add     r0, r1, r0
	add     r1, sp, #0x14
	bl      Function_6000440
	mov     r4, #0x0
	b       branch_6004a8c
@ 0x6004a24

.arm
branch_6004a24: @ 6004a24 :arm
	add     r0, sp, #0x20
	add     r1, sp, #0x14
	mov     r2, #0x3
	bl      Function_60020f8
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6004a94
	cmp     r1, #0x7
	cmpne   r1, #0xc
	bne     branch_6004a54
	add     r4, r4, #0x1
	b       branch_6004a8c
@ 0x6004a54

.arm
branch_6004a54: @ 6004a54 :arm
	cmp     r10, #0x0
	mov     r2, r8
	mov     r0, #0x5
	mov     r3, r11
	beq     branch_6004a70
	bl      Function_6004cd4
	b       branch_6004a74
@ 0x6004a70

.arm
branch_6004a70: @ 6004a70 :arm
	bl      Function_6004c90
.arm
branch_6004a74: @ 6004a74 :arm
	cmp     r5, #0x0
	beq     branch_6004a84
	mov     r0, #0x1
	bl      Function_6007990
.arm
branch_6004a84: @ 6004a84 :arm
	mov     r0, #0x0
	b       branch_6004bb8
@ 0x6004a8c

.arm
branch_6004a8c: @ 6004a8c :arm
	cmp     r4, #0x2
	blt     branch_6004a24
.arm
branch_6004a94: @ 6004a94 :arm
	bl      Function_6000720
	mov     r4, r0
	add     r1, r7, #1, 24 @ #0x100
	ldrh    r3, [r1, #0x82]
	tst     r3, r9
	beq     branch_6004b98
	ldr     r2, [sp, #0xc]
	ldr     r0, [sp, #0x10]
	mov     r12, #0x1
	add     r0, r2, r0
	ldr     r2, [sp, #0x4]
	orr     r2, r11, r12, lsl r2
	mov     r2, r2, lsl #16
	mov     r11, r2, lsr #16
	mvn     r2, r9
	and     r3, r3, r2
	strh    r3, [r1, #0x82]
	ldrh    r3, [r7, #0x86]
	mov     r1, #0x0
	and     r2, r3, r2
	strh    r2, [r7, #0x86]
	ldr     r2, [sp, #0x4]
	add     r2, r7, r2, lsl #3
	str     r1, [r2, #0x738]
	str     r1, [r2, #0x73c]
	mov     r2, #0x6
	bl      Function_6001ad0
	mov     r0, r4
	bl      Function_6000740
	cmp     r10, #0x1
	bne     branch_6004b6c
	bl      Function_6000294
	mov     r4, r0
	mov     r0, #0x8
	strh    r0, [r4]
	mov     r0, #0x0
	strh    r0, [r4, #0x2]
	mov     r0, #0x9
	strh    r0, [r4, #0x8]
	ldr     r0, [sp, #0x8]
	add     r1, r4, #0xa
	strh    r0, [r4, #0x12]
	ldr     r0, [sp, #0x4]
	mov     r2, #0x6
	strh    r0, [r4, #0x10]
	add     r0, sp, #0x14
	bl      Function_6000440
	ldrh    r1, [r7, #0x30]
	mov     r0, r4
	strh    r1, [r4, #0x2c]
	ldrh    r1, [r7, #0x32]
	strh    r1, [r4, #0x2e]
	bl      Function_600029c
	b       branch_6004b80
@ 0x6004b6c

.arm
branch_6004b6c: @ 6004b6c :arm
	mov     r0, r6, lsl #16
	mov     r1, r0, lsr #16
	add     r2, sp, #0x14
	mov     r0, #0x1
	bl      Function_6004bcc
.arm
branch_6004b80: @ 6004b80 :arm
	cmp     r5, #0x0
	beq     branch_6004b9c
	mov     r0, r9, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_6007990
	b       branch_6004b9c
@ 0x6004b98

.arm
branch_6004b98: @ 6004b98 :arm
	bl      Function_6000740
.arm
branch_6004b9c: @ 6004b9c :arm
	add     r6, r6, #0x1
.arm
branch_6004ba0: @ 6004ba0 :arm
	cmp     r6, #0x10
	blt     branch_60049c8
.arm
branch_6004ba8: @ 6004ba8 :arm
	ldr     r0, [sp]
	cmp     r0, #0x0
	strneh  r11, [r0]
	mov     r0, #0x1
.arm
branch_6004bb8: @ 6004bb8 :arm
	add     sp, sp, #34, 28 @ #0x220
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x6004bc4

.word 0x60198a0 @ 0x6004bc4
.word 0x302 @ 0x6004bc8
.arm
Function_6004bcc: @ 6004bcc :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r3, [pc, #0xb0] @ [0x6004c88] (=0x60198a0)
	mov     r8, r0
	ldr     r5, [r3, #0x550]
	mov     r7, r1
	mov     r6, r2
	bl      Function_6000294
	mov     r4, r0
	mov     r0, #0x0
	strh    r0, [r4, #0x2]
	cmp     r8, #0x0
	mov     r1, #0x1a
	mov     r2, #0x6
	beq     branch_6004c3c
	mov     r0, #0x8
	strh    r0, [r4]
	strh    r1, [r4, #0x8]
	ldr     r0, [pc, #0x74] @ [0x6004c8c] (=0xf001)
	add     r1, r4, #0xa
	strh    r0, [r4, #0x12]
	strh    r7, [r4, #0x10]
	mov     r0, r6
	bl      Function_6000440
	ldrh    r0, [r5, #0x30]
	strh    r0, [r4, #0x2c]
	ldrh    r0, [r5, #0x32]
	strh    r0, [r4, #0x2e]
	b       branch_6004c78
@ 0x6004c3c

.arm
branch_6004c3c: @ 6004c3c :arm
	mov     r0, #0xc
	strh    r0, [r4]
	ldr     r0, [pc, #0x40] @ [0x6004c8c] (=0xf001)
	strh    r1, [r4, #0x8]
	strh    r0, [r4, #0xc]
	add     r0, r5, #1, 24 @ #0x100
	ldrh    r1, [r0, #0x88]
	mov     r0, r6
	strh    r1, [r4, #0xa]
	add     r1, r4, #0x10
	bl      Function_6000440
	ldrh    r0, [r5, #0x30]
	strh    r0, [r4, #0x16]
	ldrh    r0, [r5, #0x32]
	strh    r0, [r4, #0x18]
.arm
branch_6004c78: @ 6004c78 :arm
	mov     r0, r4
	bl      Function_600029c
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x6004c88

.word 0x60198a0 @ 0x6004c88
.word 0xf001 @ 0x6004c8c
.arm
Function_6004c90: @ 6004c90 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r6, r1
	mov     r5, r2
	mov     r4, r3
	bl      Function_6000294
	mov     r1, #0xd
	strh    r1, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	strh    r7, [r0, #0x4]
	strh    r6, [r0, #0x6]
	strh    r5, [r0, #0x8]
	strh    r4, [r0, #0xa]
	bl      Function_600029c
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6004cd4

.arm
Function_6004cd4: @ 6004cd4 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r6, r1
	mov     r5, r2
	mov     r4, r3
	bl      Function_6000294
	mov     r1, #0x25
	strh    r1, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	strh    r7, [r0, #0x4]
	strh    r6, [r0, #0x6]
	strh    r5, [r0, #0x8]
	strh    r4, [r0, #0xa]
	bl      Function_600029c
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6004d18

.arm
Function_6004d18: @ 6004d18 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #129, 30 @ #0x204
	ldr     r1, [pc, #0x378] @ [0x60050a0] (=0x60198a0)
	mov     r10, r0
	ldr     r8, [r1, #0x550]
	ldr     r11, [r10, #0x4]
	ldrh    r1, [r8, #0x9c]
	ldr     r4, [r10, #0x8]
	ldr     r5, [r10, #0xc]
	ldr     r6, [r10, #0x10]
	ldr     r0, [pc, #0x35c] @ [0x60050a4] (=0x60188a0)
	cmp     r1, #0x0
	mov     r7, #0x0
	bne     branch_6004d9c
	ldrh    r1, [r8, #0x3c]
	add     r1, r1, #0x1f
	bic     r1, r1, #0x1f
	cmp     r6, r1
	add     r1, r8, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x88]
	movcc   r7, #0x6
	cmp     r1, #0x0
	ldrneh  r1, [r8, #0x3e]
	addne   r1, r1, #0x51
	bne     branch_6004d90
	ldrh    r2, [r8, #0x3e]
	ldrh    r1, [r8, #0xf8]
	add     r2, r2, #0xc
	mul     r1, r2, r1
	add     r1, r1, #0x29
.arm
branch_6004d90: @ 6004d90 :arm
	bic     r1, r1, #0x1f
	cmp     r4, r1
	movcc   r7, #0x6
.arm
branch_6004d9c: @ 6004d9c :arm
	ldrh    r1, [r8, #0xe6]
	cmp     r1, #0x2
	bne     branch_6004dcc
	add     r0, r0, #1, 20 @ #0x1000
	ldr     r1, [r0, #0x54c]
	add     r0, r8, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x46]
	ldrh    r3, [r0, #0xf6]
	mov     r2, #0x1
	mov     r0, r2, lsl r1
	tst     r3, r0, asr #1
	moveq   r7, #0x6
.arm
branch_6004dcc: @ 6004dcc :arm
	cmp     r7, #0x0
	beq     branch_6004df4
	bl      Function_6000294
	mov     r1, #0xe
	strh    r1, [r0]
	strh    r7, [r0, #0x2]
	mov     r1, #0xa
	strh    r1, [r0, #0x4]
	bl      Function_600029c
	b       branch_6005094
@ 0x6004df4

.arm
branch_6004df4: @ 6004df4 :arm
	ldr     r0, [r8, #0xc]
	mov     r1, #0x0
	cmp     r0, #0x0
	strne   r1, [r8, #0xc]
	movne   r1, #0x1
	cmp     r1, #0x0
	beq     branch_6004e18
	ldr     r0, [pc, #0x290] @ [0x60050a8] (=0xffff)
	bl      Function_6007990
.arm
branch_6004e18: @ 6004e18 :arm
	bl      Function_60064c4
	bl      Function_6000720
	str     r0, [sp]
	add     r0, r10, #0x14
	mov     r1, #0x0
	bl      Function_6008598
	ldr     r0, [pc, #0x268] @ [0x60050a0] (=0x60198a0)
	ldr     r7, [r10, #0x30]
	ldr     r9, [r0, #0x550]
	ldrh    r0, [r9]
	cmp     r0, #0x9
	cmpne   r0, #0xa
	beq     branch_6004f0c
	bl      Function_6000720
	tst     r7, #0x4
	ldrneh  r2, [r10, #0x38]
	add     r1, r9, #7, 24 @ #0x700
	ldreqh  r2, [r9, #0x5c]
	cmp     r2, #0x0
	moveq   r2, #0x10
	tst     r7, #0x1
	ldrneh  r3, [r10, #0x34]
	ldreqh  r3, [r9, #0x58]
	cmp     r3, #0x0
	moveq   r3, #0x10
	cmp     r3, r2
	movhi   r3, r2
	tst     r7, #0x2
	ldrneh  r12, [r10, #0x36]
	ldreqh  r12, [r9, #0x5a]
	strh    r2, [r1, #0xc4]
	cmp     r12, #0x0
	moveq   r12, #0x10
	cmp     r12, r2
	strh    r3, [r1, #0xc0]
	movhi   r12, r2
	strh    r12, [r1, #0xc2]
	ldrsh   r1, [r9, #0x62]
	cmp     r1, r2
	strgth  r2, [r9, #0x62]
	tst     r7, #2, 24 @ #0x200
	ldrneh  r2, [r10, #0x3a]
	add     r1, r9, #7, 24 @ #0x700
	ldreqh  r2, [r9, #0x98]
	tst     r7, #1, 22 @ #0x400
	strh    r2, [r1, #0xca]
	ldrneb  r2, [r10, #0x3c]
	add     r1, r9, #7, 24 @ #0x700
	ldreqh  r2, [r9, #0x92]
	tst     r7, #2, 22 @ #0x800
	strh    r2, [r1, #0xc6]
	ldrneb  r2, [r10, #0x3d]
	add     r1, r9, #7, 24 @ #0x700
	ldreqh  r2, [r9, #0x94]
	tst     r7, #1, 20 @ #0x1000
	strh    r2, [r1, #0xc8]
	ldrneb  r2, [r10, #0x3e]
	add     r1, r9, #7, 24 @ #0x700
	ldreqh  r2, [r9, #0x9a]
	strh    r2, [r1, #0xcc]
	bl      Function_6000740
.arm
branch_6004f0c: @ 6004f0c :arm
	ldrh    r0, [r8]
	add     r0, r0, #0xf9
	add     r0, r0, #255, 24 @ #0xff00
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	cmp     r0, #0x1
	bhi     branch_600506c
	mov     r2, #0x0
	strh    r2, [r8, #0x84]
	strh    r2, [r8, #0x5e]
	mov     r1, #0x1
	strh    r1, [r8, #0x60]
	strh    r2, [r8, #0x88]
	strh    r2, [r8, #0x9e]
	mov     r0, #0x3c
	strh    r0, [r8, #0xa0]
	str     r2, [r8, #0x734]
	strh    r2, [r8, #0x8a]
	strh    r2, [r8, #0x8c]
	strh    r2, [r8, #0x8e]
	strh    r2, [r8, #0x90]
	strh    r2, [r8, #0x66]
	str     r11, [r8, #0x74]
	strh    r4, [r8, #0x72]
	add     r0, r11, r4
	str     r0, [r8, #0x78]
	strh    r2, [r8, #0x70]
	str     r5, [r8, #0x7c]
	strh    r6, [r8, #0x80]
	strh    r2, [r8, #0x62]
	strh    r2, [r8, #0x64]
	strh    r2, [r8, #0x68]
	strh    r2, [r8, #0x6a]
	rsb     r0, r1, #1, 16 @ #0x10000
	strh    r0, [r8, #0xbe]
	strh    r1, [r8, #0xc0]
	bl      Function_6001ad8
	orr     r1, r1, #0x0
	orr     r2, r0, #0x1
	mov     r3, #0x0
.arm
branch_6004fac: @ 6004fac :arm
	add     r0, r8, r3, lsl #3
	str     r2, [r0, #0x738]
	add     r3, r3, #0x1
	str     r1, [r0, #0x73c]
	cmp     r3, #0x10
	blt     branch_6004fac
	bl      Function_6000748
	mov     r0, #0x0
	strh    r0, [r8, #0xce]
	bl      Function_6005ce4
	ldrh    r0, [r8]
	cmp     r0, #0x8
	moveq   r0, #0xa
	streqh  r0, [r8]
	beq     branch_6004ff4
	cmp     r0, #0x7
	moveq   r0, #0x9
	streqh  r0, [r8]
.arm
branch_6004ff4: @ 6004ff4 :arm
	bl      Function_6000294
	mov     r1, #0xe
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0xa
	strh    r1, [r0, #0x4]
	bl      Function_600029c
	mov     r1, #0x1
	ldr     r0, [sp]
	str     r1, [r8, #0xc]
	bl      Function_6000740
	add     r0, sp, #0x4
	mov     r1, #0x1
	bl      Function_600282c
	mov     r4, r0
	ldrh    r0, [r4, #0x4]
	cmp     r0, #0x0
	beq     branch_6005094
	bl      Function_6000294
	mov     r2, #0xe
	strh    r2, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	add     r1, r2, #130, 30 @ #0x208
	strh    r1, [r0, #0x4]
	ldrh    r1, [r4, #0x4]
	strh    r1, [r0, #0x6]
	bl      Function_600029c
	b       branch_6005094
@ 0x600506c

.arm
branch_600506c: @ 600506c :arm
	ldr     r0, [sp]
	bl      Function_6000740
	bl      Function_6000294
	mov     r1, #0xe
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	mov     r1, #0xa
	strh    r1, [r0, #0x4]
	bl      Function_600029c
.arm
branch_6005094: @ 6005094 :arm
	add     sp, sp, #129, 30 @ #0x204
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x60050a0

.word 0x60198a0 @ 0x60050a0
.word 0x60188a0 @ 0x60050a4
.word 0xffff @ 0x60050a8
.arm
Function_60050ac: @ 60050ac :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x14
	ldr     r1, [pc, #0x124] @ [0x60051e0] (=0x60198a0)
	ldr     r2, [r0, #0x10]
	ldr     r10, [r1, #0x550]
	ldr     r5, [r0, #0x8]
	add     r4, r10, #1, 24 @ #0x100
	ldr     r3, [r0, #0x14]
	ldrh    r8, [r4, #0x88]
	mov     r1, r5, lsl #16
	ldrh    r9, [r4, #0x82]
	ldr     r11, [r0, #0x4]
	ldr     r5, [r0, #0xc]
	cmp     r8, #0x0
	ldr     r6, [r0, #0x18]
	ldr     r7, [r0, #0x1c]
	mov     r2, r2, lsl #16
	mov     r0, r2, lsr #16
	str     r0, [sp, #0x10]
	ldr     r0, [r10, #0xc]
	movne   r5, #0x1
	cmp     r0, #0x0
	mov     r3, r3, lsl #16
	mov     r4, r1, lsr #16
	mov     r1, r3, lsr #16
	moveq   r8, #0x3
	beq     branch_6005140
	tst     r5, r9
	moveq   r8, #0x0
	beq     branch_6005140
	str     r11, [sp]
	stmfa   sp, {r4,r6,r7}
	ldr     r2, [sp, #0x10]
	mov     r0, r9
	mov     r3, r5
	bl      Function_600752c
	mov     r8, r0
.arm
branch_6005140: @ 6005140 :arm
	cmp     r8, #0x2
	beq     branch_60051d4
	bl      Function_6000294
	mov     r1, #0x81
	strh    r1, [r0]
	strh    r8, [r0, #0x2]
	mov     r1, #0x14
	strh    r1, [r0, #0x8]
	ldr     r1, [sp, #0x10]
	cmp     r8, #0xa
	strh    r1, [r0, #0xa]
	andeq   r1, r5, r9
	strh    r5, [r0, #0xc]
	movne   r1, #0x0
	strh    r1, [r0, #0xe]
	mov     r1, #0x0
	strh    r1, [r0, #0x10]
	strh    r4, [r0, #0x18]
	str     r11, [r0, #0x14]
	str     r6, [r0, #0x1c]
	ldr     r1, [pc, #0x4c] @ [0x60051e4] (=0xffff)
	str     r7, [r0, #0x20]
	strh    r1, [r0, #0x1a]
	add     r1, r10, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x88]
	ldrh    r2, [r10, #0x30]
	cmp     r1, #0x0
	ldrh    r3, [r10, #0x32]
	moveq   r1, r2
	movne   r1, r3
	strh    r1, [r0, #0x24]
	add     r1, r10, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x88]
	cmp     r1, #0x0
	movne   r3, r2
	strh    r3, [r0, #0x26]
	bl      Function_600029c
.arm
branch_60051d4: @ 60051d4 :arm
	add     sp, sp, #0x14
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x60051e0

.word 0x60198a0 @ 0x60051e0
.word 0xffff @ 0x60051e4
.arm
Function_60051e8: @ 60051e8 :arm
	stmfd   sp!, {r4-r6,lr}
	sub     sp, sp, #2, 24 @ #0x200
	ldr     r0, [pc, #0x100] @ [0x60052f8] (=0x60198a0)
	mov     r4, #0x0
	ldr     r6, [r0, #0x550]
	ldrh    r0, [r6]
	cmp     r0, #0x9
	cmpne   r0, #0xa
	beq     branch_6005228
	bl      Function_6000294
	mov     r1, #0x10
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	b       branch_60052ec
@ 0x6005228

.arm
branch_6005228: @ 6005228 :arm
	bl      Function_6000720
	ldr     r1, [r6, #0xc]
	mov     r5, r0
	mov     r0, #0x0
	cmp     r1, #0x1
	str     r0, [r6, #0xc]
	moveq   r4, #0x1
	bl      Function_6005cd0
	bl      Function_60006c0
	ldrh    r0, [r6]
	cmp     r0, #0xa
	moveq   r0, #0x8
	streqh  r0, [r6]
	beq     branch_600526c
	cmp     r0, #0x9
	moveq   r0, #0x7
	streqh  r0, [r6]
.arm
branch_600526c: @ 600526c :arm
	mov     r0, r5
	bl      Function_6000740
	add     r0, sp, #0x0
	mov     r1, #0x0
	bl      Function_600282c
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6005298
	ldr     r0, [pc, #0x68] @ [0x60052fc] (=0x216)
	bl      Function_6005304
	b       branch_60052ec
@ 0x6005298

.arm
branch_6005298: @ 6005298 :arm
	add     r0, sp, #0x0
	mov     r1, #0x7
	bl      Function_60024d8
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_60052bc
	mov     r0, #65, 30 @ #0x104
	bl      Function_6005304
	b       branch_60052ec
@ 0x60052bc

.arm
branch_60052bc: @ 60052bc :arm
	mov     r0, #0x0
	strh    r0, [r6, #0x8a]
	cmp     r4, #0x0
	beq     branch_60052d4
	ldr     r0, [pc, #0x2c] @ [0x6005300] (=0xffff)
	bl      Function_6007990
.arm
branch_60052d4: @ 60052d4 :arm
	bl      Function_6000294
	mov     r1, #0x10
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_60052ec: @ 60052ec :arm
	add     sp, sp, #2, 24 @ #0x200
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x60052f8

.word 0x60198a0 @ 0x60052f8
.word 0x216 @ 0x60052fc
.word 0xffff @ 0x6005300
.arm
Function_6005304: @ 6005304 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	bl      Function_6000294
	mov     r1, #0x10
	strh    r1, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	strh    r5, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6005338

.arm
Function_6005338: @ 6005338 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r1, [pc, #0x7c] @ [0x60053c0] (=0x60198a0)
	ldr     r2, [r0, #0x8]
	ldr     r4, [r1, #0x550]
	mov     r5, r2, lsl #16
	ldr     r6, [r0, #0x4]
	mov     r7, r5, lsr #16
	bl      Function_6000720
	str     r6, [r4, #0xb0]
	strh    r7, [r4, #0xb8]
	add     r1, r6, r5, lsr #16
	str     r1, [r4, #0xb4]
	mov     r1, #0x0
	strh    r1, [r4, #0xae]
	str     r1, [r4, #0xa8]
	strh    r1, [r4, #0xac]
	str     r1, [r4, #0x18]
	mov     r1, #0xb
	strh    r1, [r4]
	mov     r5, r0
	bl      Function_6000294
	mov     r1, #0x11
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0xe
	strh    r1, [r0, #0x4]
	bl      Function_600029c
	mov     r1, #0x1
	mov     r0, r5
	str     r1, [r4, #0x10]
	bl      Function_6000740
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x60053c0

.word 0x60198a0 @ 0x60053c0
.arm
Function_60053c4: @ 60053c4 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #35, 28 @ #0x230
	ldr     r1, [pc, #0xe4] @ [0x60054b8] (=0x60198a0)
	mov     r5, r0
	ldr     r4, [r1, #0x550]
	add     r0, r5, #0x4
	add     r1, r4, #0xa2
	mov     r2, #0x6
	bl      Function_6000440
	ldr     r0, [r5, #0xc]
	add     r1, sp, #0x0
	str     r0, [r4, #0xa8]
	ldr     r2, [r5, #0x10]
	mov     r0, #0x1
	strh    r2, [r4, #0xac]
	str     r0, [r4, #0x18]
	mov     r0, #0x0
	mov     r2, #0x30
	bl      Function_6000598
	mov     r0, #0x0
	strh    r0, [sp]
	ldr     r1, [r5, #0x10]
	add     r0, r4, #1, 24 @ #0x100
	strh    r1, [sp, #0x6]
	ldrh    r0, [r0, #0xec]
	add     r1, sp, #0x18
	cmp     r0, #0x2
	moveq   r3, #0x14
	movne   r3, #0xa
	add     r0, r5, #0x4
	mov     r2, #0x6
	strb    r3, [sp, #0xe]
	bl      Function_6000440
	add     r1, sp, #0x1e
	add     r0, r4, #0xe0
	mov     r2, #0x6
	bl      Function_6000440
	ldr     r2, [r5, #0xc]
	add     r0, sp, #0x30
	add     r1, sp, #0x0
	str     r2, [sp, #0x2c]
	bl      Function_600232c
	mov     r4, r0
	bl      Function_6000294
	mov     r1, #0x12
	strh    r1, [r0]
	ldrh    r1, [r4, #0x4]
	cmp     r1, #0x0
	moveq   r1, #0x0
	movne   r1, #0x1
	strh    r1, [r0, #0x2]
	ldrh    r1, [r4, #0x4]
	cmp     r1, #0x0
	movne   r1, #1, 24 @ #0x100
	strneh  r1, [r0, #0x4]
	ldrneh  r1, [r4, #0x4]
	strneh  r1, [r0, #0x6]
	bl      Function_600029c
	add     sp, sp, #35, 28 @ #0x230
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x60054b8

.word 0x60198a0 @ 0x60054b8
.arm
Function_60054bc: @ 60054bc :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #2, 24 @ #0x200
	ldr     r0, [pc, #0xa8] @ [0x6005574] (=0x60198a0)
	ldr     r4, [r0, #0x550]
	bl      Function_6000720
	ldrh    r1, [r4]
	cmp     r1, #0xb
	beq     branch_60054fc
	bl      Function_6000740
	bl      Function_6000294
	mov     r1, #0x13
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	b       branch_6005568
@ 0x60054fc

.arm
branch_60054fc: @ 60054fc :arm
	mov     r1, #0x0
	str     r1, [r4, #0x10]
	mov     r1, #0x8
	strh    r1, [r4]
	bl      Function_6000740
	add     r0, sp, #0x0
	mov     r1, #0x7
	bl      Function_60024d8
	ldrh    r4, [r0, #0x4]
	cmp     r4, #0x0
	beq     branch_6005550
	bl      Function_6000294
	mov     r1, #0x13
	strh    r1, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	mov     r1, #65, 30 @ #0x104
	strh    r1, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
	b       branch_6005568
@ 0x6005550

.arm
branch_6005550: @ 6005550 :arm
	bl      Function_6000294
	mov     r1, #0x13
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_6005568: @ 6005568 :arm
	add     sp, sp, #2, 24 @ #0x200
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6005574

.word 0x60198a0 @ 0x6005574
.arm
Function_6005578: @ 6005578 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x98] @ [0x600561c] (=0x60198a0)
	ldr     r2, [r0, #0x4]
	ldr     r3, [r1, #0x550]
	add     r1, r3, #1, 24 @ #0x100
	strh    r2, [r1, #0x96]
	ldrh    r1, [r1, #0x96]
	cmp     r1, #0x3
	addls   pc, pc, r1, lsl #2
	b       branch_60055c8
@ 0x60055a0

.arm
Function_60055a0: @ 60055a0 :arm
	b       branch_60055b0
@ 0x60055a4

.arm
Function_60055a4: @ 60055a4 :arm
	b       branch_60055bc
@ 0x60055a8

.arm
Function_60055a8: @ 60055a8 :arm
	b       branch_60055bc
@ 0x60055ac

.arm
Function_60055ac: @ 60055ac :arm
	b       branch_60055bc
@ 0x60055b0

.arm
branch_60055b0: @ 60055b0 :arm
	mov     r1, #0x0
	str     r1, [r3, #0x198]
	b       branch_60055d0
@ 0x60055bc

.arm
branch_60055bc: @ 60055bc :arm
	mov     r1, #0x1
	str     r1, [r3, #0x198]
	b       branch_60055d0
@ 0x60055c8

.arm
branch_60055c8: @ 60055c8 :arm
	mov     r1, #0x0
	str     r1, [r3, #0x198]
.arm
branch_60055d0: @ 60055d0 :arm
	ldr     r1, [r3, #0x198]
	mov     r2, #0x50
	cmp     r1, #0x1
	bne     branch_60055f0
	ldr     r0, [r0, #0x8]
	add     r1, r3, #103, 30 @ #0x19c
	bl      Function_6000440
	b       branch_60055fc
@ 0x60055f0

.arm
branch_60055f0: @ 60055f0 :arm
	add     r0, r3, #103, 30 @ #0x19c
	mov     r1, #0x0
	bl      Function_6001ad0
.arm
branch_60055fc: @ 60055fc :arm
	bl      Function_6000294
	mov     r1, #0x14
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600561c

.word 0x60198a0 @ 0x600561c
.arm
Function_6005620: @ 6005620 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #2, 24 @ #0x200
	ldr     r1, [pc, #0xe4] @ [0x6005714] (=0x60198a0)
	mov     r5, r0
	ldr     r4, [r1, #0x550]
	ldr     r1, [r5, #0x4]
	add     r0, r4, #1, 24 @ #0x100
	strh    r1, [r0, #0x96]
	ldrh    r0, [r0, #0x96]
	cmp     r0, #0x3
	addls   pc, pc, r0, lsl #2
	b       branch_6005678
@ 0x6005650

.arm
Function_6005650: @ 6005650 :arm
	b       branch_6005660
@ 0x6005654

.arm
Function_6005654: @ 6005654 :arm
	b       branch_600566c
@ 0x6005658

.arm
Function_6005658: @ 6005658 :arm
	b       branch_600566c
@ 0x600565c

.arm
Function_600565c: @ 600565c :arm
	b       branch_600566c
@ 0x6005660

.arm
branch_6005660: @ 6005660 :arm
	mov     r0, #0x0
	str     r0, [r4, #0x198]
	b       branch_6005680
@ 0x600566c

.arm
branch_600566c: @ 600566c :arm
	mov     r0, #0x1
	str     r0, [r4, #0x198]
	b       branch_6005680
@ 0x6005678

.arm
branch_6005678: @ 6005678 :arm
	mov     r0, #0x0
	str     r0, [r4, #0x198]
.arm
branch_6005680: @ 6005680 :arm
	ldr     r0, [r4, #0x198]
	mov     r2, #0x50
	cmp     r0, #0x1
	bne     branch_60056a0
	ldr     r0, [r5, #0x8]
	add     r1, r4, #103, 30 @ #0x19c
	bl      Function_6000440
	b       branch_60056ac
@ 0x60056a0

.arm
branch_60056a0: @ 60056a0 :arm
	add     r0, r4, #103, 30 @ #0x19c
	mov     r1, #0x0
	bl      Function_6001ad0
.arm
branch_60056ac: @ 60056ac :arm
	ldr     r1, [r5, #0xc]
	add     r0, sp, #0x0
	strh    r1, [r4, #0xc4]
	ldrh    r1, [r4, #0xc4]
	bl      Function_6002584
	ldrh    r4, [r0, #0x4]
	cmp     r4, #0x0
	beq     branch_60056f0
	bl      Function_6000294
	mov     r2, #0x14
	mov     r1, #0x1
	strh    r2, [r0]
	strh    r1, [r0, #0x2]
	rsb     r1, r1, #130, 30 @ #0x208
	strh    r1, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
branch_60056f0: @ 60056f0 :arm
	bl      Function_6000294
	mov     r1, #0x27
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	add     sp, sp, #2, 24 @ #0x200
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6005714

.word 0x60198a0 @ 0x6005714



.arm
Function_6005718: @ 6005718 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #10, 26 @ #0x280
	ldr     r1, [pc, #0xdc] @ [0x6005804] (=0x60198a0)
	ldr     r2, [r0, #0x4]
	ldr     r4, [r1, #0x550]
	str     r2, [r4, #0xe8]
	ldr     r1, [r0, #0x8]
	strh    r1, [r4, #0xec]
	ldr     r1, [r0, #0xc]
	str     r1, [r4, #0xf0]
	ldr     r1, [r0, #0x10]
	strh    r1, [r4, #0xf4]
	ldr     r0, [r0, #0x14]
	and     r0, r0, #0xff
	tst     r0, #0x1
	movne   r1, #0x1
	moveq   r1, #0x0
	strh    r1, [r4, #0xf6]
	tst     r0, #0x2
	movne   r1, #0x1
	moveq   r1, #0x0
	strh    r1, [r4, #0xfa]
	tst     r0, #0x4
	movne   r1, #0x1
	moveq   r1, #0x0
	tst     r0, #0x8
	strh    r1, [r4, #0xfc]
	movne   r1, #0x1
	moveq   r1, #0x0
	strh    r1, [r4, #0xfe]
	add     r0, sp, #0x0
	add     r1, r4, #0xe8
	bl      Function_600037c
	ldrh    r1, [r4, #0xec]
	add     r0, sp, #0x80
	add     r1, r1, #0x10
	mov     r1, r1, lsl #16
	add     r2, sp, #0x0
	mov     r1, r1, lsr #16
	bl      Function_60028e4
	mov     r4, r0
	bl      Function_6000294
	mov     r1, #0x18
	strh    r1, [r0]
	ldrh    r1, [r4, #0x4]
	cmp     r1, #0x0
	moveq   r1, #0x0
	movne   r1, #0x1
	strh    r1, [r0, #0x2]
	ldrh    r1, [r4, #0x4]
	cmp     r1, #0x0
	ldrne   r1, [pc, #0x1c] @ [0x6005808] (=0x245)
	strneh  r1, [r0, #0x4]
	ldrneh  r1, [r4, #0x4]
	strneh  r1, [r0, #0x6]
	bl      Function_600029c
	add     sp, sp, #10, 26 @ #0x280
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6005804

.word 0x60198a0 @ 0x6005804
.word 0x245 @ 0x6005808
.arm
Function_600580c: @ 600580c :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #2, 24 @ #0x200
	ldr     r1, [r0, #0x4]
	add     r0, sp, #0x0
	mov     r1, r1, lsl #16
	mov     r1, r1, lsr #16
	bl      Function_60027d0
	ldrh    r4, [r0, #0x4]
	cmp     r4, #0x0
	beq     branch_600585c
	bl      Function_6000294
	mov     r2, #0x19
	mov     r1, #0x1
	strh    r2, [r0]
	strh    r1, [r0, #0x2]
	add     r1, r1, #133, 30 @ #0x214
	strh    r1, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
	b       branch_6005874
@ 0x600585c

.arm
branch_600585c: @ 600585c :arm
	bl      Function_6000294
	mov     r1, #0x19
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_6005874: @ 6005874 :arm
	add     sp, sp, #2, 24 @ #0x200
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6005880

.arm
Function_6005880: @ 6005880 :arm
	stmfd   sp!, {r3,lr}
	bl      Function_6000294
	mov     r1, #0x1a
	strh    r1, [r0]
	mov     r1, #0x4
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x60058a4

.arm
Function_60058a4: @ 60058a4 :arm
	stmfd   sp!, {r3,lr}
	bl      Function_6000294
	mov     r1, #0x1b
	strh    r1, [r0]
	mov     r1, #0x4
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x60058c8

.arm
Function_60058c8: @ 60058c8 :arm
	stmfd   sp!, {r4-r6,lr}
	sub     sp, sp, #2, 24 @ #0x200
	ldmib   r0, {r1-r3}
	ldr     r0, [r0, #0x10]
	mov     r1, r1, lsl #16
	mov     r4, r0, lsl #16
	mov     r2, r2, lsl #16
	mov     r3, r3, lsl #16
	ldr     r12, [pc, #0xf8] @ [0x60059e8] (=0x60198a0)
	mov     r5, r4, lsr #16
	add     r0, sp, #0x0
	mov     r1, r1, lsr #16
	mov     r2, r2, lsr #16
	mov     r3, r3, lsr #16
	ldr     r4, [r12, #0x550]
	bl      Function_600270c
	ldrh    r6, [r0, #0x4]
	cmp     r6, #0x0
	beq     branch_600593c
	bl      Function_6000294
	mov     r2, #0x1d
	mov     r1, #0x1
	strh    r2, [r0]
	strh    r1, [r0, #0x2]
	add     r1, r1, #33, 28 @ #0x210
	strh    r1, [r0, #0x4]
	strh    r6, [r0, #0x6]
	bl      Function_600029c
	b       branch_60059dc
@ 0x600593c

.arm
branch_600593c: @ 600593c :arm
	ldr     r0, [pc, #0xa8] @ [0x60059ec] (=0xffff)
	cmp     r5, r0
	beq     branch_6005990
	cmp     r5, #0x0
	moveq   r1, #0x1
	moveq   r0, #0x0
	beq     branch_6005984
	mov     r0, #0x64
	mul     r2, r5, r0
	ldr     r0, [pc, #0x88] @ [0x60059f0] (=0x82ea)
	mov     r1, #0x0
	umull   r12, r3, r2, r0
	mla     r3, r2, r1, r3
	mov     r1, r2, asr #31
	mla     r3, r1, r0, r3
	mov     r1, r12, lsr #6
	mov     r0, r3, lsr #6
	orr     r1, r1, r3, lsl #26
.arm
branch_6005984: @ 6005984 :arm
	str     r1, [r4, #0x7b8]
	str     r0, [r4, #0x7bc]
	b       branch_600599c
@ 0x6005990

.arm
branch_6005990: @ 6005990 :arm
	mov     r0, #0x0
	str     r0, [r4, #0x7b8]
	str     r0, [r4, #0x7bc]
.arm
branch_600599c: @ 600599c :arm
	bl      Function_6001ad8
	orr     r1, r1, #0x0
	orr     r2, r0, #0x1
	mov     r3, #0x0
.arm
branch_60059ac: @ 60059ac :arm
	add     r0, r4, r3, lsl #3
	str     r2, [r0, #0x738]
	add     r3, r3, #0x1
	str     r1, [r0, #0x73c]
	cmp     r3, #0x10
	blt     branch_60059ac
	bl      Function_6000294
	mov     r1, #0x1d
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_60059dc: @ 60059dc :arm
	add     sp, sp, #2, 24 @ #0x200
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x60059e8

.word 0x60198a0 @ 0x60059e8
.word 0xffff @ 0x60059ec
.word 0x82ea @ 0x60059f0
.arm
Function_60059f4: @ 60059f4 :arm
	stmfd   sp!, {r4-r9,lr}
	sub     sp, sp, #133, 30 @ #0x214
	ldr     r1, [pc, #0x18c] @ [0x6005b90] (=0x60198a0)
	mov     r7, r0
	ldr     r6, [r1, #0x550]
	add     r4, sp, #0x14
	ldrh    r0, [r6]
	cmp     r0, #0x2
	beq     branch_6005a34
	bl      Function_6000294
	mov     r1, #0x1e
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	b       branch_6005b84
@ 0x6005a34

.arm
branch_6005a34: @ 6005a34 :arm
	mov     r0, r4
	bl      Function_6002a50
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6005a54
	mov     r0, #194, 30 @ #0x308
	bl      Function_6005b9c
	b       branch_6005b84
@ 0x6005a54

.arm
branch_6005a54: @ 6005a54 :arm
	ldrh    r1, [r0, #0x6]
	mov     r0, #0x2
	strh    r0, [r6, #0xe6]
	cmp     r1, #0x10
	bne     branch_6005ad4
	mov     r1, r4
	mov     r0, #0xa
	bl      Function_6000448
	cmp     r0, #0x0
	beq     branch_6005b84
	mov     r0, r4
	bl      Function_60029dc
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6005a9c
	ldr     r0, [pc, #0xfc] @ [0x6005b94] (=0x303)
	bl      Function_6005b9c
	b       branch_6005b84
@ 0x6005a9c

.arm
branch_6005a9c: @ 6005a9c :arm
	mov     r0, #0x3
	mov     r1, #0x1
	strh    r0, [r6]
	mov     r0, r4
	mov     r3, r1
	mov     r2, #0x0
	bl      Function_6001ee8
	ldrh    r1, [r0, #0x4]
	mov     r0, #0x1
	cmp     r1, #0x0
	beq     branch_6005ad0
	bl      Function_6005b9c
	b       branch_6005b84
@ 0x6005ad0

.arm
branch_6005ad0: @ 6005ad0 :arm
	strh    r0, [r6, #0xc6]
.arm
branch_6005ad4: @ 6005ad4 :arm
	ldrh    r8, [r7, #0x2]
	ldrh    r9, [r7, #0x4]
	ldrh    r5, [r7, #0x6]
	ldrh    r7, [r7, #0x8]
	add     r0, sp, #0x4
	mov     r1, #0x0
	mov     r2, #0x10
	bl      Function_6001ad0
	strb    r5, [sp, #0x4]
	add     r0, sp, #0x4
	str     r0, [sp]
	mov     r0, r4
	mov     r1, r8
	mov     r2, r9
	mov     r3, r7
	bl      Function_60022ac
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6005b2c
	mov     r0, #0xa
	bl      Function_6005b9c
	b       branch_6005b84
@ 0x6005b2c

.arm
branch_6005b2c: @ 6005b2c :arm
	ldrh    r1, [r0, #0x8]
	mov     r0, r4
	and     r4, r1, #0xff
	mov     r1, r1, lsl #8
	mov     r5, r1, lsr #16
	bl      Function_60029c4
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6005b5c
	ldr     r0, [pc, #0x40] @ [0x6005b98] (=0x302)
	bl      Function_6005b9c
	b       branch_6005b84
@ 0x6005b5c

.arm
branch_6005b5c: @ 6005b5c :arm
	mov     r0, #0x2
	strh    r0, [r6]
	bl      Function_6000294
	mov     r1, #0x1e
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	strh    r4, [r0, #0x8]
	strh    r5, [r0, #0xa]
	bl      Function_600029c
.arm
branch_6005b84: @ 6005b84 :arm
	add     sp, sp, #133, 30 @ #0x214
	ldmfd   sp!, {r4-r9,lr}
	bx      lr
@ 0x6005b90

.word 0x60198a0 @ 0x6005b90
.word 0x303 @ 0x6005b94
.word 0x302 @ 0x6005b98
.arm
Function_6005b9c: @ 6005b9c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	bl      Function_6000294
	mov     r1, #0x1e
	strh    r1, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	strh    r5, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6005bd0

.arm
Function_6005bd0: @ 6005bd0 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #2, 24 @ #0x200
	add     r0, sp, #0x0
	bl      Function_6002a08
	ldrh    r4, [r0, #0x4]
	cmp     r4, #0x0
	beq     branch_6005c14
	bl      Function_6000294
	mov     r2, #0x1f
	mov     r1, #0x1
	strh    r2, [r0]
	strh    r1, [r0, #0x2]
	add     r1, r1, #193, 30 @ #0x304
	strh    r1, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
	b       branch_6005c2c
@ 0x6005c14

.arm
branch_6005c14: @ 6005c14 :arm
	bl      Function_6000294
	mov     r1, #0x1f
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_6005c2c: @ 6005c2c :arm
	add     sp, sp, #2, 24 @ #0x200
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6005c38

.arm
Function_6005c38: @ 6005c38 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #2, 24 @ #0x200
	add     r0, sp, #0x0
	bl      Function_6002a38
	mov     r5, r0
	ldrh    r4, [r5, #0x4]
	cmp     r4, #0x0
	beq     branch_6005c80
	bl      Function_6000294
	mov     r2, #0x20
	mov     r1, #0x1
	strh    r2, [r0]
	strh    r1, [r0, #0x2]
	rsb     r1, r1, #194, 30 @ #0x308
	strh    r1, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
	b       branch_6005cb0
@ 0x6005c80

.arm
branch_6005c80: @ 6005c80 :arm
	bl      Function_6000294
	mov     r4, r0
	mov     r0, #0x20
	strh    r0, [r4]
	mov     r3, #0x0
	add     r0, r5, #0x8
	add     r1, r4, #0x8
	mov     r2, #0xb4
	strh    r3, [r4, #0x2]
	bl      Function_6001ae0
	mov     r0, r4
	bl      Function_600029c
.arm
branch_6005cb0: @ 6005cb0 :arm
	add     sp, sp, #2, 24 @ #0x200
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6005cbc

.arm
Function_6005cbc: @ 6005cbc :arm
	ldr     r12, [pc, #0x4] @ [0x6005cc8] (=0x37fa928)
	ldr     r0, [pc, #0x4] @ [0x6005ccc] (=0x380aea4)
	bx      r12
@ 0x6005cc8

.word 0x37fa928 @ 0x6005cc8
.word 0x380aea4 @ 0x6005ccc
.arm
Function_6005cd0: @ 6005cd0 :arm
	ldr     r12, [pc, #0x4] @ [0x6005cdc] (=0x37faadc)
	ldr     r0, [pc, #0x4] @ [0x6005ce0] (=0x380aea4)
	bx      r12
@ 0x6005cdc

.word 0x37faadc @ 0x6005cdc
.word 0x380aea4 @ 0x6005ce0
.arm
Function_6005ce4: @ 6005ce4 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	ldr     r1, [pc, #0x90] @ [0x6005d84] (=0x60198a0)
	ldr     r0, [pc, #0x90] @ [0x6005d88] (=0x380aea4)
	ldr     r4, [r1, #0x550]
	ldrh    r1, [r4, #0xe6]
	cmp     r1, #0x1
	bne     branch_6005d34
	ldr     r1, [r0]
	cmp     r1, #0x0
	beq     branch_6005d14
	bl      Function_6005d94
.arm
branch_6005d14: @ 6005d14 :arm
	ldr     r0, [pc, #0x6c] @ [0x6005d88] (=0x380aea4)
	mov     r1, #0xcb
	mov     r12, #0x3
	ldr     r3, [pc, #0x64] @ [0x6005d8c] (=0x60060e0)
	add     r2, r1, #0x3c
	str     r12, [sp]
	bl      Function_6005d9c
	b       branch_6005d78
@ 0x6005d34

.arm
branch_6005d34: @ 6005d34 :arm
	cmp     r1, #0x2
	bne     branch_6005d78
	mov     r1, #0x0
	str     r1, [r4, #0x1c]
	ldr     r1, [r0]
	cmp     r1, #0x0
	beq     branch_6005d54
	bl      Function_6005d94
.arm
branch_6005d54: @ 6005d54 :arm
	ldr     r0, [pc, #0x2c] @ [0x6005d88] (=0x380aea4)
	mov     r2, #0x1
	mov     r1, #0xc8
	ldr     r3, [pc, #0x28] @ [0x6005d90] (=0x6005da4)
	str     r2, [sp]
	add     r2, r1, #0x3f
	bl      Function_6005d9c
	mov     r0, #0x0
	str     r0, [r4, #0xd8]
.arm
branch_6005d78: @ 6005d78 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x6005d84

.word 0x60198a0 @ 0x6005d84
.word 0x380aea4 @ 0x6005d88
.word 0x60060e0 @ 0x6005d8c
.word 0x6005da4 @ 0x6005d90
.arm
Function_6005d94: @ 6005d94 :arm
	ldr     pc, [pc, #-0x4] @ [0x6005d98] (=0x37faadc)
@ 0x6005d98

.word 0x37faadc @ 0x6005d98
.arm
Function_6005d9c: @ 6005d9c :arm
	ldr     pc, [pc, #-0x4] @ [0x6005da0] (=0x37fa93c)
@ 0x6005da0

.word 0x37fa93c @ 0x6005da0
.arm
Function_6005da4: @ 6005da4 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	ldr     r1, [pc, #0x12c] @ [0x6005ee0] (=0x60198a0)
	ldr     r2, [pc, #0x12c] @ [0x6005ee4] (=0x380fff0)
	ldr     r0, [r1, #0x550]
	ldrh    r3, [r2]
	str     r3, [r0, #0xd0]
	ldr     r2, [r0, #0xd4]
	cmp     r2, r3
	beq     branch_6005e84
	str     r3, [r0, #0xd4]
	ldr     r1, [r1, #0x550]
	ldr     r3, [pc, #0x10c] @ [0x6005ee8] (=0x48080f8)
	ldr     r2, [r1, #0xd0]
	mov     r2, r2, lsl #6
	str     r2, [r1, #0xd0]
	ldrh    r2, [r3]
	ldrh    lr, [r3, #0x2]
	ldrh    r4, [r3]
	cmp     r2, r4
	ldrhih  lr, [r3, #0x2]
	ldr     r3, [pc, #0xec] @ [0x6005eec] (=0x4000006)
	ldr     r2, [pc, #0xec] @ [0x6005ef0] (=0x107)
	ldrh    r12, [r3]
	ldr     r3, [pc, #0xe8] @ [0x6005ef4] (=0x3fffc0)
	sub     r12, r2, r12
	orr     lr, r4, lr, lsl #16
	ldr     r2, [r1, #0xd0]
	and     lr, lr, r3
	rsb     r12, r12, r12, lsl #7
	add     r12, r12, lr, lsl #1
	and     lr, r3, r12, lsr #1
	cmp     r2, lr
	movhi   r2, #0x0
	strhi   r2, [r1, #0xd8]
	bhi     branch_6005e84
	mov     r12, #0x1
	b       branch_6005e74
@ 0x6005e3c

.arm
branch_6005e3c: @ 6005e3c :arm
	ldr     r2, [r1, #0xd0]
	add     r2, r2, #0x4b
	add     r3, r2, #65, 24 @ #0x4100
	str     r3, [r1, #0xd0]
	cmp     r3, lr
	bls     branch_6005e70
	ldr     r2, [pc, #0x9c] @ [0x6005ef8] (=0x400e)
	sub     r3, r3, lr
	cmp     r3, r2
	str     r3, [r1, #0xd8]
	movhi   r2, #0x0
	strhi   r2, [r1, #0xd8]
	b       branch_6005e84
@ 0x6005e70

.arm
branch_6005e70: @ 6005e70 :arm
	add     r12, r12, #0x1
.arm
branch_6005e74: @ 6005e74 :arm
	cmp     r12, #0x1e
	blt     branch_6005e3c
	mov     r2, #0x0
	str     r2, [r1, #0xd8]
.arm
branch_6005e84: @ 6005e84 :arm
	ldr     r1, [r0, #0xd8]
	cmp     r1, #0x7f
	bls     branch_6005eb0
	ldr     r0, [pc, #0x64] @ [0x6005efc] (=0x380aea4)
	mov     r1, #0xd0
	mov     r12, #0x2
	ldr     r3, [pc, #0x5c] @ [0x6005f00] (=0x6005f08)
	add     r2, r1, #0x37
	str     r12, [sp]
	bl      Function_6005d9c
	b       branch_6005ed4
@ 0x6005eb0

.arm
branch_6005eb0: @ 6005eb0 :arm
	mov     r2, #0x1
	str     r2, [r0, #0x1c]
	mov     r1, #0x4
	str     r1, [sp]
	ldrsh   r1, [r0, #0x42]
	ldr     r0, [pc, #0x30] @ [0x6005efc] (=0x380aea4)
	ldr     r3, [pc, #0x34] @ [0x6005f04] (=0x6005fc8)
	rsb     r2, r2, #66, 30 @ #0x108
	bl      Function_6005d9c
.arm
branch_6005ed4: @ 6005ed4 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x6005ee0

.word 0x60198a0 @ 0x6005ee0
.word 0x380fff0 @ 0x6005ee4
.word 0x48080f8 @ 0x6005ee8
.word 0x4000006 @ 0x6005eec
.word 0x107 @ 0x6005ef0
.word 0x3fffc0 @ 0x6005ef4
.word 0x400e @ 0x6005ef8
.word 0x380aea4 @ 0x6005efc
.word 0x6005f08 @ 0x6005f00
.word 0x6005fc8 @ 0x6005f04
.arm
Function_6005f08: @ 6005f08 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0xa0] @ [0x6005fb4] (=0x4000006)
	ldr     r0, [pc, #0xa0] @ [0x6005fb8] (=0x60198a0)
	ldrh    r12, [r1]
	ldr     r0, [r0, #0x550]
	cmp     r12, #0xd0
	blt     branch_6005f80
	cmp     r12, #0xd2
	bge     branch_6005f80
	ldr     r1, [r0, #0xd8]
	cmp     r1, #0x7f
	bcc     branch_6005f80
	mov     r3, #0x1
	b       branch_6005f58
@ 0x6005f40

.arm
branch_6005f40: @ 6005f40 :arm
	ldr     r2, [r0, #0xd8]
	rsb     r1, r3, r3, lsl #6
	add     r1, r1, #0x7f
	cmp     r2, r1
	bcc     branch_6005f60
	add     r3, r3, #0x1
.arm
branch_6005f58: @ 6005f58 :arm
	cmp     r3, #0x7
	blt     branch_6005f40
.arm
branch_6005f60: @ 6005f60 :arm
	ldr     r1, [pc, #0x4c] @ [0x6005fb4] (=0x4000006)
	rsb     r2, r3, #0x1
	add     r2, r12, r2
	strh    r2, [r1]
	ldr     r2, [r0, #0xd8]
	rsb     r1, r3, r3, lsl #6
	sub     r1, r2, r1
	str     r1, [r0, #0xd8]
.arm
branch_6005f80: @ 6005f80 :arm
	ldr     r1, [r0, #0xd8]
	ldr     r2, [pc, #0x30] @ [0x6005fbc] (=0x107)
	cmp     r1, #0x7f
	movcs   r1, #0x0
	strcs   r1, [r0, #0x1c]
	mov     r1, #0x4
	str     r1, [sp]
	ldrsh   r1, [r0, #0x42]
	ldr     r0, [pc, #0x18] @ [0x6005fc0] (=0x380aea4)
	ldr     r3, [pc, #0x18] @ [0x6005fc4] (=0x6005fc8)
	bl      Function_6005d9c
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6005fb4

.word 0x4000006 @ 0x6005fb4
.word 0x60198a0 @ 0x6005fb8
.word 0x107 @ 0x6005fbc
.word 0x380aea4 @ 0x6005fc0
.word 0x6005fc8 @ 0x6005fc4
.arm
Function_6005fc8: @ 6005fc8 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	ldr     r0, [pc, #0xf4] @ [0x60060cc] (=0x60198a0)
	ldr     r4, [r0, #0x550]
	ldr     r0, [r4, #0xc]
	cmp     r0, #0x1
	bne     branch_60060c0
	ldr     r0, [pc, #0xe4] @ [0x60060d0] (=0x380aea4)
	mov     r2, #0x1
	mov     r1, #0xc8
	ldr     r3, [pc, #0xdc] @ [0x60060d4] (=0x6005da4)
	str     r2, [sp]
	add     r2, r1, #0x3f
	bl      Function_6005d9c
	ldr     r0, [r4, #0x7bc]
	ldr     r1, [r4, #0x7b8]
	cmp     r0, #0x0
	cmpeq   r1, #0x0
	beq     branch_60060bc
	bl      Function_6001ad8
	ldr     r3, [r4, #0x73c]
	ldr     r12, [r4, #0x738]
	cmp     r3, #0x0
	cmpeq   r12, #0x0
	orr     lr, r1, #0x0
	orr     r1, r0, #0x1
	mov     r0, #0x0
	beq     branch_60060bc
	ldr     r2, [r4, #0x7b8]
	subs    r12, r1, r12
	ldr     r1, [r4, #0x7bc]
	sbc     r3, lr, r3
	cmp     r3, r1
	cmpeq   r12, r2
	bls     branch_60060bc
	str     r0, [r4, #0x738]
	str     r0, [r4, #0x73c]
	bl      Function_60007c0
	movs    r1, r0
	moveq   r0, #0x0
	beq     branch_6006088
	mov     r0, #0x25
	str     r0, [r1]
	ldr     r3, [pc, #0x5c] @ [0x60060d8] (=0x8001)
	mov     r2, #0x0
	ldr     r0, [pc, #0x58] @ [0x60060dc] (=0x6018928)
	stmib   r1, {r2,r3}
	bl      Function_6000284
.arm
branch_6006088: @ 6006088 :arm
	cmp     r0, #0x0
	bne     branch_60060c0
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x8
	strh    r1, [r0, #0x2]
	mov     r1, #0x16
	strh    r1, [r0, #0x4]
	mov     r1, #0x25
	strh    r1, [r0, #0x6]
	bl      Function_600029c
	b       branch_60060c0
@ 0x60060bc

.arm
branch_60060bc: @ 60060bc :arm
	bl      Function_60061e4
.arm
branch_60060c0: @ 60060c0 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x60060cc

.word 0x60198a0 @ 0x60060cc
.word 0x380aea4 @ 0x60060d0
.word Function_6005da4 @ =0x6005da4, 0x60060d4
.word 0x8001 @ 0x60060d8
.word 0x6018928 @ 0x60060dc
.arm
Function_60060e0: @ 60060e0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x94] @ [0x6006180] (=0x60198a0)
	ldr     r0, [r0, #0x550]
	ldrh    r1, [r0, #0xdc]
	cmp     r1, #0x3c
	bcc     branch_600611c
	ldr     r2, [pc, #0x84] @ [0x6006184] (=0x4000006)
	ldrh    r1, [r2]
	cmp     r1, #0xcb
	blt     branch_6006124
	cmp     r1, #0xd2
	strlth  r1, [r2]
	movlt   r1, #0x0
	strlth  r1, [r0, #0xdc]
	b       branch_6006124
@ 0x600611c

.arm
branch_600611c: @ 600611c :arm
	add     r1, r1, #0x1
	strh    r1, [r0, #0xdc]
.arm
branch_6006124: @ 6006124 :arm
	ldr     r1, [pc, #0x58] @ [0x6006184] (=0x4000006)
	ldr     r2, [pc, #0x58] @ [0x6006188] (=0x48080f8)
	ldrh    lr, [r1]
	ldrh    r1, [r2]
	ldrh    r3, [r2, #0x2]
	ldrh    r12, [r2]
	cmp     r1, r12
	ldrhih  r3, [r2, #0x2]
	ldr     r1, [pc, #0x40] @ [0x600618c] (=0x380fff0)
	orr     r3, r12, r3, lsl #16
	rsb     r2, lr, lr, lsl #7
	rsb     r2, r2, r3, lsl #1
	mov     r3, r2, lsr #7
	strh    r3, [r1]
	mov     r2, #0x5
	str     r2, [sp]
	ldrsh   r1, [r0, #0x40]
	ldr     r0, [pc, #0x20] @ [0x6006190] (=0x380aea4)
	ldr     r3, [pc, #0x20] @ [0x6006194] (=0x6006198)
	rsb     r2, r2, #67, 30 @ #0x10c
	bl      Function_6005d9c
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6006180

.word 0x60198a0 @ 0x6006180
.word 0x4000006 @ 0x6006184
.word 0x48080f8 @ 0x6006188
.word 0x380fff0 @ 0x600618c
.word 0x380aea4 @ 0x6006190
.word 0x6006198 @ 0x6006194
.arm
Function_6006198: @ 6006198 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x34] @ [0x60061d8] (=0x60198a0)
	ldr     r0, [r0, #0x550]
	ldr     r0, [r0, #0xc]
	cmp     r0, #0x1
	bne     branch_60061d0
	ldr     r0, [pc, #0x24] @ [0x60061dc] (=0x380aea4)
	mov     r1, #0xcb
	mov     r12, #0x3
	ldr     r3, [pc, #0x1c] @ [0x60061e0] (=0x60060e0)
	add     r2, r1, #0x3c
	str     r12, [sp]
	bl      Function_6005d9c
	bl      Function_60061e4
.arm
branch_60061d0: @ 60061d0 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x60061d8

.word 0x60198a0 @ 0x60061d8
.word 0x380aea4 @ 0x60061dc
.word Function_60060e0 @ =0x60060e0, 0x60061e0
.arm
Function_60061e4: @ 60061e4 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0x9c] @ [0x600628c] (=0x60198a0)
	ldr     r4, [pc, #0x9c] @ [0x6006290] (=0x60188a0)
	ldr     r5, [r0, #0x550]
	bl      Function_6000720
	ldrh    r1, [r5, #0xce]
	cmp     r1, #0x1
	bne     branch_600620c
	bl      Function_6000740
	b       branch_6006284
@ 0x600620c

.arm
branch_600620c: @ 600620c :arm
	mov     r1, #0x1
	strh    r1, [r5, #0xce]
	bl      Function_6000740
	bl      Function_60007c0
	movs    r1, r0
	moveq   r0, #0x0
	beq     branch_600623c
	mov     r3, #0x1c
	add     r0, r4, #0x88
	mov     r2, #0x0
	str     r3, [r1]
	bl      Function_6000284
.arm
branch_600623c: @ 600623c :arm
	cmp     r0, #0x0
	bne     branch_6006284
	mov     r0, #0x0
	strh    r0, [r5, #0xce]
	add     r0, r4, #1, 20 @ #0x1000
	ldr     r0, [r0, #0x54c]
	cmp     r0, #0x0
	beq     branch_6006284
	bl      Function_6000294
	mov     r1, #0x80
	strh    r1, [r0]
	mov     r1, #0x8
	strh    r1, [r0, #0x2]
	mov     r1, #0x16
	strh    r1, [r0, #0x4]
	mov     r1, #0x1c
	strh    r1, [r0, #0x6]
	bl      Function_600029c
.arm
branch_6006284: @ 6006284 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600628c

.word 0x60198a0 @ 0x600628c
.word 0x60188a0 @ 0x6006290
.arm
Function_6006294: @ 6006294 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0x18c] @ [0x600642c] (=0x60198a0)
	mov     r1, #0x0
	ldr     r4, [r0, #0x550]
	mov     r2, #0x1
	strh    r1, [r4, #0xce]
	strh    r2, [r4, #0x88]
	ldrh    r0, [r4, #0xc0]
	sub     r0, r0, #0x1
	strh    r0, [r4, #0xc0]
	ldrh    r0, [r4, #0xc0]
	cmp     r0, #0x0
	bne     branch_6006300
	ldrh    r1, [r4, #0xbe]
	rsb     r0, r2, #1, 16 @ #0x10000
	cmp     r1, r0
	moveq   r0, #0x4
	streqh  r0, [r4, #0xbe]
	ldrh    r0, [r4, #0xbe]
	and     r0, r0, #0xff
	bl      Function_60005a0
	bl      Function_600061c
	strh    r0, [r4, #0xbc]
	ldr     r1, [pc, #0x138] @ [0x6006430] (=0xffff)
	mov     r0, #0x1
	strh    r1, [r4, #0xbe]
	strh    r0, [r4, #0xc0]
.arm
branch_6006300: @ 6006300 :arm
	ldrh    r0, [r4]
	cmp     r0, #0x9
	bne     branch_60063f0
	bl      Function_6000720
	add     r1, r4, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x82]
	cmp     r1, #0x0
	bne     branch_6006330
	mov     r1, #0x0
	strh    r1, [r4, #0x62]
	bl      Function_6000740
	b       branch_6006424
@ 0x6006330

.arm
branch_6006330: @ 6006330 :arm
	ldrsh   r2, [r4, #0x62]
	mov     r3, #0x1
	cmp     r2, #0x0
	ldrgtsh r1, [r4, #0x64]
	cmpgt   r1, #0x0
	movgt   r3, #0x0
	cmp     r2, #0x0
	movlt   r1, #0x0
	strlth  r1, [r4, #0x62]
	add     r1, r4, #7, 24 @ #0x700
	ldrsh   r2, [r4, #0x62]
	ldrsh   r1, [r1, #0xc2]
	add     r1, r2, r1
	strh    r1, [r4, #0x62]
	ldrsh   r1, [r4, #0x62]
	cmp     r1, #1, 24 @ #0x100
	movgt   r1, #1, 24 @ #0x100
	strgth  r1, [r4, #0x62]
	add     r1, r4, #7, 24 @ #0x700
	ldrh    r1, [r1, #0xc4]
	cmp     r3, #0x0
	strh    r1, [r4, #0x64]
	beq     branch_60063a4
	ldrsh   r1, [r4, #0x62]
	cmp     r1, #0x0
	ldrgtsh r1, [r4, #0x64]
	cmpgt   r1, #0x0
	movgt   r5, #0x1
	bgt     branch_60063a8
.arm
branch_60063a4: @ 60063a4 :arm
	mov     r5, #0x0
.arm
branch_60063a8: @ 60063a8 :arm
	bl      Function_6000740
	cmp     r5, #0x0
	beq     branch_60063bc
	ldr     r0, [pc, #0x74] @ [0x6006430] (=0xffff)
	bl      Function_6006a84
.arm
branch_60063bc: @ 60063bc :arm
	add     r0, r4, #7, 24 @ #0x700
	ldrh    r0, [r0, #0xc6]
	cmp     r0, #0x1
	ldreqh  r0, [r4, #0xa0]
	subeq   r0, r0, #0x1
	streqh  r0, [r4, #0xa0]
	ldreqh  r0, [r4, #0xa0]
	cmpeq   r0, #0x0
	moveq   r0, #0x1
	streqh  r0, [r4, #0x9e]
	moveq   r0, #0x3c
	streqh  r0, [r4, #0xa0]
	b       branch_6006424
@ 0x60063f0

.arm
branch_60063f0: @ 60063f0 :arm
	cmp     r0, #0xa
	bne     branch_6006424
	mov     r5, #0x0
	bl      Function_6000720
	ldr     r1, [r4, #0x734]
	cmp     r1, #0x1
	movne   r1, r5
	movne   r5, #0x1
	strneh  r1, [r4, #0x60]
	bl      Function_6000740
	cmp     r5, #0x1
	bne     branch_6006424
	bl      Function_600658c
.arm
branch_6006424: @ 6006424 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600642c

.word 0x60198a0 @ 0x600642c
.word 0xffff @ 0x6006430
.arm
Function_6006434: @ 6006434 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x24] @ [0x6006464] (=0x60198a0)
	ldr     r1, [r1, #0x550]
	ldrh    r1, [r1]
	cmp     r1, #0x9
	bne     branch_600645c
	ldr     r0, [r0, #0x4]
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_6006a84
.arm
branch_600645c: @ 600645c :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6006464

.word 0x60198a0 @ 0x6006464
.arm
Function_6006468: @ 6006468 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x18] @ [0x600648c] (=0x60198a0)
	ldr     r0, [r0, #0x550]
	ldrh    r0, [r0]
	cmp     r0, #0xa
	bne     branch_6006484
	bl      Function_600658c
.arm
branch_6006484: @ 6006484 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600648c

.word 0x60198a0 @ 0x600648c
.arm
Function_6006490: @ 6006490 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x24] @ [0x60064c0] (=0x60198a0)
	ldr     r1, [r1, #0x550]
	ldrh    r1, [r1]
	cmp     r1, #0x9
	bne     branch_60064b8
	ldr     r0, [r0, #0x4]
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_6007434
.arm
branch_60064b8: @ 60064b8 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x60064c0

.word 0x60198a0 @ 0x60064c0
.arm
Function_60064c4: @ 60064c4 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0xa4] @ [0x6006574] (=0x60198a0)
	ldr     r4, [r0, #0x550]
	add     r0, r4, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_600657c
	add     r1, r4, #190, 30 @ #0x2f8
	mov     r0, #0x0
	mov     r2, #1, 22 @ #0x400
	bl      Function_6000598
	mov     r3, #0x0
.arm
branch_60064f0: @ 60064f0 :arm
	add     r0, r3, #0x1
	mov     r0, r0, lsl #16
	add     r1, r4, r3, lsl #5
	mov     r3, r0, lsr #16
	add     r0, r1, #2, 24 @ #0x200
	strh    r3, [r0, #0xf8]
	cmp     r3, #0x1f
	bcc     branch_60064f0
	ldr     r2, [pc, #0x60] @ [0x6006578] (=0xffff)
	add     r0, r4, r3, lsl #5
	add     r0, r0, #2, 24 @ #0x200
	strh    r2, [r0, #0xf8]
	add     r0, r4, #6, 24 @ #0x600
	mov     r12, #0x0
	strh    r12, [r0, #0xf8]
	strh    r3, [r0, #0xfa]
.arm
branch_6006530: @ 6006530 :arm
	add     r1, r4, r12, lsl #2
	add     r0, r1, #7, 24 @ #0x700
	strh    r2, [r0, #0xc]
	strh    r2, [r0, #0xe]
	add     r0, r1, #6, 24 @ #0x600
	add     r1, r12, #0x1
	strh    r2, [r0, #0xfc]
	mov     r1, r1, lsl #16
	mov     r12, r1, lsr #16
	strh    r2, [r0, #0xfe]
	cmp     r12, #0x4
	bcc     branch_6006530
	add     r0, r4, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6006584
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6006574

.word 0x60198a0 @ 0x6006574
.word 0xffff @ 0x6006578
.arm
Function_600657c: @ 600657c :arm
	ldr     pc, [pc, #-0x4] @ [0x6006580] (=0x37f992c)
@ 0x6006580

.word 0x37f992c @ 0x6006580
.arm
Function_6006584: @ 6006584 :arm
	ldr     pc, [pc, #-0x4] @ [0x6006588] (=0x37f99b0)
@ 0x6006588

.word 0x37f99b0 @ 0x6006588
.arm
Function_600658c: @ 600658c :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #38, 28 @ #0x260
	ldr     r1, [pc, #0x4e0] @ [0x6006a7c] (=0x60198a0)
	ldr     r11, [r1, #0x550]
	add     r0, r11, #1, 24 @ #0x100
	ldrh    r0, [r0, #0x82]
	cmp     r0, #0x0
	beq     branch_6006a70
	mov     r0, #0x1
	strh    r0, [r11, #0x8a]
	str     r0, [sp, #0x14]
	mov     r0, #0x0
	strh    r0, [sp, #0x5c]
	ldr     r8, [r1, #0x550]
	add     r1, sp, #0x5c
	ldrh    r9, [r8, #0x38]
	str     r1, [sp, #0x34]
	add     r1, r9, #0x1f
	ldrh    r2, [r8, #0x80]
	bic     r1, r1, #0x1f
	ldr     r7, [r8, #0x7c]
	cmp     r2, r1
	blt     branch_6006a1c
	add     r1, r8, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x88]
	cmp     r1, #0x10
	bcs     branch_6006a1c
	ldrh    r1, [r8]
	cmp     r1, #0x9
	beq     branch_6006610
	cmp     r1, #0xa
	streq   r0, [sp, #0x14]
	bne     branch_6006a1c
.arm
branch_6006610: @ 6006610 :arm
	ldr     r0, [sp, #0x34]
	mov     r6, #0x0
	strh    r6, [r0]
	mov     r0, #0x1
	cmp     r9, #0x0
	strlt   r0, [sp, #0x14]
	blt     branch_6006a1c
	str     r0, [sp, #0x18]
	ldr     r0, [sp, #0x14]
	cmp     r0, #0x0
	beq     branch_6006650
	add     r0, r8, #7, 24 @ #0x700
	ldrh    r0, [r0, #0xc6]
	cmp     r0, #0x0
	strne   r6, [sp, #0x18]
	b       branch_6006654
@ 0x6006650

.arm
branch_6006650: @ 6006650 :arm
	str     r6, [sp, #0x18]
.arm
branch_6006654: @ 6006654 :arm
	add     r0, r8, #199, 30 @ #0x31c
	mov     r1, #0x0
	str     r1, [sp, #0xc]
	mov     r1, #0x1
	add     r0, r0, #1, 22 @ #0x400
	str     r1, [sp, #0x10]
	bl      Function_600657c
	ldr     r0, [r8, #0x734]
	cmp     r0, #0x1
	bne     branch_6006694
	add     r0, r8, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6006584
	mov     r0, #0x1
	str     r0, [sp, #0x14]
	b       branch_6006a1c
@ 0x6006694

.arm
branch_6006694: @ 6006694 :arm
	mov     r0, #0x1
	str     r0, [r8, #0x734]
	add     r0, r8, #190, 30 @ #0x2f8
	str     r0, [sp, #0x1c]
	mov     r5, #0x0
	b       branch_60069f8
@ 0x60066ac

.arm
branch_60066ac: @ 60066ac :arm
	add     r0, r8, #195, 30 @ #0x30c
	add     r0, r0, #1, 22 @ #0x400
	mov     r1, r5, lsl #2
	ldrh    r10, [r0, r1]
	add     r0, r0, r5, lsl #2
	str     r0, [sp, #0x20]
	add     r0, r8, #191, 30 @ #0x2fc
	add     r0, r0, #1, 22 @ #0x400
	add     r0, r0, r5, lsl #2
	str     r0, [sp, #0x24]
	ldr     r0, [sp, #0x20]
	str     r0, [sp, #0x28]
	ldr     r0, [pc, #0x39c] @ [0x6006a80] (=0xffff)
	str     r0, [sp, #0x2c]
	str     r0, [sp, #0x38]
	str     r0, [sp, #0x3c]
	add     r0, r8, #1, 24 @ #0x100
	str     r0, [sp, #0x40]
	ldr     r0, [sp, #0x2c]
	sub     r0, r0, #2, 18 @ #0x8000
	str     r0, [sp, #0x44]
	ldr     r0, [sp, #0x2c]
	str     r0, [sp, #0x48]
	add     r0, r8, #7, 24 @ #0x700
	str     r0, [sp, #0x4c]
	ldr     r0, [sp, #0x2c]
	str     r0, [sp, #0x50]
	str     r0, [sp, #0x54]
	str     r0, [sp, #0x58]
	b       branch_60069e0
@ 0x6006724

.arm
branch_6006724: @ 6006724 :arm
	ldr     r0, [sp, #0x1c]
	ldr     r2, [sp, #0xc]
	add     r4, r0, r10, lsl #5
	ldrh    r0, [r4, #0x2]
	mov     r1, #0x1
	str     r0, [sp, #0x8]
	tst     r2, r1, lsl r0
	bne     branch_60069a4
	ldr     r0, [sp, #0x18]
	cmp     r0, #0x0
	ldr     r0, [sp, #0x8]
	orr     r0, r2, r1, lsl r0
	str     r0, [sp, #0xc]
	ldrh    r0, [r4, #0x6]
	and     r1, r0, r1
	str     r1, [sp, #0x30]
	beq     branch_6006770
	bics    r1, r1, #0x1
	bne     branch_60069a4
.arm
branch_6006770: @ 6006770 :arm
	ldr     r1, [sp, #0x8]
	tst     r1, #0x8
	movne   r1, #0x1
	strne   r1, [sp, #0x4]
	moveq   r1, #0x0
	streq   r1, [sp, #0x4]
	ldr     r1, [sp, #0x14]
	cmp     r1, #0x0
	orrne   r1, r0, #0x1
	ldrne   r0, [sp, #0x3c]
	cmpne   r1, r0
	movne   r0, #0x1
	strne   r0, [sp]
	moveq   r0, #0x0
	streq   r0, [sp]
	ldrh    r0, [r4, #0xe]
	and     r1, r0, #0x1
	cmp     r1, #0x1
	addeq   r0, r0, #0x1
	streqh  r0, [r4, #0xe]
	ldr     r0, [sp, #0x4]
	ldr     r1, [sp, #0x10]
	cmp     r0, #0x0
	movne   r0, #0x2
	moveq   r0, #0x0
	cmp     r1, #0x0
	movne   r3, #0x0
	ldr     r1, [sp]
	moveq   r3, #0x2
	ldrh    r2, [r4, #0xe]
	cmp     r1, #0x0
	movne   r1, #0x2
	add     r2, r2, r3
	moveq   r1, #0x0
	add     r0, r2, r0
	add     r0, r1, r0
	cmp     r0, r9
	bgt     branch_60069a4
	ldr     r0, [sp, #0x10]
	cmp     r0, #0x0
	streq   r7, [sp, #0x34]
	moveq   r0, #0x0
	streqh  r0, [r7], #0x2
	ldr     r0, [sp, #0x34]
	ldrh    r2, [r4, #0x2]
	ldrh    r1, [r4, #0xe]
	mov     r2, r2, lsl #8
	mov     r1, r1, lsr #1
	ldrh    r0, [r0]
	and     r2, r2, #15, 24 @ #0xf00
	and     r1, r1, #0xff
	orr     r1, r2, r1
	orr     r1, r0, r1
	ldr     r0, [sp, #0x34]
	addeq   r6, r6, #0x2
	strh    r1, [r0]
	ldr     r0, [r4, #0x14]
	ldrh    r2, [r4, #0xe]
	mov     r1, r7
	subeq   r9, r9, #0x2
	bl      Function_6001ae0
	ldrh    r1, [r4, #0xe]
	ldr     r0, [sp, #0x4]
	add     r6, r6, r1
	cmp     r0, #0x1
	bic     r0, r1, #0x1
	add     r7, r7, r0
	sub     r9, r9, r1
	bne     branch_60068d8
	ldrh    r0, [r4, #0x10]
	tst     r0, #0x1
	moveq   r2, r0, asr #1
	beq     branch_60068c4
	ldr     r0, [sp, #0x40]
	ldrh    r1, [r4, #0x2]
	ldrh    r0, [r0, #0x88]
	mov     r1, r1, lsl #29
	add     r0, r8, r0, lsl #4
	add     r0, r0, r1, lsr #28
	add     r0, r0, #1, 24 @ #0x100
	ldrh    r2, [r0, #0xf8]
	add     r1, r2, #0x1
	strh    r1, [r0, #0xf8]
	mov     r0, r2, lsl #1
	strh    r0, [r4, #0x10]
.arm
branch_60068c4: @ 60068c4 :arm
	ldr     r0, [sp, #0x44]
	add     r6, r6, #0x2
	and     r0, r2, r0
	strh    r0, [r7], #0x2
	sub     r9, r9, #0x2
.arm
branch_60068d8: @ 60068d8 :arm
	ldr     r0, [sp]
	cmp     r0, #0x1
	bne     branch_6006908
	ldr     r0, [sp, #0x34]
	add     r6, r6, #0x2
	ldrh    r0, [r0]
	sub     r9, r9, #0x2
	orr     r1, r0, #1, 20 @ #0x1000
	ldr     r0, [sp, #0x34]
	strh    r1, [r0]
	ldrh    r0, [r4, #0x6]
	strh    r0, [r7], #0x2
.arm
branch_6006908: @ 6006908 :arm
	ldr     r0, [sp, #0x10]
	cmp     r0, #0x1
	moveq   r0, #0x0
	streq   r0, [sp, #0x10]
	ldr     r0, [sp, #0x20]
	ldrh    r0, [r0, #0x2]
	cmp     r0, r10
	ldreq   r1, [sp, #0x2c]
	ldreq   r0, [sp, #0x20]
	streqh  r1, [r0, #0x2]
	ldrh    r1, [r4]
	ldr     r0, [sp, #0x28]
	strh    r1, [r0]
	ldr     r0, [sp, #0x38]
	strh    r0, [r4]
	ldr     r0, [sp, #0x24]
	ldrh    r1, [r0, #0x2]
	ldr     r0, [sp, #0x48]
	cmp     r1, r0
	ldreq   r0, [sp, #0x24]
	movne   r1, r1, lsl #5
	streqh  r10, [r0]
	ldrne   r0, [sp, #0x1c]
	strneh  r10, [r0, r1]
	ldr     r0, [sp, #0x8]
	mov     r1, #0x1
	mvn     r1, r1, lsl r0
	ldr     r0, [sp, #0xc]
	and     r0, r0, r1
	str     r0, [sp, #0xc]
	ldr     r0, [sp, #0x24]
	strh    r10, [r0, #0x2]
	ldr     r0, [sp, #0x30]
	ldr     r10, [sp, #0x2c]
	strh    r0, [r4, #0xa]
	ldr     r0, [sp, #0x4c]
	ldrh    r0, [r0, #0xc8]
	cmp     r0, #0x1
	beq     branch_6006a08
.arm
branch_60069a4: @ 60069a4 :arm
	ldr     r0, [sp, #0x50]
	str     r10, [sp, #0x2c]
	cmp     r10, r0
	ldrne   r0, [sp, #0x1c]
	addne   r0, r0, r10, lsl #5
	strne   r0, [sp, #0x28]
	ldreq   r0, [sp, #0x20]
	streq   r0, [sp, #0x28]
	ldr     r0, [sp, #0x54]
	cmp     r10, r0
	ldrne   r0, [sp, #0x1c]
	movne   r1, r10, lsl #5
	ldrneh  r10, [r0, r1]
	ldreq   r0, [sp, #0x20]
	ldreqh  r10, [r0]
.arm
branch_60069e0: @ 60069e0 :arm
	ldr     r0, [sp, #0x58]
	cmp     r10, r0
	beq     branch_60069f4
	cmp     r9, #0x2
	bgt     branch_6006724
.arm
branch_60069f4: @ 60069f4 :arm
	add     r5, r5, #0x1
.arm
branch_60069f8: @ 60069f8 :arm
	cmp     r5, #0x4
	bcs     branch_6006a08
	cmp     r9, #0x2
	bgt     branch_60066ac
.arm
branch_6006a08: @ 6006a08 :arm
	add     r0, r8, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6006584
	mov     r0, #0x0
	str     r0, [sp, #0x14]
.arm
branch_6006a1c: @ 6006a1c :arm
	ldr     r0, [sp, #0x14]
	cmp     r0, #0x1
	moveq   r0, #0x0
	streqh  r0, [r11, #0x8a]
	beq     branch_6006a70
	ldr     r0, [r11, #0x1c]
	mov     r1, r6, lsl #16
	cmp     r0, #0x1
	ldreqh  r0, [sp, #0x5c]
	mov     r1, r1, lsr #16
	orreq   r0, r0, #2, 18 @ #0x8000
	streqh  r0, [sp, #0x5c]
	ldrh    r2, [sp, #0x5c]
	ldr     r3, [r11, #0x7c]
	add     r0, sp, #0x60
	bl      Function_60023d8
	ldrh    r0, [r0, #0x4]
	cmp     r0, #0x0
	cmpne   r0, #0x8
	movne   r0, #0x0
	strneh  r0, [r11, #0x8a]
.arm
branch_6006a70: @ 6006a70 :arm
	add     sp, sp, #38, 28 @ #0x260
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x6006a7c

.word 0x60198a0 @ 0x6006a7c
.word 0xffff @ 0x6006a80
.arm
Function_6006a84: @ 6006a84 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #178, 30 @ #0x2c8
	ldr     r1, [pc, #0x988] @ [0x600741c] (=0x60198a0)
	str     r0, [sp, #0x18]
	ldr     r7, [r1, #0x550]
	bl      Function_6000720
	add     r1, r7, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x82]
	ldrh    r4, [r7, #0x86]
	str     r1, [sp, #0x74]
	bl      Function_6000740
	mov     r1, #0x0
	strh    r1, [sp, #0xc4]
	ldrh    r0, [r7, #0x88]
	cmp     r0, #0x1
	ldreq   r0, [pc, #0x958] @ [0x6007420] (=0xffff)
	streq   r0, [sp, #0x18]
	streqh  r1, [r7, #0x88]
	ldrh    r0, [r7, #0x9e]
	cmp     r0, #0x0
	bne     branch_600736c
	ldr     r1, [pc, #0x93c] @ [0x600741c] (=0x60198a0)
	ldrh    r0, [r7, #0x3a]
	ldr     r8, [r1, #0x550]
	str     r0, [sp, #0x24]
	add     r0, sp, #0xc4
	ldrh    r9, [r8, #0x38]
	str     r0, [sp, #0x70]
	add     r0, r9, #0x1f
	ldrh    r1, [r8, #0x80]
	bic     r0, r0, #0x1f
	cmp     r1, r0
	ldr     r6, [r8, #0x7c]
	movlt   r0, #0x1
	blt     branch_6006fac
	add     r0, r8, #1, 24 @ #0x100
	ldrh    r0, [r0, #0x88]
	cmp     r0, #0x10
	movcs   r0, #0x1
	bcs     branch_6006fac
	ldrh    r0, [r8]
	cmp     r0, #0x9
	moveq   r0, #0x1
	streq   r0, [sp, #0x48]
	beq     branch_6006b50
	cmp     r0, #0xa
	moveq   r0, #0x0
	streq   r0, [sp, #0x48]
	beq     branch_6006b50
	mov     r0, #0x1
	b       branch_6006fac
@ 0x6006b50

.arm
branch_6006b50: @ 6006b50 :arm
	ldr     r0, [sp, #0x70]
	mov     r5, #0x0
	mov     r10, r5
	mov     r11, r5
	strh    r5, [r0]
	cmp     r9, #0x0
	movlt   r0, #0x1
	blt     branch_6006fac
	ldr     r0, [sp, #0x48]
	str     r4, [sp, #0x50]
	cmp     r0, #0x0
	mov     r0, #0x1
	str     r0, [sp, #0x4c]
	beq     branch_6006ba4
	add     r0, r8, #7, 24 @ #0x700
	ldrh    r0, [r0, #0xc6]
	cmp     r0, #0x0
	ldrne   r0, [sp, #0x74]
	strne   r5, [sp, #0x4c]
	strne   r0, [sp, #0x50]
	b       branch_6006ba8
@ 0x6006ba4

.arm
branch_6006ba4: @ 6006ba4 :arm
	str     r5, [sp, #0x4c]
.arm
branch_6006ba8: @ 6006ba8 :arm
	ldr     r0, [sp, #0x18]
	and     r4, r4, r0
	mov     r0, #0x0
	str     r0, [sp, #0x40]
	mov     r0, #0x1
	str     r0, [sp, #0x44]
	add     r0, r8, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_600657c
	ldr     r0, [r8, #0x734]
	cmp     r0, #0x1
	bne     branch_6006bec
	add     r0, r8, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6006584
	mov     r0, #0x1
	b       branch_6006fac
@ 0x6006bec

.arm
branch_6006bec: @ 6006bec :arm
	mvn     r0, r4
	str     r0, [sp, #0x2c]
	mov     r0, #0x1
	str     r0, [r8, #0x734]
	add     r0, r8, #190, 30 @ #0x2f8
	str     r0, [sp, #0x54]
	mov     r0, #0x0
	str     r0, [sp, #0x58]
	b       branch_6006f84
@ 0x6006c10

.arm
branch_6006c10: @ 6006c10 :arm
	ldr     r0, [sp, #0x58]
	mov     r2, r0, lsl #2
	add     r0, r8, #195, 30 @ #0x30c
	add     r1, r0, #1, 22 @ #0x400
	ldr     r0, [sp, #0x58]
	ldrh    r10, [r1, r2]
	add     r0, r1, r0, lsl #2
	str     r0, [sp, #0x5c]
	add     r0, r8, #191, 30 @ #0x2fc
	add     r1, r0, #1, 22 @ #0x400
	ldr     r0, [sp, #0x58]
	add     r0, r1, r0, lsl #2
	str     r0, [sp, #0x60]
	ldr     r0, [sp, #0x5c]
	str     r0, [sp, #0x64]
	ldr     r0, [pc, #0x7cc] @ [0x6007420] (=0xffff)
	str     r0, [sp, #0x68]
	str     r0, [sp, #0x78]
	str     r0, [sp, #0x8c]
	add     r0, r8, #1, 24 @ #0x100
	str     r0, [sp, #0x90]
	ldr     r0, [sp, #0x68]
	sub     r0, r0, #2, 18 @ #0x8000
	str     r0, [sp, #0x94]
	ldr     r0, [sp, #0x68]
	str     r0, [sp, #0x98]
	add     r0, r8, #7, 24 @ #0x700
	str     r0, [sp, #0x9c]
	ldr     r0, [sp, #0x68]
	str     r0, [sp, #0xa0]
	str     r0, [sp, #0xa4]
	str     r0, [sp, #0xa8]
	b       branch_6006f64
@ 0x6006c94

.arm
branch_6006c94: @ 6006c94 :arm
	ldr     r0, [sp, #0x54]
	ldr     r2, [sp, #0x40]
	add     r4, r0, r10, lsl #5
	ldrh    r0, [r4, #0x2]
	mov     r1, #0x1
	str     r0, [sp, #0x28]
	tst     r2, r1, lsl r0
	bne     branch_6006f28
	ldr     r0, [sp, #0x4c]
	cmp     r0, #0x0
	ldr     r0, [sp, #0x28]
	orr     r0, r2, r1, lsl r0
	str     r0, [sp, #0x40]
	ldrh    r0, [r4, #0x6]
	ldr     r1, [sp, #0x50]
	and     r1, r0, r1
	str     r1, [sp, #0x6c]
	beq     branch_6006cec
	mov     r2, r1
	ldr     r1, [sp, #0x2c]
	tst     r2, r1
	bne     branch_6006f28
.arm
branch_6006cec: @ 6006cec :arm
	ldr     r1, [sp, #0x28]
	tst     r1, #0x8
	movne   r1, #0x1
	strne   r1, [sp, #0x20]
	moveq   r1, #0x0
	streq   r1, [sp, #0x20]
	ldr     r1, [sp, #0x48]
	cmp     r1, #0x0
	orrne   r1, r0, #0x1
	ldrne   r0, [sp, #0x8c]
	cmpne   r1, r0
	movne   r0, #0x1
	strne   r0, [sp, #0x1c]
	moveq   r0, #0x0
	streq   r0, [sp, #0x1c]
	ldrh    r0, [r4, #0xe]
	and     r1, r0, #0x1
	cmp     r1, #0x1
	addeq   r0, r0, #0x1
	streqh  r0, [r4, #0xe]
	ldr     r0, [sp, #0x20]
	ldr     r1, [sp, #0x44]
	cmp     r0, #0x0
	movne   r0, #0x2
	moveq   r0, #0x0
	cmp     r1, #0x0
	movne   r3, #0x0
	ldr     r1, [sp, #0x1c]
	moveq   r3, #0x2
	ldrh    r2, [r4, #0xe]
	cmp     r1, #0x0
	movne   r1, #0x2
	add     r2, r2, r3
	moveq   r1, #0x0
	add     r0, r2, r0
	add     r0, r1, r0
	cmp     r0, r9
	bgt     branch_6006f28
	ldr     r0, [sp, #0x44]
	cmp     r0, #0x0
	streq   r6, [sp, #0x70]
	moveq   r0, #0x0
	streqh  r0, [r6], #0x2
	ldr     r0, [sp, #0x70]
	ldrh    r2, [r4, #0x2]
	ldrh    r1, [r4, #0xe]
	mov     r2, r2, lsl #8
	mov     r1, r1, lsr #1
	ldrh    r0, [r0]
	and     r2, r2, #15, 24 @ #0xf00
	and     r1, r1, #0xff
	orr     r1, r2, r1
	orr     r1, r0, r1
	ldr     r0, [sp, #0x70]
	addeq   r11, r11, #0x2
	strh    r1, [r0]
	ldr     r0, [r4, #0x14]
	ldrh    r2, [r4, #0xe]
	mov     r1, r6
	subeq   r9, r9, #0x2
	bl      Function_6001ae0
	ldrh    r1, [r4, #0xe]
	ldr     r0, [sp, #0x20]
	add     r11, r11, r1
	cmp     r0, #0x1
	bic     r0, r1, #0x1
	add     r6, r6, r0
	sub     r9, r9, r1
	bne     branch_6006e54
	ldrh    r0, [r4, #0x10]
	tst     r0, #0x1
	moveq   r2, r0, asr #1
	beq     branch_6006e40
	ldr     r0, [sp, #0x90]
	ldrh    r1, [r4, #0x2]
	ldrh    r0, [r0, #0x88]
	mov     r1, r1, lsl #29
	add     r0, r8, r0, lsl #4
	add     r0, r0, r1, lsr #28
	add     r0, r0, #1, 24 @ #0x100
	ldrh    r2, [r0, #0xf8]
	add     r1, r2, #0x1
	strh    r1, [r0, #0xf8]
	mov     r0, r2, lsl #1
	strh    r0, [r4, #0x10]
.arm
branch_6006e40: @ 6006e40 :arm
	ldr     r0, [sp, #0x94]
	add     r11, r11, #0x2
	and     r0, r2, r0
	strh    r0, [r6], #0x2
	sub     r9, r9, #0x2
.arm
branch_6006e54: @ 6006e54 :arm
	ldr     r0, [sp, #0x1c]
	cmp     r0, #0x1
	bne     branch_6006e84
	ldr     r0, [sp, #0x70]
	add     r11, r11, #0x2
	ldrh    r0, [r0]
	sub     r9, r9, #0x2
	orr     r1, r0, #1, 20 @ #0x1000
	ldr     r0, [sp, #0x70]
	strh    r1, [r0]
	ldrh    r0, [r4, #0x6]
	strh    r0, [r6], #0x2
.arm
branch_6006e84: @ 6006e84 :arm
	ldr     r0, [sp, #0x44]
	cmp     r0, #0x1
	moveq   r0, #0x0
	streq   r0, [sp, #0x44]
	ldr     r0, [sp, #0x5c]
	ldrh    r0, [r0, #0x2]
	cmp     r0, r10
	ldreq   r1, [sp, #0x68]
	ldreq   r0, [sp, #0x5c]
	streqh  r1, [r0, #0x2]
	ldrh    r1, [r4]
	ldr     r0, [sp, #0x64]
	strh    r1, [r0]
	ldr     r0, [sp, #0x78]
	strh    r0, [r4]
	ldr     r0, [sp, #0x60]
	ldrh    r1, [r0, #0x2]
	ldr     r0, [sp, #0x98]
	cmp     r1, r0
	ldreq   r0, [sp, #0x60]
	movne   r1, r1, lsl #5
	streqh  r10, [r0]
	ldrne   r0, [sp, #0x54]
	strneh  r10, [r0, r1]
	ldr     r0, [sp, #0x28]
	mov     r1, #0x1
	mvn     r1, r1, lsl r0
	ldr     r0, [sp, #0x40]
	and     r0, r0, r1
	str     r0, [sp, #0x40]
	ldr     r0, [sp, #0x60]
	strh    r10, [r0, #0x2]
	ldr     r0, [sp, #0x6c]
	ldr     r10, [sp, #0x68]
	strh    r0, [r4, #0xa]
	ldrh    r0, [r4, #0x4]
	orr     r5, r5, r0
	ldr     r0, [sp, #0x9c]
	ldrh    r0, [r0, #0xc8]
	cmp     r0, #0x1
	beq     branch_6006f98
.arm
branch_6006f28: @ 6006f28 :arm
	ldr     r0, [sp, #0xa0]
	str     r10, [sp, #0x68]
	cmp     r10, r0
	ldrne   r0, [sp, #0x54]
	addne   r0, r0, r10, lsl #5
	strne   r0, [sp, #0x64]
	ldreq   r0, [sp, #0x5c]
	streq   r0, [sp, #0x64]
	ldr     r0, [sp, #0xa4]
	cmp     r10, r0
	ldrne   r0, [sp, #0x54]
	movne   r1, r10, lsl #5
	ldrneh  r10, [r0, r1]
	ldreq   r0, [sp, #0x5c]
	ldreqh  r10, [r0]
.arm
branch_6006f64: @ 6006f64 :arm
	ldr     r0, [sp, #0xa8]
	cmp     r10, r0
	beq     branch_6006f78
	cmp     r9, #0x2
	bgt     branch_6006c94
.arm
branch_6006f78: @ 6006f78 :arm
	ldr     r0, [sp, #0x58]
	add     r0, r0, #0x1
	str     r0, [sp, #0x58]
.arm
branch_6006f84: @ 6006f84 :arm
	ldr     r0, [sp, #0x58]
	cmp     r0, #0x4
	bcs     branch_6006f98
	cmp     r9, #0x2
	bgt     branch_6006c10
.arm
branch_6006f98: @ 6006f98 :arm
	add     r0, r8, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	mov     r10, r11
	bl      Function_6006584
	mov     r0, #0x0
.arm
branch_6006fac: @ 6006fac :arm
	cmp     r0, #0x1
	moveq   r0, #0x0
	streqh  r0, [r7, #0x62]
	streqh  r0, [r7, #0x64]
	beq     branch_6007410
	add     r0, r7, #7, 24 @ #0x700
	ldrh    r1, [r0, #0xc6]
	ldr     r0, [sp, #0x24]
	cmp     r1, #0x1
	add     r4, r0, #0x2
	ldrne   r5, [sp, #0x18]
	ldr     r0, [sp, #0x74]
	and     r5, r5, r0
	mov     r0, r5
	bl      Function_600742c
	ldr     r1, [sp, #0x24]
	add     r1, r1, #0xc
	mul     r0, r1, r0
	add     r0, r0, #0x29
	ldrh    r1, [r7, #0x72]
	bic     r0, r0, #0x1f
	cmp     r1, r0
	bge     branch_600732c
	ldr     r0, [pc, #0x40c] @ [0x600741c] (=0x60198a0)
	ldr     r9, [r0, #0x550]
	ldrh    r0, [r9]
	add     r8, r9, #190, 30 @ #0x2f8
	cmp     r0, #0x9
	moveq   r4, #0x1
	beq     branch_6007030
	cmp     r0, #0xa
	bne     branch_600731c
	mov     r4, #0x0
.arm
branch_6007030: @ 6007030 :arm
	add     r0, r9, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_600657c
	ldr     r0, [r9, #0x734]
	cmp     r0, #0x0
	bne     branch_6007058
	add     r0, r9, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6006584
	b       branch_600731c
@ 0x6007058

.arm
branch_6007058: @ 6007058 :arm
	cmp     r4, #0x0
	moveq   r0, #0x1
	streq   r0, [sp, #0x3c]
	beq     branch_600707c
	bl      Function_6000720
	add     r1, r9, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x82]
	str     r1, [sp, #0x3c]
	bl      Function_6000740
.arm
branch_600707c: @ 600707c :arm
	mov     r0, r5, lsl #16
	mvn     r0, r0, lsr #16
	str     r0, [sp, #0x30]
	mov     r10, #0x0
.arm
branch_600708c: @ 600708c :arm
	ldr     r0, [pc, #0x38c] @ [0x6007420] (=0xffff)
	add     r11, r9, #6, 24 @ #0x600
	str     r0, [sp, #0x38]
	add     r0, r9, #191, 30 @ #0x2fc
	add     r1, r0, #1, 22 @ #0x400
	mov     r0, r10, lsl #2
	ldrh    r5, [r1, r0]
	ldr     r0, [sp, #0x38]
	add     r6, r1, r10, lsl #2
	str     r0, [sp, #0x34]
	ldr     r0, [sp, #0x38]
	str     r0, [sp, #0x7c]
	str     r0, [sp, #0x80]
	str     r0, [sp, #0x84]
	str     r0, [sp, #0x88]
	str     r0, [sp, #0xac]
	str     r0, [sp, #0xb0]
	add     r0, r9, #1, 24 @ #0x100
	str     r0, [sp, #0xb4]
	ldr     r0, [sp, #0x38]
	str     r0, [sp, #0xb8]
	str     r0, [sp, #0xbc]
	str     r0, [sp, #0xc0]
	b       branch_60072a8
@ 0x60070ec

.arm
branch_60070ec: @ 60070ec :arm
	add     r4, r8, r5, lsl #5
	ldrh    r1, [r4, #0xa]
	ldr     r0, [sp, #0x30]
	ldrh    r2, [r4, #0x8]
	and     r0, r1, r0
	orr     r0, r2, r0
	strh    r0, [r4, #0x8]
	ldrh    r0, [r4, #0x8]
	ldrh    r1, [r4, #0x6]
	mvn     r0, r0
	and     r0, r1, r0
	strh    r0, [r4, #0x6]
	ldrh    r1, [r4, #0x6]
	ldr     r0, [sp, #0x3c]
	and     r0, r1, r0
	strh    r0, [r4, #0x6]
	mov     r0, #0x0
	strh    r0, [r4, #0xa]
	ldrh    r0, [r4, #0x6]
	cmp     r0, #0x0
	beq     branch_60071bc
	ldrh    r0, [r4, #0x2]
	tst     r0, #0x8
	ldreqh  r0, [r4, #0x12]
	cmpeq   r0, #0x0
	beq     branch_60071bc
	ldrh    r0, [r4, #0x12]
	cmp     r0, #0x0
	subne   r0, r0, #0x1
	strneh  r0, [r4, #0x12]
	ldrh    r1, [r4]
	ldr     r0, [sp, #0xac]
	cmp     r1, r0
	ldreq   r0, [sp, #0x7c]
	streqh  r0, [r6, #0x2]
	ldr     r1, [sp, #0x38]
	ldr     r0, [sp, #0xb0]
	cmp     r1, r0
	ldrh    r0, [r4]
	strh    r0, [r6]
	ldr     r0, [sp, #0x80]
	strh    r0, [r4]
	moveq   r0, r5, lsl #16
	moveq   r0, r0, lsr #16
	streq   r0, [sp, #0x34]
	ldrne   r0, [sp, #0x38]
	movne   r0, r0, lsl #5
	strneh  r5, [r8, r0]
	mov     r0, r5, lsl #16
	mov     r0, r0, lsr #16
	str     r0, [sp, #0x38]
	b       branch_60072a4
@ 0x60071bc

.arm
branch_60071bc: @ 60071bc :arm
	bl      Function_6000294
	mov     r1, #0x81
	strh    r1, [r0]
	ldrh    r1, [r4, #0x6]
	ldr     r3, [sp, #0xb4]
	cmp     r1, #0x0
	moveq   r1, #0x0
	movne   r1, #0xf
	strh    r1, [r0, #0x2]
	mov     r1, #0x14
	strh    r1, [r0, #0x8]
	ldrh    r1, [r4, #0x2]
	strh    r1, [r0, #0xa]
	ldrh    r1, [r4, #0x4]
	strh    r1, [r0, #0xc]
	ldrh    r1, [r4, #0x6]
	strh    r1, [r0, #0xe]
	ldrh    r1, [r4, #0x8]
	strh    r1, [r0, #0x10]
	ldrh    r1, [r4, #0xe]
	strh    r1, [r0, #0x18]
	ldr     r1, [r4, #0x14]
	str     r1, [r0, #0x14]
	ldr     r1, [r4, #0x18]
	str     r1, [r0, #0x1c]
	ldr     r1, [r4, #0x1c]
	str     r1, [r0, #0x20]
	ldrh    r1, [r4, #0x10]
	strh    r1, [r0, #0x1a]
	ldrh    r3, [r3, #0x88]
	ldrh    r1, [r9, #0x30]
	cmp     r3, #0x0
	ldrh    r2, [r9, #0x32]
	moveq   r3, r1
	movne   r3, r2
	strh    r3, [r0, #0x24]
	ldr     r3, [sp, #0xb4]
	ldrh    r3, [r3, #0x88]
	cmp     r3, #0x0
	movne   r2, r1
	strh    r2, [r0, #0x26]
	bl      Function_600029c
	ldrh    r1, [r4]
	ldr     r0, [sp, #0xb8]
	cmp     r1, r0
	ldreq   r0, [sp, #0x84]
	streqh  r0, [r6, #0x2]
	ldrh    r0, [r4]
	strh    r0, [r6]
	ldr     r0, [sp, #0x88]
	strh    r0, [r4]
	ldrh    r1, [r11, #0xfa]
	ldr     r0, [sp, #0xbc]
	cmp     r1, r0
	streqh  r5, [r11, #0xf8]
	movne   r0, r1, lsl #5
	strneh  r5, [r8, r0]
	strh    r5, [r11, #0xfa]
.arm
branch_60072a4: @ 60072a4 :arm
	ldrh    r5, [r6]
.arm
branch_60072a8: @ 60072a8 :arm
	ldr     r0, [sp, #0xc0]
	cmp     r5, r0
	bne     branch_60070ec
	ldr     r2, [pc, #0x164] @ [0x6007420] (=0xffff)
	ldr     r0, [sp, #0x38]
	cmp     r0, r2
	beq     branch_60072fc
	add     r0, r9, r10, lsl #2
	add     r1, r0, #7, 24 @ #0x700
	ldr     r0, [sp, #0x38]
	ldrh    r3, [r1, #0xc]
	mov     r0, r0, lsl #5
	strh    r3, [r8, r0]
	ldrh    r0, [r1, #0xe]
	cmp     r0, r2
	ldreq   r0, [sp, #0x38]
	streqh  r0, [r1, #0xe]
	add     r0, r9, r10, lsl #2
	add     r1, r0, #7, 24 @ #0x700
	ldr     r0, [sp, #0x34]
	strh    r0, [r1, #0xc]
.arm
branch_60072fc: @ 60072fc :arm
	add     r10, r10, #0x1
	cmp     r10, #0x4
	blt     branch_600708c
	add     r0, r9, #199, 30 @ #0x31c
	mov     r1, #0x0
	add     r0, r0, #1, 22 @ #0x400
	str     r1, [r9, #0x734]
	bl      Function_6006584
.arm
branch_600731c: @ 600731c :arm
	mov     r0, #0x0
	strh    r0, [r7, #0x62]
	strh    r0, [r7, #0x64]
	b       branch_6007410
@ 0x600732c

.arm
branch_600732c: @ 600732c :arm
	ldrsh   r0, [r7, #0x62]
	cmp     r0, #0x1
	ldrnesh r0, [r7, #0x64]
	cmpne   r0, #0x1
	movne   r6, #0x0
	bne     branch_60073ac
	ldrh    r3, [r7, #0x40]
	mov     r0, r10
	mov     r1, r4
	mov     r2, r5
	bl      Function_6007d88
	ldrh    r1, [sp, #0xc4]
	mov     r6, r0
	orr     r0, r1, #2, 18 @ #0x8000
	strh    r0, [sp, #0xc4]
	b       branch_60073ac
@ 0x600736c

.arm
branch_600736c: @ 600736c :arm
	mov     r6, #0x0
	strh    r6, [r7, #0x9e]
	ldrh    r0, [sp, #0xc4]
	ldr     r5, [sp, #0x74]
	bic     r0, r0, #2, 18 @ #0x8000
	strh    r0, [sp, #0xc4]
	mov     r10, r6
	ldr     r4, [pc, #0x94] @ [0x6007424] (=0x80d6)
	bl      Function_6000720
	ldrsh   r1, [r7, #0x62]
	add     r1, r1, #0x1
	strh    r1, [r7, #0x62]
	ldrsh   r1, [r7, #0x64]
	add     r1, r1, #0x1
	strh    r1, [r7, #0x64]
	bl      Function_6000740
.arm
branch_60073ac: @ 60073ac :arm
	mov     r0, r5, lsl #16
	mov     r0, r0, lsr #16
	str     r0, [sp]
	ldr     r0, [pc, #0x68] @ [0x6007428] (=0x48080f8)
	str     r6, [sp, #0x4]
	ldrh    r1, [r0]
	mov     r0, r10, lsl #16
	str     r1, [sp, #0x8]
	mov     r0, r0, lsr #16
	str     r0, [sp, #0xc]
	ldrh    r0, [sp, #0xc4]
	mov     r3, r4, lsl #16
	str     r0, [sp, #0x10]
	ldr     r2, [r7, #0x7c]
	mov     r1, #0x0
	str     r2, [sp, #0x14]
	add     r0, sp, #0xc8
	mov     r2, r1
	mov     r3, r3, lsr #16
	bl      Function_6002440
	strh    r5, [r7, #0x68]
	ldrh    r0, [sp, #0xc4]
	strh    r0, [r7, #0x6a]
	strh    r4, [r7, #0x6c]
	strh    r10, [r7, #0x6e]
.arm
branch_6007410: @ 6007410 :arm
	add     sp, sp, #178, 30 @ #0x2c8
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x600741c

.word 0x60198a0 @ 0x600741c
.word 0xffff @ 0x6007420
.word 0x80d6 @ 0x6007424
.word 0x48080f8 @ 0x6007428
.arm
Function_600742c: @ 600742c :arm
	ldr     pc, [pc, #-0x4] @ [0x6007430] (=0x3806008)
@ 0x6007430

.word 0x3806008 @ 0x6007430
.arm
Function_6007434: @ 6007434 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #134, 30 @ #0x218
	ldr     r1, [pc, #0xd4] @ [0x6007518] (=0x60198a0)
	mov     r4, r0
	ldr     r7, [r1, #0x550]
	bl      Function_6000720
	bl      Function_6000740
	add     r0, r7, #1, 24 @ #0x100
	ldrh    r0, [r0, #0x82]
	ldr     r1, [pc, #0xbc] @ [0x600751c] (=0x48080f8)
	and     r4, r4, r0
	ldrh    r8, [r7, #0x3a]
	mov     r0, r4
	ldrh    r5, [r1]
	ldrh    r6, [r7, #0x6a]
	bl      Function_600742c
	add     r1, r8, #0xc
	mul     r0, r1, r0
	add     r0, r0, #0x29
	ldrh    r1, [r7, #0x72]
	bic     r0, r0, #0x1f
	cmp     r1, r0
	bge     branch_60074a0
	mov     r0, #0x2
	bl      Function_6007524
	bl      Function_6001b4c
	b       branch_600750c
@ 0x60074a0

.arm
branch_60074a0: @ 60074a0 :arm
	ldrsh   r0, [r7, #0x62]
	cmp     r0, #0x1
	ldrnesh r0, [r7, #0x64]
	cmpne   r0, #0x1
	bicne   r6, r6, #2, 18 @ #0x8000
	movne   r0, #0x0
	bne     branch_60074d4
	ldrh    r0, [r7, #0x6e]
	ldrh    r1, [r7, #0x6c]
	ldrh    r3, [r7, #0x40]
	mov     r2, r4
	bl      Function_6007d88
	orr     r6, r6, #2, 18 @ #0x8000
.arm
branch_60074d4: @ 60074d4 :arm
	mov     r1, r4, lsl #16
	mov     r1, r1, lsr #16
	str     r1, [sp]
	stmfa   sp, {r0,r5}
	mov     r2, #0x0
	mov     r0, r6, lsl #16
	str     r2, [sp, #0xc]
	mov     r0, r0, lsr #16
	str     r0, [sp, #0x10]
	ldr     r1, [pc, #0x20] @ [0x6007520] (=0x800c)
	add     r0, sp, #0x18
	mov     r3, r2
	str     r2, [sp, #0x14]
	bl      Function_6002440
.arm
branch_600750c: @ 600750c :arm
	add     sp, sp, #134, 30 @ #0x218
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x6007518

.word 0x60198a0 @ 0x6007518
.word 0x48080f8 @ 0x600751c
.word 0x800c @ 0x6007520
.arm
Function_6007524: @ 6007524 :arm
	ldr     pc, [pc, #-0x4] @ [0x6007528] (=0x37f950c)
@ 0x6007528

.word 0x37f950c @ 0x6007528
.arm
Function_600752c: @ 600752c :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r4, [pc, #0x120] @ [0x6007658] (=0x60198a0)
	ldrh    r8, [sp, #0x24]
	ldr     r4, [r4, #0x550]
	mov     r7, r0
	add     r0, r4, #195, 30 @ #0x30c
	add     r0, r0, #1, 22 @ #0x400
	cmp     r8, #0x0
	add     r9, r0, r1, lsl #2
	mov     r6, r2
	mov     r5, r3
	add     r8, r4, #190, 30 @ #0x2f8
	moveq   r0, #0x6
	beq     branch_6007650
	ldrh    r0, [sp, #0x24]
	tst     r6, #0x8
	movne   r1, #0x2
	moveq   r1, #0x0
	add     r0, r0, r1
	cmp     r0, #129, 30 @ #0x204
	movgt   r0, #0x6
	bgt     branch_6007650
	add     r0, r4, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_600657c
	add     r2, r4, #6, 24 @ #0x600
	ldrh    r1, [r2, #0xf8]
	ldr     r3, [pc, #0xbc] @ [0x600765c] (=0xffff)
	cmp     r1, r3
	bne     branch_60075b8
	add     r0, r4, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6006584
	mov     r0, #0xa
	b       branch_6007650
@ 0x60075b8

.arm
branch_60075b8: @ 60075b8 :arm
	mov     r0, r1, lsl #5
	ldrh    r12, [r8, r0]
	add     r0, r8, r1, lsl #5
	strh    r12, [r2, #0xf8]
	ldrh    r12, [r2, #0xfa]
	cmp     r12, r1
	streqh  r3, [r2, #0xfa]
	strh    r6, [r0, #0x2]
	strh    r5, [r0, #0x4]
	and     r2, r5, r7
	strh    r2, [r0, #0x6]
	mov     r2, #0x0
	strh    r2, [r0, #0x8]
	strh    r2, [r0, #0xa]
	ldr     r3, [sp, #0x20]
	ldrh    r2, [sp, #0x24]
	str     r3, [r0, #0x14]
	strh    r2, [r0, #0xe]
	ldr     r3, [sp, #0x28]
	ldr     r2, [sp, #0x2c]
	str     r3, [r0, #0x18]
	str     r2, [r0, #0x1c]
	ldr     r3, [pc, #0x44] @ [0x600765c] (=0xffff)
	add     r2, r4, #7, 24 @ #0x700
	strh    r3, [r0]
	strh    r3, [r0, #0x10]
	ldrh    r2, [r2, #0xca]
	strh    r2, [r0, #0x12]
	ldrh    r0, [r9, #0x2]
	cmp     r0, r3
	streqh  r1, [r9]
	movne   r0, r0, lsl #5
	strneh  r1, [r8, r0]
	add     r0, r4, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	strh    r1, [r9, #0x2]
	bl      Function_6006584
	mov     r0, #0x2
.arm
branch_6007650: @ 6007650 :arm
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x6007658

.word 0x60198a0 @ 0x6007658
.word 0xffff @ 0x600765c
.arm
Function_6007660: @ 6007660 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x3c
	ldr     r2, [pc, #0x318] @ [0x6007988] (=0x60198a0)
	str     r0, [sp]
	ldr     r8, [r2, #0x550]
	mov     r5, r1
	ldrh    r1, [r8]
	mov     r0, #0x0
	cmp     r1, #0x9
	add     r4, r8, #190, 30 @ #0x2f8
	str     r0, [sp, #0xc]
	moveq   r6, #0x1
	beq     branch_60076a0
	cmp     r1, #0xa
	moveq   r6, r0
	bne     branch_600797c
.arm
branch_60076a0: @ 60076a0 :arm
	add     r0, r8, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_600657c
	ldr     r0, [r8, #0x734]
	cmp     r0, #0x0
	bne     branch_60076cc
	add     r0, r8, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6006584
	mov     r0, #0x0
	b       branch_600797c
@ 0x60076cc

.arm
branch_60076cc: @ 60076cc :arm
	cmp     r6, #0x0
	moveq   r0, #0x1
	streq   r0, [sp, #0x10]
	beq     branch_60076f0
	bl      Function_6000720
	add     r1, r8, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x82]
	str     r1, [sp, #0x10]
	bl      Function_6000740
.arm
branch_60076f0: @ 60076f0 :arm
	mvn     r0, r5
	str     r0, [sp, #0x4]
	mov     r10, #0x0
.arm
branch_60076fc: @ 60076fc :arm
	add     r0, r8, #191, 30 @ #0x2fc
	add     r1, r0, #1, 22 @ #0x400
	ldr     r9, [pc, #0x280] @ [0x600798c] (=0xffff)
	mov     r0, r10, lsl #2
	ldrh    r5, [r1, r0]
	add     r0, r8, #1, 24 @ #0x100
	str     r9, [sp, #0x8]
	add     r6, r1, r10, lsl #2
	str     r9, [sp, #0x14]
	str     r9, [sp, #0x18]
	str     r9, [sp, #0x1c]
	str     r9, [sp, #0x20]
	str     r9, [sp, #0x24]
	str     r9, [sp, #0x28]
	str     r0, [sp, #0x2c]
	str     r9, [sp, #0x30]
	add     r11, r8, #6, 24 @ #0x600
	str     r9, [sp, #0x34]
	str     r9, [sp, #0x38]
	b       branch_6007910
@ 0x600774c

.arm
branch_600774c: @ 600774c :arm
	ldr     r0, [sp]
	add     r7, r4, r5, lsl #5
	cmp     r0, #0x0
	bne     branch_6007788
	ldrh    r1, [r7, #0xa]
	ldr     r0, [sp, #0x4]
	ldrh    r2, [r7, #0x8]
	and     r0, r1, r0
	orr     r0, r2, r0
	strh    r0, [r7, #0x8]
	ldrh    r0, [r7, #0x8]
	ldrh    r1, [r7, #0x6]
	mvn     r0, r0
	and     r0, r1, r0
	strh    r0, [r7, #0x6]
.arm
branch_6007788: @ 6007788 :arm
	ldrh    r1, [r7, #0x6]
	ldr     r0, [sp, #0x10]
	and     r0, r1, r0
	strh    r0, [r7, #0x6]
	mov     r0, #0x0
	strh    r0, [r7, #0xa]
	ldrh    r0, [r7, #0x6]
	cmp     r0, #0x0
	beq     branch_6007824
	ldrh    r0, [r7, #0x2]
	tst     r0, #0x8
	ldreqh  r0, [r7, #0x12]
	cmpeq   r0, #0x0
	beq     branch_6007824
	mov     r0, #0x1
	str     r0, [sp, #0xc]
	ldrh    r0, [r7, #0x12]
	cmp     r0, #0x0
	subne   r0, r0, #0x1
	strneh  r0, [r7, #0x12]
	ldrh    r1, [r7]
	ldr     r0, [sp, #0x24]
	cmp     r1, r0
	ldreq   r0, [sp, #0x14]
	streqh  r0, [r6, #0x2]
	ldr     r0, [sp, #0x28]
	cmp     r9, r0
	ldrh    r0, [r7]
	strh    r0, [r6]
	ldr     r0, [sp, #0x18]
	strh    r0, [r7]
	moveq   r0, r5, lsl #16
	moveq   r0, r0, lsr #16
	streq   r0, [sp, #0x8]
	movne   r0, r9, lsl #5
	strneh  r5, [r4, r0]
	mov     r0, r5, lsl #16
	mov     r9, r0, lsr #16
	b       branch_600790c
@ 0x6007824

.arm
branch_6007824: @ 6007824 :arm
	bl      Function_6000294
	mov     r1, #0x81
	strh    r1, [r0]
	ldrh    r1, [r7, #0x6]
	ldr     r3, [sp, #0x2c]
	cmp     r1, #0x0
	moveq   r1, #0x0
	movne   r1, #0xf
	strh    r1, [r0, #0x2]
	mov     r1, #0x14
	strh    r1, [r0, #0x8]
	ldrh    r1, [r7, #0x2]
	strh    r1, [r0, #0xa]
	ldrh    r1, [r7, #0x4]
	strh    r1, [r0, #0xc]
	ldrh    r1, [r7, #0x6]
	strh    r1, [r0, #0xe]
	ldrh    r1, [r7, #0x8]
	strh    r1, [r0, #0x10]
	ldrh    r1, [r7, #0xe]
	strh    r1, [r0, #0x18]
	ldr     r1, [r7, #0x14]
	str     r1, [r0, #0x14]
	ldr     r1, [r7, #0x18]
	str     r1, [r0, #0x1c]
	ldr     r1, [r7, #0x1c]
	str     r1, [r0, #0x20]
	ldrh    r1, [r7, #0x10]
	strh    r1, [r0, #0x1a]
	ldrh    r3, [r3, #0x88]
	ldrh    r1, [r8, #0x30]
	cmp     r3, #0x0
	ldrh    r2, [r8, #0x32]
	moveq   r3, r1
	movne   r3, r2
	strh    r3, [r0, #0x24]
	ldr     r3, [sp, #0x2c]
	ldrh    r3, [r3, #0x88]
	cmp     r3, #0x0
	movne   r2, r1
	strh    r2, [r0, #0x26]
	bl      Function_600029c
	ldrh    r1, [r7]
	ldr     r0, [sp, #0x30]
	cmp     r1, r0
	ldreq   r0, [sp, #0x1c]
	streqh  r0, [r6, #0x2]
	ldrh    r0, [r7]
	strh    r0, [r6]
	ldr     r0, [sp, #0x20]
	strh    r0, [r7]
	ldrh    r1, [r11, #0xfa]
	ldr     r0, [sp, #0x34]
	cmp     r1, r0
	streqh  r5, [r11, #0xf8]
	movne   r0, r1, lsl #5
	strneh  r5, [r4, r0]
	strh    r5, [r11, #0xfa]
.arm
branch_600790c: @ 600790c :arm
	ldrh    r5, [r6]
.arm
branch_6007910: @ 6007910 :arm
	ldr     r0, [sp, #0x38]
	cmp     r5, r0
	bne     branch_600774c
	ldr     r1, [pc, #0x68] @ [0x600798c] (=0xffff)
	cmp     r9, r1
	beq     branch_6007958
	add     r0, r8, r10, lsl #2
	add     r0, r0, #7, 24 @ #0x700
	ldrh    r3, [r0, #0xc]
	mov     r2, r9, lsl #5
	strh    r3, [r4, r2]
	ldrh    r2, [r0, #0xe]
	cmp     r2, r1
	streqh  r9, [r0, #0xe]
	add     r0, r8, r10, lsl #2
	add     r1, r0, #7, 24 @ #0x700
	ldr     r0, [sp, #0x8]
	strh    r0, [r1, #0xc]
.arm
branch_6007958: @ 6007958 :arm
	add     r10, r10, #0x1
	cmp     r10, #0x4
	blt     branch_60076fc
	add     r0, r8, #199, 30 @ #0x31c
	mov     r1, #0x0
	add     r0, r0, #1, 22 @ #0x400
	str     r1, [r8, #0x734]
	bl      Function_6006584
	ldr     r0, [sp, #0xc]
.arm
branch_600797c: @ 600797c :arm
	add     sp, sp, #0x3c
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x6007988

.word 0x60198a0 @ 0x6007988
.word 0xffff @ 0x600798c
.arm
Function_6007990: @ 6007990 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x14
	ldr     r1, [pc, #0x1dc] @ [0x6007b7c] (=0x60198a0)
	mvn     r2, r0
	ldr     r9, [r1, #0x550]
	add     r0, r9, #1, 24 @ #0x100
	ldrh    r1, [r0, #0x82]
	add     r0, r9, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	add     r5, r9, #190, 30 @ #0x2f8
	and     r11, r2, r1
	bl      Function_600657c
	add     r0, r9, #195, 30 @ #0x30c
	add     r0, r0, #1, 22 @ #0x400
	str     r0, [sp, #0x8]
	mov     r0, #0x0
	str     r0, [sp, #0xc]
.arm
branch_60079d4: @ 60079d4 :arm
	add     r0, r9, #1, 24 @ #0x100
	str     r0, [sp, #0x10]
	mov     r6, #0x0
	add     r4, r9, #6, 24 @ #0x600
.arm
branch_60079e4: @ 60079e4 :arm
	ldr     r0, [sp, #0x8]
	mov     r1, r6, lsl #2
	add     r7, r0, r6, lsl #2
	ldrh    r10, [r0, r1]
	ldr     r0, [pc, #0x184] @ [0x6007b80] (=0xffff)
	str     r7, [sp, #0x4]
	str     r0, [sp]
	b       branch_6007b38
@ 0x6007a04

.arm
branch_6007a04: @ 6007a04 :arm
	add     r8, r5, r10, lsl #5
	ldrh    r0, [r8, #0x6]
	and     r0, r0, r11
	strh    r0, [r8, #0x6]
	ldrh    r0, [r8, #0xa]
	and     r0, r0, r11
	strh    r0, [r8, #0xa]
	ldrh    r0, [r8, #0x6]
	cmp     r0, #0x0
	bne     branch_6007b0c
	bl      Function_6000294
	mov     r1, #0x81
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0x14
	strh    r1, [r0, #0x8]
	ldrh    r1, [r8, #0x2]
	ldr     r3, [sp, #0x10]
	strh    r1, [r0, #0xa]
	ldrh    r1, [r8, #0x4]
	strh    r1, [r0, #0xc]
	ldrh    r1, [r8, #0x6]
	strh    r1, [r0, #0xe]
	ldrh    r1, [r8, #0x8]
	strh    r1, [r0, #0x10]
	ldrh    r1, [r8, #0xe]
	strh    r1, [r0, #0x18]
	ldr     r1, [r8, #0x14]
	str     r1, [r0, #0x14]
	ldr     r1, [r8, #0x18]
	str     r1, [r0, #0x1c]
	ldr     r1, [r8, #0x1c]
	str     r1, [r0, #0x20]
	ldrh    r1, [r8, #0x10]
	strh    r1, [r0, #0x1a]
	ldrh    r3, [r3, #0x88]
	ldrh    r1, [r9, #0x30]
	cmp     r3, #0x0
	ldrh    r2, [r9, #0x32]
	moveq   r3, r1
	movne   r3, r2
	strh    r3, [r0, #0x24]
	ldr     r3, [sp, #0x10]
	ldrh    r3, [r3, #0x88]
	cmp     r3, #0x0
	movne   r2, r1
	strh    r2, [r0, #0x26]
	bl      Function_600029c
	ldrh    r1, [r8]
	ldr     r0, [pc, #0xac] @ [0x6007b80] (=0xffff)
	cmp     r1, r0
	ldreq   r0, [sp]
	streqh  r0, [r7, #0x2]
	ldrh    r1, [r8]
	ldr     r0, [sp, #0x4]
	strh    r1, [r0]
	ldr     r0, [pc, #0x90] @ [0x6007b80] (=0xffff)
	strh    r0, [r8]
	ldrh    r1, [r4, #0xfa]
	cmp     r1, r0
	streqh  r10, [r4, #0xf8]
	movne   r0, r1, lsl #5
	strneh  r10, [r5, r0]
	strh    r10, [r4, #0xfa]
	ldr     r10, [sp]
.arm
branch_6007b0c: @ 6007b0c :arm
	ldr     r0, [pc, #0x6c] @ [0x6007b80] (=0xffff)
	str     r10, [sp]
	cmp     r10, r0
	addne   r0, r5, r10, lsl #5
	strne   r0, [sp, #0x4]
	ldr     r0, [pc, #0x58] @ [0x6007b80] (=0xffff)
	streq   r7, [sp, #0x4]
	cmp     r10, r0
	movne   r0, r10, lsl #5
	ldrneh  r10, [r5, r0]
	ldreqh  r10, [r7]
.arm
branch_6007b38: @ 6007b38 :arm
	ldr     r0, [pc, #0x40] @ [0x6007b80] (=0xffff)
	cmp     r10, r0
	bne     branch_6007a04
	add     r6, r6, #0x1
	cmp     r6, #0x4
	blt     branch_60079e4
	ldr     r0, [sp, #0xc]
	add     r0, r0, #0x1
	str     r0, [sp, #0xc]
	cmp     r0, #0x2
	blt     branch_60079d4
	add     r0, r9, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6006584
	add     sp, sp, #0x14
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x6007b7c

.word 0x60198a0 @ 0x6007b7c
.word 0xffff @ 0x6007b80
.arm
Function_6007b84: @ 6007b84 :arm
	stmfd   sp!, {r0-r3}
.arm
Function_6007b88: @ 6007b88 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0xc
	ldr     r4, [pc, #0x1e8] @ [0x6007d80] (=0x60198a0)
	ldr     r1, [sp, #0x40]
	ldr     r5, [r4, #0x550]
	movs    r9, r3
	str     r1, [sp, #0x40]
	mov     r10, r0
	str     r2, [sp]
	beq     branch_6007d70
	cmp     r9, #129, 30 @ #0x204
	bhi     branch_6007d70
	add     r4, r5, #1, 24 @ #0x100
	ldrh    r0, [r4, #0x88]
	cmp     r10, r0
	beq     branch_6007d70
	cmp     r10, #0x10
	bcs     branch_6007d70
	tst     r9, #0x1
	bne     branch_6007d70
	add     r0, r5, #126, 30 @ #0x1f8
	add     r8, r0, r10, lsl #4
	mov     r0, #0x1
	str     r0, [sp, #0x8]
	b       branch_6007d68
@ 0x6007bec

.arm
branch_6007bec: @ 6007bec :arm
	ldr     r0, [sp, #0x8]
	ldr     r7, [pc, #0x18c] @ [0x6007d84] (=0xffff)
	cmp     r0, #0x1
	addeq   r1, sp, #0x34
	moveq   r0, #0x0
	ldrne   r1, [sp]
	streq   r0, [sp, #0x8]
	movne   r0, r1
	addne   r0, r0, #0x2
	ldrh    r1, [r1]
	strne   r0, [sp]
	mov     r0, r1, lsl #24
	subne   r9, r9, #0x2
	movs    r6, r0, lsr #23
	moveq   r6, #2, 24 @ #0x200
	tst     r1, #1, 20 @ #0x1000
	movne   r2, #0x1
	moveq   r2, #0x0
	tst     r1, #2, 22 @ #0x800
	movne   r3, #0x1
	moveq   r3, #0x0
	cmp     r2, #0x0
	movne   r11, #0x2
	moveq   r11, #0x0
	cmp     r3, #0x0
	movne   r0, #0x2
	moveq   r0, #0x0
	add     r0, r6, r0
	add     r0, r0, r11
	subs    r9, r9, r0
	bmi     branch_6007d70
	and     r1, r1, #15, 24 @ #0xf00
	cmp     r3, #0x1
	mov     r1, r1, lsl #8
	ldr     r3, [sp]
	mov     r11, r1, lsr #16
	ldr     r1, [sp]
	add     r0, r3, r0
	str     r1, [sp, #0x4]
	add     r1, r1, r6
	str     r0, [sp]
	bne     branch_6007cd0
	mov     r0, r11, lsl #29
	mov     r0, r0, lsr #28
	ldrh    r3, [r8, r0]
	ldrh    r7, [r1], #0x2
	tst     r3, #0x1
	movne   r3, r7, lsl #1
	strneh  r3, [r8, r0]
	bne     branch_6007cd0
	mov     r7, r7, lsl #1
	sub     r3, r3, r7
	mov     r3, r3, lsl #16
	mov     r3, r3, lsr #16
	cmp     r3, #1, 24 @ #0x100
	bcc     branch_6007d68
	strh    r7, [r8, r0]
.arm
branch_6007cd0: @ 6007cd0 :arm
	cmp     r2, #0x1
	bne     branch_6007cec
	ldrh    r2, [r1]
	ldrh    r1, [r4, #0x88]
	mov     r0, #0x1
	tst     r2, r0, lsl r1
	beq     branch_6007d68
.arm
branch_6007cec: @ 6007cec :arm
	cmp     r6, #0x0
	ble     branch_6007d68
	bl      Function_6000294
	mov     r1, #0x82
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0x15
	strh    r1, [r0, #0x4]
	ldr     r1, [sp, #0x40]
	strh    r11, [r0, #0x6]
	str     r1, [r0, #0x8]
	ldr     r1, [sp, #0x4]
	str     r1, [r0, #0xc]
	strh    r6, [r0, #0x10]
	strh    r10, [r0, #0x12]
	ldrh    r1, [r4, #0x88]
	strh    r1, [r0, #0x20]
	strh    r7, [r0, #0x1a]
	ldrh    r1, [r4, #0x88]
	ldrh    r2, [r5, #0x30]
	cmp     r1, #0x0
	ldrh    r3, [r5, #0x32]
	moveq   r1, r2
	movne   r1, r3
	strh    r1, [r0, #0x40]
	ldrh    r1, [r4, #0x88]
	cmp     r1, #0x0
	movne   r3, r2
	strh    r3, [r0, #0x42]
	bl      Function_600029c
.arm
branch_6007d68: @ 6007d68 :arm
	cmp     r9, #0x0
	bgt     branch_6007bec
.arm
branch_6007d70: @ 6007d70 :arm
	add     sp, sp, #0xc
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x6007d80

.word 0x60198a0 @ 0x6007d80
.word 0xffff @ 0x6007d84
.arm
Function_6007d88: @ 6007d88 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r1
	mov     r5, r0
	tst     r6, #2, 18 @ #0x8000
	ldrne   r0, [pc, #0x84] @ [0x6007e24] (=0x7fff)
	mov     r4, r3
	andne   r6, r6, r0
	addeq   r0, r6, #0x1c
	moveq   r0, r0, lsl #2
	addeq   r6, r0, #0x66
	mov     r0, r2
	bl      Function_600742c
	mul     r2, r6, r0
	ldr     r1, [pc, #0x64] @ [0x6007e28] (=0x4000006)
	add     r0, r5, #0x22
	mov     r3, r0, lsl #2
	ldrh    r1, [r1]
	sub     r0, r4, #0x2
	add     r3, r3, #0x60
	add     r2, r2, #226, 30 @ #0x388
	add     r4, r3, r2
	subs    r3, r0, r1
	bpl     branch_6007df0
.arm
branch_6007de4: @ 6007de4 :arm
	add     r0, r3, #0x7
	adds    r3, r0, #1, 24 @ #0x100
	bmi     branch_6007de4
.arm
branch_6007df0: @ 6007df0 :arm
	ldr     r2, [pc, #0x34] @ [0x6007e2c] (=0x66666667)
	rsb     r1, r3, r3, lsl #7
	mov     r0, r1, lsr #31
	smull   r1, r3, r2, r1
	add     r3, r0, r3, asr #3
	mov     r0, #0xa
	mul     r0, r3, r0
	cmp     r0, r4
	movcc   r3, #0x0
	mov     r0, r3, lsl #16
	mov     r0, r0, lsr #16
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6007e24

.word 0x7fff @ 0x6007e24
.word 0x4000006 @ 0x6007e28
.word 0x66666667 @ 0x6007e2c
.arm
Function_6007e30: @ 6007e30 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #10, 26 @ #0x280
	ldr     r1, [pc, #0x7c] @ [0x6007ebc] (=0x60198a0)
	ldr     r2, [r0, #0x4]
	ldr     r4, [r1, #0x550]
	add     r0, sp, #0x0
	strh    r2, [r4, #0xf6]
	add     r1, r4, #0xe8
	bl      Function_600037c
	ldrh    r1, [r4, #0xec]
	add     r0, sp, #0x80
	add     r1, r1, #0x10
	mov     r1, r1, lsl #16
	add     r2, sp, #0x0
	mov     r1, r1, lsr #16
	bl      Function_60028e4
	mov     r4, r0
	bl      Function_6000294
	mov     r1, #0x21
	strh    r1, [r0]
	ldrh    r1, [r4, #0x4]
	cmp     r1, #0x0
	moveq   r1, #0x0
	streqh  r1, [r0, #0x2]
	beq     branch_6007eac
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	add     r1, r1, #145, 30 @ #0x244
	strh    r1, [r0, #0x4]
	ldrh    r1, [r4, #0x4]
	strh    r1, [r0, #0x6]
.arm
branch_6007eac: @ 6007eac :arm
	bl      Function_600029c
	add     sp, sp, #10, 26 @ #0x280
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6007ebc

.word 0x60198a0 @ 0x6007ebc
.arm
Function_6007ec0: @ 6007ec0 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #130, 30 @ #0x208
	add     r1, sp, #0x0
	add     r0, r0, #0x4
	mov     r2, #0x6
	bl      Function_6000440
	mov     r8, #0x0
	add     r7, sp, #0x8
	add     r6, sp, #0x0
	mov     r5, #0x13
	b       branch_6007f1c
@ 0x6007eec

.arm
branch_6007eec: @ 6007eec :arm
	mov     r0, r7
	mov     r1, r6
	mov     r2, r5
	bl      Function_60020f8
	mov     r4, r0
	ldrh    r0, [r4, #0x4]
	cmp     r0, #0x0
	beq     branch_6007f24
	cmp     r0, #0x7
	cmpne   r0, #0xc
	bne     branch_6007f24
	add     r8, r8, #0x1
.arm
branch_6007f1c: @ 6007f1c :arm
	cmp     r8, #0x2
	blt     branch_6007eec
.arm
branch_6007f24: @ 6007f24 :arm
	bl      Function_6000294
	mov     r1, #0x22
	strh    r1, [r0]
	ldrh    r1, [r4, #0x4]
	cmp     r1, #0x0
	moveq   r1, #0x0
	streqh  r1, [r0, #0x2]
	beq     branch_6007f5c
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	mov     r1, #0x5
	strh    r1, [r0, #0x4]
	ldrh    r1, [r4, #0x4]
	strh    r1, [r0, #0x6]
.arm
branch_6007f5c: @ 6007f5c :arm
	bl      Function_600029c
	add     sp, sp, #130, 30 @ #0x208
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x6007f6c

.arm
Function_6007f6c: @ 6007f6c :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [r0, #0x4]
	ldr     r1, [pc, #0x3c] @ [0x6007fb8] (=0x60198a0)
	str     r3, [r1, #0x54c]
	ldr     r2, [r0, #0x8]
	str     r2, [r1, #0x550]
	str     r2, [r3]
	ldr     r1, [r0, #0xc]
	str     r1, [r3, #0x8]
	ldr     r0, [r0, #0x10]
	bl      Function_6007fbc
	bl      Function_6000294
	mov     r1, #0x3
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6007fb8

.word 0x60198a0 @ 0x6007fb8
.arm
Function_6007fbc: @ 6007fbc :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r1, [pc, #0x194] @ [0x600815c] (=0x60198a0)
	mov     r8, r0
	ldr     r7, [r1, #0x550]
	ldr     r4, [r1, #0x54c]
	mov     r5, #0x0
	bl      Function_6000720
	ldr     r1, [r7, #0xc]
	mov     r6, r0
	cmp     r1, #0x1
	bne     branch_6007ffc
	mov     r0, r5
	str     r0, [r7, #0xc]
	mov     r5, #0x1
	bl      Function_6005cd0
	bl      Function_60006c0
.arm
branch_6007ffc: @ 6007ffc :arm
	add     r12, r7, #1, 24 @ #0x100
	mov     r1, #0x0
	strh    r1, [r12, #0x82]
	strh    r1, [r7, #0x86]
	str     r1, [r7, #0x14]
	str     r1, [r7, #0x10]
	str     r1, [r7, #0x1c]
	strh    r1, [r7, #0xce]
	strh    r1, [r7, #0xc2]
	mov     r0, #0x1
	strh    r0, [r7, #0x58]
	strh    r0, [r7, #0x5a]
	mov     r0, #0x6
	strh    r0, [r7, #0x5c]
	strh    r1, [r7, #0x98]
	strh    r1, [r7, #0x92]
	strh    r1, [r7, #0x94]
	strh    r1, [r7, #0x9a]
	strh    r1, [r7, #0x9c]
	ldrh    r0, [r7, #0x58]
	add     r3, r7, #7, 24 @ #0x700
	strh    r0, [r3, #0xc0]
	ldrh    r2, [r7, #0x5a]
	add     r0, r7, #103, 30 @ #0x19c
	strh    r2, [r3, #0xc2]
	ldrh    lr, [r7, #0x5c]
	mov     r2, #0x50
	strh    lr, [r3, #0xc4]
	ldrh    lr, [r7, #0x98]
	strh    lr, [r3, #0xca]
	ldrh    lr, [r7, #0x92]
	strh    lr, [r3, #0xc6]
	ldrh    lr, [r7, #0x94]
	strh    lr, [r3, #0xc8]
	ldrh    lr, [r7, #0x9a]
	strh    lr, [r3, #0xcc]
	str     r1, [r7, #0x198]
	strh    r1, [r12, #0x96]
	bl      Function_6001ad0
	bl      Function_600082c
	mov     r0, #65, 30 @ #0x104
	strh    r0, [r7, #0x40]
	mov     r0, #0xf0
	strh    r0, [r7, #0x42]
	mov     r0, #250, 30 @ #0x3e8
	strh    r0, [r7, #0x44]
	mov     r1, #0x0
	ldr     r0, [pc, #0xa0] @ [0x6008160] (=0x20b)
	strh    r1, [r7, #0x46]
	str     r0, [r7, #0x48]
	str     r1, [r7, #0x4c]
	str     r1, [r7, #0x50]
	str     r1, [r7, #0x54]
	strh    r1, [r7, #0xc6]
	add     r0, r7, #1, 24 @ #0x100
	mov     r1, #0x1
	strh    r1, [r0, #0xee]
	mov     r0, r6
	str     r8, [r7, #0xc8]
	bl      Function_6000740
	cmp     r5, #0x0
	beq     branch_60080fc
	ldr     r0, [pc, #0x68] @ [0x6008164] (=0xffff)
	bl      Function_6007990
.arm
branch_60080fc: @ 60080fc :arm
	mov     r2, #0x0
	mov     r1, #2, 18 @ #0x8000
.arm
branch_6008104: @ 6008104 :arm
	add     r0, r4, r2, lsl #4
	add     r2, r2, #0x1
	str     r1, [r0, #0xd0]
	cmp     r2, #0x20
	blt     branch_6008104
	add     r1, r7, #126, 30 @ #0x1f8
	mov     r0, #0x1
	mov     r2, #1, 24 @ #0x100
	bl      Function_6000598
	bl      Function_6001d9c
	add     r0, r7, #199, 30 @ #0x31c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_60001d4
	bl      Function_6005cbc
	tst     r8, #0x2
	bne     branch_600814c
	mov     r0, #0xf
	bl      Function_600307c
.arm
branch_600814c: @ 600814c :arm
	mov     r0, #0x1
	strh    r0, [r7]
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x600815c

.word 0x60198a0 @ 0x600815c
.word 0x20b @ 0x6008160
.word 0xffff @ 0x6008164
.arm
Function_6008168: @ 6008168 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x58] @ [0x60081cc] (=0x60198a0)
	ldr     r4, [r0, #0x550]
	ldrh    r0, [r4]
	cmp     r0, #0x1
	beq     branch_600819c
	bl      Function_6000294
	mov     r1, #0x4
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	b       branch_60081c4
@ 0x600819c

.arm
branch_600819c: @ 600819c :arm
	mov     r0, #0x1
	bl      Function_600307c
	mov     r0, #0x0
	strh    r0, [r4]
	bl      Function_6000294
	mov     r1, #0x4
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_60081c4: @ 60081c4 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x60081cc

.word 0x60198a0 @ 0x60081cc
.arm
Function_60081d0: @ 60081d0 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	ldr     r0, [pc, #0x94] @ [0x6008274] (=0x60198a0)
	ldr     r4, [r0, #0x550]
	ldrh    r0, [r4]
	cmp     r0, #0x1
	beq     branch_6008208
	bl      Function_6000294
	mov     r1, #0x5
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	b       branch_6008268
@ 0x6008208

.arm
branch_6008208: @ 6008208 :arm
	add     r0, sp, #0x2
	add     r1, sp, #0x0
	bl      Function_6008278
	cmp     r0, #0x0
	bne     branch_6008248
	bl      Function_6000294
	mov     r1, #0x5
	strh    r1, [r0]
	mov     r1, #0x1
	strh    r1, [r0, #0x2]
	ldrh    r1, [sp, #0x2]
	strh    r1, [r0, #0x4]
	ldrh    r1, [sp]
	strh    r1, [r0, #0x6]
	bl      Function_600029c
	b       branch_6008268
@ 0x6008248

.arm
branch_6008248: @ 6008248 :arm
	mov     r0, #0x2
	strh    r0, [r4]
	bl      Function_6000294
	mov     r1, #0x5
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_6008268: @ 6008268 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x6008274

.word 0x60198a0 @ 0x6008274
.arm
Function_6008278: @ 6008278 :arm
	stmfd   sp!, {r3-r7,lr}
	sub     sp, sp, #2, 24 @ #0x200
	ldr     r2, [pc, #0x1d8] @ [0x6008460] (=0x60198a0)
	mov     r7, r0
	add     r0, sp, #0x0
	mov     r6, r1
	ldr     r5, [r2, #0x550]
	bl      Function_60029f4
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_60082bc
	mov     r1, #193, 30 @ #0x304
	strh    r1, [r7]
	ldrh    r1, [r0, #0x4]
	mov     r0, #0x0
	strh    r1, [r6]
	b       branch_6008454
@ 0x60082bc

.arm
branch_60082bc: @ 60082bc :arm
	add     r0, sp, #0x0
	bl      Function_60029c4
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_60082e8
	ldr     r1, [pc, #0x18c] @ [0x6008464] (=0x302)
	strh    r1, [r7]
	ldrh    r1, [r0, #0x4]
	mov     r0, #0x0
	strh    r1, [r6]
	b       branch_6008454
@ 0x60082e8

.arm
branch_60082e8: @ 60082e8 :arm
	ldr     r2, [pc, #0x178] @ [0x6008468] (=0x4808124)
	mov     r0, #0xc8
	strh    r0, [r2]
	mov     r0, #125, 28 @ #0x7d0
	strh    r0, [r2, #0x4]
	ldr     r1, [pc, #0x168] @ [0x600846c] (=0x202)
	add     r0, sp, #0x0
	strh    r1, [r2, #0x2c]
	bl      Function_6002980
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6008330
	ldr     r1, [pc, #0x150] @ [0x6008470] (=0x283)
	strh    r1, [r7]
	ldrh    r1, [r0, #0x4]
	mov     r0, #0x0
	strh    r1, [r6]
	b       branch_6008454
@ 0x6008330

.arm
branch_6008330: @ 6008330 :arm
	ldrh    r2, [r0, #0x6]
	add     r0, r5, #1, 24 @ #0x100
	mov     r1, r2, lsl #15
	strh    r2, [r0, #0xf4]
	mov     r0, r1, lsr #16
	bl      Function_6008488
	add     r1, r5, #1, 24 @ #0x100
	strh    r0, [r1, #0xf6]
	ldr     r1, [pc, #0x11c] @ [0x6008474] (=0xffff)
	add     r0, sp, #0x0
	mov     r2, #0x28
	mov     r3, #0x5
	bl      Function_600270c
	ldr     r1, [pc, #0x10c] @ [0x6008478] (=0x1ff621)
	mov     r0, #0x0
	str     r1, [r5, #0x7b8]
	str     r0, [r5, #0x7bc]
	add     r1, r5, #1, 24 @ #0x100
	mov     r2, #0x2
	strh    r2, [r1, #0xec]
	mov     r2, #0x1
	add     r0, sp, #0x0
	strh    r2, [r1, #0xee]
	bl      Function_6002a20
	mov     r4, r0
	ldrh    r0, [r4, #0x4]
	cmp     r0, #0x0
	beq     branch_60083b8
	ldr     r1, [pc, #0xd4] @ [0x600847c] (=0x306)
	mov     r0, #0x0
	strh    r1, [r7]
	ldrh    r1, [r4, #0x4]
	strh    r1, [r6]
	b       branch_6008454
@ 0x60083b8

.arm
branch_60083b8: @ 60083b8 :arm
	add     r0, r4, #0x6
	add     r1, r5, #0x20
	mov     r2, #0x8
	bl      Function_6001ae0
	ldrh    r1, [r4, #0xe]
	add     r0, sp, #0x0
	strh    r1, [r5, #0x28]
	ldrh    r1, [r4, #0x10]
	strh    r1, [r5, #0x2c]
	ldrh    r1, [r4, #0x12]
	strh    r1, [r5, #0x2e]
	ldrh    r1, [r4, #0x14]
	strh    r1, [r5, #0x2a]
	bl      Function_6002968
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6008414
	ldr     r1, [pc, #0x7c] @ [0x6008480] (=0x281)
	strh    r1, [r7]
	ldrh    r1, [r0, #0x4]
	mov     r0, #0x0
	strh    r1, [r6]
	b       branch_6008454
@ 0x6008414

.arm
branch_6008414: @ 6008414 :arm
	add     r0, r0, #0x6
	add     r1, r5, #0xe0
	mov     r2, #0x6
	bl      Function_6000440
	add     r0, sp, #0x0
	mov     r1, #0x1
	bl      Function_60027d0
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	moveq   r0, #0x1
	beq     branch_6008454
	ldr     r1, [pc, #0x3c] @ [0x6008484] (=0x215)
	strh    r1, [r7]
	ldrh    r1, [r0, #0x4]
	mov     r0, #0x0
	strh    r1, [r6]
.arm
branch_6008454: @ 6008454 :arm
	add     sp, sp, #2, 24 @ #0x200
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6008460

.word 0x60198a0 @ 0x6008460
.word 0x302 @ 0x6008464
.word 0x4808124 @ 0x6008468
.word 0x202 @ 0x600846c
.word 0x283 @ 0x6008470
.word 0xffff @ 0x6008474
.word 0x1ff621 @ 0x6008478
.word 0x306 @ 0x600847c
.word 0x281 @ 0x6008480
.word 0x215 @ 0x6008484
.arm
Function_6008488: @ 6008488 :arm
	ldr     pc, [pc, #-0x4] @ [0x600848c] (=0x3806a60)
@ 0x600848c

.word 0x3806a60 @ 0x600848c
.arm
Function_6008490: @ 6008490 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #2, 24 @ #0x200
	ldr     r0, [pc, #0x98] @ [0x6008538] (=0x60198a0)
	ldr     r5, [r0, #0x550]
	ldrh    r0, [r5]
	cmp     r0, #0x2
	beq     branch_60084c8
	bl      Function_6000294
	mov     r1, #0x6
	strh    r1, [r0]
	mov     r1, #0x3
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	b       branch_600852c
@ 0x60084c8

.arm
branch_60084c8: @ 60084c8 :arm
	add     r0, sp, #0x0
	bl      Function_60029ac
	mov     r4, r0
	ldrh    r0, [r4, #0x4]
	cmp     r0, #0x0
	beq     branch_600850c
	bl      Function_6000294
	mov     r2, #0x6
	mov     r1, #0x1
	strh    r2, [r0]
	strh    r1, [r0, #0x2]
	add     r1, r1, #3, 24 @ #0x300
	strh    r1, [r0, #0x4]
	ldrh    r1, [r4, #0x4]
	strh    r1, [r0, #0x6]
	bl      Function_600029c
	b       branch_600852c
@ 0x600850c

.arm
branch_600850c: @ 600850c :arm
	mov     r0, #0x1
	strh    r0, [r5]
	bl      Function_6000294
	mov     r1, #0x6
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_600852c: @ 600852c :arm
	add     sp, sp, #2, 24 @ #0x200
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6008538

.word 0x60198a0 @ 0x6008538
.arm
Function_600853c: @ 600853c :arm
	stmfd   sp!, {r3-r6,lr}
	sub     sp, sp, #0x1c
	mov     r6, r0
	add     r1, sp, #0x0
	add     r0, r6, #0x4
	bl      Function_6008598
	mov     r5, r0
	bl      Function_6000294
	mov     r4, r0
	mov     r0, #0x23
	strh    r0, [r4]
	strh    r5, [r4, #0x2]
	ldr     r3, [r6, #0x4]
	add     r0, sp, #0x0
	add     r1, r4, #0x8
	mov     r2, #0x1c
	str     r3, [r4, #0x4]
	bl      Function_6000440
	mov     r0, r4
	bl      Function_600029c
	add     sp, sp, #0x1c
	ldmfd   sp!, {r3-r6,lr}
	bx      lr
@ 0x6008598

.arm
Function_6008598: @ 6008598 :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r2, [pc, #0x304] @ [0x60088a8] (=0x60198a0)
	mov     r4, r0
	ldr     r8, [r2, #0x550]
	ldr     r7, [r4]
	ldrh    r0, [r8]
	mov     r9, r1
	add     r0, r0, #0xf7
	add     r0, r0, #255, 24 @ #0xff00
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	cmp     r0, #0x1
	mov     r6, #0x0
	bhi     branch_60085dc
	tst     r7, #11, 22 @ #0x2c00
	bicne   r7, r7, #11, 22 @ #0x2c00
	movne   r6, #0x3
.arm
branch_60085dc: @ 60085dc :arm
	bl      Function_6000720
	mov     r5, r0
	cmp     r9, #0x0
	beq     branch_6008664
	ldr     r0, [pc, #0x2b8] @ [0x60088ac] (=0x3fff)
	str     r0, [r9]
	ldrh    r0, [r8, #0x58]
	strh    r0, [r9, #0x4]
	ldrh    r0, [r8, #0x5a]
	strh    r0, [r9, #0x6]
	ldrh    r0, [r8, #0x5c]
	strh    r0, [r9, #0x8]
	ldrh    r0, [r8, #0x30]
	strh    r0, [r9, #0xa]
	ldrh    r0, [r8, #0x32]
	strh    r0, [r9, #0xc]
	ldrh    r0, [r8, #0x44]
	strh    r0, [r9, #0xe]
	ldrh    r0, [r8, #0x46]
	strh    r0, [r9, #0x10]
	ldrh    r0, [r8, #0x40]
	strh    r0, [r9, #0x12]
	ldrh    r0, [r8, #0x42]
	strh    r0, [r9, #0x14]
	ldrh    r0, [r8, #0x98]
	strh    r0, [r9, #0x16]
	ldrh    r0, [r8, #0x92]
	strb    r0, [r9, #0x18]
	ldrh    r0, [r8, #0x94]
	strb    r0, [r9, #0x19]
	ldrh    r0, [r8, #0x9a]
	strb    r0, [r9, #0x1a]
	ldrh    r0, [r8, #0x9c]
	strb    r0, [r9, #0x1b]
.arm
branch_6008664: @ 6008664 :arm
	tst     r7, #0x1
	beq     branch_6008684
	ldrh    r1, [r4, #0x4]
	add     r0, r8, #7, 24 @ #0x700
	cmp     r1, #0x0
	moveq   r1, #0x10
	strh    r1, [r8, #0x58]
	strh    r1, [r0, #0xc0]
.arm
branch_6008684: @ 6008684 :arm
	tst     r7, #0x2
	beq     branch_60086b0
	ldrh    r1, [r4, #0x6]
	add     r0, r8, #7, 24 @ #0x700
	cmp     r1, #0x0
	moveq   r1, #0x10
	strh    r1, [r8, #0x5a]
	strh    r1, [r0, #0xc2]
	ldrsh   r0, [r8, #0x62]
	cmp     r0, r1
	strgth  r1, [r8, #0x62]
.arm
branch_60086b0: @ 60086b0 :arm
	tst     r7, #0x4
	beq     branch_60086dc
	ldrh    r1, [r4, #0x8]
	add     r0, r8, #7, 24 @ #0x700
	cmp     r1, #0x0
	moveq   r1, #0x10
	strh    r1, [r8, #0x5c]
	strh    r1, [r0, #0xc4]
	ldrsh   r0, [r8, #0x62]
	cmp     r0, r1
	strgth  r1, [r8, #0x62]
.arm
branch_60086dc: @ 60086dc :arm
	tst     r7, #0x8
	beq     branch_6008708
	ldrh    r0, [r4, #0xa]
	ldrh    r2, [r8, #0x34]
	add     r1, r0, #0x1
	bic     r1, r1, #0x1
	mov     r1, r1, lsl #16
	cmp     r2, r1, lsr #16
	movcc   r6, #0x6
	bcc     branch_6008708
	bl      Function_6000900
.arm
branch_6008708: @ 6008708 :arm
	tst     r7, #0x10
	beq     branch_6008734
	ldrh    r0, [r4, #0xc]
	add     r1, r0, #0x1
	bic     r1, r1, #0x1
	mov     r1, r1, lsl #16
	mov     r1, r1, lsr #16
	cmp     r1, #2, 24 @ #0x200
	movhi   r6, #0x6
	bhi     branch_6008734
	bl      Function_600092c
.arm
branch_6008734: @ 6008734 :arm
	tst     r7, #0x20
	beq     branch_6008788
	ldrh    r0, [r4, #0xe]
	ldr     r1, [pc, #0x168] @ [0x60088b0] (=0x2710)
	cmp     r0, r1
	movhi   r6, #0x6
	bhi     branch_6008788
	ldr     r1, [pc, #0x15c] @ [0x60088b4] (=0x82ea)
	mov     r2, #0x0
	umull   r9, r3, r0, r1
	mla     r3, r0, r2, r3
	mla     r3, r2, r1, r3
	mov     r2, r9, lsr #6
	orr     r2, r2, r3, lsl #26
	mov     r1, r3, lsr #6
	mov     r2, r2, lsr #10
	strh    r0, [r8, #0x44]
	orr     r2, r2, r1, lsl #22
	str     r2, [r8, #0x48]
	mov     r0, r1, lsr #10
	str     r0, [r8, #0x4c]
.arm
branch_6008788: @ 6008788 :arm
	tst     r7, #0x40
	beq     branch_60087dc
	ldrh    r0, [r4, #0x10]
	ldr     r1, [pc, #0x114] @ [0x60088b0] (=0x2710)
	cmp     r0, r1
	movhi   r6, #0x6
	bhi     branch_60087dc
	ldr     r1, [pc, #0x108] @ [0x60088b4] (=0x82ea)
	mov     r2, #0x0
	umull   r9, r3, r0, r1
	mla     r3, r0, r2, r3
	mla     r3, r2, r1, r3
	mov     r2, r9, lsr #6
	orr     r2, r2, r3, lsl #26
	mov     r1, r3, lsr #6
	mov     r2, r2, lsr #10
	strh    r0, [r8, #0x46]
	orr     r2, r2, r1, lsl #22
	str     r2, [r8, #0x50]
	mov     r0, r1, lsr #10
	str     r0, [r8, #0x54]
.arm
branch_60087dc: @ 60087dc :arm
	tst     r7, #0x80
	beq     branch_6008810
	ldrh    r1, [r4, #0x12]
	cmp     r1, #0xbe
	bls     branch_6008804
	cmp     r1, #0xdc
	bcc     branch_600880c
	ldr     r0, [pc, #0xb8] @ [0x60088b8] (=0x106)
	cmp     r1, r0
	bhi     branch_600880c
.arm
branch_6008804: @ 6008804 :arm
	strh    r1, [r8, #0x40]
	b       branch_6008810
@ 0x600880c

.arm
branch_600880c: @ 600880c :arm
	mov     r6, #0x6
.arm
branch_6008810: @ 6008810 :arm
	tst     r7, #1, 24 @ #0x100
	beq     branch_6008844
	ldrh    r1, [r4, #0x14]
	cmp     r1, #0xbe
	bls     branch_6008838
	cmp     r1, #0xdc
	bcc     branch_6008840
	ldr     r0, [pc, #0x84] @ [0x60088b8] (=0x106)
	cmp     r1, r0
	bhi     branch_6008840
.arm
branch_6008838: @ 6008838 :arm
	strh    r1, [r8, #0x42]
	b       branch_6008844
@ 0x6008840

.arm
branch_6008840: @ 6008840 :arm
	mov     r6, #0x6
.arm
branch_6008844: @ 6008844 :arm
	tst     r7, #2, 24 @ #0x200
	ldrneh  r1, [r4, #0x16]
	addne   r0, r8, #7, 24 @ #0x700
	strneh  r1, [r8, #0x98]
	strneh  r1, [r0, #0xca]
	tst     r7, #1, 22 @ #0x400
	ldrneb  r0, [r4, #0x18]
	strneh  r0, [r8, #0x92]
	tst     r7, #2, 22 @ #0x800
	ldrneb  r0, [r4, #0x19]
	strneh  r0, [r8, #0x94]
	tst     r7, #1, 20 @ #0x1000
	ldrneb  r1, [r4, #0x1a]
	addne   r0, r8, #7, 24 @ #0x700
	strneh  r1, [r8, #0x9a]
	ldrneh  r1, [r8, #0x9a]
	strneh  r1, [r0, #0xcc]
	tst     r7, #2, 20 @ #0x2000
	ldrneb  r0, [r4, #0x1b]
	strneh  r0, [r8, #0x9c]
	mov     r0, r5
	bl      Function_6000740
	mov     r0, r6
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x60088a8

.word 0x60198a0 @ 0x60088a8
.word 0x3fff @ 0x60088ac
.word 0x2710 @ 0x60088b0
.word 0x82ea @ 0x60088b4
.word 0x106 @ 0x60088b8
.arm
Function_60088bc: @ 60088bc :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #2, 24 @ #0x200
	ldr     r1, [r0, #0x4]
	add     r0, sp, #0x0
	mov     r1, r1, lsl #16
	mov     r1, r1, lsr #16
	bl      Function_6002888
	ldrh    r4, [r0, #0x4]
	cmp     r4, #0x0
	beq     branch_600890c
	bl      Function_6000294
	mov     r1, #0x24
	strh    r1, [r0]
	mov     r2, #0x1
	ldr     r1, [pc, #0x34] @ [0x6008930] (=0x242)
	strh    r2, [r0, #0x2]
	strh    r1, [r0, #0x4]
	strh    r4, [r0, #0x6]
	bl      Function_600029c
	b       branch_6008924
@ 0x600890c

.arm
branch_600890c: @ 600890c :arm
	bl      Function_6000294
	mov     r1, #0x24
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	bl      Function_600029c
.arm
branch_6008924: @ 6008924 :arm
	add     sp, sp, #2, 24 @ #0x200
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6008930

.word 0x242 @ 0x6008930
.arm
Function_6008934: @ 6008934 :arm
	ldr     r12, [pc, #0x8] @ [0x6008944] (=0x6004640)
	mov     r1, #0x1
	mov     r2, #0x0
	bx      r12
@ 0x6008944

.word Function_6004640 @ =0x6004640, 0x6008944
.arm
Function_6008948: @ 6008948 :arm
	stmfd   sp!, {r3-r7,lr}
	sub     sp, sp, #35, 28 @ #0x230
	ldr     r1, [pc, #0x16c] @ [0x6008ac4] (=0x60198a0)
	mov     r7, r0
	ldr     r6, [r1, #0x550]
	add     r5, sp, #0x30
	bl      Function_6000294
	mov     r4, r0
	mov     r1, #0x28
	strh    r1, [r4]
	ldrh    r1, [r6]
	cmp     r1, #0xb
	beq     branch_600898c
	mov     r1, #0x3
	strh    r1, [r4, #0x2]
	bl      Function_600029c
	b       branch_6008ab8
@ 0x600898c

.arm
branch_600898c: @ 600898c :arm
	ldr     r0, [r7, #0x4]
	mov     r2, #0x0
	cmp     r0, #0x1
	moveq   r0, #0x1
	movne   r0, #0x0
	mov     r1, r0, lsl #16
	mov     r0, r5
	mov     r1, r1, lsr #16
	mov     r3, #0x1
	bl      Function_6001ee8
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_60089e0
	mov     r1, #0x1
	strh    r1, [r4, #0x2]
	strh    r1, [r4, #0x4]
	ldrh    r1, [r0, #0x4]
	mov     r0, r4
	strh    r1, [r4, #0x6]
	bl      Function_600029c
	b       branch_6008ab8
@ 0x60089e0

.arm
branch_60089e0: @ 60089e0 :arm
	ldr     r0, [pc, #0xdc] @ [0x6008ac4] (=0x60198a0)
	mov     r2, #0x6
	ldr     r5, [r0, #0x550]
	add     r0, r5, #0x8a
	add     r0, r0, #1, 24 @ #0x100
	add     r1, r5, #0xa2
	bl      Function_6000440
	add     r1, sp, #0x30
	str     r1, [r5, #0xa8]
	mov     r0, #0x0
	strh    r0, [r5, #0xac]
	mov     r2, #0x1
	str     r2, [r5, #0x18]
	add     r1, sp, #0x0
	mov     r2, #0x30
	bl      Function_6000598
	mov     r0, #0x0
	strh    r0, [sp]
	strh    r0, [sp, #0x6]
	add     r0, r5, #1, 24 @ #0x100
	ldrh    r0, [r0, #0xec]
	add     r1, sp, #0x18
	cmp     r0, #0x2
	moveq   r3, #0x14
	add     r0, r5, #0x8a
	movne   r3, #0xa
	add     r0, r0, #1, 24 @ #0x100
	mov     r2, #0x6
	strb    r3, [sp, #0xe]
	bl      Function_6000440
	add     r1, sp, #0x1e
	add     r0, r5, #0xe0
	mov     r2, #0x6
	bl      Function_6000440
	add     r0, sp, #0x30
	str     r0, [sp, #0x2c]
	add     r1, sp, #0x0
	bl      Function_600232c
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_6008aa8
	mov     r1, #0x1
	strh    r1, [r4, #0x2]
	mov     r1, #1, 24 @ #0x100
	strh    r1, [r4, #0x4]
	ldrh    r1, [r0, #0x4]
	mov     r0, r4
	strh    r1, [r4, #0x6]
	bl      Function_600029c
	b       branch_6008ab8
@ 0x6008aa8

.arm
branch_6008aa8: @ 6008aa8 :arm
	mov     r1, #0x0
	mov     r0, r4
	strh    r1, [r4, #0x2]
	bl      Function_600029c
.arm
branch_6008ab8: @ 6008ab8 :arm
	add     sp, sp, #35, 28 @ #0x230
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6008ac4

.word 0x60198a0 @ 0x6008ac4
.arm
Function_6008ac8: @ 6008ac8 :arm
	stmfd   sp!, {r3,lr}
	bl      Function_6000294
	mov     r1, #0x29
	strh    r1, [r0]
	mov     r1, #0x4
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6008aec

.arm
Function_6008aec: @ 6008aec :arm
	stmfd   sp!, {r3,lr}
	bl      Function_6000294
	mov     r1, #0x2a
	strh    r1, [r0]
	mov     r1, #0x4
	strh    r1, [r0, #0x2]
	bl      Function_600029c
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6008b10

.arm
Function_6008b10: @ 6008b10 :arm
	stmfd   sp!, {r3,lr}
	bl      Function_600b89c
	bl      Function_600a494
	bl      Function_600b3cc
	bl      Function_60094e4
	bl      Function_6008dac
	ldr     r0, [pc, #0x28] @ [0x6008b58] (=0x380fff4)
	ldr     r0, [r0]
	add     r1, r0, #3, 24 @ #0x300
	ldr     r0, [r0, #0x31c]
	ldrh    r1, [r1, #0x20]
	bl      Function_600957c
	bl      Function_600f46c
	bl      Function_6010e38
	bl      Function_600ed1c
	bl      Function_6009f50
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6008b58

.word 0x380fff4 @ 0x6008b58
.arm
Function_6008b5c: @ 6008b5c :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0xc
	mov     r4, r0
	ldr     r1, [r4]
	ldr     r3, [pc, #0x1a8] @ [0x6008d1c] (=0x380fff4)
	ldr     r2, [pc, #0x1a8] @ [0x6008d20] (=0x694)
	mov     r0, #0x0
	str     r1, [r3]
	bl      Function_6008d2c
	bl      Function_6008d34
	ldr     r2, [pc, #0x190] @ [0x6008d1c] (=0x380fff4)
	ldr     r1, [r2]
	str     r0, [r1, #0x314]
	ldr     r1, [r4, #0x18]
	ldr     r0, [r2]
	str     r1, [r0, #0x30c]
	ldr     r1, [r4, #0x1c]
	ldr     r0, [r2]
	mov     r1, r1, lsr #1
	str     r1, [r0, #0x310]
	ldr     r1, [r2]
	ldr     r0, [r1, #0x310]
	cmp     r0, #0x0
	mvneq   r0, #0x0
	streq   r0, [r1, #0x310]
	add     r0, r4, #0x20
	bl      Function_600940c
	bl      Function_60180c0
	ldr     r3, [pc, #0x150] @ [0x6008d24] (=0x4000304)
	ldr     r1, [pc, #0x144] @ [0x6008d1c] (=0x380fff4)
	ldrh    r2, [r3]
	mov     r0, #0x30
	orr     r2, r2, #0x2
	strh    r2, [r3]
	strh    r0, [r3, #-0xfe]
	ldr     r0, [r1]
	mov     r2, #0x3
	str     r2, [r0, #0x68c]
	ldr     r1, [r1]
	mov     r0, #0x3c
	add     r1, r1, #0x92
	add     r2, r1, #6, 24 @ #0x600
	mov     r1, #0x2
	bl      Function_6017ff8
	ldr     r1, [pc, #0x108] @ [0x6008d1c] (=0x380fff4)
	mov     r0, #0x3e
	ldr     r2, [r1]
	mov     r1, #0x2
	add     r2, r2, #105, 28 @ #0x690
	bl      Function_6017ff8
	ldr     r2, [pc, #0xf0] @ [0x6008d1c] (=0x380fff4)
	ldr     r3, [r4, #0x10]
	ldr     r0, [r2]
	mov     r1, #0x1c
	str     r3, [r0, #0x308]
	ldr     r0, [r2]
	ldr     r2, [r4, #0x14]
	str     r2, [r0, #0x304]
	ldr     r0, [r4, #0x30]
	bl      Function_6003ea8
	mov     r1, r0
	ldr     r0, [r4, #0x2c]
	bl      Function_600957c
	bl      Function_6008dac
	bl      Function_600f46c
	bl      Function_6010e38
	bl      Function_600ed1c
	bl      Function_600b5f4
	add     r0, sp, #0x8
	bl      Function_6017f04
	cmp     r0, #0x0
	beq     branch_6008c98
	ldr     r0, [pc, #0x98] @ [0x6008d1c] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r1, [r0, #0x3e]
	orr     r1, r1, #0x80
	strh    r1, [r0, #0x3e]
	b       branch_6008cc0
@ 0x6008c98

.arm
branch_6008c98: @ 6008c98 :arm
	bl      Function_600b35c
	bl      Function_600bedc
	bl      Function_600a51c
	bl      Function_600b3cc
	bl      Function_600b46c
	bl      Function_600c080
	bl      Function_600c20c
	bl      Function_600b404
	bl      Function_6009f50
	bl      Function_600a494
.arm
branch_6008cc0: @ 6008cc0 :arm
	ldr     r1, [r4, #0x8]
	ldr     r0, [pc, #0x50] @ [0x6008d1c] (=0x380fff4)
	str     r1, [sp]
	ldr     r2, [r4, #0xc]
	ldr     r1, [pc, #0x50] @ [0x6008d28] (=0x6008e38)
	str     r2, [sp, #0x4]
	ldr     r0, [r0]
	ldr     r3, [r4, #0x4]
	add     r0, r0, #0x18
	mov     r2, #0x0
	bl      Function_60001dc
	ldr     r0, [pc, #0x28] @ [0x6008d1c] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #0x18
	bl      Function_60001e4
	bl      Function_600d9c4
	ldr     r0, [pc, #0x14] @ [0x6008d1c] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x3e]
	add     sp, sp, #0xc
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x6008d1c

.word 0x380fff4 @ 0x6008d1c
.word 0x694 @ 0x6008d20
.word 0x4000304 @ 0x6008d24
.word 0x6008e38 @ 0x6008d28
.arm
Function_6008d2c: @ 6008d2c :arm
	ldr     pc, [pc, #-0x4] @ [0x6008d30] (=0x37fb0b8)
@ 0x6008d30

.word 0x37fb0b8 @ 0x6008d30
.arm
Function_6008d34: @ 6008d34 :arm
	ldr     pc, [pc, #-0x4] @ [0x6008d38] (=0x37f8c58)
@ 0x6008d38

.word 0x37f8c58 @ 0x6008d38
.arm
Function_6008d3c: @ 6008d3c :arm
	ldr     r0, [pc, #0x8] @ [0x6008d4c] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #0x18
	bx      lr
@ 0x6008d4c

.word 0x380fff4 @ 0x6008d4c
.arm
Function_6008d50: @ 6008d50 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x3c] @ [0x6008d98] (=0x380fff4)
	ldr     r4, [r0]
	add     r0, r4, #0x18
	bl      Function_6008d9c
	cmp     r0, #0x1
	beq     branch_6008d90
	mov     r0, #0x2
	mov     r1, #0x16
	bl      Function_6008f00
	add     r0, r4, #0x18
	bl      Function_6008da4
.arm
branch_6008d80: @ 6008d80 :arm
	add     r0, r4, #0x18
	bl      Function_6008d9c
	cmp     r0, #0x0
	beq     branch_6008d80
.arm
branch_6008d90: @ 6008d90 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6008d98

.word 0x380fff4 @ 0x6008d98
.arm
Function_6008d9c: @ 6008d9c :arm
	ldr     pc, [pc, #-0x4] @ [0x6008da0] (=0x37f9320)
@ 0x6008da0

.word 0x37f9320 @ 0x6008da0
.arm
Function_6008da4: @ 6008da4 :arm
	ldr     pc, [pc, #-0x4] @ [0x6008da8] (=0x37f92ec)
@ 0x6008da8

.word 0x37f92ec @ 0x6008da8
.arm
Function_6008dac: @ 6008dac :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x74] @ [0x6008e2c] (=0x380fff4)
	mov     r3, #0x0
	ldr     lr, [r0]
	ldr     r2, [pc, #0x6c] @ [0x6008e30] (=0xffff)
	strh    r3, [lr, #0x10]
	strh    r3, [lr, #0x12]
.arm
branch_6008dc8: @ 6008dc8 :arm
	add     r0, lr, r3, lsl #1
	strh    r2, [r0, #0x8]
	ldrh    r0, [r0, #0x8]
	mov     r1, r3, lsl #1
	add     r3, r3, #0x1
	strh    r0, [lr, r1]
	cmp     r3, #0x4
	bcc     branch_6008dc8
	ldr     r12, [pc, #0x40] @ [0x6008e30] (=0xffff)
	mov     r4, #0x0
	ldr     r1, [pc, #0x3c] @ [0x6008e34] (=0x6018264)
	mov     r2, r4
.arm
branch_6008df8: @ 6008df8 :arm
	add     r3, lr, r4, lsl #3
	strh    r12, [r3, #0xbc]
	ldr     r0, [r1, r4, lsl #0x2]
	strh    r2, [r3, #0xbe]
	add     r4, r4, #0x1
	str     r0, [r3, #0xc0]
	cmp     r4, #0x18
	bcc     branch_6008df8
	mov     r0, #0x3
	mov     r1, #0xc
	bl      Function_6008f00
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6008e2c

.word 0x380fff4 @ 0x6008e2c
.word 0xffff @ 0x6008e30
.word 0x6018264 @ 0x6008e34
.arm
Function_6008e38: @ 6008e38 :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r7, [pc, #0xa0] @ [0x6008ee4] (=0x380fff4)
	mov     r0, #0x0
	ldr     r8, [r7]
	ldr     r4, [pc, #0x98] @ [0x6008ee8] (=0x1000010)
	strh    r0, [r8, #0x10]
	ldr     r9, [pc, #0x94] @ [0x6008eec] (=0xffff)
	strh    r0, [r8, #0x14]
	add     r6, sp, #0x0
	mov     r5, r0
.arm
branch_6008e60: @ 6008e60 :arm
	ldr     r0, [r7]
	mov     r1, r6
	ldr     r0, [r0, #0x308]
	mov     r2, r5
	bl      Function_600028c
	cmp     r0, #0x0
	beq     branch_6008e84
	mov     r0, r6
	bl      Function_600906c
.arm
branch_6008e84: @ 6008e84 :arm
	mov     r0, r4
	bl      Function_6008ef0
	ldrh    r1, [r8, #0x10]
	strh    r1, [r8, #0x12]
	mov     r1, r1, lsl #1
	ldrh    r1, [r8, r1]
	cmp     r1, r9
	bne     branch_6008eb8
	ldrh    r1, [r8, #0x10]
	add     r1, r1, #0x1
	strh    r1, [r8, #0x10]
	bl      Function_6008ef8
	b       branch_6008e60
@ 0x6008eb8

.arm
branch_6008eb8: @ 6008eb8 :arm
	bl      Function_6008ef8
	ldrh    r0, [r8, #0x12]
	bl      Function_6008fb8
	strh    r0, [r8, #0x14]
	ldrh    r0, [r8, #0x14]
	add     r0, r8, r0, lsl #3
	ldr     r0, [r0, #0xc0]
	mov     lr, pc
	bx      r0
@ 0x6008edc

.arm
Function_6008edc: @ 6008edc :arm
	strh    r9, [r8, #0x14]
	b       branch_6008e60
@ 0x6008ee4

.word 0x380fff4 @ 0x6008ee4
.word 0x1000010 @ 0x6008ee8
.word 0xffff @ 0x6008eec
.arm
Function_6008ef0: @ 6008ef0 :arm
	ldr     pc, [pc, #-0x4] @ [0x6008ef4] (=0x37f8984)
@ 0x6008ef4

.word 0x37f8984 @ 0x6008ef4
.arm
Function_6008ef8: @ 6008ef8 :arm
	ldr     pc, [pc, #-0x4] @ [0x6008efc] (=0x37f894c)
@ 0x6008efc

.word 0x37f894c @ 0x6008efc
.arm
Function_6008f00: @ 6008f00 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r2, [pc, #0xa4] @ [0x6008fb0] (=0x380fff4)
	mov     r7, r0
	ldr     r4, [r2]
	ldr     r0, [pc, #0x9c] @ [0x6008fb4] (=0x1000010)
	mov     r6, r1
	add     r5, r4, #0xbc
	bl      Function_6008ef0
	add     r2, r5, r6, lsl #3
	ldrh    r1, [r2, #0x2]
	mov     r12, r6, lsl #3
	cmp     r1, #0x0
	bne     branch_6008f78
	mov     r3, #0x1
	strh    r3, [r2, #0x2]
	rsb     r1, r3, #1, 16 @ #0x10000
	strh    r1, [r5, r12]
	add     r1, r4, r7, lsl #1
	ldrh    r2, [r1, #0x8]
	rsb     r1, r3, #1, 16 @ #0x10000
	cmp     r2, r1
	mov     r1, r7, lsl #1
	streqh  r6, [r4, r1]
	addne   r1, r4, r2, lsl #3
	strneh  r6, [r1, #0xbc]
	add     r1, r4, r7, lsl #1
	strh    r6, [r1, #0x8]
	ldrh    r1, [r4, #0x10]
	cmp     r7, r1
	strlth  r7, [r4, #0x10]
.arm
branch_6008f78: @ 6008f78 :arm
	bl      Function_6008ef8
	cmp     r7, #0x3
	beq     branch_6008fa8
	ldrh    r0, [r4, #0x12]
	cmp     r0, #0x3
	bne     branch_6008fa8
	ldr     r0, [pc, #0x18] @ [0x6008fb0] (=0x380fff4)
	mov     r1, #0x0
	ldr     r0, [r0]
	mov     r2, r1
	ldr     r0, [r0, #0x308]
	bl      Function_6000284
.arm
branch_6008fa8: @ 6008fa8 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6008fb0

.word 0x380fff4 @ 0x6008fb0
.word 0x1000010 @ 0x6008fb4
.arm
Function_6008fb8: @ 6008fb8 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0x60] @ [0x6009024] (=0x380fff4)
	mov     r5, r0
	ldr     r0, [pc, #0x5c] @ [0x6009028] (=0x1000010)
	ldr     r4, [r1]
	bl      Function_6008ef0
	mov     lr, r5, lsl #1
	ldrh    r5, [r4, lr]
	ldr     r2, [pc, #0x4c] @ [0x600902c] (=0xffff)
	cmp     r5, r2
	beq     branch_6009014
	add     r12, r4, #0xbc
	add     r1, r12, r5, lsl #3
	mov     r3, #0x0
	strh    r3, [r1, #0x2]
	mov     r3, r5, lsl #3
	ldrh    r1, [r12, r3]
	cmp     r1, r2
	streqh  r2, [r4, lr]
	addeq   r1, r4, lr
	streqh  r2, [r1, #0x8]
	strneh  r1, [r4, lr]
	strneh  r2, [r12, r3]
.arm
branch_6009014: @ 6009014 :arm
	bl      Function_6008ef8
	mov     r0, r5
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6009024

.word 0x380fff4 @ 0x6009024
.word 0x1000010 @ 0x6009028
.word 0xffff @ 0x600902c
.arm
Function_6009030: @ 6009030 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x2c] @ [0x6009068] (=0x380fff4)
	add     r1, sp, #0x0
	ldr     r0, [r0]
	mov     r2, #0x1
	ldr     r0, [r0, #0x308]
	bl      Function_600028c
	add     r0, sp, #0x0
	bl      Function_600906c
	mov     r0, #0x3
	mov     r1, #0xc
	bl      Function_6008f00
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6009068

.word 0x380fff4 @ 0x6009068
.arm
Function_600906c: @ 600906c :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [r0]
	cmp     r1, #0x0
	beq     branch_6009098
	ldr     r0, [pc, #0x1c] @ [0x60090a0] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #2, 24 @ #0x200
	bl      Function_600922c
	mov     r0, #0x2
	mov     r1, #0xb
	bl      Function_6008f00
.arm
branch_6009098: @ 6009098 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x60090a0

.word 0x380fff4 @ 0x60090a0
.arm
Function_60090a4: @ 60090a4 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r2, [pc, #0x88] @ [0x6009138] (=0x380fff4)
	movs    r3, r1
	ldr     r1, [r2]
	mov     r5, r0
	moveq   r0, #0x0
	beq     branch_6009130
	ldr     r0, [r1, #0x17c]
	cmp     r0, #0x0
	beq     branch_60090d8
	cmp     r0, #0x1
	beq     branch_60090f0
	b       branch_6009104
@ 0x60090d8

.arm
branch_60090d8: @ 60090d8 :arm
	ldr     r0, [r1, #0x180]
	ldr     r1, [r1, #0x184]
	add     r2, r3, #0xc
	bl      Function_6001cf8
	mov     r4, r0
	b       branch_6009104
@ 0x60090f0

.arm
branch_60090f0: @ 60090f0 :arm
	ldr     r1, [r1, #0x180]
	add     r0, r3, #0xc
	mov     lr, pc
	bx      r1
@ 0x6009100

.arm
Function_6009100: @ 6009100 :arm
	mov     r4, r0
.arm
branch_6009104: @ 6009104 :arm
	cmp     r4, #0x0
	moveq   r0, #0x0
	beq     branch_6009130
	ldr     r1, [pc, #0x24] @ [0x600913c] (=0xbf1d)
	mov     r0, r5
	strh    r1, [r4, #0xa]
	mov     r2, #0x0
	mov     r1, r4
	strh    r2, [r4, #0x8]
	bl      Function_600929c
	mov     r0, r4
.arm
branch_6009130: @ 6009130 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6009138

.word 0x380fff4 @ 0x6009138
.word 0xbf1d @ 0x600913c
.arm
Function_6009140: @ 6009140 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r4, r1
	ldr     r5, [pc, #0x68] @ [0x60091b8] (=0x380fff4)
	ldrh    r3, [r4, #0xa]
	ldr     r2, [pc, #0x64] @ [0x60091bc] (=0xbf1d)
	ldr     r5, [r5]
	cmp     r3, r2
	movne   r0, #0x1
	bne     branch_60091b0
	bl      Function_6009328
	movs    r6, r0
	bne     branch_60091ac
	ldr     r0, [r5, #0x17c]
	cmp     r0, #0x0
	beq     branch_6009188
	cmp     r0, #0x1
	beq     branch_600919c
	b       branch_60091ac
@ 0x6009188

.arm
branch_6009188: @ 6009188 :arm
	ldr     r0, [r5, #0x180]
	ldr     r1, [r5, #0x184]
	mov     r2, r4
	bl      Function_6001b30
	b       branch_60091ac
@ 0x600919c

.arm
branch_600919c: @ 600919c :arm
	ldr     r1, [r5, #0x184]
	mov     r0, r4
	mov     lr, pc
	bx      r1
@ 0x60091ac

.arm
branch_60091ac: @ 60091ac :arm
	mov     r0, r6
.arm
branch_60091b0: @ 60091b0 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x60091b8

.word 0x380fff4 @ 0x60091b8
.word 0xbf1d @ 0x60091bc
.arm
Function_60091c0: @ 60091c0 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r6, r2
	ldrh    r3, [r6, #0xa]
	ldr     r2, [pc, #0x54] @ [0x6009228] (=0xbf1d)
	mov     r4, r0
	cmp     r3, r2
	mov     r7, r1
	movne   r0, #0x1
	bne     branch_6009220
	mov     r0, #1, 8 @ #0x1000000
	bl      Function_6008ef0
	mov     r5, r0
	mov     r0, r4
	mov     r1, r6
	bl      Function_6009328
	movs    r4, r0
	bne     branch_6009214
	mov     r0, r7
	mov     r1, r6
	bl      Function_600929c
	mov     r4, r0
.arm
branch_6009214: @ 6009214 :arm
	mov     r0, r5
	bl      Function_6008ef8
	mov     r0, r4
.arm
branch_6009220: @ 6009220 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6009228

.word 0xbf1d @ 0x6009228
.arm
Function_600922c: @ 600922c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r0, #1, 8 @ #0x1000000
	mov     r4, r1
	bl      Function_6008ef0
	ldrh    r1, [r5, #0x8]
	cmp     r1, #0x0
	mvneq   r1, #0x0
	streq   r1, [r4]
	streq   r4, [r5]
	ldrne   r1, [r5, #0x4]
	strne   r1, [r4]
	strne   r4, [r1, #0x4]
	mvn     r1, #0x0
	str     r1, [r4, #0x4]
	ldrh    r2, [r5, #0xa]
	ldr     r1, [pc, #0x24] @ [0x6009298] (=0xbf1d)
	strh    r2, [r4, #0x8]
	strh    r1, [r4, #0xa]
	str     r4, [r5, #0x4]
	ldrh    r1, [r5, #0x8]
	add     r1, r1, #0x1
	strh    r1, [r5, #0x8]
	bl      Function_6008ef8
	mov     r0, #0x0
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6009298

.word 0xbf1d @ 0x6009298
.arm
Function_600929c: @ 600929c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r1
	ldrh    r2, [r4, #0xa]
	ldr     r1, [pc, #0x74] @ [0x6009324] (=0xbf1d)
	mov     r5, r0
	cmp     r2, r1
	movne   r0, #0x1
	bne     branch_600931c
	ldrh    r0, [r4, #0x8]
	cmp     r0, #0x0
	movne   r0, #0x2
	bne     branch_600931c
	mov     r0, #1, 8 @ #0x1000000
	bl      Function_6008ef0
	ldrh    r1, [r5, #0x8]
	cmp     r1, #0x0
	mvneq   r1, #0x0
	streq   r1, [r4]
	streq   r4, [r5]
	ldrne   r1, [r5, #0x4]
	strne   r1, [r4]
	strne   r4, [r1, #0x4]
	mvn     r1, #0x0
	str     r1, [r4, #0x4]
	ldrh    r1, [r5, #0xa]
	strh    r1, [r4, #0x8]
	str     r4, [r5, #0x4]
	ldrh    r1, [r5, #0x8]
	add     r1, r1, #0x1
	strh    r1, [r5, #0x8]
	bl      Function_6008ef8
	mov     r0, #0x0
.arm
branch_600931c: @ 600931c :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6009324

.word 0xbf1d @ 0x6009324
.arm
Function_6009328: @ 6009328 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r1
	ldrh    r2, [r4, #0xa]
	ldr     r1, [pc, #0xa8] @ [0x60093e4] (=0xbf1d)
	mov     r5, r0
	cmp     r2, r1
	movne   r0, #0x1
	bne     branch_60093dc
	ldrh    r1, [r4, #0x8]
	ldrh    r0, [r5, #0xa]
	cmp     r1, r0
	movne   r0, #0x2
	bne     branch_60093dc
	mov     r0, #1, 8 @ #0x1000000
	bl      Function_6008ef0
	ldrh    r1, [r5, #0x8]
	sub     r1, r1, #0x1
	strh    r1, [r5, #0x8]
	ldrh    r1, [r5, #0x8]
	cmp     r1, #0x0
	mvneq   r1, #0x0
	streq   r1, [r5]
	streq   r1, [r5, #0x4]
	beq     branch_60093cc
	ldr     r1, [r5]
	cmp     r4, r1
	ldreq   r2, [r4, #0x4]
	mvneq   r1, #0x0
	streq   r2, [r5]
	streq   r1, [r2]
	beq     branch_60093cc
	ldr     r1, [r5, #0x4]
	ldr     r2, [r4]
	cmp     r4, r1
	streq   r2, [r5, #0x4]
	mvneq   r1, #0x0
	streq   r1, [r2, #0x4]
	ldrne   r1, [r4, #0x4]
	strne   r2, [r1]
	ldmneia r4, {r1,r2}
	strne   r2, [r1, #0x4]
.arm
branch_60093cc: @ 60093cc :arm
	mov     r1, #0x0
	strh    r1, [r4, #0x8]
	bl      Function_6008ef8
	mov     r0, #0x0
.arm
branch_60093dc: @ 60093dc :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x60093e4

.word 0xbf1d @ 0x60093e4
.arm
Function_60093e8: @ 60093e8 :arm
	ldr     r0, [r0, #0x4]
	bx      lr
@ 0x60093f0

.arm
Function_60093f0: @ 60093f0 :arm
	mvn     r2, #0x0
	str     r2, [r0]
	str     r2, [r0, #0x4]
	mov     r2, #0x0
	strh    r2, [r0, #0x8]
	strh    r1, [r0, #0xa]
	bx      lr
@ 0x600940c

.arm
Function_600940c: @ 600940c :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0xc8] @ [0x60094e0] (=0x380fff4)
	ldr     r2, [r0]
	ldr     r4, [r1]
	mov     r1, #0x2
	str     r2, [r4, #0x17c]
	ldr     r2, [r0, #0x4]
	add     r5, r4, #209, 30 @ #0x344
	str     r2, [r4, #0x180]
	ldr     r2, [r0, #0x8]
	add     r0, r4, #98, 30 @ #0x188
	str     r2, [r4, #0x184]
	bl      Function_60093f0
	add     r0, r4, #101, 30 @ #0x194
	mov     r1, #0x3
	bl      Function_60093f0
	add     r0, r4, #26, 28 @ #0x1a0
	mov     r1, #0x4
	bl      Function_60093f0
	add     r0, r4, #107, 30 @ #0x1ac
	mov     r1, #0x5
	bl      Function_60093f0
	add     r0, r4, #110, 30 @ #0x1b8
	mov     r1, #0x6
	bl      Function_60093f0
	add     r0, r4, #113, 30 @ #0x1c4
	mov     r1, #0x7
	bl      Function_60093f0
	add     r0, r4, #29, 28 @ #0x1d0
	mov     r1, #0x8
	bl      Function_60093f0
	add     r0, r4, #119, 30 @ #0x1dc
	mov     r1, #0x9
	bl      Function_60093f0
	add     r0, r4, #122, 30 @ #0x1e8
	mov     r1, #0xa
	bl      Function_60093f0
	add     r0, r4, #125, 30 @ #0x1f4
	mov     r1, #0xb
	bl      Function_60093f0
	add     r0, r4, #2, 24 @ #0x200
	mov     r1, #0xc
	bl      Function_60093f0
	add     r0, r4, #98, 30 @ #0x188
	mov     r1, #0x81
	bl      Function_60090a4
	add     r0, r0, #0xc
	str     r0, [r5, #0x9c]
	mov     r0, #0x0
	strh    r0, [r5, #0xa0]
	strh    r0, [r5, #0xa4]
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x60094e0

.word 0x380fff4 @ 0x60094e0
.arm
Function_60094e4: @ 60094e4 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x48] @ [0x6009538] (=0x380fff4)
	ldr     r4, [r0]
	add     r0, r4, #101, 30 @ #0x194
	bl      Function_600953c
	add     r0, r4, #26, 28 @ #0x1a0
	bl      Function_600953c
	add     r0, r4, #107, 30 @ #0x1ac
	bl      Function_600953c
	add     r0, r4, #110, 30 @ #0x1b8
	bl      Function_600953c
	add     r0, r4, #113, 30 @ #0x1c4
	bl      Function_600953c
	add     r0, r4, #29, 28 @ #0x1d0
	bl      Function_600953c
	add     r0, r4, #119, 30 @ #0x1dc
	bl      Function_600953c
	add     r0, r4, #122, 30 @ #0x1e8
	bl      Function_600953c
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6009538

.word 0x380fff4 @ 0x6009538
.arm
Function_600953c: @ 600953c :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrh    r0, [r6, #0x8]
	ldr     r1, [r6]
	cmp     r0, #0x0
	beq     branch_6009574
	mvn     r4, #0x0
	b       branch_600956c
@ 0x600955c

.arm
branch_600955c: @ 600955c :arm
	ldr     r5, [r1, #0x4]
	mov     r0, r6
	bl      Function_6009140
	mov     r1, r5
.arm
branch_600956c: @ 600956c :arm
	cmp     r1, r4
	bne     branch_600955c
.arm
branch_6009574: @ 6009574 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600957c

.arm
Function_600957c: @ 600957c :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [pc, #0x70] @ [0x60095f8] (=0x380fff4)
	mov     r5, r0
	ldr     r3, [r2]
	mov     r6, r1
	add     r1, r3, #199, 30 @ #0x31c
	mov     r0, #0x0
	mov     r2, #0x28
	ldr     r4, [r3, #0x3e0]
	bl      Function_6000598
	ldr     r1, [pc, #0x4c] @ [0x60095f8] (=0x380fff4)
	mov     r0, #0x0
	ldr     r1, [r1]
	mov     r2, #0xc0
	add     r1, r1, #209, 30 @ #0x344
	bl      Function_6000598
	ldr     r3, [pc, #0x34] @ [0x60095f8] (=0x380fff4)
	mov     r0, r6, lsl #16
	ldr     r2, [r3]
	mov     r1, r0, lsr #16
	str     r5, [r2, #0x31c]
	ldr     r0, [r3]
	add     r0, r0, #3, 24 @ #0x300
	strh    r1, [r0, #0x20]
	ldr     r0, [r3]
	add     r0, r0, #3, 24 @ #0x300
	strh    r1, [r0, #0x22]
	ldr     r0, [r3]
	str     r4, [r0, #0x3e0]
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x60095f8

.word 0x380fff4 @ 0x60095f8
.arm
Function_60095fc: @ 60095fc :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldrh    r0, [r4]
	tst     r0, #0x1
	movne   r0, #0x5
	bne     branch_600964c
	ldr     r0, [pc, #0x38] @ [0x6009654] (=0x380fff4)
	mov     r1, r4
	ldr     r0, [r0]
	add     r0, r0, #201, 30 @ #0x324
	bl      Function_600a924
	ldr     r0, [pc, #0x28] @ [0x6009658] (=0x4808018)
	mov     r1, r4
	bl      Function_600a924
	ldr     r1, [pc, #0x18] @ [0x6009654] (=0x380fff4)
	mov     r0, #0x0
	ldr     r2, [r1]
	ldr     r1, [r2, #0x340]
	orr     r1, r1, #0x2
	str     r1, [r2, #0x340]
.arm
branch_600964c: @ 600964c :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6009654

.word 0x380fff4 @ 0x6009654
.word 0x4808018 @ 0x6009658
.arm
Function_600965c: @ 600965c :arm
	cmp     r0, #0xff
	movhi   r0, #0x5
	bxhi    lr
	ldr     r1, [pc, #0x18] @ [0x6009688] (=0x380fff4)
	ldr     r2, [pc, #0x18] @ [0x600968c] (=0x480802c)
	ldr     r1, [r1]
	add     r1, r1, #3, 24 @ #0x300
	strh    r0, [r1, #0x2a]
	strh    r0, [r2]
	mov     r0, #0x0
	bx      lr
@ 0x6009688

.word 0x380fff4 @ 0x6009688
.word 0x480802c @ 0x600968c
.arm
Function_6009690: @ 6009690 :arm
	ldr     r1, [pc, #0x30] @ [0x60096c8] (=0x7ffe)
	tst     r0, r1
	moveq   r0, #0x5
	bxeq    lr
	ldr     r2, [pc, #0x24] @ [0x60096cc] (=0x380fff4)
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	strh    r0, [r1, #0x2c]
	ldr     r2, [r2]
	mov     r0, #0x0
	ldr     r1, [r2, #0x340]
	orr     r1, r1, #0x4
	str     r1, [r2, #0x340]
	bx      lr
@ 0x60096c8

.word 0x7ffe @ 0x60096c8
.word 0x380fff4 @ 0x60096cc
.arm
Function_60096d0: @ 60096d0 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x3
	movhi   r0, #0x5
	bhi     branch_600973c
	ldr     r12, [pc, #0x5c] @ [0x6009744] (=0x380fff4)
	ldr     r3, [pc, #0x5c] @ [0x6009748] (=0x4808006)
	ldr     r1, [r12]
	ldr     r2, [pc, #0x58] @ [0x600974c] (=0xfff8)
	add     r1, r1, #3, 24 @ #0x300
	strh    r0, [r1, #0x2e]
	ldr     r1, [r12]
	add     r1, r1, #3, 24 @ #0x300
	strh    r0, [r1, #0x50]
	ldrh    r1, [r3]
	and     r1, r1, r2
	orr     r0, r1, r0
	strh    r0, [r3]
	ldr     r0, [r12]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x52]
	bl      Function_600a3ec
	ldr     r1, [pc, #0x18] @ [0x6009744] (=0x380fff4)
	mov     r0, #0x0
	ldr     r2, [r1]
	ldr     r1, [r2, #0x340]
	orr     r1, r1, #0x8
	str     r1, [r2, #0x340]
.arm
branch_600973c: @ 600973c :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6009744

.word 0x380fff4 @ 0x6009744
.word 0x4808006 @ 0x6009748
.word 0xfff8 @ 0x600974c
.arm
Function_6009750: @ 6009750 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x2
	movhi   r0, #0x5
	bhi     branch_6009778
	ldr     r1, [pc, #0x18] @ [0x6009780] (=0x380fff4)
	ldr     r1, [r1]
	add     r1, r1, #3, 24 @ #0x300
	strh    r0, [r1, #0x30]
	bl      Function_600a36c
	mov     r0, #0x0
.arm
branch_6009778: @ 6009778 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6009780

.word 0x380fff4 @ 0x6009780
.arm
Function_6009784: @ 6009784 :arm
	ldr     r1, [pc, #0x8c] @ [0x6009818] (=0x380fff4)
	cmp     r0, #0x3
	ldr     r1, [r1]
	movhi   r0, #0x5
	add     r2, r1, #209, 30 @ #0x344
	bxhi    lr
	add     r1, r1, #3, 24 @ #0x300
	strh    r0, [r1, #0x34]
	ldrh    r1, [r2, #0x7c]
	cmp     r0, #0x0
	biceq   r1, r1, #0x10
	streqh  r1, [r2, #0x7c]
	ldreqh  r1, [r2, #0x8a]
	ldr     r3, [pc, #0x5c] @ [0x600981c] (=0x4808006)
	biceq   r1, r1, #1, 18 @ #0x4000
	orrne   r1, r1, #0x10
	strneh  r1, [r2, #0x7c]
	ldrneh  r1, [r2, #0x8a]
	orrne   r1, r1, #1, 18 @ #0x4000
	strh    r1, [r2, #0x8a]
	ldrh    r1, [r2, #0x8]
	cmp     r1, #0x40
	cmpeq   r0, #0x1
	ldreq   r1, [pc, #0x30] @ [0x6009818] (=0x380fff4)
	ldreqh  r2, [r2, #0x7c]
	ldreq   r1, [r1]
	ldreq   r1, [r1, #0x4ac]
	streqh  r2, [r1, #0x2e]
	cmp     r0, #0x0
	ldr     r1, [pc, #0x20] @ [0x6009820] (=0xffc7)
	ldrh    r2, [r3]
	moveq   r0, #0x1
	and     r1, r2, r1
	orr     r0, r1, r0, lsl #3
	strh    r0, [r3]
	mov     r0, #0x0
	bx      lr
@ 0x6009818

.word 0x380fff4 @ 0x6009818
.word 0x4808006 @ 0x600981c
.word 0xffc7 @ 0x6009820
.arm
Function_6009824: @ 6009824 :arm
	cmp     r0, #0x3
	ldrls   r1, [pc, #0x14] @ [0x6009844] (=0x380fff4)
	movhi   r0, #0x5
	ldrls   r1, [r1]
	addls   r1, r1, #3, 24 @ #0x300
	strlsh  r0, [r1, #0x36]
	movls   r0, #0x0
	bx      lr
@ 0x6009844

.word 0x380fff4 @ 0x6009844
.arm
Function_6009848: @ 6009848 :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [pc, #0x44] @ [0x6009898] (=0x4805f80)
	mov     r2, #0x14
	mov     r4, r0
	bl      Function_6001ae0
	ldr     r1, [pc, #0x38] @ [0x600989c] (=0x4805fa0)
	add     r0, r4, #0x14
	mov     r2, #0x14
	bl      Function_6001ae0
	ldr     r1, [pc, #0x2c] @ [0x60098a0] (=0x4805fc0)
	add     r0, r4, #0x28
	mov     r2, #0x14
	bl      Function_6001ae0
	ldr     r1, [pc, #0x20] @ [0x60098a4] (=0x4805fe0)
	add     r0, r4, #0x3c
	mov     r2, #0x14
	bl      Function_6001ae0
	mov     r0, #0x0
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6009898

.word 0x4805f80 @ 0x6009898
.word 0x4805fa0 @ 0x600989c
.word 0x4805fc0 @ 0x60098a0
.word 0x4805fe0 @ 0x60098a4
.arm
Function_60098a8: @ 60098a8 :arm
	cmp     r0, #0x1
	movhi   r0, #0x5
	bxhi    lr
	ldr     r1, [pc, #0x20] @ [0x60098dc] (=0x380fff4)
	and     r2, r0, #0x1
	ldr     r1, [r1]
	mov     r0, #0x0
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r3, [r1, #0x3a]
	bic     r3, r3, #0x1
	orr     r2, r3, r2
	strh    r2, [r1, #0x3a]
	bx      lr
@ 0x60098dc

.word 0x380fff4 @ 0x60098dc
.arm
Function_60098e0: @ 60098e0 :arm
	cmp     r0, #0x1
	movhi   r0, #0x5
	bxhi    lr
	ldr     r1, [pc, #0x20] @ [0x6009914] (=0x380fff4)
	mov     r2, r0, lsl #31
	ldr     r1, [r1]
	mov     r0, #0x0
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r3, [r1, #0x3a]
	bic     r3, r3, #0x2
	orr     r2, r3, r2, lsr #30
	strh    r2, [r1, #0x3a]
	bx      lr
@ 0x6009914

.word 0x380fff4 @ 0x6009914
.arm
Function_6009918: @ 6009918 :arm
	cmp     r0, #0xff
	movhi   r0, #0x5
	bxhi    lr
	ldr     r2, [pc, #0x20] @ [0x600994c] (=0x380fff4)
	mov     r3, #0x0
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	strh    r3, [r1, #0xc4]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	strh    r0, [r1, #0xc2]
	mov     r0, r3
	bx      lr
@ 0x600994c

.word 0x380fff4 @ 0x600994c
.arm
Function_6009950: @ 6009950 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	cmp     r4, #0xa
	movcc   r0, #0x5
	bcc     branch_60099f0
	ldr     r0, [pc, #0x8c] @ [0x60099f8] (=0x380fff4)
	cmp     r1, #0x0
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	strh    r4, [r0, #0x3c]
	ldrne   r0, [pc, #0x7c] @ [0x60099fc] (=0x4808134)
	strneh  r4, [r0]
	ldr     r0, [pc, #0x70] @ [0x60099f8] (=0x380fff4)
	ldr     r1, [r0]
	add     r0, r1, #1, 22 @ #0x400
	ldrh    r0, [r0, #0xa4]
	cmp     r0, #0x0
	beq     branch_60099ec
	ldr     r2, [r1, #0x4ac]
	add     r0, r1, #3, 24 @ #0x300
	ldrh    r1, [r0, #0x52]
	ldrh    r0, [r0, #0xda]
	add     r2, r2, #0x24
	add     r5, r2, r0
	cmp     r1, #0x1
	add     r0, r5, #0x6
	bne     branch_60099d8
	and     r1, r4, #0xff
	bl      Function_600b9e0
	mov     r1, r4, asr #8
	add     r0, r5, #0x7
	and     r1, r1, #0xff
	bl      Function_600b9e0
	b       branch_60099ec
@ 0x60099d8

.arm
branch_60099d8: @ 60099d8 :arm
	mov     r1, #0xff
	bl      Function_600b9e0
	add     r0, r5, #0x7
	mov     r1, #0xff
	bl      Function_600b9e0
.arm
branch_60099ec: @ 60099ec :arm
	mov     r0, #0x0
.arm
branch_60099f0: @ 60099f0 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x60099f8

.word 0x380fff4 @ 0x60099f8
.word 0x4808134 @ 0x60099fc
.arm
Function_6009a00: @ 6009a00 :arm
	ldr     r1, [pc, #0x24] @ [0x6009a2c] (=0x380fff4)
	mov     r2, #0x0
	ldr     r1, [r1]
	add     r3, r1, #225, 30 @ #0x384
.arm
branch_6009a10: @ 6009a10 :arm
	ldrh    r1, [r0], #0x2
	add     r2, r2, #0x1
	cmp     r2, #0x10
	strh    r1, [r3], #0x2
	bcc     branch_6009a10
	mov     r0, #0x0
	bx      lr
@ 0x6009a2c

.word 0x380fff4 @ 0x6009a2c
.arm
Function_6009a30: @ 6009a30 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x94] @ [0x6009ad0] (=0x380fff4)
	cmp     r0, #0x1
	ldr     r2, [r1]
	movhi   r0, #0x5
	add     r1, r2, #209, 30 @ #0x344
	bhi     branch_6009ac8
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r12, [r2, #0x3a]
	mov     r3, r0, lsl #31
	bic     r12, r12, #0x4
	orr     r3, r12, r3, lsr #29
	strh    r3, [r2, #0x3a]
	ldrh    r2, [r1, #0x7c]
	cmp     r0, #0x0
	biceq   r2, r2, #0x20
	orrne   r2, r2, #0x20
	strh    r2, [r1, #0x7c]
	ldrh    r2, [r1, #0x8]
	cmp     r2, #0x40
	ldreq   r2, [pc, #0x48] @ [0x6009ad0] (=0x380fff4)
	ldreq   r3, [r2]
	addeq   r2, r3, #3, 24 @ #0x300
	ldreqh  r2, [r2, #0x2e]
	cmpeq   r2, #0x1
	ldreqh  r2, [r1, #0x7c]
	ldreq   r1, [r3, #0x4ac]
	streqh  r2, [r1, #0x2e]
	ldr     r1, [pc, #0x2c] @ [0x6009ad4] (=0x48080bc)
	cmp     r0, #0x0
	ldreqh  r0, [r1]
	biceq   r0, r0, #0x6
	streqh  r0, [r1]
	ldrneh  r0, [r1]
	orrne   r0, r0, #0x6
	strneh  r0, [r1]
	bl      Function_600a36c
	mov     r0, #0x0
.arm
branch_6009ac8: @ 6009ac8 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6009ad0

.word 0x380fff4 @ 0x6009ad0
.word 0x48080bc @ 0x6009ad4
.arm
Function_6009ad8: @ 6009ad8 :arm
	cmp     r0, #0x1
	ldrls   r1, [pc, #0x14] @ [0x6009af8] (=0x380fff4)
	movhi   r0, #0x5
	ldrls   r1, [r1]
	addls   r1, r1, #3, 24 @ #0x300
	strlsh  r0, [r1, #0x32]
	movls   r0, #0x0
	bx      lr
@ 0x6009af8

.word 0x380fff4 @ 0x6009af8
.arm
Function_6009afc: @ 6009afc :arm
	stmfd   sp!, {r4,lr}
	cmp     r0, #0x3
	mov     r4, r1
	movhi   r0, #0x5
	bhi     branch_6009b38
	cmp     r4, #0x3f
	movhi   r0, #0x5
	bhi     branch_6009b38
	mov     r1, r0
	mov     r0, #0x13
	bl      Function_600b29c
	mov     r1, r4
	mov     r0, #0x35
	bl      Function_600b29c
	mov     r0, #0x0
.arm
branch_6009b38: @ 6009b38 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6009b40

.arm
Function_6009b40: @ 6009b40 :arm
	cmp     r0, #0x1
	movhi   r0, #0x5
	bxhi    lr
	ldr     r3, [pc, #0x4c] @ [0x6009ba0] (=0x380fff4)
	mov     r0, r0, lsl #16
	ldr     r2, [r3]
	mov     r1, r0, lsr #16
	add     r0, r2, #3, 24 @ #0x300
	ldrh    r2, [r0, #0x3a]
	mov     r1, r1, lsl #31
	bic     r2, r2, #0x8
	orr     r1, r2, r1, lsr #28
	strh    r1, [r0, #0x3a]
	ldr     r0, [r3]
	ldr     r1, [pc, #0x24] @ [0x6009ba4] (=0x4808290)
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r3, [r0, #0x3a]
	mov     r0, #0x0
	mov     r2, r3, lsl #28
	mov     r3, r3, lsl #26
	mov     r2, r2, lsr #31
	eor     r2, r2, r3, lsr #31
	strh    r2, [r1]
	bx      lr
@ 0x6009ba0

.word 0x380fff4 @ 0x6009ba0
.word 0x4808290 @ 0x6009ba4
.arm
Function_6009ba8: @ 6009ba8 :arm
	cmp     r0, #0x1
	cmpls   r1, #0x1
	movhi   r0, #0x5
	bxhi    lr
	cmp     r0, #0x0
	beq     branch_6009bcc
	cmp     r0, #0x1
	beq     branch_6009bf8
	b       branch_6009c20
@ 0x6009bcc

.arm
branch_6009bcc: @ 6009bcc :arm
	ldr     r2, [pc, #0xa0] @ [0x6009c74] (=0x380fff4)
	mov     r1, r1, lsl #16
	ldr     r3, [r2]
	mov     r2, r1, lsr #16
	add     r1, r3, #3, 24 @ #0x300
	ldrh    r3, [r1, #0x3a]
	mov     r2, r2, lsl #31
	bic     r3, r3, #0x20
	orr     r2, r3, r2, lsr #26
	strh    r2, [r1, #0x3a]
	b       branch_6009c20
@ 0x6009bf8

.arm
branch_6009bf8: @ 6009bf8 :arm
	ldr     r1, [pc, #0x74] @ [0x6009c74] (=0x380fff4)
	ldr     r1, [r1]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r2, [r1, #0x2e]
	cmp     r2, #0x1
	movne   r0, #0xb
	bxne    lr
	ldrh    r2, [r1, #0x3a]
	bic     r2, r2, #0x20
	strh    r2, [r1, #0x3a]
.arm
branch_6009c20: @ 6009c20 :arm
	ldr     r3, [pc, #0x4c] @ [0x6009c74] (=0x380fff4)
	mov     r0, r0, lsl #16
	ldr     r2, [r3]
	mov     r1, r0, lsr #16
	add     r0, r2, #3, 24 @ #0x300
	ldrh    r2, [r0, #0x3a]
	mov     r1, r1, lsl #31
	bic     r2, r2, #0x10
	orr     r1, r2, r1, lsr #27
	strh    r1, [r0, #0x3a]
	ldr     r0, [r3]
	ldr     r1, [pc, #0x24] @ [0x6009c78] (=0x4808290)
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r3, [r0, #0x3a]
	mov     r0, #0x0
	mov     r2, r3, lsl #28
	mov     r3, r3, lsl #26
	mov     r2, r2, lsr #31
	eor     r2, r2, r3, lsr #31
	strh    r2, [r1]
	bx      lr
@ 0x6009c74

.word 0x380fff4 @ 0x6009c74
.word 0x4808290 @ 0x6009c78
.arm
Function_6009c7c: @ 6009c7c :arm
	cmp     r0, #0x1
	movhi   r0, #0x5
	bxhi    lr
	ldr     r1, [pc, #0x28] @ [0x6009cb8] (=0x380fff4)
	mov     r0, r0, lsl #16
	ldr     r2, [r1]
	mov     r1, r0, lsr #16
	add     r0, r2, #3, 24 @ #0x300
	ldrh    r2, [r0, #0x3a]
	mov     r1, r1, lsl #31
	bic     r2, r2, #0x40
	orr     r1, r2, r1, lsr #25
	strh    r1, [r0, #0x3a]
	mov     r0, #0x0
	bx      lr
@ 0x6009cb8

.word 0x380fff4 @ 0x6009cb8
.arm
Function_6009cbc: @ 6009cbc :arm
	cmp     r0, #0x1
	movhi   r0, #0x5
	bxhi    lr
	ldr     r2, [pc, #0x34] @ [0x6009d04] (=0x380fff4)
	mov     r1, r0, lsl #16
	ldr     r3, [r2]
	mov     r2, r1, lsr #16
	add     r1, r3, #3, 24 @ #0x300
	ldrh    r3, [r1, #0x3a]
	mov     r2, r2, lsl #31
	bic     r3, r3, #0x80
	orr     r2, r3, r2, lsr #24
	strh    r2, [r1, #0x3a]
	ldreq   r1, [pc, #0x10] @ [0x6009d08] (=0x480802a)
	ldreqh  r0, [r1]
	streqh  r0, [r1, #-0x2]
	mov     r0, #0x0
	bx      lr
@ 0x6009d04

.word 0x380fff4 @ 0x6009d04
.word 0x480802a @ 0x6009d08
.arm
Function_6009d0c: @ 6009d0c :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [pc, #0x4c] @ [0x6009d64] (=0x380fff4)
	mov     r4, r0
	ldr     r0, [r1]
	mov     r1, r4
	add     r0, r0, #234, 30 @ #0x3a8
	bl      Function_600a924
	ldr     r0, [pc, #0x38] @ [0x6009d68] (=0x4808020)
	mov     r1, r4
	bl      Function_600a924
	ldrh    r0, [r4]
	ldr     r1, [pc, #0x2c] @ [0x6009d6c] (=0x48080d0)
	tst     r0, #0x1
	ldrneh  r0, [r1]
	bicne   r0, r0, #1, 22 @ #0x400
	strneh  r0, [r1]
	ldreqh  r0, [r1]
	orreq   r0, r0, #1, 22 @ #0x400
	streqh  r0, [r1]
	mov     r0, #0x0
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6009d64

.word 0x380fff4 @ 0x6009d64
.word 0x4808020 @ 0x6009d68
.word 0x48080d0 @ 0x6009d6c
.arm
Function_6009d70: @ 6009d70 :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r2, [pc, #0x100] @ [0x6009e7c] (=0x380fff4)
	mov     r8, r0
	ldr     r2, [r2]
	cmp     r8, #0x20
	mov     r7, r1
	add     r4, r2, #209, 30 @ #0x344
	mov     r6, #0x0
	movhi   r0, #0x5
	bhi     branch_6009e74
	ldrh    r0, [r4, #0x8]
	cmp     r0, #0x40
	addeq   r0, r2, #3, 24 @ #0x300
	ldreqh  r0, [r0, #0x2e]
	cmpeq   r0, #0x1
	bne     branch_6009dcc
	ldrh    r0, [r4, #0x1e]
	cmp     r0, r8
	movne   r0, #0x6
	bne     branch_6009e74
	ldrh    r0, [r4, #0x92]
	cmp     r0, #0x0
	movne   r6, #0x1
.arm
branch_6009dcc: @ 6009dcc :arm
	mov     r5, #0x0
	add     r9, r4, #0x20
	b       branch_6009df4
@ 0x6009dd8

.arm
branch_6009dd8: @ 6009dd8 :arm
	mov     r0, r7
	bl      Function_600ba0c
	mov     r1, r0
	add     r0, r9, r5
	bl      Function_600b9e0
	add     r7, r7, #0x1
	add     r5, r5, #0x1
.arm
branch_6009df4: @ 6009df4 :arm
	cmp     r5, r8
	bcc     branch_6009dd8
	add     r9, r4, #0x20
	mov     r7, #0x0
	b       branch_6009e18
@ 0x6009e08

.arm
branch_6009e08: @ 6009e08 :arm
	mov     r1, r7
	add     r0, r9, r5
	bl      Function_600b9e0
	add     r5, r5, #0x1
.arm
branch_6009e18: @ 6009e18 :arm
	cmp     r5, #0x20
	bcc     branch_6009e08
	strh    r8, [r4, #0x1e]
	cmp     r6, #0x0
	beq     branch_6009e70
	ldr     r1, [pc, #0x48] @ [0x6009e7c] (=0x380fff4)
	ldrh    r0, [r4, #0x92]
	ldr     r1, [r1]
	mov     r5, #0x0
	ldr     r1, [r1, #0x4ac]
	add     r4, r4, #0x20
	add     r1, r1, #0x26
	add     r6, r1, r0
	b       branch_6009e68
@ 0x6009e50

.arm
branch_6009e50: @ 6009e50 :arm
	add     r0, r4, r5
	bl      Function_600ba0c
	mov     r1, r0
	add     r0, r6, r5
	bl      Function_600b9e0
	add     r5, r5, #0x1
.arm
branch_6009e68: @ 6009e68 :arm
	cmp     r5, r8
	bcc     branch_6009e50
.arm
branch_6009e70: @ 6009e70 :arm
	mov     r0, #0x0
.arm
branch_6009e74: @ 6009e74 :arm
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x6009e7c

.word 0x380fff4 @ 0x6009e7c
.arm
Function_6009e80: @ 6009e80 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0xa
	bcc     branch_6009e94
	cmp     r0, #250, 30 @ #0x3e8
	bls     branch_6009e9c
.arm
branch_6009e94: @ 6009e94 :arm
	mov     r0, #0x5
	b       branch_6009ec8
@ 0x6009e9c

.arm
branch_6009e9c: @ 6009e9c :arm
	ldr     r3, [pc, #0x2c] @ [0x6009ed0] (=0x380fff4)
	ldr     r2, [pc, #0x2c] @ [0x6009ed4] (=0x480808c)
	ldr     r1, [r3]
	add     r1, r1, #3, 24 @ #0x300
	strh    r0, [r1, #0xb2]
	strh    r0, [r2]
	ldr     r0, [r3]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x38]
	bl      Function_600a5d0
	mov     r0, #0x0
.arm
branch_6009ec8: @ 6009ec8 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6009ed0

.word 0x380fff4 @ 0x6009ed0
.word 0x480808c @ 0x6009ed4
.arm
Function_6009ed8: @ 6009ed8 :arm
	cmp     r0, #0x1
	bcc     branch_6009ee8
	cmp     r0, #0xff
	bls     branch_6009ef0
.arm
branch_6009ee8: @ 6009ee8 :arm
	mov     r0, #0x5
	bx      lr
@ 0x6009ef0

.arm
branch_6009ef0: @ 6009ef0 :arm
	ldr     r1, [pc, #0x1c] @ [0x6009f14] (=0x380fff4)
	ldr     r2, [pc, #0x1c] @ [0x6009f18] (=0x480808e)
	ldr     r1, [r1]
	add     r1, r1, #3, 24 @ #0x300
	strh    r0, [r1, #0xb8]
	strh    r0, [r2]
	mov     r0, #0x0
	strh    r0, [r2, #-0x6]
	bx      lr
@ 0x6009f14

.word 0x380fff4 @ 0x6009f14
.word 0x480808e @ 0x6009f18
.arm
Function_6009f1c: @ 6009f1c :arm
	cmp     r0, #0x1
	bcc     branch_6009f2c
	cmp     r0, #0xff
	bls     branch_6009f34
.arm
branch_6009f2c: @ 6009f2c :arm
	mov     r0, #0x5
	bx      lr
@ 0x6009f34

.arm
branch_6009f34: @ 6009f34 :arm
	ldr     r1, [pc, #0x10] @ [0x6009f4c] (=0x380fff4)
	ldr     r1, [r1]
	add     r1, r1, #3, 24 @ #0x300
	strh    r0, [r1, #0xb4]
	mov     r0, #0x0
	bx      lr
@ 0x6009f4c

.word 0x380fff4 @ 0x6009f4c
.arm
Function_6009f50: @ 6009f50 :arm
	stmfd   sp!, {r3,lr}
	sub     sp, sp, #0x8
	add     r2, sp, #0x2
	mov     r0, #0x36
	mov     r1, #0x6
	bl      Function_6017ff8
	add     r2, sp, #0x0
	mov     r0, #0x3c
	mov     r1, #0x2
	bl      Function_6017ff8
	add     r0, sp, #0x2
	bl      Function_60095fc
	mov     r0, #0x7
	bl      Function_600965c
	ldrh    r1, [sp]
	ldr     r0, [pc, #0xf0] @ [0x600a084] (=0x7ffe)
	and     r0, r1, r0
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_6009690
	mov     r0, #0x2
	bl      Function_60096d0
	mov     r0, #0x0
	bl      Function_6009750
	mov     r0, #0x0
	bl      Function_6009784
	mov     r0, #0x0
	bl      Function_6009824
	ldr     r0, [pc, #0xc0] @ [0x600a088] (=0x6018328)
	bl      Function_6009848
	mov     r0, #125, 30 @ #0x1f4
	bl      Function_6009e80
	mov     r0, #0x0
	bl      Function_60098a8
	mov     r0, #0x0
	bl      Function_60098e0
	mov     r0, #0x10
	bl      Function_6009918
	ldr     r0, [pc, #0x9c] @ [0x600a08c] (=0xffff)
	mov     r1, #0x0
	bl      Function_6009950
	ldr     r0, [pc, #0x94] @ [0x600a090] (=0x60182c8)
	bl      Function_6009a00
	mov     r0, #0x1
	bl      Function_6009a30
	mov     r0, #0x0
	bl      Function_6009ad8
	ldr     r0, [pc, #0x80] @ [0x600a094] (=Unknown_60182c4)
	bl      Function_600a32c
	mov     r0, #0x0
	mov     r1, #0x1f
	bl      Function_6009afc
	mov     r0, #0x5
	bl      Function_600a5d0
	mov     r0, #0x0
	mov     r1, r0
	bl      Function_6009ba8
	mov     r0, #0x0
	bl      Function_6009b40
	mov     r0, #0x0
	bl      Function_6009c7c
	mov     r0, #0x0
	bl      Function_6009cbc
	ldr     r1, [pc, #0x44] @ [0x600a098] (=0x4808044)
	ldrh    r2, [r1]
	ldrh    r0, [r1]
	ldrh    r1, [r1]
	add     r0, r2, r0, lsl #8
	bl      Function_600ba28
	ldr     r0, [pc, #0x30] @ [0x600a09c] (=0x380fff4)
	mov     r1, #0x1
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	strh    r1, [r0, #0x58]
	add     sp, sp, #0x8
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600a084

.word 0x7ffe @ 0x600a084
.word 0x6018328 @ 0x600a088
.word 0xffff @ 0x600a08c
.word 0x60182c8 @ 0x600a090
.word Unknown_60182c4 @ 0x600a094
.word 0x4808044 @ 0x600a098
.word 0x380fff4 @ 0x600a09c



.arm
Function_600a0a0: @ 600a0a0 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x8
	mov     r10, r0
	ldr     r0, [pc, #0x268] @ [0x600a31c] (=0x380fff4)
	cmp     r1, #0x0
	ldr     r0, [r0]
	ldrne   r9, [pc, #0x260] @ [0x600a320] (=0x6018058)
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x2c]
	ldreq   r9, [pc, #0x258] @ [0x600a324] (=0x6017ff8)
	mov     r2, #0x1
	tst     r0, r2, lsl r10
	moveq   r0, #0x5
	beq     branch_600a310
	ldr     r1, [pc, #0x248] @ [0x600a328] (=0x4808040)
	add     r0, r2, #2, 18 @ #0x8000
	ldrh    r6, [r1]
	strh    r0, [r1]
	sub     r3, r1, #0x4
	add     r1, r1, #117, 30 @ #0x1d4
.arm
branch_600a0f0: @ 600a0f0 :arm
	ldrh    r2, [r3]
	ldrh    r0, [r1]
	mov     r2, r2, asr #8
	cmp     r2, #0x2
	bne     branch_600a0f0
	cmp     r0, #0x0
	cmpne   r0, #0x9
	bne     branch_600a0f0
	ldr     r5, [pc, #0x204] @ [0x600a31c] (=0x380fff4)
	ldr     r0, [r5]
	add     r0, r0, #3, 24 @ #0x300
	strh    r10, [r0, #0xbe]
	ldr     r0, [r5]
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r1, [r0, #0xf8]
	cmp     r1, #0x2
	beq     branch_600a144
	cmp     r1, #0x3
	beq     branch_600a214
	cmp     r1, #0x5
	bne     branch_600a2fc
.arm
branch_600a144: @ 600a144 :arm
	sub     r4, r10, #0x1
	mov     r0, #0x6
	mul     r5, r4, r0
	mov     r0, #0x0
	str     r0, [sp, #0x4]
	add     r2, sp, #0x4
	add     r0, r5, #0xf2
	mov     r1, #0x3
	mov     lr, pc
	bx      r9
@ 0x600a16c

.arm
Function_600a16c: @ 600a16c :arm
	ldr     r0, [sp, #0x4]
	bl      Function_600b2cc
	add     r2, sp, #0x4
	add     r0, r5, #0xf5
	mov     r1, #0x3
	mov     lr, pc
	bx      r9
@ 0x600a188

.arm
Function_600a188: @ 600a188 :arm
	ldr     r0, [sp, #0x4]
	bl      Function_600b2cc
	mov     r1, #0x0
	ldr     r0, [pc, #0x180] @ [0x600a31c] (=0x380fff4)
	str     r1, [sp, #0x4]
	ldr     r0, [r0]
	ldr     r0, [r0, #0x604]
	tst     r0, #1, 16 @ #0x10000
	beq     branch_600a1ec
	tst     r0, #2, 18 @ #0x8000
	bne     branch_600a2fc
	add     r2, sp, #0x4
	add     r0, r4, #85, 30 @ #0x154
	mov     r1, #0x1
	mov     lr, pc
	bx      r9
@ 0x600a1c8

.arm
Function_600a1c8: @ 600a1c8 :arm
	ldr     r1, [pc, #0x14c] @ [0x600a31c] (=0x380fff4)
	ldr     r0, [sp, #0x4]
	ldr     r1, [r1]
	mov     r0, r0, lsl #27
	ldr     r1, [r1, #0x604]
	orr     r0, r1, r0, lsr #17
	str     r0, [sp, #0x4]
	bl      Function_600b2cc
	b       branch_600a2fc
@ 0x600a1ec

.arm
branch_600a1ec: @ 600a1ec :arm
	add     r0, r4, #0x46
	add     r2, sp, #0x4
	add     r0, r0, #1, 24 @ #0x100
	mov     r1, #0x1
	mov     lr, pc
	bx      r9
@ 0x600a204

.arm
Function_600a204: @ 600a204 :arm
	ldr     r1, [sp, #0x4]
	mov     r0, #0x1e
	bl      Function_600b29c
	b       branch_600a2fc
@ 0x600a214

.arm
branch_600a214: @ 600a214 :arm
	ldrh    r0, [r0, #0xfc]
	mov     r8, #0x0
	add     r7, r0, #0xcf
	mov     r4, r8
	mov     r11, #0x1
	b       branch_600a270
@ 0x600a22c

.arm
branch_600a22c: @ 600a22c :arm
	mov     r0, r7
	mov     r1, r11
	add     r2, sp, #0x0
	str     r4, [sp, #0x4]
	str     r4, [sp]
	mov     lr, pc
	bx      r9
@ 0x600a248

.arm
Function_600a248: @ 600a248 :arm
	add     r0, r7, r10
	mov     r1, #0x1
	add     r2, sp, #0x4
	mov     lr, pc
	bx      r9
@ 0x600a25c

.arm
Function_600a25c: @ 600a25c :arm
	ldr     r0, [sp]
	ldr     r1, [sp, #0x4]
	bl      Function_600b29c
	add     r7, r7, #0xf
	add     r8, r8, #0x1
.arm
branch_600a270: @ 600a270 :arm
	ldr     r0, [r5]
	add     r0, r0, #6, 24 @ #0x600
	ldrh    r0, [r0]
	cmp     r8, r0
	bcc     branch_600a22c
	mov     r8, #0x0
	ldr     r4, [pc, #0x8c] @ [0x600a31c] (=0x380fff4)
	mov     r5, r8
	mov     r11, #0x1
	b       branch_600a2e8
@ 0x600a298

.arm
branch_600a298: @ 600a298 :arm
	str     r5, [sp, #0x4]
	mov     r0, r7
	mov     r1, r11
	add     r2, sp, #0x4
	mov     lr, pc
	bx      r9
@ 0x600a2b0

.arm
Function_600a2b0: @ 600a2b0 :arm
	ldr     r1, [sp, #0x4]
	add     r0, r7, r10
	mov     r1, r1, lsl #8
	str     r1, [sp, #0x4]
	mov     r1, #0x1
	add     r2, sp, #0x4
	mov     lr, pc
	bx      r9
@ 0x600a2d0

.arm
Function_600a2d0: @ 600a2d0 :arm
	ldr     r0, [sp, #0x4]
	orr     r0, r0, #5, 16 @ #0x50000
	str     r0, [sp, #0x4]
	bl      Function_600b2cc
	add     r7, r7, #0xf
	add     r8, r8, #0x1
.arm
branch_600a2e8: @ 600a2e8 :arm
	ldr     r0, [r4]
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r0, [r0, #0xfe]
	cmp     r8, r0
	bcc     branch_600a298
.arm
branch_600a2fc: @ 600a2fc :arm
	ldr     r1, [pc, #0x24] @ [0x600a328] (=0x4808040)
	mov     r0, #0x3
	strh    r6, [r1]
	strh    r0, [r1, #0x8]
	mov     r0, #0x0
.arm
branch_600a310: @ 600a310 :arm
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x600a31c

.word 0x380fff4 @ 0x600a31c
.word 0x6018058 @ 0x600a320
.word Function_6017ff8 @ =0x6017ff8, 0x600a324
.word 0x4808040 @ 0x600a328
.arm
Function_600a32c: @ 600a32c :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x30] @ [0x600a368] (=0x380fff4)
	ldrh    r2, [r0]
	ldr     r3, [r1]
	add     r1, r3, #3, 24 @ #0x300
	strh    r2, [r1, #0xa4]
	ldrh    r1, [r0, #0x2]
	ldrh    r0, [r0]
	add     r2, r3, #233, 30 @ #0x3a4
	orr     r0, r1, r0
	strh    r0, [r2, #0x2]
	bl      Function_600a36c
	mov     r0, #0x0
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600a368

.word 0x380fff4 @ 0x600a368
.arm
Function_600a36c: @ 600a36c :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x68] @ [0x600a3e0] (=0xe2e2)
	add     r2, sp, #0x0
	str     r0, [sp]
	mov     r0, #0x58
	mov     r1, #0x2
	bl      Function_6017ff8
	ldr     r0, [sp]
	add     r0, r0, #0x2
	add     r0, r0, #2, 24 @ #0x200
	str     r0, [sp]
	bl      Function_600adc4
	cmp     r0, #0x14
	bne     branch_600a3cc
	ldr     r1, [sp]
	ldr     r0, [pc, #0x34] @ [0x600a3e4] (=0x48080bc)
	sub     r1, r1, #0x61
	sub     r1, r1, #97, 24 @ #0x6100
	str     r1, [sp]
	ldrh    r0, [r0]
	tst     r0, #0x2
	subne   r0, r1, #0x60
	subne   r0, r0, #6, 20 @ #0x6000
	strne   r0, [sp]
.arm
branch_600a3cc: @ 600a3cc :arm
	ldr     r1, [sp]
	ldr     r0, [pc, #0x10] @ [0x600a3e8] (=0x4808140)
	strh    r1, [r0]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600a3e0

.word 0xe2e2 @ 0x600a3e0
.word 0x48080bc @ 0x600a3e4
.word 0x4808140 @ 0x600a3e8
.arm
Function_600a3ec: @ 600a3ec :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x54] @ [0x600a44c] (=0x380fff4)
	cmp     r0, #0x0
	ldr     r2, [r1]
	add     r1, r2, #3, 24 @ #0x300
	add     r3, r2, #199, 30 @ #0x31c
	strh    r0, [r1, #0x52]
	ldrneh  r0, [r3, #0x12]
	cmpne   r0, #0x1
	ldrne   r1, [pc, #0x38] @ [0x600a450] (=0x4808006)
	ldrneh  r0, [r1]
	orrne   r0, r0, #0x40
	strneh  r0, [r1]
	bne     branch_600a440
	ldr     r2, [pc, #0x24] @ [0x600a450] (=0x4808006)
	mov     r1, #0x0
	ldrh    r0, [r2]
	bic     r0, r0, #0x40
	strh    r0, [r2]
	ldrh    r0, [r3, #0x20]
	bl      Function_6009950
.arm
branch_600a440: @ 600a440 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600a44c

.word 0x380fff4 @ 0x600a44c
.word 0x4808006 @ 0x600a450
.arm
Function_600a454: @ 600a454 :arm
	ldr     r1, [pc, #0x1c] @ [0x600a478] (=0x380fff4)
	ldr     r2, [pc, #0x1c] @ [0x600a47c] (=0x480803c)
	ldr     r1, [r1]
	mov     r3, r0, lsr #1
	add     r1, r1, #3, 24 @ #0x300
	strh    r3, [r1, #0x54]
	strh    r0, [r2]
	mov     r0, #0x0
	bx      lr
@ 0x600a478

.word 0x380fff4 @ 0x600a478
.word 0x480803c @ 0x600a47c
.arm
Function_600a480: @ 600a480 :arm
	ldr     r1, [pc, #0x8] @ [0x600a490] (=0x4808040)
	strh    r0, [r1]
	mov     r0, #0x0
	bx      lr
@ 0x600a490

.word 0x4808040 @ 0x600a490
.arm
Function_600a494: @ 600a494 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x5c] @ [0x600a4fc] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r0, [r0, #0xf8]
	cmp     r0, #0x2
	bne     branch_600a4b8
	ldr     r0, [pc, #0x48] @ [0x600a500] (=0xc008)
	bl      Function_600b2cc
.arm
branch_600a4b8: @ 600a4b8 :arm
	ldr     r1, [pc, #0x44] @ [0x600a504] (=0x601e)
	ldr     r0, [pc, #0x44] @ [0x600a508] (=0x4808158)
	strh    r1, [r0]
	bl      Function_600f044
	ldr     r1, [pc, #0x3c] @ [0x600a50c] (=0x480815c)
	mov     r0, #0x1e
	ldrh    r1, [r1]
	orr     r1, r1, #0x3f
	bl      Function_600b29c
	ldr     r2, [pc, #0x2c] @ [0x600a510] (=0x800d)
	ldr     r1, [pc, #0x2c] @ [0x600a514] (=0x4808168)
	ldr     r0, [pc, #0x2c] @ [0x600a518] (=0x4808036)
	strh    r2, [r1]
	mov     r1, #0x1
	strh    r1, [r0]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600a4fc

.word 0x380fff4 @ 0x600a4fc
.word 0xc008 @ 0x600a500
.word 0x601e @ 0x600a504
.word 0x4808158 @ 0x600a508
.word 0x480815c @ 0x600a50c
.word 0x800d @ 0x600a510
.word 0x4808168 @ 0x600a514
.word 0x4808036 @ 0x600a518
.arm
Function_600a51c: @ 600a51c :arm
	stmfd   sp!, {r4,lr}
	ldr     r2, [pc, #0x8c] @ [0x600a5b4] (=0x4808036)
	mov     r3, #0x0
	ldr     r1, [pc, #0x88] @ [0x600a5b8] (=0x600b650)
	mov     r0, #125, 26 @ #0x1f40
	strh    r3, [r2]
	bl      Function_600ef50
	ldr     r1, [pc, #0x7c] @ [0x600a5bc] (=0x4808168)
	mov     r2, #0x0
	ldr     r0, [pc, #0x78] @ [0x600a5c0] (=0x380fff4)
	strh    r2, [r1]
	ldr     r0, [r0]
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r0, [r0, #0xf8]
	cmp     r0, #0x2
	beq     branch_600a568
	cmp     r0, #0x3
	beq     branch_600a5a8
	b       branch_600a5ac
@ 0x600a568

.arm
branch_600a568: @ 600a568 :arm
	ldr     r0, [pc, #0x54] @ [0x600a5c4] (=0x6001)
	strh    r0, [r1, #-0x10]
	bl      Function_600f044
	ldr     r1, [pc, #0x4c] @ [0x600a5c8] (=0x480815c)
	mov     r0, #0x1
	ldrh    r4, [r1]
	and     r1, r4, #0x7f
	bl      Function_600b29c
	mov     r1, r4
	mov     r0, #0x1
	bl      Function_600b29c
	ldr     r0, [pc, #0x30] @ [0x600a5cc] (=0x9c40)
	ldr     r1, [pc, #0x18] @ [0x600a5b8] (=0x600b650)
	bl      Function_600ef50
	bl      Function_600b46c
	b       branch_600a5ac
@ 0x600a5a8

.arm
branch_600a5a8: @ 600a5a8 :arm
	bl      Function_600b46c
.arm
branch_600a5ac: @ 600a5ac :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600a5b4

.word 0x4808036 @ 0x600a5b4
.word 0x600b650 @ 0x600a5b8
.word 0x4808168 @ 0x600a5bc
.word 0x380fff4 @ 0x600a5c0
.word 0x6001 @ 0x600a5c4
.word 0x480815c @ 0x600a5c8
.word 0x9c40 @ 0x600a5cc
.arm
Function_600a5d0: @ 600a5d0 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [pc, #0x50] @ [0x600a62c] (=0x380fff4)
	ldr     r1, [pc, #0x50] @ [0x600a630] (=0xffff)
	ldr     r2, [r2]
	mov     r6, r0
	add     r5, r2, #199, 30 @ #0x31c
	cmp     r6, r1
	streqh  r1, [r5, #0x1c]
	add     r4, r2, #209, 30 @ #0x344
	streqh  r1, [r4, #0x8c]
	beq     branch_600a620
	ldrh    r0, [r4, #0x6e]
	mov     r1, #0x64
	mul     r0, r6, r0
	bl      Function_6003ea8
	cmp     r0, #1, 16 @ #0x10000
	movhi   r0, #0x5
	bhi     branch_600a624
	strh    r6, [r5, #0x1c]
	strh    r0, [r4, #0x8c]
.arm
branch_600a620: @ 600a620 :arm
	mov     r0, #0x0
.arm
branch_600a624: @ 600a624 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600a62c

.word 0x380fff4 @ 0x600a62c
.word 0xffff @ 0x600a630
.arm
Function_600a634: @ 600a634 :arm
	ldr     r1, [pc, #0x3c] @ [0x600a678] (=0x380fff4)
	mov     r2, #0x1
	ldr     r0, [r1]
	add     r0, r0, #3, 24 @ #0x300
	strh    r2, [r0, #0xea]
	ldr     r0, [r1]
	add     r0, r0, #1, 22 @ #0x400
	ldrh    r0, [r0, #0x68]
	cmp     r0, #0x0
	bxne    lr
	ldr     r2, [pc, #0x18] @ [0x600a67c] (=0x4808038)
	mov     r0, #0x0
	ldrh    r1, [r2]
	bic     r1, r1, #0x2
	strh    r1, [r2]
	strh    r0, [r2, #0x10]
	bx      lr
@ 0x600a678

.word 0x380fff4 @ 0x600a678
.word 0x4808038 @ 0x600a67c
.arm
Function_600a680: @ 600a680 :arm
	ldr     r0, [pc, #0x20] @ [0x600a6a8] (=0x380fff4)
	ldr     r1, [pc, #0x20] @ [0x600a6ac] (=0x4808038)
	ldr     r0, [r0]
	mov     r2, #0x0
	add     r0, r0, #3, 24 @ #0x300
	strh    r2, [r0, #0xea]
	ldrh    r0, [r1]
	orr     r0, r0, #0x2
	strh    r0, [r1]
	bx      lr
@ 0x600a6a8

.word 0x380fff4 @ 0x600a6a8
.word 0x4808038 @ 0x600a6ac
.arm
Function_600a6b0: @ 600a6b0 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r2, [pc, #0x34] @ [0x600a6f0] (=0x380fff4)
	mov     r5, r0
	ldr     r0, [r2]
	cmp     r5, #0x80
	add     r4, r0, #209, 30 @ #0x344
	movhi   r0, #0x4
	bhi     branch_600a6e8
	mov     r0, r1
	ldr     r1, [r4, #0x9c]
	add     r2, r5, #0x1
	bl      Function_6001ae0
	strh    r5, [r4, #0xa0]
	mov     r0, #0x0
.arm
branch_600a6e8: @ 600a6e8 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600a6f0

.word 0x380fff4 @ 0x600a6f0
.arm
Function_600a6f4: @ 600a6f4 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r2, [pc, #0x9c] @ [0x600a79c] (=0x380fff4)
	mov     r4, r0
	ldr     r0, [r2]
	mov     r8, r1
	cmp     r4, #0x80
	add     r5, r0, #209, 30 @ #0x344
	movhi   r0, #0x4
	bhi     branch_600a794
	cmp     r4, #0x0
	beq     branch_600a784
	ldrh    r0, [r5, #0xa2]
	tst     r0, #0x1
	beq     branch_600a774
	ldr     r6, [r5, #0x9c]
	mov     r1, #0xff
	mov     r0, r6
	bl      Function_600b9e0
	add     r6, r6, #0x1
	mov     r7, #0x0
	b       branch_600a768
@ 0x600a748

.arm
branch_600a748: @ 600a748 :arm
	mov     r0, r8
	bl      Function_600ba0c
	mov     r1, r0
	mov     r0, r6
	bl      Function_600b9e0
	add     r6, r6, #0x1
	add     r8, r8, #0x1
	add     r7, r7, #0x1
.arm
branch_600a768: @ 600a768 :arm
	cmp     r7, r4
	bcc     branch_600a748
	b       branch_600a784
@ 0x600a774

.arm
branch_600a774: @ 600a774 :arm
	ldr     r1, [r5, #0x9c]
	mov     r0, r8
	add     r2, r4, #0x1
	bl      Function_6001ae0
.arm
branch_600a784: @ 600a784 :arm
	strh    r4, [r5, #0xa0]
	mov     r0, #0x1
	strh    r0, [r5, #0xa4]
	mov     r0, #0x0
.arm
branch_600a794: @ 600a794 :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x600a79c

.word 0x380fff4 @ 0x600a79c
.arm
Function_600a7a0: @ 600a7a0 :arm
	ldr     r3, [pc, #0x2c] @ [0x600a7d4] (=0x380fff4)
	ldr     r2, [pc, #0x2c] @ [0x600a7d8] (=0x480802a)
	ldr     r1, [r3]
	add     r1, r1, #3, 24 @ #0x300
	strh    r0, [r1, #0xae]
	strh    r0, [r2]
	ldr     r1, [r3]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x3a]
	mov     r1, r1, lsl #24
	movs    r1, r1, lsr #31
	strneh  r0, [r2, #-0x2]
	bx      lr
@ 0x600a7d4

.word 0x380fff4 @ 0x600a7d4
.word 0x480802a @ 0x600a7d8
.arm
Function_600a7dc: @ 600a7dc :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [pc, #0x48] @ [0x600a830] (=0x380fff4)
	mov     r0, #0x0
	ldr     r1, [r1]
	add     r4, r1, #209, 30 @ #0x344
	strh    r0, [r4, #0x6a]
	bl      Function_600efd8
	ldr     r0, [pc, #0x34] @ [0x600a834] (=0x480802a)
	mov     r1, #0x0
	strh    r1, [r0]
	ldrh    r0, [r4, #0x88]
	cmp     r0, #0x0
	beq     branch_600a828
	bl      Function_6013af0
	ldrh    r0, [r4, #0x88]
	mov     r1, #0x20
	bl      Function_600e4ec
	mov     r0, #0x0
	strh    r0, [r4, #0x88]
.arm
branch_600a828: @ 600a828 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600a830

.word 0x380fff4 @ 0x600a830
.word 0x480802a @ 0x600a834
.arm
Function_600a838: @ 600a838 :arm
	ldr     r0, [pc, #0x14] @ [0x600a854] (=0x380fff4)
	ldr     r1, [pc, #0x14] @ [0x600a858] (=0x4808028)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0xae]
	strh    r0, [r1]
	bx      lr
@ 0x600a854

.word 0x380fff4 @ 0x600a854
.word 0x4808028 @ 0x600a858
.arm
Function_600a85c: @ 600a85c :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x14] @ [0x600a87c] (=0x4808094)
	ldrh    r0, [r0]
	tst     r0, #2, 18 @ #0x8000
	bne     branch_600a874
	bl      Function_600efd8
.arm
branch_600a874: @ 600a874 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600a87c

.word 0x4808094 @ 0x600a87c
.arm
Function_600a880: @ 600a880 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0x8c] @ [0x600a918] (=0x380fff4)
	mov     r5, r0
	ldr     r1, [r1]
	add     r4, r1, #209, 30 @ #0x344
	ldrh    r0, [r4, #0x8]
	cmp     r0, r5
	beq     branch_600a910
	cmp     r0, #0x40
	bne     branch_600a8b4
	add     r0, r1, #141, 30 @ #0x234
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6001ae8
.arm
branch_600a8b4: @ 600a8b4 :arm
	cmp     r5, #0x0
	beq     branch_600a8d0
	cmp     r5, #0x10
	beq     branch_600a8d8
	cmp     r5, #0x40
	beq     branch_600a8f0
	b       branch_600a90c
@ 0x600a8d0

.arm
branch_600a8d0: @ 600a8d0 :arm
	bl      Function_600a494
	b       branch_600a90c
@ 0x600a8d8

.arm
branch_600a8d8: @ 600a8d8 :arm
	ldr     r0, [pc, #0x3c] @ [0x600a91c] (=0x4808040)
	mov     r1, #0x0
	strh    r1, [r0]
	bl      Function_600b1d0
	bl      Function_600a51c
	b       branch_600a90c
@ 0x600a8f0

.arm
branch_600a8f0: @ 600a8f0 :arm
	ldrh    r0, [r4, #0xc]
	cmp     r0, #0x2
	bne     branch_600a900
	bl      Function_600a680
.arm
branch_600a900: @ 600a900 :arm
	ldr     r1, [pc, #0x18] @ [0x600a920] (=0x600b728)
	mov     r0, #0x64
	bl      Function_600b670
.arm
branch_600a90c: @ 600a90c :arm
	strh    r5, [r4, #0x8]
.arm
branch_600a910: @ 600a910 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600a918

.word 0x380fff4 @ 0x600a918
.word 0x4808040 @ 0x600a91c
.word 0x600b728 @ 0x600a920
.arm
Function_600a924: @ 600a924 :arm
	ldrh    r2, [r1]
	strh    r2, [r0]
	ldrh    r2, [r1, #0x2]
	strh    r2, [r0, #0x2]
	ldrh    r1, [r1, #0x4]
	strh    r1, [r0, #0x4]
	bx      lr
@ 0x600a940

.arm
Function_600a940: @ 600a940 :arm
	ldrh    r3, [r1]
	strh    r3, [r0]
	ldrh    r3, [r1, #0x2]
	strh    r3, [r0, #0x2]
	ldrh    r1, [r1, #0x4]
	strh    r1, [r0, #0x4]
	ldrh    r1, [r2]
	strh    r1, [r0, #0x6]
	ldrh    r1, [r2, #0x2]
	strh    r1, [r0, #0x8]
	ldrh    r1, [r2, #0x4]
	strh    r1, [r0, #0xa]
	bx      lr
@ 0x600a974

.arm
Function_600a974: @ 600a974 :arm
	ldrh    r12, [r1]
	strh    r12, [r0]
	ldrh    r12, [r1, #0x2]
	strh    r12, [r0, #0x2]
	ldrh    r1, [r1, #0x4]
	strh    r1, [r0, #0x4]
	ldrh    r1, [r2]
	strh    r1, [r0, #0x6]
	ldrh    r1, [r2, #0x2]
	strh    r1, [r0, #0x8]
	ldrh    r1, [r2, #0x4]
	strh    r1, [r0, #0xa]
	ldrh    r1, [r3]
	strh    r1, [r0, #0xc]
	ldrh    r1, [r3, #0x2]
	strh    r1, [r0, #0xe]
	ldrh    r1, [r3, #0x4]
	strh    r1, [r0, #0x10]
	bx      lr
@ 0x600a9c0

.arm
Function_600a9c0: @ 600a9c0 :arm
	stmfd   sp!, {r3,lr}
	bl      Function_600a9f8
	ldr     r1, [pc, #0x1c] @ [0x600a9ec] (=0x380fff4)
	mov     r0, #0x0
	ldr     r1, [r1]
	mov     r2, #0xb4
	add     r1, r1, #79, 30 @ #0x13c
	add     r1, r1, #1, 22 @ #0x400
	bl      Function_600a9f0
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600a9ec

.word 0x380fff4 @ 0x600a9ec
.arm
Function_600a9f0: @ 600a9f0 :arm
	ldr     pc, [pc, #-0x4] @ [0x600a9f4] (=0x37fb074)
@ 0x600a9f4

.word 0x37fb074 @ 0x600a9f4
.arm
Function_600a9f8: @ 600a9f8 :arm
	ldr     r1, [pc, #0x1e8] @ [0x600abe8] (=0x380fff4)
	ldr     r0, [pc, #0x1e8] @ [0x600abec] (=0x48081b0)
	ldr     r1, [r1]
	ldrh    r2, [r0]
	ldr     r3, [r1, #0x58c]
	and     r2, r2, #0xff
	add     r2, r3, r2
	str     r2, [r1, #0x58c]
	ldrh    r12, [r0, #0x2]
	ldr     r3, [r1, #0x588]
	and     r2, r12, #0xff
	add     r3, r3, r12, asr #8
	str     r3, [r1, #0x588]
	ldr     r3, [r1, #0x598]
	add     r2, r3, r2
	str     r2, [r1, #0x598]
	ldrh    r12, [r0, #0x4]
	ldr     r3, [r1, #0x594]
	and     r2, r12, #0xff
	add     r3, r3, r12, asr #8
	str     r3, [r1, #0x594]
	ldr     r3, [r1, #0x590]
	add     r2, r3, r2
	str     r2, [r1, #0x590]
	ldrh    r12, [r0, #0x6]
	ldr     r3, [r1, #0x59c]
	and     r2, r12, #0xff
	add     r3, r3, r12, asr #8
	str     r3, [r1, #0x59c]
	ldr     r3, [r1, #0x574]
	add     r2, r3, r2
	str     r2, [r1, #0x574]
	ldrh    r2, [r0, #0x8]
	ldr     r3, [r1, #0x584]
	and     r2, r2, #0xff
	add     r2, r3, r2
	str     r2, [r1, #0x584]
	ldrh    r2, [r0, #0xa]
	ldr     r3, [r1, #0x55c]
	and     r2, r2, #0xff
	add     r2, r3, r2
	str     r2, [r1, #0x55c]
	ldrh    r12, [r0, #0xc]
	ldr     r3, [r1, #0x56c]
	and     r2, r12, #0xff
	add     r3, r3, r12, asr #8
	str     r3, [r1, #0x56c]
	ldr     r3, [r1, #0x580]
	add     r2, r3, r2
	str     r2, [r1, #0x580]
	ldrh    r12, [r0, #0xe]
	ldr     r3, [r1, #0x578]
	and     r2, r12, #0xff
	add     r2, r3, r2
	str     r2, [r1, #0x578]
	ldr     r2, [r1, #0x57c]
	add     r2, r2, r12, asr #8
	str     r2, [r1, #0x57c]
	ldrh    r2, [r0, #0x10]
	ldr     r3, [r1, #0x548]
	and     r2, r2, #0xff
	add     r2, r3, r2
	str     r2, [r1, #0x548]
	ldrh    r3, [r0, #0x20]
	ldr     r2, [r1, #0x5b4]
	add     r2, r2, r3, asr #8
	str     r2, [r1, #0x5b4]
	ldrh    r12, [r0, #0x22]
	ldr     r3, [r1, #0x5b8]
	and     r2, r12, #0xff
	add     r2, r3, r2
	str     r2, [r1, #0x5b8]
	ldr     r2, [r1, #0x5bc]
	add     r2, r2, r12, asr #8
	str     r2, [r1, #0x5bc]
	ldrh    r12, [r0, #0x24]
	ldr     r3, [r1, #0x5c0]
	and     r2, r12, #0xff
	add     r2, r3, r2
	str     r2, [r1, #0x5c0]
	ldr     r2, [r1, #0x5c4]
	add     r2, r2, r12, asr #8
	str     r2, [r1, #0x5c4]
	ldrh    r12, [r0, #0x26]
	ldr     r3, [r1, #0x5c8]
	and     r2, r12, #0xff
	add     r2, r3, r2
	str     r2, [r1, #0x5c8]
	ldr     r2, [r1, #0x5cc]
	add     r2, r2, r12, asr #8
	str     r2, [r1, #0x5cc]
	ldrh    r12, [r0, #0x28]
	ldr     r3, [r1, #0x5d0]
	and     r2, r12, #0xff
	add     r2, r3, r2
	str     r2, [r1, #0x5d0]
	ldr     r2, [r1, #0x5d4]
	add     r2, r2, r12, asr #8
	str     r2, [r1, #0x5d4]
	ldrh    r12, [r0, #0x2a]
	ldr     r3, [r1, #0x5d8]
	and     r2, r12, #0xff
	add     r2, r3, r2
	str     r2, [r1, #0x5d8]
	ldr     r2, [r1, #0x5dc]
	add     r2, r2, r12, asr #8
	str     r2, [r1, #0x5dc]
	ldrh    r12, [r0, #0x2c]
	ldr     r3, [r1, #0x5e0]
	and     r2, r12, #0xff
	add     r2, r3, r2
	str     r2, [r1, #0x5e0]
	ldr     r2, [r1, #0x5e4]
	add     r2, r2, r12, asr #8
	str     r2, [r1, #0x5e4]
	ldrh    r3, [r0, #0x2e]
	ldr     r2, [r1, #0x5e8]
	and     r0, r3, #0xff
	add     r0, r2, r0
	str     r0, [r1, #0x5e8]
	ldr     r0, [r1, #0x5ec]
	add     r0, r0, r3, asr #8
	str     r0, [r1, #0x5ec]
	bx      lr
@ 0x600abe8

.word 0x380fff4 @ 0x600abe8
.word 0x48081b0 @ 0x600abec
.arm
Function_600abf0: @ 600abf0 :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r2, [pc, #0xc0] @ [0x600acbc] (=0x380fff4)
	mov     r9, r0
	ldr     r0, [r2]
	mov     r8, r1
	cmp     r9, #0x20
	add     r2, r0, #209, 30 @ #0x344
	movhi   r0, #0x0
	bhi     branch_600acb4
	ldrh    r1, [r2, #0x1e]
	cmp     r1, #0x0
	moveq   r0, #0x1
	beq     branch_600acb4
	add     r0, r0, #1, 22 @ #0x400
	ldrh    r0, [r0, #0x4]
	cmp     r0, #0x13
	bne     branch_600ac48
	cmp     r9, r1
	movcc   r0, #0x0
	bcc     branch_600acb4
	mov     r9, r1
	b       branch_600ac54
@ 0x600ac48

.arm
branch_600ac48: @ 600ac48 :arm
	cmp     r9, r1
	movne   r0, #0x0
	bne     branch_600acb4
.arm
branch_600ac54: @ 600ac54 :arm
	add     r5, r2, #0x20
	add     r6, r2, #0x40
	mov     r7, #0x0
	b       branch_600aca8
@ 0x600ac64

.arm
branch_600ac64: @ 600ac64 :arm
	mov     r0, r6
	bl      Function_600ba0c
	mov     r4, r0
	mov     r0, r8
	add     r6, r6, #0x1
	bl      Function_600ba0c
	mov     r10, r0
	mov     r0, r5
	add     r8, r8, #0x1
	bl      Function_600ba0c
	orr     r1, r10, r4
	orr     r0, r0, r4
	cmp     r1, r0
	add     r5, r5, #0x1
	movne   r0, #0x0
	bne     branch_600acb4
	add     r7, r7, #0x1
.arm
branch_600aca8: @ 600aca8 :arm
	cmp     r7, r9
	bcc     branch_600ac64
	mov     r0, #0x1
.arm
branch_600acb4: @ 600acb4 :arm
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x600acbc

.word 0x380fff4 @ 0x600acbc
.arm
Function_600acc0: @ 600acc0 :arm
	ldrh    r3, [r0, #0x4]
	ldrh    r2, [r1, #0x4]
	cmp     r3, r2
	ldreqh  r3, [r0, #0x2]
	ldreqh  r2, [r1, #0x2]
	cmpeq   r3, r2
	ldreqh  r2, [r0]
	ldreqh  r0, [r1]
	cmpeq   r2, r0
	moveq   r0, #0x1
	movne   r0, #0x0
	bx      lr
@ 0x600acf0

.arm
Function_600acf0: @ 600acf0 :arm
	ldr     r1, [pc, #0x14] @ [0x600ad0c] (=0x380fff4)
	mov     r2, #0x1
	ldr     r1, [r1]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x2c]
	and     r0, r1, r2, lsl r0
	bx      lr
@ 0x600ad0c

.word 0x380fff4 @ 0x600ad0c
.arm
Function_600ad10: @ 600ad10 :arm
	stmfd   sp!, {r3-r9,lr}
	mov     r9, r1
	mov     r1, #0x0
	mov     r4, r0
	strh    r1, [r9]
	add     r0, r4, #0x1
	strh    r1, [r9, #0x2]
	bl      Function_600ba0c
	add     r6, r4, #0x2
	ldr     r5, [pc, #0x84] @ [0x600adc0] (=0x60183dc)
	mov     r8, r0
	mov     r7, #0x0
	mov     r4, #0x1
	b       branch_600adb0
@ 0x600ad48

.arm
branch_600ad48: @ 600ad48 :arm
	add     r0, r6, r7
	bl      Function_600ba0c
	and     r1, r0, #0x7f
	sub     r1, r1, #0x1
	cmp     r1, #0x78
	bcs     branch_600ad90
	mov     r1, r1, lsl #1
	ldrh    r2, [r5, r1]
	cmp     r2, #0xff
	beq     branch_600ad90
	ldrh    r1, [r9, #0x2]
	tst     r0, #0x80
	orr     r0, r1, r4, lsl r2
	strh    r0, [r9, #0x2]
	ldrneh  r0, [r9]
	orrne   r0, r0, r4, lsl r2
	strneh  r0, [r9]
	b       branch_600adac
@ 0x600ad90

.arm
branch_600ad90: @ 600ad90 :arm
	ldrh    r1, [r9, #0x2]
	tst     r0, #0x80
	orr     r0, r1, #2, 18 @ #0x8000
	strh    r0, [r9, #0x2]
	ldrneh  r0, [r9]
	orrne   r0, r0, #2, 18 @ #0x8000
	strneh  r0, [r9]
.arm
branch_600adac: @ 600adac :arm
	add     r7, r7, #0x1
.arm
branch_600adb0: @ 600adb0 :arm
	cmp     r7, r8
	bcc     branch_600ad48
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x600adc0

.word 0x60183dc @ 0x600adc0
.arm
Function_600adc4: @ 600adc4 :arm
	ldr     r0, [pc, #0x40] @ [0x600ae0c] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r1, [r0, #0x30]
	cmp     r1, #0x0
	beq     branch_600ade8
	cmp     r1, #0x1
	beq     branch_600adfc
	b       branch_600ae04
@ 0x600ade8

.arm
branch_600ade8: @ 600ade8 :arm
	ldrh    r0, [r0, #0xa4]
	tst     r0, #0x1
	beq     branch_600ae04
	mov     r0, #0xa
	bx      lr
@ 0x600adfc

.arm
branch_600adfc: @ 600adfc :arm
	mov     r0, #0xa
	bx      lr
@ 0x600ae04

.arm
branch_600ae04: @ 600ae04 :arm
	mov     r0, #0x14
	bx      lr
@ 0x600ae0c

.word 0x380fff4 @ 0x600ae0c
.arm
Function_600ae10: @ 600ae10 :arm
	stmfd   sp!, {r3-r7,lr}
	sub     sp, sp, #0x8
	ldr     r0, [pc, #0x35c] @ [0x600b17c] (=0x380fff4)
	ldr     r0, [r0]
	add     r6, r0, #209, 30 @ #0x344
	add     r4, r0, #199, 30 @ #0x31c
	bl      Function_600b1d0
	ldr     r1, [pc, #0x34c] @ [0x600b180] (=0x4808044)
	ldrh    r2, [r1]
	ldrh    r0, [r1]
	ldrh    r1, [r1]
	add     r0, r2, r0, lsl #8
	bl      Function_600ba28
	mov     r0, #0x1
	strh    r0, [r6, #0x7c]
	ldrh    r0, [r4, #0x1e]
	ldr     r2, [pc, #0x32c] @ [0x600b184] (=0x4808032)
	mov     r0, r0, lsl #29
	mov     r0, r0, lsr #31
	cmp     r0, #0x1
	ldreqh  r0, [r6, #0x7c]
	ldr     r1, [pc, #0x31c] @ [0x600b188] (=0x4808134)
	orreq   r0, r0, #0x20
	streqh  r0, [r6, #0x7c]
	ldrh    r0, [r4, #0x18]
	mov     r4, #0x0
	cmp     r0, #0x0
	ldrneh  r0, [r6, #0x7c]
	mov     r3, #2, 18 @ #0x8000
	orrne   r0, r0, #0x10
	strneh  r0, [r6, #0x7c]
	strh    r4, [r6, #0x12]
	ldr     r0, [pc, #0x2f4] @ [0x600b18c] (=0xffff)
	strh    r3, [r2]
	strh    r0, [r1]
	strh    r4, [r2, #-0x8]
	sub     r0, r1, #67, 30 @ #0x10c
	strh    r4, [r0]
	mov     r0, #0xf
	strh    r0, [r1, #-0xfc]
	bl      Function_600edb8
	bl      Function_6017e98
	bl      Function_6014f04
	bl      Function_6017c34
	ldr     r2, [pc, #0x2c8] @ [0x600b190] (=0x4808030)
	mov     r1, #2, 18 @ #0x8000
	strh    r1, [r2]
	ldr     r0, [pc, #0x2b8] @ [0x600b18c] (=0xffff)
	ldr     r1, [pc, #0x2bc] @ [0x600b194] (=0x48081ae)
	strh    r0, [r2, #-0x20]
	sub     r2, r0, #14, 20 @ #0xe000
	ldr     r0, [pc, #0x298] @ [0x600b17c] (=0x380fff4)
	strh    r2, [r1]
	ldr     r0, [r0]
	add     r0, r0, #6, 24 @ #0x600
	ldrh    r0, [r0, #0x90]
	tst     r0, #0x8
	movne   r0, #1, 22 @ #0x400
	strneh  r0, [r1, #-0x4]
	moveq   r0, r4
	streqh  r0, [r1, #-0x4]
	ldr     r2, [pc, #0x28c] @ [0x600b198] (=0x4808008)
	mov     r3, #0x0
	strh    r3, [r2]
	strh    r3, [r2, #0x2]
	ldrh    r0, [r6, #0xc]
	cmp     r0, #0x4
	addls   pc, pc, r0, lsl #2
	b       branch_600b140
@ 0x600af24

.arm
Function_600af24: @ 600af24 :arm
	b       branch_600af38
@ 0x600af28

.arm
Function_600af28: @ 600af28 :arm
	b       branch_600af68
@ 0x600af2c

.arm
Function_600af2c: @ 600af2c :arm
	b       branch_600b04c
@ 0x600af30

.arm
Function_600af30: @ 600af30 :arm
	b       branch_600b0cc
@ 0x600af34

.arm
Function_600af34: @ 600af34 :arm
	b       branch_600b124
@ 0x600af38

.arm
branch_600af38: @ 600af38 :arm
	ldr     r0, [pc, #0x24c] @ [0x600b18c] (=0xffff)
	mov     r1, #0x3f
	strh    r1, [r2, #0xa]
	strh    r0, [r2, #0xc8]
	mov     r0, #0x8
	strh    r0, [r2, #0xd8]
	strh    r3, [r2]
	strh    r3, [r2, #0x2]
	strh    r3, [r2, #0xe0]
	mov     r0, #0x1
	strh    r0, [r2, #-0x4]
	b       branch_600b140
@ 0x600af68

.arm
branch_600af68: @ 600af68 :arm
	ldr     r3, [pc, #0x22c] @ [0x600b19c] (=0x703f)
	ldr     r0, [pc, #0x22c] @ [0x600b1a0] (=0x1fff)
	ldr     r1, [pc, #0x21c] @ [0x600b194] (=0x48081ae)
	strh    r3, [r2, #0xa]
	strh    r0, [r1]
	rsb     r0, r0, #35, 24 @ #0x2300
	strh    r0, [r1, #-0xde]
	mov     r0, #0xd
	strh    r0, [r1, #-0xce]
	mov     r0, #14, 20 @ #0xe000
	strh    r0, [r2]
	mov     r0, #0x1
	strh    r0, [r2, #-0x4]
	ldrh    r0, [r1, #-0xb6]
	add     r7, sp, #0x0
	strh    r0, [r7]
	ldrh    r0, [r1, #-0xb4]
	mov     r4, #0x0
	strh    r0, [r7, #0x2]
	ldrh    r2, [r1, #-0xb2]
	ldr     r0, [sp]
	strh    r2, [r7, #0x4]
	ldrh    r1, [r1, #-0xb0]
	mov     r3, r4
	strh    r1, [r7, #0x6]
	ldrh    r2, [r6, #0x6e]
	ldr     r1, [sp, #0x4]
	mov     r5, r2, lsl #10
	mov     r2, r5
	bl      Function_600b1c8
	adds    r3, r0, #0x1
	umull   r2, r0, r3, r5
	mla     r0, r3, r4, r0
	adc     r1, r1, #0x0
	mla     r0, r1, r5, r0
	str     r0, [sp, #0x4]
	ldrh    r0, [r7, #0x6]
	ldr     r3, [pc, #0x1a0] @ [0x600b1a4] (=0x48080f6)
	str     r2, [sp]
	strh    r0, [r3]
	ldrh    r0, [r7, #0x4]
	mov     r1, #0x1
	strh    r0, [r3, #-0x2]
	ldrh    r2, [r7, #0x2]
	mov     r0, #0x40
	strh    r2, [r3, #-0x4]
	ldrh    r2, [r7]
	orr     r2, r2, #0x1
	strh    r2, [r3, #-0x6]
	strh    r1, [r3, #-0xe]
	strh    r1, [r3, #-0xc]
	bl      Function_600a880
	bl      Function_6013f2c
	ldr     r0, [pc, #0x164] @ [0x600b1a8] (=0x48080ae)
	mov     r1, #0x2
	strh    r1, [r0]
	b       branch_600b140
@ 0x600b04c

.arm
branch_600b04c: @ 600b04c :arm
	ldr     r1, [pc, #0x158] @ [0x600b1ac] (=0xe0bf)
	ldr     r0, [pc, #0x124] @ [0x600b17c] (=0x380fff4)
	strh    r1, [r2, #0xa]
	ldr     r0, [r0]
	add     r0, r0, #6, 24 @ #0x600
	ldrh    r0, [r0, #0x90]
	tst     r0, #0x20
	beq     branch_600b088
	ldrh    r0, [r2, #0xa]
	ldr     r1, [pc, #0x138] @ [0x600b1b0] (=0x48081aa)
	orr     r0, r0, #0x40
	strh    r0, [r2, #0xa]
	ldrh    r0, [r1]
	orr     r0, r0, #0x68
	strh    r0, [r1]
.arm
branch_600b088: @ 600b088 :arm
	ldrh    r0, [r6, #0x64]
	tst     r0, #0x1
	ldr     r0, [pc, #0x11c] @ [0x600b1b4] (=0x48080d0)
	ldrne   r1, [pc, #0x11c] @ [0x600b1b8] (=0x581)
	strneh  r1, [r0]
	ldreq   r1, [pc, #0x118] @ [0x600b1bc] (=0x181)
	streqh  r1, [r0]
	ldr     r2, [pc, #0x114] @ [0x600b1c0] (=0x48080e0)
	mov     r0, #0xb
	strh    r0, [r2]
	mov     r1, #0x1
	strh    r1, [r2, #-0xdc]
	strh    r1, [r2, #0x8]
	mov     r0, #0x20
	strh    r1, [r2, #0xa]
	bl      Function_600a880
	b       branch_600b140
@ 0x600b0cc

.arm
branch_600b0cc: @ 600b0cc :arm
	ldr     r1, [pc, #0xb8] @ [0x600b18c] (=0xffff)
	strh    r1, [r2, #0x8]
	sub     r0, r1, #255, 26 @ #0x3fc0
	strh    r0, [r2, #0xa]
	ldrh    r0, [r6, #0x64]
	tst     r0, #0x1
	rsbne   r0, r1, #65, 22 @ #0x10400
	strneh  r0, [r2, #0xc8]
	moveq   r0, #0x1
	streqh  r0, [r2, #0xc8]
	ldr     r2, [pc, #0xc4] @ [0x600b1c0] (=0x48080e0)
	mov     r0, #0xb
	strh    r0, [r2]
	mov     r0, #0x1
	strh    r0, [r2, #-0xdc]
	strh    r0, [r2, #0x8]
	strh    r0, [r2, #0xa]
	mov     r1, #0x0
	mov     r0, #0x20
	strh    r1, [r2, #-0x98]
	bl      Function_600a880
	b       branch_600b140
@ 0x600b124

.arm
branch_600b124: @ 600b124 :arm
	ldr     r0, [pc, #0x68] @ [0x600b194] (=0x48081ae)
	strh    r3, [r2, #0xa]
	strh    r3, [r0]
	mov     r1, #0x1
	mov     r0, #0x20
	strh    r1, [r2, #-0x4]
	bl      Function_600a880
.arm
branch_600b140: @ 600b140 :arm
	ldr     r0, [pc, #0x7c] @ [0x600b1c4] (=0x4808048)
	mov     r1, #0x0
	strh    r1, [r0]
	bl      Function_600a634
	ldr     r1, [pc, #0x50] @ [0x600b1a8] (=0x48080ae)
	mov     r0, #0x2
	strh    r0, [r1]
	ldrh    r1, [r6, #0xe]
	cmp     r1, #0x1
	bne     branch_600b16c
	bl      Function_600a454
.arm
branch_600b16c: @ 600b16c :arm
	bl      Function_600ef24
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x600b17c

.word 0x380fff4 @ 0x600b17c
.word 0x4808044 @ 0x600b180
.word 0x4808032 @ 0x600b184
.word 0x4808134 @ 0x600b188
.word 0xffff @ 0x600b18c
.word 0x4808030 @ 0x600b190
.word 0x48081ae @ 0x600b194
.word 0x4808008 @ 0x600b198
.word 0x703f @ 0x600b19c
.word 0x1fff @ 0x600b1a0
.word 0x48080f6 @ 0x600b1a4
.word 0x48080ae @ 0x600b1a8
.word 0xe0bf @ 0x600b1ac
.word 0x48081aa @ 0x600b1b0
.word 0x48080d0 @ 0x600b1b4
.word 0x581 @ 0x600b1b8
.word 0x181 @ 0x600b1bc
.word 0x48080e0 @ 0x600b1c0
.word 0x4808048 @ 0x600b1c4
.arm
Function_600b1c8: @ 600b1c8 :arm
	ldr     pc, [pc, #-0x4] @ [0x600b1cc] (=0x380620c)
@ 0x600b1cc

.word 0x380620c @ 0x600b1cc
.arm
Function_600b1d0: @ 600b1d0 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x84] @ [0x600b260] (=0x380fff4)
	ldr     r1, [r0]
	add     r0, r1, #130, 30 @ #0x208
	add     r0, r0, #1, 22 @ #0x400
	add     r4, r1, #209, 30 @ #0x344
	bl      Function_6001ae8
	ldr     r0, [pc, #0x6c] @ [0x600b260] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #141, 30 @ #0x234
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6001ae8
	mov     r0, #0x20
	bl      Function_600a880
	mov     r1, #0x0
	strh    r1, [r4, #0xa4]
	ldr     r0, [pc, #0x4c] @ [0x600b264] (=0x4808012)
	strh    r1, [r4, #0x12]
	strh    r1, [r0]
	strh    r1, [r0, #-0xe]
	strh    r1, [r0, #0xd8]
	strh    r1, [r0, #0xd6]
	strh    r1, [r0, #-0xa]
	strh    r1, [r0, #-0x8]
	ldrh    r0, [r4, #0xc]
	cmp     r0, #0x1
	bne     branch_600b240
	bl      Function_6013f6c
.arm
branch_600b240: @ 600b240 :arm
	ldr     r1, [pc, #0x20] @ [0x600b268] (=0xffff)
	ldr     r0, [pc, #0x20] @ [0x600b26c] (=0x48080ac)
	strh    r1, [r0]
	strh    r1, [r0, #0x8]
	bl      Function_6013c98
	bl      Function_60094e4
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600b260

.word 0x380fff4 @ 0x600b260
.word 0x4808012 @ 0x600b264
.word 0xffff @ 0x600b268
.word 0x48080ac @ 0x600b26c
.arm
Function_600b270: @ 600b270 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x18] @ [0x600b294] (=0x4808158)
	orr     r0, r0, #6, 20 @ #0x6000
	strh    r0, [r1]
	bl      Function_600f044
	ldr     r0, [pc, #0xc] @ [0x600b298] (=0x480815c)
	ldrh    r0, [r0]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600b294

.word 0x4808158 @ 0x600b294
.word 0x480815c @ 0x600b298
.arm
Function_600b29c: @ 600b29c :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x20] @ [0x600b2c8] (=0x480815a)
	orr     r0, r0, #5, 20 @ #0x5000
	strh    r1, [r2]
	strh    r0, [r2, #-0x2]
	bl      Function_600f044
	cmp     r0, #0x0
	mvnne   r0, #0x0
	moveq   r0, #0x0
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600b2c8

.word 0x480815a @ 0x600b2c8
.arm
Function_600b2cc: @ 600b2cc :arm
	ldr     r2, [pc, #0x10] @ [0x600b2e4] (=0x480817e)
	ldr     r12, [pc, #0x10] @ [0x600b2e8] (=0x600f078)
	strh    r0, [r2]
	mov     r1, r0, lsr #16
	strh    r1, [r2, #-0x2]
	bx      r12
@ 0x600b2e4

.word 0x480817e @ 0x600b2e4
.word 0x600f078 @ 0x600b2e8
.arm
Function_600b2ec: @ 600b2ec :arm
	stmfd   sp!, {r3-r8,lr}
	sub     sp, sp, #0x4
	mov     r8, #0x0
	str     r8, [sp]
	mov     r7, r8
	mov     r6, #0x64
	add     r4, sp, #0x0
	mov     r5, #0x1
.arm
branch_600b30c: @ 600b30c :arm
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      Function_6017ff8
	cmp     r7, #0x1
	ldreq   r0, [sp]
	mov     r1, r8
	andeq   r0, r0, #0x80
	streq   r0, [sp]
	ldr     r0, [sp]
	and     r0, r0, #0xff
	bl      Function_600baa4
	add     r7, r7, #0x1
	mov     r8, r0
	cmp     r7, #0x69
	add     r6, r6, #0x1
	bcc     branch_600b30c
	add     sp, sp, #0x4
	ldmfd   sp!, {r3-r8,lr}
	bx      lr
@ 0x600b35c

.arm
Function_600b35c: @ 600b35c :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [pc, #0x60] @ [0x600b3c8] (=0x380fff4)
	mov     r0, #0x0
	ldr     r1, [r1]
	mov     r2, #0x10
	add     r1, r1, #126, 30 @ #0x1f8
	add     r4, r1, #1, 22 @ #0x400
	mov     r1, r4
	bl      Function_6000598
	mov     r2, r4
	mov     r0, #0x40
	mov     r1, #0x1
	bl      Function_6017ff8
	add     r2, r4, #0x2
	mov     r0, #0x41
	mov     r1, #0x1
	bl      Function_6017ff8
	add     r2, r4, #0x4
	mov     r0, #0x42
	mov     r1, #0x1
	bl      Function_6017ff8
	add     r2, r4, #0x6
	mov     r0, #0x43
	mov     r1, #0x1
	bl      Function_6017ff8
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600b3c8

.word 0x380fff4 @ 0x600b3c8
.arm
Function_600b3cc: @ 600b3cc :arm
	ldr     r2, [pc, #0x2c] @ [0x600b400] (=0x6018378)
	mov     r3, #0x0
.arm
branch_600b3d4: @ 600b3d4 :arm
	mov     r0, r3, lsl #2
	ldrh    r0, [r2, r0]
	add     r1, r2, r3, lsl #2
	add     r0, r0, #18, 10 @ #0x4800000
	add     r3, r3, #0x1
	ldrh    r1, [r1, #0x2]
	add     r0, r0, #2, 18 @ #0x8000
	strh    r1, [r0]
	cmp     r3, #0x19
	bcc     branch_600b3d4
	bx      lr
@ 0x600b400

.word 0x6018378 @ 0x600b400
.arm
Function_600b404: @ 600b404 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r0, [pc, #0x58] @ [0x600b468] (=0x4808160)
	mov     r1, #1, 24 @ #0x100
	strh    r1, [r0]
	mov     r6, #0x0
	str     r6, [sp]
	mov     r7, #0x64
	add     r4, sp, #0x0
	mov     r5, #0x1
.arm
branch_600b428: @ 600b428 :arm
	mov     r0, r7
	mov     r1, r5
	mov     r2, r4
	bl      Function_6017ff8
	ldr     r1, [sp]
	mov     r0, r6
	bl      Function_600b29c
	add     r6, r6, #0x1
	cmp     r6, #0x69
	add     r7, r7, #0x1
	bcc     branch_600b428
	mov     r0, #0x5a
	mov     r1, #0x2
	bl      Function_600b29c
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x600b468

.word 0x4808160 @ 0x600b468
.arm
Function_600b46c: @ 600b46c :arm
	stmfd   sp!, {r3-r9,lr}
	sub     sp, sp, #0x8
	ldr     r0, [pc, #0x16c] @ [0x600b5e8] (=0x380fff4)
	ldr     r5, [pc, #0x16c] @ [0x600b5ec] (=0x6018308)
	ldr     r0, [r0]
	mov     r8, #0x0
	add     r0, r0, #126, 30 @ #0x1f8
	str     r8, [sp]
	add     r4, r0, #1, 22 @ #0x400
	add     r6, sp, #0x0
	mov     r7, #0x2
.arm
branch_600b498: @ 600b498 :arm
	mov     r0, r8, lsl #1
	mov     r1, r7
	mov     r2, r6
	add     r0, r0, #0x44
	bl      Function_6017ff8
	mov     r0, r8, lsl #1
	ldrh    r0, [r5, r0]
	add     r8, r8, #0x1
	add     r0, r0, #18, 10 @ #0x4800000
	ldr     r1, [sp]
	add     r0, r0, #2, 18 @ #0x8000
	strh    r1, [r0]
	cmp     r8, #0x10
	bcc     branch_600b498
	ldrh    r1, [r4, #0x2]
	ldr     r0, [pc, #0x114] @ [0x600b5f0] (=0x4808184)
	mov     r2, r1, lsr #7
	mov     r1, r2, lsl #8
	str     r1, [sp, #0x4]
	ldrh    r1, [r4, #0x2]
	mov     r7, #0xce
	and     r1, r1, #0x7f
	orr     r1, r1, r2, lsl #8
	str     r1, [sp, #0x4]
	strh    r1, [r0]
	ldrh    r0, [r4, #0x2]
	ldrh    r1, [r4]
	and     r0, r0, #0x7f
	add     r2, r0, #0x7
	mov     r0, r2, asr #2
	add     r0, r2, r0, lsr #29
	ldrh    r8, [r4, #0x4]
	cmp     r1, #0x3
	mov     r6, r0, asr #3
	bne     branch_600b588
	add     r0, r8, #0xce
	add     r2, r4, #0x8
	mov     r1, #0x1
	bl      Function_6017ff8
	mov     r9, #0x0
	add     r4, sp, #0x4
	mov     r6, r9
	mov     r5, #0x1
	b       branch_600b57c
@ 0x600b548

.arm
branch_600b548: @ 600b548 :arm
	str     r6, [sp, #0x4]
	mov     r0, r7
	mov     r1, r5
	mov     r2, r4
	bl      Function_6017ff8
	mov     r0, r9, lsl #8
	ldr     r1, [sp, #0x4]
	add     r0, r0, #5, 16 @ #0x50000
	orr     r0, r1, r0
	str     r0, [sp, #0x4]
	bl      Function_600b2cc
	add     r9, r9, #0x1
	add     r7, r7, #0x1
.arm
branch_600b57c: @ 600b57c :arm
	cmp     r9, r8
	bcc     branch_600b548
	b       branch_600b5dc
@ 0x600b588

.arm
branch_600b588: @ 600b588 :arm
	mov     r0, #0x0
	str     r0, [sp, #0x4]
	add     r5, sp, #0x4
	b       branch_600b5d4
@ 0x600b598

.arm
branch_600b598: @ 600b598 :arm
	mov     r0, r7
	mov     r1, r6
	mov     r2, r5
	bl      Function_6017ff8
	ldr     r0, [sp, #0x4]
	bl      Function_600b2cc
	ldrh    r0, [r4]
	sub     r8, r8, #0x1
	cmp     r0, #0x2
	ldreq   r1, [sp, #0x4]
	add     r7, r7, r6
	moveq   r0, r1, lsr #18
	cmpeq   r0, #0x9
	biceq   r0, r1, #31, 22 @ #0x7c00
	streq   r0, [r4, #0xc]
.arm
branch_600b5d4: @ 600b5d4 :arm
	cmp     r8, #0x0
	bne     branch_600b598
.arm
branch_600b5dc: @ 600b5dc :arm
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x600b5e8

.word 0x380fff4 @ 0x600b5e8
.word 0x6018308 @ 0x600b5ec
.word 0x4808184 @ 0x600b5f0
.arm
Function_600b5f4: @ 600b5f4 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x44] @ [0x600b644] (=0x380fff4)
	ldr     r4, [r0]
	bl      Function_600b648
	cmp     r0, #0x0
	addeq   r0, r4, #3, 24 @ #0x300
	ldreqh  r1, [r0, #0x3e]
	orreq   r1, r1, #0x40
	streqh  r1, [r0, #0x3e]
	beq     branch_600b63c
	add     r0, r4, #130, 30 @ #0x208
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6001dc0
	add     r0, r4, #141, 30 @ #0x234
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6001dc0
	add     r0, r4, #102, 28 @ #0x660
	bl      Function_6001dc0
.arm
branch_600b63c: @ 600b63c :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600b644

.word 0x380fff4 @ 0x600b644
.arm
Function_600b648: @ 600b648 :arm
	ldr     pc, [pc, #-0x4] @ [0x600b64c] (=0x37fa434)
@ 0x600b64c

.word 0x37fa434 @ 0x600b64c
.arm
Function_600b650: @ 600b650 :arm
	mov     r1, #0x0
	str     r1, [r0]
	bx      lr
@ 0x600b65c

.arm
Function_600b65c: @ 600b65c :arm
	ldr     r12, [pc, #0x4] @ [0x600b668] (=0x600ef50)
	ldr     r1, [pc, #0x4] @ [0x600b66c] (=0x600b650)
	bx      r12
@ 0x600b668

.word Function_600ef50 @ =0x600ef50, 0x600b668
.word Function_600b650 @ =0x600b650, 0x600b66c
.arm
Function_600b670: @ 600b670 :arm
	stmfd   sp!, {r3-r6,lr}
	sub     sp, sp, #0xc
	ldr     r2, [pc, #0x78] @ [0x600b6f8] (=0x380fff4)
	mov     r5, r0
	ldr     r0, [r2]
	mov     r4, r1
	add     r0, r0, #130, 30 @ #0x208
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6001ae8
	ldr     r0, [pc, #0x60] @ [0x600b6fc] (=0x82ea)
	mov     r1, #0x0
	umull   r3, r2, r5, r0
	mla     r2, r5, r1, r2
	mov     r5, r1
	mla     r2, r5, r0, r2
	mov     r6, r3, lsr #6
	orr     r6, r6, r2, lsl #26
	bl      Function_6001ad8
	adds    r0, r6, r0
	adc     r2, r1, #0x0
	mov     r1, r0
	str     r4, [sp, #0x4]
	mov     r0, r5
	str     r0, [sp, #0x8]
	ldr     r0, [pc, #0x20] @ [0x600b6f8] (=0x380fff4)
	str     r5, [sp]
	ldr     r0, [r0]
	mov     r3, r6
	add     r0, r0, #130, 30 @ #0x208
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_600b700
	add     sp, sp, #0xc
	ldmfd   sp!, {r3-r6,lr}
	bx      lr
@ 0x600b6f8

.word 0x380fff4 @ 0x600b6f8
.word 0x82ea @ 0x600b6fc
.arm
Function_600b700: @ 600b700 :arm
	ldr     pc, [pc, #-0x4] @ [0x600b704] (=0x37fa5f0)
@ 0x600b704

.word 0x37fa5f0 @ 0x600b704
.arm
Function_600b708: @ 600b708 :arm
	ldr     r0, [pc, #0x10] @ [0x600b720] (=0x380fff4)
	ldr     r12, [pc, #0x10] @ [0x600b724] (=0x37fa664)
	ldr     r0, [r0]
	add     r0, r0, #130, 30 @ #0x208
	add     r0, r0, #1, 22 @ #0x400
	bx      r12
@ 0x600b720

.word 0x380fff4 @ 0x600b720
.word 0x37fa664 @ 0x600b724
.arm
Function_600b728: @ 600b728 :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [pc, #0x70] @ [0x600b7a4] (=0x380fff4)
	mov     r0, #0x1
	ldr     r4, [r1]
	mov     r1, #0xa
	ldr     r2, [r4, #0x3ec]
	add     r2, r2, #0x1
	str     r2, [r4, #0x3ec]
	bl      Function_6008f00
	mov     r0, #0x2
	mov     r1, #0x12
	bl      Function_6008f00
	mov     r0, #0x1
	mov     r1, #0x11
	bl      Function_6008f00
	add     r0, r4, #1, 24 @ #0x100
	ldrh    r0, [r0, #0xfc]
	cmp     r0, #0x0
	beq     branch_600b780
	mov     r0, #0x2
	mov     r1, #0x13
	bl      Function_6008f00
.arm
branch_600b780: @ 600b780 :arm
	add     r0, r4, #3, 24 @ #0x300
	ldrh    r0, [r0, #0xf4]
	cmp     r0, #0x0
	beq     branch_600b79c
	mov     r0, #0x2
	mov     r1, #0x15
	bl      Function_6008f00
.arm
branch_600b79c: @ 600b79c :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600b7a4

.word 0x380fff4 @ 0x600b7a4
.arm
Function_600b7a8: @ 600b7a8 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r2, [pc, #0x5c] @ [0x600b810] (=0x380fff4)
	mov     r5, r0
	ldr     r0, [r2]
	mov     r4, r1
	add     r0, r0, #141, 30 @ #0x234
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6001ae8
	mov     r3, #0x0
	ldr     r0, [pc, #0x40] @ [0x600b814] (=0x82ea)
	mov     r1, r3
	umull   r2, r12, r5, r0
	mla     r12, r5, r3, r12
	mla     r12, r1, r0, r12
	mov     r1, r2, lsr #6
	str     r3, [sp]
	ldr     r0, [pc, #0x20] @ [0x600b810] (=0x380fff4)
	mov     r3, r4
	ldr     r0, [r0]
	mov     r2, r12, lsr #6
	add     r0, r0, #141, 30 @ #0x234
	add     r0, r0, #1, 22 @ #0x400
	orr     r1, r1, r12, lsl #26
	bl      Function_6001af0
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600b810

.word 0x380fff4 @ 0x600b810
.word 0x82ea @ 0x600b814
.arm
Function_600b818: @ 600b818 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r2, [pc, #0x70] @ [0x600b894] (=0x380fff4)
	mov     r5, r0
	ldr     r0, [r2]
	mov     r4, r1
	add     r0, r0, #141, 30 @ #0x234
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6001ae8
	ldr     r0, [pc, #0x58] @ [0x600b898] (=0x82ea)
	mov     r3, #0x0
	umull   r12, r2, r5, r0
	mla     r2, r5, r3, r2
	mov     r1, r3
	mla     r2, r1, r0, r2
	mov     r0, r12, lsr #6
	mov     r1, r2, lsr #6
	orr     r0, r0, r2, lsl #26
	mov     r2, #250, 30 @ #0x3e8
	bl      Function_600b1c8
	mov     r2, r1
	mov     r1, r0
	mov     r0, #0x0
	str     r0, [sp]
	ldr     r0, [pc, #0x18] @ [0x600b894] (=0x380fff4)
	mov     r3, r4
	ldr     r0, [r0]
	add     r0, r0, #141, 30 @ #0x234
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6001af0
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600b894

.word 0x380fff4 @ 0x600b894
.word 0x82ea @ 0x600b898
.arm
Function_600b89c: @ 600b89c :arm
	ldr     r0, [pc, #0x10] @ [0x600b8b4] (=0x380fff4)
	ldr     r12, [pc, #0x10] @ [0x600b8b8] (=0x37fa664)
	ldr     r0, [r0]
	add     r0, r0, #141, 30 @ #0x234
	add     r0, r0, #1, 22 @ #0x400
	bx      r12
@ 0x600b8b4

.word 0x380fff4 @ 0x600b8b4
.word 0x37fa664 @ 0x600b8b8
.arm
Function_600b8bc: @ 600b8bc :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r3, [pc, #0x68] @ [0x600b930] (=0x4805f60)
	add     r2, r2, #0x1
	mov     r5, r1
	bic     r2, r2, #0x1
	add     r1, r5, r2
	cmp     r1, r3
	mov     r6, r0
	subhi   r4, r3, r5
	subhi   r7, r2, r4
	movls   r4, r2
	movls   r7, #0x0
	mov     r0, r5
	mov     r1, r6
	mov     r2, r4
	bl      Function_6001ae0
	cmp     r7, #0x0
	beq     branch_600b928
	ldr     r0, [pc, #0x28] @ [0x600b934] (=0x380fff4)
	add     r3, r5, r4
	ldr     r0, [r0]
	mov     r2, r7
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0xde]
	add     r1, r6, r4
	sub     r0, r3, r0
	bl      Function_6001ae0
.arm
branch_600b928: @ 600b928 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x600b930

.word 0x4805f60 @ 0x600b930
.word 0x380fff4 @ 0x600b934
.arm
Function_600b938: @ 600b938 :arm
	ldr     r12, [pc, #0x14] @ [0x600b954] (=0x37fb040)
	mov     r3, r0
	add     r2, r2, #0x1
	mov     r0, r1
	mov     r1, r3
	bic     r2, r2, #0x1
	bx      r12
@ 0x600b954

.word 0x37fb040 @ 0x600b954
.arm
Function_600b958: @ 600b958 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r2
	mov     r0, r1
	mov     r4, r3
	mov     r1, r6
	mov     r2, #0x24
	bl      Function_6001ae0
	cmp     r4, #0x0
	beq     branch_600b994
	add     r2, r4, #0x1
	mov     r0, r5
	add     r1, r6, #0x24
	bic     r2, r2, #0x1
	bl      Function_6001ae0
.arm
branch_600b994: @ 600b994 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600b99c

.arm
Function_600b99c: @ 600b99c :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r2
	mov     r0, r1
	mov     r4, r3
	mov     r1, r6
	mov     r2, #0x24
	bl      Function_6001ae0
	cmp     r4, #0x0
	beq     branch_600b9d8
	add     r2, r4, #0x1
	mov     r0, r5
	add     r1, r6, #0x28
	bic     r2, r2, #0x1
	bl      Function_6001ae0
.arm
branch_600b9d8: @ 600b9d8 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600b9e0

.arm
Function_600b9e0: @ 600b9e0 :arm
	tst     r0, #0x1
	ldrneh  r2, [r0, #-0x1]
	andne   r2, r2, #0xff
	orrne   r1, r2, r1, lsl #8
	strneh  r1, [r0, #-0x1]
	ldreqh  r2, [r0]
	andeq   r1, r1, #0xff
	andeq   r2, r2, #255, 24 @ #0xff00
	orreq   r1, r2, r1
	streqh  r1, [r0]
	bx      lr
@ 0x600ba0c

.arm
Function_600ba0c: @ 600ba0c :arm
	tst     r0, #0x1
	ldrneh  r0, [r0, #-0x1]
	movne   r0, r0, asr #8
	ldreqh  r0, [r0]
	and     r0, r0, #0xff
	and     r0, r0, #0xff
	bx      lr
@ 0x600ba28

.arm
Function_600ba28: @ 600ba28 :arm
	ldr     r3, [pc, #0x24] @ [0x600ba54] (=0x380fff4)
	ldr     r2, [pc, #0x24] @ [0x600ba58] (=0xfff8)
	ldr     r3, [r3]
	and     r0, r0, r2
	add     r2, r0, #0x5
	add     r0, r3, #5, 24 @ #0x500
	strh    r2, [r0, #0xf0]
	add     r2, r3, #95, 28 @ #0x5f0
	orr     r0, r1, #0x1
	strh    r0, [r2, #0x2]
	bx      lr
@ 0x600ba54

.word 0x380fff4 @ 0x600ba54
.word 0xfff8 @ 0x600ba58
.arm
Function_600ba5c: @ 600ba5c :arm
	ldr     r1, [pc, #0xc] @ [0x600ba70] (=0x380fff4)
	ldr     r1, [r1]
	add     r1, r1, #5, 24 @ #0x500
	strh    r0, [r1, #0xf4]
	bx      lr
@ 0x600ba70

.word 0x380fff4 @ 0x600ba70
.arm
Function_600ba74: @ 600ba74 :arm
	ldr     r0, [pc, #0x24] @ [0x600baa0] (=0x380fff4)
	ldr     r0, [r0]
	add     r3, r0, #95, 28 @ #0x5f0
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r2, [r3, #0x2]
	ldrh    r1, [r3, #0x4]
	ldrh    r0, [r0, #0xf0]
	mla     r0, r1, r0, r2
	strh    r0, [r3, #0x4]
	ldrh    r0, [r3, #0x4]
	bx      lr
@ 0x600baa0

.word 0x380fff4 @ 0x600baa0
.arm
Function_600baa4: @ 600baa4 :arm
	stmfd   sp!, {r4,lr}
	ldr     r2, [pc, #0x6c] @ [0x600bb1c] (=0x60182e8)
	mov     r4, r1, lsl #28
	ldr     r3, [pc, #0x68] @ [0x600bb20] (=0xfff)
	mov     r4, r4, lsr #27
	mov     r12, r0, lsl #28
	mov     lr, r12, lsr #27
	and     r1, r3, r1, asr #4
	ldrh    r4, [r2, r4]
	mov     r1, r1, lsl #16
	mov     r0, r0, asr #4
	mov     r0, r0, lsl #28
	mov     r12, r0, lsr #27
	ldrh    r0, [r2, lr]
	eor     r1, r4, r1, lsr #16
	eor     r0, r1, r0
	mov     r0, r0, lsl #16
	mov     r1, r0, lsr #16
	mov     r0, r1, lsl #28
	mov     r0, r0, lsr #27
	and     r1, r3, r1, asr #4
	ldrh    r3, [r2, r0]
	mov     r0, r1, lsl #16
	ldrh    r1, [r2, r12]
	eor     r0, r3, r0, lsr #16
	eor     r0, r0, r1
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600bb1c

.word 0x60182e8 @ 0x600bb1c
.word 0xfff @ 0x600bb20
.arm
Function_600bb24: @ 600bb24 :arm
	stmfd   sp!, {r4,lr}
	ldr     r4, [r0, #0x8]
	ldr     r1, [pc, #0x64] @ [0x600bb98] (=0xb6b8)
	ldrh    r2, [r4, #-0x4]
	sub     lr, r4, #0x4
	cmp     r2, r1
	ldreqh  r2, [lr, #0x2]
	ldreq   r1, [pc, #0x54] @ [0x600bb9c] (=0x1d46)
	cmpeq   r2, r1
	moveq   r0, #0x0
	beq     branch_600bb90
	ldr     r3, [pc, #0x40] @ [0x600bb98] (=0xb6b8)
	mov     r12, #0x1
	strh    r12, [r4, #0xa]
	ldr     r2, [pc, #0x38] @ [0x600bb9c] (=0x1d46)
	strh    r3, [lr]
	strh    r2, [lr, #0x2]
	ldr     r1, [r0, #0x8]
	ldr     r0, [pc, #0x2c] @ [0x600bba0] (=0x380fff4)
	strh    r3, [r1, #0xc]
	strh    r2, [r1, #0xe]
	ldr     r1, [r0]
	mov     r0, r12
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r2, [r1, #0xfa]
	add     r2, r2, #0x1
	strh    r2, [r1, #0xfa]
.arm
branch_600bb90: @ 600bb90 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600bb98

.word 0xb6b8 @ 0x600bb98
.word 0x1d46 @ 0x600bb9c
.word 0x380fff4 @ 0x600bba0
.arm
Function_600bba4: @ 600bba4 :arm
	ldr     r0, [pc, #0x30] @ [0x600bbdc] (=0x4808004)
	mov     r1, #0x0
	strh    r1, [r0]
	mov     r2, #0x10
	add     r1, r0, #33, 28 @ #0x210
	b       branch_600bbd0
@ 0x600bbbc

.arm
branch_600bbbc: @ 600bbbc :arm
	ldrh    r0, [r1]
	cmp     r0, #0x0
	cmpne   r0, #0x9
	bxeq    lr
	sub     r2, r2, #0x1
.arm
branch_600bbd0: @ 600bbd0 :arm
	cmp     r2, #0x0
	bne     branch_600bbbc
	bx      lr
@ 0x600bbdc

.word 0x4808004 @ 0x600bbdc
.arm
Function_600bbe0: @ 600bbe0 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldrh    r0, [r4]
	cmp     r0, #0x0
	beq     branch_600bc20
	bl      Function_600bba4
	ldr     r1, [r4, #0xc]
	ldr     r0, [r4, #0x8]
	sub     r1, r1, #0x10
	bl      Function_6012ea4
	ldr     r0, [pc, #0x18] @ [0x600bc28] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r1, [r0, #0xfc]
	add     r1, r1, #0x1
	strh    r1, [r0, #0xfc]
.arm
branch_600bc20: @ 600bc20 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600bc28

.word 0x380fff4 @ 0x600bc28
.arm
Function_600bc2c: @ 600bc2c :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0xe8] @ [0x600bd20] (=0x380fff4)
	ldr     r2, [r0]
	add     r0, r2, #3, 24 @ #0x300
	ldrh    r1, [r0, #0x50]
	add     r0, r2, #0x2c
	cmp     r1, #0x1
	add     r4, r2, #209, 30 @ #0x344
	add     r5, r0, #1, 22 @ #0x400
	beq     branch_600bc64
	cmp     r1, #0x2
	beq     branch_600bc98
	cmp     r1, #0x3
	b       branch_600bcd4
@ 0x600bc64

.arm
branch_600bc64: @ 600bc64 :arm
	add     r0, r5, #0x78
	bl      Function_600bb24
	cmp     r0, #0x0
	beq     branch_600bc7c
	bl      Function_600bba4
	bl      Function_6013f94
.arm
branch_600bc7c: @ 600bc7c :arm
	add     r0, r5, #0x28
	bl      Function_600bb24
	cmp     r0, #0x0
	beq     branch_600bcd4
	add     r0, r5, #0x28
	bl      Function_600bbe0
	b       branch_600bcd4
@ 0x600bc98

.arm
branch_600bc98: @ 600bc98 :arm
	add     r0, r5, #0x64
	bl      Function_600bb24
	add     r0, r5, #0x28
	bl      Function_600bb24
	cmp     r0, #0x0
	beq     branch_600bcd4
	ldrh    r0, [r5, #0x28]
	cmp     r0, #0x0
	beq     branch_600bcc0
	bl      Function_600bba4
.arm
branch_600bcc0: @ 600bcc0 :arm
	ldrh    r0, [r4, #0x6a]
	bl      Function_6014ce0
	ldrh    r0, [r4, #0xb8]
	add     r0, r0, #0x1
	strh    r0, [r4, #0xb8]
.arm
branch_600bcd4: @ 600bcd4 :arm
	add     r0, r5, #0x14
	bl      Function_600bb24
	cmp     r0, #0x0
	beq     branch_600bcec
	add     r0, r5, #0x14
	bl      Function_600bbe0
.arm
branch_600bcec: @ 600bcec :arm
	mov     r0, r5
	bl      Function_600bb24
	cmp     r0, #0x0
	beq     branch_600bd04
	mov     r0, r5
	bl      Function_600bbe0
.arm
branch_600bd04: @ 600bd04 :arm
	ldr     r1, [pc, #0x18] @ [0x600bd24] (=0x4808004)
	ldrh    r0, [r1]
	cmp     r0, #0x0
	moveq   r0, #0x1
	streqh  r0, [r1]
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600bd20

.word 0x380fff4 @ 0x600bd20
.word 0x4808004 @ 0x600bd24
.arm
Function_600bd28: @ 600bd28 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #1, 8 @ #0x1000000
	bl      Function_6008ef0
	ldr     r1, [pc, #0x28] @ [0x600bd68] (=0x380fff4)
	ldr     r1, [r1]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r2, [r1, #0xf4]
	orr     r2, r2, r4
	strh    r2, [r1, #0xf4]
	bl      Function_6008ef8
	mov     r0, #0x2
	mov     r1, #0x15
	bl      Function_6008f00
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600bd68

.word 0x380fff4 @ 0x600bd68
.arm
Function_600bd6c: @ 600bd6c :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0x6c] @ [0x600bde4] (=0x380fff4)
	ldr     r1, [r0]
	add     r4, r1, #209, 30 @ #0x344
	ldrh    r0, [r4, #0xb0]
	cmp     r0, #0x0
	beq     branch_600bddc
	add     r0, r1, #98, 30 @ #0x188
	mov     r1, #0x12
	bl      Function_60090a4
	movs    r5, r0
	beq     branch_600bddc
	ldr     r1, [pc, #0x44] @ [0x600bde8] (=0x186)
	mov     r0, #0x1
	strh    r1, [r5, #0xc]
	strh    r0, [r5, #0xe]
	mov     r0, #1, 8 @ #0x1000000
	bl      Function_6008ef0
	ldrh    r2, [r4, #0xb0]
	mov     r1, #0x0
	strh    r2, [r5, #0x10]
	strh    r1, [r4, #0xb0]
	bl      Function_6008ef8
	ldr     r0, [pc, #0x14] @ [0x600bde4] (=0x380fff4)
	mov     r1, r5
	ldr     r0, [r0]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600f384
.arm
branch_600bddc: @ 600bddc :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600bde4

.word 0x380fff4 @ 0x600bde4
.word 0x186 @ 0x600bde8
.arm
Function_600bdec: @ 600bdec :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r2, [pc, #0x8c] @ [0x600be84] (=0x380fff4)
	ldr     r0, [r2]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r1, [r0, #0x3e]
	orr     r1, r1, #2, 18 @ #0x8000
	strh    r1, [r0, #0x3e]
	ldr     r0, [r2]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x4c]
	cmp     r0, #0x0
	beq     branch_600be58
	bl      Function_600b1d0
	ldr     r2, [pc, #0x5c] @ [0x600be84] (=0x380fff4)
	ldr     r0, [r2]
	add     r0, r0, #1, 22 @ #0x400
	ldrh    r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_600be54
	mov     r1, #0x0
	strh    r1, [r0, #0x4]
	ldr     r0, [r2]
	mov     r1, #0x6
	ldr     r0, [r0, #0x420]
	strh    r1, [r0, #0x4]
	bl      Function_601089c
.arm
branch_600be54: @ 600be54 :arm
	bl      Function_600a494
.arm
branch_600be58: @ 600be58 :arm
	ldr     r4, [pc, #0x28] @ [0x600be88] (=0xffff)
	mov     r5, #0x3
.arm
branch_600be60: @ 600be60 :arm
	mov     r0, r5
	bl      Function_6008fb8
	cmp     r0, r4
	bne     branch_600be60
	mov     r0, #0x3
	mov     r1, #0x17
	bl      Function_6008f00
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600be84

.word 0x380fff4 @ 0x600be84
.word 0xffff @ 0x600be88
.arm
Function_600be8c: @ 600be8c :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x40] @ [0x600bed8] (=0x380fff4)
	ldr     r4, [r0]
	bl      Function_600d9f0
	ldr     r1, [pc, #0x34] @ [0x600bed8] (=0x380fff4)
	add     r0, r4, #98, 30 @ #0x188
	ldr     r1, [r1]
	ldr     r1, [r1, #0x318]
	sub     r1, r1, #0xc
	bl      Function_6009140
	ldr     r1, [pc, #0x1c] @ [0x600bed8] (=0x380fff4)
	add     r0, r4, #98, 30 @ #0x188
	ldr     r1, [r1]
	ldr     r1, [r1, #0x3e0]
	sub     r1, r1, #0xc
	bl      Function_6009140
	bl      Function_6001ac8
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600bed8

.word 0x380fff4 @ 0x600bed8
.arm
Function_600bedc: @ 600bedc :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r12, #0x0
	ldr     r0, [pc, #0x184] @ [0x600c070] (=0x601857c)
	ldr     r6, [pc, #0x184] @ [0x600c074] (=0x601850c)
	mov     r3, r12
	mov     r1, r12
	b       branch_600bf50
@ 0x600bef8

.arm
branch_600bef8: @ 600bef8 :arm
	mov     r4, r3, lsl #1
	ldrh    r5, [r6, r4]
	mov     r2, r1
	b       branch_600bf44
@ 0x600bf08

.arm
branch_600bf08: @ 600bf08 :arm
	mov     lr, r2, lsl #2
	add     r4, r0, r2, lsl #2
	ldrh    lr, [r0, lr]
	ldrh    r4, [r4, #0x2]
	add     lr, lr, #18, 10 @ #0x4800000
	and     r4, r5, r4
	add     lr, lr, #2, 18 @ #0x8000
	strh    r4, [lr]
	ldrh    lr, [lr]
	cmp     lr, r4
	beq     branch_600bf40
	cmp     r12, #0x20
	add     r12, r12, #0x1
	bhi     branch_600c048
.arm
branch_600bf40: @ 600bf40 :arm
	add     r2, r2, #0x1
.arm
branch_600bf44: @ 600bf44 :arm
	cmp     r2, #0x1b
	bcc     branch_600bf08
	add     r3, r3, #0x1
.arm
branch_600bf50: @ 600bf50 :arm
	cmp     r3, #0x3
	bcc     branch_600bef8
	ldr     r4, [pc, #0x118] @ [0x600c078] (=0x1234)
	ldr     r3, [pc, #0x10c] @ [0x600c070] (=0x601857c)
	mov     r5, #0x0
.arm
branch_600bf64: @ 600bf64 :arm
	mov     r0, r5, lsl #2
	add     r1, r3, r5, lsl #2
	ldrh    r0, [r3, r0]
	ldrh    r2, [r1, #0x2]
	add     r1, r4, #141, 30 @ #0x234
	add     r0, r0, #18, 10 @ #0x4800000
	add     r1, r1, #1, 20 @ #0x1000
	add     r5, r5, #0x1
	and     r2, r4, r2
	add     r0, r0, #2, 18 @ #0x8000
	mov     r1, r1, lsl #16
	strh    r2, [r0]
	cmp     r5, #0x1b
	mov     r4, r1, lsr #16
	bcc     branch_600bf64
	ldr     r5, [pc, #0xd0] @ [0x600c078] (=0x1234)
	ldr     r3, [pc, #0xc4] @ [0x600c070] (=0x601857c)
	mov     r4, #0x0
	b       branch_600bff8
@ 0x600bfb0

.arm
branch_600bfb0: @ 600bfb0 :arm
	mov     r0, r4, lsl #2
	ldrh    r0, [r3, r0]
	add     r1, r3, r4, lsl #2
	add     r0, r0, #18, 10 @ #0x4800000
	add     r0, r0, #2, 18 @ #0x8000
	ldrh    r1, [r1, #0x2]
	ldrh    r2, [r0]
	and     r0, r5, r1
	cmp     r2, r0
	beq     branch_600bfe4
	cmp     r12, #0x20
	add     r12, r12, #0x1
	bhi     branch_600c048
.arm
branch_600bfe4: @ 600bfe4 :arm
	add     r0, r5, #141, 30 @ #0x234
	add     r0, r0, #1, 20 @ #0x1000
	mov     r0, r0, lsl #16
	mov     r5, r0, lsr #16
	add     r4, r4, #0x1
.arm
branch_600bff8: @ 600bff8 :arm
	cmp     r4, #0x1b
	bcc     branch_600bfb0
	mov     r3, #0x0
	ldr     r2, [pc, #0x64] @ [0x600c070] (=0x601857c)
	mov     r1, r3
	b       branch_600c040
@ 0x600c010

.arm
branch_600c010: @ 600c010 :arm
	mov     r0, r3, lsl #2
	ldrh    r0, [r2, r0]
	add     r0, r0, #18, 10 @ #0x4800000
	add     r0, r0, #2, 18 @ #0x8000
	strh    r1, [r0]
	ldrh    r0, [r0]
	cmp     r0, #0x0
	beq     branch_600c03c
	cmp     r12, #0x20
	add     r12, r12, #0x1
	bhi     branch_600c048
.arm
branch_600c03c: @ 600c03c :arm
	add     r3, r3, #0x1
.arm
branch_600c040: @ 600c040 :arm
	cmp     r3, #0x1b
	bcc     branch_600c010
.arm
branch_600c048: @ 600c048 :arm
	cmp     r12, #0x0
	beq     branch_600c068
	ldr     r0, [pc, #0x24] @ [0x600c07c] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r1, [r0, #0x3e]
	orr     r1, r1, #0x1
	strh    r1, [r0, #0x3e]
.arm
branch_600c068: @ 600c068 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600c070

.word 0x601857c @ 0x600c070
.word 0x601850c @ 0x600c074
.word 0x1234 @ 0x600c078
.word 0x380fff4 @ 0x600c07c
.arm
Function_600c080: @ 600c080 :arm
	stmfd   sp!, {r3,lr}
	ldr     lr, [pc, #0x16c] @ [0x600c1f8] (=0x4804000)
	mov     r0, #0x0
	ldr     r3, [pc, #0x168] @ [0x600c1fc] (=0xffff)
	mov     r2, r0
.arm
branch_600c094: @ 600c094 :arm
	sub     r1, r3, #0x1
	mov     r12, r3
	mov     r1, r1, lsl #16
	add     r2, r2, #0x2
	cmp     r2, #2, 20 @ #0x2000
	mov     r3, r1, lsr #16
	strh    r12, [lr], #0x2
	bcc     branch_600c094
	ldr     r2, [pc, #0x13c] @ [0x600c1f8] (=0x4804000)
	ldr     r3, [pc, #0x13c] @ [0x600c1fc] (=0xffff)
	mov     r12, #0x0
	b       branch_600c0f0
@ 0x600c0c4

.arm
branch_600c0c4: @ 600c0c4 :arm
	ldrh    r1, [r2]
	cmp     r1, r3
	beq     branch_600c0dc
	cmp     r0, #0x20
	add     r0, r0, #0x1
	bhi     branch_600c1d0
.arm
branch_600c0dc: @ 600c0dc :arm
	sub     r1, r3, #0x1
	mov     r1, r1, lsl #16
	add     r12, r12, #0x2
	add     r2, r2, #0x2
	mov     r3, r1, lsr #16
.arm
branch_600c0f0: @ 600c0f0 :arm
	cmp     r12, #2, 20 @ #0x2000
	bcc     branch_600c0c4
	ldr     r2, [pc, #0xf8] @ [0x600c1f8] (=0x4804000)
	ldr     r3, [pc, #0xfc] @ [0x600c200] (=0x5a5a)
	mov     r12, #0x0
.arm
branch_600c104: @ 600c104 :arm
	mvn     r1, r3
	add     r12, r12, #0x2
	mov     r1, r1, lsl #16
	strh    r3, [r2], #0x2
	cmp     r12, #2, 20 @ #0x2000
	mov     r3, r1, lsr #16
	bcc     branch_600c104
	ldr     r2, [pc, #0xd0] @ [0x600c1f8] (=0x4804000)
	ldr     r3, [pc, #0xd4] @ [0x600c200] (=0x5a5a)
	mov     r12, #0x0
	b       branch_600c15c
@ 0x600c130

.arm
branch_600c130: @ 600c130 :arm
	ldrh    r1, [r2]
	cmp     r1, r3
	beq     branch_600c148
	cmp     r0, #0x20
	add     r0, r0, #0x1
	bhi     branch_600c1d0
.arm
branch_600c148: @ 600c148 :arm
	mvn     r1, r3
	mov     r1, r1, lsl #16
	add     r12, r12, #0x2
	add     r2, r2, #0x2
	mov     r3, r1, lsr #16
.arm
branch_600c15c: @ 600c15c :arm
	cmp     r12, #2, 20 @ #0x2000
	bcc     branch_600c130
	ldr     r2, [pc, #0x8c] @ [0x600c1f8] (=0x4804000)
	ldr     r3, [pc, #0x94] @ [0x600c204] (=0xa5a5)
	mov     r12, #0x0
.arm
branch_600c170: @ 600c170 :arm
	mvn     r1, r3
	add     r12, r12, #0x2
	mov     r1, r1, lsl #16
	strh    r3, [r2], #0x2
	cmp     r12, #2, 20 @ #0x2000
	mov     r3, r1, lsr #16
	bcc     branch_600c170
	ldr     r2, [pc, #0x64] @ [0x600c1f8] (=0x4804000)
	ldr     r3, [pc, #0x6c] @ [0x600c204] (=0xa5a5)
	mov     r12, #0x0
	b       branch_600c1c8
@ 0x600c19c

.arm
branch_600c19c: @ 600c19c :arm
	ldrh    r1, [r2]
	cmp     r1, r3
	beq     branch_600c1b4
	cmp     r0, #0x20
	add     r0, r0, #0x1
	bhi     branch_600c1d0
.arm
branch_600c1b4: @ 600c1b4 :arm
	mvn     r1, r3
	mov     r1, r1, lsl #16
	add     r12, r12, #0x2
	add     r2, r2, #0x2
	mov     r3, r1, lsr #16
.arm
branch_600c1c8: @ 600c1c8 :arm
	cmp     r12, #2, 20 @ #0x2000
	bcc     branch_600c19c
.arm
branch_600c1d0: @ 600c1d0 :arm
	cmp     r0, #0x0
	beq     branch_600c1f0
	ldr     r0, [pc, #0x28] @ [0x600c208] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r1, [r0, #0x3e]
	orr     r1, r1, #0x2
	strh    r1, [r0, #0x3e]
.arm
branch_600c1f0: @ 600c1f0 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600c1f8

.word 0x4804000 @ 0x600c1f8
.word 0xffff @ 0x600c1fc
.word 0x5a5a @ 0x600c200
.word 0xa5a5 @ 0x600c204
.word 0x380fff4 @ 0x600c208
.arm
Function_600c20c: @ 600c20c :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r0, [pc, #0x2c8] @ [0x600c4e0] (=0x380fff4)
	mov     r7, #0x0
	ldr     r0, [r0]
	mov     r6, #0x0
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r0, [r0, #0xf8]
	mov     r5, #0xff
	cmp     r0, #0x5
	ldreq   r10, [pc, #0x2ac] @ [0x600c4e4] (=0x6018512)
	mvn     r4, #0x0
	ldrne   r10, [pc, #0x2a8] @ [0x600c4e8] (=0x6018544)
	b       branch_600c25c
@ 0x600c240

.arm
branch_600c240: @ 600c240 :arm
	mov     r0, r6
	mov     r1, r5
	bl      Function_600b29c
	cmp     r0, r4
	moveq   r7, #0x1
	beq     branch_600c4b8
	add     r6, r6, #0x1
.arm
branch_600c25c: @ 600c25c :arm
	cmp     r6, #0x69
	bcc     branch_600c240
	mov     r5, #0x0
	mov     r4, r5
	b       branch_600c2ac
@ 0x600c270

.arm
branch_600c270: @ 600c270 :arm
	mov     r0, r4, lsl #1
	ldrh    r0, [r10, r0]
	cmp     r5, r0
	addeq   r4, r4, #0x1
	beq     branch_600c2a8
	mov     r0, r5
	bl      Function_600b270
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	cmp     r0, #0xff
	beq     branch_600c2a8
	cmp     r7, #0x20
	add     r7, r7, #0x1
	bhi     branch_600c4b8
.arm
branch_600c2a8: @ 600c2a8 :arm
	add     r5, r5, #0x1
.arm
branch_600c2ac: @ 600c2ac :arm
	cmp     r5, #0x69
	bcc     branch_600c270
	mov     r5, #0x0
	mov     r4, r5
.arm
branch_600c2bc: @ 600c2bc :arm
	mov     r0, r5
	mov     r1, r4
	bl      Function_600b29c
	add     r5, r5, #0x1
	cmp     r5, #0x69
	bcc     branch_600c2bc
	mov     r4, #0x0
	mov     r5, r4
	b       branch_600c318
@ 0x600c2e0

.arm
branch_600c2e0: @ 600c2e0 :arm
	mov     r0, r5, lsl #1
	ldrh    r0, [r10, r0]
	cmp     r4, r0
	addeq   r5, r5, #0x1
	beq     branch_600c314
	mov     r0, r4
	bl      Function_600b270
	mov     r0, r0, lsl #16
	movs    r0, r0, lsr #16
	beq     branch_600c314
	cmp     r7, #0x20
	add     r7, r7, #0x1
	bhi     branch_600c4b8
.arm
branch_600c314: @ 600c314 :arm
	add     r4, r4, #0x1
.arm
branch_600c318: @ 600c318 :arm
	cmp     r4, #0x69
	bcc     branch_600c2e0
	mov     r4, #0x55
	mov     r5, #0x0
.arm
branch_600c328: @ 600c328 :arm
	mov     r0, r5
	mov     r1, r4
	bl      Function_600b29c
	mvn     r0, r4
	add     r5, r5, #0x1
	mov     r0, r0, lsl #16
	cmp     r5, #0x69
	mov     r4, r0, lsr #16
	bcc     branch_600c328
	mov     r4, #0x0
	mov     r6, r4
	mov     r5, #0x55
	b       branch_600c3a0
@ 0x600c35c

.arm
branch_600c35c: @ 600c35c :arm
	mov     r0, r6, lsl #1
	ldrh    r0, [r10, r0]
	cmp     r4, r0
	addeq   r6, r6, #0x1
	beq     branch_600c394
	mov     r0, r4
	bl      Function_600b270
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	cmp     r0, r5
	beq     branch_600c394
	cmp     r7, #0x20
	add     r7, r7, #0x1
	bhi     branch_600c4b8
.arm
branch_600c394: @ 600c394 :arm
	mvn     r0, r5
	and     r5, r0, #0xff
	add     r4, r4, #0x1
.arm
branch_600c3a0: @ 600c3a0 :arm
	cmp     r4, #0x69
	bcc     branch_600c35c
	mov     r5, #0xff
	mov     r4, #0x0
.arm
branch_600c3b0: @ 600c3b0 :arm
	mov     r0, r4
	mov     r1, r5
	bl      Function_600b29c
	sub     r0, r5, #0x1
	add     r4, r4, #0x1
	mov     r0, r0, lsl #16
	cmp     r4, #0x69
	mov     r5, r0, lsr #16
	bcc     branch_600c3b0
	mov     r4, #0x0
	mov     r6, r4
	mov     r5, #0xff
	b       branch_600c42c
@ 0x600c3e4

.arm
branch_600c3e4: @ 600c3e4 :arm
	mov     r0, r6, lsl #1
	ldrh    r0, [r10, r0]
	cmp     r4, r0
	addeq   r6, r6, #0x1
	beq     branch_600c41c
	mov     r0, r4
	bl      Function_600b270
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	cmp     r0, r5
	beq     branch_600c41c
	cmp     r7, #0x20
	add     r7, r7, #0x1
	bhi     branch_600c4b8
.arm
branch_600c41c: @ 600c41c :arm
	sub     r0, r5, #0x1
	mov     r0, r0, lsl #16
	add     r4, r4, #0x1
	mov     r5, r0, lsr #16
.arm
branch_600c42c: @ 600c42c :arm
	cmp     r4, #0x69
	bcc     branch_600c3e4
	mov     r8, #0x0
	mov     r9, r8
	mov     r4, #0x1
	mov     r11, r8
	b       branch_600c4b0
@ 0x600c448

.arm
branch_600c448: @ 600c448 :arm
	mov     r0, r9, lsl #1
	ldrh    r0, [r10, r0]
	cmp     r8, r0
	addeq   r9, r9, #0x1
	beq     branch_600c4ac
	mov     r6, r4
	mov     r5, r11
	b       branch_600c4a4
@ 0x600c468

.arm
branch_600c468: @ 600c468 :arm
	mov     r0, r8
	mov     r1, r6
	bl      Function_600b29c
	mov     r0, r8
	bl      Function_600b270
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	cmp     r0, r6
	beq     branch_600c498
	cmp     r7, #0x20
	add     r7, r7, #0x1
	bhi     branch_600c4b8
.arm
branch_600c498: @ 600c498 :arm
	mov     r0, r6, lsl #1
	and     r6, r0, #0xff
	add     r5, r5, #0x1
.arm
branch_600c4a4: @ 600c4a4 :arm
	cmp     r5, #0x9
	bcc     branch_600c468
.arm
branch_600c4ac: @ 600c4ac :arm
	add     r8, r8, #0x1
.arm
branch_600c4b0: @ 600c4b0 :arm
	cmp     r8, #0x69
	bcc     branch_600c448
.arm
branch_600c4b8: @ 600c4b8 :arm
	cmp     r7, #0x0
	beq     branch_600c4d8
	ldr     r0, [pc, #0x18] @ [0x600c4e0] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r1, [r0, #0x3e]
	orr     r1, r1, #0x8
	strh    r1, [r0, #0x3e]
.arm
branch_600c4d8: @ 600c4d8 :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x600c4e0

.word 0x380fff4 @ 0x600c4e0
.word 0x6018512 @ 0x600c4e4
.word 0x6018544 @ 0x600c4e8
.arm
Function_600c4ec: @ 600c4ec :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r5, [pc, #0xc0] @ [0x600c5b8] (=0x4808010)
	mov     r4, #0x1
.arm
branch_600c4f8: @ 600c4f8 :arm
	ldrh    r1, [r5]
	ldrh    r0, [r5, #0x2]
	ands    r6, r1, r0
	beq     branch_600c5a0
	tst     r6, #0x80
	beq     branch_600c514
	bl      Function_600d440
.arm
branch_600c514: @ 600c514 :arm
	tst     r6, #0x40
	beq     branch_600c520
	bl      Function_600d54c
.arm
branch_600c520: @ 600c520 :arm
	tst     r6, #2, 18 @ #0x8000
	beq     branch_600c52c
	bl      Function_600c5c0
.arm
branch_600c52c: @ 600c52c :arm
	tst     r6, #1, 18 @ #0x4000
	beq     branch_600c538
	bl      Function_600c64c
.arm
branch_600c538: @ 600c538 :arm
	tst     r6, #2, 20 @ #0x2000
	beq     branch_600c544
	bl      Function_600c8f0
.arm
branch_600c544: @ 600c544 :arm
	tst     r6, #2, 22 @ #0x800
	beq     branch_600c550
	bl      Function_600c95c
.arm
branch_600c550: @ 600c550 :arm
	tst     r6, #0x8
	beq     branch_600c55c
	bl      Function_600c9a0
.arm
branch_600c55c: @ 600c55c :arm
	tst     r6, #0x4
	beq     branch_600c568
	bl      Function_600cab0
.arm
branch_600c568: @ 600c568 :arm
	tst     r6, #0x1
	beq     branch_600c574
	bl      Function_600ce94
.arm
branch_600c574: @ 600c574 :arm
	tst     r6, #0x30
	beq     branch_600c580
	bl      Function_600c970
.arm
branch_600c580: @ 600c580 :arm
	tst     r6, #0x2
	beq     branch_600c58c
	bl      Function_600cc2c
.arm
branch_600c58c: @ 600c58c :arm
	tst     r6, #1, 20 @ #0x1000
	beq     branch_600c4f8
	mov     r0, r4
	bl      Function_600d350
	b       branch_600c4f8
@ 0x600c5a0

.arm
branch_600c5a0: @ 600c5a0 :arm
	ldr     r1, [pc, #0x14] @ [0x600c5bc] (=0x380fff8)
	ldr     r0, [r1]
	orr     r0, r0, #1, 8 @ #0x1000000
	str     r0, [r1]
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600c5b8

.word 0x4808010 @ 0x600c5b8
.word 0x380fff8 @ 0x600c5bc
.arm
Function_600c5c0: @ 600c5c0 :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [pc, #0x78] @ [0x600c644] (=0x380fff4)
	ldr     r0, [pc, #0x78] @ [0x600c648] (=0x4808010)
	ldr     r2, [r1]
	mov     r1, #2, 18 @ #0x8000
	strh    r1, [r0]
	add     r4, r2, #209, 30 @ #0x344
	ldrh    r0, [r4, #0x8]
	cmp     r0, #0x40
	bne     branch_600c634
	ldrh    r0, [r4, #0x7e]
	cmp     r0, #0x0
	beq     branch_600c634
	ldrh    r1, [r4, #0x72]
	ldrh    r0, [r4, #0x70]
	cmp     r1, r0
	bne     branch_600c634
	ldrh    r0, [r4, #0x80]
	add     r0, r0, #0x1
	strh    r0, [r4, #0x80]
	ldrh    r1, [r4, #0x80]
	ldrh    r0, [r4, #0x7e]
	cmp     r1, r0
	bls     branch_600c634
	mov     r2, #0x0
	mov     r0, #0x1
	mov     r1, #0xd
	strh    r2, [r4, #0x80]
	bl      Function_6008f00
.arm
branch_600c634: @ 600c634 :arm
	mov     r0, #0x1
	strh    r0, [r4, #0x10]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600c644

.word 0x380fff4 @ 0x600c644
.word 0x4808010 @ 0x600c648
.arm
Function_600c64c: @ 600c64c :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r6, [pc, #0x278] @ [0x600c8d0] (=0x380fff4)
	ldr     r2, [pc, #0x278] @ [0x600c8d4] (=0x4808010)
	ldr     r3, [r6]
	mov     r0, #1, 18 @ #0x4000
	strh    r0, [r2]
	add     r4, r3, #209, 30 @ #0x344
	ldrh    r1, [r4, #0xc]
	add     r0, r3, #0x2c
	cmp     r1, #0x1
	add     r5, r3, #199, 30 @ #0x31c
	add     r7, r0, #1, 22 @ #0x400
	beq     branch_600c694
	cmp     r1, #0x2
	beq     branch_600c748
	cmp     r1, #0x3
	beq     branch_600c78c
	b       branch_600c8c8
@ 0x600c694

.arm
branch_600c694: @ 600c694 :arm
	ldr     r1, [r7, #0x80]
	ldrh    r6, [r6, #-0x4]
	ldrh    r0, [r4, #0x96]
	add     r1, r1, #0x24
	add     r8, r1, r0
	add     r0, r8, #0x8
	and     r1, r6, #0xff
	bl      Function_600b9e0
	mov     r1, r6, lsr #8
	add     r0, r8, #0x9
	and     r1, r1, #0xff
	bl      Function_600b9e0
	ldrh    r0, [r4, #0xe]
	cmp     r0, #0x1
	bne     branch_600c6e8
	ldr     r1, [pc, #0x200] @ [0x600c8d8] (=0x4808134)
	ldrh    r2, [r5, #0x20]
	ldrh    r0, [r1]
	add     r0, r2, r0
	add     r0, r0, #0x1
	strh    r0, [r1]
.arm
branch_600c6e8: @ 600c6e8 :arm
	ldr     r0, [pc, #0x1e0] @ [0x600c8d0] (=0x380fff4)
	ldr     r1, [pc, #0x1e8] @ [0x600c8dc] (=0x48080b6)
	ldr     r0, [r0]
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r3, [r0, #0x2e]
	ldrh    r2, [r0, #0x32]
	mvn     r3, r3
	orr     r2, r3, r2
	strh    r2, [r0, #0x30]
	ldrh    r0, [r1]
	tst     r0, #0x18
	bne     branch_600c724
	and     r0, r0, #0x6
	cmp     r0, #0x2
	bne     branch_600c738
.arm
branch_600c724: @ 600c724 :arm
	ldr     r0, [r7, #0x8c]
	bic     r0, r0, #0x2
	str     r0, [r7, #0x8c]
	bl      Function_600d7bc
	b       branch_600c8c8
@ 0x600c738

.arm
branch_600c738: @ 600c738 :arm
	ldr     r0, [r7, #0x8c]
	orr     r0, r0, #0x2
	str     r0, [r7, #0x8c]
	b       branch_600c8c8
@ 0x600c748

.arm
branch_600c748: @ 600c748 :arm
	ldrh    r0, [r4, #0x12]
	cmp     r0, #0x0
	ldreq   r1, [pc, #0x188] @ [0x600c8e0] (=0xffff)
	addeq   r0, r2, #73, 30 @ #0x124
	streqh  r1, [r0]
	beq     branch_600c778
	add     r1, r2, #73, 30 @ #0x124
	ldrh    r2, [r5, #0x20]
	ldrh    r0, [r1]
	add     r0, r2, r0
	add     r0, r0, #0x1
	strh    r0, [r1]
.arm
branch_600c778: @ 600c778 :arm
	ldrh    r0, [r4, #0x1a]
	cmp     r0, #0x2
	bne     branch_600c78c
	mov     r0, #0x2
	bl      Function_600a454
.arm
branch_600c78c: @ 600c78c :arm
	ldrh    r0, [r4, #0x8]
	cmp     r0, #0x40
	movne   r1, #0x1
	bne     branch_600c7d8
	ldrh    r0, [r4, #0x72]
	mov     r1, #0x0
	cmp     r0, #0x1
	ldrh    r0, [r4, #0x14]
	moveq   r1, #0x1
	cmp     r0, #0x0
	beq     branch_600c7d8
	ldrh    r0, [r4, #0x76]
	cmp     r0, #0x1
	beq     branch_600c7d4
	cmp     r0, #0x0
	ldreqh  r0, [r4, #0x74]
	cmpeq   r0, #0x1
	bne     branch_600c7d8
.arm
branch_600c7d4: @ 600c7d4 :arm
	mov     r1, #0x1
.arm
branch_600c7d8: @ 600c7d8 :arm
	cmp     r1, #0x0
	ldr     r1, [pc, #0x100] @ [0x600c8e4] (=0x4808038)
	ldrneh  r0, [r1]
	orrne   r0, r0, #0x1
	strneh  r0, [r1]
	ldreqh  r0, [r1]
	biceq   r0, r0, #0x1
	streqh  r0, [r1]
	ldr     r1, [pc, #0xe8] @ [0x600c8e8] (=0x4808118)
	mov     r8, #0x0
	ldrh    r0, [r1]
	mov     r6, #0x2
	cmp     r0, #0xa
	movhi   r0, #0x0
	strhih  r0, [r1, #-0xd0]
	ldrh    r0, [r4, #0x72]
	mov     r5, r8
	sub     r0, r0, #0x1
	strh    r0, [r4, #0x72]
	ldrh    r0, [r4, #0x72]
	mov     r10, #0x14
	cmp     r0, #0x0
	ldreqh  r0, [r4, #0x70]
	streqh  r0, [r4, #0x72]
	ldrh    r1, [r4, #0x76]
	sub     r0, r1, #0x1
	strh    r0, [r4, #0x76]
	cmp     r1, #0x0
	ldreqh  r0, [r4, #0x74]
	subeq   r0, r0, #0x1
	streqh  r0, [r4, #0x76]
	mov     r4, #0xe
.arm
branch_600c858: @ 600c858 :arm
	mul     r1, r8, r10
	ldrh    r0, [r7, r1]
	add     r9, r7, r1
	cmp     r0, #0x0
	beq     branch_600c8b0
	ldr     r0, [r9, #0xc]
	ldrh    r1, [r0, #0x8]
	cmp     r1, #0x0
	bne     branch_600c8b0
	bl      Function_601300c
	cmp     r0, #0x0
	beq     branch_600c8b0
	mov     r0, r8
	bl      Function_6013a64
	ldr     r1, [r9, #0x8]
	mov     r0, r5
	strh    r6, [r1]
	mov     r1, r4
	bl      Function_6008f00
	ldrh    r0, [r7, #0xae]
	add     r0, r0, #0x1
	strh    r0, [r7, #0xae]
.arm
branch_600c8b0: @ 600c8b0 :arm
	add     r8, r8, #0x1
	cmp     r8, #0x2
	bcc     branch_600c858
	ldr     r0, [pc, #0x28] @ [0x600c8ec] (=0x48080ae)
	mov     r1, #0xd
	strh    r1, [r0]
.arm
branch_600c8c8: @ 600c8c8 :arm
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x600c8d0

.word 0x380fff4 @ 0x600c8d0
.word 0x4808010 @ 0x600c8d4
.word 0x4808134 @ 0x600c8d8
.word 0x48080b6 @ 0x600c8dc
.word 0xffff @ 0x600c8e0
.word 0x4808038 @ 0x600c8e4
.word 0x4808118 @ 0x600c8e8
.word 0x48080ae @ 0x600c8ec
.arm
Function_600c8f0: @ 600c8f0 :arm
	ldr     r0, [pc, #0x5c] @ [0x600c954] (=0x380fff4)
	ldr     r1, [pc, #0x5c] @ [0x600c958] (=0x4808010)
	ldr     r2, [r0]
	mov     r0, #2, 20 @ #0x2000
	strh    r0, [r1]
	mov     r0, #0xd
	add     r2, r2, #209, 30 @ #0x344
	strh    r0, [r1, #0x9c]
	ldrh    r0, [r2, #0x1a]
	cmp     r0, #0x1
	moveq   r0, #0x2
	streqh  r0, [r2, #0x1a]
	bxeq    lr
	cmp     r0, #0x2
	moveq   r0, #0x0
	streqh  r0, [r2, #0x1a]
	bxeq    lr
	ldrh    r0, [r2, #0xc]
	cmp     r0, #0x2
	bxne    lr
	ldrh    r0, [r2, #0x8]
	cmp     r0, #0x40
	movne   r0, #0x0
	strneh  r0, [r1, #0x38]
	bx      lr
@ 0x600c954

.word 0x380fff4 @ 0x600c954
.word 0x4808010 @ 0x600c958
.arm
Function_600c95c: @ 600c95c :arm
	ldr     r0, [pc, #0x8] @ [0x600c96c] (=0x4808010)
	mov     r1, #2, 22 @ #0x800
	strh    r1, [r0]
	bx      lr
@ 0x600c96c

.word 0x4808010 @ 0x600c96c
.arm
Function_600c970: @ 600c970 :arm
	stmfd   sp!, {r3,lr}
	bl      Function_600a9f8
	ldr     r1, [pc, #0x18] @ [0x600c998] (=0x48081ac)
	ldr     r2, [pc, #0x18] @ [0x600c99c] (=0xffff)
	sub     r0, r1, #103, 30 @ #0x19c
	strh    r2, [r1]
	mov     r1, #0x30
	strh    r1, [r0]
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600c998

.word 0x48081ac @ 0x600c998
.word 0xffff @ 0x600c99c
.arm
Function_600c9a0: @ 600c9a0 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r1, [pc, #0xf8] @ [0x600caa4] (=0x4808010)
	mov     r2, #0x8
	ldr     r0, [pc, #0xf4] @ [0x600caa8] (=0x380fff4)
	strh    r2, [r1]
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x3a]
	mov     r0, r0, lsl #27
	movs    r0, r0, lsr #31
	beq     branch_600c9e8
	add     r0, r1, #99, 30 @ #0x18c
	ldrh    r0, [r0]
	tst     r0, #0x1
	addeq   r1, r1, #10, 26 @ #0x280
	ldreqh  r0, [r1]
	eoreq   r0, r0, #0x1
	streqh  r0, [r1]
.arm
branch_600c9e8: @ 600c9e8 :arm
	ldr     r0, [pc, #0xb8] @ [0x600caa8] (=0x380fff4)
	ldr     r1, [r0]
	add     r0, r1, #6, 24 @ #0x600
	ldrh    r0, [r0, #0x90]
	tst     r0, #0x8
	beq     branch_600ca9c
	ldr     r4, [pc, #0xa4] @ [0x600caac] (=0x4808032)
	add     r0, r1, #0x2c
	mov     r2, #0x0
	add     r1, r1, #209, 30 @ #0x344
	add     r3, r0, #1, 22 @ #0x400
	mov     r5, r2
	mov     lr, #2, 18 @ #0x8000
	mov     r12, #0x14
.arm
branch_600ca20: @ 600ca20 :arm
	mul     r6, r2, r12
	ldrh    r0, [r3, r6]
	add     r6, r3, r6
	cmp     r0, #0x0
	beq     branch_600ca90
	ldr     r0, [r6, #0x8]
	ldrh    r6, [r0, #0xc]
	tst     r6, #1, 18 @ #0x4000
	beq     branch_600ca90
	ldrh    r6, [r0, #0x4]
	tst     r6, #0xff
	beq     branch_600ca90
	ldrh    r6, [r0, #0xa]
	add     r7, r0, #0xc
	add     r6, r7, r6
	sub     r6, r6, #0x7
	bic     r7, r6, #0x1
	ldrh    r6, [r7]
	cmp     r6, #0x0
	ldreqh  r6, [r7, #0x2]
	cmpeq   r6, #0x0
	bne     branch_600ca90
	strh    r5, [r0, #0x4]
	strh    r5, [r4]
	strh    lr, [r4]
	ldrh    r0, [r1, #0xba]
	add     r0, r0, #0x1
	strh    r0, [r1, #0xba]
.arm
branch_600ca90: @ 600ca90 :arm
	add     r2, r2, #0x1
	cmp     r2, #0x3
	bcc     branch_600ca20
.arm
branch_600ca9c: @ 600ca9c :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x600caa4

.word 0x4808010 @ 0x600caa4
.word 0x380fff4 @ 0x600caa8
.word 0x4808032 @ 0x600caac
.arm
Function_600cab0: @ 600cab0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x154] @ [0x600cc10] (=0x380fff4)
	ldr     r12, [pc, #0x154] @ [0x600cc14] (=0x4808010)
	ldr     r2, [r1]
	mov     r0, #0x4
	strh    r0, [r12]
	ldr     r0, [r1]
	add     r1, r12, #102, 30 @ #0x198
	add     r0, r0, #6, 24 @ #0x600
	ldrh    r3, [r0, #0x90]
	add     r0, r2, #0xdc
	add     r2, r2, #0x2c
	ldrh    r1, [r1]
	tst     r3, #0x8
	add     r0, r0, #1, 22 @ #0x400
	add     r3, r2, #1, 22 @ #0x400
	beq     branch_600cba0
	tst     r1, #1, 22 @ #0x400
	beq     branch_600cba0
	ldrh    r12, [r12, #0xa0]
	tst     r12, #0x1
	ldrneh  r2, [r3]
	cmpne   r2, #0x0
	bne     branch_600cb5c
	tst     r12, #0x4
	ldrneh  r2, [r3, #0x14]
	cmpne   r2, #0x0
	bne     branch_600cb5c
	tst     r12, #0x8
	ldrneh  r2, [r3, #0x28]
	cmpne   r2, #0x0
	bne     branch_600cb5c
	ldr     r2, [pc, #0xe0] @ [0x600cc18] (=0x480819c)
	ldrh    r2, [r2]
	tst     r2, #0x1
	bne     branch_600cb5c
	ldr     r3, [pc, #0xd4] @ [0x600cc1c] (=0x4808032)
	mov     r12, #0x0
	strh    r12, [r3]
	mov     r2, #2, 18 @ #0x8000
	strh    r2, [r3]
	strh    r12, [r0, #0x2]
	b       branch_600cba0
@ 0x600cb5c

.arm
branch_600cb5c: @ 600cb5c :arm
	ldrh    r3, [r0, #0x2]
	add     r2, r3, #0x1
	strh    r2, [r0, #0x2]
	cmp     r3, #0xc
	bls     branch_600cba0
	ldr     r3, [pc, #0xa4] @ [0x600cc1c] (=0x4808032)
	mov     r2, #0x0
	strh    r2, [r0, #0x2]
	strh    r2, [r3]
	mov     r2, #2, 18 @ #0x8000
	ldr     r0, [pc, #0x84] @ [0x600cc10] (=0x380fff4)
	strh    r2, [r3]
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r2, [r0, #0xfe]
	add     r2, r2, #0x1
	strh    r2, [r0, #0xfe]
.arm
branch_600cba0: @ 600cba0 :arm
	ldr     r0, [pc, #0x68] @ [0x600cc10] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #6, 24 @ #0x600
	ldrh    r0, [r0, #0x90]
	tst     r0, #0x1
	beq     branch_600cc08
	tst     r1, #0x60
	beq     branch_600cc08
	ldr     r2, [pc, #0x58] @ [0x600cc20] (=0x4808054)
	ldrh    r1, [r2]
	ldrh    r0, [r2, #-0x2]
	sub     r0, r0, #1, 18 @ #0x4000
	add     r0, r0, r0, lsr #31
	cmp     r1, r0, asr #1
	bge     branch_600cbf0
	ldrh    r0, [r2, #-0x4]
	sub     r0, r0, #1, 18 @ #0x4000
	add     r0, r0, r0, lsr #31
	cmp     r1, r0, asr #1
	bge     branch_600cc04
.arm
branch_600cbf0: @ 600cbf0 :arm
	ldr     r2, [pc, #0x2c] @ [0x600cc24] (=0x480805a)
	ldr     r0, [pc, #0x2c] @ [0x600cc28] (=0x8001)
	ldrh    r1, [r2]
	strh    r1, [r2, #-0x4]
	strh    r0, [r2, #-0x2a]
.arm
branch_600cc04: @ 600cc04 :arm
	bl      Function_600bc2c
.arm
branch_600cc08: @ 600cc08 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600cc10

.word 0x380fff4 @ 0x600cc10
.word 0x4808010 @ 0x600cc14
.word 0x480819c @ 0x600cc18
.word 0x4808032 @ 0x600cc1c
.word 0x4808054 @ 0x600cc20
.word 0x480805a @ 0x600cc24
.word 0x8001 @ 0x600cc28
.arm
Function_600cc2c: @ 600cc2c :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r3, [pc, #0x23c] @ [0x600ce74] (=0x380fff4)
	ldr     r0, [pc, #0x23c] @ [0x600ce78] (=0x4808010)
	ldr     r2, [r3]
	mov     r1, #0x2
	strh    r1, [r0]
	ldr     r3, [r3]
	add     r2, r2, #0x2c
	add     r3, r3, #3, 24 @ #0x300
	ldrh    r3, [r3, #0x4c]
	add     r4, r2, #1, 22 @ #0x400
	cmp     r3, #0x12
	bne     branch_600cc68
	bl      Function_6012250
	b       branch_600ce6c
@ 0x600cc68

.arm
branch_600cc68: @ 600cc68 :arm
	ldrh    r2, [r0, #0xa8]
	and     r5, r2, #15, 24 @ #0xf00
	cmp     r5, #3, 24 @ #0x300
	beq     branch_600cc8c
	cmp     r5, #2, 22 @ #0x800
	beq     branch_600ccc0
	cmp     r5, #11, 24 @ #0xb00
	beq     branch_600ccfc
	b       branch_600cdf8
@ 0x600cc8c

.arm
branch_600cc8c: @ 600cc8c :arm
	ldr     r0, [r4, #0x8c]
	tst     r0, #0x2
	beq     branch_600cc9c
	bl      Function_600d7bc
.arm
branch_600cc9c: @ 600cc9c :arm
	ldr     r1, [pc, #0x1d0] @ [0x600ce74] (=0x380fff4)
	mov     r0, #0x0
	ldr     r3, [r1]
	mov     r1, #0x8
	ldr     r2, [r3, #0x558]
	add     r2, r2, #0x1
	str     r2, [r3, #0x558]
	bl      Function_6008f00
	b       branch_600cdf8
@ 0x600ccc0

.arm
branch_600ccc0: @ 600ccc0 :arm
	ldr     r2, [r4, #0x44]
	ldrh    r3, [r4, #0x9e]
	ldrh    r2, [r2, #0x4]
	and     r2, r2, #0xff
	mov     r2, r2, lsl #16
	cmp     r3, r2, lsr #16
	strlsh  r1, [r0, #0x9c]
	ldrlsh  r0, [r4, #0xa8]
	addls   r0, r0, #0x1
	strlsh  r0, [r4, #0xa8]
	ldr     r1, [r4, #0x90]
	ldrh    r0, [r1, #0x18]
	add     r0, r0, #0x1
	strh    r0, [r1, #0x18]
	b       branch_600cdf8
@ 0x600ccfc

.arm
branch_600ccfc: @ 600ccfc :arm
	ldr     r3, [pc, #0x178] @ [0x600ce7c] (=0xffff)
	ldr     r2, [pc, #0x178] @ [0x600ce80] (=0x4805f70)
	ldr     r1, [pc, #0x178] @ [0x600ce84] (=0x480824e)
	strh    r3, [r2]
	strh    r3, [r2, #0x2]
	add     r0, r0, #143, 30 @ #0x23c
	strh    r3, [r0]
	strh    r3, [r1]
	ldrh    r0, [r4, #0x3c]
	cmp     r0, #0x0
	beq     branch_600cd54
	ldr     r1, [r4, #0x44]
	ldrh    r0, [r1, #0x22]
	cmp     r0, r3
	bne     branch_600cd54
	ldrh    r0, [r1, #0x4]
	cmp     r0, #0x0
	movne   r0, #0x0
	strneh  r0, [r1, #0x4]
	ldrneh  r1, [r4, #0x98]
	ldrne   r0, [r4, #0x44]
	strneh  r1, [r0, #0x2]
.arm
branch_600cd54: @ 600cd54 :arm
	ldr     r0, [r4, #0x44]
	ldr     r2, [r4, #0x90]
	ldrh    r1, [r0, #0x2]
	ldrh    r0, [r4, #0x98]
	cmp     r1, #0x1
	add     r2, r2, #0x1a
	bls     branch_600cda4
	ldr     r3, [pc, #0xfc] @ [0x600ce74] (=0x380fff4)
	ldr     r3, [r3]
	add     r3, r3, #3, 24 @ #0x300
	ldrh    r3, [r3, #0x3a]
	mov     r3, r3, lsl #27
	movs    r3, r3, lsr #31
	beq     branch_600cda4
	ldr     r12, [pc, #0xf4] @ [0x600ce88] (=0x480819c)
	ldrh    r3, [r12]
	tst     r3, #0x1
	ldreqh  r3, [r12, #0xf4]
	eoreq   r3, r3, #0x1
	streqh  r3, [r12, #0xf4]
.arm
branch_600cda4: @ 600cda4 :arm
	ldr     r3, [pc, #0xc8] @ [0x600ce74] (=0x380fff4)
	ldr     r3, [r3]
	add     r3, r3, #6, 24 @ #0x600
	ldrh    r3, [r3, #0x90]
	tst     r3, #0x40
	beq     branch_600cdf8
	b       branch_600cdf0
@ 0x600cdc0

.arm
branch_600cdc0: @ 600cdc0 :arm
	mov     r1, r1, lsl #15
	mov     r1, r1, lsr #16
	tst     r1, #0x1
	ldrneh  r3, [r2, #0x6]
	mov     r0, r0, lsl #15
	addne   r3, r3, #0x1
	mov     r0, r0, lsr #16
	strneh  r3, [r2, #0x6]
	tst     r0, #0x1
	ldrne   r3, [r4, #0x90]
	ldrneh  r3, [r3, #0x16]
	addne   r2, r2, r3
.arm
branch_600cdf0: @ 600cdf0 :arm
	cmp     r1, #0x1
	bhi     branch_600cdc0
.arm
branch_600cdf8: @ 600cdf8 :arm
	cmp     r5, #2, 22 @ #0x800
	beq     branch_600ce60
	ldr     r2, [pc, #0x84] @ [0x600ce8c] (=0x48080b0)
	ldrh    r0, [r2]
	tst     r0, #0x2
	bne     branch_600ce60
	ldrh    r0, [r4, #0x3c]
	cmp     r0, #0x0
	beq     branch_600ce54
	mov     r0, #0x2
	strh    r0, [r2, #0x4]
	mov     r1, #0x0
	strh    r1, [r2, #-0x68]
	ldrh    r1, [r2, #-0xa0]
	tst     r1, #1, 20 @ #0x1000
	ldrneh  r0, [r4, #0xac]
	addne   r0, r0, #0x1
	strneh  r0, [r4, #0xac]
	bne     branch_600ce48
	bl      Function_600d350
.arm
branch_600ce48: @ 600ce48 :arm
	ldrh    r0, [r4, #0xaa]
	add     r0, r0, #0x1
	strh    r0, [r4, #0xaa]
.arm
branch_600ce54: @ 600ce54 :arm
	ldr     r0, [pc, #0x34] @ [0x600ce90] (=0x48080ae)
	mov     r1, #0x2
	strh    r1, [r0]
.arm
branch_600ce60: @ 600ce60 :arm
	mov     r0, #0x0
	mov     r1, #0xe
	bl      Function_6008f00
.arm
branch_600ce6c: @ 600ce6c :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600ce74

.word 0x380fff4 @ 0x600ce74
.word 0x4808010 @ 0x600ce78
.word 0xffff @ 0x600ce7c
.word 0x4805f70 @ 0x600ce80
.word 0x480824e @ 0x600ce84
.word 0x480819c @ 0x600ce88
.word 0x48080b0 @ 0x600ce8c
.word 0x48080ae @ 0x600ce90
.arm
Function_600ce94: @ 600ce94 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x38
	ldr     r0, [pc, #0x480] @ [0x600d324] (=0x380fff4)
	ldr     r2, [pc, #0x480] @ [0x600d328] (=0x4808010)
	ldr     r3, [r0]
	mov     r1, #0x1
	add     r0, r3, #6, 24 @ #0x600
	ldrh    r4, [r0, #0x90]
	add     r6, r3, #209, 30 @ #0x344
	strh    r1, [r2]
	ldrh    r1, [r6, #0xc]
	add     r0, r3, #0xdc
	cmp     r1, #0x0
	add     r7, r0, #1, 22 @ #0x400
	ldreqh  r0, [r2, #0x44]
	and     r4, r4, #0x1
	streqh  r0, [r2, #0x4a]
	ldr     r0, [pc, #0x44c] @ [0x600d32c] (=0x4808098)
	sub     r11, r0, #0x70
	add     r0, r0, #109, 30 @ #0x1b4
	str     r0, [sp, #0x24]
	ldr     r0, [pc, #0x440] @ [0x600d330] (=0x480824e)
	sub     r0, r0, #85, 30 @ #0x154
	str     r0, [sp, #0x14]
	ldr     r0, [pc, #0x430] @ [0x600d32c] (=0x4808098)
	sub     r0, r0, #0x44
	str     r0, [sp, #0x10]
	ldr     r0, [pc, #0x42c] @ [0x600d334] (=0x8ef)
	sub     r0, r0, #0x29
	str     r0, [sp, #0x28]
	ldr     r0, [pc, #0x420] @ [0x600d334] (=0x8ef)
	add     r0, r0, #0x3d
	str     r0, [sp, #0x2c]
	ldr     r0, [pc, #0x418] @ [0x600d338] (=0x4805f7e)
	sub     r0, r0, #0x24
	str     r0, [sp, #0x30]
	ldr     r0, [pc, #0x408] @ [0x600d334] (=0x8ef)
	add     r0, r0, #113, 28 @ #0x710
	str     r0, [sp, #0x34]
.arm
branch_600cf30: @ 600cf30 :arm
	ldr     r0, [sp, #0x10]
	ldrh    r9, [r7, #0x4]
	ldrh    r10, [r0]
	cmp     r9, r10
	beq     branch_600d2a4
	ldr     r0, [pc, #0x3e0] @ [0x600d32c] (=0x4808098)
	ldr     r1, [sp, #0x14]
	ldrh    r0, [r0, #0x60]
	ldrh    r3, [r1]
	ldr     r1, [pc, #0x3d0] @ [0x600d32c] (=0x4808098)
	ldrh    r2, [r1, #0x60]
	ldr     r1, [sp, #0x14]
	cmp     r0, r2
	ldrh    r1, [r1]
	movhi   r0, r1, lsl #12
	orrhi   r0, r0, r2, lsr #4
	strhi   r0, [sp, #0x4]
	movls   r1, r3, lsl #12
	orrls   r0, r1, r0, lsr #4
	strls   r0, [sp, #0x4]
	ldr     r0, [sp, #0x28]
	cmp     r9, r0
	bcc     branch_600cf9c
	ldr     r0, [pc, #0x3a0] @ [0x600d334] (=0x8ef)
	cmp     r9, r0
	bhi     branch_600cf9c
	bl      Function_600a9f8
.arm
branch_600cf9c: @ 600cf9c :arm
	mov     r0, r9, lsl #1
	str     r0, [sp, #0x18]
	add     r0, r0, #1, 18 @ #0x4000
	add     r8, r0, #18, 10 @ #0x4800000
	add     r0, r8, #0x2
	bl      Function_600d8ec
	mov     r5, r0
	add     r0, r5, #0x2
	bl      Function_600d8ec
	str     r0, [sp, #0x1c]
	add     r0, r0, #0x4
	bl      Function_600d8ec
	str     r0, [sp, #0x20]
	add     r0, r8, #0xe
	bl      Function_600d8ec
	str     r0, [sp, #0xc]
	ldr     r0, [sp, #0x18]
	ldrh    r1, [r5]
	add     r0, r0, #18, 10 @ #0x4800000
	add     r0, r0, #1, 18 @ #0x4000
	mov     r1, r1, lsl #1
	ldrh    r2, [r0]
	and     r1, r1, #1, 22 @ #0x400
	orr     r1, r2, r1
	strh    r1, [r0]
	ldr     r1, [sp, #0x4]
	ldr     r0, [sp, #0x1c]
	strh    r1, [r0]
	ldr     r0, [sp, #0x20]
	ldrh    r1, [r0]
	add     r0, r1, r9, lsl #1
	add     r0, r0, #0xf
	mov     r0, r0, lsr #2
	mov     r9, r0, lsl #1
	cmp     r9, #251, 28 @ #0xfb0
	ldrcsh  r0, [r6, #0x9a]
	subcs   r9, r9, r0, lsr #1
	ldr     r0, [sp, #0x2c]
	cmp     r1, r0
	bls     branch_600d058
	ldr     r0, [pc, #0x2f8] @ [0x600d33c] (=0xffff)
	mov     r9, r10
	strh    r0, [r8]
	ldrh    r0, [r6, #0xb4]
	add     r0, r0, #0x1
	strh    r0, [r6, #0xb4]
	b       branch_600d0e0
@ 0x600d058

.arm
branch_600d058: @ 600d058 :arm
	cmp     r4, #0x0
	cmpne   r9, r10
	beq     branch_600d0e0
	ldr     r3, [sp, #0x30]
	mov     r2, r9, lsl #1
	add     r0, r2, #1, 18 @ #0x4000
	add     r0, r0, #18, 10 @ #0x4800000
	cmp     r0, r3
	ldrcch  r0, [r0, #0x6]
	add     r2, r2, #18, 10 @ #0x4800000
	add     r2, r2, #1, 18 @ #0x4000
	ldrcsh  r3, [r6, #0x9a]
	andcc   r0, r0, #0xff
	subcs   r0, r0, r3
	ldrh    r2, [r2]
	ldrcsh  r0, [r0, #0x6]
	tst     r2, #31, 22 @ #0x7c00
	bne     branch_600d0b8
	cmp     r0, #0xa
	cmpne   r0, #0x14
	bne     branch_600d0b8
	ldr     r0, [sp, #0x34]
	cmp     r1, r0
	bls     branch_600d0e0
.arm
branch_600d0b8: @ 600d0b8 :arm
	ldrh    r0, [r6, #0xb4]
	ldr     r1, [pc, #0x278] @ [0x600d33c] (=0xffff)
	add     r0, r0, #0x1
	strh    r0, [r6, #0xb4]
	mov     r0, r10, lsl #16
	strh    r1, [r8]
	mov     r0, r0, lsr #16
	strh    r0, [r7, #0x4]
	strh    r0, [r5]
	b       branch_600d2a4
@ 0x600d0e0

.arm
branch_600d0e0: @ 600d0e0 :arm
	ldrh    r0, [r8]
	and     r0, r0, #0xf
	cmp     r0, #0xc
	bne     branch_600d240
	add     r0, r8, #0xc
	bl      Function_600d8ec
	ldrh    r0, [r0]
	str     r0, [sp, #0x8]
	add     r0, r8, #0x22
	bl      Function_600d8ec
	ldrh    r10, [r0]
	ldrh    r0, [r7]
	cmp     r0, r10
	bne     branch_600d144
	ldr     r0, [sp, #0x8]
	tst     r0, #2, 22 @ #0x800
	beq     branch_600d144
	ldr     r0, [pc, #0x1f8] @ [0x600d324] (=0x380fff4)
	ldr     r1, [r0]
	ldr     r0, [r1, #0x57c]
	add     r0, r0, #0x1
	str     r0, [r1, #0x57c]
	ldr     r0, [pc, #0x1fc] @ [0x600d33c] (=0xffff)
	strh    r0, [r8]
	b       branch_600d218
@ 0x600d144

.arm
branch_600d144: @ 600d144 :arm
	ldr     r0, [pc, #0x1d8] @ [0x600d324] (=0x380fff4)
	ldr     r0, [r0]
	add     r1, r0, #3, 24 @ #0x300
	ldrh    r2, [r1, #0x3a]
	mov     r2, r2, lsl #24
	movs    r2, r2, lsr #31
	ldreqh  r1, [r1, #0x4c]
	cmpeq   r1, #0x40
	bne     branch_600d218
	ldrh    r1, [r11]
	cmp     r1, #0x0
	beq     branch_600d1f0
	ldr     r1, [pc, #0x1b0] @ [0x600d32c] (=0x4808098)
	ldrh    r1, [r1]
	tst     r1, #2, 18 @ #0x8000
	beq     branch_600d1f0
	add     r0, r0, #102, 28 @ #0x660
	bl      Function_6001ae8
	ldr     r0, [sp, #0xc]
	mov     r3, #0x0
	ldrh    r1, [r0]
	ldr     r0, [pc, #0x1a0] @ [0x600d340] (=0x82ea)
	mov     r2, #250, 30 @ #0x3e8
	umull   r12, r8, r1, r0
	mov     r0, r3
	mla     r8, r1, r0, r8
	mov     r0, r12, lsr #6
	ldr     r1, [pc, #0x188] @ [0x600d340] (=0x82ea)
	mov     r12, r3
	mla     r8, r12, r1, r8
	mov     r1, r8, lsr #6
	orr     r0, r0, r8, lsl #26
	bl      Function_600b1c8
	mov     r2, #0x0
	str     r2, [sp]
	mov     r2, r1
	mov     r1, r0
	ldr     r0, [pc, #0x144] @ [0x600d324] (=0x380fff4)
	ldr     r3, [pc, #0x160] @ [0x600d344] (=0x600a85c)
	ldr     r0, [r0]
	add     r0, r0, #102, 28 @ #0x660
	bl      Function_6001af0
	b       branch_600d218
@ 0x600d1f0

.arm
branch_600d1f0: @ 600d1f0 :arm
	ldr     r1, [pc, #0x144] @ [0x600d33c] (=0xffff)
	ldr     r0, [pc, #0x13c] @ [0x600d338] (=0x4805f7e)
	mov     r10, r1
	strh    r1, [r0]
	ldr     r0, [sp, #0x24]
	strh    r1, [r0]
	ldr     r0, [pc, #0x120] @ [0x600d330] (=0x480824e)
	strh    r1, [r0]
	mov     r0, r1
	strh    r0, [r8]
.arm
branch_600d218: @ 600d218 :arm
	strh    r10, [r7]
	bl      Function_600d914
	tst     r0, #0x1
	beq     branch_600d290
	ldr     r0, [pc, #0xf4] @ [0x600d324] (=0x380fff4)
	ldr     r1, [r0]
	ldr     r0, [r1, #0x5a8]
	add     r0, r0, #0x1
	str     r0, [r1, #0x5a8]
	b       branch_600d290
@ 0x600d240

.arm
branch_600d240: @ 600d240 :arm
	cmp     r0, #0xd
	bne     branch_600d290
	ldr     r0, [pc, #0xd4] @ [0x600d324] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r1, [r0, #0x3a]
	mov     r1, r1, lsl #24
	movs    r1, r1, lsr #31
	ldreqh  r0, [r0, #0x4c]
	cmpeq   r0, #0x40
	bne     branch_600d290
	ldrh    r0, [r11]
	cmp     r0, #0x0
	beq     branch_600d288
	ldr     r0, [pc, #0xac] @ [0x600d32c] (=0x4808098)
	ldrh    r0, [r0]
	tst     r0, #2, 18 @ #0x8000
	bne     branch_600d290
.arm
branch_600d288: @ 600d288 :arm
	ldr     r0, [pc, #0xac] @ [0x600d33c] (=0xffff)
	strh    r0, [r8]
.arm
branch_600d290: @ 600d290 :arm
	mov     r0, r9, lsl #16
	mov     r0, r0, lsr #16
	strh    r0, [r7, #0x4]
	strh    r0, [r5]
	b       branch_600cf30
@ 0x600d2a4

.arm
branch_600d2a4: @ 600d2a4 :arm
	cmp     r4, #0x0
	beq     branch_600d2f8
	ldr     r0, [pc, #0x94] @ [0x600d348] (=0x4808054)
	ldrh    r4, [r0]
	bl      Function_600d914
	mov     r0, r0, lsl #16
	movs    r1, r0, lsr #16
	beq     branch_600d2f8
	ldr     r0, [pc, #0x7c] @ [0x600d348] (=0x4808054)
	ldrh    r0, [r0]
	cmp     r4, r0
	bne     branch_600d2f8
	tst     r1, #0x2
	beq     branch_600d2e8
	mov     r0, #0x80
	bl      Function_600bd28
	b       branch_600d2f8
@ 0x600d2e8

.arm
branch_600d2e8: @ 600d2e8 :arm
	tst     r1, #0x1
	beq     branch_600d2f8
	mov     r0, #1, 24 @ #0x100
	bl      Function_600bd28
.arm
branch_600d2f8: @ 600d2f8 :arm
	ldr     r0, [pc, #0x4c] @ [0x600d34c] (=0x480805a)
	ldrh    r1, [r0]
	ldrh    r0, [r0, #-0x6]
	cmp     r1, r0
	beq     branch_600d318
	mov     r0, #0x0
	mov     r1, #0xf
	bl      Function_6008f00
.arm
branch_600d318: @ 600d318 :arm
	add     sp, sp, #0x38
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x600d324

.word 0x380fff4 @ 0x600d324
.word 0x4808010 @ 0x600d328
.word 0x4808098 @ 0x600d32c
.word 0x480824e @ 0x600d330
.word 0x8ef @ 0x600d334
.word 0x4805f7e @ 0x600d338
.word 0xffff @ 0x600d33c
.word 0x82ea @ 0x600d340
.word Function_600a85c @ =0x600a85c, 0x600d344
.word 0x4808054 @ 0x600d348
.word 0x480805a @ 0x600d34c
.arm
Function_600d350: @ 600d350 :arm
	stmfd   sp!, {r3,lr}
	ldr     r12, [pc, #0xd8] @ [0x600d434] (=0x380fff4)
	ldr     r2, [pc, #0xd8] @ [0x600d438] (=0x4808010)
	ldr     r1, [r12]
	mov     r3, #1, 20 @ #0x1000
	add     r1, r1, #0x2c
	strh    r3, [r2]
	add     r3, r1, #1, 22 @ #0x400
	ldrh    r1, [r3, #0x3c]
	cmp     r1, #0x0
	beq     branch_600d42c
	ldr     r1, [r12]
	add     r1, r1, #6, 24 @ #0x600
	ldrh    r1, [r1, #0x90]
	tst     r1, #0x10
	cmpne   r0, #0x0
	beq     branch_600d420
	add     r0, r2, #129, 30 @ #0x204
	ldrh    r1, [r2, #0xa6]
	ldrh    r0, [r0]
	cmp     r0, #0x3
	cmpne   r0, #0x5
	bne     branch_600d420
	cmp     r1, #0x0
	bne     branch_600d420
	ldr     r3, [r3, #0x44]
	mov     r2, #0x0
	ldrh    r0, [r3, #0x2]
	b       branch_600d3d4
@ 0x600d3c4

.arm
branch_600d3c4: @ 600d3c4 :arm
	and     r1, r0, #0x1
	mov     r0, r0, lsl #15
	add     r2, r2, r1
	mov     r0, r0, lsr #16
.arm
branch_600d3d4: @ 600d3d4 :arm
	cmp     r0, #0x0
	bne     branch_600d3c4
	ldrh    r0, [r3, #0x24]
	ldrh    r1, [r3, #0xa]
	add     r0, r0, #0xa
	mul     r0, r2, r0
	add     r0, r0, #0xc0
	add     r0, r0, r1, lsl #2
	mov     r0, r0, lsl #16
	ldr     r1, [pc, #0x3c] @ [0x600d43c] (=0x600d884)
	mov     r0, r0, lsr #16
	bl      Function_600b818
	ldr     r0, [pc, #0x28] @ [0x600d434] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #1, 22 @ #0x400
	ldrh    r1, [r0]
	add     r1, r1, #0x1
	strh    r1, [r0]
	b       branch_600d42c
@ 0x600d420

.arm
branch_600d420: @ 600d420 :arm
	mov     r0, #0x0
	mov     r1, #0x10
	bl      Function_6008f00
.arm
branch_600d42c: @ 600d42c :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600d434

.word 0x380fff4 @ 0x600d434
.word 0x4808010 @ 0x600d438
.word 0x600d884 @ 0x600d43c
.arm
Function_600d440: @ 600d440 :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [pc, #0xf0] @ [0x600d53c] (=0x380fff4)
	ldr     r0, [pc, #0xf0] @ [0x600d540] (=0x4808010)
	ldr     r2, [r3]
	mov     r1, #0x80
	strh    r1, [r0]
	ldr     r1, [r3]
	add     r2, r2, #0x2c
	add     r1, r1, #6, 24 @ #0x600
	ldrh    r1, [r1, #0x90]
	tst     r1, #0x20
	beq     branch_600d4d4
	add     r1, r0, #129, 30 @ #0x204
	ldrh    r3, [r1]
	add     r1, r0, #150, 30 @ #0x258
	and     r3, r3, #0xff
	ldrh    r12, [r1]
	cmp     r3, #0x3
	bcc     branch_600d4d4
	cmp     r3, #0x5
	bhi     branch_600d4d4
	ldr     r3, [r2, #0x458]
	ldr     r1, [pc, #0xa4] @ [0x600d544] (=0xfff)
	and     r3, r1, r3, lsr #1
	cmp     r12, r3
	bcc     branch_600d4d4
	ldr     r2, [r2, #0x430]
	and     r1, r1, r2, lsr #1
	cmp     r12, r1
	bhi     branch_600d4d4
	add     r1, r0, #141, 30 @ #0x234
	ldrh    r0, [r1]
	orr     r0, r0, #0x80
	strh    r0, [r1]
	ldrh    r0, [r1]
	bic     r0, r0, #0x80
	strh    r0, [r1]
.arm
branch_600d4d4: @ 600d4d4 :arm
	ldr     r1, [pc, #0x6c] @ [0x600d548] (=0x4808000)
	ldrh    r0, [r1]
	cmp     r0, #81, 26 @ #0x1440
	beq     branch_600d534
	add     r0, r1, #103, 30 @ #0x19c
	ldrh    r0, [r0]
	and     r0, r0, #0x42
	cmp     r0, #0x42
	bne     branch_600d534
	add     r1, r1, #174, 30 @ #0x2b8
	ldrh    r2, [r1]
	cmp     r2, #0x0
	beq     branch_600d534
	mov     r3, #0x0
	b       branch_600d528
@ 0x600d510

.arm
branch_600d510: @ 600d510 :arm
	cmp     r3, #250, 30 @ #0x3e8
	add     r3, r3, #0x1
	bls     branch_600d528
	mov     r0, #0x40
	bl      Function_600bd28
	b       branch_600d534
@ 0x600d528

.arm
branch_600d528: @ 600d528 :arm
	ldrh    r0, [r1]
	cmp     r2, r0
	beq     branch_600d510
.arm
branch_600d534: @ 600d534 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600d53c

.word 0x380fff4 @ 0x600d53c
.word 0x4808010 @ 0x600d540
.word 0xfff @ 0x600d544
.word 0x4808000 @ 0x600d548
.arm
Function_600d54c: @ 600d54c :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r2, [pc, #0x248] @ [0x600d7a0] (=0x380fff4)
	ldr     r0, [pc, #0x248] @ [0x600d7a4] (=0x4808010)
	ldr     r3, [r2]
	mov     r1, #0x40
	strh    r1, [r0]
	ldr     r2, [r2]
	add     r1, r3, #0x2c
	add     r2, r2, #6, 24 @ #0x600
	ldrh    r2, [r2, #0x90]
	add     r4, r3, #209, 30 @ #0x344
	tst     r2, #0x20
	add     r5, r1, #1, 22 @ #0x400
	beq     branch_600d798
	ldrh    r2, [r5, #0xa4]
	ldr     r1, [pc, #0x218] @ [0x600d7a8] (=0xffff)
	cmp     r2, r1
	addeq   r2, r0, #99, 30 @ #0x18c
	ldreqh  r2, [r2]
	andeq   r2, r2, #0x3
	cmpeq   r2, #0x3
	bne     branch_600d798
	add     r2, r0, #150, 30 @ #0x258
	ldrh    r3, [r2]
	ldrh    r2, [r0, #0x40]
	sub     r1, r1, #15, 20 @ #0xf000
	and     r1, r1, r2, lsr #1
	cmp     r3, r1
	blt     branch_600d798
	ldrh    r7, [r0, #0x44]
	mov     r0, r7, lsl #1
	add     r0, r0, #1, 18 @ #0x4000
	add     r0, r0, #18, 10 @ #0x4800000
	add     r0, r0, #0x8
	bl      Function_600d8ec
	add     r0, r0, #0x4
	bl      Function_600d8ec
	ldrh    r2, [r0]
	ldr     r1, [pc, #0x1c0] @ [0x600d7ac] (=0xe7ff)
	and     r1, r2, r1
	cmp     r1, #138, 30 @ #0x228
	bne     branch_600d798
	add     r0, r0, #0x2
	bl      Function_600d8ec
	ldr     r2, [pc, #0x1ac] @ [0x600d7b0] (=0x48080f8)
	ldrh    r1, [r2]
	sub     r6, r1, #1, 16 @ #0x10000
	add     r1, r2, #23, 28 @ #0x170
.arm
branch_600d60c: @ 600d60c :arm
	ldrh    r3, [r1]
	sub     r3, r3, r7
	mov     r3, r3, lsl #16
	mov     r8, r3, lsr #16
	tst     r8, #2, 18 @ #0x8000
	ldrneh  r3, [r4, #0x9a]
	addne   r3, r8, r3, lsr #1
	movne   r3, r3, lsl #16
	movne   r8, r3, lsr #16
	cmp     r8, #0xe
	bhi     branch_600d654
	ldrh    r3, [r2]
	sub     r3, r3, r6
	mov     r3, r3, lsl #16
	mov     r3, r3, lsr #16
	cmp     r3, #0x40
	bhi     branch_600d798
	b       branch_600d60c
@ 0x600d654

.arm
branch_600d654: @ 600d654 :arm
	add     r0, r0, #0x8
	mov     r8, #0x0
	b       branch_600d67c
@ 0x600d660

.arm
branch_600d660: @ 600d660 :arm
	bl      Function_600d8ec
	add     r1, r4, r8, lsl #1
	ldrh    r2, [r0], #0x2
	ldrh    r1, [r1, #0x64]
	cmp     r2, r1
	bne     branch_600d798
	add     r8, r8, #0x1
.arm
branch_600d67c: @ 600d67c :arm
	cmp     r8, #0x3
	bcc     branch_600d660
	add     r0, r0, #0xa
	bl      Function_600d8ec
	ldr     r3, [pc, #0x11c] @ [0x600d7b0] (=0x48080f8)
	add     r1, r3, #23, 28 @ #0x170
.arm
branch_600d694: @ 600d694 :arm
	ldrh    r2, [r1]
	sub     r2, r2, r7
	mov     r2, r2, lsl #16
	mov     r8, r2, lsr #16
	tst     r8, #2, 18 @ #0x8000
	ldrneh  r2, [r4, #0x9a]
	addne   r2, r8, r2, lsr #1
	movne   r2, r2, lsl #16
	movne   r8, r2, lsr #16
	cmp     r8, #0x14
	bhi     branch_600d6dc
	ldrh    r2, [r3]
	sub     r2, r2, r6
	mov     r2, r2, lsl #16
	mov     r2, r2, lsr #16
	cmp     r2, #0x70
	bhi     branch_600d798
	b       branch_600d694
@ 0x600d6dc

.arm
branch_600d6dc: @ 600d6dc :arm
	ldr     r2, [pc, #0xd0] @ [0x600d7b4] (=0x4808028)
	ldrh    r3, [r0]
	ldrh    r0, [r2]
	mov     r1, #0x1
	tst     r3, r1, lsl r0
	bne     branch_600d798
	ldrh    r1, [r2, #0x70]
	mov     r0, #0x40
	strh    r1, [r5, #0xa4]
	strh    r0, [r2, #0x8c]
	ldrh    r0, [r4, #0xbe]
	add     r1, r2, #93, 30 @ #0x174
	add     r0, r0, #0x1
	strh    r0, [r4, #0xbe]
.arm
branch_600d714: @ 600d714 :arm
	ldrh    r0, [r1]
	and     r0, r0, #0x3
	cmp     r0, #0x3
	beq     branch_600d714
	ldr     r0, [pc, #0x8c] @ [0x600d7b8] (=0x4808244)
	mov     r2, #0x8
	ldrh    r1, [r0]
	sub     r3, r0, #0x1c
	orr     r1, r1, #0x40
	strh    r1, [r0]
	ldrh    r4, [r0]
	ldr     r1, [pc, #0x58] @ [0x600d7a0] (=0x380fff4)
	bic     r4, r4, #0x40
	strh    r4, [r0]
	strh    r2, [r3]
	mov     r2, #0x0
	strh    r2, [r3]
	ldr     r1, [r1]
	ldr     r2, [pc, #0x44] @ [0x600d7a8] (=0xffff)
	add     r1, r1, #0x2c
	add     r6, r1, #1, 22 @ #0x400
	ldrh    r5, [r6, #0xa4]
	cmp     r5, r2
	beq     branch_600d798
	sub     r4, r0, #27, 28 @ #0x1b0
	ldrh    r3, [r4]
	sub     r1, r0, #133, 30 @ #0x214
	strh    r5, [r4]
	ldrh    r0, [r1]
	orr     r0, r0, #0x80
	strh    r0, [r1]
	strh    r3, [r4]
	strh    r2, [r6, #0xa4]
.arm
branch_600d798: @ 600d798 :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x600d7a0

.word 0x380fff4 @ 0x600d7a0
.word 0x4808010 @ 0x600d7a4
.word 0xffff @ 0x600d7a8
.word 0xe7ff @ 0x600d7ac
.word 0x48080f8 @ 0x600d7b0
.word 0x4808028 @ 0x600d7b4
.word 0x4808244 @ 0x600d7b8
.arm
Function_600d7bc: @ 600d7bc :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0xb8] @ [0x600d880] (=0x380fff4)
	mov     r0, #0x2
	ldr     r1, [r1]
	mov     r5, #0x0
	add     r1, r1, #0x2c
	add     r4, r1, #1, 22 @ #0x400
	bl      Function_6013a64
	mov     r0, #0x1
	bl      Function_6013a64
	mov     r0, r5
	bl      Function_6013a64
	ldrh    r0, [r4, #0x28]
	cmp     r0, #0x0
	beq     branch_600d810
	ldr     r0, [r4, #0x30]
	ldrh    r0, [r0]
	cmp     r0, #0x0
	movne   r5, #0x1
	moveq   r0, r5
	streqh  r0, [r4, #0x28]
.arm
branch_600d810: @ 600d810 :arm
	ldrh    r0, [r4, #0x14]
	cmp     r0, #0x0
	beq     branch_600d834
	ldr     r0, [r4, #0x1c]
	ldrh    r0, [r0]
	cmp     r0, #0x0
	moveq   r0, #0x0
	streqh  r0, [r4, #0x14]
	movne   r5, #0x1
.arm
branch_600d834: @ 600d834 :arm
	ldrh    r0, [r4]
	cmp     r0, #0x0
	beq     branch_600d858
	ldr     r0, [r4, #0x8]
	ldrh    r0, [r0]
	cmp     r0, #0x0
	moveq   r0, #0x0
	streqh  r0, [r4]
	movne   r5, #0x1
.arm
branch_600d858: @ 600d858 :arm
	cmp     r5, #0x0
	beq     branch_600d86c
	mov     r0, #0x0
	mov     r1, #0xe
	bl      Function_6008f00
.arm
branch_600d86c: @ 600d86c :arm
	mov     r0, #0x0
	mov     r1, #0x14
	bl      Function_6008f00
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600d880

.word 0x380fff4 @ 0x600d880
.arm
Function_600d884: @ 600d884 :arm
	stmfd   sp!, {r4,lr}
	mov     r0, #1, 8 @ #0x1000000
	bl      Function_6008ef0
	ldr     r2, [pc, #0x4c] @ [0x600d8e4] (=0x4808210)
	mov     r1, #1, 20 @ #0x1000
	ldrh    r3, [r2]
	mov     r4, r0
	strh    r1, [r2, #0x34]
	mov     r1, #0x64
	b       branch_600d8bc
@ 0x600d8ac

.arm
branch_600d8ac: @ 600d8ac :arm
	ldrh    r0, [r2]
	cmp     r3, r0
	bne     branch_600d8c4
	sub     r1, r1, #0x1
.arm
branch_600d8bc: @ 600d8bc :arm
	cmp     r1, #0x0
	bne     branch_600d8ac
.arm
branch_600d8c4: @ 600d8c4 :arm
	ldr     r1, [pc, #0x1c] @ [0x600d8e8] (=0x4808244)
	mov     r0, #0x0
	strh    r0, [r1]
	bl      Function_600d350
	mov     r0, r4
	bl      Function_6008ef8
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600d8e4

.word 0x4808210 @ 0x600d8e4
.word 0x4808244 @ 0x600d8e8
.arm
Function_600d8ec: @ 600d8ec :arm
	ldr     r1, [pc, #0x18] @ [0x600d90c] (=0x4805f60)
	cmp     r0, r1
	ldrcs   r1, [pc, #0x14] @ [0x600d910] (=0x380fff4)
	ldrcs   r1, [r1]
	addcs   r1, r1, #3, 24 @ #0x300
	ldrcsh  r1, [r1, #0xde]
	subcs   r0, r0, r1
	bx      lr
@ 0x600d90c

.word 0x4805f60 @ 0x600d90c
.word 0x380fff4 @ 0x600d910
.arm
Function_600d914: @ 600d914 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0x28] @ [0x600d948] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #0x2c
	add     r5, r0, #1, 22 @ #0x400
	add     r0, r5, #0x50
	bl      Function_600d94c
	mov     r4, r0
	add     r0, r5, #0x64
	bl      Function_600d94c
	orr     r0, r4, r0
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600d948

.word 0x380fff4 @ 0x600d948
.arm
Function_600d94c: @ 600d94c :arm
	stmfd   sp!, {r4,lr}
	ldrh    r1, [r0]
	mov     r4, #0x0
	cmp     r1, #0x2
	bne     branch_600d98c
	ldr     r2, [pc, #0x54] @ [0x600d9bc] (=0x4808094)
	ldr     r3, [r0, #0x8]
	ldr     r1, [pc, #0x50] @ [0x600d9c0] (=0x3fff)
	ldrh    r2, [r2]
	and     r1, r3, r1
	mov     r1, r1, lsr #1
	orr     r1, r1, #2, 18 @ #0x8000
	cmp     r1, r2
	movne   r1, #0x1
	strneh  r1, [r0]
	orrne   r4, r4, #0x1
.arm
branch_600d98c: @ 600d98c :arm
	ldrh    r1, [r0]
	cmp     r1, #0x1
	bne     branch_600d9b0
	ldr     r1, [r0, #0x8]
	ldrh    r1, [r1]
	tst     r1, #0x1
	beq     branch_600d9b0
	bl      Function_6013848
	orr     r4, r4, #0x2
.arm
branch_600d9b0: @ 600d9b0 :arm
	mov     r0, r4
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600d9bc

.word 0x4808094 @ 0x600d9bc
.word 0x3fff @ 0x600d9c0
.arm
Function_600d9c4: @ 600d9c4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x14] @ [0x600d9e4] (=0x600c4ec)
	mov     r0, #1, 8 @ #0x1000000
	bl      Function_600d9e8
	mov     r0, #1, 8 @ #0x1000000
	bl      Function_6008ef8
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600d9e4

.word 0x600c4ec @ 0x600d9e4
.arm
Function_600d9e8: @ 600d9e8 :arm
	ldr     pc, [pc, #-0x4] @ [0x600d9ec] (=0x37f8818)
@ 0x600d9ec

.word 0x37f8818 @ 0x600d9ec
.arm
Function_600d9f0: @ 600d9f0 :arm
	stmfd   sp!, {r3,lr}
	mov     r0, #1, 8 @ #0x1000000
	bl      Function_6008ef0
	mov     r0, #1, 8 @ #0x1000000
	mov     r1, #0x0
	bl      Function_600d9e8
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600da10

.arm
Function_600da10: @ 600da10 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x3c] @ [0x600da58] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0xe8]
	cmp     r0, #0x0
	beq     branch_600da30
	bl      Function_6014308
.arm
branch_600da30: @ 600da30 :arm
	ldr     r0, [pc, #0x20] @ [0x600da58] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x3a]
	mov     r0, r0, lsl #25
	movs    r0, r0, lsr #31
	beq     branch_600da50
	bl      Function_6010cbc
.arm
branch_600da50: @ 600da50 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600da58

.word 0x380fff4 @ 0x600da58
.arm
Function_600da5c: @ 600da5c :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r7, [pc, #0x1c0] @ [0x600dc28] (=0x380fff4)
	mov     r10, #0x2
	ldr     r1, [r7]
	mov     r11, #0x0
	add     r0, r1, #0x2c
	add     r8, r0, #1, 22 @ #0x400
	ldr     r0, [pc, #0x1ac] @ [0x600dc2c] (=0x4808032)
	add     r6, r1, #209, 30 @ #0x344
	add     r4, r0, #0x6e
.arm
branch_600da84: @ 600da84 :arm
	mov     r0, #0x14
	mov     r5, r10, lsl #2
	mla     r9, r10, r0, r8
	add     r0, r5, #18, 10 @ #0x4800000
	add     r0, r0, #2, 18 @ #0x8000
	ldrh    r0, [r0, #0xa0]
	tst     r0, #2, 18 @ #0x8000
	bne     branch_600dc18
	ldrh    r0, [r9]
	cmp     r0, #0x0
	beq     branch_600dc18
	ldr     r1, [r9, #0xc]
	cmp     r1, #0x0
	beq     branch_600dbf8
	ldr     r0, [r9, #0x8]
	ldrh    r0, [r0]
	strh    r0, [r1, #0x8]
	ldr     r1, [r9, #0x8]
	ldr     r0, [r9, #0xc]
	ldrh    r1, [r1, #0xc]
	strh    r1, [r0, #0x14]
	ldr     r0, [r9, #0x8]
	ldrh    r1, [r0, #0xc]
	tst     r1, #1, 18 @ #0x4000
	beq     branch_600dbc4
	ldr     r1, [r7]
	add     r1, r1, #6, 24 @ #0x600
	ldrh    r1, [r1, #0x90]
	tst     r1, #0x8
	beq     branch_600dba8
	ldrh    r1, [r0, #0xa]
	add     r2, r0, #0xc
	add     r1, r2, r1
	sub     r1, r1, #0x7
	bic     r2, r1, #0x1
	ldrh    r1, [r2]
	cmp     r1, #0x0
	ldreqh  r1, [r2, #0x2]
	cmpeq   r1, #0x0
	bne     branch_600dba8
	ldr     r0, [pc, #0x100] @ [0x600dc2c] (=0x4808032)
	mov     r1, #2, 18 @ #0x8000
	strh    r11, [r0]
	strh    r1, [r0]
	ldrh    r0, [r6, #0xba]
	add     r0, r0, #0x1
	strh    r0, [r6, #0xba]
	ldr     r0, [r9, #0xc]
	bl      Function_601300c
	cmp     r0, #0x0
	beq     branch_600db8c
	ldr     r2, [r9, #0xc]
	mov     r0, #0x2
	strh    r0, [r2, #0x8]
	ldrh    r0, [r9, #0x4]
	mov     r1, #0x1
	add     r0, r0, #0x1
	strh    r0, [r9, #0x4]
	ldrh    r0, [r8, #0xae]
	add     r0, r0, #0x1
	strh    r0, [r8, #0xae]
	ldr     r0, [r9, #0xc]
	ldr     r2, [r9, #0x10]
	mov     lr, pc
	bx      r2
@ 0x600db88

.arm
Function_600db88: @ 600db88 :arm
	b       branch_600dc18
@ 0x600db8c

.arm
branch_600db8c: @ 600db8c :arm
	ldr     r1, [r9, #0xc]
	mov     r0, #0x0
	strh    r0, [r1, #0xc]
	ldrh    r0, [r5, r4]
	orr     r0, r0, #2, 18 @ #0x8000
	strh    r0, [r5, r4]
	b       branch_600dc18
@ 0x600dba8

.arm
branch_600dba8: @ 600dba8 :arm
	ldrh    r0, [r0, #0x4]
	ldr     r2, [r9, #0xc]
	and     r0, r0, #0xff
	ldrh    r1, [r2, #0xc]
	add     r0, r1, r0
	strh    r0, [r2, #0xc]
	b       branch_600dbd4
@ 0x600dbc4

.arm
branch_600dbc4: @ 600dbc4 :arm
	ldrh    r1, [r0, #0x4]
	ldr     r0, [r9, #0xc]
	and     r1, r1, #0xff
	strh    r1, [r0, #0xc]
.arm
branch_600dbd4: @ 600dbd4 :arm
	ldrh    r0, [r9, #0x4]
	mov     r1, #0x2
	add     r0, r0, #0x1
	strh    r0, [r9, #0x4]
	ldr     r0, [r9, #0xc]
	ldr     r2, [r9, #0x10]
	mov     lr, pc
	bx      r2
@ 0x600dbf4

.arm
Function_600dbf4: @ 600dbf4 :arm
	b       branch_600dc18
@ 0x600dbf8

.arm
branch_600dbf8: @ 600dbf8 :arm
	ldrh    r0, [r9, #0x4]
	mov     r1, #0x3
	add     r0, r0, #0x1
	strh    r0, [r9, #0x4]
	ldr     r0, [r9, #0x8]
	ldr     r2, [r9, #0x10]
	mov     lr, pc
	bx      r2
@ 0x600dc18

.arm
branch_600dc18: @ 600dc18 :arm
	subs    r10, r10, #0x1
	bpl     branch_600da84
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x600dc28

.word 0x380fff4 @ 0x600dc28
.word 0x4808032 @ 0x600dc2c
.arm
Function_600dc30: @ 600dc30 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r0, [pc, #0x344] @ [0x600df80] (=0x380fff4)
	ldr     r4, [r0]
	add     r0, r4, #0xdc
	add     r5, r0, #1, 22 @ #0x400
.arm
branch_600dc44: @ 600dc44 :arm
	ldr     r1, [pc, #0x338] @ [0x600df84] (=0x480805a)
	ldrh    r0, [r5, #0x4]
	ldrh    r6, [r1]
	cmp     r6, r0
	beq     branch_600df78
	ldr     r0, [pc, #0x328] @ [0x600df88] (=0x8c6)
	cmp     r6, r0
	bcc     branch_600dc68
	bl      Function_600a9f8
.arm
branch_600dc68: @ 600dc68 :arm
	mov     r6, r6, lsl #1
	add     r0, r6, #1, 18 @ #0x4000
	add     r7, r0, #18, 10 @ #0x4800000
	add     r0, r7, #0x2
	bl      Function_600d8ec
	add     r1, r6, #18, 10 @ #0x4800000
	add     r1, r1, #1, 18 @ #0x4000
	ldrh    r2, [r1]
	ldr     r1, [pc, #0x2fc] @ [0x600df8c] (=0xffff)
	ldrh    r6, [r0]
	cmp     r2, r1
	ldreq   r0, [pc, #0x2e8] @ [0x600df84] (=0x480805a)
	streqh  r6, [r0]
	beq     branch_600dc44
	add     r0, r7, #0x8
	bl      Function_600d8ec
	ldrh    r1, [r0]
	mov     r0, r7
	bl      Function_600e138
	ldr     r1, [pc, #0x2c8] @ [0x600df84] (=0x480805a)
	movs    r8, r0
	strh    r6, [r1]
	bne     branch_600dcec
	ldrh    r0, [r7]
	and     r0, r0, #0xf
	cmp     r0, #0xc
	bne     branch_600dce0
	mov     r0, #0x10
	bl      Function_600bd28
	b       branch_600dc44
@ 0x600dce0

.arm
branch_600dce0: @ 600dce0 :arm
	mov     r0, #0x8
	bl      Function_600bd28
	b       branch_600dc44
@ 0x600dcec

.arm
branch_600dcec: @ 600dcec :arm
	ldr     r0, [pc, #0x28c] @ [0x600df80] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #6, 24 @ #0x600
	ldrh    r0, [r0, #0x90]
	tst     r0, #0x8
	beq     branch_600dd14
	ldrh    r0, [r8, #0x14]
	tst     r0, #1, 18 @ #0x4000
	movne   r0, #0x0
	strneh  r0, [r5, #0x2]
.arm
branch_600dd14: @ 600dd14 :arm
	ldrh    r0, [r8, #0x8]
	mov     r6, #0x1
	tst     r0, #2, 24 @ #0x200
	beq     branch_600dd6c
	ldrh    r0, [r8, #0x14]
	mov     r0, r0, lsl #21
	mov     r0, r0, lsr #31
	cmp     r0, #0x1
	beq     branch_600dd48
	ldrh    r0, [r8, #0x2a]
	mov     r0, r0, lsl #28
	movs    r0, r0, lsr #28
	beq     branch_600df18
.arm
branch_600dd48: @ 600dd48 :arm
	add     r0, r4, #98, 30 @ #0x188
	add     r1, r4, #122, 30 @ #0x1e8
	sub     r2, r8, #0x10
	mov     r6, #0x0
	bl      Function_60091c0
	mov     r0, #0x2
	mov     r1, #0x9
	bl      Function_6008f00
	b       branch_600df18
@ 0x600dd6c

.arm
branch_600dd6c: @ 600dd6c :arm
	and     r0, r0, #0xf
	cmp     r0, #0xf
	addls   pc, pc, r0, lsl #2
	b       branch_600df18
@ 0x600dd7c

.arm
Function_600dd7c: @ 600dd7c :arm
	b       branch_600de08
@ 0x600dd80

.arm
Function_600dd80: @ 600dd80 :arm
	b       branch_600ddf0
@ 0x600dd84

.arm
Function_600dd84: @ 600dd84 :arm
	b       branch_600df18
@ 0x600dd88

.arm
Function_600dd88: @ 600dd88 :arm
	b       branch_600df18
@ 0x600dd8c

.arm
Function_600dd8c: @ 600dd8c :arm
	b       branch_600df18
@ 0x600dd90

.arm
Function_600dd90: @ 600dd90 :arm
	b       branch_600de38
@ 0x600dd94

.arm
Function_600dd94: @ 600dd94 :arm
	b       branch_600df18
@ 0x600dd98

.arm
Function_600dd98: @ 600dd98 :arm
	b       branch_600df18
@ 0x600dd9c

.arm
Function_600dd9c: @ 600dd9c :arm
	b       branch_600ddbc
@ 0x600dda0

.arm
Function_600dda0: @ 600dda0 :arm
	b       branch_600df18
@ 0x600dda4

.arm
Function_600dda4: @ 600dda4 :arm
	b       branch_600df18
@ 0x600dda8

.arm
Function_600dda8: @ 600dda8 :arm
	b       branch_600df18
@ 0x600ddac

.arm
Function_600ddac: @ 600ddac :arm
	b       branch_600de90
@ 0x600ddb0

.arm
Function_600ddb0: @ 600ddb0 :arm
	b       branch_600dee4
@ 0x600ddb4

.arm
Function_600ddb4: @ 600ddb4 :arm
	b       branch_600de70
@ 0x600ddb8

.arm
Function_600ddb8: @ 600ddb8 :arm
	b       branch_600de70
@ 0x600ddbc

.arm
branch_600ddbc: @ 600ddbc :arm
	ldrh    r0, [r8, #0x14]
	and     r0, r0, #0xf
	cmp     r0, #0x8
	bne     branch_600df18
	add     r0, r4, #98, 30 @ #0x188
	add     r1, r4, #113, 30 @ #0x1c4
	sub     r2, r8, #0x10
	mov     r6, #0x0
	bl      Function_60091c0
	mov     r0, #0x2
	mov     r1, #0x6
	bl      Function_6008f00
	b       branch_600df18
@ 0x600ddf0

.arm
branch_600ddf0: @ 600ddf0 :arm
	ldrh    r0, [r8, #0x14]
	cmp     r0, #0x80
	bne     branch_600df18
	mov     r0, r8
	bl      Function_60158f0
	b       branch_600df18
@ 0x600de08

.arm
branch_600de08: @ 600de08 :arm
	ldrh    r0, [r8, #0x14]
	tst     r0, #0xf
	bne     branch_600df18
	add     r0, r4, #98, 30 @ #0x188
	add     r1, r4, #119, 30 @ #0x1dc
	sub     r2, r8, #0x10
	mov     r6, #0x0
	bl      Function_60091c0
	mov     r0, #0x1
	mov     r1, #0x7
	bl      Function_6008f00
	b       branch_600df18
@ 0x600de38

.arm
branch_600de38: @ 600de38 :arm
	ldrh    r1, [r8, #0x14]
	rsb     r0, r6, #58, 22 @ #0xe800
	and     r0, r1, r0
	cmp     r0, #0xa4
	bne     branch_600df18
	add     r0, r4, #98, 30 @ #0x188
	add     r1, r4, #119, 30 @ #0x1dc
	sub     r2, r8, #0x10
	mov     r6, #0x0
	bl      Function_60091c0
	mov     r0, #0x1
	mov     r1, #0x7
	bl      Function_6008f00
	b       branch_600df18
@ 0x600de70

.arm
branch_600de70: @ 600de70 :arm
	ldrh    r1, [r8, #0x14]
	ldr     r0, [pc, #0x114] @ [0x600df90] (=0xe7bf)
	and     r0, r1, r0
	cmp     r0, #70, 30 @ #0x118
	bne     branch_600df18
	mov     r0, r8
	bl      Function_6015670
	b       branch_600df18
@ 0x600de90

.arm
branch_600de90: @ 600de90 :arm
	ldrh    r1, [r8, #0x14]
	rsb     r0, r6, #58, 22 @ #0xe800
	and     r0, r1, r0
	cmp     r0, #138, 30 @ #0x228
	bne     branch_600df18
	ldr     r0, [pc, #0xd4] @ [0x600df80] (=0x380fff4)
	ldr     r1, [pc, #0xd0] @ [0x600df80] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x54]
	cmp     r0, #0x0
	ldreq   r0, [pc, #0xd0] @ [0x600df94] (=0x480803c)
	streqh  r6, [r0]
	ldr     r2, [r1]
	mov     r0, r8
	ldr     r1, [r2, #0x5ac]
	add     r1, r1, #0x1
	str     r1, [r2, #0x5ac]
	bl      Function_60154f4
	mov     r6, r0
	b       branch_600df18
@ 0x600dee4

.arm
branch_600dee4: @ 600dee4 :arm
	ldrh    r1, [r8, #0x14]
	rsb     r0, r6, #58, 22 @ #0xe800
	and     r0, r1, r0
	cmp     r0, #134, 30 @ #0x218
	bne     branch_600df18
	ldr     r1, [pc, #0x80] @ [0x600df80] (=0x380fff4)
	mov     r0, r8
	ldr     r2, [r1]
	ldr     r1, [r2, #0x5b0]
	add     r1, r1, #0x1
	str     r1, [r2, #0x5b0]
	bl      Function_601581c
	mov     r6, r0
.arm
branch_600df18: @ 600df18 :arm
	cmp     r6, #0x0
	beq     branch_600df2c
	add     r0, r4, #98, 30 @ #0x188
	sub     r1, r8, #0x10
	bl      Function_6009140
.arm
branch_600df2c: @ 600df2c :arm
	ldr     r3, [pc, #0x4c] @ [0x600df80] (=0x380fff4)
	ldr     r0, [r3]
	add     r0, r0, #6, 24 @ #0x600
	ldrh    r0, [r0, #0x90]
	tst     r0, #0x1
	beq     branch_600dc44
	ldr     r2, [pc, #0x40] @ [0x600df8c] (=0xffff)
	ldr     r1, [pc, #0x48] @ [0x600df98] (=0x4805f60)
	mov     r6, #0x0
.arm
branch_600df50: @ 600df50 :arm
	cmp     r7, r1
	ldrcs   r0, [r3]
	add     r6, r6, #0x1
	addcs   r0, r0, #3, 24 @ #0x300
	ldrcsh  r0, [r0, #0xde]
	subcs   r7, r7, r0
	cmp     r6, #0x7
	strh    r2, [r7], #0x2
	bcc     branch_600df50
	b       branch_600dc44
@ 0x600df78

.arm
branch_600df78: @ 600df78 :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x600df80

.word 0x380fff4 @ 0x600df80
.word 0x480805a @ 0x600df84
.word 0x8c6 @ 0x600df88
.word 0xffff @ 0x600df8c
.word 0xe7bf @ 0x600df90
.word 0x480803c @ 0x600df94
.word 0x4805f60 @ 0x600df98
.arm
Function_600df9c: @ 600df9c :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0xcc] @ [0x600e074] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #0x2c
	add     r4, r0, #1, 22 @ #0x400
	ldrh    r0, [r4, #0x3c]
	cmp     r0, #0x0
	beq     branch_600e06c
	ldr     r1, [r4, #0x90]
	ldr     r0, [r4, #0x44]
	ldrh    r1, [r1, #0x10]
	ldrh    r0, [r0, #0x2]
	cmp     r1, r0
	beq     branch_600dfd8
	bl      Function_600dc30
.arm
branch_600dfd8: @ 600dfd8 :arm
	ldr     r0, [r4, #0x44]
	ldrh    r0, [r0, #0x4]
	ands    r2, r0, #0xff
	ldr     r0, [pc, #0x88] @ [0x600e074] (=0x380fff4)
	ldrne   r1, [r0]
	ldrne   r0, [r1, #0x5a0]
	addne   r0, r0, r2
	ldreq   r1, [r0]
	ldreq   r0, [r1, #0x5a0]
	addeq   r0, r0, #0x1
	str     r0, [r1, #0x5a0]
	ldrh    r1, [r4, #0x40]
	ldr     r0, [pc, #0x64] @ [0x600e074] (=0x380fff4)
	add     r1, r1, #0x1
	strh    r1, [r4, #0x40]
	ldr     r12, [r4, #0x90]
	ldr     r1, [r4, #0x44]
	ldrh    r3, [r12, #0x10]
	ldrh    r2, [r1, #0x2]
	mov     r1, #0x0
	eor     r2, r3, r2
	strh    r2, [r12, #0x12]
	ldr     r2, [r4, #0x90]
	ldrh    r2, [r2, #0x10]
	strh    r2, [r4, #0xa0]
	strh    r1, [r4, #0x3c]
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0xea]
	cmp     r0, #0x0
	beq     branch_600e058
	bl      Function_600a634
.arm
branch_600e058: @ 600e058 :arm
	ldr     r0, [pc, #0x14] @ [0x600e074] (=0x380fff4)
	ldr     r1, [r4, #0x90]
	ldr     r0, [r0]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600f384
.arm
branch_600e06c: @ 600e06c :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600e074

.word 0x380fff4 @ 0x600e074
.arm
Function_600e078: @ 600e078 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0xa8] @ [0x600e12c] (=0x380fff4)
	ldr     r2, [pc, #0xa8] @ [0x600e130] (=0x4808088)
	ldr     r1, [r0]
	ldrh    r0, [r2]
	add     r4, r1, #95, 30 @ #0x17c
	cmp     r0, #0x0
	bne     branch_600e0b8
	ldrh    r0, [r4, #0x38]
	cmp     r0, #0x0
	beq     branch_600e0b8
	mov     r1, #0x8
	mov     r0, #0x2
	strh    r1, [r2, #0x26]
	bl      Function_6012c84
	b       branch_600e124
@ 0x600e0b8

.arm
branch_600e0b8: @ 600e0b8 :arm
	add     r0, r1, #5, 24 @ #0x500
	ldrh    r1, [r0, #0x32]
	ldrh    r2, [r0, #0x2e]
	mvn     r0, r1
	tst     r2, r0
	bne     branch_600e0f0
	ldr     r0, [pc, #0x5c] @ [0x600e134] (=0x48080ae)
	mov     r1, #0x8
	strh    r1, [r0]
	ldrh    r0, [r4, #0x38]
	cmp     r0, #0x0
	beq     branch_600e0f0
	mov     r0, #0x2
	bl      Function_6012c84
.arm
branch_600e0f0: @ 600e0f0 :arm
	ldr     r0, [pc, #0x3c] @ [0x600e134] (=0x48080ae)
	mov     r1, #0x5
	strh    r1, [r0]
	ldrh    r0, [r4, #0x2c]
	cmp     r0, #0x0
	beq     branch_600e110
	mov     r0, #0x1
	bl      Function_6012c84
.arm
branch_600e110: @ 600e110 :arm
	ldrh    r0, [r4, #0x20]
	cmp     r0, #0x0
	beq     branch_600e124
	mov     r0, #0x0
	bl      Function_6012c84
.arm
branch_600e124: @ 600e124 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600e12c

.word 0x380fff4 @ 0x600e12c
.word 0x4808088 @ 0x600e130
.word 0x48080ae @ 0x600e134
.arm
Function_600e138: @ 600e138 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [pc, #0x60] @ [0x600e1a4] (=0x380fff4)
	mov     r5, r1
	ldr     r1, [r2]
	mov     r6, r0
	add     r0, r1, #98, 30 @ #0x188
	add     r1, r5, #0x22
	bl      Function_60090a4
	movs    r4, r0
	moveq   r0, #0x0
	beq     branch_600e19c
	mov     r1, r6
	add     r0, r4, #0x18
	add     r2, r5, #0xc
	bl      Function_600b8bc
	sub     r0, r5, #0x18
	strh    r0, [r4, #0x16]
	ldrh    r0, [r4, #0x22]
	ldrh    r1, [r4, #0x1e]
	and     r0, r0, #0xff
	and     r1, r1, #0xff
	mov     r0, r0, lsl #16
	orr     r0, r1, r0, lsr #8
	strh    r0, [r4, #0x1e]
	add     r0, r4, #0x10
.arm
branch_600e19c: @ 600e19c :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600e1a4

.word 0x380fff4 @ 0x600e1a4
.arm
Function_600e1a8: @ 600e1a8 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r8, r0
	ldrh    r0, [r8]
	tst     r0, #0x1
	movne   r0, #0x0
	bne     branch_600e244
	ldr     r4, [pc, #0x84] @ [0x600e24c] (=0x380fff4)
	ldr     r0, [r4]
	add     r1, r0, #5, 24 @ #0x500
	ldrh    r1, [r1, #0x2c]
	cmp     r1, #0x1
	bls     branch_600e240
	ldr     r1, [r0, #0x31c]
	mov     r7, #0x0
	add     r5, r1, #0x1c
	mov     r6, #0x1
	b       branch_600e230
@ 0x600e1ec

.arm
branch_600e1ec: @ 600e1ec :arm
	ldrh    r1, [r5]
	cmp     r1, #0x0
	beq     branch_600e228
	mov     r1, r8
	add     r0, r5, #0x4
	bl      Function_600acc0
	cmp     r0, #0x0
	movne   r0, r6
	bne     branch_600e244
	ldr     r0, [r4]
	add     r7, r7, #0x1
	add     r1, r0, #5, 24 @ #0x500
	ldrh    r1, [r1, #0x2c]
	cmp     r7, r1
	bcs     branch_600e240
.arm
branch_600e228: @ 600e228 :arm
	add     r6, r6, #0x1
	add     r5, r5, #0x1c
.arm
branch_600e230: @ 600e230 :arm
	add     r1, r0, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x22]
	cmp     r6, r1
	bcc     branch_600e1ec
.arm
branch_600e240: @ 600e240 :arm
	mov     r0, #0xff
.arm
branch_600e244: @ 600e244 :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x600e24c

.word 0x380fff4 @ 0x600e24c
.arm
Function_600e250: @ 600e250 :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r5, [pc, #0x130] @ [0x600e38c] (=0x380fff4)
	mov     r4, r0
	ldr     r0, [r5]
	ldrh    r1, [r4]
	add     r6, r0, #199, 30 @ #0x31c
	tst     r1, #0x1
	movne   r0, #0x0
	bne     branch_600e384
	add     r1, r0, #5, 24 @ #0x500
	ldrh    r1, [r1, #0x2c]
	mov     r8, #0x1
	cmp     r1, #0x1
	bls     branch_600e300
	ldr     r1, [r6]
	mov     r10, #0x0
	mov     r9, r10
	add     r7, r1, #0x1c
	b       branch_600e2ec
@ 0x600e29c

.arm
branch_600e29c: @ 600e29c :arm
	ldrh    r1, [r7]
	cmp     r1, #0x0
	beq     branch_600e2dc
	mov     r1, r4
	add     r0, r7, #0x4
	bl      Function_600acc0
	cmp     r0, #0x0
	movne   r0, r8
	bne     branch_600e384
	ldr     r0, [r5]
	add     r9, r9, #0x1
	add     r1, r0, #5, 24 @ #0x500
	ldrh    r1, [r1, #0x2c]
	cmp     r9, r1
	bcs     branch_600e2f8
	b       branch_600e2e4
@ 0x600e2dc

.arm
branch_600e2dc: @ 600e2dc :arm
	cmp     r10, #0x0
	moveq   r10, r8
.arm
branch_600e2e4: @ 600e2e4 :arm
	add     r8, r8, #0x1
	add     r7, r7, #0x1c
.arm
branch_600e2ec: @ 600e2ec :arm
	ldrh    r1, [r6, #0x6]
	cmp     r8, r1
	bcc     branch_600e29c
.arm
branch_600e2f8: @ 600e2f8 :arm
	cmp     r10, #0x0
	movne   r8, r10
.arm
branch_600e300: @ 600e300 :arm
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x22]
	cmp     r8, r0
	bcc     branch_600e374
	ldr     r7, [r6]
	ldrh    r5, [r6, #0x6]
	mov     r3, #1, 16 @ #0x10000
	mov     r6, #0x1
	mov     r8, #0x0
	mov     r0, #0x1c
	b       branch_600e360
@ 0x600e32c

.arm
branch_600e32c: @ 600e32c :arm
	mul     r2, r6, r0
	ldrh    r1, [r7, r2]
	add     r2, r7, r2
	cmp     r1, #0x30
	bcs     branch_600e35c
	ldrh    r1, [r2, #0x16]
	cmp     r1, #0x0
	bne     branch_600e35c
	ldrh    r1, [r2, #0x18]
	cmp     r3, r1
	movhi   r3, r1
	movhi   r8, r6
.arm
branch_600e35c: @ 600e35c :arm
	add     r6, r6, #0x1
.arm
branch_600e360: @ 600e360 :arm
	cmp     r6, r5
	bcc     branch_600e32c
	cmp     r8, #0x0
	moveq   r0, #0xff
	beq     branch_600e384
.arm
branch_600e374: @ 600e374 :arm
	mov     r0, r8
	mov     r1, r4
	bl      Function_600ee40
	mov     r0, r8
.arm
branch_600e384: @ 600e384 :arm
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x600e38c

.word 0x380fff4 @ 0x600e38c
.arm
Function_600e390: @ 600e390 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r2, [pc, #0x4c] @ [0x600e3e8] (=0x380fff4)
	mov     r7, r0
	ldr     r2, [r2]
	mov     r0, #1, 8 @ #0x1000000
	add     r4, r2, #107, 30 @ #0x1ac
	mov     r6, r1
	bl      Function_6008ef0
	ldrh    r1, [r4, #0x8]
	mov     r5, r0
	cmp     r1, #0x0
	bne     branch_600e3c8
	mov     r0, #0x0
	bl      Function_600e9b4
.arm
branch_600e3c8: @ 600e3c8 :arm
	mov     r0, r7
	mov     r1, r4
	mov     r2, r6
	bl      Function_60091c0
	mov     r0, r5
	bl      Function_6008ef8
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x600e3e8

.word 0x380fff4 @ 0x600e3e8
.arm
Function_600e3ec: @ 600e3ec :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r1, [pc, #0x80] @ [0x600e478] (=0x380fff4)
	ldrh    r5, [r0, #0x2]
	ldr     r0, [r1]
	mov     r1, #0x1c
	ldr     r2, [r0, #0x31c]
	mov     r0, #1, 8 @ #0x1000000
	mla     r6, r5, r1, r2
	bl      Function_6008ef0
	ldr     r1, [pc, #0x60] @ [0x600e478] (=0x380fff4)
	mov     r4, r0
	ldr     r0, [r1]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x50]
	cmp     r0, #0x1
	ldreqh  r0, [r6, #0x16]
	cmpeq   r0, #0x0
	bne     branch_600e43c
	mov     r0, r5
	bl      Function_600e9b4
.arm
branch_600e43c: @ 600e43c :arm
	ldrh    r1, [r6, #0x16]
	mov     r0, r4
	add     r1, r1, #0x1
	strh    r1, [r6, #0x16]
	bl      Function_6008ef8
	ldr     r0, [pc, #0x20] @ [0x600e478] (=0x380fff4)
	mov     r1, #0x1
	ldr     r0, [r0]
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r0, [r0, #0x34]
	tst     r0, r1, lsl r5
	ldreqh  r0, [r6, #0x1a]
	streqh  r0, [r6, #0x18]
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600e478

.word 0x380fff4 @ 0x600e478
.arm
Function_600e47c: @ 600e47c :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r1, [pc, #0x60] @ [0x600e4e8] (=0x380fff4)
	ldrh    r5, [r0, #0x2]
	ldr     r0, [r1]
	mov     r1, #0x1c
	ldr     r2, [r0, #0x31c]
	mov     r0, #1, 8 @ #0x1000000
	mla     r6, r5, r1, r2
	bl      Function_6008ef0
	ldr     r1, [pc, #0x40] @ [0x600e4e8] (=0x380fff4)
	mov     r4, r0
	ldr     r0, [r1]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x50]
	cmp     r0, #0x1
	ldreqh  r0, [r6, #0x16]
	cmpeq   r0, #0x1
	bne     branch_600e4cc
	mov     r0, r5
	bl      Function_600ea70
.arm
branch_600e4cc: @ 600e4cc :arm
	ldrh    r1, [r6, #0x16]
	mov     r0, r4
	sub     r1, r1, #0x1
	strh    r1, [r6, #0x16]
	bl      Function_6008ef8
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600e4e8

.word 0x380fff4 @ 0x600e4e8
.arm
Function_600e4ec: @ 600e4ec :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r0, #1, 8 @ #0x1000000
	mov     r5, r1
	bl      Function_6008ef0
	ldr     r3, [pc, #0xc8] @ [0x600e5d0] (=0x380fff4)
	mov     r4, r0
	cmp     r5, #0x40
	bcs     branch_600e56c
	ldr     r0, [r3]
	mov     r2, #0x1
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r1, [r0, #0x30]
	orr     r1, r1, r2, lsl r6
	strh    r1, [r0, #0x30]
	ldr     r0, [r3]
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r1, [r0, #0x32]
	orr     r1, r1, r2, lsl r6
	strh    r1, [r0, #0x32]
	ldr     r0, [r3]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x50]
	cmp     r0, #0x1
	bne     branch_600e5a8
	mov     r0, r6
	bl      Function_600e974
	cmp     r0, #0x0
	beq     branch_600e5a8
	mov     r0, r6
	bl      Function_600e808
	b       branch_600e5a8
@ 0x600e56c

.arm
branch_600e56c: @ 600e56c :arm
	ldr     r2, [r3]
	mov     r0, #0x1
	mvn     r1, r0, lsl r6
	add     r0, r2, #5, 24 @ #0x500
	ldrh    r2, [r0, #0x32]
	and     r1, r2, r1
	strh    r1, [r0, #0x32]
	ldr     r0, [r3]
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r0, [r0, #0x2e]
	mov     r0, r0, asr r6
	tst     r0, #0x1
	beq     branch_600e5a8
	mov     r0, r6
	bl      Function_600e650
.arm
branch_600e5a8: @ 600e5a8 :arm
	ldr     r1, [pc, #0x20] @ [0x600e5d0] (=0x380fff4)
	mov     r0, #0x1c
	ldr     r2, [r1]
	mul     r1, r6, r0
	ldr     r2, [r2, #0x31c]
	mov     r0, r4
	strh    r5, [r2, r1]
	bl      Function_6008ef8
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600e5d0

.word 0x380fff4 @ 0x600e5d0
.arm
Function_600e5d4: @ 600e5d4 :arm
	ldr     r3, [pc, #0x14] @ [0x600e5f0] (=0x380fff4)
	mov     r2, #0x1c
	ldr     r3, [r3]
	ldr     r3, [r3, #0x31c]
	mla     r2, r0, r2, r3
	strh    r1, [r2, #0xa]
	bx      lr
@ 0x600e5f0

.word 0x380fff4 @ 0x600e5f0
.arm
Function_600e5f4: @ 600e5f4 :arm
	ldr     r3, [pc, #0x48] @ [0x600e644] (=0x380fff4)
	mov     r2, #0x1
	ldr     r12, [r3]
	mvn     r3, r2, lsl r0
	add     r2, r12, #75, 30 @ #0x12c
	add     r12, r2, #1, 22 @ #0x400
	ldrh    r2, [r12, #0x2]
	and     r2, r2, r3
	orr     r0, r2, r1, lsl r0
	strh    r0, [r12, #0x2]
	ldrh    r0, [r12, #0x6]
	ldrh    r1, [r12, #0x2]
	mvn     r0, r0
	tst     r1, r0
	ldrne   r0, [pc, #0x14] @ [0x600e648] (=0x48080ac)
	mov     r1, #0x8
	strneh  r1, [r0]
	ldreq   r0, [pc, #0xc] @ [0x600e64c] (=0x48080ae)
	streqh  r1, [r0]
	bx      lr
@ 0x600e644

.word 0x380fff4 @ 0x600e644
.word 0x48080ac @ 0x600e648
.word 0x48080ae @ 0x600e64c
.arm
Function_600e650: @ 600e650 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_600e888
	cmp     r0, #0x40
	bne     branch_600e684
	ldr     r1, [pc, #0x20] @ [0x600e68c] (=0x380fff4)
	mov     r0, #0x1
	ldr     r2, [r1]
	mvn     r1, r0, lsl r4
	add     r0, r2, #5, 24 @ #0x500
	ldrh    r2, [r0, #0x30]
	and     r1, r2, r1
	strh    r1, [r0, #0x30]
.arm
branch_600e684: @ 600e684 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600e68c

.word 0x380fff4 @ 0x600e68c
.arm
Function_600e690: @ 600e690 :arm
	ldr     r1, [pc, #0x18] @ [0x600e6b0] (=0x380fff4)
	mov     r2, #0x1
	ldr     r1, [r1]
	add     r1, r1, #5, 24 @ #0x500
	ldrh    r3, [r1, #0x30]
	orr     r0, r3, r2, lsl r0
	strh    r0, [r1, #0x30]
	bx      lr
@ 0x600e6b0

.word 0x380fff4 @ 0x600e6b0
.arm
Function_600e6b4: @ 600e6b4 :arm
	ldr     r3, [pc, #0x14] @ [0x600e6d0] (=0x380fff4)
	mov     r2, #0x1c
	ldr     r3, [r3]
	ldr     r3, [r3, #0x31c]
	mla     r2, r0, r2, r3
	strh    r1, [r2, #0xc]
	bx      lr
@ 0x600e6d0

.word 0x380fff4 @ 0x600e6d0
.arm
Function_600e6d4: @ 600e6d4 :arm
	ldr     r3, [pc, #0x14] @ [0x600e6f0] (=0x380fff4)
	mov     r2, #0x1c
	ldr     r3, [r3]
	ldr     r3, [r3, #0x31c]
	mla     r2, r0, r2, r3
	strh    r1, [r2, #0x10]
	bx      lr
@ 0x600e6f0

.word 0x380fff4 @ 0x600e6f0
.arm
Function_600e6f4: @ 600e6f4 :arm
	ldr     r3, [pc, #0x14] @ [0x600e710] (=0x380fff4)
	mov     r2, #0x1c
	ldr     r3, [r3]
	ldr     r3, [r3, #0x31c]
	mla     r2, r0, r2, r3
	strh    r1, [r2, #0x14]
	bx      lr
@ 0x600e710

.word 0x380fff4 @ 0x600e710
.arm
Function_600e714: @ 600e714 :arm
	ldr     r3, [pc, #0x14] @ [0x600e730] (=0x380fff4)
	mov     r2, #0x1c
	ldr     r3, [r3]
	ldr     r3, [r3, #0x31c]
	mla     r2, r0, r2, r3
	strh    r1, [r2, #0xe]
	bx      lr
@ 0x600e730

.word 0x380fff4 @ 0x600e730
.arm
Function_600e734: @ 600e734 :arm
	ldr     r2, [pc, #0x18] @ [0x600e754] (=0x380fff4)
	mov     r1, #0x1c
	ldr     r2, [r2]
	ldr     r2, [r2, #0x31c]
	mla     r1, r0, r1, r2
	ldrh    r0, [r1, #0x1a]
	strh    r0, [r1, #0x18]
	bx      lr
@ 0x600e754

.word 0x380fff4 @ 0x600e754
.arm
Function_600e758: @ 600e758 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r1, [pc, #0xa0] @ [0x600e804] (=0x380fff4)
	mov     r7, r0
	ldr     r1, [r1]
	mov     r0, #1, 8 @ #0x1000000
	add     r1, r1, #75, 30 @ #0x12c
	add     r4, r1, #1, 22 @ #0x400
	bl      Function_6008ef0
	mov     r6, r0
	mov     r5, #0x1
	mov     r1, #0x2
	b       branch_600e7e8
@ 0x600e788

.arm
branch_600e788: @ 600e788 :arm
	ldrh    r0, [r4, #0xe]
	tst     r0, r1
	bne     branch_600e7e0
	orr     r0, r0, r1
	strh    r0, [r4, #0xe]
	ldrh    r0, [r4, #0xc]
	add     r0, r0, #0x1
	strh    r0, [r4, #0xc]
	ldrh    r0, [r4, #0xc]
	cmp     r0, #0x1
	bne     branch_600e7b8
	bl      Function_600a680
.arm
branch_600e7b8: @ 600e7b8 :arm
	ldr     r0, [pc, #0x44] @ [0x600e804] (=0x380fff4)
	mov     r1, #0x1c
	ldr     r2, [r0]
	mov     r0, r6
	ldr     r2, [r2, #0x31c]
	mla     r1, r7, r1, r2
	strh    r5, [r1, #0x2]
	bl      Function_6008ef8
	mov     r0, r5
	b       branch_600e7fc
@ 0x600e7e0

.arm
branch_600e7e0: @ 600e7e0 :arm
	add     r5, r5, #0x1
	mov     r1, r1, lsl #1
.arm
branch_600e7e8: @ 600e7e8 :arm
	cmp     r5, #0x10
	bcc     branch_600e788
	mov     r0, r6
	bl      Function_6008ef8
	mov     r0, #0x0
.arm
branch_600e7fc: @ 600e7fc :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x600e804

.word 0x380fff4 @ 0x600e804
.arm
Function_600e808: @ 600e808 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0x70] @ [0x600e884] (=0x380fff4)
	mov     r5, r0
	ldr     r4, [r1]
	bl      Function_600ea70
	mov     r0, r5
	bl      Function_600e974
	cmp     r0, #0x0
	beq     branch_600e87c
	ldr     r1, [pc, #0x50] @ [0x600e884] (=0x380fff4)
	mov     r2, #0x1
	ldr     r3, [r1]
	mov     r1, #0x1c
	ldr     r3, [r3, #0x31c]
	mov     r12, #0x0
	mla     r1, r5, r1, r3
	strh    r12, [r1, #0x2]
	add     r1, r4, #5, 24 @ #0x500
	ldrh    r3, [r1, #0x3a]
	mvn     r0, r2, lsl r0
	and     r0, r3, r0
	strh    r0, [r1, #0x3a]
	ldrh    r0, [r1, #0x38]
	sub     r0, r0, #0x1
	strh    r0, [r1, #0x38]
	ldrh    r0, [r1, #0x38]
	cmp     r0, #0x0
	bne     branch_600e87c
	bl      Function_600a634
.arm
branch_600e87c: @ 600e87c :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600e884

.word 0x380fff4 @ 0x600e884
.arm
Function_600e888: @ 600e888 :arm
	ldr     r2, [pc, #0x14] @ [0x600e8a4] (=0x380fff4)
	mov     r1, #0x1c
	ldr     r2, [r2]
	mul     r1, r0, r1
	ldr     r0, [r2, #0x31c]
	ldrh    r0, [r0, r1]
	bx      lr
@ 0x600e8a4

.word 0x380fff4 @ 0x600e8a4
.arm
Function_600e8a8: @ 600e8a8 :arm
	ldr     r1, [pc, #0x14] @ [0x600e8c4] (=0x380fff4)
	ldr     r1, [r1]
	add     r1, r1, #5, 24 @ #0x500
	ldrh    r1, [r1, #0x30]
	mov     r0, r1, asr r0
	and     r0, r0, #0x1
	bx      lr
@ 0x600e8c4

.word 0x380fff4 @ 0x600e8c4
.arm
Function_600e8c8: @ 600e8c8 :arm
	ldr     r1, [pc, #0x14] @ [0x600e8e4] (=0x380fff4)
	ldr     r1, [r1]
	add     r1, r1, #5, 24 @ #0x500
	ldrh    r1, [r1, #0x2e]
	mov     r0, r1, asr r0
	and     r0, r0, #0x1
	bx      lr
@ 0x600e8e4

.word 0x380fff4 @ 0x600e8e4
.arm
Function_600e8e8: @ 600e8e8 :arm
	ldr     r2, [pc, #0x14] @ [0x600e904] (=0x380fff4)
	mov     r1, #0x1c
	ldr     r2, [r2]
	ldr     r2, [r2, #0x31c]
	mla     r1, r0, r1, r2
	add     r0, r1, #0x4
	bx      lr
@ 0x600e904

.word 0x380fff4 @ 0x600e904
.arm
Function_600e908: @ 600e908 :arm
	ldr     r2, [pc, #0x14] @ [0x600e924] (=0x380fff4)
	mov     r1, #0x1c
	ldr     r2, [r2]
	ldr     r2, [r2, #0x31c]
	mla     r1, r0, r1, r2
	ldrh    r0, [r1, #0xe]
	bx      lr
@ 0x600e924

.word 0x380fff4 @ 0x600e924
.arm
Function_600e928: @ 600e928 :arm
	ldr     r2, [pc, #0x14] @ [0x600e944] (=0x380fff4)
	mov     r1, #0x1c
	ldr     r2, [r2]
	ldr     r2, [r2, #0x31c]
	mla     r1, r0, r1, r2
	ldrh    r0, [r1, #0x14]
	bx      lr
@ 0x600e944

.word 0x380fff4 @ 0x600e944
.arm
Function_600e948: @ 600e948 :arm
	ldr     r2, [pc, #0x20] @ [0x600e970] (=0x380fff4)
	mov     r1, #0x1c
	ldr     r2, [r2]
	ldr     r2, [r2, #0x31c]
	mla     r1, r0, r1, r2
	ldrh    r0, [r1, #0x10]
	tst     r0, #0x2
	movne   r0, #0x14
	moveq   r0, #0xa
	bx      lr
@ 0x600e970

.word 0x380fff4 @ 0x600e970
.arm
Function_600e974: @ 600e974 :arm
	ldr     r2, [pc, #0x14] @ [0x600e990] (=0x380fff4)
	mov     r1, #0x1c
	ldr     r2, [r2]
	ldr     r2, [r2, #0x31c]
	mla     r1, r0, r1, r2
	ldrh    r0, [r1, #0x2]
	bx      lr
@ 0x600e990

.word 0x380fff4 @ 0x600e990
.arm
Function_600e994: @ 600e994 :arm
	ldr     r2, [pc, #0x14] @ [0x600e9b0] (=0x380fff4)
	mov     r1, #0x1c
	ldr     r2, [r2]
	ldr     r2, [r2, #0x31c]
	mla     r1, r0, r1, r2
	ldrh    r0, [r1, #0x16]
	bx      lr
@ 0x600e9b0

.word 0x380fff4 @ 0x600e9b0
.arm
Function_600e9b4: @ 600e9b4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r5, r0
	bl      Function_600e888
	cmp     r0, #0x40
	bne     branch_600ea60
	ldr     r0, [pc, #0x98] @ [0x600ea68] (=0x380fff4)
	mov     r1, #0x1
	ldr     r2, [r0]
	add     r0, r2, #5, 24 @ #0x500
	ldrh    r0, [r0, #0x34]
	tst     r0, r1, lsl r5
	bne     branch_600ea60
	add     r0, r2, #3, 24 @ #0x300
	ldrh    r2, [r0, #0xd8]
	ldr     r1, [pc, #0x78] @ [0x600ea6c] (=0x480425c)
	mov     r0, #1, 8 @ #0x1000000
	add     r6, r2, r1
	bl      Function_6008ef0
	mov     r4, r0
	cmp     r5, #0x0
	bne     branch_600ea24
	add     r0, r6, #0x4
	bl      Function_600ba0c
	orr     r1, r0, #0x1
	add     r0, r6, #0x4
	and     r1, r1, #0xff
	bl      Function_600b9e0
	b       branch_600ea58
@ 0x600ea24

.arm
branch_600ea24: @ 600ea24 :arm
	mov     r0, r5
	bl      Function_600e974
	mov     r5, r0
	add     r0, r6, #0x5
	add     r6, r0, r5, lsr #3
	mov     r0, r6
	bl      Function_600ba0c
	and     r1, r5, #0x7
	mov     r2, #0x1
	orr     r1, r0, r2, lsl r1
	mov     r0, r6
	and     r1, r1, #0xff
	bl      Function_600b9e0
.arm
branch_600ea58: @ 600ea58 :arm
	mov     r0, r4
	bl      Function_6008ef8
.arm
branch_600ea60: @ 600ea60 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600ea68

.word 0x380fff4 @ 0x600ea68
.word 0x480425c @ 0x600ea6c
.arm
Function_600ea70: @ 600ea70 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r5, r0
	bl      Function_600e888
	cmp     r0, #0x40
	bne     branch_600eb0c
	ldr     r0, [pc, #0x88] @ [0x600eb14] (=0x380fff4)
	ldr     r2, [pc, #0x88] @ [0x600eb18] (=0x480425c)
	ldr     r1, [r0]
	mov     r0, #1, 8 @ #0x1000000
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0xd8]
	add     r6, r1, r2
	bl      Function_6008ef0
	mov     r4, r0
	cmp     r5, #0x0
	bne     branch_600eacc
	add     r0, r6, #0x4
	bl      Function_600ba0c
	and     r1, r0, #0xfe
	add     r0, r6, #0x4
	and     r1, r1, #0xff
	bl      Function_600b9e0
	b       branch_600eb04
@ 0x600eacc

.arm
branch_600eacc: @ 600eacc :arm
	mov     r0, r5
	bl      Function_600e974
	mov     r5, r0
	add     r0, r6, #0x5
	add     r6, r0, r5, lsr #3
	mov     r0, r6
	bl      Function_600ba0c
	and     r1, r5, #0x7
	mov     r2, #0x1
	mvn     r1, r2, lsl r1
	and     r1, r1, r0
	mov     r0, r6
	and     r1, r1, #0xff
	bl      Function_600b9e0
.arm
branch_600eb04: @ 600eb04 :arm
	mov     r0, r4
	bl      Function_6008ef8
.arm
branch_600eb0c: @ 600eb0c :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600eb14

.word 0x380fff4 @ 0x600eb14
.word 0x480425c @ 0x600eb18
.arm
Function_600eb1c: @ 600eb1c :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r11, [pc, #0x1a4] @ [0x600eccc] (=0x380fff4)
	mov     r9, #0x0
	ldr     r2, [r11]
	mov     r8, #0x1
	ldr     r1, [r2, #0x31c]
	add     r0, r2, #5, 24 @ #0x500
	ldrh    r10, [r0, #0x2c]
	add     r0, r2, #75, 30 @ #0x12c
	add     r7, r1, #0x1c
	add     r5, r0, #1, 22 @ #0x400
	add     r4, r2, #3, 24 @ #0x300
	b       branch_600ecb8
@ 0x600eb50

.arm
branch_600eb50: @ 600eb50 :arm
	ldrh    r0, [r7]
	cmp     r0, #0x0
	beq     branch_600eca8
	ldrh    r1, [r7, #0x18]
	cmp     r1, #0x0
	ldrne   r0, [pc, #0x164] @ [0x600ecd0] (=0xffff)
	cmpne   r1, r0
	beq     branch_600eca4
	sub     r0, r1, #0x1
	strh    r0, [r7, #0x18]
	ldrh    r0, [r7, #0x18]
	cmp     r0, #0x0
	bne     branch_600eca4
	ldrh    r0, [r7]
	cmp     r0, #0x20
	bcc     branch_600ec90
	mov     r0, r8
	bl      Function_600e888
	mov     r6, r0
	mov     r0, r8, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x20
	bl      Function_600e4ec
	mov     r0, r8
	bl      Function_6013af0
	ldrh    r0, [r4, #0x50]
	cmp     r0, #0x1
	bne     branch_600ec40
	cmp     r6, #0x20
	bls     branch_600ec90
	ldr     r1, [r11]
	mov     r0, r8, lsl #16
	add     r3, r1, #5, 24 @ #0x500
	ldrh    r6, [r3, #0x34]
	mov     r2, #0x1
	orr     r2, r6, r2, lsl r8
	strh    r2, [r3, #0x34]
	mov     r0, r0, lsr #16
	mov     r1, #0x0
	bl      Function_600e5f4
	ldr     r1, [r11]
	add     r0, r7, #0x4
	add     r3, r1, #5, 24 @ #0x500
	mov     r1, #0x1
	ldrh    r6, [r3, #0x30]
	mov     r2, r1
	orr     r2, r6, r2, lsl r8
	strh    r2, [r3, #0x30]
	mov     r2, #0x0
	bl      Function_6014c4c
	cmp     r0, #0x0
	mov     r1, #0x1
	beq     branch_600ec34
	strh    r1, [r0]
	bl      Function_6013e0c
	add     r9, r9, #0x1
	b       branch_600ecb0
@ 0x600ec34

.arm
branch_600ec34: @ 600ec34 :arm
	add     r0, r7, #0x4
	bl      Function_601096c
	b       branch_600ec90
@ 0x600ec40

.arm
branch_600ec40: @ 600ec40 :arm
	ldrh    r0, [r4, #0xcc]
	cmp     r8, r0
	bne     branch_600ec90
	add     r0, r7, #0x4
	mov     r1, #0x1
	mov     r2, #0x0
	bl      Function_6014c4c
	cmp     r0, #0x0
	beq     branch_600ec78
	mov     r1, #0x1
	strh    r1, [r0]
	bl      Function_6013e0c
	add     r9, r9, #0x1
	b       branch_600ecb0
@ 0x600ec78

.arm
branch_600ec78: @ 600ec78 :arm
	mov     r0, #0x20
	bl      Function_600a880
	bl      Function_600a7dc
	add     r0, r7, #0x4
	mov     r1, #0x1
	bl      Function_601096c
.arm
branch_600ec90: @ 600ec90 :arm
	mov     r0, #0x0
	strh    r0, [r7]
	ldrh    r0, [r5]
	sub     r0, r0, #0x1
	strh    r0, [r5]
.arm
branch_600eca4: @ 600eca4 :arm
	add     r9, r9, #0x1
.arm
branch_600eca8: @ 600eca8 :arm
	cmp     r9, r10
	bcs     branch_600ecc4
.arm
branch_600ecb0: @ 600ecb0 :arm
	add     r8, r8, #0x1
	add     r7, r7, #0x1c
.arm
branch_600ecb8: @ 600ecb8 :arm
	ldrh    r0, [r4, #0x22]
	cmp     r8, r0
	bcc     branch_600eb50
.arm
branch_600ecc4: @ 600ecc4 :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x600eccc

.word 0x380fff4 @ 0x600eccc
.word 0xffff @ 0x600ecd0
.arm
Function_600ecd4: @ 600ecd4 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_6013af0
	ldr     r2, [pc, #0x30] @ [0x600ed18] (=0x380fff4)
	mov     r0, #0x1c
	ldr     r1, [r2]
	mul     r0, r4, r0
	ldr     r1, [r1, #0x31c]
	mov     r3, #0x0
	strh    r3, [r1, r0]
	ldr     r0, [r2]
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r1, [r0, #0x2c]
	sub     r1, r1, #0x1
	strh    r1, [r0, #0x2c]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600ed18

.word 0x380fff4 @ 0x600ed18
.arm
Function_600ed1c: @ 600ed1c :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0x84] @ [0x600edac] (=0x380fff4)
	mov     r2, #0x1c
	ldr     r3, [r0]
	mov     r0, #0x0
	add     r1, r3, #3, 24 @ #0x300
	ldrh    r5, [r1, #0x22]
	ldr     r4, [r3, #0x31c]
	mul     r2, r5, r2
	mov     r1, r4
	bl      Function_6000598
	ldr     r1, [pc, #0x5c] @ [0x600edac] (=0x380fff4)
	mov     r0, #0x0
	ldr     r1, [r1]
	mov     r2, #0x10
	add     r1, r1, #75, 30 @ #0x12c
	add     r1, r1, #1, 22 @ #0x400
	bl      Function_6000598
	ldr     r2, [pc, #0x44] @ [0x600edb0] (=0xffff)
	mov     r3, #0x1
	strh    r2, [r4, #0x1a]
	mov     r0, #0x1c
	b       branch_600ed84
@ 0x600ed78

.arm
branch_600ed78: @ 600ed78 :arm
	mla     r1, r3, r0, r4
	strh    r2, [r1, #0x1a]
	add     r3, r3, #0x1
.arm
branch_600ed84: @ 600ed84 :arm
	cmp     r3, r5
	bcc     branch_600ed78
	ldr     r1, [pc, #0x20] @ [0x600edb4] (=0x60184cc)
	mov     r0, #0x0
	bl      Function_600ee40
	mov     r0, #0x0
	mov     r1, #0x40
	bl      Function_600e4ec
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600edac

.word 0x380fff4 @ 0x600edac
.word 0xffff @ 0x600edb0
.word 0x60184cc @ 0x600edb4
.arm
Function_600edb8: @ 600edb8 :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r0, [pc, #0x74] @ [0x600ee38] (=0x380fff4)
	mov     r6, #0x1
	ldr     r2, [r0]
	mov     r10, #0x0
	add     r1, r2, #3, 24 @ #0x300
	add     r0, r2, #75, 30 @ #0x12c
	ldr     r4, [r2, #0x31c]
	ldrh    r7, [r1, #0x22]
	add     r5, r0, #1, 22 @ #0x400
	mov     r9, #0x1a
	mov     r8, #0x1c
	b       branch_600ee00
@ 0x600edec

.arm
branch_600edec: @ 600edec :arm
	mla     r1, r6, r8, r4
	mov     r0, r10
	mov     r2, r9
	bl      Function_6000598
	add     r6, r6, #0x1
.arm
branch_600ee00: @ 600ee00 :arm
	cmp     r6, r7
	bcc     branch_600edec
	mov     r2, #0x1
	strh    r2, [r5]
	mov     r1, #0x0
	strh    r1, [r5, #0x2]
	ldr     r0, [pc, #0x1c] @ [0x600ee3c] (=0xfffe)
	strh    r2, [r5, #0x4]
	strh    r0, [r5, #0x6]
	strh    r1, [r5, #0xc]
	strh    r1, [r5, #0x8]
	strh    r2, [r5, #0xe]
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x600ee38

.word 0x380fff4 @ 0x600ee38
.word 0xfffe @ 0x600ee3c
.arm
Function_600ee40: @ 600ee40 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r2, [pc, #0xd0] @ [0x600ef1c] (=0x380fff4)
	mov     r7, r0
	ldr     r4, [r2]
	mov     r0, #0x1c
	mul     r2, r7, r0
	ldr     r3, [r4, #0x31c]
	mov     r6, r1
	ldrh    r0, [r3, r2]
	add     r5, r3, r2
	cmp     r0, #0x0
	addeq   r0, r4, #5, 24 @ #0x500
	ldreqh  r1, [r0, #0x2c]
	mov     r2, #0x1a
	addeq   r1, r1, #0x1
	streqh  r1, [r0, #0x2c]
	mov     r1, r5
	mov     r0, #0x0
	bl      Function_6000598
	ldr     r0, [pc, #0x88] @ [0x600ef1c] (=0x380fff4)
	mov     r4, #0x1
	ldr     r1, [r0]
	mov     r0, r7, lsl #16
	add     r2, r1, #5, 24 @ #0x500
	ldrh    r3, [r2, #0x34]
	mvn     r1, r4, lsl r7
	and     r3, r3, r1
	mov     r0, r0, lsr #16
	mov     r1, #0x0
	strh    r3, [r2, #0x34]
	bl      Function_600e5f4
	ldr     r0, [pc, #0x58] @ [0x600ef1c] (=0x380fff4)
	mov     r1, r6
	ldr     r2, [r0]
	add     r0, r5, #0x4
	add     r2, r2, #5, 24 @ #0x500
	ldrh    r3, [r2, #0x30]
	orr     r3, r3, r4, lsl r7
	strh    r3, [r2, #0x30]
	bl      Function_600a924
	ldr     r2, [pc, #0x38] @ [0x600ef20] (=0xffff)
	mov     r0, r7, lsl #16
	ldr     r1, [pc, #0x2c] @ [0x600ef1c] (=0x380fff4)
	strh    r2, [r5, #0x14]
	ldr     r1, [r1]
	mov     r0, r0, lsr #16
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r2, [r1, #0xa6]
	mov     r1, #0x20
	strh    r2, [r5, #0x10]
	ldrh    r2, [r5, #0x1a]
	strh    r2, [r5, #0x18]
	bl      Function_600e4ec
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x600ef1c

.word 0x380fff4 @ 0x600ef1c
.word 0xffff @ 0x600ef20
.arm
Function_600ef24: @ 600ef24 :arm
	ldr     r1, [pc, #0x20] @ [0x600ef4c] (=0x480819c)
	mov     r2, #250, 28 @ #0xfa0
	b       branch_600ef40
@ 0x600ef30

.arm
branch_600ef30: @ 600ef30 :arm
	ldrh    r0, [r1]
	tst     r0, #0x80
	bxne    lr
	sub     r2, r2, #0x1
.arm
branch_600ef40: @ 600ef40 :arm
	cmp     r2, #0x0
	bne     branch_600ef30
	bx      lr
@ 0x600ef4c

.word 0x480819c @ 0x600ef4c
.arm
Function_600ef50: @ 600ef50 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x8
	ldr     r2, [pc, #0x70] @ [0x600efd0] (=0x82ea)
	mov     r3, #0x0
	umull   lr, r12, r0, r2
	mla     r12, r0, r3, r12
	mov     r0, r3
	mla     r12, r0, r2, r12
	mov     r0, lr, lsr #6
	mov     r4, #0x1
	mov     r5, r1
	mov     r1, r12, lsr #6
	orr     r0, r0, r12, lsl #26
	mov     r2, #250, 30 @ #0x3e8
	str     r4, [sp, #0x4]
	bl      Function_600b1c8
	add     r3, sp, #0x4
	str     r3, [sp]
	ldr     r2, [pc, #0x34] @ [0x600efd4] (=0x380fff4)
	mov     r3, r5
	ldr     r2, [r2]
	add     r12, r2, #141, 30 @ #0x234
	mov     r2, r1
	mov     r1, r0
	add     r0, r12, #1, 22 @ #0x400
	bl      Function_6001af0
.arm
branch_600efb8: @ 600efb8 :arm
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	bne     branch_600efb8
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600efd0

.word 0x82ea @ 0x600efd0
.word 0x380fff4 @ 0x600efd4
.arm
Function_600efd8: @ 600efd8 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0x58] @ [0x600f03c] (=0x4808028)
	ldr     lr, [pc, #0x58] @ [0x600f040] (=0x4000208)
	mov     r5, #0x1
	add     r2, r1, #123, 30 @ #0x1ec
	add     r3, r1, #93, 30 @ #0x174
	mov     r12, #0x0
	b       branch_600f02c
@ 0x600eff8

.arm
branch_600eff8: @ 600eff8 :arm
	ldrh    r4, [lr]
	strh    r12, [lr]
	ldrh    r0, [r3]
	and     r0, r0, #0x3
	cmp     r0, #0x3
	ldrneh  r0, [r2]
	cmpne   r0, #0x5
	cmpne   r0, #0x7
	cmpne   r0, #0x8
	strneh  r12, [r1]
	ldrh    r0, [lr]
	movne   r5, r12
	strh    r4, [lr]
.arm
branch_600f02c: @ 600f02c :arm
	cmp     r5, #0x0
	bne     branch_600eff8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600f03c

.word 0x4808028 @ 0x600f03c
.word 0x4000208 @ 0x600f040
.arm
Function_600f044: @ 600f044 :arm
	ldr     r1, [pc, #0x28] @ [0x600f074] (=0x480815e)
	mov     r2, #0x0
	b       branch_600f064
@ 0x600f050

.arm
branch_600f050: @ 600f050 :arm
	ldrh    r0, [r1]
	tst     r0, #0x1
	moveq   r0, #0x0
	bxeq    lr
	add     r2, r2, #0x1
.arm
branch_600f064: @ 600f064 :arm
	cmp     r2, #10, 22 @ #0x2800
	bcc     branch_600f050
	mov     r0, #0x1
	bx      lr
@ 0x600f074

.word 0x480815e @ 0x600f074
.arm
Function_600f078: @ 600f078 :arm
	ldr     r1, [pc, #0x28] @ [0x600f0a8] (=0x4808180)
	mov     r2, #0x0
	b       branch_600f098
@ 0x600f084

.arm
branch_600f084: @ 600f084 :arm
	ldrh    r0, [r1]
	tst     r0, #0x1
	moveq   r0, #0x0
	bxeq    lr
	add     r2, r2, #0x1
.arm
branch_600f098: @ 600f098 :arm
	cmp     r2, #10, 22 @ #0x2800
	bcc     branch_600f084
	mov     r0, #0x1
	bx      lr
@ 0x600f0a8

.word 0x4808180 @ 0x600f0a8
.arm
Function_600f0ac: @ 600f0ac :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r4, [pc, #0x2a4] @ [0x600f35c] (=0x380fff4)
	mov     r3, #0x0
	ldr     r2, [r4]
	mov     r6, r3
	add     r0, r2, #0x24
	add     r5, r0, #1, 22 @ #0x400
	ldrh    r0, [r5, #0x4]
	cmp     r0, #0x0
	bne     branch_600f354
	ldr     r0, [r2, #0x200]
	sub     r2, r3, #0x1
	str     r0, [r5]
	cmp     r0, r2
	beq     branch_600f354
	ldr     r2, [r4]
	ldrh    r4, [r0, #0xe]
	add     r12, r2, #3, 24 @ #0x300
	ldrh    r2, [r12, #0x3e]
	add     r4, r0, r4, lsl #1
	cmp     r2, #0x0
	movne   r0, #0x1
	strneh  r0, [r4, #0x12]
	movne   r0, #0x6
	strneh  r0, [r4, #0x14]
	bne     branch_600f30c
	ldrh    r7, [r0, #0xc]
	ldrh    r2, [r4, #0x10]
	cmp     r7, r2
	movne   r0, #0xd
	strneh  r0, [r4, #0x14]
	bne     branch_600f30c
	and     r2, r7, #255, 24 @ #0xff00
	cmp     r2, #1, 24 @ #0x100
	bgt     branch_600f148
	bge     branch_600f194
	cmp     r2, #0x0
	beq     branch_600f164
	b       branch_600f274
@ 0x600f148

.arm
branch_600f148: @ 600f148 :arm
	cmp     r2, #2, 24 @ #0x200
	bgt     branch_600f158
	beq     branch_600f1b4
	b       branch_600f274
@ 0x600f158

.arm
branch_600f158: @ 600f158 :arm
	cmp     r2, #3, 24 @ #0x300
	beq     branch_600f260
	b       branch_600f274
@ 0x600f164

.arm
branch_600f164: @ 600f164 :arm
	ldrh    r6, [r5, #0x4]
	ldr     r1, [pc, #0x1f0] @ [0x600f360] (=0x6018670)
	tst     r6, #0x1
	and     r2, r7, #0xff
	mov     r6, #0x1
	mov     lr, #0xb
	movne   r3, #0x2
	bne     branch_600f27c
	ldrh    r7, [r12, #0x4c]
	cmp     r7, #0x20
	movcc   r3, r6
	b       branch_600f27c

branch_600f194: @ 600f194 :arm
	ldrh    r6, [r12, #0x4c]
	ldr     r1, [pc, #0x1c4] @ [0x600f364] (=Jumptable_60185e8)
	cmp     r6, #0x40
	and     r2, r7, #0xff
	mov     r6, #0x2
	mov     lr, #0x5
	movne   r3, #0x1
	b       branch_600f27c

branch_600f1b4: @ 600f1b4 :arm
	and     r2, r7, #0xff
	cmp     r2, #0x40
	bcs     branch_600f1dc
	ldrh    r1, [r12, #0x4c]
	mov     r6, #0x4
	cmp     r1, #0x10
	ldr     r1, [pc, #0x194] @ [0x600f368] (=0x60187d8)
	movcc   r3, #0x1
	mov     lr, #0x17
	b       branch_600f27c
@ 0x600f1dc

.arm
branch_600f1dc: @ 600f1dc :arm
	cmp     r2, #0x80
	bcs     branch_600f20c
	ldrh    r1, [r12, #0x4c]
	mov     r6, #0x8
	cmp     r1, #0x40
	sub     r1, r2, #0x40
	mov     r2, r1, lsl #16
	ldr     r1, [pc, #0x16c] @ [0x600f36c] (=0x6018640)
	movne   r3, #0x1
	mov     r2, r2, lsr #16
	mov     lr, #0x6
	b       branch_600f27c
@ 0x600f20c

.arm
branch_600f20c: @ 600f20c :arm
	ldrh    r1, [r12, #0x4c]
	cmp     r2, #0xc0
	bcs     branch_600f23c
	cmp     r1, #0x10
	sub     r1, r2, #0x80
	mov     r2, r1, lsl #16
	ldr     r1, [pc, #0x144] @ [0x600f370] (=0x6018720)
	movcc   r3, #0x1
	mov     r2, r2, lsr #16
	mov     r6, #0x10
	mov     lr, #0x17
	b       branch_600f27c
@ 0x600f23c

.arm
branch_600f23c: @ 600f23c :arm
	cmp     r1, #0x10
	sub     r1, r2, #0xc0
	mov     r2, r1, lsl #16
	ldr     r1, [pc, #0x124] @ [0x600f374] (=0x6018610)
	movcc   r3, #0x1
	mov     r2, r2, lsr #16
	mov     r6, #0x20
	mov     lr, #0x6
	b       branch_600f27c
@ 0x600f260

.arm
branch_600f260: @ 600f260 :arm
	ldr     r1, [pc, #0x110] @ [0x600f378] (=0x60186c8)
	and     r2, r7, #0xff
	mov     r6, #0x40
	mov     lr, #0xb
	b       branch_600f27c
@ 0x600f274

.arm
branch_600f274: @ 600f274 :arm
	mov     r2, #0x1
	mov     lr, #0x0
.arm
branch_600f27c: @ 600f27c :arm
	cmp     r2, lr
	movhi   r3, #0x3
	bhi     branch_600f2ac
	mov     lr, r2, lsl #3
	ldrh    r7, [r0, #0xe]
	ldrh    r12, [r1, lr]
	cmp     r7, r12
	addcs   r12, r1, lr
	ldrcsh  lr, [r4, #0x12]
	ldrcsh  r12, [r12, #0x2]
	cmpcs   lr, r12
	movcc   r3, #0x4
.arm
branch_600f2ac: @ 600f2ac :arm
	cmp     r3, #0x0
	movne   r0, #0x1
	strneh  r0, [r4, #0x12]
	strneh  r3, [r4, #0x14]
	bne     branch_600f30c
	ldrh    r3, [r5, #0x4]
	add     r1, r1, r2, lsl #3
	orr     r2, r3, r6
	strh    r2, [r5, #0x4]
	ldr     r2, [r1, #0x4]
	add     r1, r4, #0x10
	mov     lr, pc
	bx      r2
@ 0x600f2e0

.arm
Function_600f2e0: @ 600f2e0 :arm
	strh    r0, [r4, #0x14]
	ldrh    r0, [r4, #0x14]
	cmp     r0, #0x80
	beq     branch_600f354
	cmp     r0, #0x81
	bne     branch_600f30c
	ldrh    r1, [r5, #0x4]
	mvn     r0, r6
	and     r0, r1, r0
	strh    r0, [r5, #0x4]
	b       branch_600f330
@ 0x600f30c

.arm
branch_600f30c: @ 600f30c :arm
	ldrh    r1, [r5, #0x4]
	mvn     r0, r6
	and     r0, r1, r0
	strh    r0, [r5, #0x4]
	ldr     r0, [pc, #0x38] @ [0x600f35c] (=0x380fff4)
	ldr     r1, [r5]
	ldr     r0, [r0]
	add     r0, r0, #2, 24 @ #0x200
	bl      Function_600f384
.arm
branch_600f330: @ 600f330 :arm
	ldr     r0, [pc, #0x24] @ [0x600f35c] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #2, 24 @ #0x200
	ldrh    r0, [r0, #0x8]
	cmp     r0, #0x0
	beq     branch_600f354
	mov     r0, #0x2
	mov     r1, #0xb
	bl      Function_6008f00
branch_600f354: @ 600f354 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x600f35c

.word 0x380fff4 @ 0x600f35c
.word 0x6018670 @ 0x600f360
.word Jumptable_60185e8 @ 0x600f364
.word 0x60187d8 @ 0x600f368
.word 0x6018640 @ 0x600f36c
.word 0x6018720 @ 0x600f370
.word 0x6018610 @ 0x600f374
.word 0x60186c8 @ 0x600f378



.arm
Function_600f37c: @ 600f37c :arm
	mov     r0, #0x3
	bx      lr
@ 0x600f384


.arm
Function_600f384: @ 600f384 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r2, [pc, #0x78] @ [0x600f408] (=0x380fff4)
	mov     r5, r0
	ldr     r3, [r2]
	mov     r4, r1
	add     r2, r3, #1, 24 @ #0x100
	ldrh    r2, [r2, #0xfc]
	cmp     r2, #0x0
	beq     branch_600f3c4
	mov     r2, r4
	add     r1, r3, #125, 30 @ #0x1f4
	bl      Function_60091c0
	mov     r0, #0x2
	mov     r1, #0x13
	bl      Function_6008f00
	b       branch_600f400
@ 0x600f3c4

.arm
branch_600f3c4: @ 600f3c4 :arm
	ldr     r0, [r3, #0x304]
	mov     r2, #0x0
	bl      Function_6000284
	cmp     r0, #0x0
	beq     branch_600f3e8
	mov     r0, r5
	mov     r1, r4
	bl      Function_6009328
	b       branch_600f400
@ 0x600f3e8

.arm
branch_600f3e8: @ 600f3e8 :arm
	ldr     r1, [pc, #0x18] @ [0x600f408] (=0x380fff4)
	mov     r0, r5
	ldr     r1, [r1]
	mov     r2, r4
	add     r1, r1, #125, 30 @ #0x1f4
	bl      Function_60091c0
.arm
branch_600f400: @ 600f400 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x600f408

.word 0x380fff4 @ 0x600f408
.arm
Function_600f40c: @ 600f40c :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r6, [pc, #0x50] @ [0x600f468] (=0x380fff4)
	mov     r5, #0x0
	ldr     r0, [r6]
	mvn     r4, #0x0
	ldr     r7, [r0, #0x1f4]
	b       branch_600f458
@ 0x600f428

.arm
branch_600f428: @ 600f428 :arm
	ldr     r0, [r0, #0x304]
	mov     r1, r7
	mov     r2, r5
	bl      Function_6000284
	cmp     r0, #0x0
	beq     branch_600f460
	ldr     r0, [r6]
	mov     r1, r7
	add     r0, r0, #125, 30 @ #0x1f4
	bl      Function_6009328
	ldr     r0, [r6]
	ldr     r7, [r0, #0x1f4]
.arm
branch_600f458: @ 600f458 :arm
	cmp     r7, r4
	bne     branch_600f428
.arm
branch_600f460: @ 600f460 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x600f468

.word 0x380fff4 @ 0x600f468
.arm
Function_600f46c: @ 600f46c :arm
	ldr     r0, [pc, #0x10] @ [0x600f484] (=0x380fff4)
	mov     r1, #0x0
	ldr     r0, [r0]
	add     r0, r0, #1, 22 @ #0x400
	strh    r1, [r0, #0x28]
	bx      lr
@ 0x600f484

.word 0x380fff4 @ 0x600f484
.arm
Function_600f488: @ 600f488 :arm
	stmfd   sp!, {r4,lr}
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	mov     r4, r0
	ldrh    r0, [r4, #0x10]
	cmp     r0, #0x1
	movhi   r0, #0x5
	bhi     branch_600f4c0
	bl      Function_600b1d0
	ldrh    r0, [r4, #0x10]
	cmp     r0, #0x1
	bne     branch_600f4bc
	bl      Function_600a9c0
.arm
branch_600f4bc: @ 600f4bc :arm
	mov     r0, #0x0
.arm
branch_600f4c0: @ 600f4c0 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600f4c8

.arm
Function_600f4c8: @ 600f4c8 :arm
	stmfd   sp!, {r4,lr}
	mov     r2, #0x9
	strh    r2, [r1, #0x2]
	mov     r4, r0
	ldrh    r0, [r4, #0x10]
	cmp     r0, #0x1
	movhi   r0, #0x5
	bhi     branch_600f564
	ldrh    r1, [r4, #0x12]
	cmp     r1, #0x1
	movhi   r0, #0x5
	bhi     branch_600f564
	ldrh    r1, [r4, #0x14]
	cmp     r1, #0x1
	movhi   r0, #0x5
	bhi     branch_600f564
	bl      Function_600a3ec
	ldrh    r0, [r4, #0x10]
	cmp     r0, #0x1
	bne     branch_600f550
	ldrh    r0, [r4, #0x12]
	cmp     r0, #0x1
	bne     branch_600f530
	ldr     r0, [pc, #0x40] @ [0x600f56c] (=0x8001)
	bl      Function_600a480
	b       branch_600f538
@ 0x600f530

.arm
branch_600f530: @ 600f530 :arm
	mov     r0, #0x0
	bl      Function_600a480
.arm
branch_600f538: @ 600f538 :arm
	ldr     r0, [pc, #0x30] @ [0x600f570] (=0x380fff4)
	ldrh    r1, [r4, #0x14]
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	strh    r1, [r0, #0x58]
	b       branch_600f560
@ 0x600f550

.arm
branch_600f550: @ 600f550 :arm
	mov     r0, #2, 18 @ #0x8000
	bl      Function_600a480
	mov     r0, #0x2
	bl      Function_600a454
.arm
branch_600f560: @ 600f560 :arm
	mov     r0, #0x0
.arm
branch_600f564: @ 600f564 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x600f56c

.word 0x8001 @ 0x600f56c
.word 0x380fff4 @ 0x600f570
.arm
Function_600f574: @ 600f574 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r2, [pc, #0x130] @ [0x600f6b0] (=0x380fff4)
	mov     r5, r1
	ldr     r3, [r2]
	ldrh    r2, [r5, #0x2]
	add     r1, r3, #0x4
	add     r4, r1, #1, 22 @ #0x400
	sub     r1, r2, #0x3
	strh    r1, [r4, #0x4]
	mov     r1, #0x3
	strh    r1, [r5, #0x2]
	add     r1, r3, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x2e]
	mov     r6, r0
	cmp     r1, #0x1
	cmpne   r1, #0x3
	cmpne   r1, #0x2
	movne   r0, #0xb
	bne     branch_600f6a8
	ldr     r0, [pc, #0xe8] @ [0x600f6b0] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x4c]
	cmp     r0, #0x20
	movcc   r0, #0x1
	bcc     branch_600f6a8
	ldrh    r0, [r6, #0x16]
	cmp     r0, #0x20
	movhi   r0, #0x5
	bhi     branch_600f6a8
	ldrh    r0, [r6, #0x38]
	cmp     r0, #0x1
	movhi   r0, #0x5
	bhi     branch_600f6a8
	add     r0, r6, #0x3a
	bl      Function_600ba0c
	cmp     r0, #0x0
	moveq   r0, #0x5
	beq     branch_600f6a8
	ldrh    r0, [r6, #0x4a]
	cmp     r0, #250, 30 @ #0x3e8
	movhi   r0, #0x5
	bhi     branch_600f6a8
	cmp     r0, #0xa
	movcc   r0, #0x5
	bcc     branch_600f6a8
	ldrh    r0, [r6, #0x4c]
	cmp     r0, #0x10
	movhi   r0, #0x5
	bhi     branch_600f6a8
	mov     r8, #0x0
	add     r7, r6, #0x3a
	b       branch_600f66c
@ 0x600f648

.arm
branch_600f648: @ 600f648 :arm
	add     r0, r7, r8
	bl      Function_600ba0c
	cmp     r0, #0x0
	beq     branch_600f674
	bl      Function_600acf0
	cmp     r0, #0x0
	moveq   r0, #0x5
	beq     branch_600f6a8
	add     r8, r8, #0x1
.arm
branch_600f66c: @ 600f66c :arm
	cmp     r8, #0x10
	bcc     branch_600f648
.arm
branch_600f674: @ 600f674 :arm
	add     r0, r6, #0x10
	bl      Function_6009d0c
	ldrh    r0, [r6, #0x16]
	add     r1, r6, #0x18
	bl      Function_6009d70
	str     r6, [r4, #0x18]
	str     r5, [r4, #0x1c]
	mov     r2, #0x10
	mov     r0, #0x2
	mov     r1, #0x0
	strh    r2, [r4]
	bl      Function_6008f00
	mov     r0, #0x80
.arm
branch_600f6a8: @ 600f6a8 :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x600f6b0

.word 0x380fff4 @ 0x600f6b0
.arm
Function_600f6b4: @ 600f6b4 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [pc, #0x1a4] @ [0x600f864] (=0x380fff4)
	mov     r5, r1
	ldr     r3, [r2]
	mov     r1, #0x5
	strh    r1, [r5, #0x2]
	add     r1, r3, #3, 24 @ #0x300
	ldrh    r2, [r1, #0x2e]
	add     r1, r3, #0x4
	mov     r6, r0
	cmp     r2, #0x3
	add     r0, r3, #209, 30 @ #0x344
	cmpne   r2, #0x2
	add     r4, r1, #1, 22 @ #0x400
	movne   r0, #0xb
	bne     branch_600f85c
	ldrh    r0, [r0, #0x8]
	cmp     r0, #0x20
	movcc   r0, #0x1
	bcc     branch_600f85c
	mov     r0, #0x20
	bl      Function_600a880
	ldrh    r0, [r6, #0x18]
	tst     r0, #0x1
	movne   r0, #0x5
	bne     branch_600f85c
	ldrh    r0, [r6, #0x1e]
	cmp     r0, #0x0
	moveq   r0, #0x5
	beq     branch_600f85c
	cmp     r0, #0x20
	movhi   r0, #0x5
	bhi     branch_600f85c
	ldrh    r0, [r6, #0x46]
	cmp     r0, #0xa
	movcc   r0, #0x5
	bcc     branch_600f85c
	cmp     r0, #250, 30 @ #0x3e8
	movhi   r0, #0x5
	bhi     branch_600f85c
	ldrh    r0, [r6, #0x48]
	cmp     r0, #0xff
	movhi   r0, #0x5
	bhi     branch_600f85c
	ldrh    r0, [r6, #0x4a]
	ldr     r1, [pc, #0xf8] @ [0x600f868] (=0xfff0)
	tst     r0, r1
	movne   r0, #0x5
	bne     branch_600f85c
	bl      Function_600acf0
	cmp     r0, #0x0
	moveq   r0, #0x5
	beq     branch_600f85c
	ldrh    r2, [r6, #0x42]
	mov     r0, #1, 20 @ #0x1000
	rsb     r0, r0, #0x0
	tst     r2, r0
	movne   r0, #0x5
	bne     branch_600f85c
	ldrh    r1, [r6, #0x44]
	tst     r1, r0
	movne   r0, #0x5
	bne     branch_600f85c
	cmp     r2, #0x0
	moveq   r0, #0x5
	beq     branch_600f85c
	orrs    r0, r1, r2
	moveq   r0, #0x5
	beq     branch_600f85c
	ldrh    r0, [r6, #0x10]
	cmp     r0, #125, 28 @ #0x7d0
	movhi   r0, #0x5
	bhi     branch_600f85c
	mov     r0, #0x0
	bl      Function_6017f04
	cmp     r0, #0x0
	movne   r0, #0xe
	bne     branch_600f85c
	ldrh    r0, [r6, #0x40]
	tst     r0, #0x20
	beq     branch_600f804
	mov     r0, #0x1
	bl      Function_6009a30
	b       branch_600f80c
@ 0x600f804

.arm
branch_600f804: @ 600f804 :arm
	mov     r0, #0x0
	bl      Function_6009a30
.arm
branch_600f80c: @ 600f80c :arm
	add     r0, r6, #0x18
	bl      Function_6009d0c
	ldrh    r0, [r6, #0x1e]
	add     r1, r6, #0x20
	bl      Function_6009d70
	ldrh    r0, [r6, #0x46]
	bl      Function_6009e80
	ldrh    r0, [r6, #0x4a]
	mov     r1, #0x0
	bl      Function_600a0a0
	add     r0, r6, #0x42
	bl      Function_600a32c
	str     r6, [r4, #0x18]
	str     r5, [r4, #0x1c]
	mov     r2, #0x20
	mov     r0, #0x2
	mov     r1, #0x1
	strh    r2, [r4]
	bl      Function_6008f00
	mov     r0, #0x80
.arm
branch_600f85c: @ 600f85c :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600f864

.word 0x380fff4 @ 0x600f864
.word 0xfff0 @ 0x600f868
.arm
Function_600f86c: @ 600f86c :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [pc, #0xc4] @ [0x600f93c] (=0x380fff4)
	mov     r5, r1
	ldr     r3, [r2]
	mov     r1, #0x6
	strh    r1, [r5, #0x2]
	add     r1, r3, #3, 24 @ #0x300
	ldrh    r2, [r1, #0x2e]
	add     r1, r3, #0x4
	mov     r6, r0
	cmp     r2, #0x3
	add     r0, r3, #209, 30 @ #0x344
	cmpne   r2, #0x2
	add     r4, r1, #1, 22 @ #0x400
	movne   r0, #0xb
	bne     branch_600f934
	ldrh    r0, [r0, #0x8]
	cmp     r0, #0x20
	movcc   r0, #0x1
	bcc     branch_600f934
	ldrh    r0, [r6, #0x10]
	tst     r0, #0x1
	movne   r0, #0x5
	bne     branch_600f934
	ldrh    r0, [r6, #0x16]
	cmp     r0, #0x1
	movhi   r0, #0x5
	bhi     branch_600f934
	ldrh    r0, [r6, #0x18]
	cmp     r0, #125, 28 @ #0x7d0
	movhi   r0, #0x5
	bhi     branch_600f934
	cmp     r0, #0xa
	movcc   r0, #0x5
	bcc     branch_600f934
	mov     r0, #0x20
	bl      Function_600a880
	str     r6, [r4, #0x18]
	str     r5, [r4, #0x1c]
	mov     r0, #0x30
	strh    r0, [r4]
	ldr     r1, [r4, #0x18]
	add     r0, r5, #0x8
	ldrh    r1, [r1, #0x16]
	strh    r1, [r5, #0xe]
	ldr     r1, [r4, #0x18]
	add     r1, r1, #0x10
	bl      Function_600a924
	bl      Function_60102cc
	mov     r0, #0x80
.arm
branch_600f934: @ 600f934 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600f93c

.word 0x380fff4 @ 0x600f93c
.arm
Function_600f940: @ 600f940 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r3, [pc, #0x124] @ [0x600fa70] (=0x380fff4)
	mov     r6, r1
	ldr     r2, [r3]
	mov     r1, #0x4
	strh    r1, [r6, #0x2]
	ldr     r3, [r3]
	add     r1, r2, #0x4
	add     r2, r3, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x2e]
	mov     r7, r0
	cmp     r2, #0x3
	cmpne   r2, #0x2
	cmpne   r2, #0x1
	add     r5, r1, #1, 22 @ #0x400
	movne   r0, #0xb
	bne     branch_600fa68
	add     r0, r3, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x4c]
	cmp     r0, #0x30
	movcc   r0, #0x1
	bcc     branch_600fa68
	add     r0, r2, #0xfe
	add     r0, r0, #255, 24 @ #0xff00
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	cmp     r0, #0x1
	bhi     branch_600f9c0
	ldrh    r0, [r7, #0x10]
	tst     r0, #0x1
	movne   r0, #0x5
	bne     branch_600fa68
.arm
branch_600f9c0: @ 600f9c0 :arm
	add     r0, r6, #0x6
	add     r1, r7, #0x10
	bl      Function_600a924
	ldrh    r1, [r7, #0x16]
	add     r0, r6, #0x6
	mov     r2, #0x0
	bl      Function_6014c4c
	movs    r4, r0
	moveq   r0, #0x8
	beq     branch_600fa68
	str     r7, [r5, #0x18]
	str     r6, [r5, #0x1c]
	str     r4, [r5, #0x4]
	mov     r0, #0x41
	strh    r0, [r5]
	ldrh    r0, [r7, #0x10]
	tst     r0, #0x1
	beq     branch_600fa54
	ldr     r2, [pc, #0x60] @ [0x600fa70] (=0x380fff4)
	sub     r1, r4, #0x10
	ldr     r0, [r2]
	ldr     r0, [r0, #0x3ec]
	strh    r0, [r4, #0x4]
	ldr     r0, [r2]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600e390
	ldr     r0, [pc, #0x40] @ [0x600fa70] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r1, [r0, #0x32]
	ldrh    r2, [r0, #0x2e]
	mvn     r0, r1
	tst     r2, r0
	bne     branch_600fa64
	mov     r0, #0x2
	bl      Function_6012c84
	b       branch_600fa64
@ 0x600fa54

.arm
branch_600fa54: @ 600fa54 :arm
	add     r0, r7, #0x10
	bl      Function_6013be8
	mov     r0, r4
	bl      Function_6013e0c
.arm
branch_600fa64: @ 600fa64 :arm
	mov     r0, #0x80
.arm
branch_600fa68: @ 600fa68 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x600fa70

.word 0x380fff4 @ 0x600fa70
.arm
Function_600fa74: @ 600fa74 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r2, [pc, #0xc8] @ [0x600fb48] (=0x380fff4)
	mov     r6, r1
	ldr     r3, [r2]
	mov     r1, #0x3
	strh    r1, [r6, #0x2]
	add     r1, r3, #3, 24 @ #0x300
	ldrh    r2, [r1, #0x2e]
	add     r1, r3, #0x4
	cmp     r2, #0x3
	mov     r7, r0
	cmpne   r2, #0x2
	add     r4, r3, #209, 30 @ #0x344
	add     r5, r1, #1, 22 @ #0x400
	movne   r0, #0xb
	bne     branch_600fb40
	ldrh    r0, [r4, #0x8]
	cmp     r0, #0x30
	movcc   r0, #0x1
	bcc     branch_600fb40
	ldrh    r0, [r7, #0x10]
	tst     r0, #0x1
	movne   r0, #0x5
	bne     branch_600fb40
	ldrh    r0, [r7, #0x16]
	cmp     r0, #0x0
	moveq   r0, #0x5
	beq     branch_600fb40
	cmp     r0, #0xff
	movhi   r0, #0x5
	bhi     branch_600fb40
	ldrh    r0, [r7, #0x18]
	cmp     r0, #125, 28 @ #0x7d0
	movhi   r0, #0x5
	bhi     branch_600fb40
	cmp     r0, #0xa
	movcc   r0, #0x5
	bcc     branch_600fb40
	mov     r0, #0x30
	bl      Function_600a880
	bl      Function_600a7dc
	ldrh    r1, [r7, #0x16]
	mov     r0, #0x50
	strh    r1, [r4, #0x70]
	ldrh    r1, [r7, #0x16]
	strh    r1, [r4, #0x72]
	str     r7, [r5, #0x18]
	str     r6, [r5, #0x1c]
	strh    r0, [r5]
	bl      Function_60103f0
	mov     r0, #0x80
.arm
branch_600fb40: @ 600fb40 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x600fb48

.word 0x380fff4 @ 0x600fb48
.arm
Function_600fb4c: @ 600fb4c :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [pc, #0xb0] @ [0x600fc08] (=0x380fff4)
	mov     r2, #0x3
	ldr     r12, [r3]
	strh    r2, [r1, #0x2]
	add     r2, r12, #3, 24 @ #0x300
	ldrh    r3, [r2, #0x2e]
	add     r2, r12, #0x4
	cmp     r3, #0x3
	cmpne   r3, #0x2
	add     r12, r12, #209, 30 @ #0x344
	add     lr, r2, #1, 22 @ #0x400
	movne   r0, #0xb
	bne     branch_600fc00
	ldrh    r2, [r12, #0x8]
	cmp     r2, #0x30
	movcc   r0, #0x1
	bcc     branch_600fc00
	ldrh    r2, [r0, #0x10]
	tst     r2, #0x1
	movne   r0, #0x5
	bne     branch_600fc00
	ldrh    r3, [r0, #0x16]
	cmp     r3, #0x1
	movcc   r0, #0x5
	bcc     branch_600fc00
	cmp     r3, #0xff
	movhi   r0, #0x5
	bhi     branch_600fc00
	ldrh    r2, [r0, #0x18]
	cmp     r2, #125, 28 @ #0x7d0
	movhi   r0, #0x5
	bhi     branch_600fc00
	cmp     r2, #0xa
	movcc   r0, #0x5
	bcc     branch_600fc00
	strh    r3, [r12, #0x70]
	ldrh    r3, [r0, #0x16]
	mov     r2, #0x60
	strh    r3, [r12, #0x72]
	str     r0, [lr, #0x18]
	str     r1, [lr, #0x1c]
	strh    r2, [lr]
	bl      Function_60104ec
	mov     r0, #0x80
.arm
branch_600fc00: @ 600fc00 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x600fc08

.word 0x380fff4 @ 0x600fc08
.arm
Function_600fc0c: @ 600fc0c :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r3, [pc, #0xfc] @ [0x600fd14] (=0x380fff4)
	mov     r6, r1
	ldr     r2, [r3]
	mov     r1, #0x1
	strh    r1, [r6, #0x2]
	ldr     r3, [r3]
	add     r1, r2, #0x4
	add     r2, r3, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x2e]
	mov     r7, r0
	cmp     r2, #0x0
	add     r5, r1, #1, 22 @ #0x400
	moveq   r0, #0xb
	beq     branch_600fd0c
	cmp     r2, #0x1
	beq     branch_600fc60
	ldrh    r0, [r7, #0x10]
	tst     r0, #0x1
	movne   r0, #0x5
	bne     branch_600fd0c
.arm
branch_600fc60: @ 600fc60 :arm
	add     r0, r3, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x4c]
	cmp     r0, #0x40
	movne   r0, #0x1
	bne     branch_600fd0c
	ldrh    r1, [r7, #0x16]
	add     r0, r7, #0x10
	bl      Function_6014434
	movs    r4, r0
	moveq   r0, #0x8
	beq     branch_600fd0c
	str     r7, [r5, #0x18]
	str     r6, [r5, #0x1c]
	str     r4, [r5, #0x4]
	mov     r0, #0x71
	strh    r0, [r5]
	ldrh    r0, [r7, #0x10]
	tst     r0, #0x1
	beq     branch_600fcf8
	ldr     r2, [pc, #0x60] @ [0x600fd14] (=0x380fff4)
	sub     r1, r4, #0x10
	ldr     r0, [r2]
	ldr     r0, [r0, #0x3ec]
	strh    r0, [r4, #0x4]
	ldr     r0, [r2]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600e390
	ldr     r0, [pc, #0x40] @ [0x600fd14] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r1, [r0, #0x32]
	ldrh    r2, [r0, #0x2e]
	mvn     r0, r1
	tst     r2, r0
	bne     branch_600fd08
	mov     r0, #0x2
	bl      Function_6012c84
	b       branch_600fd08
@ 0x600fcf8

.arm
branch_600fcf8: @ 600fcf8 :arm
	add     r0, r7, #0x10
	bl      Function_6013be8
	mov     r0, r4
	bl      Function_6013e0c
.arm
branch_600fd08: @ 600fd08 :arm
	mov     r0, #0x80
.arm
branch_600fd0c: @ 600fd0c :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x600fd14

.word 0x380fff4 @ 0x600fd14
.arm
Function_600fd18: @ 600fd18 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r3, [pc, #0x188] @ [0x600feac] (=0x380fff4)
	mov     r2, #0x1
	ldr     r3, [r3]
	mov     r6, r0
	strh    r2, [r1, #0x2]
	add     r5, r3, #199, 30 @ #0x31c
	ldrh    r0, [r5, #0x12]
	add     r4, r3, #209, 30 @ #0x344
	cmp     r0, #0x1
	cmpne   r0, #0x0
	movne   r0, #0xb
	bne     branch_600fea4
	ldrh    r0, [r4, #0x8]
	cmp     r0, #0x20
	movne   r0, #0x1
	bne     branch_600fea4
	ldrh    r0, [r6, #0x10]
	cmp     r0, #0x20
	movhi   r0, #0x5
	bhi     branch_600fea4
	cmp     r0, #0x0
	moveq   r0, #0x5
	beq     branch_600fea4
	ldrh    r0, [r6, #0x32]
	cmp     r0, #0xa
	movcc   r0, #0x5
	bcc     branch_600fea4
	cmp     r0, #250, 30 @ #0x3e8
	movhi   r0, #0x5
	bhi     branch_600fea4
	ldrh    r0, [r6, #0x34]
	cmp     r0, #0x0
	moveq   r0, #0x5
	beq     branch_600fea4
	cmp     r0, #0xff
	movhi   r0, #0x5
	bhi     branch_600fea4
	ldrh    r0, [r6, #0x36]
	ldr     r1, [pc, #0xf4] @ [0x600feb0] (=0xfff0)
	tst     r0, r1
	movne   r0, #0x5
	bne     branch_600fea4
	bl      Function_600acf0
	cmp     r0, #0x0
	moveq   r0, #0x5
	beq     branch_600fea4
	ldrh    r1, [r6, #0x38]
	cmp     r1, #0x0
	moveq   r0, #0x5
	beq     branch_600fea4
	mov     r0, #1, 20 @ #0x1000
	rsb     r0, r0, #0x0
	tst     r1, r0
	movne   r0, #0x5
	bne     branch_600fea4
	ldrh    r1, [r6, #0x3a]
	cmp     r1, #0x0
	moveq   r0, #0x5
	beq     branch_600fea4
	tst     r1, r0
	movne   r0, #0x5
	bne     branch_600fea4
	ldrh    r0, [r6, #0x3c]
	cmp     r0, #0x80
	movhi   r0, #0x5
	bhi     branch_600fea4
	mov     r0, #0x0
	bl      Function_6017f04
	cmp     r0, #0x0
	movne   r0, #0xe
	bne     branch_600fea4
	ldrh    r0, [r5, #0x12]
	cmp     r0, #0x0
	bne     branch_600fe50
	ldr     r0, [pc, #0x68] @ [0x600feb4] (=0x60184cc)
	bl      Function_6009d0c
	b       branch_600fe58
@ 0x600fe50

.arm
branch_600fe50: @ 600fe50 :arm
	add     r0, r5, #0x8
	bl      Function_6009d0c
.arm
branch_600fe58: @ 600fe58 :arm
	ldrh    r0, [r6, #0x10]
	add     r1, r6, #0x12
	bl      Function_6009d70
	ldrh    r0, [r6, #0x32]
	bl      Function_6009e80
	ldrh    r0, [r6, #0x34]
	bl      Function_6009ed8
	ldrh    r0, [r6, #0x36]
	mov     r1, #0x0
	bl      Function_600a0a0
	add     r0, r6, #0x38
	bl      Function_600a32c
	ldrh    r0, [r6, #0x3c]
	add     r1, r6, #0x3e
	bl      Function_600a6b0
	mov     r0, #0x0
	strh    r0, [r4, #0xa4]
	bl      Function_600ae10
	mov     r0, #0x0
.arm
branch_600fea4: @ 600fea4 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x600feac

.word 0x380fff4 @ 0x600feac
.word 0xfff0 @ 0x600feb0
.word 0x60184cc @ 0x600feb4
.arm
Function_600feb8: @ 600feb8 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r2, [pc, #0xd4] @ [0x600ff98] (=0x380fff4)
	mov     r5, r1
	ldr     r3, [r2]
	mov     r1, #0x12
	strh    r1, [r5, #0x2]
	ldr     r2, [r2]
	add     r1, r3, #0x4
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x4c]
	mov     r6, r0
	cmp     r2, #0x20
	add     r4, r1, #1, 22 @ #0x400
	movne   r0, #0x1
	bne     branch_600ff90
	ldrh    r0, [r6, #0x12]
	cmp     r0, #0x3
	movhi   r0, #0x5
	bhi     branch_600ff90
	ldrh    r0, [r6, #0x14]
	cmp     r0, #0x3f
	movhi   r0, #0x5
	bhi     branch_600ff90
	ldrh    r0, [r6, #0x16]
	cmp     r0, #0x0
	moveq   r0, #0x5
	beq     branch_600ff90
	cmp     r0, #250, 30 @ #0x3e8
	movhi   r0, #0x5
	bhi     branch_600ff90
	mov     r8, #0x0
	add     r7, r6, #0x18
	b       branch_600ff60
@ 0x600ff3c

.arm
branch_600ff3c: @ 600ff3c :arm
	add     r0, r7, r8
	bl      Function_600ba0c
	cmp     r0, #0x0
	beq     branch_600ff68
	bl      Function_600acf0
	cmp     r0, #0x0
	moveq   r0, #0x5
	beq     branch_600ff90
	add     r8, r8, #0x1
.arm
branch_600ff60: @ 600ff60 :arm
	cmp     r8, #0x10
	bcc     branch_600ff3c
.arm
branch_600ff68: @ 600ff68 :arm
	cmp     r8, #0x0
	moveq   r0, #0x5
	beq     branch_600ff90
	str     r6, [r4, #0x18]
	str     r5, [r4, #0x1c]
	mov     r0, #0x80
	strh    r0, [r4]
	strh    r0, [r5, #0x4]
	bl      Function_60105e0
	mov     r0, #0x80
.arm
branch_600ff90: @ 600ff90 :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x600ff98

.word 0x380fff4 @ 0x600ff98
.arm
Function_600ff9c: @ 600ff9c :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r0, [pc, #0x1dc] @ [0x6010184] (=0x380fff4)
	mov     r6, #0x0
	ldr     r2, [r0]
	add     r0, r2, #1, 22 @ #0x400
	ldrh    r1, [r0, #0x4]
	add     r0, r2, #0x4
	sub     r1, r1, #0x10
	cmp     r1, #0x5
	add     r4, r0, #1, 22 @ #0x400
	add     r5, r2, #209, 30 @ #0x344
	addls   pc, pc, r1, lsl #2
	b       branch_6010168
@ 0x600ffd0

.arm
Function_600ffd0: @ 600ffd0 :arm
	b       branch_600ffe8
@ 0x600ffd4

.arm
Function_600ffd4: @ 600ffd4 :arm
	b       branch_6010060
@ 0x600ffd8

.arm
Function_600ffd8: @ 600ffd8 :arm
	b       branch_60100f0
@ 0x600ffdc

.arm
Function_600ffdc: @ 600ffdc :arm
	b       branch_60100f0
@ 0x600ffe0

.arm
Function_600ffe0: @ 600ffe0 :arm
	b       branch_6010168
@ 0x600ffe4

.arm
Function_600ffe4: @ 600ffe4 :arm
	b       branch_6010148
@ 0x600ffe8

.arm
branch_600ffe8: @ 600ffe8 :arm
	mov     r0, #0x20
	bl      Function_600a880
	mov     r0, #0x2
	strh    r0, [r5, #0xc]
	ldr     r0, [r4, #0x1c]
	mov     r1, r6
	strh    r1, [r0, #0x8]
	ldr     r0, [r4, #0x1c]
	strh    r1, [r0, #0x6]
	strh    r1, [r4, #0x6]
	strh    r1, [r4, #0x8]
	ldr     r1, [r4, #0x18]
	ldrh    r0, [r1, #0x38]
	cmp     r0, #0x0
	ldrh    r0, [r1, #0x4a]
	bne     branch_6010050
	add     r1, r0, #0x3
	mov     r0, r1, asr #1
	add     r0, r1, r0, lsr #30
	mov     r0, r0, asr #2
	strh    r0, [r4, #0xc]
	ldrh    r0, [r4, #0xc]
	cmp     r0, #0xa
	movcc   r0, #0xa
	strcch  r0, [r4, #0xc]
	b       branch_6010054
@ 0x6010050

.arm
branch_6010050: @ 6010050 :arm
	strh    r0, [r4, #0xc]
.arm
branch_6010054: @ 6010054 :arm
	ldr     r0, [r4, #0x1c]
	mov     r1, #0x0
	strh    r1, [r0, #0x4]
.arm
branch_6010060: @ 6010060 :arm
	ldr     r1, [r4, #0x18]
	ldrh    r0, [r4, #0x6]
	add     r1, r1, #0x3a
	add     r0, r1, r0
	bl      Function_600ba0c
	movs    r5, r0
	moveq   r0, #0x15
	streqh  r0, [r4]
	moveq   r6, #0x1
	beq     branch_6010168
	ldrh    r1, [r4, #0x6]
	mov     r0, #0x0
	add     r1, r1, #0x1
	strh    r1, [r4, #0x6]
	strh    r0, [r4, #0xa]
	bl      Function_6017f04
	cmp     r0, #0x0
	beq     branch_60100c4
	ldr     r0, [r4, #0x1c]
	mov     r1, #0xe
	strh    r1, [r0, #0x4]
	mov     r0, #0x15
	strh    r0, [r4]
	mov     r6, #0x1
	b       branch_6010168
@ 0x60100c4

.arm
branch_60100c4: @ 60100c4 :arm
	ldrh    r0, [r4]
	mov     r1, #0x0
	cmp     r0, #0x10
	mov     r0, r5
	bne     branch_60100e4
	bl      Function_600a0a0
	bl      Function_600ae10
	b       branch_60100e8
@ 0x60100e4

.arm
branch_60100e4: @ 60100e4 :arm
	bl      Function_600a0a0
.arm
branch_60100e8: @ 60100e8 :arm
	mov     r0, #0x12
	strh    r0, [r4]
.arm
branch_60100f0: @ 60100f0 :arm
	mov     r0, #0x13
	strh    r0, [r4]
	ldr     r1, [r4, #0x18]
	ldrh    r0, [r1, #0x38]
	cmp     r0, #0x0
	bne     branch_6010138
	add     r0, r1, #0x10
	bl      Function_60148e0
	cmp     r0, #0x0
	bne     branch_6010134
	ldr     r0, [r4, #0x1c]
	mov     r1, #0x8
	strh    r1, [r0, #0x4]
	mov     r0, #0x15
	strh    r0, [r4]
	mov     r6, #0x1
	b       branch_6010168
@ 0x6010134

.arm
branch_6010134: @ 6010134 :arm
	bl      Function_6013e0c
.arm
branch_6010138: @ 6010138 :arm
	ldrh    r0, [r4, #0xc]
	ldr     r1, [pc, #0x44] @ [0x6010188] (=0x601018c)
	bl      Function_600b7a8
	b       branch_6010168
@ 0x6010148

.arm
branch_6010148: @ 6010148 :arm
	strh    r6, [r4]
	bl      Function_600b1d0
	ldr     r0, [pc, #0x2c] @ [0x6010184] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x2e]
	strh    r0, [r5, #0xc]
	bl      Function_601089c
.arm
branch_6010168: @ 6010168 :arm
	cmp     r6, #0x0
	beq     branch_601017c
	mov     r0, #0x2
	mov     r1, #0x0
	bl      Function_6008f00
.arm
branch_601017c: @ 601017c :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6010184

.word 0x380fff4 @ 0x6010184
.word Function_601018c @ =0x601018c, 0x6010188
.arm
Function_601018c: @ 601018c :arm
	ldr     r0, [pc, #0x54] @ [0x60101e8] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #0x4
	add     r2, r0, #1, 22 @ #0x400
	ldrh    r1, [r2, #0xa]
	ldrh    r0, [r2, #0xc]
	add     r0, r1, r0
	strh    r0, [r2, #0xa]
	ldr     r0, [r2, #0x18]
	ldrh    r1, [r2, #0xa]
	ldrh    r0, [r0, #0x4a]
	cmp     r1, r0
	bcc     branch_60101d8
	ldrh    r0, [r2, #0x6]
	cmp     r0, #0x10
	movcc   r0, #0x11
	strcch  r0, [r2]
	movcs   r0, #0x15
	strcsh  r0, [r2]
.arm
branch_60101d8: @ 60101d8 :arm
	ldr     r12, [pc, #0xc] @ [0x60101ec] (=0x6008f00)
	mov     r0, #0x2
	mov     r1, #0x0
	bx      r12
@ 0x60101e8

.word 0x380fff4 @ 0x60101e8
.word Function_6008f00 @ =0x6008f00, 0x60101ec
.arm
Function_60101f0: @ 60101f0 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x8c] @ [0x6010288] (=0x380fff4)
	ldr     r2, [r0]
	add     r0, r2, #1, 22 @ #0x400
	ldrh    r1, [r0, #0x4]
	add     r0, r2, #0x4
	cmp     r1, #0x20
	add     r4, r0, #1, 22 @ #0x400
	beq     branch_6010220
	cmp     r1, #0x25
	beq     branch_601024c
	b       branch_6010280
@ 0x6010220

.arm
branch_6010220: @ 6010220 :arm
	bl      Function_600ae10
	mov     r0, #0x0
	strh    r0, [r4, #0x4]
	strh    r0, [r4, #0x6]
	mov     r0, #0x21
	strh    r0, [r4]
	ldr     r0, [r4, #0x18]
	ldr     r1, [pc, #0x48] @ [0x601028c] (=0x6010290)
	ldrh    r0, [r0, #0x10]
	bl      Function_600b7a8
	b       branch_6010280
@ 0x601024c

.arm
branch_601024c: @ 601024c :arm
	ldrh    r1, [r4, #0x4]
	ldr     r0, [r4, #0x1c]
	strh    r1, [r0, #0x4]
	ldrh    r1, [r4, #0x6]
	ldr     r0, [r4, #0x1c]
	strh    r1, [r0, #0x6]
	ldrh    r0, [r4, #0x4]
	cmp     r0, #0x0
	beq     branch_6010274
	bl      Function_600b1d0
.arm
branch_6010274: @ 6010274 :arm
	mov     r0, #0x0
	strh    r0, [r4]
	bl      Function_601089c
.arm
branch_6010280: @ 6010280 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6010288

.word 0x380fff4 @ 0x6010288
.word Function_6010290 @ =0x6010290, 0x601028c
.arm
Function_6010290: @ 6010290 :arm
	ldr     r0, [pc, #0x2c] @ [0x60102c4] (=0x380fff4)
	ldr     r12, [pc, #0x2c] @ [0x60102c8] (=0x6008f00)
	ldr     r2, [r0]
	mov     r1, #0x7
	add     r0, r2, #0x4
	add     r0, r0, #1, 22 @ #0x400
	strh    r1, [r0, #0x4]
	mov     r3, #0x25
	add     r2, r2, #1, 22 @ #0x400
	mov     r0, #0x2
	mov     r1, #0x1
	strh    r3, [r2, #0x4]
	bx      r12
@ 0x60102c4

.word 0x380fff4 @ 0x60102c4
.word Function_6008f00 @ =0x6008f00, 0x60102c8
.arm
Function_60102cc: @ 60102cc :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0xd0] @ [0x60103a8] (=0x380fff4)
	ldr     r2, [r0]
	add     r0, r2, #1, 22 @ #0x400
	ldrh    r1, [r0, #0x4]
	add     r0, r2, #0x4
	cmp     r1, #0x30
	add     r4, r0, #1, 22 @ #0x400
	beq     branch_60102fc
	cmp     r1, #0x35
	beq     branch_6010378
	b       branch_60103a0
@ 0x60102fc

.arm
branch_60102fc: @ 60102fc :arm
	ldr     r0, [r4, #0x18]
	mov     r1, #0x0
	mov     r2, r1
	add     r0, r0, #0x10
	bl      Function_6014b8c
	cmp     r0, #0x0
	bne     branch_601033c
	ldr     r1, [r4, #0x1c]
	mov     r2, #0x8
	mov     r0, #0x2
	strh    r2, [r1, #0x4]
	mov     r2, #0x35
	mov     r1, r0
	strh    r2, [r4]
	bl      Function_6008f00
	b       branch_60103a0
@ 0x601033c

.arm
branch_601033c: @ 601033c :arm
	ldr     r1, [r4, #0x18]
	mov     r2, #0x1
	ldrh    r3, [r1, #0x16]
	mov     r1, #0x0
	strh    r3, [r0, #0x2c]
	strh    r2, [r0, #0x2e]
	strh    r1, [r0, #0x30]
	mov     r1, #0x31
	strh    r1, [r4]
	bl      Function_6013e0c
	ldr     r0, [r4, #0x18]
	ldr     r1, [pc, #0x3c] @ [0x60103ac] (=0x60103b0)
	ldrh    r0, [r0, #0x18]
	bl      Function_600b7a8
	b       branch_60103a0
@ 0x6010378

.arm
branch_6010378: @ 6010378 :arm
	mov     r0, #0x1
	bl      Function_6013a64
	mov     r0, #0x1
	bl      Function_6013a00
	mov     r0, #0x1
	mov     r1, #0x0
	bl      Function_6013d80
	mov     r0, #0x0
	strh    r0, [r4]
	bl      Function_601089c
.arm
branch_60103a0: @ 60103a0 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x60103a8

.word 0x380fff4 @ 0x60103a8
.word 0x60103b0 @ 0x60103ac
.arm
Function_60103b0: @ 60103b0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x30] @ [0x60103ec] (=0x380fff4)
	mov     r0, #0x2
	ldr     r12, [r1]
	mov     r3, #0x7
	add     r1, r12, #0x4
	ldr     r2, [r1, #0x41c]
	mov     r1, r0
	strh    r3, [r2, #0x4]
	add     r2, r12, #1, 22 @ #0x400
	mov     r3, #0x35
	strh    r3, [r2, #0x4]
	bl      Function_6008f00
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x60103ec

.word 0x380fff4 @ 0x60103ec
.arm
Function_60103f0: @ 60103f0 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0xac] @ [0x60104a8] (=0x380fff4)
	ldr     r2, [r0]
	add     r0, r2, #1, 22 @ #0x400
	ldrh    r1, [r0, #0x4]
	add     r0, r2, #0x4
	cmp     r1, #0x50
	add     r4, r0, #1, 22 @ #0x400
	beq     branch_6010420
	cmp     r1, #0x53
	beq     branch_6010478
	b       branch_60104a0
@ 0x6010420

.arm
branch_6010420: @ 6010420 :arm
	ldr     r0, [r4, #0x18]
	add     r0, r0, #0x10
	bl      Function_60144b0
	cmp     r0, #0x0
	bne     branch_6010458
	ldr     r0, [r4, #0x1c]
	mov     r1, #0x8
	strh    r1, [r0, #0x4]
	mov     r2, #0x53
	mov     r0, #0x2
	mov     r1, #0x3
	strh    r2, [r4]
	bl      Function_6008f00
	b       branch_60104a0
@ 0x6010458

.arm
branch_6010458: @ 6010458 :arm
	mov     r1, #0x51
	strh    r1, [r4]
	bl      Function_6013e0c
	ldr     r0, [r4, #0x18]
	ldr     r1, [pc, #0x3c] @ [0x60104ac] (=0x60104b0)
	ldrh    r0, [r0, #0x18]
	bl      Function_600b7a8
	b       branch_60104a0
@ 0x6010478

.arm
branch_6010478: @ 6010478 :arm
	mov     r0, #0x1
	bl      Function_6013a64
	mov     r0, #0x1
	bl      Function_6013a00
	mov     r0, #0x1
	mov     r1, #0x0
	bl      Function_6013d80
	mov     r0, #0x0
	strh    r0, [r4]
	bl      Function_601089c
.arm
branch_60104a0: @ 60104a0 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x60104a8

.word 0x380fff4 @ 0x60104a8
.word Function_60104b0 @ =0x60104b0, 0x60104ac
.arm
Function_60104b0: @ 60104b0 :arm
	ldr     r0, [pc, #0x2c] @ [0x60104e4] (=0x380fff4)
	ldr     r12, [pc, #0x2c] @ [0x60104e8] (=0x6008f00)
	ldr     r2, [r0]
	mov     r1, #0x7
	add     r0, r2, #0x4
	ldr     r0, [r0, #0x41c]
	mov     r3, #0x53
	strh    r1, [r0, #0x4]
	add     r2, r2, #1, 22 @ #0x400
	mov     r0, #0x2
	mov     r1, #0x3
	strh    r3, [r2, #0x4]
	bx      r12
@ 0x60104e4

.word 0x380fff4 @ 0x60104e4
.word Function_6008f00 @ =0x6008f00, 0x60104e8
.arm
Function_60104ec: @ 60104ec :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0xa4] @ [0x601059c] (=0x380fff4)
	ldr     r2, [r0]
	add     r0, r2, #1, 22 @ #0x400
	ldrh    r1, [r0, #0x4]
	add     r0, r2, #0x4
	cmp     r1, #0x60
	add     r4, r0, #1, 22 @ #0x400
	beq     branch_601051c
	cmp     r1, #0x63
	beq     branch_6010574
	b       branch_6010594
@ 0x601051c

.arm
branch_601051c: @ 601051c :arm
	ldr     r0, [r4, #0x18]
	add     r0, r0, #0x10
	bl      Function_6014558
	cmp     r0, #0x0
	bne     branch_6010554
	ldr     r0, [r4, #0x1c]
	mov     r1, #0x8
	strh    r1, [r0, #0x4]
	mov     r2, #0x63
	mov     r0, #0x2
	mov     r1, #0x4
	strh    r2, [r4]
	bl      Function_6008f00
	b       branch_6010594
@ 0x6010554

.arm
branch_6010554: @ 6010554 :arm
	mov     r1, #0x61
	strh    r1, [r4]
	bl      Function_6013e0c
	ldr     r0, [r4, #0x18]
	ldr     r1, [pc, #0x34] @ [0x60105a0] (=0x60105a4)
	ldrh    r0, [r0, #0x18]
	bl      Function_600b7a8
	b       branch_6010594
@ 0x6010574

.arm
branch_6010574: @ 6010574 :arm
	mov     r0, #0x1
	bl      Function_6013a00
	mov     r0, #0x1
	mov     r1, #0x0
	bl      Function_6013d80
	mov     r0, #0x0
	strh    r0, [r4]
	bl      Function_601089c
.arm
branch_6010594: @ 6010594 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x601059c

.word 0x380fff4 @ 0x601059c
.word Function_60105a4 @ =0x60105a4, 0x60105a0
.arm
Function_60105a4: @ 60105a4 :arm
	ldr     r0, [pc, #0x2c] @ [0x60105d8] (=0x380fff4)
	ldr     r12, [pc, #0x2c] @ [0x60105dc] (=0x6008f00)
	ldr     r2, [r0]
	mov     r1, #0x7
	add     r0, r2, #0x4
	ldr     r0, [r0, #0x41c]
	mov     r3, #0x63
	strh    r1, [r0, #0x4]
	add     r2, r2, #1, 22 @ #0x400
	mov     r0, #0x2
	mov     r1, #0x4
	strh    r3, [r2, #0x4]
	bx      r12
@ 0x60105d8

.word 0x380fff4 @ 0x60105d8
.word Function_6008f00 @ =0x6008f00, 0x60105dc
.arm
Function_60105e0: @ 60105e0 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0x254] @ [0x6010840] (=0x380fff4)
	ldr     r2, [r0]
	add     r0, r2, #1, 22 @ #0x400
	ldrh    r1, [r0, #0x4]
	add     r0, r2, #0x4
	sub     r1, r1, #0x80
	cmp     r1, #0x4
	add     r4, r2, #209, 30 @ #0x344
	add     r5, r0, #1, 22 @ #0x400
	addls   pc, pc, r1, lsl #2
	b       branch_6010820
@ 0x6010610

.arm
Function_6010610: @ 6010610 :arm
	b       branch_6010624
@ 0x6010614

.arm
Function_6010614: @ 6010614 :arm
	b       branch_6010664
@ 0x6010618

.arm
Function_6010618: @ 6010618 :arm
	b       branch_6010718
@ 0x601061c

.arm
Function_601061c: @ 601061c :arm
	b       branch_6010740
@ 0x6010620

.arm
Function_6010620: @ 6010620 :arm
	b       branch_60107ac
@ 0x6010624

.arm
branch_6010624: @ 6010624 :arm
	mov     r0, #0x0
	strh    r0, [r5, #0x14]
	mov     r0, #0x13
	bl      Function_600b270
	strh    r0, [r5, #0xe]
	mov     r0, #0x35
	bl      Function_600b270
	strh    r0, [r5, #0x10]
	ldr     r1, [r5, #0x18]
	ldrh    r0, [r1, #0x12]
	ldrh    r1, [r1, #0x14]
	bl      Function_6009afc
	mov     r0, #0x4
	strh    r0, [r4, #0xc]
	mov     r0, #0x0
	strh    r0, [r5, #0x16]
.arm
branch_6010664: @ 6010664 :arm
	mov     r0, #0x0
	str     r0, [r5, #0x4]
	str     r0, [r5, #0x8]
	ldr     r1, [r5, #0x18]
	ldrh    r0, [r5, #0x14]
	add     r1, r1, #0x18
	add     r0, r1, r0
	bl      Function_600ba0c
	movs    r4, r0
	beq     branch_6010698
	ldrh    r0, [r5, #0x14]
	cmp     r0, #0x10
	bcc     branch_60106a4
.arm
branch_6010698: @ 6010698 :arm
	mov     r0, #0x84
	strh    r0, [r5]
	b       branch_6010820
@ 0x60106a4

.arm
branch_60106a4: @ 60106a4 :arm
	mov     r0, #0x0
	bl      Function_6017f04
	cmp     r0, #0x0
	movne   r0, #0xe
	strneh  r0, [r5, #0x16]
	movne   r0, #0x84
	strneh  r0, [r5]
	bne     branch_6010820
	ldrh    r0, [r5]
	mov     r1, #0x0
	cmp     r0, #0x80
	mov     r0, r4, lsl #16
	mov     r0, r0, lsr #16
	bne     branch_60106fc
	bl      Function_600a0a0
	bl      Function_600ae10
	ldr     r1, [pc, #0x158] @ [0x6010844] (=0x4808040)
	mov     r0, #2, 18 @ #0x8000
	ldrh    r1, [r1]
	strh    r1, [r5, #0xc]
	bl      Function_600a480
	b       branch_6010700
@ 0x60106fc

.arm
branch_60106fc: @ 60106fc :arm
	bl      Function_600a0a0
.arm
branch_6010700: @ 6010700 :arm
	mov     r0, #0x82
	strh    r0, [r5]
	ldr     r0, [r5, #0x18]
	ldr     r1, [pc, #0x134] @ [0x6010848] (=0x6010850)
	ldrh    r0, [r0, #0x16]
	bl      Function_600b7a8
.arm
branch_6010718: @ 6010718 :arm
	ldr     r1, [r5, #0x4]
	ldr     r0, [pc, #0x128] @ [0x601084c] (=0x480819c)
	add     r1, r1, #0x1
	str     r1, [r5, #0x4]
	ldrh    r0, [r0]
	tst     r0, #0x1
	ldrne   r0, [r5, #0x8]
	addne   r0, r0, #0x64
	strne   r0, [r5, #0x8]
	b       branch_6010820
@ 0x6010740

.arm
branch_6010740: @ 6010740 :arm
	ldr     r1, [r5, #0x18]
	ldrh    r0, [r5, #0x14]
	add     r1, r1, #0x18
	add     r0, r1, r0
	bl      Function_600ba0c
	ldr     r1, [r5, #0x4]
	mov     r4, r0
	cmp     r1, #0x0
	ldrne   r0, [r5, #0x8]
	mov     r2, #0x0
	cmpne   r0, #0x0
	beq     branch_6010780
	bl      Function_6003ea8
	add     r2, r0, #0x1
	cmp     r2, #0x64
	movhi   r2, #0x64
.arm
branch_6010780: @ 6010780 :arm
	ldr     r1, [r5, #0x1c]
	ldrh    r0, [r5, #0x14]
	orr     r2, r4, r2, lsl #8
	add     r0, r1, r0, lsl #1
	strh    r2, [r0, #0x8]
	ldrh    r1, [r5, #0x14]
	mov     r0, #0x81
	add     r1, r1, #0x1
	strh    r1, [r5, #0x14]
	strh    r0, [r5]
	b       branch_6010820
@ 0x60107ac

.arm
branch_60107ac: @ 60107ac :arm
	bl      Function_600b1d0
	ldr     r1, [pc, #0x88] @ [0x6010840] (=0x380fff4)
	mov     r0, #0x13
	ldr     r1, [r1]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x2e]
	strh    r1, [r4, #0xc]
	ldrh    r1, [r5, #0xe]
	bl      Function_600b29c
	ldrh    r1, [r5, #0x10]
	mov     r0, #0x35
	bl      Function_600b29c
	ldrh    r0, [r5, #0xc]
	bl      Function_600a480
	ldrh    r2, [r5, #0x16]
	ldr     r1, [r5, #0x1c]
	mov     r0, #0x0
	strh    r2, [r1, #0x4]
	strh    r0, [r5]
	ldrh    r2, [r5, #0x14]
	mov     r1, r0
	b       branch_6010814
@ 0x6010804

.arm
branch_6010804: @ 6010804 :arm
	ldr     r0, [r5, #0x1c]
	add     r0, r0, r2, lsl #1
	strh    r1, [r0, #0x8]
	add     r2, r2, #0x1
.arm
branch_6010814: @ 6010814 :arm
	cmp     r2, #0x10
	bcc     branch_6010804
	bl      Function_601089c
.arm
branch_6010820: @ 6010820 :arm
	ldrh    r0, [r5]
	cmp     r0, #0x0
	beq     branch_6010838
	mov     r0, #0x2
	mov     r1, #0x5
	bl      Function_6008f00
.arm
branch_6010838: @ 6010838 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6010840

.word 0x380fff4 @ 0x6010840
.word 0x4808040 @ 0x6010844
.word Function_6010850 @ =0x6010850, 0x6010848
.word 0x480819c @ 0x601084c
.arm
Function_6010850: @ 6010850 :arm
	ldr     r0, [pc, #0x1c] @ [0x6010874] (=0x380fff4)
	ldr     r12, [pc, #0x1c] @ [0x6010878] (=0x6008f00)
	ldr     r1, [r0]
	mov     r3, #0x83
	add     r2, r1, #1, 22 @ #0x400
	mov     r0, #0x2
	mov     r1, #0x5
	strh    r3, [r2, #0x4]
	bx      r12
@ 0x6010874

.word 0x380fff4 @ 0x6010874
.word Function_6008f00 @ =0x6008f00, 0x6010878
.arm
Function_601087c: @ 601087c :arm
	ldr     r0, [pc, #0x10] @ [0x6010894] (=0x380fff4)
	ldr     r12, [pc, #0x10] @ [0x6010898] (=0x6010c48)
	ldr     r0, [r0]
	add     r0, r0, #0xc6
	add     r0, r0, #3, 24 @ #0x300
	bx      r12
@ 0x6010894

.word 0x380fff4 @ 0x6010894
.word 0x6010c48 @ 0x6010898
.arm
Function_601089c: @ 601089c :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x44] @ [0x60108ec] (=0x380fff4)
	ldr     r2, [r0]
	add     r0, r2, #0x24
	add     r1, r0, #1, 22 @ #0x400
	ldrh    r0, [r1, #0x4]
	add     r4, r2, #95, 30 @ #0x17c
	bic     r0, r0, #0x1
	strh    r0, [r1, #0x4]
	ldr     r1, [r2, #0x424]
	add     r0, r4, #0x84
	bl      Function_600f384
	ldrh    r0, [r4, #0x8c]
	cmp     r0, #0x0
	beq     branch_60108e4
	mov     r0, #0x2
	mov     r1, #0xb
	bl      Function_6008f00
.arm
branch_60108e4: @ 60108e4 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x60108ec

.word 0x380fff4 @ 0x60108ec
.arm
Function_60108f0: @ 60108f0 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [pc, #0x6c] @ [0x6010968] (=0x380fff4)
	mov     r5, r1
	ldr     r1, [r2]
	mov     r6, r0
	add     r0, r1, #98, 30 @ #0x188
	mov     r1, #0x18
	bl      Function_60090a4
	movs    r4, r0
	bne     branch_6010928
	mov     r0, #0x1
	bl      Function_600bd28
	mov     r0, #0x0
	b       branch_6010960
@ 0x6010928

.arm
branch_6010928: @ 6010928 :arm
	mov     r0, #0x84
	strh    r0, [r4, #0xc]
	mov     r2, #0x4
	mov     r1, r6
	add     r0, r4, #0x10
	strh    r2, [r4, #0xe]
	bl      Function_600a924
	ldr     r0, [pc, #0x1c] @ [0x6010968] (=0x380fff4)
	strh    r5, [r4, #0x16]
	ldr     r0, [r0]
	mov     r1, r4
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600f384
	mov     r0, #0x1
.arm
branch_6010960: @ 6010960 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6010968

.word 0x380fff4 @ 0x6010968
.arm
Function_601096c: @ 601096c :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [pc, #0x6c] @ [0x60109e4] (=0x380fff4)
	mov     r5, r1
	ldr     r1, [r2]
	mov     r6, r0
	add     r0, r1, #98, 30 @ #0x188
	mov     r1, #0x18
	bl      Function_60090a4
	movs    r4, r0
	bne     branch_60109a4
	mov     r0, #0x1
	bl      Function_600bd28
	mov     r0, #0x0
	b       branch_60109dc
@ 0x60109a4

.arm
branch_60109a4: @ 60109a4 :arm
	mov     r0, #0x85
	strh    r0, [r4, #0xc]
	mov     r2, #0x4
	mov     r1, r6
	add     r0, r4, #0x10
	strh    r2, [r4, #0xe]
	bl      Function_600a924
	ldr     r0, [pc, #0x1c] @ [0x60109e4] (=0x380fff4)
	strh    r5, [r4, #0x16]
	ldr     r0, [r0]
	mov     r1, r4
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600f384
	mov     r0, #0x1
.arm
branch_60109dc: @ 60109dc :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x60109e4

.word 0x380fff4 @ 0x60109e4
.arm
Function_60109e8: @ 60109e8 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r3, [pc, #0xe4] @ [0x6010ad8] (=0x380fff4)
	mov     r5, r1
	ldr     r1, [r3]
	mov     r7, r0
	add     r0, r1, #98, 30 @ #0x188
	mov     r1, #0x3a
	mov     r6, r2
	bl      Function_60090a4
	movs    r4, r0
	bne     branch_6010a24
	mov     r0, #0x1
	bl      Function_600bd28
	mov     r0, #0x0
	b       branch_6010ad0
@ 0x6010a24

.arm
branch_6010a24: @ 6010a24 :arm
	mov     r0, #0x86
	strh    r0, [r4, #0xc]
	mov     r2, #0x15
	mov     r1, r7
	add     r0, r4, #0x10
	strh    r2, [r4, #0xe]
	bl      Function_600a924
	ldr     r1, [pc, #0x94] @ [0x6010adc] (=0xfff)
	add     r0, r6, #0x1
	and     r1, r5, r1
	strh    r1, [r4, #0x16]
	bl      Function_600ba0c
	add     r7, r6, #0x2
	strh    r0, [r4, #0x18]
	mov     r5, #0x0
	add     r6, r4, #0x1a
	b       branch_6010a88
@ 0x6010a68

.arm
branch_6010a68: @ 6010a68 :arm
	cmp     r5, #0x20
	bcs     branch_6010a94
	add     r0, r7, r5
	bl      Function_600ba0c
	mov     r1, r0
	add     r0, r6, r5
	bl      Function_600b9e0
	add     r5, r5, #0x1
.arm
branch_6010a88: @ 6010a88 :arm
	ldrh    r0, [r4, #0x18]
	cmp     r5, r0
	bcc     branch_6010a68
.arm
branch_6010a94: @ 6010a94 :arm
	add     r7, r4, #0x1a
	mov     r6, #0x0
	b       branch_6010ab0
@ 0x6010aa0

.arm
branch_6010aa0: @ 6010aa0 :arm
	mov     r1, r6
	add     r0, r7, r5
	bl      Function_600b9e0
	add     r5, r5, #0x1
.arm
branch_6010ab0: @ 6010ab0 :arm
	cmp     r5, #0x20
	bcc     branch_6010aa0
	ldr     r0, [pc, #0x18] @ [0x6010ad8] (=0x380fff4)
	mov     r1, r4
	ldr     r0, [r0]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600f384
	mov     r0, #0x1
.arm
branch_6010ad0: @ 6010ad0 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6010ad8

.word 0x380fff4 @ 0x6010ad8
.word 0xfff @ 0x6010adc
.arm
Function_6010ae0: @ 6010ae0 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r3, [pc, #0xdc] @ [0x6010bc8] (=0x380fff4)
	mov     r6, r1
	ldr     r1, [r3]
	mov     r7, r0
	add     r0, r1, #98, 30 @ #0x188
	mov     r1, #0x3a
	mov     r5, r2
	bl      Function_60090a4
	movs    r4, r0
	bne     branch_6010b1c
	mov     r0, #0x1
	bl      Function_600bd28
	mov     r0, #0x0
	b       branch_6010bc0
@ 0x6010b1c

.arm
branch_6010b1c: @ 6010b1c :arm
	mov     r0, #0x87
	strh    r0, [r4, #0xc]
	mov     r0, #0x15
	strh    r0, [r4, #0xe]
	mov     r1, r7
	add     r0, r4, #0x10
	bl      Function_600a924
	strh    r6, [r4, #0x16]
	add     r0, r5, #0x1
	bl      Function_600ba0c
	add     r6, r5, #0x2
	strh    r0, [r4, #0x18]
	mov     r7, #0x0
	add     r5, r4, #0x1a
	b       branch_6010b78
@ 0x6010b58

.arm
branch_6010b58: @ 6010b58 :arm
	cmp     r7, #0x20
	bcs     branch_6010b84
	add     r0, r6, r7
	bl      Function_600ba0c
	mov     r1, r0
	add     r0, r5, r7
	bl      Function_600b9e0
	add     r7, r7, #0x1
.arm
branch_6010b78: @ 6010b78 :arm
	ldrh    r0, [r4, #0x18]
	cmp     r7, r0
	bcc     branch_6010b58
.arm
branch_6010b84: @ 6010b84 :arm
	add     r6, r4, #0x1a
	mov     r5, #0x0
	b       branch_6010ba0
@ 0x6010b90

.arm
branch_6010b90: @ 6010b90 :arm
	mov     r1, r5
	add     r0, r6, r7
	bl      Function_600b9e0
	add     r7, r7, #0x1
.arm
branch_6010ba0: @ 6010ba0 :arm
	cmp     r7, #0x20
	bcc     branch_6010b90
	ldr     r0, [pc, #0x18] @ [0x6010bc8] (=0x380fff4)
	mov     r1, r4
	ldr     r0, [r0]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600f384
	mov     r0, #0x1
.arm
branch_6010bc0: @ 6010bc0 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6010bc8

.word 0x380fff4 @ 0x6010bc8
.arm
Function_6010bcc: @ 6010bcc :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [pc, #0x6c] @ [0x6010c44] (=0x380fff4)
	mov     r5, r1
	ldr     r1, [r2]
	mov     r6, r0
	add     r0, r1, #98, 30 @ #0x188
	mov     r1, #0x18
	bl      Function_60090a4
	movs    r4, r0
	bne     branch_6010c04
	mov     r0, #0x1
	bl      Function_600bd28
	mov     r0, #0x0
	b       branch_6010c3c
@ 0x6010c04

.arm
branch_6010c04: @ 6010c04 :arm
	mov     r0, #0x88
	strh    r0, [r4, #0xc]
	mov     r2, #0x4
	mov     r1, r6
	add     r0, r4, #0x10
	strh    r2, [r4, #0xe]
	bl      Function_600a924
	ldr     r0, [pc, #0x1c] @ [0x6010c44] (=0x380fff4)
	strh    r5, [r4, #0x16]
	ldr     r0, [r0]
	mov     r1, r4
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600f384
	mov     r0, #0x1
.arm
branch_6010c3c: @ 6010c3c :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6010c44

.word 0x380fff4 @ 0x6010c44
.arm
Function_6010c48: @ 6010c48 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0x64] @ [0x6010cb8] (=0x380fff4)
	mov     r5, r0
	ldr     r0, [r1]
	mov     r1, #0x16
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_60090a4
	movs    r4, r0
	bne     branch_6010c7c
	mov     r0, #0x1
	bl      Function_600bd28
	mov     r0, #0x0
	b       branch_6010cb0
@ 0x6010c7c

.arm
branch_6010c7c: @ 6010c7c :arm
	mov     r0, #0x8b
	strh    r0, [r4, #0xc]
	mov     r2, #0x3
	mov     r1, r5
	add     r0, r4, #0x10
	strh    r2, [r4, #0xe]
	bl      Function_600a924
	ldr     r0, [pc, #0x18] @ [0x6010cb8] (=0x380fff4)
	mov     r1, r4
	ldr     r0, [r0]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600f384
	mov     r0, #0x1
.arm
branch_6010cb0: @ 6010cb0 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6010cb8

.word 0x380fff4 @ 0x6010cb8
.arm
Function_6010cbc: @ 6010cbc :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x50] @ [0x6010d18] (=0x380fff4)
	mov     r1, #0x10
	ldr     r0, [r0]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_60090a4
	movs    r1, r0
	bne     branch_6010cec
	mov     r0, #0x1
	bl      Function_600bd28
	mov     r0, #0x0
	b       branch_6010d10
@ 0x6010cec

.arm
branch_6010cec: @ 6010cec :arm
	mov     r0, #0x8c
	strh    r0, [r1, #0xc]
	mov     r2, #0x0
	ldr     r0, [pc, #0x18] @ [0x6010d18] (=0x380fff4)
	strh    r2, [r1, #0xe]
	ldr     r0, [r0]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600f384
	mov     r0, #0x1
.arm
branch_6010d10: @ 6010d10 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6010d18

.word 0x380fff4 @ 0x6010d18
.arm
Function_6010d1c: @ 6010d1c :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r1, [pc, #0x10c] @ [0x6010e34] (=0x380fff4)
	mov     r6, r0
	ldr     r2, [r1]
	add     r0, r2, #3, 24 @ #0x300
	ldrh    r1, [r0, #0xe4]
	add     r0, r2, #98, 30 @ #0x188
	add     r1, r1, #0x3e
	add     r4, r2, #209, 30 @ #0x344
	bl      Function_60090a4
	movs    r5, r0
	bne     branch_6010d5c
	mov     r0, #0x1
	bl      Function_600bd28
	mov     r0, #0x0
	b       branch_6010e2c
@ 0x6010d5c

.arm
branch_6010d5c: @ 6010d5c :arm
	mov     r0, #0x8d
	strh    r0, [r5, #0xc]
	ldrh    r1, [r4, #0xa0]
	add     r0, r5, #0x1f
	add     r1, r1, #0x1
	add     r1, r1, r1, lsr #31
	mov     r1, r1, asr #1
	add     r1, r1, #0x16
	strh    r1, [r5, #0xe]
	ldrh    r1, [r6, #0x12]
	and     r1, r1, #0xff
	bl      Function_600b9e0
	ldrh    r1, [r6, #0xe]
	add     r0, r5, #0x1e
	and     r1, r1, #0xff
	bl      Function_600b9e0
	add     r0, r5, #0x2e
	add     r1, r6, #0x1e
	bl      Function_600a924
	ldrh    r2, [r4, #0xa0]
	strh    r2, [r5, #0x16]
	cmp     r2, #0x0
	beq     branch_6010e14
	ldrh    r0, [r4, #0xa2]
	tst     r0, #0x1
	ldr     r0, [r4, #0x9c]
	beq     branch_6010e08
	add     r7, r5, #0x3c
	add     r6, r0, #0x1
	mov     r4, #0x0
	b       branch_6010df8
@ 0x6010dd8

.arm
branch_6010dd8: @ 6010dd8 :arm
	mov     r0, r6
	bl      Function_600ba0c
	mov     r1, r0
	mov     r0, r7
	bl      Function_600b9e0
	add     r6, r6, #0x1
	add     r7, r7, #0x1
	add     r4, r4, #0x1
.arm
branch_6010df8: @ 6010df8 :arm
	ldrh    r0, [r5, #0x16]
	cmp     r4, r0
	bcc     branch_6010dd8
	b       branch_6010e14
@ 0x6010e08

.arm
branch_6010e08: @ 6010e08 :arm
	add     r1, r5, #0x3c
	add     r2, r2, #0x1
	bl      Function_6001ae0
.arm
branch_6010e14: @ 6010e14 :arm
	ldr     r0, [pc, #0x18] @ [0x6010e34] (=0x380fff4)
	mov     r1, r5
	ldr     r0, [r0]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600f384
	mov     r0, #0x1
.arm
branch_6010e2c: @ 6010e2c :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6010e34

.word 0x380fff4 @ 0x6010e34
.arm
Function_6010e38: @ 6010e38 :arm
	ldr     r1, [pc, #0x18] @ [0x6010e58] (=0x380fff4)
	ldr     r12, [pc, #0x18] @ [0x6010e5c] (=0x37fb018)
	ldr     r1, [r1]
	mov     r0, #0x0
	add     r1, r1, #0x4
	mov     r2, #0x20
	add     r1, r1, #1, 22 @ #0x400
	bx      r12
@ 0x6010e58

.word 0x380fff4 @ 0x6010e58
.word 0x37fb018 @ 0x6010e5c
.arm
Function_6010e60: @ 6010e60 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r2, [pc, #0xdc] @ [0x6010f48] (=0x380fff4)
	mov     r5, r0
	mov     r0, #0x1
	strh    r0, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x4c]
	cmp     r1, #0x10
	bne     branch_6010f40
	add     r0, r5, #0x10
	bl      Function_60095fc
	mov     r4, r0
	ldrh    r0, [r5, #0x16]
	bl      Function_600965c
	orr     r4, r4, r0
	ldrh    r0, [r5, #0x18]
	bl      Function_6009690
	orr     r4, r4, r0
	ldrh    r0, [r5, #0x1c]
	bl      Function_60096d0
	orr     r4, r4, r0
	ldrh    r0, [r5, #0x1e]
	bl      Function_6009750
	orr     r4, r4, r0
	ldrh    r0, [r5, #0x20]
	bl      Function_6009784
	orr     r4, r4, r0
	ldrh    r0, [r5, #0x22]
	bl      Function_6009824
	orr     r4, r4, r0
	add     r0, r5, #0x24
	bl      Function_6009848
	orr     r4, r4, r0
	ldrh    r0, [r5, #0x74]
	bl      Function_60098a8
	orr     r4, r4, r0
	ldrh    r0, [r5, #0x76]
	bl      Function_60098e0
	orr     r4, r4, r0
	ldrh    r0, [r5, #0x78]
	bl      Function_6009918
	orr     r4, r4, r0
	ldrh    r0, [r5, #0x7a]
	mov     r1, #0x0
	bl      Function_6009950
	orr     r4, r4, r0
	add     r0, r5, #0x7c
	bl      Function_6009a00
	orr     r4, r4, r0
	ldrh    r0, [r5, #0x9c]
	bl      Function_6009a30
	orr     r4, r4, r0
	ldrh    r0, [r5, #0x9e]
	bl      Function_6009ad8
	orr     r0, r4, r0
.arm
branch_6010f40: @ 6010f40 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6010f48

.word 0x380fff4 @ 0x6010f48
.arm
Function_6010f4c: @ 6010f4c :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x30] @ [0x6010f88] (=0x380fff4)
	mov     r3, #0x1
	strh    r3, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x4c]
	cmp     r1, #0x10
	bne     branch_6010f7c
	add     r0, r0, #0x10
	bl      Function_60095fc
	mov     r3, r0
.arm
branch_6010f7c: @ 6010f7c :arm
	mov     r0, r3
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6010f88

.word 0x380fff4 @ 0x6010f88
.arm
Function_6010f8c: @ 6010f8c :arm
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	ldr     r12, [pc, #0x4] @ [0x6010fa0] (=0x600965c)
	ldrh    r0, [r0, #0x10]
	bx      r12
@ 0x6010fa0

.word Function_600965c @ =0x600965c, 0x6010fa0
.arm
Function_6010fa4: @ 6010fa4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x30] @ [0x6010fe0] (=0x380fff4)
	mov     r3, #0x1
	strh    r3, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x4c]
	cmp     r1, #0x10
	bne     branch_6010fd4
	ldrh    r0, [r0, #0x10]
	bl      Function_6009690
	mov     r3, r0
.arm
branch_6010fd4: @ 6010fd4 :arm
	mov     r0, r3
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6010fe0

.word 0x380fff4 @ 0x6010fe0
.arm
Function_6010fe4: @ 6010fe4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x40] @ [0x6011030] (=0x380fff4)
	mov     r3, #0x1
	strh    r3, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r2, [r1, #0x4c]
	cmp     r2, #0x20
	movhi   r0, r3
	bhi     branch_6011028
	bne     branch_6011020
	ldrh    r1, [r1, #0x56]
	cmp     r1, #0x0
	movne   r0, r3
	bne     branch_6011028
.arm
branch_6011020: @ 6011020 :arm
	ldrh    r0, [r0, #0x10]
	bl      Function_60096d0
.arm
branch_6011028: @ 6011028 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6011030

.word 0x380fff4 @ 0x6011030
.arm
Function_6011034: @ 6011034 :arm
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	ldr     r12, [pc, #0x4] @ [0x6011048] (=0x6009750)
	ldrh    r0, [r0, #0x10]
	bx      r12
@ 0x6011048

.word Function_6009750 @ =0x6009750, 0x6011048
.arm
Function_601104c: @ 601104c :arm
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	ldr     r12, [pc, #0x4] @ [0x6011060] (=0x6009784)
	ldrh    r0, [r0, #0x10]
	bx      r12
@ 0x6011060

.word Function_6009784 @ =0x6009784, 0x6011060
.arm
Function_6011064: @ 6011064 :arm
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	ldr     r12, [pc, #0x4] @ [0x6011078] (=0x6009824)
	ldrh    r0, [r0, #0x10]
	bx      r12
@ 0x6011078

.word Function_6009824 @ =0x6009824, 0x6011078
.arm
Function_601107c: @ 601107c :arm
	ldr     r12, [pc, #0xc] @ [0x6011090] (=0x6009848)
	mov     r2, #0x1
	add     r0, r0, #0x10
	strh    r2, [r1, #0x2]
	bx      r12
@ 0x6011090

.word Function_6009848 @ =0x6009848, 0x6011090
.arm
Function_6011094: @ 6011094 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x30] @ [0x60110d0] (=0x380fff4)
	mov     r3, #0x1
	strh    r3, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x4c]
	cmp     r1, #0x20
	bhi     branch_60110c4
	ldrh    r0, [r0, #0x10]
	bl      Function_60098a8
	mov     r3, r0
.arm
branch_60110c4: @ 60110c4 :arm
	mov     r0, r3
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x60110d0

.word 0x380fff4 @ 0x60110d0
.arm
Function_60110d4: @ 60110d4 :arm
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	ldr     r12, [pc, #0x4] @ [0x60110e8] (=0x60098e0)
	ldrh    r0, [r0, #0x10]
	bx      r12
@ 0x60110e8

.word Function_60098e0 @ =0x60098e0, 0x60110e8
.arm
Function_60110ec: @ 60110ec :arm
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	ldr     r12, [pc, #0x4] @ [0x6011100] (=0x6009918)
	ldrh    r0, [r0, #0x10]
	bx      r12
@ 0x6011100

.word Function_6009918 @ =0x6009918, 0x6011100
.arm
Function_6011104: @ 6011104 :arm
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	ldr     r12, [pc, #0x8] @ [0x601111c] (=0x6009950)
	ldrh    r0, [r0, #0x10]
	mov     r1, #0x0
	bx      r12
@ 0x601111c

.word Function_6009950 @ =0x6009950, 0x601111c
.arm
Function_6011120: @ 6011120 :arm
	ldr     r12, [pc, #0xc] @ [0x6011134] (=0x6009a00)
	mov     r2, #0x1
	add     r0, r0, #0x10
	strh    r2, [r1, #0x2]
	bx      r12
@ 0x6011134

.word Function_6009a00 @ =0x6009a00, 0x6011134
.arm
Function_6011138: @ 6011138 :arm
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	ldr     r12, [pc, #0x4] @ [0x601114c] (=0x6009a30)
	ldrh    r0, [r0, #0x10]
	bx      r12
@ 0x601114c

.word Function_6009a30 @ =0x6009a30, 0x601114c
.arm
Function_6011150: @ 6011150 :arm
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	ldr     r12, [pc, #0x4] @ [0x6011164] (=0x6009ad8)
	ldrh    r0, [r0, #0x10]
	bx      r12
@ 0x6011164

.word Function_6009ad8 @ =0x6009ad8, 0x6011164
.arm
Function_6011168: @ 6011168 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	mov     r5, r0
	ldrh    r0, [r5, #0x14]
	cmp     r0, #0x3f
	movhi   r0, #0x5
	bhi     branch_60111ac
	ldrh    r0, [r5, #0x10]
	ldrh    r1, [r5, #0x12]
	bl      Function_6009afc
	movs    r4, r0
	bne     branch_60111a8
	ldrh    r1, [r5, #0x14]
	mov     r0, #0x2e
	bl      Function_600b29c
.arm
branch_60111a8: @ 60111a8 :arm
	mov     r0, r4
.arm
branch_60111ac: @ 60111ac :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x60111b4

.arm
Function_60111b4: @ 60111b4 :arm
	stmfd   sp!, {r4,lr}
	ldr     r12, [pc, #0xf4] @ [0x60112b4] (=0x380fff4)
	mov     r3, #0x1
	ldr     r2, [r12]
	ldr     r2, [r2, #0x31c]
	strh    r3, [r1, #0x2]
	ldr     r1, [r12]
	ldrh    r4, [r0, #0x10]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x22]
	cmp     r4, r1
	bcc     branch_60111f4
	rsb     r1, r3, #1, 16 @ #0x10000
	cmp     r4, r1
	movne   r0, #0x5
	bne     branch_60112ac
.arm
branch_60111f4: @ 60111f4 :arm
	ldrh    r3, [r0, #0x14]
	cmp     r3, #0x3f
	bls     branch_6011210
	ldr     r1, [pc, #0xb0] @ [0x60112b8] (=0xffff)
	cmp     r3, r1
	movne   r0, #0x5
	bne     branch_60112ac
.arm
branch_6011210: @ 6011210 :arm
	ldr     r1, [pc, #0xa0] @ [0x60112b8] (=0xffff)
	cmp     r4, r1
	bne     branch_6011264
	ldr     r12, [pc, #0x90] @ [0x60112b4] (=0x380fff4)
	mov     r4, #0x1
	mov     r3, #0x1c
	b       branch_601124c
@ 0x601122c

.arm
branch_601122c: @ 601122c :arm
	mla     lr, r4, r3, r2
	ldrh    r1, [r0, #0x12]
	add     r4, r4, #0x1
	strh    r1, [lr, #0x1a]
	ldrh    r1, [lr, #0x18]
	cmp     r1, #0x0
	ldrneh  r1, [r0, #0x12]
	strneh  r1, [lr, #0x18]
.arm
branch_601124c: @ 601124c :arm
	ldr     r1, [r12]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x22]
	cmp     r4, r1
	bcc     branch_601122c
	b       branch_6011298
@ 0x6011264

.arm
branch_6011264: @ 6011264 :arm
	cmp     r4, #0x0
	beq     branch_6011298
	mov     r1, #0x1c
	mla     r3, r4, r1, r2
	ldrh    lr, [r0, #0x12]
	add     r12, r2, #0x18
	strh    lr, [r3, #0x1a]
	ldrh    r2, [r0, #0x10]
	mul     r3, r2, r1
	ldrh    r1, [r12, r3]
	cmp     r1, #0x0
	ldrneh  r1, [r0, #0x12]
	strneh  r1, [r12, r3]
.arm
branch_6011298: @ 6011298 :arm
	ldrh    r0, [r0, #0x14]
	cmp     r0, #0x0
	beq     branch_60112a8
	bl      Function_600a5d0
.arm
branch_60112a8: @ 60112a8 :arm
	mov     r0, #0x0
.arm
branch_60112ac: @ 60112ac :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x60112b4

.word 0x380fff4 @ 0x60112b4
.word 0xffff @ 0x60112b8
.arm
Function_60112bc: @ 60112bc :arm
	ldr     r2, [pc, #0x4c] @ [0x6011310] (=0x380fff4)
	mov     r3, #0x1
	strh    r3, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x4c]
	cmp     r1, #0x20
	movhi   r0, r3
	bxhi    lr
	ldrh    r1, [r0, #0x10]
	add     r1, r1, #0x1
	strh    r1, [r0, #0x10]
	ldr     r1, [r2]
	ldrh    r2, [r0, #0x10]
	add     r0, r1, #3, 24 @ #0x300
	ldrh    r1, [r0, #0x20]
	cmp     r2, r1
	movhi   r0, #0x5
	strlsh  r2, [r0, #0x22]
	movls   r0, #0x0
	bx      lr
@ 0x6011310

.word 0x380fff4 @ 0x6011310
.arm
Function_6011314: @ 6011314 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x30] @ [0x6011350] (=0x380fff4)
	mov     r3, #0x1
	strh    r3, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x4c]
	cmp     r1, #0x10
	bcc     branch_6011344
	ldrh    r0, [r0, #0x10]
	bl      Function_6009b40
	mov     r3, r0
.arm
branch_6011344: @ 6011344 :arm
	mov     r0, r3
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6011350

.word 0x380fff4 @ 0x6011350
.arm
Function_6011354: @ 6011354 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x30] @ [0x6011390] (=0x380fff4)
	mov     r3, r0
	mov     r0, #0x1
	strh    r0, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x4c]
	cmp     r1, #0x10
	bcc     branch_6011388
	ldrh    r0, [r3, #0x10]
	ldrh    r1, [r3, #0x12]
	bl      Function_6009ba8
.arm
branch_6011388: @ 6011388 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6011390

.word 0x380fff4 @ 0x6011390
.arm
Function_6011394: @ 6011394 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x30] @ [0x60113d0] (=0x380fff4)
	mov     r3, #0x1
	strh    r3, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x4c]
	cmp     r1, #0x10
	bcc     branch_60113c4
	ldrh    r0, [r0, #0x10]
	bl      Function_6009c7c
	mov     r3, r0
.arm
branch_60113c4: @ 60113c4 :arm
	mov     r0, r3
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x60113d0

.word 0x380fff4 @ 0x60113d0
.arm
Function_60113d4: @ 60113d4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x30] @ [0x6011410] (=0x380fff4)
	mov     r3, #0x1
	strh    r3, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x4c]
	cmp     r1, #0x10
	bcc     branch_6011404
	ldrh    r0, [r0, #0x10]
	bl      Function_6009cbc
	mov     r3, r0
.arm
branch_6011404: @ 6011404 :arm
	mov     r0, r3
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6011410

.word 0x380fff4 @ 0x6011410
.arm
Function_6011414: @ 6011414 :arm
	ldr     r12, [pc, #0xc] @ [0x6011428] (=0x6009d0c)
	mov     r2, #0x1
	add     r0, r0, #0x10
	strh    r2, [r1, #0x2]
	bx      r12
@ 0x6011428

.word 0x6009d0c @ 0x6011428
.arm
Function_601142c: @ 601142c :arm
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	mov     r1, r0
	ldrh    r0, [r1, #0x10]
	ldr     r12, [pc, #0x4] @ [0x6011448] (=0x6009d70)
	add     r1, r1, #0x12
	bx      r12
@ 0x6011448

.word 0x6009d70 @ 0x6011448
.arm
Function_601144c: @ 601144c :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x2c] @ [0x6011484] (=0x380fff4)
	mov     r3, #0x1
	strh    r3, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x2e]
	cmp     r1, #0x1
	movne   r0, #0xb
	bne     branch_601147c
	ldrh    r0, [r0, #0x10]
	bl      Function_6009e80
.arm
branch_601147c: @ 601147c :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6011484

.word 0x380fff4 @ 0x6011484
.arm
Function_6011488: @ 6011488 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x2c] @ [0x60114c0] (=0x380fff4)
	mov     r3, #0x1
	strh    r3, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x2e]
	cmp     r1, #0x1
	movne   r0, #0xb
	bne     branch_60114b8
	ldrh    r0, [r0, #0x10]
	bl      Function_6009ed8
.arm
branch_60114b8: @ 60114b8 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x60114c0

.word 0x380fff4 @ 0x60114c0
.arm
Function_60114c4: @ 60114c4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x30] @ [0x6011500] (=0x380fff4)
	mov     r3, #0x1
	strh    r3, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x2e]
	cmp     r1, #0x2
	cmpne   r1, #0x3
	movne   r0, #0xb
	bne     branch_60114f8
	ldrh    r0, [r0, #0x10]
	bl      Function_6009f1c
.arm
branch_60114f8: @ 60114f8 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6011500

.word 0x380fff4 @ 0x6011500
.arm
Function_6011504: @ 6011504 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x54] @ [0x6011564] (=0x380fff4)
	mov     r3, #0x1
	strh    r3, [r1, #0x2]
	ldr     r1, [r2]
	mov     r3, r0
	add     r0, r1, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x2e]
	cmp     r0, #0x1
	movne   r0, #0xb
	bne     branch_601155c
	ldrh    r0, [r3, #0x10]
	ldrh    r2, [r3, #0xe]
	add     r1, r0, #0x1
	add     r1, r1, r1, lsr #31
	mov     r1, r1, asr #1
	add     r1, r1, #0x1
	cmp     r2, r1
	movlt   r0, #0x4
	blt     branch_601155c
	add     r1, r3, #0x12
	bl      Function_600a6f4
.arm
branch_601155c: @ 601155c :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6011564

.word 0x380fff4 @ 0x6011564
.arm
Function_6011568: @ 6011568 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x128] @ [0x601169c] (=0x380fff4)
	mov     r4, r1
	mov     r1, #0x21
	strh    r1, [r4, #0x2]
	ldr     r1, [r0]
	add     r0, r4, #0x6
	add     r1, r1, #201, 30 @ #0x324
	bl      Function_600a924
	ldr     r0, [pc, #0x108] @ [0x601169c] (=0x380fff4)
	add     r1, r4, #0x22
	ldr     r3, [r0]
	mov     r2, #0x20
	add     r3, r3, #3, 24 @ #0x300
	ldrh    r3, [r3, #0x2a]
	strh    r3, [r4, #0xc]
	ldr     r3, [r0]
	add     r3, r3, #3, 24 @ #0x300
	ldrh    r3, [r3, #0x2c]
	strh    r3, [r4, #0xe]
	ldr     r3, [r0]
	add     r3, r3, #3, 24 @ #0x300
	ldrh    r3, [r3, #0xbe]
	strh    r3, [r4, #0x10]
	ldr     r3, [r0]
	add     r3, r3, #3, 24 @ #0x300
	ldrh    r3, [r3, #0x2e]
	strh    r3, [r4, #0x12]
	ldr     r3, [r0]
	add     r3, r3, #3, 24 @ #0x300
	ldrh    r3, [r3, #0x30]
	strh    r3, [r4, #0x14]
	ldr     r3, [r0]
	add     r3, r3, #3, 24 @ #0x300
	ldrh    r3, [r3, #0x34]
	strh    r3, [r4, #0x16]
	ldr     r3, [r0]
	add     r3, r3, #3, 24 @ #0x300
	ldrh    r3, [r3, #0x36]
	strh    r3, [r4, #0x18]
	ldr     r3, [r0]
	add     r3, r3, #3, 24 @ #0x300
	ldrh    r3, [r3, #0x3a]
	mov     r3, r3, lsl #31
	mov     r3, r3, lsr #31
	strh    r3, [r4, #0x1a]
	ldr     r3, [r0]
	add     r3, r3, #3, 24 @ #0x300
	ldrh    r3, [r3, #0x3a]
	mov     r3, r3, lsl #30
	mov     r3, r3, lsr #31
	strh    r3, [r4, #0x1c]
	ldr     r3, [r0]
	add     r3, r3, #3, 24 @ #0x300
	ldrh    r3, [r3, #0xc2]
	strh    r3, [r4, #0x1e]
	ldr     r3, [r0]
	add     r3, r3, #3, 24 @ #0x300
	ldrh    r3, [r3, #0x3c]
	strh    r3, [r4, #0x20]
	ldr     r0, [r0]
	add     r0, r0, #225, 30 @ #0x384
	bl      Function_6001ae0
	ldr     r2, [pc, #0x30] @ [0x601169c] (=0x380fff4)
	mov     r0, #0x0
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x3a]
	mov     r1, r1, lsl #29
	mov     r1, r1, lsr #31
	strh    r1, [r4, #0x42]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x32]
	strh    r1, [r4, #0x44]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x601169c

.word 0x380fff4 @ 0x601169c
.arm
Function_60116a0: @ 60116a0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x20] @ [0x60116cc] (=0x380fff4)
	mov     r2, #0x4
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	add     r0, r1, #0x6
	add     r1, r2, #201, 30 @ #0x324
	bl      Function_600a924
	mov     r0, #0x0
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x60116cc

.word 0x380fff4 @ 0x60116cc
.arm
Function_60116d0: @ 60116d0 :arm
	ldr     r0, [pc, #0x1c] @ [0x60116f4] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x2a]
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x60116f4

.word 0x380fff4 @ 0x60116f4
.arm
Function_60116f8: @ 60116f8 :arm
	ldr     r3, [pc, #0x2c] @ [0x601172c] (=0x380fff4)
	mov     r0, #0x3
	strh    r0, [r1, #0x2]
	ldr     r2, [r3]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x2c]
	strh    r2, [r1, #0x6]
	ldr     r2, [r3]
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0xbe]
	strh    r2, [r1, #0x8]
	bx      lr
@ 0x601172c

.word 0x380fff4 @ 0x601172c
.arm
Function_6011730: @ 6011730 :arm
	ldr     r0, [pc, #0x1c] @ [0x6011754] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x2e]
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x6011754

.word 0x380fff4 @ 0x6011754
.arm
Function_6011758: @ 6011758 :arm
	ldr     r0, [pc, #0x1c] @ [0x601177c] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x30]
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x601177c

.word 0x380fff4 @ 0x601177c
.arm
Function_6011780: @ 6011780 :arm
	ldr     r0, [pc, #0x1c] @ [0x60117a4] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x34]
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x60117a4

.word 0x380fff4 @ 0x60117a4
.arm
Function_60117a8: @ 60117a8 :arm
	ldr     r0, [pc, #0x1c] @ [0x60117cc] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x36]
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x60117cc

.word 0x380fff4 @ 0x60117cc
.arm
Function_60117d0: @ 60117d0 :arm
	ldr     r0, [pc, #0x24] @ [0x60117fc] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x3a]
	mov     r2, r2, lsl #31
	mov     r2, r2, lsr #31
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x60117fc

.word 0x380fff4 @ 0x60117fc
.arm
Function_6011800: @ 6011800 :arm
	ldr     r0, [pc, #0x24] @ [0x601182c] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x3a]
	mov     r2, r2, lsl #30
	mov     r2, r2, lsr #31
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x601182c

.word 0x380fff4 @ 0x601182c
.arm
Function_6011830: @ 6011830 :arm
	ldr     r0, [pc, #0x1c] @ [0x6011854] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0xc2]
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x6011854

.word 0x380fff4 @ 0x6011854
.arm
Function_6011858: @ 6011858 :arm
	ldr     r0, [pc, #0x1c] @ [0x601187c] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x3c]
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x601187c

.word 0x380fff4 @ 0x601187c
.arm
Function_6011880: @ 6011880 :arm
	ldr     r0, [pc, #0x30] @ [0x60118b8] (=0x380fff4)
	mov     r2, #0x11
	strh    r2, [r1, #0x2]
	ldr     r0, [r0]
	add     r3, r1, #0x6
	add     r2, r0, #225, 30 @ #0x384
	mov     r1, #0x0
.arm
branch_601189c: @ 601189c :arm
	ldrh    r0, [r2], #0x2
	add     r1, r1, #0x1
	cmp     r1, #0x10
	strh    r0, [r3], #0x2
	bcc     branch_601189c
	mov     r0, #0x0
	bx      lr
@ 0x60118b8

.word 0x380fff4 @ 0x60118b8
.arm
Function_60118bc: @ 60118bc :arm
	ldr     r0, [pc, #0x24] @ [0x60118e8] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x3a]
	mov     r2, r2, lsl #29
	mov     r2, r2, lsr #31
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x60118e8

.word 0x380fff4 @ 0x60118e8
.arm
Function_60118ec: @ 60118ec :arm
	ldr     r0, [pc, #0x1c] @ [0x6011910] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x32]
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x6011910

.word 0x380fff4 @ 0x6011910
.arm
Function_6011914: @ 6011914 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r1
	mov     r0, #0x4
	strh    r0, [r4, #0x2]
	mov     r0, #0x13
	bl      Function_600b270
	strh    r0, [r4, #0x6]
	mov     r0, #0x35
	bl      Function_600b270
	strh    r0, [r4, #0x8]
	mov     r0, #0x2e
	bl      Function_600b270
	strh    r0, [r4, #0xa]
	mov     r0, #0x0
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6011954

.arm
Function_6011954: @ 6011954 :arm
	ldr     r0, [pc, #0x20] @ [0x601197c] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x22]
	sub     r2, r2, #0x1
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x601197c

.word 0x380fff4 @ 0x601197c
.arm
Function_6011980: @ 6011980 :arm
	ldr     r0, [pc, #0x30] @ [0x60119b8] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r2, [r0, #0x4c]
	cmp     r2, #0x10
	movcc   r0, #0x1
	ldrcsh  r2, [r0, #0x3a]
	movcs   r0, #0x0
	movcs   r2, r2, lsl #28
	movcs   r2, r2, lsr #31
	strcsh  r2, [r1, #0x6]
	bx      lr
@ 0x60119b8

.word 0x380fff4 @ 0x60119b8
.arm
Function_60119bc: @ 60119bc :arm
	ldr     r3, [pc, #0x54] @ [0x6011a18] (=0x380fff4)
	mov     r0, #0x3
	strh    r0, [r1, #0x2]
	ldr     r0, [r3]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r2, [r0, #0x4c]
	cmp     r2, #0x10
	movcc   r0, #0x1
	bxcc    lr
	ldrh    r2, [r0, #0x3a]
	mov     r0, #0x0
	mov     r2, r2, lsl #27
	mov     r2, r2, lsr #31
	strh    r2, [r1, #0x6]
	ldr     r2, [r3]
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r3, [r2, #0x3a]
	mov     r2, r3, lsl #28
	mov     r3, r3, lsl #26
	mov     r2, r2, lsr #31
	eor     r2, r2, r3, lsr #31
	strh    r2, [r1, #0x8]
	bx      lr
@ 0x6011a18

.word 0x380fff4 @ 0x6011a18
.arm
Function_6011a1c: @ 6011a1c :arm
	ldr     r0, [pc, #0x30] @ [0x6011a54] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r2, [r0, #0x4c]
	cmp     r2, #0x10
	movcc   r0, #0x1
	ldrcsh  r2, [r0, #0x3a]
	movcs   r0, #0x0
	movcs   r2, r2, lsl #25
	movcs   r2, r2, lsr #31
	strcsh  r2, [r1, #0x6]
	bx      lr
@ 0x6011a54

.word 0x380fff4 @ 0x6011a54
.arm
Function_6011a58: @ 6011a58 :arm
	ldr     r0, [pc, #0x30] @ [0x6011a90] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r2, [r0, #0x4c]
	cmp     r2, #0x10
	movcc   r0, #0x1
	ldrcsh  r2, [r0, #0x3a]
	movcs   r0, #0x0
	movcs   r2, r2, lsl #24
	movcs   r2, r2, lsr #31
	strcsh  r2, [r1, #0x6]
	bx      lr
@ 0x6011a90

.word 0x380fff4 @ 0x6011a90
.arm
Function_6011a94: @ 6011a94 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x20] @ [0x6011ac0] (=0x380fff4)
	mov     r2, #0x4
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	add     r0, r1, #0x6
	add     r1, r2, #234, 30 @ #0x3a8
	bl      Function_600a924
	mov     r0, #0x0
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6011ac0

.word 0x380fff4 @ 0x6011ac0
.arm
Function_6011ac4: @ 6011ac4 :arm
	ldr     r2, [pc, #0x40] @ [0x6011b0c] (=0x380fff4)
	mov     r0, #0x12
	strh    r0, [r1, #0x2]
	ldr     r0, [r2]
	add     r12, r1, #0x8
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x62]
	mov     r3, #0x0
	strh    r0, [r1, #0x6]
	ldr     r0, [r2]
	add     r1, r0, #217, 30 @ #0x364
.arm
branch_6011af0: @ 6011af0 :arm
	ldrh    r0, [r1], #0x2
	add     r3, r3, #0x2
	cmp     r3, #0x20
	strh    r0, [r12], #0x2
	bcc     branch_6011af0
	mov     r0, #0x0
	bx      lr
@ 0x6011b0c

.word 0x380fff4 @ 0x6011b0c
.arm
Function_6011b10: @ 6011b10 :arm
	ldr     r0, [pc, #0x1c] @ [0x6011b34] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0xb2]
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x6011b34

.word 0x380fff4 @ 0x6011b34
.arm
Function_6011b38: @ 6011b38 :arm
	ldr     r0, [pc, #0x1c] @ [0x6011b5c] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0xb8]
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x6011b5c

.word 0x380fff4 @ 0x6011b5c
.arm
Function_6011b60: @ 6011b60 :arm
	ldr     r0, [pc, #0x1c] @ [0x6011b84] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0xb4]
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x6011b84

.word 0x380fff4 @ 0x6011b84
.arm
Function_6011b88: @ 6011b88 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r4, r1
	ldrh    r0, [r4, #0x2]
	ldr     r1, [pc, #0xc0] @ [0x6011c5c] (=0x380fff4)
	cmp     r0, #0x1
	ldrhi   r0, [pc, #0xb8] @ [0x6011c5c] (=0x380fff4)
	ldrhi   r0, [r0]
	addhi   r0, r0, #3, 24 @ #0x300
	ldrhih  r0, [r0, #0xe4]
	strhih  r0, [r4, #0x6]
	ldrh    r0, [r4, #0x2]
	ldr     r3, [r1]
	sub     r1, r0, #0x2
	add     r0, r3, #3, 24 @ #0x300
	ldrh    r2, [r0, #0xe4]
	cmp     r2, r1, lsl #1
	movgt   r0, #0x4
	bgt     branch_6011c54
	ldrh    r2, [r4, #0x6]
	cmp     r2, #0x0
	beq     branch_6011c38
	ldrh    r0, [r0, #0xe6]
	tst     r0, #0x1
	ldr     r0, [r3, #0x3e0]
	beq     branch_6011c2c
	add     r6, r4, #0x8
	add     r5, r0, #0x1
	mov     r7, #0x0
	b       branch_6011c1c
@ 0x6011bfc

.arm
branch_6011bfc: @ 6011bfc :arm
	mov     r0, r5
	bl      Function_600ba0c
	mov     r1, r0
	mov     r0, r6
	bl      Function_600b9e0
	add     r6, r6, #0x1
	add     r5, r5, #0x1
	add     r7, r7, #0x1
.arm
branch_6011c1c: @ 6011c1c :arm
	ldrh    r0, [r4, #0x6]
	cmp     r7, r0
	bcc     branch_6011bfc
	b       branch_6011c38
@ 0x6011c2c

.arm
branch_6011c2c: @ 6011c2c :arm
	add     r1, r4, #0x8
	add     r2, r2, #0x1
	bl      Function_6001ae0
.arm
branch_6011c38: @ 6011c38 :arm
	ldrh    r1, [r4, #0x6]
	mov     r0, #0x0
	add     r1, r1, #0x1
	add     r1, r1, r1, lsr #31
	mov     r1, r1, asr #1
	add     r1, r1, #0x2
	strh    r1, [r4, #0x2]
.arm
branch_6011c54: @ 6011c54 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6011c5c

.word 0x380fff4 @ 0x6011c5c
.arm
Function_6011c60: @ 6011c60 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x30] @ [0x6011c9c] (=0x380fff4)
	mov     r0, #0x1
	strh    r0, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0x4c]
	cmp     r1, #0x0
	cmpne   r1, #0x10
	bne     branch_6011c94
	mov     r0, #0x0
	bl      Function_600a880
	mov     r0, #0x0
.arm
branch_6011c94: @ 6011c94 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6011c9c

.word 0x380fff4 @ 0x6011c9c
.arm
Function_6011ca0: @ 6011ca0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x4c] @ [0x6011cf8] (=0x380fff4)
	mov     r0, #0x1
	strh    r0, [r1, #0x2]
	ldr     r1, [r2]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r2, [r1, #0x4c]
	cmp     r2, #0x20
	bhi     branch_6011cf0
	ldrh    r1, [r1, #0x56]
	cmp     r1, #0x0
	bne     branch_6011cf0
	mov     r0, #0x0
	bl      Function_6017f04
	cmp     r0, #0x0
	movne   r0, #0xe
	bne     branch_6011cf0
	mov     r0, #0x10
	bl      Function_600a880
	mov     r0, #0x0
.arm
branch_6011cf0: @ 6011cf0 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6011cf8

.word 0x380fff4 @ 0x6011cf8
.arm
Function_6011cfc: @ 6011cfc :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x44] @ [0x6011d4c] (=0x380fff4)
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r1, [r0, #0x4c]
	cmp     r1, #0x10
	beq     branch_6011d30
	cmp     r1, #0x20
	ldreqh  r0, [r0, #0x56]
	cmpeq   r0, #0x0
	bne     branch_6011d40
.arm
branch_6011d30: @ 6011d30 :arm
	mov     r0, #0x20
	bl      Function_600a880
	mov     r0, #0x0
	b       branch_6011d44
@ 0x6011d40

.arm
branch_6011d40: @ 6011d40 :arm
	mov     r0, #0x1
.arm
branch_6011d44: @ 6011d44 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6011d4c

.word 0x380fff4 @ 0x6011d4c
.arm
Function_6011d50: @ 6011d50 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x2c] @ [0x6011d88] (=0x380fff4)
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x4c]
	cmp     r0, #0x20
	bcc     branch_6011d78
	bl      Function_600b1d0
.arm
branch_6011d78: @ 6011d78 :arm
	bl      Function_6008b10
	mov     r0, #0x0
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6011d88

.word 0x380fff4 @ 0x6011d88
.arm
Function_6011d8c: @ 6011d8c :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x28] @ [0x6011dc0] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x4c]
	cmp     r0, #0x0
	mov     r0, #0x1
	beq     branch_6011db8
	strh    r0, [r1, #0x2]
	bl      Function_600a9c0
	mov     r0, #0x0
.arm
branch_6011db8: @ 6011db8 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6011dc0

.word 0x380fff4 @ 0x6011dc0
.arm
Function_6011dc4: @ 6011dc4 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x88] @ [0x6011e58] (=0x6018890)
	mov     r4, r1
	mov     r3, #0x9
	add     r1, r4, #0x6
	mov     r2, #0x8
	strh    r3, [r4, #0x2]
	bl      Function_6001ae0
	ldr     r1, [pc, #0x70] @ [0x6011e5c] (=0x4808000)
	ldr     r0, [pc, #0x70] @ [0x6011e60] (=0x380fff4)
	ldrh    r1, [r1]
	strh    r1, [r4, #0xe]
	ldr     r0, [r0]
	add     r0, r0, #6, 24 @ #0x600
	ldrh    r0, [r0, #0x90]
	tst     r0, #2, 18 @ #0x8000
	moveq   r1, #0x6d
	ldreq   r0, [pc, #0x54] @ [0x6011e64] (=0x933d)
	streqh  r1, [r4, #0x10]
	beq     branch_6011e24
	mov     r0, #0x0
	bl      Function_600b270
	strh    r0, [r4, #0x10]
	bl      Function_600b2ec
.arm
branch_6011e24: @ 6011e24 :arm
	strh    r0, [r4, #0x12]
	ldr     r0, [pc, #0x30] @ [0x6011e60] (=0x380fff4)
	ldr     r1, [r0]
	add     r0, r1, #6, 24 @ #0x600
	ldrh    r0, [r0, #0x90]
	tst     r0, #1, 18 @ #0x4000
	addne   r0, r1, #5, 24 @ #0x500
	ldrneh  r0, [r0, #0xf8]
	moveq   r0, #0x2
	strh    r0, [r4, #0x14]
	mov     r0, #0x0
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6011e58

.word 0x6018890 @ 0x6011e58
.word 0x4808000 @ 0x6011e5c
.word 0x380fff4 @ 0x6011e60
.word 0x933d @ 0x6011e64
.arm
Function_6011e68: @ 6011e68 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x4c] @ [0x6011ec0] (=0x380fff4)
	mov     r4, r1
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x4c]
	cmp     r0, #0x0
	moveq   r0, #0x1
	beq     branch_6011eb8
	mov     r0, #0x5c
	strh    r0, [r4, #0x2]
	bl      Function_600a9f8
	ldr     r0, [pc, #0x20] @ [0x6011ec0] (=0x380fff4)
	add     r1, r4, #0x8
	ldr     r0, [r0]
	mov     r2, #0xb4
	add     r0, r0, #79, 30 @ #0x13c
	add     r0, r0, #1, 22 @ #0x400
	bl      Function_6011ec4
	mov     r0, #0x0
.arm
branch_6011eb8: @ 6011eb8 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6011ec0

.word 0x380fff4 @ 0x6011ec0
.arm
Function_6011ec4: @ 6011ec4 :arm
	ldr     pc, [pc, #-0x4] @ [0x6011ec8] (=0x37fb090)
@ 0x6011ec8

.word 0x37fb090 @ 0x6011ec8
.arm
Function_6011ecc: @ 6011ecc :arm
	ldr     r0, [pc, #0x1c] @ [0x6011ef0] (=0x380fff4)
	mov     r2, #0x2
	strh    r2, [r1, #0x2]
	ldr     r2, [r0]
	mov     r0, #0x0
	add     r2, r2, #3, 24 @ #0x300
	ldrh    r2, [r2, #0x4c]
	strh    r2, [r1, #0x6]
	bx      lr
@ 0x6011ef0

.word 0x380fff4 @ 0x6011ef0
.arm
Function_6011ef4: @ 6011ef4 :arm
	stmfd   sp!, {r3-r6,lr}
	sub     sp, sp, #0x4
	ldr     r2, [pc, #0x318] @ [0x601221c] (=0x380fff4)
	mov     r5, r0
	ldr     r2, [r2]
	mov     r0, #0x1
	strh    r0, [r1, #0x2]
	add     r4, r2, #209, 30 @ #0x344
	ldrh    r1, [r4, #0x8]
	and     r1, r1, #0xf0
	cmp     r1, #0x10
	bne     branch_6012210
	ldrh    r0, [r5, #0x10]
	cmp     r0, #0x1
	movhi   r0, #0x5
	bhi     branch_6012210
	ldrh    r0, [r5, #0x14]
	cmp     r0, #0xa
	cmpne   r0, #0x14
	movne   r0, #0x5
	bne     branch_6012210
	ldrh    r0, [r5, #0x12]
	cmp     r0, #0x4
	movhi   r0, #0x5
	bhi     branch_6012210
	mov     r0, #0x0
	bl      Function_6017f04
	cmp     r0, #0x0
	movne   r0, #0xe
	bne     branch_6012210
	ldrh    r0, [r5, #0x10]
	cmp     r0, #0x0
	beq     branch_6012184
	cmp     r0, #0x1
	bne     branch_601220c
	ldrh    r0, [r4, #0x8]
	cmp     r0, #0x10
	movne   r0, #0x1
	bne     branch_6012210
	mov     r0, #0x0
	str     r0, [sp]
	add     r2, sp, #0x0
	mov     r0, #0x65
	mov     r1, #0x1
	bl      Function_6018058
	ldr     r6, [sp]
	mov     r0, #0x1
	bl      Function_600b270
	cmp     r6, r0
	beq     branch_6011fd0
	mov     r1, r6
	mov     r0, #0x1
	bl      Function_600b29c
	ldr     r0, [pc, #0x250] @ [0x6012220] (=0x1388)
	bl      Function_600b65c
.arm
branch_6011fd0: @ 6011fd0 :arm
	ldrh    r0, [r5, #0x12]
	cmp     r0, #0x4
	addls   pc, pc, r0, lsl #2
	b       branch_601220c
@ 0x6011fe0

.arm
Function_6011fe0: @ 6011fe0 :arm
	b       branch_6011ff4
@ 0x6011fe4

.arm
Function_6011fe4: @ 6011fe4 :arm
	b       branch_6011ff4
@ 0x6011fe8

.arm
Function_6011fe8: @ 6011fe8 :arm
	b       branch_6011ff4
@ 0x6011fec

.arm
Function_6011fec: @ 6011fec :arm
	b       branch_601208c
@ 0x6011ff0

.arm
Function_6011ff0: @ 6011ff0 :arm
	b       branch_601208c
@ 0x6011ff4

.arm
branch_6011ff4: @ 6011ff4 :arm
	mov     r0, #0x11
	strh    r0, [r4, #0x8]
	ldrh    r0, [r5, #0x16]
	mov     r1, #0x1
	bl      Function_600a0a0
	ldr     r1, [pc, #0x214] @ [0x6012224] (=0x4808040)
	mov     r2, #2, 18 @ #0x8000
	ldr     r0, [pc, #0x210] @ [0x6012228] (=0x5dc)
	strh    r2, [r1]
	bl      Function_600b65c
	ldrh    r1, [r5, #0x14]
	mov     r0, #0x2
	strh    r1, [r4, #0x16]
	bl      Function_600b270
	str     r0, [sp]
	ldrh    r1, [r5, #0x12]
	ldr     r2, [pc, #0x1f0] @ [0x601222c] (=0x48081a4)
	cmp     r1, #0x1
	orrls   r0, r0, #0x10
	strls   r0, [sp]
	ldrh    r0, [r5, #0x14]
	strh    r0, [r2]
	ldrh    r0, [r5, #0x12]
	cmp     r0, #0x1
	strneh  r0, [r2, #-0x2]
	bne     branch_6012070
	ldr     r1, [sp]
	mov     r0, #0x3
	orr     r1, r1, #0x20
	str     r1, [sp]
	strh    r0, [r2, #-0x2]
.arm
branch_6012070: @ 6012070 :arm
	ldr     r1, [sp]
	mov     r0, #0x2
	bl      Function_600b29c
	ldr     r1, [pc, #0x1ac] @ [0x6012230] (=0x823)
	ldr     r0, [pc, #0x1ac] @ [0x6012234] (=0x48081a0)
	strh    r1, [r0]
	b       branch_601220c
@ 0x601208c

.arm
branch_601208c: @ 601208c :arm
	ldr     r0, [pc, #0x188] @ [0x601221c] (=0x380fff4)
	ldr     r0, [r0]
	add     r4, r0, #209, 30 @ #0x344
	bl      Function_600ae10
	bl      Function_600b1d0
	mov     r0, #0x6
	bl      Function_600b270
	strh    r0, [r4, #0xac]
	ldrh    r0, [r5, #0x12]
	cmp     r0, #0x4
	bne     branch_60120c4
	mov     r0, #0x6
	mov     r1, #0x0
	bl      Function_600b29c
.arm
branch_60120c4: @ 60120c4 :arm
	ldr     r1, [pc, #0x16c] @ [0x6012238] (=0x4804000)
	mov     r0, #0x0
	mov     r2, #0xc
	bl      Function_6000598
	ldr     r1, [pc, #0x15c] @ [0x6012238] (=0x4804000)
	mov     r0, #0x14
	strh    r0, [r1, #0x8]
	mov     r0, #125, 28 @ #0x7d0
	strh    r0, [r1, #0xa]
	add     r3, r1, #0xc
	ldr     r1, [pc, #0x148] @ [0x601223c] (=0x5555)
	ldr     r0, [pc, #0x148] @ [0x6012240] (=0x7ec)
	mov     r2, #0x0
.arm
branch_60120f8: @ 60120f8 :arm
	add     r2, r2, #0x2
	cmp     r2, r0
	strh    r1, [r3], #0x2
	bcc     branch_60120f8
	ldr     r1, [pc, #0x128] @ [0x6012238] (=0x4804000)
	mov     r2, #0x8
	ldr     r0, [pc, #0x12c] @ [0x6012244] (=0x4808194)
	strh    r2, [r1, #0xc]
	mov     r1, #0x6
	strh    r1, [r0]
	mov     r0, #0x12
	strh    r0, [r4, #0x8]
	mov     r1, #0x1
	strh    r1, [r4, #0x18]
	ldrh    r0, [r5, #0x16]
	bl      Function_600a0a0
	ldr     r1, [pc, #0xe4] @ [0x6012224] (=0x4808040)
	mov     r2, #2, 18 @ #0x8000
	ldr     r0, [pc, #0xe0] @ [0x6012228] (=0x5dc)
	strh    r2, [r1]
	bl      Function_600b65c
	mov     r2, #0x1
	ldr     r3, [pc, #0xf0] @ [0x6012248] (=0x4808012)
	mov     r0, #0x2
	strh    r0, [r3]
	strh    r2, [r3, #-0xe]
	ldr     r1, [pc, #0xd0] @ [0x6012238] (=0x4804000)
	rsb     r0, r2, #1, 18 @ #0x4000
	and     r0, r1, r0
	mov     r0, r0, lsl #15
	mov     r0, r0, lsr #16
	strh    r2, [r3, #0x9c]
	orr     r0, r0, #2, 18 @ #0x8000
	strh    r0, [r3, #0x8e]
	b       branch_601220c
@ 0x6012184

.arm
branch_6012184: @ 6012184 :arm
	ldrh    r0, [r4, #0x8]
	cmp     r0, #0x11
	bne     branch_60121cc
	bl      Function_600b708
	ldr     r1, [pc, #0x98] @ [0x6012234] (=0x48081a0)
	mov     r2, #0x0
	strh    r2, [r1]
	mov     r0, #0x1
	strh    r0, [r1, #0x2]
	sub     r0, r1, #22, 28 @ #0x160
	strh    r2, [r0]
	mov     r0, #0x2
	bl      Function_600b270
	bic     r1, r0, #0x30
	mov     r0, #0x2
	str     r1, [sp]
	bl      Function_600b29c
	b       branch_6012204
@ 0x60121cc

.arm
branch_60121cc: @ 60121cc :arm
	cmp     r0, #0x12
	bne     branch_60121fc
	ldr     r1, [pc, #0x70] @ [0x601224c] (=0x4808004)
	mov     r0, #0x0
	strh    r0, [r4, #0x18]
.arm
branch_60121e0: @ 60121e0 :arm
	ldrh    r0, [r1]
	cmp     r0, #0x0
	bne     branch_60121e0
	ldrh    r1, [r4, #0xac]
	mov     r0, #0x6
	bl      Function_600b29c
	b       branch_6012204
@ 0x60121fc

.arm
branch_60121fc: @ 60121fc :arm
	mov     r0, #0x1
	b       branch_6012210
@ 0x6012204

.arm
branch_6012204: @ 6012204 :arm
	mov     r0, #0x10
	strh    r0, [r4, #0x8]
.arm
branch_601220c: @ 601220c :arm
	mov     r0, #0x0
.arm
branch_6012210: @ 6012210 :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3-r6,lr}
	bx      lr
@ 0x601221c

.word 0x380fff4 @ 0x601221c
.word 0x1388 @ 0x6012220
.word 0x4808040 @ 0x6012224
.word 0x5dc @ 0x6012228
.word 0x48081a4 @ 0x601222c
.word 0x823 @ 0x6012230
.word 0x48081a0 @ 0x6012234
.word 0x4804000 @ 0x6012238
.word 0x5555 @ 0x601223c
.word 0x7ec @ 0x6012240
.word 0x4808194 @ 0x6012244
.word 0x4808012 @ 0x6012248
.word 0x4808004 @ 0x601224c
.arm
Function_6012250: @ 6012250 :arm
	ldr     r0, [pc, #0x64] @ [0x60122bc] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x5c]
	cmp     r0, #0x0
	beq     branch_601228c
	ldr     r0, [pc, #0x50] @ [0x60122c0] (=0x4804000)
	mov     r2, #0x0
	strh    r2, [r0]
	ldr     r1, [pc, #0x48] @ [0x60122c4] (=0x48080a0)
	strh    r2, [r0, #0x4]
	ldrh    r0, [r1]
	orr     r0, r0, #2, 18 @ #0x8000
	strh    r0, [r1]
	bx      lr
@ 0x601228c

.arm
branch_601228c: @ 601228c :arm
	ldr     r2, [pc, #0x34] @ [0x60122c8] (=0x48080ac)
	mov     r3, #0x1
	strh    r3, [r2]
	mov     r1, #0x0
	strh    r1, [r2, #-0xa8]
	mov     r0, #0x2
	strh    r0, [r2, #-0x9a]
	rsb     r0, r3, #1, 16 @ #0x10000
	strh    r0, [r2, #-0x9c]
	strh    r1, [r2, #0xe8]
	strh    r1, [r2, #-0x6c]
	bx      lr
@ 0x60122bc

.word 0x380fff4 @ 0x60122bc
.word 0x4804000 @ 0x60122c0
.word 0x48080a0 @ 0x60122c4
.word 0x48080ac @ 0x60122c8
.arm
Function_60122cc: @ 60122cc :arm
	stmfd   sp!, {r4,lr}
	ldr     r2, [pc, #0xa0] @ [0x6012378] (=0x380fff4)
	mov     r3, #0x1
	ldr     r2, [r2]
	strh    r3, [r1, #0x2]
	add     r4, r2, #209, 30 @ #0x344
	ldrh    r2, [r4, #0x8]
	and     r1, r2, #0xf0
	cmp     r1, #0x10
	movne   r0, r3
	bne     branch_6012370
	ldrh    r1, [r0, #0x10]
	cmp     r1, #0x0
	beq     branch_6012344
	cmp     r1, #0x1
	bne     branch_601236c
	cmp     r2, #0x10
	movne   r0, r3
	bne     branch_6012370
	ldrh    r0, [r0, #0x12]
	mov     r1, r3
	bl      Function_600a0a0
	mov     r0, #0x0
	strh    r0, [r4, #0xc]
	bl      Function_600ae10
	mov     r0, #2, 18 @ #0x8000
	bl      Function_600a480
	mov     r0, #0x11
	strh    r0, [r4, #0x8]
	b       branch_601236c
@ 0x6012344

.arm
branch_6012344: @ 6012344 :arm
	cmp     r2, #0x11
	bne     branch_601235c
	mov     r0, #0x0
	bl      Function_600a480
	bl      Function_600b1d0
	b       branch_6012364
@ 0x601235c

.arm
branch_601235c: @ 601235c :arm
	mov     r0, r3
	b       branch_6012370
@ 0x6012364

.arm
branch_6012364: @ 6012364 :arm
	mov     r0, #0x10
	strh    r0, [r4, #0x8]
.arm
branch_601236c: @ 601236c :arm
	mov     r0, #0x0
.arm
branch_6012370: @ 6012370 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6012378

.word 0x380fff4 @ 0x6012378
.arm
Function_601237c: @ 601237c :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r1, [pc, #0x1b8] @ [0x6012540] (=0x380fff4)
	mov     r8, r0
	ldr     r4, [r1]
	ldrh    r1, [r8, #0x16]
	ldr     r0, [pc, #0x1ac] @ [0x6012544] (=0x5e4)
	add     r5, r4, #209, 30 @ #0x344
	cmp     r1, r0
	add     r6, r4, #199, 30 @ #0x31c
	movhi   r0, #0x5
	bhi     branch_6012538
	ldrh    r0, [r6, #0x12]
	cmp     r0, #0x1
	bne     branch_60123dc
	add     r0, r8, #0x28
	bl      Function_600e1a8
	mov     r7, r0
	cmp     r7, #0xff
	beq     branch_60123d4
	bl      Function_600e888
	cmp     r0, #0x40
	beq     branch_60123e0
.arm
branch_60123d4: @ 60123d4 :arm
	mov     r0, #0xa
	b       branch_6012538
@ 0x60123dc

.arm
branch_60123dc: @ 60123dc :arm
	ldrh    r7, [r5, #0x88]
.arm
branch_60123e0: @ 60123e0 :arm
	ldr     r0, [pc, #0x158] @ [0x6012540] (=0x380fff4)
	strh    r7, [r8, #0x12]
	ldr     r0, [r0]
	ldr     r0, [r0, #0x3ec]
	strh    r0, [r8, #0x14]
	ldrh    r0, [r8, #0x1e]
	tst     r0, #0xff
	strneh  r0, [r8, #0x20]
	movne   r0, #0x0
	strneh  r0, [r8, #0x1e]
	bne     branch_6012418
	mov     r0, r7
	bl      Function_600e948
	strh    r0, [r8, #0x20]
.arm
branch_6012418: @ 6012418 :arm
	ldrh    r0, [r8, #0x16]
	cmp     r0, #0x0
	bne     branch_6012440
	ldrh    r1, [r5, #0x8a]
	mov     r0, #0x1c
	orr     r1, r1, #0x40
	bic     r1, r1, #1, 18 @ #0x4000
	strh    r1, [r8, #0x24]
	strh    r0, [r8, #0x22]
	b       branch_6012464
@ 0x6012440

.arm
branch_6012440: @ 6012440 :arm
	ldrh    r0, [r5, #0x8a]
	strh    r0, [r8, #0x24]
	ldrh    r0, [r6, #0x18]
	cmp     r0, #0x0
	ldrh    r0, [r8, #0x16]
	addeq   r0, r0, #0x1c
	streqh  r0, [r8, #0x22]
	addne   r0, r0, #0x24
	strneh  r0, [r8, #0x22]
.arm
branch_6012464: @ 6012464 :arm
	ldrh    r0, [r6, #0x12]
	cmp     r0, #0x1
	beq     branch_6012480
	cmp     r0, #0x2
	cmpne   r0, #0x3
	beq     branch_60124fc
	b       branch_6012534
@ 0x6012480

.arm
branch_6012480: @ 6012480 :arm
	add     r0, r8, #0x34
	add     r1, r8, #0x2e
	bl      Function_600a924
	add     r0, r8, #0x2e
	add     r1, r5, #0x64
	bl      Function_600a924
	cmp     r7, #0x0
	bne     branch_60124d8
	mov     r1, r8
	add     r0, r4, #2, 24 @ #0x200
	bl      Function_600e390
	ldr     r0, [pc, #0x8c] @ [0x6012540] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #5, 24 @ #0x500
	ldrh    r1, [r0, #0x32]
	ldrh    r2, [r0, #0x2e]
	mvn     r0, r1
	tst     r2, r0
	bne     branch_6012534
	mov     r0, #0x2
	bl      Function_6012c84
	b       branch_6012534
@ 0x60124d8

.arm
branch_60124d8: @ 60124d8 :arm
	add     r0, r8, #0x10
	bl      Function_600e3ec
	mov     r2, r8
	add     r0, r4, #2, 24 @ #0x200
	add     r1, r4, #101, 30 @ #0x194
	bl      Function_60091c0
	mov     r0, #0x0
	bl      Function_6012c84
	b       branch_6012534
@ 0x60124fc

.arm
branch_60124fc: @ 60124fc :arm
	add     r0, r8, #0x34
	add     r1, r8, #0x28
	bl      Function_600a924
	add     r0, r8, #0x28
	add     r1, r5, #0x64
	bl      Function_600a924
	add     r0, r8, #0x10
	bl      Function_600e3ec
	mov     r2, r8
	add     r0, r4, #2, 24 @ #0x200
	add     r1, r4, #101, 30 @ #0x194
	bl      Function_60091c0
	mov     r0, #0x0
	bl      Function_6012c84
.arm
branch_6012534: @ 6012534 :arm
	mov     r0, #0x81
.arm
branch_6012538: @ 6012538 :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x6012540

.word 0x380fff4 @ 0x6012540
.word 0x5e4 @ 0x6012544
.arm
Function_6012548: @ 6012548 :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r2, [pc, #0x180] @ [0x60126d4] (=0x380fff4)
	mov     r10, r0
	ldr     r2, [r2]
	mov     r9, #0x1
	add     r0, r2, #6, 24 @ #0x600
	ldrh    r6, [r0, #0x90]
	add     r4, r2, #199, 30 @ #0x31c
	strh    r9, [r1, #0x2]
	ldrh    r1, [r4, #0x12]
	add     r0, r2, #0x2c
	add     r5, r0, #1, 22 @ #0x400
	cmp     r1, #0x2
	movne   r0, #0xb
	bne     branch_60126cc
	ldrh    r0, [r10, #0x10]
	cmp     r0, #129, 30 @ #0x204
	movhi   r0, #0x5
	bhi     branch_60126cc
	ldrh    r0, [r5, #0x50]
	add     r11, r5, #0x50
	cmp     r0, #0x0
	moveq   r9, #0x0
	mov     r0, #0x14
	mul     r8, r9, r0
	ldrh    r1, [r11, r8]
	cmp     r1, #0x0
	movne   r0, #0x8
	bne     branch_60126cc
	ldr     r1, [pc, #0x114] @ [0x60126d8] (=0x4808094)
	ldrh    r1, [r1]
	tst     r1, #2, 18 @ #0x8000
	movne   r0, #0x8
	bne     branch_60126cc
	add     r1, r5, r8
	ldr     r7, [r1, #0x58]
	mov     r1, #0x0
	strh    r1, [r7]
	strh    r1, [r7, #0x4]
	strh    r0, [r7, #0x8]
	ldrh    r0, [r10, #0x10]
	ldr     r3, [pc, #0xe8] @ [0x60126dc] (=0x60184d4)
	add     r0, r0, #0x1e
	strh    r0, [r7, #0xa]
	mov     r0, #70, 30 @ #0x118
	strh    r0, [r7, #0xc]
	add     r0, r7, #0x10
	add     r1, r2, #234, 30 @ #0x3a8
	add     r2, r4, #0x8
	bl      Function_600a974
	ldrh    r0, [r10, #0x12]
	strh    r0, [r7, #0x24]
	ldrh    r0, [r10, #0x10]
	cmp     r0, #0x0
	beq     branch_6012640
	cmp     r9, #0x0
	bne     branch_6012630
	bl      Function_600a9f8
.arm
branch_6012630: @ 6012630 :arm
	ldr     r1, [r10, #0x14]
	ldrh    r2, [r10, #0x10]
	add     r0, r7, #0x26
	bl      Function_600b938
.arm
branch_6012640: @ 6012640 :arm
	tst     r6, #0x4
	beq     branch_6012670
	ldrh    r0, [r10, #0x10]
	add     r1, r7, #0x24
	add     r0, r0, #0x2
	add     r0, r1, r0
	add     r0, r0, #0x3
	ldr     r1, [pc, #0x7c] @ [0x60126e0] (=0xb6b8)
	bic     r2, r0, #0x3
	ldr     r0, [pc, #0x78] @ [0x60126e4] (=0x1d46)
	strh    r1, [r2]
	strh    r0, [r2, #0x2]
.arm
branch_6012670: @ 6012670 :arm
	mov     r0, #1, 8 @ #0x1000000
	bl      Function_6008ef0
	mov     r2, #0x2
	ldr     r1, [pc, #0x64] @ [0x60126e8] (=0x3fff)
	strh    r2, [r11, r8]
	add     r5, r5, #0x52
	ldrh    r2, [r5, r8]
	and     r1, r7, r1
	add     r3, r2, #0x1
	mov     r2, r1, lsr #1
	ldr     r1, [pc, #0x38] @ [0x60126d8] (=0x4808094)
	strh    r3, [r5, r8]
	orr     r2, r2, #2, 18 @ #0x8000
	strh    r2, [r1]
	ldrh    r1, [r4, #0x1e]
	mov     r4, r0
	mov     r0, r1, lsl #24
	movs    r0, r0, lsr #31
	bne     branch_60126c0
	bl      Function_600a838
.arm
branch_60126c0: @ 60126c0 :arm
	mov     r0, r4
	bl      Function_6008ef8
	mov     r0, #0x0
.arm
branch_60126cc: @ 60126cc :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x60126d4

.word 0x380fff4 @ 0x60126d4
.word 0x4808094 @ 0x60126d8
.word 0x60184d4 @ 0x60126dc
.word 0xb6b8 @ 0x60126e0
.word 0x1d46 @ 0x60126e4
.word 0x3fff @ 0x60126e8
.arm
Function_60126ec: @ 60126ec :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x8
	ldr     r2, [pc, #0x47c] @ [0x6012b78] (=0x380fff4)
	mov     r10, r0
	ldr     r4, [r2]
	mov     r9, #0x1
	add     r0, r4, #6, 24 @ #0x600
	ldrh    r0, [r0, #0x90]
	add     r7, r4, #199, 30 @ #0x31c
	strh    r9, [r1, #0x2]
	ldrh    r1, [r7, #0x12]
	str     r0, [sp, #0x4]
	add     r0, r4, #0x2c
	add     r6, r0, #1, 22 @ #0x400
	cmp     r1, #0x1
	movne   r0, #0xb
	bne     branch_6012b6c
	ldrh    r0, [r6, #0x3c]
	cmp     r0, #0x0
	movne   r0, #0x8
	bne     branch_6012b6c
	ldrh    r0, [r10, #0x10]
	ldr     r5, [r6, #0x44]
	tst     r0, #2, 18 @ #0x8000
	beq     branch_6012790
	tst     r0, #0x2
	ldreqh  r0, [r6, #0x94]
	streqh  r0, [r10, #0x14]
	ldrh    r0, [r10, #0x10]
	tst     r0, #0x4
	ldreqh  r0, [r6, #0xa0]
	streqh  r0, [r10, #0x16]
	ldrh    r0, [r10, #0x10]
	tst     r0, #0x8
	ldreqh  r0, [r6, #0x96]
	streqh  r0, [r10, #0x18]
	ldrh    r0, [r10, #0x10]
	tst     r0, #0x10
	ldreqh  r0, [r6, #0x9c]
	moveq   r9, #0x0
	streqh  r0, [r10, #0x1c]
.arm
branch_6012790: @ 6012790 :arm
	ldrh    r0, [r10, #0x1c]
	cmp     r0, #129, 30 @ #0x204
	movhi   r0, #0x5
	bhi     branch_6012b6c
	mov     r1, #0x2
	mov     r8, #0x0
	b       branch_60127c0
@ 0x60127ac

.arm
branch_60127ac: @ 60127ac :arm
	ldrh    r0, [r10, #0x16]
	tst     r0, r1
	mov     r0, r1, lsl #17
	addne   r8, r8, #0x1
	mov     r1, r0, lsr #16
.arm
branch_60127c0: @ 60127c0 :arm
	cmp     r1, #0x0
	bne     branch_60127ac
	ldrh    r0, [r10, #0x14]
	strh    r0, [r6, #0x94]
	ldrh    r0, [r10, #0x14]
	tst     r0, #2, 18 @ #0x8000
	beq     branch_601280c
	ldr     r1, [pc, #0x398] @ [0x6012b7c] (=0x7fff)
	mov     r2, #0xea
	and     r0, r0, r1
	strh    r0, [r10, #0x14]
	ldrh    r0, [r10, #0x14]
	sub     r0, r0, #0xd0
	mov     r0, r0, lsr #2
	strh    r2, [r5, #0xe]
	cmp     r0, #1, 16 @ #0x10000
	bls     branch_601285c
	mov     r0, #0x5
	b       branch_6012b6c
@ 0x601280c

.arm
branch_601280c: @ 601280c :arm
	ldr     r1, [sp, #0x4]
	tst     r1, #0x2
	movne   r11, #0x1
	moveq   r11, #0x0
	add     r3, r11, #0x6
	movne   r1, #0x2
	movne   r2, #0x6
	add     r0, r0, r11
	add     r3, r3, #2, 24 @ #0x200
	moveq   r1, r11
	moveq   r2, r11
	cmp     r0, r3
	movhi   r0, #0x5
	bhi     branch_6012b6c
	mov     r3, r0, lsl #2
	add     r3, r3, #0xd0
	add     r1, r1, r3
	strh    r1, [r10, #0x14]
	add     r1, r2, #0xea
	strh    r1, [r5, #0xe]
.arm
branch_601285c: @ 601285c :arm
	add     r0, r0, #0x9
	bic     r11, r0, #0x1
	mul     r0, r11, r8
	str     r0, [sp]
	ldr     r1, [sp]
	add     r0, r4, #98, 30 @ #0x188
	add     r1, r1, #0x1a
	bl      Function_60090a4
	str     r0, [r6, #0x90]
	cmp     r0, #0x0
	moveq   r0, #0x8
	beq     branch_6012b6c
	mov     r0, #0x1
	strh    r0, [r6, #0x3c]
	ldrh    r0, [r6, #0x3e]
	mov     r2, #0x0
	add     r0, r0, #0x1
	strh    r0, [r6, #0x3e]
	ldrh    r0, [r10, #0x18]
	add     r3, r7, #0x8
	strh    r0, [r6, #0x96]
	ldrh    r0, [r10, #0x16]
	mov     r12, #0x14
	strh    r0, [r6, #0x98]
	strh    r2, [r6, #0x9a]
	ldrh    r0, [r10, #0x1c]
	mov     lr, #138, 30 @ #0x228
	strh    r0, [r6, #0x9c]
	ldrh    r1, [r10, #0x12]
	add     r0, r5, #0x10
	strh    r1, [r6, #0x9e]
	strh    r2, [r5]
	ldrh    r7, [r10, #0x16]
	ldr     r1, [pc, #0x298] @ [0x6012b80] (=0x60184e4)
	strh    r7, [r5, #0x2]
	strh    r2, [r5, #0x4]
	strh    r12, [r5, #0x8]
	ldrh    r7, [r10, #0x1c]
	add     r2, r4, #234, 30 @ #0x3a8
	add     r7, r7, #0x22
	strh    r7, [r5, #0xa]
	strh    lr, [r5, #0xc]
	ldrh    r12, [r10, #0x14]
	ldrh    r7, [r5, #0xe]
	add     r12, r12, #0xa
	mla     r7, r12, r8, r7
	strh    r7, [r5, #0xe]
	bl      Function_600a974
	ldrh    r0, [r10, #0x10]
	tst     r0, #2, 18 @ #0x8000
	ldrneh  r1, [r5, #0x22]
	ldrne   r0, [pc, #0x254] @ [0x6012b84] (=0xffff)
	cmpne   r1, r0
	ldreq   r0, [pc, #0x24c] @ [0x6012b84] (=0xffff)
	movne   r7, #1, 18 @ #0x4000
	streqh  r0, [r5, #0x22]
	ldrh    r0, [r10, #0x14]
	moveq   r7, #0x0
	strh    r0, [r5, #0x24]
	ldrh    r0, [r10, #0x16]
	cmp     r9, #0x0
	strh    r0, [r5, #0x26]
	ldrh    r0, [r10, #0x1e]
	strh    r0, [r5, #0x28]
	ldrneh  r0, [r10, #0x1c]
	cmpne   r0, #0x0
	beq     branch_601297c
	bl      Function_600a9f8
	ldr     r1, [r10, #0x20]
	ldrh    r2, [r10, #0x1c]
	add     r0, r5, #0x2a
	bl      Function_600b938
.arm
branch_601297c: @ 601297c :arm
	ldr     r0, [sp, #0x4]
	tst     r0, #0x4
	beq     branch_60129b0
	ldrh    r0, [r10, #0x1c]
	add     r1, r5, #0x28
	add     r0, r0, #0x2
	add     r0, r1, r0
	add     r0, r0, #0x3
	ldr     r1, [pc, #0x1e4] @ [0x6012b88] (=0xb6b8)
	bic     r2, r0, #0x3
	ldr     r0, [pc, #0x1e0] @ [0x6012b8c] (=0x1d46)
	strh    r1, [r2]
	strh    r0, [r2, #0x2]
.arm
branch_60129b0: @ 60129b0 :arm
	ldr     r0, [r6, #0x90]
	mov     r1, #97, 30 @ #0x184
	strh    r1, [r0, #0xc]
	ldr     r0, [sp]
	ldr     r1, [r6, #0x90]
	add     r0, r0, #0xb
	mov     r0, r0, lsr #1
	strh    r0, [r1, #0xe]
	ldrh    r1, [r10, #0x16]
	ldr     r0, [r6, #0x90]
	mov     r3, #0x0
	strh    r1, [r0, #0x10]
	ldr     r0, [r6, #0x90]
	ldr     r9, [pc, #0x198] @ [0x6012b84] (=0xffff)
	strh    r8, [r0, #0x14]
	ldr     r0, [r6, #0x90]
	mov     r1, #0x1
	strh    r11, [r0, #0x16]
	ldr     r0, [r6, #0x90]
	mov     r2, #0x2
	strh    r3, [r0, #0x18]
	ldr     r0, [r6, #0x90]
	add     r0, r0, #0x1a
	b       branch_6012a38
@ 0x6012a10

.arm
branch_6012a10: @ 6012a10 :arm
	ldrh    r12, [r10, #0x16]
	tst     r12, r2
	strneh  r9, [r0]
	strneh  r3, [r0, #0x2]
	strneh  r3, [r0, #0x6]
	strneh  r1, [r0, #0x4]
	mov     r2, r2, lsl #17
	addne   r0, r0, r11
	mov     r2, r2, lsr #16
	add     r1, r1, #0x1
.arm
branch_6012a38: @ 6012a38 :arm
	cmp     r2, #0x0
	bne     branch_6012a10
	ldrh    r0, [r10, #0x14]
	ldr     r2, [pc, #0x144] @ [0x6012b90] (=0x48080c4)
	strh    r0, [r2]
	ldrh    r0, [r5, #0xe]
	strh    r0, [r2, #-0x4]
	ldrh    r1, [r10, #0x1a]
	ldrh    r0, [r10, #0x18]
	rsb     r9, r1, #1, 16 @ #0x10000
	cmp     r0, #0x0
	bne     branch_6012ad0
	ldrh    r0, [r2, #-0xc4]
	ldrh    r1, [r10, #0x1c]
	cmp     r0, #81, 26 @ #0x1440
	ldrh    r0, [r10, #0x14]
	add     r1, r1, #0x22
	mul     r2, r0, r8
	mov     r1, r1, lsl #2
	add     r3, r1, #0x60
	addne   r3, r3, #250, 30 @ #0x3e8
	add     r0, r2, #226, 30 @ #0x388
	add     r0, r3, r0
	mov     r1, #0xa
	add     r0, r0, #0x32
	bl      Function_6003ea8
	mov     r4, r0
	bl      Function_6000720
	ldr     r1, [pc, #0xe4] @ [0x6012b94] (=0x3fff)
	ldr     r2, [pc, #0xe4] @ [0x6012b98] (=0x4808118)
	and     r1, r5, r1
	mov     r1, r1, lsr #1
	orr     r1, r1, #2, 18 @ #0x8000
	strh    r4, [r2]
	orr     r1, r1, r7
	strh    r1, [r2, #-0x88]
	bl      Function_6000740
	b       branch_6012b68
@ 0x6012ad0

.arm
branch_6012ad0: @ 6012ad0 :arm
	bl      Function_6000720
	ldr     r1, [pc, #0xc0] @ [0x6012b9c] (=0x48080f8)
	mov     r8, r0
	ldrh    r0, [r1]
	mov     r1, #0xa
	add     r0, r9, r0
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_6003ea8
	ldrh    r3, [r10, #0x18]
	add     r1, r0, #0x3
	cmp     r1, r3
	bcs     branch_6012b38
	ldr     r1, [pc, #0x88] @ [0x6012b94] (=0x3fff)
	ldr     r2, [pc, #0x88] @ [0x6012b98] (=0x4808118)
	sub     r3, r3, r0
	and     r0, r5, r1
	sub     r1, r3, #0x1
	mov     r0, r0, lsr #1
	orr     r0, r0, #2, 18 @ #0x8000
	strh    r1, [r2]
	orr     r1, r0, r7
	mov     r0, r8
	strh    r1, [r2, #-0x88]
	bl      Function_6000740
	b       branch_6012b68
@ 0x6012b38

.arm
branch_6012b38: @ 6012b38 :arm
	mov     r0, r8
	bl      Function_6000740
	ldr     r1, [r6, #0x90]
	add     r0, r4, #98, 30 @ #0x188
	bl      Function_6009140
	mov     r0, #0x0
	strh    r0, [r6, #0x3c]
	ldrh    r1, [r6, #0x3e]
	mov     r0, #0x5
	sub     r1, r1, #0x1
	strh    r1, [r6, #0x3e]
	b       branch_6012b6c
@ 0x6012b68

.arm
branch_6012b68: @ 6012b68 :arm
	mov     r0, #0x0
.arm
branch_6012b6c: @ 6012b6c :arm
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x6012b78

.word 0x380fff4 @ 0x6012b78
.word 0x7fff @ 0x6012b7c
.word 0x60184e4 @ 0x6012b80
.word 0xffff @ 0x6012b84
.word 0xb6b8 @ 0x6012b88
.word 0x1d46 @ 0x6012b8c
.word 0x48080c4 @ 0x6012b90
.word 0x3fff @ 0x6012b94
.word 0x4808118 @ 0x6012b98
.word 0x48080f8 @ 0x6012b9c
.arm
Function_6012ba0: @ 6012ba0 :arm
	stmfd   sp!, {r4,lr}
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	mov     r4, r0
	rsb     r0, r2, #1, 16 @ #0x10000
	strh    r0, [r4, #0xc]
	mov     r0, #0x0
	strh    r0, [r4, #0x12]
	ldrh    r1, [r4, #0x16]
	add     r0, r4, #0x10
	strh    r1, [r4, #0x22]
	bl      Function_600e3ec
	ldr     r0, [pc, #0x24] @ [0x6012bfc] (=0x380fff4)
	mov     r2, r4
	ldr     r1, [r0]
	add     r0, r1, #2, 24 @ #0x200
	add     r1, r1, #101, 30 @ #0x194
	bl      Function_60091c0
	mov     r0, #0x0
	bl      Function_6012c84
	mov     r0, #0x0
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6012bfc

.word 0x380fff4 @ 0x6012bfc
.arm
Function_6012c00: @ 6012c00 :arm
	stmfd   sp!, {r4,lr}
	mov     r2, #0x1
	strh    r2, [r1, #0x2]
	mov     r4, r0
	ldrh    r0, [r4, #0x10]
	tst     r0, #0x1
	beq     branch_6012c20
	bl      Function_6013890
.arm
branch_6012c20: @ 6012c20 :arm
	ldrh    r0, [r4, #0x10]
	tst     r0, #0x2
	beq     branch_6012c30
	bl      Function_6013904
.arm
branch_6012c30: @ 6012c30 :arm
	ldrh    r0, [r4, #0x10]
	tst     r0, #0x4
	beq     branch_6012c40
	bl      Function_6013958
.arm
branch_6012c40: @ 6012c40 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6012c4c

.arm
Function_6012c4c: @ 6012c4c :arm
	stmfd   sp!, {r3,lr}
	ldrh    r2, [r1, #0xe]
	mov     r3, #0x2
	add     lr, r1, r2, lsl #1
	ldrh    r12, [lr, #0x10]
	mov     r2, #0x0
	strh    r12, [r1, #0xc]
	strh    r3, [lr, #0x12]
	strh    r2, [lr, #0x14]
	ldrh    r2, [r1, #0x18]
	strh    r2, [lr, #0x16]
	bl      Function_600f384
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6012c84

.arm
Function_6012c84: @ 6012c84 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0xc
	ldr     r1, [pc, #0x204] @ [0x6012e98] (=0x380fff4)
	mov     r10, r0
	ldr     r2, [r1]
	mov     r0, #0xc
	add     r1, r2, #101, 30 @ #0x194
	mla     r11, r10, r0, r1
	add     r0, r2, #0x2c
	ldrh    r1, [r11, #0x8]
	add     r5, r0, #1, 22 @ #0x400
	mov     r0, #0x14
	mla     r6, r10, r0, r5
	cmp     r1, #0x0
	add     r4, r2, #209, 30 @ #0x344
	beq     branch_6012e8c
	mov     r0, #1, 8 @ #0x1000000
	bl      Function_6008ef0
	ldrh    r1, [r6]
	str     r0, [sp]
	cmp     r1, #0x0
	beq     branch_6012ce4
	bl      Function_6008ef8
	b       branch_6012e8c
@ 0x6012ce4

.arm
branch_6012ce4: @ 6012ce4 :arm
	ldr     r7, [r11]
	mvn     r0, #0x0
	str     r0, [sp, #0x8]
.arm
branch_6012cf0: @ 6012cf0 :arm
	ldr     r0, [sp, #0x8]
	cmp     r7, r0
	bne     branch_6012d08
	ldr     r0, [sp]
	bl      Function_6008ef8
	b       branch_6012e8c
@ 0x6012d08

.arm
branch_6012d08: @ 6012d08 :arm
	mov     r0, r7
	str     r7, [sp, #0x4]
	bl      Function_60093e8
	mov     r1, r7
	add     r8, r1, #0x10
	mov     r7, r0
	ldrh    r9, [r8, #0x2]
	mov     r0, r8
	bl      Function_601300c
	cmp     r0, #0x0
	beq     branch_6012d6c
	ldrh    r1, [r5, #0xae]
	mov     r0, r8
	add     r1, r1, #0x1
	strh    r1, [r5, #0xae]
	mov     r1, #0x2
	strh    r1, [r8, #0x8]
	ldrh    r2, [r6, #0x4]
	mov     r1, #0x0
	add     r2, r2, #0x1
	strh    r2, [r6, #0x4]
	ldr     r2, [r6, #0x10]
	mov     lr, pc
	bx      r2
@ 0x6012d68

.arm
Function_6012d68: @ 6012d68 :arm
	b       branch_6012cf0
@ 0x6012d6c

.arm
branch_6012d6c: @ 6012d6c :arm
	cmp     r10, #0x0
	beq     branch_6012d8c
	cmp     r10, #0x1
	bne     branch_6012dcc
	mov     r0, r9
	bl      Function_600e888
	cmp     r0, #0x40
	bne     branch_6012dcc
.arm
branch_6012d8c: @ 6012d8c :arm
	mov     r0, r9
	bl      Function_600e8a8
	cmp     r0, #0x0
	beq     branch_6012cf0
	mov     r0, r9
	bl      Function_600e888
	cmp     r0, #0x40
	beq     branch_6012dcc
	mov     r2, #0x2
	mov     r0, r11
	sub     r1, r8, #0x10
	strh    r2, [r8, #0x8]
	bl      Function_6012c4c
	mov     r0, r8
	bl      Function_600e47c
	b       branch_6012cf0
@ 0x6012dcc

.arm
branch_6012dcc: @ 6012dcc :arm
	mov     r0, #0x1
	strh    r0, [r6]
	ldrh    r0, [r6, #0x2]
	add     r0, r0, #0x1
	strh    r0, [r6, #0x2]
	str     r8, [r6, #0xc]
	ldrh    r0, [r4, #0x10]
	ldr     r5, [r6, #0x8]
	cmp     r0, #0x0
	bne     branch_6012dfc
	mov     r0, #0x2
	bl      Function_600a454
.arm
branch_6012dfc: @ 6012dfc :arm
	ldr     r1, [sp, #0x4]
	mov     r0, r5
	bl      Function_6012ea4
	ldrh    r0, [r4, #0xc]
	cmp     r0, #0x1
	bne     branch_6012e2c
	mov     r0, r9
	bl      Function_600e994
	cmp     r0, #0x1
	ldrhih  r0, [r5, #0xc]
	orrhi   r0, r0, #2, 20 @ #0x2000
	strhih  r0, [r5, #0xc]
.arm
branch_6012e2c: @ 6012e2c :arm
	ldr     r1, [pc, #0x68] @ [0x6012e9c] (=0x3fff)
	ldr     r0, [pc, #0x68] @ [0x6012ea0] (=0x48080a0)
	ldrh    r4, [r8, #0x14]
	and     r2, r5, r1
	and     r1, r4, #0xc
	cmp     r1, #0x4
	mov     r1, r2, lsr #1
	add     r3, r0, r10, lsl #2
	moveq   r0, r1, lsl #16
	moveq   r0, r0, lsr #16
	orreq   r0, r0, #10, 20 @ #0xa000
	streqh  r0, [r3]
	beq     branch_6012e84
	and     r0, r4, #0xfc
	cmp     r0, #0x50
	mov     r0, r1, lsl #16
	moveq   r0, r0, lsr #16
	orreq   r0, r0, #9, 20 @ #0x9000
	streqh  r0, [r3]
	movne   r0, r0, lsr #16
	orrne   r0, r0, #2, 18 @ #0x8000
	strneh  r0, [r3]
.arm
branch_6012e84: @ 6012e84 :arm
	ldr     r0, [sp]
	bl      Function_6008ef8
.arm
branch_6012e8c: @ 6012e8c :arm
	add     sp, sp, #0xc
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x6012e98

.word 0x380fff4 @ 0x6012e98
.word 0x3fff @ 0x6012e9c
.word 0x48080a0 @ 0x6012ea0
.arm
Function_6012ea4: @ 6012ea4 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r1
	ldrh    r1, [r4, #0x24]
	mov     r5, r0
	tst     r1, #1, 18 @ #0x4000
	beq     branch_6012f80
	ldr     r0, [pc, #0x134] @ [0x6012ff8] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x50]
	cmp     r0, #0x3
	bne     branch_6012ed8
	bl      Function_600a9f8
.arm
branch_6012ed8: @ 6012ed8 :arm
	ldrh    r1, [r4, #0xc]
	ldr     r0, [pc, #0x118] @ [0x6012ffc] (=0xffff)
	cmp     r1, r0
	bne     branch_6012f00
	ldrh    r3, [r4, #0x16]
	mov     r0, r5
	add     r1, r4, #0x18
	add     r2, r4, #0x3c
	bl      Function_600b99c
	b       branch_6012f14
@ 0x6012f00

.arm
branch_6012f00: @ 6012f00 :arm
	ldr     r2, [r4, #0x3c]
	ldrh    r3, [r4, #0x16]
	mov     r0, r5
	add     r1, r4, #0x18
	bl      Function_600b99c
.arm
branch_6012f14: @ 6012f14 :arm
	ldr     r3, [pc, #0xe4] @ [0x6013000] (=0x4808044)
	ldr     r1, [pc, #0xd8] @ [0x6012ff8] (=0x380fff4)
	ldrh    r2, [r3]
	ldrh    r0, [r3]
	add     r0, r2, r0, lsl #8
	strh    r0, [r5, #0x24]
	ldr     r0, [r1]
	ldrh    r2, [r3]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x36]
	and     r2, r2, #0xff
	orr     r0, r2, r0, lsl #14
	strh    r0, [r5, #0x26]
	ldr     r0, [r1]
	add     r0, r0, #6, 24 @ #0x600
	ldrh    r0, [r0, #0x90]
	tst     r0, #0x8
	beq     branch_6012fb4
	ldrh    r0, [r4, #0x22]
	add     r1, r5, #0xc
	add     r0, r1, r0
	sub     r0, r0, #0x7
	bic     r1, r0, #0x1
	mov     r0, #0x0
	strh    r0, [r1]
	strh    r0, [r1, #0x2]
	b       branch_6012fb4
@ 0x6012f80

.arm
branch_6012f80: @ 6012f80 :arm
	ldrh    r2, [r4, #0xc]
	ldr     r1, [pc, #0x70] @ [0x6012ffc] (=0xffff)
	cmp     r2, r1
	bne     branch_6012fa4
	ldrh    r2, [r4, #0x16]
	add     r1, r4, #0x18
	add     r2, r2, #0x24
	bl      Function_600b938
	b       branch_6012fb4
@ 0x6012fa4

.arm
branch_6012fa4: @ 6012fa4 :arm
	ldr     r2, [r4, #0x3c]
	ldrh    r3, [r4, #0x16]
	add     r1, r4, #0x18
	bl      Function_600b958
.arm
branch_6012fb4: @ 6012fb4 :arm
	ldr     r0, [pc, #0x3c] @ [0x6012ff8] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #6, 24 @ #0x600
	ldrh    r0, [r0, #0x90]
	tst     r0, #0x4
	beq     branch_6012ff0
	ldrh    r0, [r4, #0x22]
	add     r1, r5, #0xc
	add     r0, r1, r0
	sub     r0, r0, #0x1
	ldr     r1, [pc, #0x20] @ [0x6013004] (=0xb6b8)
	bic     r2, r0, #0x3
	ldr     r0, [pc, #0x1c] @ [0x6013008] (=0x1d46)
	strh    r1, [r2]
	strh    r0, [r2, #0x2]
.arm
branch_6012ff0: @ 6012ff0 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6012ff8

.word 0x380fff4 @ 0x6012ff8
.word 0xffff @ 0x6012ffc
.word 0x4808044 @ 0x6013000
.word 0xb6b8 @ 0x6013004
.word 0x1d46 @ 0x6013008
.arm
Function_601300c: @ 601300c :arm
	ldr     r1, [pc, #0x74] @ [0x6013088] (=0x380fff4)
	ldrh    r2, [r0, #0x14]
	ldr     r3, [r1]
	mov     r1, r2, lsl #28
	add     r12, r3, #209, 30 @ #0x344
	ldrh    r3, [r12, #0x8c]
	movs    r1, r1, lsr #30
	mov     r1, r3, lsl #19
	mov     r3, r1, lsr #16
	bne     branch_6013060
	ldrh    r1, [r12, #0xc]
	cmp     r1, #0x1
	bne     branch_6013068
	mov     r1, r2, lsl #24
	mov     r1, r1, lsr #28
	cmp     r1, #0x1
	cmpne   r1, #0x3
	cmpne   r1, #0xb
	moveq   r1, r3, lsl #13
	moveq   r3, r1, lsr #16
	b       branch_6013068
@ 0x6013060

.arm
branch_6013060: @ 6013060 :arm
	mov     r1, r3, lsl #13
	mov     r3, r1, lsr #16
.arm
branch_6013068: @ 6013068 :arm
	ldr     r1, [r12, #0xa8]
	ldrh    r0, [r0, #0x4]
	sub     r0, r1, r0
	mov     r0, r0, lsl #16
	cmp     r3, r0, lsr #16
	movcc   r0, #0x1
	movcs   r0, #0x0
	bx      lr
@ 0x6013088

.word 0x380fff4 @ 0x6013088
.arm
Function_601308c: @ 601308c :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r2, [pc, #0x16c] @ [0x6013204] (=0x380fff4)
	mov     r9, r0
	ldr     r4, [r2]
	mov     r8, r1
	add     r5, r4, #101, 30 @ #0x194
	add     r6, r4, #209, 30 @ #0x344
	sub     r7, r9, #0x10
	bl      Function_600e47c
	ldrh    r0, [r9, #0x8]
	tst     r0, #0x2
	bne     branch_6013120
	ldr     r0, [r4, #0x53c]
	add     r0, r0, #0x1
	str     r0, [r4, #0x53c]
	ldrh    r0, [r9, #0x14]
	mov     r0, r0, lsl #23
	movs    r0, r0, lsr #31
	beq     branch_60130fc
	ldrh    r0, [r9, #0x24]
	tst     r0, #0x1
	ldrne   r0, [r4, #0x550]
	addne   r0, r0, #0x1
	strne   r0, [r4, #0x550]
	ldreq   r0, [r4, #0x54c]
	addeq   r0, r0, #0x1
	streq   r0, [r4, #0x54c]
	b       branch_601312c
@ 0x60130fc

.arm
branch_60130fc: @ 60130fc :arm
	ldrh    r0, [r9, #0x18]
	tst     r0, #0x1
	ldrne   r0, [r4, #0x550]
	addne   r0, r0, #0x1
	strne   r0, [r4, #0x550]
	ldreq   r0, [r4, #0x54c]
	addeq   r0, r0, #0x1
	streq   r0, [r4, #0x54c]
	b       branch_601312c
@ 0x6013120

.arm
branch_6013120: @ 6013120 :arm
	ldr     r0, [r4, #0x540]
	add     r0, r0, #0x1
	str     r0, [r4, #0x540]
.arm
branch_601312c: @ 601312c :arm
	ldrh    r0, [r9, #0x14]
	mov     r1, r7
	mov     r0, r0, lsl #17
	movs    r0, r0, lsr #31
	ldrne   r0, [r4, #0x554]
	addne   r0, r0, #0x1
	strne   r0, [r4, #0x554]
	mov     r0, r5
	bl      Function_6012c4c
	ldr     r0, [pc, #0xac] @ [0x6013204] (=0x380fff4)
	mov     r1, #0x0
	ldr     r0, [r0]
	add     r0, r0, #1, 22 @ #0x400
	strh    r1, [r0, #0x2c]
	ldrh    r0, [r9, #0x2]
	bl      Function_600e8c8
	cmp     r0, #0x0
	beq     branch_6013188
	ldrh    r0, [r9, #0x14]
	tst     r0, #2, 20 @ #0x2000
	bne     branch_6013188
	ldrh    r0, [r9, #0x2]
	bl      Function_600e650
.arm
branch_6013188: @ 6013188 :arm
	cmp     r8, #0x0
	beq     branch_60131fc
	ldrh    r0, [r5, #0x8]
	cmp     r0, #0x0
	beq     branch_60131a8
	mov     r0, #0x0
	bl      Function_6012c84
	b       branch_60131fc
@ 0x60131a8

.arm
branch_60131a8: @ 60131a8 :arm
	ldrh    r0, [r6, #0xc]
	add     r0, r0, #0xfe
	add     r0, r0, #255, 24 @ #0xff00
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	cmp     r0, #0x1
	bhi     branch_60131fc
	ldrh    r0, [r6, #0x8]
	cmp     r0, #0x40
	bne     branch_60131fc
	ldrh    r0, [r6, #0xe]
	cmp     r0, #0x0
	beq     branch_60131fc
	ldrh    r0, [r6, #0x88]
	bl      Function_600e994
	cmp     r0, #0x0
	ldreqh  r0, [r6, #0x8e]
	cmpeq   r0, #0x0
	bne     branch_60131fc
	mov     r0, #0x1
	bl      Function_600a454
.arm
branch_60131fc: @ 60131fc :arm
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x6013204

.word 0x380fff4 @ 0x6013204
.arm
Function_6013208: @ 6013208 :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r2, [pc, #0x4bc] @ [0x60136d0] (=0x380fff4)
	mov     r10, r0
	ldr     r4, [r2]
	ldrh    r2, [r10, #0x8]
	add     r0, r4, #0x4
	ldrh    r7, [r10, #0x2]
	mov     r9, r1
	tst     r2, #0x2
	add     r8, r4, #209, 30 @ #0x344
	add     r5, r0, #1, 22 @ #0x400
	add     r6, r4, #26, 28 @ #0x1a0
	bne     branch_6013290
	ldr     r0, [r4, #0x53c]
	add     r0, r0, #0x1
	str     r0, [r4, #0x53c]
	ldrh    r0, [r10, #0x18]
	tst     r0, #0x1
	ldrne   r0, [r4, #0x550]
	addne   r0, r0, #0x1
	strne   r0, [r4, #0x550]
	ldreq   r0, [r4, #0x54c]
	addeq   r0, r0, #0x1
	streq   r0, [r4, #0x54c]
	mov     r0, r7
	bl      Function_600e8c8
	cmp     r0, #0x0
	beq     branch_601329c
	ldrh    r0, [r10, #0x14]
	tst     r0, #2, 20 @ #0x2000
	bne     branch_601329c
	mov     r0, r7
	bl      Function_600e650
	b       branch_601329c
@ 0x6013290

.arm
branch_6013290: @ 6013290 :arm
	ldr     r0, [r4, #0x540]
	add     r0, r0, #0x1
	str     r0, [r4, #0x540]
.arm
branch_601329c: @ 601329c :arm
	ldrh    r0, [r10, #0x14]
	mov     r0, r0, lsl #17
	movs    r0, r0, lsr #31
	ldrne   r0, [r4, #0x554]
	addne   r0, r0, #0x1
	strne   r0, [r4, #0x554]
	ldrh    r0, [r10, #0xc]
	ldr     r1, [r4, #0x544]
	and     r0, r0, #0xff
	add     r0, r1, r0
	str     r0, [r4, #0x544]
	ldrh    r0, [r10, #0x14]
	and     r4, r0, #0xfc
	cmp     r4, #0xa0
	bhi     branch_60132f8
	bcs     branch_6013460
	cmp     r4, #0x10
	bhi     branch_60132ec
	beq     branch_601339c
	b       branch_6013688
@ 0x60132ec

.arm
branch_60132ec: @ 60132ec :arm
	cmp     r4, #0x30
	beq     branch_601339c
	b       branch_6013688
@ 0x60132f8

.arm
branch_60132f8: @ 60132f8 :arm
	cmp     r4, #0xb0
	bhi     branch_6013308
	beq     branch_6013314
	b       branch_6013688
@ 0x6013308

.arm
branch_6013308: @ 6013308 :arm
	cmp     r4, #0xc0
	beq     branch_6013544
	b       branch_6013688
@ 0x6013314

.arm
branch_6013314: @ 6013314 :arm
	cmp     r7, #0x0
	beq     branch_6013688
	ldrh    r0, [r10, #0x8]
	tst     r0, #0x2
	bne     branch_6013688
	ldrh    r1, [r10, #0x2c]
	cmp     r1, #0x0
	ldreqh  r0, [r10, #0x2e]
	cmpeq   r0, #0x2
	ldreqh  r0, [r10, #0x30]
	cmpeq   r0, #0x0
	bne     branch_6013364
	mov     r0, r7, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x30
	bl      Function_600e4ec
	ldrh    r1, [r10, #0x2c]
	add     r0, r10, #0x18
	bl      Function_60108f0
	b       branch_6013688
@ 0x6013364

.arm
branch_6013364: @ 6013364 :arm
	cmp     r1, #0x1
	ldreqh  r0, [r10, #0x2e]
	cmpeq   r0, #0x4
	ldreqh  r0, [r10, #0x30]
	cmpeq   r0, #0x0
	bne     branch_6013688
	mov     r0, r7, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x30
	bl      Function_600e4ec
	ldrh    r1, [r10, #0x2c]
	add     r0, r10, #0x18
	bl      Function_60108f0
	b       branch_6013688
@ 0x601339c

.arm
branch_601339c: @ 601339c :arm
	cmp     r7, #0x0
	beq     branch_6013688
	ldrh    r0, [r10, #0x8]
	tst     r0, #0x2
	bne     branch_6013414
	ldrh    r0, [r10, #0x2e]
	cmp     r0, #0x0
	bne     branch_6013688
	mov     r0, r7
	bl      Function_600e888
	cmp     r0, #0x30
	bne     branch_6013688
	mov     r0, r7, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x40
	bl      Function_600e4ec
	ldrh    r2, [r10, #0x12]
	cmp     r4, #0x10
	add     r3, r10, #0x14
	bne     branch_6013400
	ldrh    r1, [r10, #0x30]
	add     r0, r10, #0x18
	add     r2, r3, r2
	bl      Function_60109e8
	b       branch_6013688
@ 0x6013400

.arm
branch_6013400: @ 6013400 :arm
	ldrh    r1, [r10, #0x30]
	add     r0, r10, #0x18
	add     r2, r3, r2
	bl      Function_6010ae0
	b       branch_6013688
@ 0x6013414

.arm
branch_6013414: @ 6013414 :arm
	mov     r0, r7, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_600e808
	add     r0, r10, #0x18
	mov     r1, #0x1
	mov     r2, #0x0
	bl      Function_6014c4c
	cmp     r0, #0x0
	beq     branch_6013688
	mov     r1, #0x2
	strh    r1, [r0]
	cmp     r9, #0x0
	beq     branch_6013458
	bl      Function_6013e24
	mov     r0, #0x1
	bl      Function_6012c84
	b       branch_6013688
@ 0x6013458

.arm
branch_6013458: @ 6013458 :arm
	bl      Function_6013e24
	b       branch_6013688
@ 0x6013460

.arm
branch_6013460: @ 6013460 :arm
	ldrh    r0, [r8, #0xc]
	cmp     r0, #0x1
	bne     branch_60134f0
	cmp     r7, #0x0
	beq     branch_6013498
	mov     r0, r7
	bl      Function_600e888
	cmp     r0, #0x30
	bls     branch_6013508
	mov     r0, r7, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x30
	bl      Function_600e4ec
	b       branch_6013508
@ 0x6013498

.arm
branch_6013498: @ 6013498 :arm
	ldrh    r0, [r10, #0x18]
	tst     r0, #0x1
	beq     branch_6013508
	ldr     r4, [pc, #0x224] @ [0x60136d0] (=0x380fff4)
	mov     r8, #0x1
	mov     r7, #0x30
	b       branch_60134d8
@ 0x60134b4

.arm
branch_60134b4: @ 60134b4 :arm
	mov     r0, r8
	bl      Function_600e888
	cmp     r0, #0x30
	bls     branch_60134d4
	mov     r0, r8, lsl #16
	mov     r1, r7
	mov     r0, r0, lsr #16
	bl      Function_600e4ec
.arm
branch_60134d4: @ 60134d4 :arm
	add     r8, r8, #0x1
.arm
branch_60134d8: @ 60134d8 :arm
	ldr     r0, [r4]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x22]
	cmp     r8, r0
	bcc     branch_60134b4
	b       branch_6013508
@ 0x60134f0

.arm
branch_60134f0: @ 60134f0 :arm
	ldrh    r0, [r8, #0x8]
	cmp     r0, #0x30
	bls     branch_6013508
	mov     r0, #0x30
	bl      Function_600a880
	bl      Function_600a7dc
.arm
branch_6013508: @ 6013508 :arm
	ldrh    r0, [r5]
	cmp     r0, #0x71
	ldreq   r0, [r5, #0x4]
	cmpeq   r10, r0
	bne     branch_6013688
	ldrh    r0, [r10, #0x8]
	tst     r0, #0x2
	ldr     r0, [r5, #0x1c]
	moveq   r1, #0x0
	movne   r1, #0xc
	strh    r1, [r0, #0x4]
	mov     r0, #0x0
	strh    r0, [r5]
	bl      Function_601089c
	b       branch_6013688
@ 0x6013544

.arm
branch_6013544: @ 6013544 :arm
	ldrh    r0, [r8, #0xc]
	cmp     r0, #0x1
	bne     branch_60135d4
	cmp     r7, #0x0
	beq     branch_601357c
	mov     r0, r7
	bl      Function_600e888
	cmp     r0, #0x20
	bls     branch_60135ec
	mov     r0, r7, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x20
	bl      Function_600e4ec
	b       branch_60135ec
@ 0x601357c

.arm
branch_601357c: @ 601357c :arm
	ldrh    r0, [r10, #0x18]
	tst     r0, #0x1
	beq     branch_60135ec
	ldr     r4, [pc, #0x140] @ [0x60136d0] (=0x380fff4)
	mov     r8, #0x1
	mov     r11, #0x20
	b       branch_60135bc
@ 0x6013598

.arm
branch_6013598: @ 6013598 :arm
	mov     r0, r8
	bl      Function_600e888
	cmp     r0, #0x20
	bls     branch_60135b8
	mov     r0, r8, lsl #16
	mov     r1, r11
	mov     r0, r0, lsr #16
	bl      Function_600e4ec
.arm
branch_60135b8: @ 60135b8 :arm
	add     r8, r8, #0x1
.arm
branch_60135bc: @ 60135bc :arm
	ldr     r0, [r4]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x22]
	cmp     r8, r0
	bcc     branch_6013598
	b       branch_60135ec
@ 0x60135d4

.arm
branch_60135d4: @ 60135d4 :arm
	ldrh    r0, [r8, #0x8]
	cmp     r0, #0x20
	bls     branch_60135ec
	mov     r0, #0x20
	bl      Function_600a880
	bl      Function_600a7dc
.arm
branch_60135ec: @ 60135ec :arm
	ldrh    r0, [r5]
	cmp     r0, #0x41
	ldreq   r0, [r5, #0x4]
	cmpeq   r10, r0
	bne     branch_6013624
	ldrh    r0, [r10, #0x8]
	tst     r0, #0x2
	ldr     r0, [r5, #0x1c]
	moveq   r1, #0x0
	movne   r1, #0xc
	strh    r1, [r0, #0x4]
	mov     r0, #0x0
	strh    r0, [r5]
	bl      Function_601089c
.arm
branch_6013624: @ 6013624 :arm
	ldrh    r0, [r10]
	cmp     r0, #0x1
	bne     branch_6013674
	cmp     r7, #0x0
	beq     branch_6013664
	ldr     r0, [pc, #0x90] @ [0x60136d0] (=0x380fff4)
	mov     r2, #0x1
	ldr     r1, [r0]
	mov     r0, r7, lsl #16
	add     r1, r1, #5, 24 @ #0x500
	ldrh    r3, [r1, #0x34]
	mvn     r2, r2, lsl r7
	and     r2, r3, r2
	mov     r0, r0, lsr #16
	strh    r2, [r1, #0x34]
	bl      Function_600ecd4
.arm
branch_6013664: @ 6013664 :arm
	add     r0, r10, #0x18
	mov     r1, #0x1
	bl      Function_601096c
	b       branch_6013688
@ 0x6013674

.arm
branch_6013674: @ 6013674 :arm
	cmp     r0, #0x2
	bne     branch_6013688
	ldrh    r1, [r10, #0x2c]
	add     r0, r10, #0x18
	bl      Function_601096c
.arm
branch_6013688: @ 6013688 :arm
	mov     r0, r10
	bl      Function_600e47c
	mov     r0, r6
	sub     r1, r10, #0x10
	bl      Function_6009140
	ldr     r0, [pc, #0x2c] @ [0x60136d0] (=0x380fff4)
	mov     r1, #0x0
	ldr     r0, [r0]
	cmp     r9, #0x0
	add     r0, r0, #1, 22 @ #0x400
	strh    r1, [r0, #0x40]
	ldrneh  r0, [r6, #0x8]
	cmpne   r0, #0x0
	beq     branch_60136c8
	mov     r0, #0x1
	bl      Function_6012c84
.arm
branch_60136c8: @ 60136c8 :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x60136d0

.word 0x380fff4 @ 0x60136d0
.arm
Function_60136d4: @ 60136d4 :arm
	ldr     r2, [pc, #0x5c] @ [0x6013738] (=0x380fff4)
	ldrh    r1, [r0, #0x4]
	ldr     r3, [r2]
	and     r1, r1, #0xff
	ldr     r2, [r3, #0x544]
	add     r1, r2, r1
	str     r1, [r3, #0x544]
	ldrh    r0, [r0]
	tst     r0, #0x2
	ldrne   r0, [r3, #0x540]
	addne   r0, r0, #0x1
	strne   r0, [r3, #0x540]
	bne     branch_6013720
	ldr     r0, [r3, #0x53c]
	add     r0, r0, #0x1
	str     r0, [r3, #0x53c]
	ldr     r0, [r3, #0x54c]
	add     r0, r0, #0x1
	str     r0, [r3, #0x54c]
.arm
branch_6013720: @ 6013720 :arm
	ldr     r0, [pc, #0x10] @ [0x6013738] (=0x380fff4)
	mov     r1, #0x0
	ldr     r0, [r0]
	add     r0, r0, #1, 22 @ #0x400
	strh    r1, [r0, #0x54]
	bx      lr
@ 0x6013738

.word 0x380fff4 @ 0x6013738
.arm
Function_601373c: @ 601373c :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [pc, #0xf8] @ [0x6013840] (=0x380fff4)
	mov     r6, r0
	ldr     r2, [r2]
	mov     r5, r1
	ldr     r1, [r2, #0x550]
	add     r4, r2, #95, 30 @ #0x17c
	add     r1, r1, #0x1
	str     r1, [r2, #0x550]
	ldrh    r1, [r6, #0x14]
	mov     r1, r1, lsl #28
	movs    r1, r1, lsr #30
	bne     branch_6013794
	bl      Function_600e3ec
	add     r0, r4, #0x30
	add     r1, r4, #0x24
	sub     r2, r6, #0x10
	bl      Function_60091c0
	mov     r0, r6
	mov     r1, #0x0
	bl      Function_6013208
	b       branch_60137a0
@ 0x6013794

.arm
branch_6013794: @ 6013794 :arm
	add     r0, r4, #0x30
	sub     r1, r6, #0x10
	bl      Function_6012c4c
.arm
branch_60137a0: @ 60137a0 :arm
	ldr     r1, [pc, #0x98] @ [0x6013840] (=0x380fff4)
	mov     r2, #0x0
	ldr     r0, [r1]
	add     r0, r0, #1, 22 @ #0x400
	strh    r2, [r0, #0x54]
	ldr     r0, [r1]
	ldr     r0, [r0, #0x45c]
	ldrh    r0, [r0, #0xc]
	mov     r0, r0, lsl #18
	movs    r0, r0, lsr #31
	bne     branch_6013810
	ldr     r1, [pc, #0x70] @ [0x6013844] (=0x48080ac)
	mov     r0, #0x8
	strh    r0, [r1]
	mov     r0, #0x5
	strh    r0, [r1, #0x2]
	cmp     r5, #0x0
	beq     branch_6013810
	ldrh    r0, [r4, #0x2c]
	cmp     r0, #0x0
	beq     branch_60137fc
	mov     r0, #0x1
	bl      Function_6012c84
.arm
branch_60137fc: @ 60137fc :arm
	ldrh    r0, [r4, #0x20]
	cmp     r0, #0x0
	beq     branch_6013810
	mov     r0, #0x0
	bl      Function_6012c84
.arm
branch_6013810: @ 6013810 :arm
	ldrh    r0, [r4, #0x38]
	cmp     r0, #0x0
	beq     branch_6013830
	cmp     r5, #0x0
	beq     branch_6013838
	mov     r0, #0x2
	bl      Function_6012c84
	b       branch_6013838
@ 0x6013830

.arm
branch_6013830: @ 6013830 :arm
	mov     r0, #0x0
	bl      Function_600ea70
.arm
branch_6013838: @ 6013838 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6013840

.word 0x380fff4 @ 0x6013840
.word 0x48080ac @ 0x6013844
.arm
Function_6013848: @ 6013848 :arm
	ldr     r2, [r0, #0x8]
	ldr     r1, [pc, #0x38] @ [0x601388c] (=0x380fff4)
	ldrh    r3, [r2, #0x4]
	ldr     r2, [r1]
	ands    r3, r3, #0xff
	ldreq   r1, [r2, #0x5a8]
	addeq   r1, r1, #0x1
	streq   r1, [r2, #0x5a8]
	ldrne   r1, [r2, #0x5a4]
	addne   r1, r1, r3
	strne   r1, [r2, #0x5a4]
	ldrh    r2, [r0, #0x4]
	mov     r1, #0x0
	add     r2, r2, #0x1
	strh    r2, [r0, #0x4]
	strh    r1, [r0]
	bx      lr
@ 0x601388c

.word 0x380fff4 @ 0x601388c
.arm
Function_6013890: @ 6013890 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0x60] @ [0x60138fc] (=0x380fff4)
	mov     r0, #1, 8 @ #0x1000000
	ldr     r1, [r1]
	add     r1, r1, #0x2c
	add     r4, r1, #1, 22 @ #0x400
	bl      Function_6008ef0
	ldr     r1, [pc, #0x48] @ [0x60138fc] (=0x380fff4)
	mov     r5, r0
	ldr     r0, [r1]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x3a]
	mov     r0, r0, lsl #24
	movs    r0, r0, lsr #31
	bne     branch_60138d4
	mov     r0, #0x0
	bl      Function_600a85c
.arm
branch_60138d4: @ 60138d4 :arm
	ldr     r0, [pc, #0x24] @ [0x6013900] (=0x48080b4)
	mov     r1, #0xc0
	strh    r1, [r0]
	mov     r1, #0x0
	strh    r1, [r4, #0x50]
	mov     r0, r5
	strh    r1, [r4, #0x64]
	bl      Function_6008ef8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x60138fc

.word 0x380fff4 @ 0x60138fc
.word 0x48080b4 @ 0x6013900
.arm
Function_6013904: @ 6013904 :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [pc, #0x40] @ [0x6013950] (=0x380fff4)
	mov     r0, #1, 8 @ #0x1000000
	ldr     r1, [r1]
	add     r1, r1, #0x2c
	add     r4, r1, #1, 22 @ #0x400
	bl      Function_6008ef0
	ldr     r1, [pc, #0x2c] @ [0x6013954] (=0x48080b4)
	mov     r2, #0x2
	strh    r2, [r1]
	ldrh    r1, [r4, #0x3c]
	mov     r4, r0
	cmp     r1, #0x0
	beq     branch_6013940
	bl      Function_600df9c
.arm
branch_6013940: @ 6013940 :arm
	mov     r0, r4
	bl      Function_6008ef8
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6013950

.word 0x380fff4 @ 0x6013950
.word 0x48080b4 @ 0x6013954
.arm
Function_6013958: @ 6013958 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0x94] @ [0x60139f8] (=0x380fff4)
	mov     r0, #1, 8 @ #0x1000000
	ldr     r1, [r1]
	add     r1, r1, #0x2c
	add     r4, r1, #1, 22 @ #0x400
	bl      Function_6008ef0
	ldr     r1, [pc, #0x7c] @ [0x60139f8] (=0x380fff4)
	mov     r5, r0
	ldr     r0, [r1]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x50]
	cmp     r0, #0x1
	ldr     r0, [pc, #0x68] @ [0x60139fc] (=0x48080b4)
	bne     branch_60139c0
	mov     r1, #0x9
	strh    r1, [r0]
	ldrh    r0, [r4, #0x28]
	cmp     r0, #0x0
	beq     branch_60139b0
	mov     r0, #0x2
	bl      Function_6013a00
.arm
branch_60139b0: @ 60139b0 :arm
	mov     r0, #0x2
	mov     r1, #0x1
	bl      Function_6013d80
	b       branch_60139c8
@ 0x60139c0

.arm
branch_60139c0: @ 60139c0 :arm
	mov     r1, #0x1
	strh    r1, [r0]
.arm
branch_60139c8: @ 60139c8 :arm
	ldrh    r0, [r4]
	cmp     r0, #0x0
	beq     branch_60139dc
	mov     r0, #0x0
	bl      Function_6013a00
.arm
branch_60139dc: @ 60139dc :arm
	mov     r0, #0x0
	mov     r1, #0x1
	bl      Function_6013d80
	mov     r0, r5
	bl      Function_6008ef8
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x60139f8

.word 0x380fff4 @ 0x60139f8
.word 0x48080b4 @ 0x60139fc
.arm
Function_6013a00: @ 6013a00 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x54] @ [0x6013a60] (=0x380fff4)
	mov     r1, #0x14
	ldr     r2, [r2]
	mul     r1, r0, r1
	add     r0, r2, #0x2c
	add     r2, r0, #1, 22 @ #0x400
	ldrh    r0, [r2, r1]
	add     r2, r2, r1
	cmp     r0, #0x0
	beq     branch_6013a58
	ldr     r0, [r2, #0x8]
	ldrh    r1, [r0]
	ldr     r0, [r2, #0xc]
	cmp     r1, #0x0
	moveq   r1, #0x2
	strh    r1, [r0, #0x8]
	ldr     r0, [r2, #0xc]
	ldr     r2, [r2, #0x10]
	mov     r1, #0x0
	mov     lr, pc
	bx      r2
@ 0x6013a58

.arm
branch_6013a58: @ 6013a58 :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6013a60

.word 0x380fff4 @ 0x6013a60
.arm
Function_6013a64: @ 6013a64 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r1, [pc, #0x74] @ [0x6013ae4] (=0x380fff4)
	mov     r7, r0
	mov     r0, #0x14
	ldr     r1, [r1]
	mul     r4, r7, r0
	add     r0, r1, #0x2c
	add     r5, r0, #1, 22 @ #0x400
	mov     r0, #1, 8 @ #0x1000000
	add     r6, r5, r4
	bl      Function_6008ef0
	ldr     r1, [pc, #0x50] @ [0x6013ae8] (=0x6018898)
	mov     r2, r7, lsl #1
	ldrh    r2, [r1, r2]
	ldr     r1, [pc, #0x48] @ [0x6013aec] (=0x48080b4)
	strh    r2, [r1]
	ldrh    r1, [r5, r4]
	cmp     r1, #0x0
	beq     branch_6013ad8
	ldr     r2, [r6, #0xc]
	ldrh    r1, [r2, #0x14]
	tst     r1, #1, 18 @ #0x4000
	ldreq   r1, [r6, #0x8]
	ldreqh  r1, [r1, #0x4]
	streqh  r1, [r2, #0xc]
	ldr     r2, [r6, #0x8]
	ldr     r1, [r6, #0xc]
	ldrh    r2, [r2, #0x22]
	strh    r2, [r1, #0x2a]
.arm
branch_6013ad8: @ 6013ad8 :arm
	bl      Function_6008ef8
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6013ae4

.word 0x380fff4 @ 0x6013ae4
.word 0x6018898 @ 0x6013ae8
.word 0x48080b4 @ 0x6013aec
.arm
Function_6013af0: @ 6013af0 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r11, r0
	mov     r7, #0x0
	bl      Function_600e994
	cmp     r0, #0x0
	beq     branch_6013bdc
	mov     r8, r7
.arm
branch_6013b0c: @ 6013b0c :arm
	ldr     r0, [pc, #0xd0] @ [0x6013be4] (=0x380fff4)
	mov     r1, #0xc
	ldr     r2, [r0]
	mul     r10, r8, r1
	sub     r0, r1, #0xd
	add     r1, r2, r10
	ldr     r5, [r1, #0x194]
	cmp     r5, r0
	beq     branch_6013bd0
	mov     r0, #0x14
	mul     r9, r8, r0
	mvn     r4, #0x0
.arm
branch_6013b3c: @ 6013b3c :arm
	mov     r0, r5
	bl      Function_60093e8
	add     r6, r5, #0x10
	ldrh    r1, [r6, #0x2]
	str     r0, [sp]
	cmp     r1, r11
	bne     branch_6013bc0
	cmp     r8, #0x1
	ldrne   r0, [pc, #0x80] @ [0x6013be4] (=0x380fff4)
	ldrne   r0, [r0]
	addne   r0, r9, r0
	ldrne   r0, [r0, #0x438]
	cmpne   r6, r0
	bne     branch_6013b90
	mov     r0, r6
	bl      Function_600e47c
	mov     r1, #0x0
	mov     r0, r6
	strh    r1, [r6, #0x2]
	bl      Function_600e3ec
	b       branch_6013bc0
@ 0x6013b90

.arm
branch_6013b90: @ 6013b90 :arm
	mov     r0, #0x2
	strh    r0, [r6, #0x8]
	mov     r0, r6
	bl      Function_600e47c
	ldr     r0, [pc, #0x3c] @ [0x6013be4] (=0x380fff4)
	mov     r1, r5
	ldr     r0, [r0]
	add     r0, r0, #101, 30 @ #0x194
	add     r0, r0, r10
	bl      Function_6012c4c
	cmp     r7, #0x0
	moveq   r7, #0x1
.arm
branch_6013bc0: @ 6013bc0 :arm
	ldr     r5, [sp]
	mov     r0, r5
	cmp     r0, r4
	bne     branch_6013b3c
.arm
branch_6013bd0: @ 6013bd0 :arm
	add     r8, r8, #0x1
	cmp     r8, #0x3
	bcc     branch_6013b0c
.arm
branch_6013bdc: @ 6013bdc :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x6013be4

.word 0x380fff4 @ 0x6013be4
.arm
Function_6013be8: @ 6013be8 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r4, [pc, #0xa0] @ [0x6013c94] (=0x380fff4)
	ldrh    r1, [r0]
	ldr     r2, [r4]
	tst     r1, #0x1
	beq     branch_6013c3c
	add     r0, r2, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x22]
	mov     r5, #0x1
	cmp     r0, #0x1
	bls     branch_6013c8c
	b       branch_6013c24
@ 0x6013c18

.arm
branch_6013c18: @ 6013c18 :arm
	mov     r0, r5
	bl      Function_6013af0
	add     r5, r5, #0x1
.arm
branch_6013c24: @ 6013c24 :arm
	ldr     r0, [r4]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x22]
	cmp     r5, r0
	bcc     branch_6013c18
	b       branch_6013c8c
@ 0x6013c3c

.arm
branch_6013c3c: @ 6013c3c :arm
	bl      Function_600e1a8
	mov     r4, r0
	cmp     r4, #0xff
	beq     branch_6013c50
	bl      Function_6013af0
.arm
branch_6013c50: @ 6013c50 :arm
	ldr     r0, [pc, #0x3c] @ [0x6013c94] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x2e]
	cmp     r0, #0x1
	bne     branch_6013c8c
	mov     r0, r4
	bl      Function_600e888
	cmp     r0, #0x40
	bne     branch_6013c8c
	mov     r0, r4, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x20
	bl      Function_600e4ec
	bl      Function_6013890
.arm
branch_6013c8c: @ 6013c8c :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6013c94

.word 0x380fff4 @ 0x6013c94
.arm
Function_6013c98: @ 6013c98 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0xd8] @ [0x6013d7c] (=0x380fff4)
	ldr     r2, [r0]
	add     r0, r2, #3, 24 @ #0x300
	ldrh    r1, [r0, #0x50]
	add     r0, r2, #0x2c
	cmp     r1, #0x1
	add     r4, r0, #1, 22 @ #0x400
	beq     branch_6013ccc
	cmp     r1, #0x2
	cmpne   r1, #0x3
	beq     branch_6013d28
	b       branch_6013d50
@ 0x6013ccc

.arm
branch_6013ccc: @ 6013ccc :arm
	mov     r0, #0x0
	mov     r1, #0x1
	bl      Function_6013d80
	mov     r0, #0x1
	mov     r1, #0x0
	bl      Function_6013d80
	mov     r0, #0x2
	mov     r1, #0x1
	bl      Function_6013d80
	ldrh    r0, [r4, #0x3c]
	cmp     r0, #0x0
	beq     branch_6013d74
	mov     r0, #0x0
	strh    r0, [r4, #0x3c]
	ldrh    r1, [r4, #0x3e]
	ldr     r0, [pc, #0x6c] @ [0x6013d7c] (=0x380fff4)
	sub     r1, r1, #0x1
	strh    r1, [r4, #0x3e]
	ldr     r0, [r0]
	ldr     r1, [r4, #0x90]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_6009140
	b       branch_6013d74
@ 0x6013d28

.arm
branch_6013d28: @ 6013d28 :arm
	mov     r0, #0x0
	mov     r1, #0x1
	bl      Function_6013d80
	mov     r0, #0x1
	mov     r1, #0x0
	bl      Function_6013d80
	mov     r0, #0x2
	mov     r1, #0x0
	bl      Function_6013d80
	b       branch_6013d74
@ 0x6013d50

.arm
branch_6013d50: @ 6013d50 :arm
	mov     r0, #0x0
	mov     r1, r0
	bl      Function_6013d80
	mov     r0, #0x1
	mov     r1, #0x0
	bl      Function_6013d80
	mov     r0, #0x2
	mov     r1, #0x0
	bl      Function_6013d80
.arm
branch_6013d74: @ 6013d74 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6013d7c

.word 0x380fff4 @ 0x6013d7c
.arm
Function_6013d80: @ 6013d80 :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r5, [pc, #0x7c] @ [0x6013e08] (=0x380fff4)
	mov     r2, #0xc
	mov     r10, r0
	mul     r8, r10, r2
	ldr     r3, [r5]
	sub     r0, r2, #0xd
	add     r2, r3, r8
	ldr     r6, [r2, #0x194]
	mov     r9, r1
	cmp     r6, r0
	beq     branch_6013e00
	mov     r11, #0x2
	mvn     r4, #0x0
.arm
branch_6013db8: @ 6013db8 :arm
	mov     r0, r6
	bl      Function_60093e8
	mov     r7, r0
	cmp     r10, #0x2
	beq     branch_6013dd4
	add     r0, r6, #0x10
	bl      Function_600e47c
.arm
branch_6013dd4: @ 6013dd4 :arm
	strh    r11, [r6, #0x18]
	cmp     r9, #0x0
	beq     branch_6013df4
	ldr     r0, [r5]
	mov     r1, r6
	add     r0, r0, #101, 30 @ #0x194
	add     r0, r0, r8
	bl      Function_6012c4c
.arm
branch_6013df4: @ 6013df4 :arm
	mov     r6, r7
	cmp     r7, r4
	bne     branch_6013db8
.arm
branch_6013e00: @ 6013e00 :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x6013e08

.word 0x380fff4 @ 0x6013e08
.arm
Function_6013e0c: @ 6013e0c :arm
	stmfd   sp!, {r3,lr}
	bl      Function_6013e24
	mov     r0, #0x1
	bl      Function_6012c84
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6013e24

.arm
Function_6013e24: @ 6013e24 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	add     r0, r4, #0x18
	bl      Function_600e1a8
	strh    r0, [r4, #0x2]
	ldrh    r0, [r4, #0x2]
	cmp     r0, #0xff
	moveq   r0, #0x0
	streqh  r0, [r4, #0x2]
	ldr     r0, [pc, #0x44] @ [0x6013e94] (=0x380fff4)
	ldr     r0, [r0]
	ldr     r0, [r0, #0x3ec]
	strh    r0, [r4, #0x4]
	ldrh    r0, [r4, #0x14]
	tst     r0, #1, 18 @ #0x4000
	ldrneh  r0, [r4, #0x12]
	addne   r0, r0, #0x8
	strneh  r0, [r4, #0x12]
	mov     r0, r4
	bl      Function_600e3ec
	ldr     r0, [pc, #0x18] @ [0x6013e94] (=0x380fff4)
	sub     r2, r4, #0x10
	ldr     r1, [r0]
	add     r0, r1, #98, 30 @ #0x188
	add     r1, r1, #26, 28 @ #0x1a0
	bl      Function_60091c0
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6013e94

.word 0x380fff4 @ 0x6013e94
.arm
Function_6013e98: @ 6013e98 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x7c] @ [0x6013f20] (=0x380fff4)
	ldr     r2, [r0]
	add     r0, r2, #0x54
	add     r4, r0, #1, 22 @ #0x400
	ldrh    r1, [r4, #0x2]
	add     r0, r2, #1, 22 @ #0x400
	add     r1, r1, #0x1
	strh    r1, [r4, #0x2]
	ldrh    r0, [r0, #0x54]
	mov     r1, #0x0
	cmp     r0, #0x0
	ldrne   r0, [r4, #0x8]
	strneh  r1, [r0, #0x4]
	bne     branch_6013f18
	mov     r0, #0x1
	strh    r0, [r4]
	ldr     r0, [r4, #0x8]
	strh    r1, [r0]
	ldr     r0, [r4, #0x8]
	strh    r1, [r0, #0x4]
	bl      Function_600adc4
	ldr     r2, [r4, #0x8]
	ldr     r1, [pc, #0x28] @ [0x6013f24] (=0x3fff)
	strh    r0, [r2, #0x8]
	ldr     r0, [r4, #0x8]
	ldr     r2, [pc, #0x20] @ [0x6013f28] (=0x48080a8)
	and     r0, r0, r1
	mov     r0, r0, lsl #15
	mov     r0, r0, lsr #16
	orr     r0, r0, #2, 18 @ #0x8000
	strh    r0, [r2]
.arm
branch_6013f18: @ 6013f18 :arm
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x6013f20

.word 0x380fff4 @ 0x6013f20
.word 0x3fff @ 0x6013f24
.word 0x48080a8 @ 0x6013f28
.arm
Function_6013f2c: @ 6013f2c :arm
	ldr     r0, [pc, #0x30] @ [0x6013f64] (=0x380fff4)
	mov     r2, #0x1
	ldr     r3, [r0]
	rsb     r1, r2, #1, 18 @ #0x4000
	add     r0, r3, #1, 22 @ #0x400
	strh    r2, [r0, #0xa4]
	add     r0, r3, #0xa4
	ldr     r2, [r0, #0x408]
	ldr     r0, [pc, #0x14] @ [0x6013f68] (=0x4808080)
	and     r1, r2, r1
	mov     r1, r1, lsr #1
	orr     r1, r1, #2, 18 @ #0x8000
	strh    r1, [r0]
	bx      lr
@ 0x6013f64

.word 0x380fff4 @ 0x6013f64
.word 0x4808080 @ 0x6013f68
.arm
Function_6013f6c: @ 6013f6c :arm
	ldr     r1, [pc, #0x18] @ [0x6013f8c] (=0x380fff4)
	ldr     r0, [pc, #0x18] @ [0x6013f90] (=0x4808080)
	ldr     r2, [r1]
	mov     r1, #0x0
	strh    r1, [r0]
	add     r0, r2, #1, 22 @ #0x400
	strh    r1, [r0, #0xa4]
	bx      lr
@ 0x6013f8c

.word 0x380fff4 @ 0x6013f8c
.word 0x4808080 @ 0x6013f90
.arm
Function_6013f94: @ 6013f94 :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r1, [pc, #0x350] @ [0x60142f0] (=0x380fff4)
	mov     r0, #0x0
	ldr     r1, [r1]
	ldr     r8, [r1, #0x4ac]
	add     r5, r1, #199, 30 @ #0x31c
	strh    r0, [r8]
	strh    r0, [r8, #0x2]
	strh    r0, [r8, #0x4]
	strh    r0, [r8, #0x6]
	add     r6, r1, #209, 30 @ #0x344
	bl      Function_600adc4
	strh    r0, [r8, #0x8]
	mov     r0, #0x80
	strh    r0, [r8, #0xc]
	mov     r0, #0x0
	add     r2, r5, #0x8
	strh    r0, [r8, #0xe]
	ldr     r1, [pc, #0x310] @ [0x60142f4] (=0x60184cc)
	add     r0, r8, #0x10
	mov     r3, r2
	bl      Function_600a974
	mov     r1, #0x0
	strh    r1, [r8, #0x22]
	add     r10, r8, #0x24
	str     r1, [r8, #0x24]
	str     r1, [r10, #0x4]
	ldrh    r0, [r6, #0x6e]
	add     r9, r10, #0xc
	strh    r0, [r10, #0x8]
	ldrh    r0, [r6, #0x7c]
	strh    r0, [r10, #0xa]
	ldrh    r0, [r5, #0x1e]
	mov     r0, r0, lsl #31
	movs    r0, r0, lsr #31
	bne     branch_6014094
	sub     r0, r9, r10
	strh    r0, [r6, #0x92]
	mov     r0, r9
	bl      Function_600b9e0
	ldrh    r1, [r6, #0x1e]
	add     r0, r9, #0x1
	and     r1, r1, #0xff
	add     r9, r9, #0x2
	bl      Function_600b9e0
	mov     r7, #0x0
	add     r4, r6, #0x20
	b       branch_6014070
@ 0x6014054

.arm
branch_6014054: @ 6014054 :arm
	add     r0, r4, r7
	bl      Function_600ba0c
	mov     r1, r0
	mov     r0, r9
	bl      Function_600b9e0
	add     r9, r9, #0x1
	add     r7, r7, #0x1
.arm
branch_6014070: @ 6014070 :arm
	ldrh    r0, [r6, #0x1e]
	cmp     r7, r0
	bcc     branch_6014054
	mvn     r0, #0x0
	sub     r0, r0, r7
	add     r0, r9, r0
	and     r1, r7, #0xff
	bl      Function_600b9e0
	b       branch_6014098
@ 0x6014094

.arm
branch_6014094: @ 6014094 :arm
	strh    r1, [r6, #0x92]
.arm
branch_6014098: @ 6014098 :arm
	mov     r0, r9
	bl      Function_6014e60
	add     r9, r9, r0
	mov     r0, r9
	mov     r1, #0x3
	bl      Function_600b9e0
	add     r0, r9, #0x1
	mov     r1, #0x1
	bl      Function_600b9e0
	ldrh    r1, [r6, #0x7a]
	add     r0, r9, #0x2
	and     r1, r1, #0xff
	bl      Function_600b9e0
	add     r0, r9, #0x3
	sub     r1, r0, r10
	strh    r1, [r6, #0x94]
	ldrh    r2, [r6, #0x94]
	ldr     r1, [pc, #0x214] @ [0x60142f8] (=0x4808084)
	add     r2, r2, #0x2
	strh    r2, [r1]
	mov     r1, #0x5
	bl      Function_600b9e0
	add     r0, r9, #0x4
	mov     r1, #0x5
	bl      Function_600b9e0
	add     r0, r9, #0x5
	mov     r1, #0x0
	bl      Function_600b9e0
	add     r0, r9, #0x6
	ldrh    r1, [r6, #0x74]
	and     r1, r1, #0xff
	bl      Function_600b9e0
	add     r0, r9, #0x7
	mov     r1, #0x0
	bl      Function_600b9e0
	add     r0, r9, #0x8
	mov     r1, #0x0
	bl      Function_600b9e0
	add     r0, r9, #0x9
	mov     r1, #0x0
	bl      Function_600b9e0
	add     r0, r9, #0xa
	sub     r1, r0, r10
	strh    r1, [r6, #0x96]
	ldrh    r2, [r6, #0x96]
	mov     r1, #0xdd
	and     r2, r2, #0x1
	strh    r2, [r6, #0xa2]
	bl      Function_600b9e0
	add     r0, r9, #0xb
	ldrh    r1, [r6, #0xa0]
	add     r1, r1, #0x8
	and     r1, r1, #0xff
	bl      Function_600b9e0
	add     r0, r9, #0xc
	mov     r1, #0x0
	bl      Function_600b9e0
	add     r0, r9, #0xd
	mov     r1, #0x9
	bl      Function_600b9e0
	add     r0, r9, #0xe
	mov     r1, #0xbf
	bl      Function_600b9e0
	add     r0, r9, #0xf
	mov     r1, #0x0
	bl      Function_600b9e0
	ldrh    r0, [r6, #0xe]
	cmp     r0, #0x1
	bne     branch_60141d8
	ldrh    r1, [r5, #0x20]
	add     r0, r9, #0x10
	and     r1, r1, #0xff
	bl      Function_600b9e0
	ldrh    r1, [r5, #0x20]
	add     r0, r9, #0x11
	mov     r1, r1, asr #8
	and     r1, r1, #0xff
	add     r9, r9, #0x12
	bl      Function_600b9e0
	b       branch_60141f4
@ 0x60141d8

.arm
branch_60141d8: @ 60141d8 :arm
	add     r0, r9, #0x10
	mov     r1, #0xff
	bl      Function_600b9e0
	add     r0, r9, #0x11
	mov     r1, #0xff
	add     r9, r9, #0x12
	bl      Function_600b9e0
.arm
branch_60141f4: @ 60141f4 :arm
	ldr     r1, [pc, #0x100] @ [0x60142fc] (=0x380fff0)
	mov     r0, r9
	ldrh    r4, [r1]
	and     r1, r4, #0xff
	bl      Function_600b9e0
	mov     r1, r4, lsr #8
	add     r0, r9, #0x1
	and     r1, r1, #0xff
	add     r9, r9, #0x2
	bl      Function_600b9e0
	ldr     r4, [r6, #0x9c]
	mov     r5, #0x0
	b       branch_6014248
@ 0x6014228

.arm
branch_6014228: @ 6014228 :arm
	mov     r0, r4
	bl      Function_600ba0c
	mov     r1, r0
	mov     r0, r9
	bl      Function_600b9e0
	add     r9, r9, #0x1
	add     r4, r4, #0x1
	add     r5, r5, #0x1
.arm
branch_6014248: @ 6014248 :arm
	ldrh    r1, [r6, #0xa0]
	cmp     r5, r1
	bcc     branch_6014228
	ldrh    r0, [r6, #0xa2]
	cmp     r0, #0x0
	beq     branch_60142a4
	ldr     r0, [r6, #0x9c]
	cmp     r1, #0x0
	add     r0, r0, r1
	sub     r5, r0, #0x1
	mov     r4, #0x0
	bls     branch_60142a4
	b       branch_6014298
@ 0x601427c

.arm
branch_601427c: @ 601427c :arm
	mov     r0, r5
	bl      Function_600ba0c
	mov     r1, r0
	add     r0, r5, #0x1
	bl      Function_600b9e0
	add     r4, r4, #0x1
	sub     r5, r5, #0x1
.arm
branch_6014298: @ 6014298 :arm
	ldrh    r0, [r6, #0xa0]
	cmp     r4, r0
	bcc     branch_601427c
.arm
branch_60142a4: @ 60142a4 :arm
	ldr     r0, [pc, #0x44] @ [0x60142f0] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #6, 24 @ #0x600
	ldrh    r0, [r0, #0x90]
	tst     r0, #0x4
	beq     branch_60142d4
	ldr     r1, [pc, #0x3c] @ [0x6014300] (=0xb6b8)
	add     r0, r9, #0x3
	bic     r2, r0, #0x3
	ldr     r0, [pc, #0x34] @ [0x6014304] (=0x1d46)
	strh    r1, [r2]
	strh    r0, [r2, #0x2]
.arm
branch_60142d4: @ 60142d4 :arm
	mov     r1, #0x0
	add     r0, r9, #0x1c
	strh    r1, [r6, #0xa4]
	sub     r0, r0, r10
	strh    r0, [r8, #0xa]
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x60142f0

.word 0x380fff4 @ 0x60142f0
.word 0x60184cc @ 0x60142f4
.word 0x4808084 @ 0x60142f8
.word 0x380fff0 @ 0x60142fc
.word 0xb6b8 @ 0x6014300
.word 0x1d46 @ 0x6014304
.arm
Function_6014308: @ 6014308 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0xe0] @ [0x60143f4] (=0x380fff4)
	ldr     r0, [r0]
	add     r4, r0, #209, 30 @ #0x344
	ldr     r1, [r0, #0x4ac]
	ldrh    r2, [r4, #0xa0]
	ldrh    r0, [r4, #0x96]
	add     r1, r1, #0x24
	cmp     r2, #0x0
	add     r5, r1, r0
	beq     branch_6014378
	ldrh    r0, [r4, #0xa2]
	ldr     r1, [r4, #0x9c]
	tst     r0, #0x1
	add     r0, r5, #0xa
	beq     branch_6014370
	sub     r0, r0, #0x1
	add     r2, r2, #0x2
	bl      Function_600b938
	ldr     r1, [pc, #0x9c] @ [0x60143f8] (=0x380fff0)
	add     r0, r5, #0x9
	ldrh    r1, [r1]
	mov     r1, r1, asr #8
	and     r1, r1, #0xff
	bl      Function_600b9e0
	b       branch_6014378
@ 0x6014370

.arm
branch_6014370: @ 6014370 :arm
	add     r2, r2, #0x1
	bl      Function_600b938
.arm
branch_6014378: @ 6014378 :arm
	ldr     r0, [pc, #0x74] @ [0x60143f4] (=0x380fff4)
	ldrh    r2, [r4, #0x96]
	ldr     r0, [r0]
	ldrh    r1, [r4, #0xa0]
	add     r2, r2, #0x26
	ldr     r0, [r0, #0x4ac]
	add     r1, r2, r1
	strh    r1, [r0, #0xa]
	ldrh    r1, [r4, #0xa0]
	add     r0, r5, #0x1
	add     r1, r1, #0x8
	and     r1, r1, #0xff
	bl      Function_600b9e0
	ldr     r0, [pc, #0x40] @ [0x60143f4] (=0x380fff4)
	ldr     r0, [r0]
	add     r0, r0, #6, 24 @ #0x600
	ldrh    r0, [r0, #0x90]
	tst     r0, #0x4
	beq     branch_60143e4
	ldrh    r0, [r4, #0xa0]
	add     r1, r5, #0xd
	add     r0, r1, r0
	ldr     r1, [pc, #0x24] @ [0x60143fc] (=0xb6b8)
	bic     r2, r0, #0x3
	ldr     r0, [pc, #0x20] @ [0x6014400] (=0x1d46)
	strh    r1, [r2]
	strh    r0, [r2, #0x2]
.arm
branch_60143e4: @ 60143e4 :arm
	mov     r0, #0x0
	strh    r0, [r4, #0xa4]
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x60143f4

.word 0x380fff4 @ 0x60143f4
.word 0x380fff0 @ 0x60143f8
.word 0xb6b8 @ 0x60143fc
.word 0x1d46 @ 0x6014400
.arm
Function_6014404: @ 6014404 :arm
	ldr     r0, [pc, #0x24] @ [0x6014430] (=0x380fff4)
	ldr     r0, [r0]
	add     r1, r0, #5, 24 @ #0x500
	add     r0, r0, #1, 24 @ #0x100
	ldrh    r1, [r1, #0x38]
	ldrh    r2, [r0, #0xa8]
	rsb     r0, r1, #0x18
	cmp     r2, r0
	movlt   r0, #0x1
	movge   r0, #0x0
	bx      lr
@ 0x6014430

.word 0x380fff4 @ 0x6014430
.arm
Function_6014434: @ 6014434 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [pc, #0x68] @ [0x60144a8] (=0x380fff4)
	mov     r5, r1
	ldr     r1, [r2]
	mov     r6, r0
	add     r0, r1, #98, 30 @ #0x188
	mov     r1, #0x36
	bl      Function_60090a4
	movs    r4, r0
	bne     branch_601446c
	mov     r0, #0x2
	bl      Function_600bd28
	mov     r0, r4
	b       branch_60144a0
@ 0x601446c

.arm
branch_601446c: @ 601446c :arm
	ldr     r0, [pc, #0x38] @ [0x60144ac] (=0xffff)
	mov     r1, r6
	strh    r0, [r4, #0xc]
	add     r0, r4, #0x10
	bl      Function_6014d38
	strh    r5, [r4, #0x3c]
	mov     r0, #0x2
	strh    r0, [r4, #0x16]
	add     r0, r0, #0x1c
	strh    r0, [r4, #0x22]
	mov     r0, #0xa0
	strh    r0, [r4, #0x24]
	add     r0, r4, #0x10
.arm
branch_60144a0: @ 60144a0 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x60144a8

.word 0x380fff4 @ 0x60144a8
.word 0xffff @ 0x60144ac
.arm
Function_60144b0: @ 60144b0 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r1, [pc, #0x94] @ [0x6014550] (=0x380fff4)
	mov     r6, r0
	ldr     r2, [r1]
	mov     r1, #0x5e
	add     r0, r2, #98, 30 @ #0x188
	add     r5, r2, #209, 30 @ #0x344
	bl      Function_60090a4
	movs    r4, r0
	bne     branch_60144e8
	mov     r0, #0x2
	bl      Function_600bd28
	mov     r0, r4
	b       branch_6014548
@ 0x60144e8

.arm
branch_60144e8: @ 60144e8 :arm
	ldr     r0, [pc, #0x64] @ [0x6014554] (=0xffff)
	mov     r1, r6
	strh    r0, [r4, #0xc]
	add     r0, r4, #0x10
	bl      Function_6014d38
	ldrh    r1, [r5, #0x7c]
	add     r0, r4, #0x40
	strh    r1, [r4, #0x3c]
	ldrh    r1, [r5, #0x70]
	strh    r1, [r4, #0x3e]
	bl      Function_6014dec
	mov     r5, r0
	add     r0, r4, #0x40
	add     r0, r0, r5
	bl      Function_6014e60
	add     r0, r5, r0
	add     r0, r0, #0x4
	strh    r0, [r4, #0x16]
	ldrh    r1, [r4, #0x16]
	mov     r0, #0x0
	add     r1, r1, #0x1c
	strh    r1, [r4, #0x22]
	strh    r0, [r4, #0x24]
	add     r0, r4, #0x10
.arm
branch_6014548: @ 6014548 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6014550

.word 0x380fff4 @ 0x6014550
.word 0xffff @ 0x6014554
.arm
Function_6014558: @ 6014558 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r1, [pc, #0xa0] @ [0x6014604] (=0x380fff4)
	mov     r6, r0
	ldr     r2, [r1]
	mov     r1, #0x64
	add     r0, r2, #98, 30 @ #0x188
	add     r5, r2, #209, 30 @ #0x344
	bl      Function_60090a4
	movs    r4, r0
	bne     branch_6014590
	mov     r0, #0x2
	bl      Function_600bd28
	mov     r0, r4
	b       branch_60145fc
@ 0x6014590

.arm
branch_6014590: @ 6014590 :arm
	ldr     r0, [pc, #0x70] @ [0x6014608] (=0xffff)
	mov     r1, r6
	strh    r0, [r4, #0xc]
	add     r0, r4, #0x10
	bl      Function_6014d38
	ldrh    r1, [r5, #0x7c]
	add     r0, r4, #0x40
	strh    r1, [r4, #0x3c]
	ldrh    r2, [r5, #0x70]
	add     r1, r5, #0x82
	strh    r2, [r4, #0x3e]
	bl      Function_600a924
	add     r0, r4, #0x46
	bl      Function_6014dec
	mov     r5, r0
	add     r0, r4, #0x46
	add     r0, r0, r5
	bl      Function_6014e60
	add     r0, r5, r0
	add     r0, r0, #0xa
	strh    r0, [r4, #0x16]
	ldrh    r1, [r4, #0x16]
	mov     r0, #0x20
	add     r1, r1, #0x1c
	strh    r1, [r4, #0x22]
	strh    r0, [r4, #0x24]
	add     r0, r4, #0x10
.arm
branch_60145fc: @ 60145fc :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6014604

.word 0x380fff4 @ 0x6014604
.word 0xffff @ 0x6014608
.arm
Function_601460c: @ 601460c :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r3, [pc, #0x160] @ [0x6014778] (=0x380fff4)
	mov     r7, r1
	ldr     r1, [r3]
	mov     r8, r0
	add     r0, r1, #98, 30 @ #0x188
	mov     r1, #0x60
	mov     r6, r2
	bl      Function_60090a4
	movs    r4, r0
	bne     branch_6014648
	mov     r0, #0x2
	bl      Function_600bd28
	mov     r0, r4
	b       branch_6014770
@ 0x6014648

.arm
branch_6014648: @ 6014648 :arm
	ldr     r0, [pc, #0x12c] @ [0x601477c] (=0xffff)
	cmp     r7, #0x0
	strh    r0, [r4, #0xc]
	bne     branch_601466c
	mov     r0, r8
	bl      Function_600e758
	movs    r5, r0
	moveq   r7, #0x13
	b       branch_6014670
@ 0x601466c

.arm
branch_601466c: @ 601466c :arm
	mov     r5, #0x0
.arm
branch_6014670: @ 6014670 :arm
	mov     r0, r8
	bl      Function_600e8e8
	mov     r1, r0
	add     r0, r4, #0x10
	bl      Function_6014d38
	ldr     r0, [pc, #0xec] @ [0x6014778] (=0x380fff4)
	cmp     r5, #0x0
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0xc0]
	strh    r0, [r4, #0x3c]
	strh    r7, [r4, #0x3e]
	strh    r5, [r4, #0x40]
	ldrneh  r0, [r4, #0x40]
	orrne   r0, r0, #3, 18 @ #0xc000
	strneh  r0, [r4, #0x40]
	add     r0, r4, #0x42
	bl      Function_6014e60
	add     r0, r0, #0x6
	strh    r0, [r4, #0x16]
	ldrh    r1, [r4, #0x16]
	mov     r0, #0x10
	add     r1, r1, #0x1c
	strh    r1, [r4, #0x22]
	strh    r0, [r4, #0x24]
	ldrh    r0, [r4, #0x22]
	add     r1, r4, #0x24
	cmp     r6, #0x0
	add     r8, r1, r0
	beq     branch_6014754
	add     r0, r6, #0x1
	bl      Function_600ba0c
	mov     r9, r0
	mov     r0, r6
	bl      Function_600ba0c
	mov     r1, r0
	mov     r0, r8
	bl      Function_600b9e0
	add     r0, r8, #0x1
	and     r1, r9, #0xff
	add     r8, r8, #0x2
	bl      Function_600b9e0
	cmp     r9, #0x0
	mov     r7, #0x0
	bls     branch_601476c
	add     r5, r6, #0x2
	b       branch_6014748
@ 0x601472c

.arm
branch_601472c: @ 601472c :arm
	add     r0, r5, r7
	bl      Function_600ba0c
	mov     r1, r0
	mov     r0, r8
	bl      Function_600b9e0
	add     r7, r7, #0x1
	add     r8, r8, #0x1
.arm
branch_6014748: @ 6014748 :arm
	cmp     r7, r9
	bcc     branch_601472c
	b       branch_601476c
@ 0x6014754

.arm
branch_6014754: @ 6014754 :arm
	mov     r0, r8
	mov     r1, #0x0
	bl      Function_600b9e0
	add     r0, r8, #0x1
	mov     r1, #0x0
	bl      Function_600b9e0
.arm
branch_601476c: @ 601476c :arm
	add     r0, r4, #0x10
.arm
branch_6014770: @ 6014770 :arm
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x6014778

.word 0x380fff4 @ 0x6014778
.word 0xffff @ 0x601477c
.arm
Function_6014780: @ 6014780 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r3, [pc, #0x14c] @ [0x60148d8] (=0x380fff4)
	mov     r6, r1
	ldr     r1, [r3]
	mov     r8, r0
	add     r0, r1, #98, 30 @ #0x188
	mov     r1, #0x60
	mov     r5, r2
	bl      Function_60090a4
	movs    r4, r0
	bne     branch_60147bc
	mov     r0, #0x2
	bl      Function_600bd28
	mov     r0, r4
	b       branch_60148d0
@ 0x60147bc

.arm
branch_60147bc: @ 60147bc :arm
	ldr     r0, [pc, #0x118] @ [0x60148dc] (=0xffff)
	cmp     r6, #0x0
	strh    r0, [r4, #0xc]
	bne     branch_60147e0
	mov     r0, r8
	bl      Function_600e758
	movs    r7, r0
	moveq   r6, #0x13
	b       branch_60147e4
@ 0x60147e0

.arm
branch_60147e0: @ 60147e0 :arm
	mov     r7, #0x0
.arm
branch_60147e4: @ 60147e4 :arm
	mov     r0, r8
	bl      Function_600e8e8
	mov     r1, r0
	add     r0, r4, #0x10
	bl      Function_6014d38
	ldr     r0, [pc, #0xd8] @ [0x60148d8] (=0x380fff4)
	orr     r2, r7, #3, 18 @ #0xc000
	ldr     r1, [r0]
	add     r0, r4, #0x42
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0xc0]
	strh    r1, [r4, #0x3c]
	strh    r6, [r4, #0x3e]
	strh    r2, [r4, #0x40]
	bl      Function_6014e60
	add     r0, r0, #0x6
	strh    r0, [r4, #0x16]
	ldrh    r1, [r4, #0x16]
	mov     r0, #0x30
	add     r1, r1, #0x1c
	strh    r1, [r4, #0x22]
	strh    r0, [r4, #0x24]
	ldrh    r0, [r4, #0x22]
	add     r1, r4, #0x24
	cmp     r5, #0x0
	add     r7, r1, r0
	beq     branch_60148b4
	add     r0, r5, #0x1
	bl      Function_600ba0c
	mov     r8, r0
	mov     r0, r5
	bl      Function_600ba0c
	mov     r1, r0
	mov     r0, r7
	bl      Function_600b9e0
	add     r0, r7, #0x1
	and     r1, r8, #0xff
	bl      Function_600b9e0
	add     r7, r7, #0x2
	mov     r6, #0x0
	add     r5, r5, #0x2
	b       branch_60148a8
@ 0x601488c

.arm
branch_601488c: @ 601488c :arm
	add     r0, r5, r6
	bl      Function_600ba0c
	mov     r1, r0
	mov     r0, r7
	bl      Function_600b9e0
	add     r7, r7, #0x1
	add     r6, r6, #0x1
.arm
branch_60148a8: @ 60148a8 :arm
	cmp     r6, r8
	bcc     branch_601488c
	b       branch_60148cc
@ 0x60148b4

.arm
branch_60148b4: @ 60148b4 :arm
	mov     r0, r7
	mov     r1, #0x0
	bl      Function_600b9e0
	add     r0, r7, #0x1
	mov     r1, #0x0
	bl      Function_600b9e0
.arm
branch_60148cc: @ 60148cc :arm
	add     r0, r4, #0x10
.arm
branch_60148d0: @ 60148d0 :arm
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x60148d8

.word 0x380fff4 @ 0x60148d8
.word 0xffff @ 0x60148dc
.arm
Function_60148e0: @ 60148e0 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0x78] @ [0x6014964] (=0x380fff4)
	mov     r4, r0
	ldr     r0, [r1]
	mov     r1, #0x5a
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_60090a4
	movs    r5, r0
	bne     branch_6014914
	mov     r0, #0x2
	bl      Function_600bd28
	mov     r0, r5
	b       branch_601495c
@ 0x6014914

.arm
branch_6014914: @ 6014914 :arm
	ldr     r2, [pc, #0x4c] @ [0x6014968] (=0xffff)
	mov     r1, r4
	add     r0, r5, #0x10
	strh    r2, [r5, #0xc]
	bl      Function_6014d38
	add     r0, r5, #0x3c
	bl      Function_6014dec
	mov     r4, r0
	add     r0, r5, #0x3c
	add     r0, r0, r4
	bl      Function_6014e60
	add     r0, r4, r0
	strh    r0, [r5, #0x16]
	add     r0, r0, #0x1c
	strh    r0, [r5, #0x22]
	mov     r0, #0x40
	strh    r0, [r5, #0x24]
	add     r0, r5, #0x10
.arm
branch_601495c: @ 601495c :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6014964

.word 0x380fff4 @ 0x6014964
.word 0xffff @ 0x6014968
.arm
Function_601496c: @ 601496c :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r1, [pc, #0x208] @ [0x6014b80] (=0x380fff4)
	mov     r5, r0
	ldr     r0, [r1]
	add     r4, r0, #209, 30 @ #0x344
	bl      Function_6014404
	cmp     r0, #0x0
	moveq   r0, #0x0
	beq     branch_6014b78
	ldr     r1, [pc, #0x1e8] @ [0x6014b80] (=0x380fff4)
	ldrh    r0, [r4, #0xa0]
	ldr     r2, [r1]
	add     r1, r0, #0x78
	add     r0, r2, #98, 30 @ #0x188
	bl      Function_60090a4
	movs    r6, r0
	bne     branch_60149c0
	mov     r0, #0x2
	bl      Function_600bd28
	mov     r0, r6
	b       branch_6014b78
@ 0x60149c0

.arm
branch_60149c0: @ 60149c0 :arm
	ldr     r0, [pc, #0x1bc] @ [0x6014b84] (=0xffff)
	mov     r1, r5
	strh    r0, [r6, #0xc]
	add     r0, r6, #0x10
	bl      Function_6014d38
	ldrh    r1, [r4, #0x6e]
	add     r0, r6, #0x48
	strh    r1, [r6, #0x44]
	ldrh    r1, [r4, #0x7c]
	strh    r1, [r6, #0x46]
	bl      Function_6014dec
	mov     r4, r0
	add     r0, r6, #0x48
	add     r0, r0, r4
	bl      Function_6014e60
	add     r7, r4, r0
	add     r0, r6, #0x48
	add     r4, r0, r7
	mov     r0, r4
	mov     r1, #0x3
	bl      Function_600b9e0
	add     r0, r4, #0x1
	mov     r1, #0x1
	bl      Function_600b9e0
	ldr     r1, [pc, #0x158] @ [0x6014b80] (=0x380fff4)
	add     r0, r4, #0x2
	ldr     r1, [r1]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0xbe]
	and     r1, r1, #0xff
	bl      Function_600b9e0
	ldr     r0, [pc, #0x13c] @ [0x6014b80] (=0x380fff4)
	add     r7, r7, #0x3
	ldr     r1, [r0]
	add     r0, r6, #0x48
	add     r5, r0, r7
	add     r4, r1, #209, 30 @ #0x344
	add     r8, r1, #199, 30 @ #0x31c
	mov     r0, r5
	mov     r1, #0xdd
	mov     r10, #0x0
	bl      Function_600b9e0
	ldr     r1, [pc, #0x110] @ [0x6014b80] (=0x380fff4)
	add     r0, r5, #0x1
	ldr     r1, [r1]
	add     r1, r1, #3, 24 @ #0x300
	ldrh    r1, [r1, #0xe4]
	add     r1, r1, #0x8
	and     r1, r1, #0xff
	bl      Function_600b9e0
	add     r0, r5, #0x2
	mov     r1, r10
	bl      Function_600b9e0
	add     r0, r5, #0x3
	mov     r1, #0x9
	bl      Function_600b9e0
	add     r0, r5, #0x4
	mov     r1, #0xbf
	bl      Function_600b9e0
	add     r0, r5, #0x5
	mov     r1, r10
	bl      Function_600b9e0
	ldrh    r1, [r8, #0x20]
	add     r0, r5, #0x6
	and     r1, r1, #0xff
	bl      Function_600b9e0
	ldrh    r1, [r8, #0x20]
	add     r0, r5, #0x7
	mov     r1, r1, asr #8
	and     r1, r1, #0xff
	bl      Function_600b9e0
	ldr     r1, [pc, #0xa4] @ [0x6014b88] (=0x380fff0)
	add     r0, r5, #0x8
	ldrh    r8, [r1]
	and     r1, r8, #0xff
	bl      Function_600b9e0
	mov     r1, r8, lsr #8
	add     r0, r5, #0x9
	and     r1, r1, #0xff
	bl      Function_600b9e0
	ldrh    r0, [r4, #0xa0]
	add     r10, r10, #0xa
	cmp     r0, #0x0
	beq     branch_6014b54
	ldrh    r0, [r4, #0xa2]
	ldr     r8, [r4, #0x9c]
	tst     r0, #0x1
	addne   r8, r8, #0x1
	mov     r9, #0x0
	b       branch_6014b48
@ 0x6014b28

.arm
branch_6014b28: @ 6014b28 :arm
	mov     r0, r8
	bl      Function_600ba0c
	mov     r1, r0
	add     r0, r5, r10
	bl      Function_600b9e0
	add     r10, r10, #0x1
	add     r8, r8, #0x1
	add     r9, r9, #0x1
.arm
branch_6014b48: @ 6014b48 :arm
	ldrh    r0, [r4, #0xa0]
	cmp     r9, r0
	bcc     branch_6014b28
.arm
branch_6014b54: @ 6014b54 :arm
	add     r0, r7, r10
	add     r0, r0, #0xc
	strh    r0, [r6, #0x16]
	ldrh    r1, [r6, #0x16]
	mov     r0, #0x50
	add     r1, r1, #0x1c
	strh    r1, [r6, #0x22]
	strh    r0, [r6, #0x24]
	add     r0, r6, #0x10
.arm
branch_6014b78: @ 6014b78 :arm
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x6014b80

.word 0x380fff4 @ 0x6014b80
.word 0xffff @ 0x6014b84
.word 0x380fff0 @ 0x6014b88
.arm
Function_6014b8c: @ 6014b8c :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	cmp     r2, #0x0
	beq     branch_6014bb0
	bl      Function_6014404
	cmp     r0, #0x0
	moveq   r0, #0x0
	beq     branch_6014c3c
.arm
branch_6014bb0: @ 6014bb0 :arm
	ldr     r0, [pc, #0x8c] @ [0x6014c44] (=0x380fff4)
	add     r1, r5, #0x3d
	ldr     r0, [r0]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_60090a4
	movs    r4, r0
	bne     branch_6014bdc
	mov     r0, #0x2
	bl      Function_600bd28
	mov     r0, r4
	b       branch_6014c3c
@ 0x6014bdc

.arm
branch_6014bdc: @ 6014bdc :arm
	ldr     r2, [pc, #0x64] @ [0x6014c48] (=0xffff)
	mov     r1, r6
	add     r0, r4, #0x10
	strh    r2, [r4, #0xc]
	bl      Function_6014d38
	cmp     r5, #0x0
	beq     branch_6014c1c
	add     r0, r4, #0x42
	mov     r1, #0x10
	bl      Function_600b9e0
	add     r0, r4, #0x43
	and     r1, r5, #0xff
	bl      Function_600b9e0
	add     r0, r5, #0x2
	mov     r0, r0, lsl #16
	mov     r5, r0, lsr #16
.arm
branch_6014c1c: @ 6014c1c :arm
	add     r0, r5, #0x6
	strh    r0, [r4, #0x16]
	ldrh    r1, [r4, #0x16]
	mov     r0, #0xb0
	add     r1, r1, #0x1c
	strh    r1, [r4, #0x22]
	strh    r0, [r4, #0x24]
	add     r0, r4, #0x10
.arm
branch_6014c3c: @ 6014c3c :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6014c44

.word 0x380fff4 @ 0x6014c44
.word 0xffff @ 0x6014c48
.arm
Function_6014c4c: @ 6014c4c :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	cmp     r2, #0x0
	beq     branch_6014c70
	bl      Function_6014404
	cmp     r0, #0x0
	moveq   r0, #0x0
	beq     branch_6014cd0
.arm
branch_6014c70: @ 6014c70 :arm
	ldr     r0, [pc, #0x60] @ [0x6014cd8] (=0x380fff4)
	mov     r1, #0x36
	ldr     r0, [r0]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_60090a4
	movs    r4, r0
	bne     branch_6014c9c
	mov     r0, #0x2
	bl      Function_600bd28
	mov     r0, r4
	b       branch_6014cd0
@ 0x6014c9c

.arm
branch_6014c9c: @ 6014c9c :arm
	ldr     r0, [pc, #0x38] @ [0x6014cdc] (=0xffff)
	mov     r1, r6
	strh    r0, [r4, #0xc]
	add     r0, r4, #0x10
	bl      Function_6014d38
	strh    r5, [r4, #0x3c]
	mov     r0, #0x2
	strh    r0, [r4, #0x16]
	add     r0, r0, #0x1c
	strh    r0, [r4, #0x22]
	mov     r0, #0xc0
	strh    r0, [r4, #0x24]
	add     r0, r4, #0x10
.arm
branch_6014cd0: @ 6014cd0 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6014cd8

.word 0x380fff4 @ 0x6014cd8
.word 0xffff @ 0x6014cdc
.arm
Function_6014ce0: @ 6014ce0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r12, [pc, #0x48] @ [0x6014d34] (=0x380fff4)
	mov     r2, #0x0
	ldr     r3, [r12]
	mov     r1, #0x14
	ldr     r3, [r3, #0x45c]
	orr     r0, r0, #3, 18 @ #0xc000
	strh    r2, [r3]
	strh    r2, [r3, #0x2]
	strh    r2, [r3, #0x4]
	strh    r1, [r3, #0xa]
	mov     r1, #0xa4
	strh    r1, [r3, #0xc]
	strh    r0, [r3, #0xe]
	ldr     r2, [r12]
	add     r0, r3, #0x10
	add     r1, r2, #234, 30 @ #0x3a8
	add     r2, r2, #201, 30 @ #0x324
	bl      Function_600a940
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x6014d34

.word 0x380fff4 @ 0x6014d34
.arm
Function_6014d38: @ 6014d38 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	mov     r1, r5
	mov     r0, #0x0
	mov     r2, #0x2c
	bl      Function_6000598
	bl      Function_600adc4
	strh    r0, [r5, #0x10]
	ldr     r0, [pc, #0x1c] @ [0x6014d80] (=0x380fff4)
	mov     r1, r4
	ldr     r3, [r0]
	add     r0, r5, #0x18
	add     r2, r3, #201, 30 @ #0x324
	add     r3, r3, #234, 30 @ #0x3a8
	bl      Function_600a974
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6014d80

.word 0x380fff4 @ 0x6014d80
.arm
Function_6014d84: @ 6014d84 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r2, [pc, #0x58] @ [0x6014de8] (=0x380fff4)
	mov     r7, r0
	ldr     r0, [r2]
	mov     r6, r1
	ldr     r5, [r0, #0x1a0]
	mvn     r4, #0x0
	b       branch_6014dd4
@ 0x6014da4

.arm
branch_6014da4: @ 6014da4 :arm
	ldrh    r0, [r5, #0x24]
	cmp     r0, r6
	bne     branch_6014dc8
	mov     r1, r7
	add     r0, r5, #0x28
	bl      Function_600acc0
	cmp     r0, #0x0
	movne   r0, #0x1
	bne     branch_6014de0
.arm
branch_6014dc8: @ 6014dc8 :arm
	mov     r0, r5
	bl      Function_60093e8
	mov     r5, r0
.arm
branch_6014dd4: @ 6014dd4 :arm
	cmp     r5, r4
	bne     branch_6014da4
	mov     r0, #0x0
.arm
branch_6014de0: @ 6014de0 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6014de8

.word 0x380fff4 @ 0x6014de8
.arm
Function_6014dec: @ 6014dec :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r1, [pc, #0x64] @ [0x6014e5c] (=0x380fff4)
	mov     r5, #0x0
	ldr     r1, [r1]
	mov     r8, r0
	add     r4, r1, #209, 30 @ #0x344
	ldrh    r6, [r4, #0x1e]
	mov     r1, r5
	bl      Function_600b9e0
	add     r0, r8, #0x1
	and     r1, r6, #0xff
	bl      Function_600b9e0
	add     r5, r5, #0x2
	mov     r7, #0x0
	add     r4, r4, #0x20
	b       branch_6014e48
@ 0x6014e2c

.arm
branch_6014e2c: @ 6014e2c :arm
	add     r0, r4, r7
	bl      Function_600ba0c
	mov     r1, r0
	add     r0, r8, r5
	bl      Function_600b9e0
	add     r5, r5, #0x1
	add     r7, r7, #0x1
.arm
branch_6014e48: @ 6014e48 :arm
	cmp     r7, r6
	bcc     branch_6014e2c
	mov     r0, r5
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x6014e5c

.word 0x380fff4 @ 0x6014e5c
.arm
Function_6014e60: @ 6014e60 :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r2, [pc, #0x90] @ [0x6014efc] (=0x380fff4)
	mov     r1, #0x1
	ldr     r2, [r2]
	mov     r9, r0
	add     r6, r2, #209, 30 @ #0x344
	mov     r7, #0x0
	bl      Function_600b9e0
	ldr     r4, [pc, #0x78] @ [0x6014f00] (=0x60184ec)
	add     r7, r7, #0x2
	mov     r8, #0x0
	mov     r5, #0x1
.arm
branch_6014e90: @ 6014e90 :arm
	ldrh    r0, [r6, #0x62]
	tst     r0, r5, lsl r8
	beq     branch_6014ed4
	ldrh    r0, [r6, #0x60]
	tst     r0, r5, lsl r8
	mov     r0, r8, lsl #1
	ldrh    r1, [r4, r0]
	beq     branch_6014ec4
	orr     r1, r1, #0x80
	add     r0, r9, r7
	and     r1, r1, #0xff
	bl      Function_600b9e0
	b       branch_6014ed0
@ 0x6014ec4

.arm
branch_6014ec4: @ 6014ec4 :arm
	add     r0, r9, r7
	and     r1, r1, #0xff
	bl      Function_600b9e0
.arm
branch_6014ed0: @ 6014ed0 :arm
	add     r7, r7, #0x1
.arm
branch_6014ed4: @ 6014ed4 :arm
	add     r8, r8, #0x1
	cmp     r8, #0x10
	bcc     branch_6014e90
	sub     r1, r7, #0x2
	add     r0, r9, #0x1
	and     r1, r1, #0xff
	bl      Function_600b9e0
	mov     r0, r7
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x6014efc

.word 0x380fff4 @ 0x6014efc
.word 0x60184ec @ 0x6014f00
.arm
Function_6014f04: @ 6014f04 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r1, [pc, #0x2c4] @ [0x60151d4] (=0x380fff4)
	mov     r0, #0x0
	ldr     r7, [r1]
	mov     r2, #0xb0
	add     r1, r7, #0x2c
	add     r4, r1, #1, 22 @ #0x400
	mov     r1, r4
	add     r5, r7, #209, 30 @ #0x344
	add     r6, r7, #199, 30 @ #0x31c
	bl      Function_600a9f0
	add     r0, r7, #1, 22 @ #0x400
	mov     r1, #0x0
	strh    r1, [r0, #0x2c]
	str     r1, [r4, #0xc]
	strh    r1, [r4, #0x14]
	str     r1, [r4, #0x20]
	strh    r1, [r4, #0x28]
	ldr     r0, [pc, #0x284] @ [0x60151d8] (=0xffff)
	str     r1, [r4, #0x34]
	strh    r0, [r4, #0xa2]
	strh    r0, [r4, #0xa4]
	ldrh    r0, [r5, #0xc]
	cmp     r0, #0x3
	addls   pc, pc, r0, lsl #2
	b       branch_60151b8
@ 0x6014f6c

.arm
Function_6014f6c: @ 6014f6c :arm
	b       branch_6014f7c
@ 0x6014f70

.arm
Function_6014f70: @ 6014f70 :arm
	b       branch_6014ff8
@ 0x6014f74

.arm
Function_6014f74: @ 6014f74 :arm
	b       branch_6015094
@ 0x6014f78

.arm
Function_6014f78: @ 6014f78 :arm
	b       branch_6015140
@ 0x6014f7c

.arm
branch_6014f7c: @ 6014f7c :arm
	ldr     r7, [pc, #0x258] @ [0x60151dc] (=0x4804170)
	ldr     r0, [pc, #0x258] @ [0x60151e0] (=0x4804026)
	str     r7, [r4, #0x8]
	sub     r1, r7, #82, 30 @ #0x148
	str     r1, [r4, #0x1c]
	sub     r2, r7, #23, 28 @ #0x170
	ldr     r1, [pc, #0x248] @ [0x60151e4] (=0x601308c)
	str     r2, [r4, #0x30]
	ldr     r2, [pc, #0x244] @ [0x60151e8] (=0x6013208)
	str     r1, [r4, #0x10]
	ldr     r1, [pc, #0x240] @ [0x60151ec] (=0x60136d4)
	str     r2, [r4, #0x24]
	ldr     r3, [pc, #0x23c] @ [0x60151f0] (=0xb6b8)
	str     r1, [r4, #0x38]
	sub     r1, r7, #83, 30 @ #0x14c
	ldr     r2, [pc, #0x234] @ [0x60151f4] (=0x1d46)
	strh    r3, [r1]
	strh    r2, [r0]
	strh    r3, [r7, #-0x4]
	add     r0, r0, #82, 30 @ #0x148
	strh    r2, [r0]
	add     r1, r7, #98, 28 @ #0x620
	ldr     r0, [pc, #0x21c] @ [0x60151f8] (=0x4804792)
	strh    r3, [r1]
	strh    r2, [r0]
	mov     r1, #0x8
	ldr     r0, [pc, #0x210] @ [0x60151fc] (=0x48080ae)
	strh    r1, [r5, #0x8a]
	mov     r1, #0x1
	strh    r1, [r0]
	b       branch_60151b8
@ 0x6014ff8

.arm
branch_6014ff8: @ 6014ff8 :arm
	ldr     r3, [pc, #0x200] @ [0x6015200] (=0x4804aa0)
	ldr     r2, [pc, #0x200] @ [0x6015204] (=0x4804334)
	str     r3, [r4, #0x8]
	sub     r0, r3, #82, 30 @ #0x148
	str     r0, [r4, #0x1c]
	ldr     r0, [pc, #0x1d0] @ [0x60151e4] (=0x601308c)
	str     r2, [r4, #0x30]
	ldr     r1, [pc, #0x1cc] @ [0x60151e8] (=0x6013208)
	str     r0, [r4, #0x10]
	ldr     r0, [pc, #0x1e4] @ [0x6015208] (=0x601373c)
	str     r1, [r4, #0x24]
	ldr     r12, [pc, #0x1e0] @ [0x601520c] (=0x4804956)
	str     r0, [r4, #0x38]
	sub     r1, r2, #0xfc
	str     r1, [r4, #0x80]
	sub     r7, r2, #205, 30 @ #0x334
	ldr     r0, [pc, #0x1b0] @ [0x60151f0] (=0xb6b8)
	str     r7, [r4, #0x44]
	sub     r7, r2, #1, 24 @ #0x100
	ldr     lr, [pc, #0x1a8] @ [0x60151f4] (=0x1d46)
	strh    r0, [r7]
	strh    lr, [r2, #-0xfe]
	strh    r0, [r2, #-0x4]
	strh    lr, [r2, #-0x2]
	add     r2, r2, #98, 28 @ #0x620
	strh    r0, [r2]
	strh    lr, [r12]
	strh    r0, [r3, #-0x4]
	add     r2, r12, #82, 30 @ #0x148
	strh    lr, [r2]
	add     r3, r3, #98, 28 @ #0x620
	ldr     r2, [pc, #0x194] @ [0x6015210] (=0x48050c2)
	strh    r0, [r3]
	strh    lr, [r2]
	mov     r0, #130, 30 @ #0x208
	strh    r0, [r5, #0x8a]
	str     r1, [r4, #0x80]
	bl      Function_6013f94
	b       branch_60151b8
@ 0x6015094

.arm
branch_6015094: @ 6015094 :arm
	ldr     r1, [pc, #0x178] @ [0x6015214] (=0x48045d8)
	ldr     r3, [pc, #0x178] @ [0x6015218] (=0x4804232)
	str     r1, [r4, #0x8]
	sub     r0, r1, #82, 30 @ #0x148
	str     r0, [r4, #0x1c]
	sub     r2, r1, #23, 28 @ #0x170
	ldr     r12, [pc, #0x168] @ [0x601521c] (=0x4804000)
	ldr     r0, [pc, #0x12c] @ [0x60151e4] (=0x601308c)
	str     r2, [r4, #0x30]
	ldr     r2, [pc, #0x128] @ [0x60151e8] (=0x6013208)
	str     r0, [r4, #0x10]
	ldr     r0, [pc, #0x124] @ [0x60151ec] (=0x60136d4)
	str     r2, [r4, #0x24]
	str     r0, [r4, #0x38]
	str     r12, [r4, #0x58]
	add     r2, r12, #141, 30 @ #0x234
	ldr     r0, [pc, #0x114] @ [0x60151f0] (=0xb6b8)
	str     r2, [r4, #0x6c]
	add     r2, r12, #35, 28 @ #0x230
	ldr     r4, [pc, #0x10c] @ [0x60151f4] (=0x1d46)
	strh    r0, [r2]
	strh    r4, [r3]
	sub     r2, r1, #93, 30 @ #0x174
	strh    r0, [r2]
	add     r2, r3, #141, 30 @ #0x234
	strh    r4, [r2]
	sub     r2, r1, #83, 30 @ #0x14c
	strh    r0, [r2]
	add     r2, r3, #151, 30 @ #0x25c
	strh    r4, [r2]
	strh    r0, [r1, #-0x4]
	add     r2, r3, #233, 30 @ #0x3a4
	strh    r4, [r2]
	add     r2, r1, #98, 28 @ #0x620
	ldr     r1, [pc, #0xfc] @ [0x6015220] (=0x4804bfa)
	strh    r0, [r2]
	strh    r4, [r1]
	mov     r1, #66, 30 @ #0x108
	ldr     r0, [pc, #0xc8] @ [0x60151fc] (=0x48080ae)
	strh    r1, [r5, #0x8a]
	mov     r1, #0xd
	strh    r1, [r0]
	b       branch_60151b8
@ 0x6015140

.arm
branch_6015140: @ 6015140 :arm
	ldr     r12, [pc, #0x94] @ [0x60151dc] (=0x4804170)
	ldr     r0, [pc, #0x94] @ [0x60151e0] (=0x4804026)
	str     r12, [r4, #0x8]
	sub     r1, r12, #82, 30 @ #0x148
	str     r1, [r4, #0x1c]
	sub     r2, r12, #23, 28 @ #0x170
	ldr     r1, [pc, #0x84] @ [0x60151e4] (=0x601308c)
	str     r2, [r4, #0x30]
	ldr     r2, [pc, #0x80] @ [0x60151e8] (=0x6013208)
	str     r1, [r4, #0x10]
	ldr     r1, [pc, #0x7c] @ [0x60151ec] (=0x60136d4)
	str     r2, [r4, #0x24]
	ldr     r3, [pc, #0x78] @ [0x60151f0] (=0xb6b8)
	str     r1, [r4, #0x38]
	sub     r1, r12, #83, 30 @ #0x14c
	ldr     r2, [pc, #0x70] @ [0x60151f4] (=0x1d46)
	strh    r3, [r1]
	strh    r2, [r0]
	strh    r3, [r12, #-0x4]
	add     r0, r0, #82, 30 @ #0x148
	strh    r2, [r0]
	add     r1, r12, #98, 28 @ #0x620
	ldr     r0, [pc, #0x58] @ [0x60151f8] (=0x4804792)
	strh    r3, [r1]
	strh    r2, [r0]
	mov     r1, #66, 30 @ #0x108
	ldr     r0, [pc, #0x4c] @ [0x60151fc] (=0x48080ae)
	strh    r1, [r5, #0x8a]
	mov     r1, #0xd
	strh    r1, [r0]
.arm
branch_60151b8: @ 60151b8 :arm
	ldrh    r0, [r6, #0x18]
	cmp     r0, #0x0
	ldrneh  r0, [r5, #0x8a]
	orrne   r0, r0, #1, 18 @ #0x4000
	strneh  r0, [r5, #0x8a]
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x60151d4

.word 0x380fff4 @ 0x60151d4
.word 0xffff @ 0x60151d8
.word 0x4804170 @ 0x60151dc
.word 0x4804026 @ 0x60151e0
.word 0x601308c @ 0x60151e4
.word 0x6013208 @ 0x60151e8
.word Function_60136d4 @ =0x60136d4, 0x60151ec
.word 0xb6b8 @ 0x60151f0
.word 0x1d46 @ 0x60151f4
.word 0x4804792 @ 0x60151f8
.word 0x48080ae @ 0x60151fc
.word 0x4804aa0 @ 0x6015200
.word 0x4804334 @ 0x6015204
.word 0x601373c @ 0x6015208
.word 0x4804956 @ 0x601520c
.word 0x48050c2 @ 0x6015210
.word 0x48045d8 @ 0x6015214
.word 0x4804232 @ 0x6015218
.word 0x4804000 @ 0x601521c
.word 0x4804bfa @ 0x6015220
.arm
Function_6015224: @ 6015224 :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r1, [pc, #0x2c0] @ [0x60154f0] (=0x380fff4)
	mvn     r0, #0x0
	ldr     r4, [r1]
	add     r7, r4, #95, 30 @ #0x17c
	ldr     r5, [r7, #0x48]
	add     r6, r4, #209, 30 @ #0x344
	cmp     r5, r0
	beq     branch_60154e8
	ldrh    r0, [r6, #0x8]
	cmp     r0, #0x40
	beq     branch_6015264
	mov     r1, r5
	add     r0, r7, #0x48
	bl      Function_6009140
	b       branch_60154e8
@ 0x6015264

.arm
branch_6015264: @ 6015264 :arm
	ldrh    r0, [r5, #0x24]
	mov     r0, r0, lsl #23
	movs    r0, r0, lsr #31
	beq     branch_601527c
	ldrh    r0, [r5, #0x34]
	b       branch_6015280
@ 0x601527c

.arm
branch_601527c: @ 601527c :arm
	ldrh    r0, [r5, #0x28]
.arm
branch_6015280: @ 6015280 :arm
	tst     r0, #0x1
	ldrne   r0, [r4, #0x568]
	mov     r9, #0x1
	addne   r0, r0, #0x1
	strne   r0, [r4, #0x568]
	ldreq   r0, [r4, #0x564]
	addeq   r0, r0, #0x1
	streq   r0, [r4, #0x564]
	ldrh    r0, [r5, #0x18]
	ldr     r2, [r4, #0x560]
	and     r1, r0, #0xf0
	mov     r0, r1, asr #3
	add     r0, r1, r0, lsr #28
	mov     r0, r0, asr #4
	sub     r0, r0, #0x1
	add     r0, r2, r0
	str     r0, [r4, #0x560]
	ldrh    r2, [r6, #0xc]
	cmp     r2, #0x1
	beq     branch_60152e0
	cmp     r2, #0x2
	cmpne   r2, #0x3
	beq     branch_60153bc
	b       branch_601545c
@ 0x60152e0

.arm
branch_60152e0: @ 60152e0 :arm
	ldrh    r0, [r5, #0x24]
	tst     r0, #0x1
	bne     branch_601545c
	add     r0, r5, #0x2e
	bl      Function_600e1a8
	mov     r8, r0
	cmp     r8, #0xff
	beq     branch_601530c
	bl      Function_600e888
	cmp     r0, #0x40
	beq     branch_6015370
.arm
branch_601530c: @ 601530c :arm
	mov     r0, r8
	bl      Function_600e888
	cmp     r0, #0x30
	add     r0, r5, #0x2e
	bne     branch_6015340
	mov     r1, #0xa0
	bl      Function_6014d84
	cmp     r0, #0x0
	bne     branch_601545c
	add     r0, r5, #0x2e
	mov     r1, #0x7
	bl      Function_6014434
	b       branch_6015360
@ 0x6015340

.arm
branch_6015340: @ 6015340 :arm
	mov     r1, #0xc0
	bl      Function_6014d84
	cmp     r0, #0x0
	bne     branch_601545c
	add     r0, r5, #0x2e
	mov     r1, #0x7
	mov     r2, #0x1
	bl      Function_6014c4c
.arm
branch_6015360: @ 6015360 :arm
	cmp     r0, #0x0
	beq     branch_601545c
	bl      Function_6013e0c
	b       branch_601545c
@ 0x6015370

.arm
branch_6015370: @ 6015370 :arm
	ldrh    r1, [r5, #0x24]
	mov     r0, r8, lsl #16
	mov     r1, r1, lsl #19
	mov     r0, r0, lsr #16
	mov     r1, r1, lsr #31
	bl      Function_600e5f4
	mov     r0, r8
	bl      Function_600e928
	ldrh    r1, [r5, #0x3a]
	cmp     r1, r0
	ldreq   r0, [r4, #0x578]
	addeq   r0, r0, #0x1
	streq   r0, [r4, #0x578]
	beq     branch_601545c
	add     r0, r5, #0x28
	add     r1, r5, #0x34
	bl      Function_600a924
	mov     r9, #0x0
	b       branch_601545c
@ 0x60153bc

.arm
branch_60153bc: @ 60153bc :arm
	ldrh    r1, [r5, #0x24]
	tst     r1, #0x1
	bne     branch_601545c
	ldrh    r0, [r6, #0xe]
	cmp     r0, #0x0
	beq     branch_6015428
	tst     r1, #2, 20 @ #0x2000
	bne     branch_6015428
	ldrh    r0, [r5, #0x28]
	tst     r0, #0x1
	ldrneh  r0, [r6, #0x8e]
	bicne   r0, r0, #0x1
	strneh  r0, [r6, #0x8e]
	bne     branch_6015404
	cmp     r2, #0x3
	ldrneh  r0, [r6, #0x8e]
	bicne   r0, r0, #0x2
	strneh  r0, [r6, #0x8e]
.arm
branch_6015404: @ 6015404 :arm
	ldrh    r0, [r6, #0x8e]
	cmp     r0, #0x0
	ldreqh  r0, [r7, #0x20]
	cmpeq   r0, #0x0
	ldreqh  r0, [r7, #0x2c]
	cmpeq   r0, #0x0
	bne     branch_6015428
	mov     r0, #0x1
	bl      Function_600a454
.arm
branch_6015428: @ 6015428 :arm
	ldrh    r8, [r6, #0x88]
	mov     r0, r8
	bl      Function_600e928
	ldrh    r1, [r5, #0x3a]
	cmp     r1, r0
	ldreq   r0, [r4, #0x578]
	addeq   r0, r0, #0x1
	streq   r0, [r4, #0x578]
	beq     branch_601545c
	add     r0, r5, #0x2e
	add     r1, r5, #0x34
	bl      Function_600a924
	mov     r9, #0x0
.arm
branch_601545c: @ 601545c :arm
	cmp     r9, #0x0
	bne     branch_60154c4
	mov     r0, r8, lsl #16
	mov     r0, r0, lsr #16
	strh    r0, [r5, #0x12]
	ldrh    r1, [r5, #0x22]
	and     r1, r1, #0xff
	bl      Function_600e5d4
	ldrh    r1, [r5, #0x3a]
	mov     r0, r8
	bl      Function_600e6f4
	mov     r0, r8
	bl      Function_600e734
	ldrh    r1, [r5, #0x20]
	mov     r0, #6, 26 @ #0x180
	sub     r1, r1, #0x18
	strh    r1, [r5, #0x16]
	strh    r0, [r5, #0xc]
	ldrh    r0, [r5, #0x16]
	mov     r1, r5
	add     r0, r0, #0x2d
	mov     r2, r0, lsr #1
	add     r0, r7, #0x48
	strh    r2, [r5, #0xe]
	bl      Function_600f384
	b       branch_60154d0
@ 0x60154c4

.arm
branch_60154c4: @ 60154c4 :arm
	mov     r1, r5
	add     r0, r7, #0x48
	bl      Function_6009140
.arm
branch_60154d0: @ 60154d0 :arm
	ldrh    r0, [r7, #0x50]
	cmp     r0, #0x0
	beq     branch_60154e8
	mov     r0, #0x2
	mov     r1, #0x6
	bl      Function_6008f00
.arm
branch_60154e8: @ 60154e8 :arm
	ldmfd   sp!, {r3-r9,lr}
	bx      lr
@ 0x60154f0

.word 0x380fff4 @ 0x60154f0
.arm
Function_60154f4: @ 60154f4 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r1, [pc, #0x160] @ [0x6015660] (=0x380fff4)
	mov     r6, r0
	ldr     r0, [r1]
	add     r4, r0, #209, 30 @ #0x344
	ldrh    r1, [r4, #0x8]
	add     r0, r0, #0xdc
	cmp     r1, #0x40
	add     r5, r0, #1, 22 @ #0x400
	movne   r0, #0x1
	bne     branch_6015658
	add     r0, r6, #0x1e
	add     r1, r4, #0x64
	bl      Function_600acc0
	cmp     r0, #0x0
	beq     branch_6015548
	add     r0, r6, #0x24
	add     r1, r4, #0x82
	bl      Function_600acc0
	cmp     r0, #0x0
	bne     branch_6015550
.arm
branch_6015548: @ 6015548 :arm
	mov     r0, #0x1
	b       branch_6015658
@ 0x6015550

.arm
branch_6015550: @ 6015550 :arm
	ldrh    r0, [r4, #0x6a]
	mov     r1, #0x1
	mov     r0, r1, lsl r0
	ldrh    r1, [r6, #0x2e]
	mov     r0, r0, lsl #16
	tst     r1, r0, lsr #16
	moveq   r0, #0x0
	movne   r0, #2, 20 @ #0x2000
	strh    r0, [r5, #0x6]
	ldr     r0, [pc, #0xe8] @ [0x6015664] (=0x4808098)
	ldrh    r0, [r0]
	tst     r0, #2, 18 @ #0x8000
	beq     branch_60155a8
	mov     r0, r0, lsl #17
	mov     r0, r0, lsr #16
	add     r0, r0, #18, 10 @ #0x4800000
	add     r0, r0, #1, 18 @ #0x4000
	ldrh    r0, [r0, #0x4]
	cmp     r0, #0x0
	ldrneh  r0, [r5, #0x6]
	orrne   r0, r0, #1, 18 @ #0x4000
	strneh  r0, [r5, #0x6]
.arm
branch_60155a8: @ 60155a8 :arm
	ldrh    r0, [r4, #0x88]
	bl      Function_600e734
	ldrh    r1, [r6, #0x10]
	ldr     r0, [pc, #0xac] @ [0x6015668] (=0x182)
	sub     r1, r1, #0x1c
	strh    r1, [r6, #0x6]
	sub     r1, r6, #0x10
	strh    r0, [r1, #0xc]
	ldrh    r2, [r6, #0x6]
	mov     r0, #0x0
	add     r2, r2, #0x31
	mov     r2, r2, lsr #1
	strh    r2, [r1, #0xe]
	ldrh    r2, [r1, #0x3e]
	b       branch_60155f4
@ 0x60155e4

.arm
branch_60155e4: @ 60155e4 :arm
	tst     r2, #0x1
	mov     r2, r2, lsl #15
	addne   r0, r0, #0x1
	mov     r2, r2, lsr #16
.arm
branch_60155f4: @ 60155f4 :arm
	cmp     r2, #0x0
	bne     branch_60155e4
	ldr     r2, [pc, #0x68] @ [0x601566c] (=0x4808094)
	ldrh    r3, [r5, #0x6]
	ldrh    r4, [r2]
	ldrh    r2, [r2, #0x4]
	ldrh    r5, [r1, #0x18]
	and     r2, r2, #2, 18 @ #0x8000
	and     r4, r4, #2, 18 @ #0x8000
	orr     r2, r3, r2, asr #4
	orr     r2, r2, r4, asr #3
	orr     r2, r5, r2
	strh    r2, [r1, #0x18]
	ldrh    r2, [r1, #0x3c]
	ldrh    r3, [r1, #0x1c]
	add     r2, r2, #0xa
	mul     r2, r0, r2
	add     r0, r2, #0xfc
	add     r2, r3, r0, lsr #4
	ldr     r0, [pc, #0x18] @ [0x6015660] (=0x380fff4)
	strh    r2, [r1, #0x1a]
	ldr     r0, [r0]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600f384
	mov     r0, #0x0
.arm
branch_6015658: @ 6015658 :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6015660

.word 0x380fff4 @ 0x6015660
.word 0x4808098 @ 0x6015664
.word 0x182 @ 0x6015668
.word 0x4808094 @ 0x601566c
.arm
Function_6015670: @ 6015670 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r1, [pc, #0x19c] @ [0x6015818] (=0x380fff4)
	mov     r7, r0
	ldr     r1, [r1]
	add     r0, r1, #0x2c
	add     r5, r0, #1, 22 @ #0x400
	ldrh    r0, [r5, #0x3c]
	ldr     r4, [r5, #0x90]
	cmp     r0, #0x0
	beq     branch_6015810
	add     r0, r7, #0x18
	add     r1, r1, #234, 30 @ #0x3a8
	bl      Function_600acc0
	cmp     r0, #0x0
	beq     branch_6015810
	ldrh    r1, [r7, #0x10]
	ldrh    r0, [r4, #0x16]
	sub     r1, r1, #0x18
	sub     r0, r0, #0x8
	cmp     r1, r0
	bgt     branch_6015810
	add     r0, r7, #0x1e
	bl      Function_600e1a8
	mov     r6, r0
	cmp     r6, #0xff
	beq     branch_60156ec
	cmp     r6, #0x0
	beq     branch_6015728
	bl      Function_600e888
	cmp     r0, #0x40
	beq     branch_6015728
.arm
branch_60156ec: @ 60156ec :arm
	add     r0, r7, #0x1e
	mov     r1, #0xc0
	bl      Function_6014d84
	cmp     r0, #0x0
	bne     branch_6015810
	add     r0, r7, #0x1e
	mov     r1, #0x7
	mov     r2, #0x0
	bl      Function_6014c4c
	cmp     r0, #0x0
	beq     branch_6015810
	mov     r1, #0x2
	strh    r1, [r0]
	bl      Function_6013e0c
	b       branch_6015810
@ 0x6015728

.arm
branch_6015728: @ 6015728 :arm
	cmp     r6, #0x0
	beq     branch_6015810
	ldrh    r1, [r7, #0x14]
	mov     r0, r6, lsl #16
	mov     r1, r1, lsl #19
	mov     r0, r0, lsr #16
	mov     r1, r1, lsr #31
	bl      Function_600e5f4
	mov     r0, r6
	bl      Function_600e734
	mov     r0, r6
	bl      Function_600e974
	mov     r1, #0x1
	mov     r0, r1, lsl r0
	mov     r0, r0, lsl #16
	ldrh    r1, [r5, #0x9a]
	mov     r2, r0, lsr #16
	tst     r2, r1
	bne     branch_6015810
	ldrh    r0, [r5, #0x98]
	tst     r2, r0
	beq     branch_6015810
	orr     r0, r1, r2
	strh    r0, [r5, #0x9a]
	ldrh    r1, [r4, #0x10]
	mvn     r0, r2
	and     r1, r1, r0
	mov     r0, r2, lsl #15
	strh    r1, [r4, #0x10]
	add     r6, r4, #0x1a
	mov     r1, r0, lsr #16
	b       branch_60157c0
@ 0x60157a8

.arm
branch_60157a8: @ 60157a8 :arm
	ldrh    r0, [r5, #0x98]
	tst     r1, r0
	ldrneh  r0, [r4, #0x16]
	addne   r6, r6, r0
	mov     r0, r1, lsl #15
	mov     r1, r0, lsr #16
.arm
branch_60157c0: @ 60157c0 :arm
	cmp     r1, #0x1
	bne     branch_60157a8
	ldrh    r1, [r7, #0x10]
	add     r0, r6, #0x3
	sub     r1, r1, #0x18
	strh    r1, [r6]
	ldrh    r1, [r7, #0x12]
	and     r1, r1, #0xff
	bl      Function_600b9e0
	ldrh    r1, [r7, #0xe]
	add     r0, r6, #0x2
	and     r1, r1, #0xff
	bl      Function_600b9e0
	ldrh    r2, [r6]
	cmp     r2, #0x0
	beq     branch_6015810
	add     r0, r7, #0x2c
	add     r1, r6, #0x8
	add     r2, r2, #0x1
	bl      Function_6001ae0
.arm
branch_6015810: @ 6015810 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6015818

.word 0x380fff4 @ 0x6015818
.arm
Function_601581c: @ 601581c :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0xbc] @ [0x60158e4] (=0x380fff4)
	mov     r4, r0
	ldr     r1, [r1]
	add     r0, r1, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x4c]
	add     r5, r1, #209, 30 @ #0x344
	cmp     r0, #0x40
	movne   r0, #0x1
	bne     branch_60158dc
	add     r0, r4, #0x1e
	add     r1, r5, #0x64
	bl      Function_600acc0
	cmp     r0, #0x0
	beq     branch_601586c
	add     r0, r4, #0x24
	add     r1, r5, #0x82
	bl      Function_600acc0
	cmp     r0, #0x0
	bne     branch_6015874
.arm
branch_601586c: @ 601586c :arm
	mov     r0, #0x1
	b       branch_60158dc
@ 0x6015874

.arm
branch_6015874: @ 6015874 :arm
	ldrh    r1, [r4, #0x10]
	ldr     r0, [pc, #0x68] @ [0x60158e8] (=0x185)
	sub     r1, r1, #0x1c
	strh    r1, [r4, #0x6]
	sub     r1, r4, #0x10
	strh    r0, [r1, #0xc]
	mov     r0, #0x18
	strh    r0, [r1, #0xe]
	ldr     r4, [pc, #0x48] @ [0x60158e4] (=0x380fff4)
	ldr     r2, [pc, #0x4c] @ [0x60158ec] (=0x4808094)
	ldr     r0, [r4]
	ldrh    r12, [r2]
	add     r0, r0, #1, 22 @ #0x400
	ldrh    r2, [r2, #0x4]
	ldrh    r3, [r0, #0xe2]
	and     r0, r2, #2, 18 @ #0x8000
	ldrh    lr, [r1, #0x18]
	and     r2, r12, #2, 18 @ #0x8000
	orr     r0, r3, r0, asr #4
	orr     r0, r0, r2, asr #3
	orr     r0, lr, r0
	strh    r0, [r1, #0x18]
	ldr     r0, [r4]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_600f384
	mov     r0, #0x0
.arm
branch_60158dc: @ 60158dc :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x60158e4

.word 0x380fff4 @ 0x60158e4
.word 0x185 @ 0x60158e8
.word 0x4808094 @ 0x60158ec
.arm
Function_60158f0: @ 60158f0 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x44
	ldr     r1, [pc, #0x618] @ [0x6015f18] (=0x380fff4)
	mov     r10, r0
	ldr     r3, [r1]
	add     r0, r10, #0x1e
	ldr     r2, [r3, #0x570]
	add     r1, r3, #0x4
	add     r2, r2, #0x1
	str     r2, [r3, #0x570]
	add     r4, r3, #209, 30 @ #0x344
	add     r5, r1, #1, 22 @ #0x400
	add     r6, r3, #199, 30 @ #0x31c
	add     r7, r3, #95, 30 @ #0x17c
	bl      Function_600e250
	mov     r8, r0
	mov     r0, r8, lsl #16
	mov     r0, r0, lsr #16
	strh    r0, [r10, #0x2]
	cmp     r8, #0xff
	beq     branch_6015f0c
	ldrh    r1, [r10, #0x12]
	bl      Function_600e5d4
	ldrh    r9, [r10, #0x6]
	cmp     r9, #0xc
	bls     branch_6015f0c
	add     r1, sp, #0x18
	mov     r0, #0x0
	mov     r2, #0x2c
	bl      Function_600a9f0
	add     r2, r10, #0x38
	sub     r1, r9, #0xc
	mov     r0, #0x2
	str     r2, [sp, #0x18]
	strh    r1, [sp, #0x20]
	strh    r0, [sp, #0x22]
	ldrh    r0, [r4, #0x1e]
	cmp     r0, #0x0
	ldreqh  r0, [sp, #0x22]
	orreq   r0, r0, #0x1
	streqh  r0, [sp, #0x22]
	mov     r0, #0x38
	strh    r0, [sp, #0x24]
	ldrh    r1, [r10, #0x8]
	add     r0, sp, #0x18
	strh    r1, [sp, #0x1c]
	ldrh    r1, [r10, #0x36]
	strh    r1, [sp, #0x1e]
	bl      Function_6016cc0
	ldr     r9, [sp, #0x38]
	cmp     r9, #0x0
	beq     branch_60159ec
	ldrh    r0, [r10, #0x16]
	tst     r0, #2, 18 @ #0x8000
	beq     branch_60159ec
	add     r0, r9, #0x6
	bl      Function_600ba0c
	mov     r11, r0
	add     r0, r9, #0x7
	bl      Function_600ba0c
	ldr     r1, [pc, #0x534] @ [0x6015f1c] (=0x480810c)
	add     r0, r11, r0, lsl #8
	strh    r0, [r1]
.arm
branch_60159ec: @ 60159ec :arm
	ldrh    r1, [r5]
	cmp     r1, #0x13
	ldreq   r0, [r5, #0x18]
	ldreqh  r0, [r0, #0x38]
	cmpeq   r0, #0x1
	bne     branch_6015a24
	ldrh    r0, [sp, #0x22]
	and     r0, r0, #0x9
	cmp     r0, #0x9
	bne     branch_6015ef4
	add     r1, sp, #0x18
	mov     r0, r10
	bl      Function_60162a0
	b       branch_6015ef4
@ 0x6015a24

.arm
branch_6015a24: @ 6015a24 :arm
	ldrh    r0, [sp, #0x22]
	tst     r0, #0x8
	beq     branch_6015ef4
	cmp     r1, #0x21
	bne     branch_6015bac
	bl      Function_600b89c
	ldrh    r0, [sp, #0x22]
	and     r0, r0, #0x30
	cmp     r0, #0x30
	movne   r0, #0xc
	strneh  r0, [r5, #0x4]
	movne   r0, #0xa
	strneh  r0, [r5, #0x6]
	bne     branch_6015b88
	ldrh    r0, [r10, #0x34]
	cmp     r0, #250, 30 @ #0x3e8
	movhi   r0, #0xc
	strhih  r0, [r5, #0x4]
	movhi   r0, #0x1
	strhih  r0, [r5, #0x6]
	bhi     branch_6015b88
	mov     r1, #0x0
	strh    r1, [r5, #0x4]
	ldrh    r0, [sp, #0x24]
	tst     r0, #0x2
	beq     branch_6015aa0
	ldrh    r0, [sp, #0x22]
	tst     r0, #0x2
	bne     branch_6015aa0
	ldrh    r0, [sp, #0x2a]
	bl      Function_600a0a0
.arm
branch_6015aa0: @ 6015aa0 :arm
	ldrh    r1, [sp, #0x2e]
	mov     r0, r8
	bl      Function_600e6d4
	ldrh    r0, [r4, #0xc]
	cmp     r0, #0x2
	bne     branch_6015b30
	ldr     r9, [sp, #0x40]
	cmp     r9, #0x0
	beq     branch_6015b18
	add     r0, r9, #0x6
	bl      Function_600ba0c
	mov     r11, r0
	add     r0, r9, #0x7
	bl      Function_600ba0c
	add     r0, r11, r0, lsl #8
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x1
	bl      Function_6009950
	ldr     r0, [sp, #0x40]
	add     r0, r0, #0x8
	bl      Function_600ba0c
	ldr     r1, [sp, #0x40]
	mov     r9, r0
	add     r0, r1, #0x9
	bl      Function_600ba0c
	add     r1, r9, r0, lsl #8
	ldr     r0, [pc, #0x40c] @ [0x6015f20] (=0x380fff0)
	strh    r1, [r0]
	b       branch_6015b30
@ 0x6015b18

.arm
branch_6015b18: @ 6015b18 :arm
	ldr     r0, [pc, #0x404] @ [0x6015f24] (=0xffff)
	mov     r1, #0x1
	bl      Function_6009950
	ldr     r0, [pc, #0x3f4] @ [0x6015f20] (=0x380fff0)
	mov     r1, #0x0
	strh    r1, [r0]
.arm
branch_6015b30: @ 6015b30 :arm
	ldr     r0, [sp, #0x3c]
	add     r0, r0, #0x3
	bl      Function_600ba0c
	bl      Function_6009ed8
	ldr     r0, [sp, #0x3c]
	add     r0, r0, #0x2
	bl      Function_600ba0c
	strh    r0, [r4, #0x76]
	ldrh    r0, [r10, #0x34]
	bl      Function_6009e80
	mov     r0, #0x1
	strh    r0, [r4, #0x12]
	strh    r0, [r4, #0x1a]
	ldrh    r0, [r4, #0xc]
	cmp     r0, #0x2
	ldreq   r0, [pc, #0x3b4] @ [0x6015f28] (=0x4808048)
	moveq   r1, #0x3
	streqh  r1, [r0]
	ldr     r1, [pc, #0x3ac] @ [0x6015f2c] (=0x4808038)
	ldrh    r0, [r1]
	orr     r0, r0, #0x1
	strh    r0, [r1]
.arm
branch_6015b88: @ 6015b88 :arm
	ldr     r0, [r5, #0x1c]
	add     r1, r10, #0x1e
	add     r0, r0, #0x8
	bl      Function_600a924
	mov     r2, #0x25
	mov     r0, #0x2
	mov     r1, #0x1
	strh    r2, [r5]
	bl      Function_6008f00
.arm
branch_6015bac: @ 6015bac :arm
	ldrh    r0, [r4, #0xc]
	cmp     r0, #0x2
	beq     branch_6015bc4
	cmp     r0, #0x3
	beq     branch_6015c7c
	b       branch_6015edc
@ 0x6015bc4

.arm
branch_6015bc4: @ 6015bc4 :arm
	ldr     r9, [sp, #0x40]
	cmp     r9, #0x0
	beq     branch_6015c7c
	add     r0, r9, #0x6
	bl      Function_600ba0c
	mov     r5, r0
	add     r0, r9, #0x7
	bl      Function_600ba0c
	add     r0, r5, r0, lsl #8
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x0
	bl      Function_6009950
	ldr     r0, [sp, #0x40]
	add     r0, r0, #0x8
	bl      Function_600ba0c
	ldr     r1, [sp, #0x40]
	mov     r5, r0
	add     r0, r1, #0x9
	bl      Function_600ba0c
	ldr     r1, [pc, #0x304] @ [0x6015f20] (=0x380fff0)
	add     r0, r5, r0, lsl #8
	strh    r0, [r1]
	ldr     r0, [sp, #0x40]
	add     r0, r0, #0x1
	bl      Function_600ba0c
	sub     r0, r0, #0x8
	strh    r0, [r4, #0xa0]
	ldrh    r2, [r4, #0xa0]
	cmp     r2, #0x0
	beq     branch_6015c7c
	ldr     r0, [sp, #0x40]
	ldr     r1, [r4, #0x9c]
	tst     r0, #0x1
	beq     branch_6015c68
	add     r0, r0, #0x9
	add     r2, r2, #0x2
	bl      Function_6001ae0
	mov     r0, #0x1
	strh    r0, [r4, #0xa2]
	b       branch_6015c7c
@ 0x6015c68

.arm
branch_6015c68: @ 6015c68 :arm
	add     r0, r0, #0xa
	add     r2, r2, #0x1
	bl      Function_6001ae0
	mov     r0, #0x0
	strh    r0, [r4, #0xa2]
.arm
branch_6015c7c: @ 6015c7c :arm
	mov     r1, #0x0
	mov     r0, r8
	strh    r1, [r4, #0x80]
	bl      Function_600e734
	add     r1, r10, #0x2c
	add     r0, sp, #0x10
	ldmia   r1, {r2,r3}
	stmia   r0, {r2,r3}
	ldrh    r0, [r4, #0x6e]
	mov     r5, #0x0
	mov     r8, r0, lsl #10
	ldr     r0, [sp, #0x10]
	ldr     r1, [sp, #0x14]
	mov     r2, r8
	mov     r3, r5
	bl      Function_600b1c8
	adds    r11, r0, #0x1
	umull   r3, r0, r11, r8
	adc     r9, r1, #0x0
	mla     r0, r11, r5, r0
	mla     r0, r9, r8, r0
	add     r2, sp, #0x10
	str     r0, [sp, #0x14]
	ldr     r1, [pc, #0x250] @ [0x6015f30] (=0x48080f6)
	ldrh    r0, [r2, #0x6]
	str     r3, [sp, #0x10]
	strh    r0, [r1]
	ldrh    r0, [r2, #0x4]
	strh    r0, [r1, #-0x2]
	ldrh    r0, [r2, #0x2]
	strh    r0, [r1, #-0x4]
	ldrh    r0, [r2]
	orr     r0, r0, #0x1
	strh    r0, [r1, #-0x6]
	ldrh    r0, [r4, #0xc]
	cmp     r0, #0x2
	bne     branch_6015de4
	ldrh    r0, [r4, #0x1a]
	cmp     r0, #0x0
	beq     branch_6015de4
	ldr     r1, [sp, #0x10]
	ldr     r0, [sp, #0x14]
	subs    r1, r1, r8
	sbc     r0, r0, r5
	str     r1, [sp, #0x10]
	str     r0, [sp, #0x14]
	bl      Function_6000720
	ldr     r1, [pc, #0x1f4] @ [0x6015f34] (=0x48080f8)
	ldrh    r12, [r1]
	ldrh    r11, [r1, #0x2]
	ldrh    r9, [r1, #0x4]
	ldrh    r8, [r1, #0x6]
	ldrh    r5, [r1]
	ldrh    r3, [r1, #0x2]
	ldrh    r2, [r1, #0x4]
	ldrh    r1, [r1, #0x6]
	strh    r12, [sp, #0x8]
	strh    r5, [sp]
	strh    r11, [sp, #0xa]
	strh    r9, [sp, #0xc]
	strh    r8, [sp, #0xe]
	strh    r3, [sp, #0x2]
	strh    r2, [sp, #0x4]
	strh    r1, [sp, #0x6]
	bl      Function_6000740
	ldrh    r1, [sp, #0x8]
	ldrh    r0, [sp]
	cmp     r1, r0
	bcs     branch_6015da8
	ldr     r2, [sp, #0x8]
	ldr     r0, [sp, #0x10]
	ldr     r1, [sp, #0xc]
	subs    r2, r2, r0
	ldr     r0, [sp, #0x14]
	b       branch_6015dbc
@ 0x6015da8

.arm
branch_6015da8: @ 6015da8 :arm
	ldr     r2, [sp]
	ldr     r0, [sp, #0x10]
	ldr     r1, [sp, #0x4]
	subs    r2, r2, r0
	ldr     r0, [sp, #0x14]
.arm
branch_6015dbc: @ 6015dbc :arm
	sbc     r0, r1, r0
	mov     r2, r2, lsr #10
	orr     r2, r2, r0, lsl #22
	ldrh    r1, [r6, #0x20]
	ldr     r0, [pc, #0x164] @ [0x6015f38] (=0x4808134)
	cmp     r2, r1
	subcc   r1, r1, r2
	strcch  r1, [r0]
	movcs   r1, #0x0
	strcsh  r1, [r0]
.arm
branch_6015de4: @ 6015de4 :arm
	ldrh    r0, [r4, #0x8]
	cmp     r0, #0x40
	bne     branch_6015edc
	ldr     r1, [sp, #0x3c]
	cmp     r1, #0x0
	beq     branch_6015edc
	ldrh    r0, [r4, #0xe]
	cmp     r0, #0x1
	bne     branch_6015edc
	add     r0, r1, #0x2
	bl      Function_600ba0c
	ldrh    r1, [r4, #0x76]
	cmp     r1, r0
	strneh  r0, [r4, #0x76]
	mov     r1, #0x0
	strh    r1, [r4, #0x8e]
	cmp     r0, #0x0
	bne     branch_6015e48
	ldr     r0, [sp, #0x3c]
	add     r0, r0, #0x4
	bl      Function_600ba0c
	tst     r0, #0x1
	ldrneh  r0, [r4, #0x8e]
	orrne   r0, r0, #0x1
	strneh  r0, [r4, #0x8e]
.arm
branch_6015e48: @ 6015e48 :arm
	ldr     r0, [sp, #0x3c]
	add     r0, r0, #0x4
	bl      Function_600ba0c
	ldr     r1, [sp, #0x3c]
	and     r8, r0, #0xfe
	add     r0, r1, #0x1
	mov     r5, r8, lsl #3
	bl      Function_600ba0c
	ldrh    r1, [r4, #0x6a]
	add     r0, r8, r0
	cmp     r1, r8, lsl #3
	sub     r0, r0, #0x3
	bcc     branch_6015eb8
	cmp     r1, r0, lsl #3
	bhi     branch_6015eb8
	ldr     r0, [sp, #0x3c]
	sub     r5, r1, r5
	add     r0, r0, #0x5
	add     r0, r0, r5, lsr #3
	bl      Function_600ba0c
	and     r1, r5, #0x7
	mov     r2, #0x1
	tst     r0, r2, lsl r1
	beq     branch_6015eb8
	ldrh    r0, [r4, #0x8e]
	orr     r0, r0, #0x2
	strh    r0, [r4, #0x8e]
	bl      Function_6013e98
.arm
branch_6015eb8: @ 6015eb8 :arm
	ldrh    r0, [r7, #0x20]
	cmp     r0, #0x0
	ldreqh  r0, [r7, #0x2c]
	cmpeq   r0, #0x0
	ldreqh  r0, [r4, #0x8e]
	cmpeq   r0, #0x0
	bne     branch_6015edc
	mov     r0, #0x1
	bl      Function_600a454
.arm
branch_6015edc: @ 6015edc :arm
	ldrh    r0, [r6, #0x1e]
	mov     r0, r0, lsl #25
	movs    r0, r0, lsr #31
	beq     branch_6015ef4
	mov     r0, r10
	bl      Function_6010d1c
.arm
branch_6015ef4: @ 6015ef4 :arm
	ldr     r2, [sp, #0x34]
	cmp     r2, #0x0
	beq     branch_6015f0c
	ldrh    r0, [sp, #0x2a]
	mov     r1, r10
	bl      Function_6017d54
.arm
branch_6015f0c: @ 6015f0c :arm
	add     sp, sp, #0x44
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x6015f18

.word 0x380fff4 @ 0x6015f18
.word 0x480810c @ 0x6015f1c
.word 0x380fff0 @ 0x6015f20
.word 0xffff @ 0x6015f24
.word 0x4808048 @ 0x6015f28
.word 0x4808038 @ 0x6015f2c
.word 0x48080f6 @ 0x6015f30
.word 0x48080f8 @ 0x6015f34
.word 0x4808134 @ 0x6015f38
.arm
Function_6015f3c: @ 6015f3c :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0xd0] @ [0x6016018] (=0x380fff4)
	mov     r4, r0
	ldr     r0, [r1]
	ldrh    r5, [r4, #0x2]
	add     r1, r0, #209, 30 @ #0x344
	ldrh    r0, [r1, #0xc]
	cmp     r0, #0x1
	beq     branch_6015f70
	cmp     r0, #0x2
	cmpne   r0, #0x3
	beq     branch_6015fd8
	b       branch_6016010
@ 0x6015f70

.arm
branch_6015f70: @ 6015f70 :arm
	mov     r0, r5
	bl      Function_600e888
	cmp     r0, #0x40
	bne     branch_6015fa8
	mov     r0, r5, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x30
	bl      Function_600e4ec
	ldrh    r1, [r4, #0x2c]
	add     r0, r4, #0x1e
	bl      Function_6010bcc
	mov     r0, r5
	bl      Function_6013af0
	b       branch_6016010
@ 0x6015fa8

.arm
branch_6015fa8: @ 6015fa8 :arm
	cmp     r0, #0x30
	add     r0, r4, #0x1e
	mov     r1, #0x7
	bne     branch_6015fc0
	bl      Function_6014434
	b       branch_6015fc8
@ 0x6015fc0

.arm
branch_6015fc0: @ 6015fc0 :arm
	mov     r2, #0x1
	bl      Function_6014c4c
.arm
branch_6015fc8: @ 6015fc8 :arm
	cmp     r0, #0x0
	beq     branch_6016010
	bl      Function_6013e0c
	b       branch_6016010
@ 0x6015fd8

.arm
branch_6015fd8: @ 6015fd8 :arm
	ldrh    r0, [r1, #0x8]
	cmp     r0, #0x40
	bne     branch_6016010
	add     r0, r4, #0x1e
	add     r1, r1, #0x82
	bl      Function_600acc0
	cmp     r0, #0x0
	beq     branch_6016010
	mov     r0, #0x30
	bl      Function_600a880
	bl      Function_600a7dc
	ldrh    r1, [r4, #0x2c]
	add     r0, r4, #0x1e
	bl      Function_6010bcc
.arm
branch_6016010: @ 6016010 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6016018

.word 0x380fff4 @ 0x6016018
.arm
Function_601601c: @ 601601c :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0x2c
	ldr     r1, [pc, #0x1b8] @ [0x60161e4] (=0x380fff4)
	mov     r7, r0
	ldr     r0, [r1]
	ldrh    r5, [r7, #0x6]
	add     r4, r0, #199, 30 @ #0x31c
	cmp     r5, #0x4
	bls     branch_60161d8
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x50]
	cmp     r0, #0x1
	bne     branch_60161d8
	add     r0, r7, #0x1e
	mov     r1, #0x10
	bl      Function_6014d84
	cmp     r0, #0x0
	bne     branch_60161d8
	ldrh    r6, [r7, #0x2]
	cmp     r6, #0x0
	beq     branch_6016080
	mov     r0, r6
	bl      Function_600e888
	cmp     r0, #0x30
	bcs     branch_60160b4
.arm
branch_6016080: @ 6016080 :arm
	add     r0, r7, #0x1e
	mov     r1, #0xc0
	bl      Function_6014d84
	cmp     r0, #0x0
	bne     branch_60161d8
	add     r0, r7, #0x1e
	mov     r1, #0x6
	mov     r2, #0x1
	bl      Function_6014c4c
	cmp     r0, #0x0
	beq     branch_60161d8
	bl      Function_6013e0c
	b       branch_60161d8
@ 0x60160b4

.arm
branch_60160b4: @ 60160b4 :arm
	mov     r0, r6
	bl      Function_600e888
	cmp     r0, #0x40
	mov     r0, r6
	bne     branch_60160e0
	mov     r1, #0x30
	bl      Function_600e4ec
	add     r0, r7, #0x1e
	mov     r1, #0x1
	bl      Function_6010bcc
	b       branch_60160ec
@ 0x60160e0

.arm
branch_60160e0: @ 60160e0 :arm
	bl      Function_600e974
	cmp     r0, #0x0
	bne     branch_60161d8
.arm
branch_60160ec: @ 60160ec :arm
	add     r1, sp, #0x0
	mov     r0, #0x0
	mov     r2, #0x2c
	bl      Function_600a9f0
	add     r2, r7, #0x30
	sub     r1, r5, #0x4
	str     r2, [sp]
	strh    r1, [sp, #0x8]
	add     r0, sp, #0x0
	bl      Function_6016cc0
	ldrh    r1, [r7, #0x2c]
	ldr     r0, [pc, #0xc8] @ [0x60161e8] (=0xffc2)
	tst     r1, r0
	bne     branch_6016184
	mov     r0, r1, lsl #31
	movs    r0, r0, lsr #31
	beq     branch_6016184
	ldrh    r2, [r4, #0x18]
	cmp     r2, #0x0
	moveq   r0, r1, lsl #27
	moveq   r0, r0, lsr #31
	cmpeq   r0, #0x1
	beq     branch_6016184
	cmp     r2, #0x0
	beq     branch_6016160
	ldrh    r0, [r7, #0x2c]
	mov     r0, r0, lsl #27
	movs    r0, r0, lsr #31
	beq     branch_6016184
.arm
branch_6016160: @ 6016160 :arm
	ldrh    r0, [r4, #0x1e]
	mov     r0, r0, lsl #29
	mov     r0, r0, lsr #31
	cmp     r0, #0x1
	bne     branch_601618c
	ldrh    r0, [r7, #0x2c]
	mov     r0, r0, lsl #26
	movs    r0, r0, lsr #31
	bne     branch_601618c
.arm
branch_6016184: @ 6016184 :arm
	mov     r1, #0xa
	b       branch_60161c0
@ 0x601618c

.arm
branch_601618c: @ 601618c :arm
	mov     r0, r6
	bl      Function_600e6b4
	ldrh    r0, [sp, #0xa]
	tst     r0, #0x1
	moveq   r1, #0x1
	beq     branch_60161c0
	tst     r0, #0x4
	moveq   r1, #0x12
	beq     branch_60161c0
	ldrh    r1, [sp, #0x16]
	mov     r0, r6
	bl      Function_600e6d4
	mov     r1, #0x0
.arm
branch_60161c0: @ 60161c0 :arm
	ldr     r2, [sp, #0x1c]
	mov     r0, r6
	bl      Function_601460c
	cmp     r0, #0x0
	beq     branch_60161d8
	bl      Function_6013e0c
.arm
branch_60161d8: @ 60161d8 :arm
	add     sp, sp, #0x2c
	ldmfd   sp!, {r4-r7,lr}
	bx      lr
@ 0x60161e4

.word 0x380fff4 @ 0x60161e4
.word 0xffc2 @ 0x60161e8
.arm
Function_60161ec: @ 60161ec :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x2c
	mov     r4, r0
	add     r0, r4, #0x1e
	mov     r1, #0x50
	bl      Function_6014d84
	cmp     r0, #0x0
	bne     branch_6016290
	ldrh    r0, [r4, #0x24]
	tst     r0, #0x1
	bne     branch_6016224
	ldrh    r0, [r4, #0x8]
	tst     r0, #2, 18 @ #0x8000
	beq     branch_6016290
.arm
branch_6016224: @ 6016224 :arm
	add     r1, sp, #0x0
	mov     r0, #0x0
	mov     r2, #0x2c
	bl      Function_600a9f0
	add     r0, r4, #0x2c
	str     r0, [sp]
	ldrh    r1, [r4, #0x6]
	ldr     r0, [pc, #0x54] @ [0x601629c] (=0x380fff4)
	strh    r1, [sp, #0x8]
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x3a]
	mov     r0, r0, lsl #30
	movs    r0, r0, lsr #31
	moveq   r0, #2, 22 @ #0x800
	streqh  r0, [sp, #0xc]
	add     r0, sp, #0x0
	bl      Function_6016cc0
	ldrh    r0, [sp, #0xa]
	and     r0, r0, #0x1
	cmp     r0, #0x1
	bne     branch_6016290
	add     r0, r4, #0x1e
	bl      Function_601496c
	cmp     r0, #0x0
	beq     branch_6016290
	bl      Function_6013e0c
.arm
branch_6016290: @ 6016290 :arm
	add     sp, sp, #0x2c
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x601629c

.word 0x380fff4 @ 0x601629c
.arm
Function_60162a0: @ 60162a0 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x30
	ldr     r2, [pc, #0x3b8] @ [0x6016668] (=0x380fff4)
	mov     r7, r0
	ldr     r2, [r2]
	mov     r10, r1
	add     r0, r2, #1, 22 @ #0x400
	ldrh    r1, [r0, #0x4]
	add     r0, r2, #0x4
	cmp     r1, #0x13
	add     r4, r0, #1, 22 @ #0x400
	bne     branch_601665c
	ldr     r0, [r4, #0x18]
	ldr     r5, [r4, #0x1c]
	add     r8, r0, #0x4e
	mov     r6, #0x0
	b       branch_6016310
@ 0x60162e4

.arm
branch_60162e4: @ 60162e4 :arm
	mov     r0, r8
	add     r1, r7, #0x24
	bl      Function_600acc0
	cmp     r0, #0x0
	ldrneh  r1, [r5, #0x6]
	movne   r0, #0x1
	orrne   r0, r1, r0, lsl r6
	strneh  r0, [r5, #0x6]
	bne     branch_601665c
	add     r8, r8, #0x6
	add     r6, r6, #0x1
.arm
branch_6016310: @ 6016310 :arm
	ldr     r0, [r4, #0x18]
	ldrh    r0, [r0, #0x4c]
	cmp     r6, r0
	bcc     branch_60162e4
	add     r6, r5, #0xa
	mov     r8, #0x0
	b       branch_601634c
@ 0x601632c

.arm
branch_601632c: @ 601632c :arm
	add     r0, r7, #0x24
	add     r1, r6, #0x4
	bl      Function_600acc0
	cmp     r0, #0x0
	bne     branch_601665c
	ldrh    r0, [r6]
	add     r8, r8, #0x1
	add     r6, r6, r0, lsl #1
.arm
branch_601634c: @ 601634c :arm
	ldrh    r0, [r5, #0x8]
	cmp     r8, r0
	bcc     branch_601632c
	mov     r1, r6
	mov     r0, #0x0
	mov     r2, #0x40
	bl      Function_6000598
	ldrh    r8, [r7, #0x6]
	cmp     r8, #0xc
	bls     branch_601665c
	cmp     r10, #0x0
	bne     branch_60163c8
	add     r1, sp, #0x4
	mov     r0, #0x0
	mov     r2, #0x2c
	bl      Function_600a9f0
	add     r3, r7, #0x38
	sub     r2, r8, #0xc
	mov     r0, #0x38
	strh    r0, [sp, #0x10]
	mov     r1, #0x3
	str     r3, [sp, #0x4]
	strh    r2, [sp, #0xc]
	strh    r1, [sp, #0xe]
	ldrh    r1, [r7, #0x8]
	add     r0, sp, #0x4
	strh    r1, [sp, #0x8]
	ldrh    r1, [r7, #0x36]
	strh    r1, [sp, #0xa]
	bl      Function_6016cc0
	add     r10, sp, #0x4
.arm
branch_60163c8: @ 60163c8 :arm
	ldr     r0, [r10, #0x28]
	cmp     r0, #0x0
	ldreqh  r0, [r10, #0x1a]
	beq     branch_60163ec
	add     r0, r0, #0x1
	bl      Function_600ba0c
	sub     r0, r0, #0x8
	strh    r0, [r6, #0x3c]
	ldrh    r0, [r6, #0x3c]
.arm
branch_60163ec: @ 60163ec :arm
	add     r0, r0, #0x41
	mov     r0, r0, lsr #1
	strh    r0, [r6]
	ldrh    r0, [r10, #0xa]
	and     r0, r0, #0x1
	cmp     r0, #0x1
	bne     branch_6016650
	ldr     r0, [pc, #0x258] @ [0x6016668] (=0x380fff4)
	ldrh    r1, [r6]
	ldr     r0, [r0]
	add     r0, r0, #1, 22 @ #0x400
	ldrh    r0, [r0, #0x8]
	cmp     r0, r1
	bcc     branch_6016650
	ldrh    r1, [r7, #0x36]
	add     r0, r6, #0x4
	strh    r1, [r6, #0x2c]
	add     r1, r7, #0x24
	bl      Function_600a924
	ldrh    r0, [r7, #0x34]
	strh    r0, [r6, #0x32]
	ldrh    r0, [r7, #0x12]
	and     r0, r0, #0xff
	strh    r0, [r6, #0x2]
	ldr     r0, [r10, #0x28]
	cmp     r0, #0x0
	beq     branch_6016494
	mov     r7, #0x0
	add     r8, r6, #0x40
	b       branch_6016484
@ 0x6016464

.arm
branch_6016464: @ 6016464 :arm
	ldr     r0, [r10, #0x28]
	add     r0, r0, #0xa
	add     r0, r0, r7
	bl      Function_600ba0c
	mov     r1, r0
	add     r0, r8, r7
	bl      Function_600b9e0
	add     r7, r7, #0x1
.arm
branch_6016484: @ 6016484 :arm
	ldrh    r0, [r6, #0x3c]
	cmp     r7, r0
	bcc     branch_6016464
	b       branch_6016538
@ 0x6016494

.arm
branch_6016494: @ 6016494 :arm
	ldrh    r0, [r10, #0x18]
	strh    r0, [r6, #0x3e]
	ldrh    r0, [r10, #0x18]
	cmp     r0, #0x0
	beq     branch_6016538
	add     r7, r7, #0x38
	add     r11, r6, #0x40
	mov     r8, #0x0
	b       branch_601652c
@ 0x60164b8

.arm
branch_60164b8: @ 60164b8 :arm
	mov     r0, r7
	bl      Function_600ba0c
	mov     r9, r0
	add     r0, r7, #0x1
	bl      Function_600ba0c
	cmp     r9, #0x6
	bls     branch_6016524
	ldr     r1, [r10, #0x28]
	cmp     r7, r1
	beq     branch_6016524
	add     r0, r0, #0x2
	mov     r9, #0x0
	str     r0, [sp]
	b       branch_6016510
@ 0x60164f0

.arm
branch_60164f0: @ 60164f0 :arm
	mov     r0, r7
	bl      Function_600ba0c
	mov     r1, r0
	mov     r0, r11
	bl      Function_600b9e0
	add     r11, r11, #0x1
	add     r7, r7, #0x1
	add     r9, r9, #0x1
.arm
branch_6016510: @ 6016510 :arm
	ldr     r0, [sp]
	cmp     r9, r0
	bcc     branch_60164f0
	add     r8, r8, #0x1
	b       branch_601652c
@ 0x6016524

.arm
branch_6016524: @ 6016524 :arm
	add     r0, r0, #0x2
	add     r7, r7, r0
.arm
branch_601652c: @ 601652c :arm
	ldrh    r0, [r10, #0x18]
	cmp     r8, r0
	bcc     branch_60164b8
.arm
branch_6016538: @ 6016538 :arm
	ldr     r0, [r10, #0x1c]
	cmp     r0, #0x0
	beq     branch_601658c
	add     r0, r0, #0x1
	bl      Function_600ba0c
	strh    r0, [r6, #0xa]
	mov     r7, #0x0
	add     r8, r6, #0xc
	b       branch_601657c
@ 0x601655c

.arm
branch_601655c: @ 601655c :arm
	ldr     r0, [r10, #0x1c]
	add     r0, r0, #0x2
	add     r0, r0, r7
	bl      Function_600ba0c
	mov     r1, r0
	add     r0, r8, r7
	bl      Function_600b9e0
	add     r7, r7, #0x1
.arm
branch_601657c: @ 601657c :arm
	ldrh    r0, [r6, #0xa]
	cmp     r7, r0
	bcc     branch_601655c
	b       branch_60165b4
@ 0x601658c

.arm
branch_601658c: @ 601658c :arm
	mov     r9, #0x0
	strh    r9, [r6, #0xa]
	add     r8, r6, #0xc
	mov     r7, r9
.arm
branch_601659c: @ 601659c :arm
	mov     r1, r7
	add     r0, r8, r9
	bl      Function_600b9e0
	add     r9, r9, #0x1
	cmp     r9, #0x20
	bcc     branch_601659c
.arm
branch_60165b4: @ 60165b4 :arm
	ldrh    r0, [r10, #0x14]
	strh    r0, [r6, #0x2e]
	ldrh    r0, [r10, #0x16]
	strh    r0, [r6, #0x30]
	ldrh    r0, [r10, #0x12]
	strh    r0, [r6, #0x36]
	ldr     r0, [r10, #0x20]
	cmp     r0, #0x0
	beq     branch_60165e4
	add     r0, r0, #0x3
	bl      Function_600ba0c
	strh    r0, [r6, #0x38]
.arm
branch_60165e4: @ 60165e4 :arm
	ldr     r0, [r10, #0x24]
	cmp     r0, #0x0
	beq     branch_60165fc
	add     r0, r0, #0x3
	bl      Function_600ba0c
	strh    r0, [r6, #0x34]
.arm
branch_60165fc: @ 60165fc :arm
	ldrh    r1, [r5, #0x2]
	ldrh    r0, [r6]
	add     r0, r1, r0
	strh    r0, [r5, #0x2]
	ldrh    r0, [r5, #0x8]
	add     r0, r0, #0x1
	strh    r0, [r5, #0x8]
	ldrh    r1, [r4, #0x4]
	ldrh    r0, [r6]
	sub     r0, r1, r0
	strh    r0, [r4, #0x4]
	ldrh    r0, [r4, #0x4]
	cmp     r0, #0x20
	bcs     branch_601665c
	bl      Function_600b89c
	mov     r2, #0x15
	mov     r0, #0x2
	mov     r1, #0x0
	strh    r2, [r4]
	bl      Function_6008f00
	b       branch_601665c
@ 0x6016650

.arm
branch_6016650: @ 6016650 :arm
	ldr     r1, [pc, #0x14] @ [0x601666c] (=0x60184dc)
	add     r0, r6, #0x4
	bl      Function_600a924
.arm
branch_601665c: @ 601665c :arm
	add     sp, sp, #0x30
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x6016668

.word 0x380fff4 @ 0x6016668
.word 0x60184dc @ 0x601666c
.arm
Function_6016670: @ 6016670 :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r1, [pc, #0x580] @ [0x6016bfc] (=0x380fff4)
	mov     r10, r0
	ldr     r2, [r1]
	add     r0, r2, #6, 24 @ #0x600
	ldrh    r1, [r0, #0x90]
	add     r0, r2, #0x4
	tst     r1, #0x8
	add     r4, r2, #209, 30 @ #0x344
	add     r9, r0, #1, 22 @ #0x400
	beq     branch_6016710
	ldr     r1, [pc, #0x55c] @ [0x6016c00] (=0x48080b0)
	add     r0, r2, #0x2c
	ldrh    r2, [r1]
	add     r1, r0, #1, 22 @ #0x400
	tst     r2, #0x1
	ldrneh  r0, [r1]
	cmpne   r0, #0x0
	bne     branch_6016710
	tst     r2, #0x4
	ldrneh  r0, [r1, #0x14]
	cmpne   r0, #0x0
	bne     branch_6016710
	tst     r2, #0x8
	ldrneh  r0, [r1, #0x28]
	cmpne   r0, #0x0
	bne     branch_6016710
	ldr     r0, [pc, #0x520] @ [0x6016c04] (=0x480819c)
	ldrh    r0, [r0]
	tst     r0, #0x1
	bne     branch_6016710
	ldr     r2, [pc, #0x514] @ [0x6016c08] (=0x4808032)
	mov     r3, #0x0
	strh    r3, [r2]
	mov     r1, #2, 18 @ #0x8000
	ldr     r0, [pc, #0x4f8] @ [0x6016bfc] (=0x380fff4)
	strh    r1, [r2]
	ldr     r0, [r0]
	add     r0, r0, #1, 22 @ #0x400
	strh    r3, [r0, #0xde]
.arm
branch_6016710: @ 6016710 :arm
	add     r0, r10, #0x1e
	mov     r1, #0xb0
	bl      Function_6014d84
	cmp     r0, #0x0
	bne     branch_6016bf4
	ldrh    r0, [r10, #0x2e]
	ldrh    r8, [r10, #0x2]
	add     r0, r0, #0x1
	mov     r0, r0, lsl #16
	cmp     r8, #0x0
	mov     r5, #0x0
	mov     r6, r0, lsr #16
	moveq   r7, #0x13
	moveq   r5, #0x1
	beq     branch_6016bb8
	ldrh    r0, [r4, #0xc]
	cmp     r0, #0x1
	bne     branch_60167c0
	mov     r0, r8
	bl      Function_600e888
	cmp     r0, #0x20
	bls     branch_6016784
	mov     r0, r8, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x20
	bl      Function_600e4ec
	add     r0, r10, #0x1e
	mov     r1, #0x1
	bl      Function_601096c
.arm
branch_6016784: @ 6016784 :arm
	ldrh    r0, [r10, #0x8]
	tst     r0, #1, 22 @ #0x400
	beq     branch_60167c0
	mov     r0, r8
	bl      Function_600e908
	cmp     r0, #0x0
	beq     branch_60167c0
	mov     r5, #0x1
	mov     r0, r8
	mov     r1, #0x0
	strh    r5, [r10, #0x2c]
	mov     r7, #0xf
	mov     r6, #0x4
	bl      Function_600e714
	b       branch_6016bb8
@ 0x60167c0

.arm
branch_60167c0: @ 60167c0 :arm
	ldrh    r0, [r10, #0x2c]
	cmp     r0, #0x0
	beq     branch_60167d8
	cmp     r0, #0x1
	beq     branch_60168b4
	b       branch_6016ba8
@ 0x60167d8

.arm
branch_60167d8: @ 60167d8 :arm
	ldrh    r1, [r4, #0xc]
	cmp     r1, #0x1
	ldreq   r0, [pc, #0x414] @ [0x6016bfc] (=0x380fff4)
	ldreq   r0, [r0]
	addeq   r0, r0, #3, 24 @ #0x300
	ldreqh  r0, [r0, #0x32]
	cmpeq   r0, #0x1
	moveq   r7, #0xd
	moveq   r5, #0x1
	beq     branch_6016bb8
	cmp     r1, #0x1
	bne     branch_6016824
	ldrh    r0, [r10, #0x2e]
	mov     r5, #0x1
	cmp     r0, #0x1
	moveq   r7, #0x0
	movne   r7, #0xe
	movne   r6, #0x2
	b       branch_6016bb8
@ 0x6016824

.arm
branch_6016824: @ 6016824 :arm
	beq     branch_6016bb8
	ldrh    r0, [r10, #0x2e]
	cmp     r0, #0x2
	ldreq   r1, [r9, #0x18]
	ldreqh  r0, [r1, #0x16]
	cmpeq   r0, #0x0
	bne     branch_6016bb8
	add     r0, r1, #0x10
	add     r1, r10, #0x1e
	bl      Function_600acc0
	cmp     r0, #0x0
	beq     branch_6016bb8
	ldrh    r0, [r9]
	cmp     r0, #0x31
	bne     branch_6016bb8
	bl      Function_600b89c
	ldrh    r0, [r10, #0x30]
	cmp     r0, #0x0
	ldrne   r0, [r9, #0x1c]
	movne   r1, #0xc
	strneh  r1, [r0, #0x4]
	ldrneh  r1, [r10, #0x30]
	bne     branch_6016894
	mov     r0, #0x30
	bl      Function_600a880
	ldr     r0, [r9, #0x1c]
	mov     r1, #0x0
	strh    r1, [r0, #0x4]
.arm
branch_6016894: @ 6016894 :arm
	ldr     r0, [r9, #0x1c]
	mov     r2, #0x35
	strh    r1, [r0, #0x6]
	mov     r0, #0x2
	mov     r1, r0
	strh    r2, [r9]
	bl      Function_6008f00
	b       branch_6016bb8
@ 0x60168b4

.arm
branch_60168b4: @ 60168b4 :arm
	ldrh    r0, [r4, #0xc]
	cmp     r0, #0x1
	bne     branch_6016a54
	mov     r0, r8, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x20
	bl      Function_600e4ec
	ldrh    r0, [r10, #0x2e]
	cmp     r0, #0x1
	bne     branch_6016970
	add     r0, r10, #0x1e
	mov     r1, #0x80
	mov     r2, #0x1
	bl      Function_6014b8c
	movs    r4, r0
	beq     branch_6016bb8
	ldrh    r1, [r10, #0x2c]
	ldr     r0, [pc, #0x30c] @ [0x6016c0c] (=0x4808044)
	strh    r1, [r4, #0x2c]
	strh    r6, [r4, #0x2e]
	mov     r1, #0x0
	strh    r1, [r4, #0x30]
	ldrh    r1, [r0]
	ldrh    r0, [r0]
	add     r0, r1, r0, lsl #8
	mov     r0, r0, lsl #16
	movs    r9, r0, lsr #16
	moveq   r9, #0x1
	mov     r0, r9
	bl      Function_600ba5c
	mov     r0, r8
	mov     r1, r9
	bl      Function_600e714
	add     r0, r4, #0x33
	add     r9, r4, #0x34
	bl      Function_600ba0c
	mov     r11, r0
	mov     r8, #0x0
	b       branch_601695c
@ 0x6016950

.arm
branch_6016950: @ 6016950 :arm
	bl      Function_600ba74
	strh    r0, [r9], #0x2
	add     r8, r8, #0x2
.arm
branch_601695c: @ 601695c :arm
	cmp     r8, r11
	bcc     branch_6016950
	mov     r0, r4
	bl      Function_6013e0c
	b       branch_6016bb8
@ 0x6016970

.arm
branch_6016970: @ 6016970 :arm
	cmp     r0, #0x3
	mov     r0, r8
	bne     branch_6016a3c
	bl      Function_600e888
	cmp     r0, #0x20
	bne     branch_6016998
	mov     r0, r8
	bl      Function_600e908
	cmp     r0, #0x0
	bne     branch_60169a4
.arm
branch_6016998: @ 6016998 :arm
	mov     r7, #0x1
	mov     r5, r7
	b       branch_6016bb8
@ 0x60169a4

.arm
branch_60169a4: @ 60169a4 :arm
	ldrh    r0, [r10, #0x2]
	bl      Function_600e908
	bl      Function_600ba5c
	add     r0, r10, #0x33
	add     r7, r10, #0x34
	bl      Function_600ba0c
	mov     r4, r0
	mov     r5, #0x0
	b       branch_60169e0
@ 0x60169c8

.arm
branch_60169c8: @ 60169c8 :arm
	bl      Function_600ba74
	ldrh    r1, [r7], #0x2
	cmp     r1, r0
	movne   r0, #0x0
	bne     branch_6016a10
	add     r5, r5, #0x1
.arm
branch_60169e0: @ 60169e0 :arm
	cmp     r5, r4, lsr #1
	bcc     branch_60169c8
	tst     r4, #0x1
	beq     branch_6016a0c
	bl      Function_600ba74
	ldrh    r1, [r7]
	and     r0, r0, #0xff
	and     r1, r1, #0xff
	cmp     r1, r0
	movne   r0, #0x0
	bne     branch_6016a10
.arm
branch_6016a0c: @ 6016a0c :arm
	mov     r0, #0x1
.arm
branch_6016a10: @ 6016a10 :arm
	cmp     r0, #0x0
	mov     r0, r8
	mov     r1, #0x0
	mov     r5, #0x1
	bne     branch_6016a30
	mov     r7, #0xf
	bl      Function_600e714
	b       branch_6016bb8
@ 0x6016a30

.arm
branch_6016a30: @ 6016a30 :arm
	bl      Function_600e714
	mov     r7, #0x0
	b       branch_6016bb8
@ 0x6016a3c

.arm
branch_6016a3c: @ 6016a3c :arm
	mov     r1, #0x0
	bl      Function_600e714
	mov     r7, #0xe
	mov     r6, #0x2
	mov     r5, #0x1
	b       branch_6016bb8
@ 0x6016a54

.arm
branch_6016a54: @ 6016a54 :arm
	ldr     r1, [r9, #0x18]
	ldrh    r0, [r1, #0x16]
	cmp     r0, #0x1
	bne     branch_6016bb8
	add     r0, r1, #0x10
	add     r1, r10, #0x1e
	bl      Function_600acc0
	cmp     r0, #0x0
	beq     branch_6016bb8
	ldrh    r0, [r10, #0x2e]
	cmp     r0, #0x2
	bne     branch_6016b44
	ldrh    r0, [r9]
	cmp     r0, #0x31
	bne     branch_6016bb8
	ldrh    r0, [r10, #0x30]
	cmp     r0, #0x0
	beq     branch_6016ad8
	bl      Function_600b89c
	mov     r0, #0x35
	strh    r0, [r9]
	ldr     r0, [r9, #0x1c]
	mov     r1, #0xc
	strh    r1, [r0, #0x4]
	mov     r0, #0x2
	ldrh    r3, [r10, #0x30]
	ldr     r2, [r9, #0x1c]
	mov     r1, r0
	strh    r3, [r2, #0x6]
	bl      Function_6008f00
	mov     r0, #0x20
	bl      Function_600a880
	b       branch_6016bb8
@ 0x6016ad8

.arm
branch_6016ad8: @ 6016ad8 :arm
	mov     r1, #0x33
	add     r0, r10, #0x33
	strh    r1, [r9]
	bl      Function_600ba0c
	mov     r1, r0
	add     r0, r10, #0x1e
	mov     r2, #0x1
	bl      Function_6014b8c
	movs    r4, r0
	beq     branch_6016bb8
	ldrh    r1, [r4, #0x14]
	add     r0, r10, #0x2c
	orr     r1, r1, #1, 18 @ #0x4000
	strh    r1, [r4, #0x14]
	ldrh    r2, [r10, #0x6]
	add     r1, r4, #0x2c
	add     r2, r2, #0x1
	bl      Function_6001ae0
	ldrh    r1, [r10, #0x2c]
	mov     r0, #0x3
	strh    r1, [r4, #0x2c]
	strh    r0, [r4, #0x2e]
	mov     r1, #0x0
	mov     r0, r4
	strh    r1, [r4, #0x30]
	bl      Function_6013e0c
	b       branch_6016bb8
@ 0x6016b44

.arm
branch_6016b44: @ 6016b44 :arm
	cmp     r0, #0x4
	ldreqh  r0, [r9]
	cmpeq   r0, #0x33
	bne     branch_6016bb8
	bl      Function_600b89c
	ldrh    r0, [r10, #0x30]
	cmp     r0, #0x0
	ldrne   r0, [r9, #0x1c]
	movne   r1, #0xc
	strneh  r1, [r0, #0x4]
	ldrneh  r1, [r10, #0x30]
	bne     branch_6016b88
	mov     r0, #0x30
	bl      Function_600a880
	ldr     r0, [r9, #0x1c]
	mov     r1, #0x0
	strh    r1, [r0, #0x4]
.arm
branch_6016b88: @ 6016b88 :arm
	ldr     r0, [r9, #0x1c]
	mov     r2, #0x35
	strh    r1, [r0, #0x6]
	mov     r0, #0x2
	mov     r1, r0
	strh    r2, [r9]
	bl      Function_6008f00
	b       branch_6016bb8
@ 0x6016ba8

.arm
branch_6016ba8: @ 6016ba8 :arm
	ldrh    r0, [r4, #0xc]
	cmp     r0, #0x1
	moveq   r7, #0xd
	moveq   r5, #0x1
.arm
branch_6016bb8: @ 6016bb8 :arm
	cmp     r5, #0x0
	beq     branch_6016bf4
	cmp     r7, #0x0
	movne   r2, #0x1
	moveq   r2, #0x0
	add     r0, r10, #0x1e
	mov     r1, #0x0
	bl      Function_6014b8c
	cmp     r0, #0x0
	beq     branch_6016bf4
	ldrh    r1, [r10, #0x2c]
	strh    r1, [r0, #0x2c]
	strh    r6, [r0, #0x2e]
	strh    r7, [r0, #0x30]
	bl      Function_6013e0c
.arm
branch_6016bf4: @ 6016bf4 :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x6016bfc

.word 0x380fff4 @ 0x6016bfc
.word 0x48080b0 @ 0x6016c00
.word 0x480819c @ 0x6016c04
.word 0x4808032 @ 0x6016c08
.word 0x4808044 @ 0x6016c0c
.arm
Function_6016c10: @ 6016c10 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0xa0] @ [0x6016cbc] (=0x380fff4)
	mov     r4, r0
	ldr     r0, [r1]
	ldrh    r5, [r4, #0x2]
	add     r1, r0, #209, 30 @ #0x344
	ldrh    r0, [r1, #0xc]
	cmp     r0, #0x1
	beq     branch_6016c44
	cmp     r0, #0x2
	cmpne   r0, #0x3
	beq     branch_6016c7c
	b       branch_6016cb4
@ 0x6016c44

.arm
branch_6016c44: @ 6016c44 :arm
	mov     r0, r5
	bl      Function_600e888
	cmp     r0, #0x20
	bls     branch_6016cb4
	mov     r0, r5, lsl #16
	mov     r0, r0, lsr #16
	mov     r1, #0x20
	bl      Function_600e4ec
	ldrh    r1, [r4, #0x2c]
	add     r0, r4, #0x1e
	bl      Function_601096c
	mov     r0, r5
	bl      Function_6013af0
	b       branch_6016cb4
@ 0x6016c7c

.arm
branch_6016c7c: @ 6016c7c :arm
	ldrh    r0, [r1, #0x8]
	cmp     r0, #0x20
	bls     branch_6016cb4
	add     r0, r4, #0x1e
	add     r1, r1, #0x82
	bl      Function_600acc0
	cmp     r0, #0x0
	beq     branch_6016cb4
	mov     r0, #0x20
	bl      Function_600a880
	bl      Function_600a7dc
	ldrh    r1, [r4, #0x2c]
	add     r0, r4, #0x1e
	bl      Function_601096c
.arm
branch_6016cb4: @ 6016cb4 :arm
	ldmfd   sp!, {r3-r5,lr}
	bx      lr
@ 0x6016cbc

.word 0x380fff4 @ 0x6016cbc
.arm
Function_6016cc0: @ 6016cc0 :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r1, [pc, #0x314] @ [0x6016fe0] (=0x380fff4)
	mov     r9, r0
	ldr     r0, [r1]
	ldr     r5, [r9]
	add     r4, r0, #209, 30 @ #0x344
	ldrh    r0, [r4, #0x7a]
	ldr     r10, [pc, #0x2fc] @ [0x6016fe0] (=0x380fff4)
	strh    r0, [r9, #0x12]
	ldrh    r0, [r9, #0xc]
	tst     r0, #2, 22 @ #0x800
	ldrneh  r0, [r9, #0xa]
	orrne   r0, r0, #0x1
	strneh  r0, [r9, #0xa]
	ldrh    r6, [r9, #0x8]
	b       branch_6016f54
@ 0x6016d00

.arm
branch_6016d00: @ 6016d00 :arm
	mov     r0, r5
	bl      Function_600ba0c
	mov     r8, r0
	add     r0, r5, #0x1
	add     r5, r5, #0x2
	bl      Function_600ba0c
	mov     r7, r0
	cmp     r8, #0x6
	addls   pc, pc, r8, lsl #2
	b       branch_6016d44
@ 0x6016d28

.arm
Function_6016d28: @ 6016d28 :arm
	b       branch_6016d50
@ 0x6016d2c

.arm
Function_6016d2c: @ 6016d2c :arm
	b       branch_6016dbc
@ 0x6016d30

.arm
Function_6016d30: @ 6016d30 :arm
	b       branch_6016f48
@ 0x6016d34

.arm
Function_6016d34: @ 6016d34 :arm
	b       branch_6016e20
@ 0x6016d38

.arm
Function_6016d38: @ 6016d38 :arm
	b       branch_6016e8c
@ 0x6016d3c

.arm
Function_6016d3c: @ 6016d3c :arm
	b       branch_6016e6c
@ 0x6016d40

.arm
Function_6016d40: @ 6016d40 :arm
	b       branch_6016f48
@ 0x6016d44

.arm
branch_6016d44: @ 6016d44 :arm
	cmp     r8, #0xdd
	beq     branch_6016eac
	b       branch_6016f2c
@ 0x6016d50

.arm
branch_6016d50: @ 6016d50 :arm
	cmp     r7, #0x20
	bhi     branch_6016f48
	ldrh    r1, [r9, #0xc]
	sub     r0, r5, #0x2
	orr     r1, r1, #0x1
	strh    r1, [r9, #0xc]
	str     r0, [r9, #0x1c]
	cmp     r7, #0x0
	bne     branch_6016d8c
	ldrh    r0, [r9, #0xc]
	tst     r0, #2, 22 @ #0x800
	ldrneh  r0, [r9, #0xa]
	orrne   r0, r0, #0x1
	strneh  r0, [r9, #0xa]
	bne     branch_6016f48
.arm
branch_6016d8c: @ 6016d8c :arm
	ldrh    r1, [r9, #0xa]
	mov     r0, r7, lsl #16
	bic     r2, r1, #0x1
	strh    r2, [r9, #0xa]
	mov     r1, r5
	mov     r0, r0, lsr #16
	bl      Function_600abf0
	cmp     r0, #0x0
	ldrneh  r0, [r9, #0xa]
	orrne   r0, r0, #0x1
	strneh  r0, [r9, #0xa]
	b       branch_6016f48
@ 0x6016dbc

.arm
branch_6016dbc: @ 6016dbc :arm
	cmp     r7, #0x1
	bcc     branch_6016f48
	ldrh    r1, [r9, #0xc]
	sub     r0, r5, #0x2
	orr     r1, r1, #0x4
	strh    r1, [r9, #0xc]
	add     r1, r9, #0x14
	bl      Function_600ad10
	ldrh    r0, [r4, #0x60]
	ldrh    r1, [r4, #0x62]
	ldrh    r2, [r9, #0x14]
	orr     r1, r0, r1
	mvn     r1, r1
	tst     r2, r1
	ldreqh  r1, [r9, #0x16]
	orreq   r1, r2, r1
	andeq   r1, r0, r1
	cmpeq   r0, r1
	ldreqh  r0, [r9, #0xa]
	orreq   r0, r0, #0x4
	streqh  r0, [r9, #0xa]
	ldrneh  r0, [r9, #0xa]
	bicne   r0, r0, #0x4
	strneh  r0, [r9, #0xa]
	b       branch_6016f48
@ 0x6016e20

.arm
branch_6016e20: @ 6016e20 :arm
	cmp     r7, #0x1
	bcc     branch_6016f48
	ldrh    r1, [r9, #0xc]
	mov     r0, r5
	orr     r1, r1, #0x2
	strh    r1, [r9, #0xc]
	bl      Function_600ba0c
	strh    r0, [r9, #0x12]
	ldr     r0, [r10]
	ldrh    r1, [r9, #0x12]
	ldr     r0, [r0, #0x41c]
	ldrh    r0, [r0, #0x4a]
	cmp     r1, r0
	ldrh    r0, [r9, #0xa]
	orreq   r0, r0, #0x2
	streqh  r0, [r9, #0xa]
	bicne   r0, r0, #0x2
	strneh  r0, [r9, #0xa]
	b       branch_6016f48
@ 0x6016e6c

.arm
branch_6016e6c: @ 6016e6c :arm
	cmp     r7, #0x3
	bcc     branch_6016f48
	ldrh    r1, [r9, #0xc]
	sub     r0, r5, #0x2
	orr     r1, r1, #1, 24 @ #0x100
	strh    r1, [r9, #0xc]
	str     r0, [r9, #0x24]
	b       branch_6016f48
@ 0x6016e8c

.arm
branch_6016e8c: @ 6016e8c :arm
	cmp     r7, #0x6
	bcc     branch_6016f48
	ldrh    r1, [r9, #0xc]
	sub     r0, r5, #0x2
	orr     r1, r1, #2, 24 @ #0x200
	strh    r1, [r9, #0xc]
	str     r0, [r9, #0x20]
	b       branch_6016f48
@ 0x6016eac

.arm
branch_6016eac: @ 6016eac :arm
	cmp     r7, #0x8
	bcc     branch_6016ef4
	mov     r0, r5
	bl      Function_600ba0c
	cmp     r0, #0x0
	bne     branch_6016ef4
	add     r0, r5, #0x1
	bl      Function_600ba0c
	cmp     r0, #0x9
	bne     branch_6016ef4
	add     r0, r5, #0x2
	bl      Function_600ba0c
	cmp     r0, #0xbf
	bne     branch_6016ef4
	add     r0, r5, #0x3
	bl      Function_600ba0c
	cmp     r0, #0x0
	beq     branch_6016f14
.arm
branch_6016ef4: @ 6016ef4 :arm
	ldrh    r1, [r9, #0x18]
	add     r0, r7, #0x2
	add     r1, r1, #0x1
	strh    r1, [r9, #0x18]
	ldrh    r1, [r9, #0x1a]
	add     r0, r1, r0
	strh    r0, [r9, #0x1a]
	b       branch_6016f48
@ 0x6016f14

.arm
branch_6016f14: @ 6016f14 :arm
	ldrh    r1, [r9, #0xc]
	sub     r0, r5, #0x2
	orr     r1, r1, #1, 22 @ #0x400
	strh    r1, [r9, #0xc]
	str     r0, [r9, #0x28]
	b       branch_6016f48
@ 0x6016f2c

.arm
branch_6016f2c: @ 6016f2c :arm
	ldrh    r1, [r9, #0x18]
	add     r0, r7, #0x2
	add     r1, r1, #0x1
	strh    r1, [r9, #0x18]
	ldrh    r1, [r9, #0x1a]
	add     r0, r1, r0
	strh    r0, [r9, #0x1a]
.arm
branch_6016f48: @ 6016f48 :arm
	add     r0, r7, #0x2
	add     r5, r5, r7
	sub     r6, r6, r0
.arm
branch_6016f54: @ 6016f54 :arm
	cmp     r6, #0x0
	bgt     branch_6016d00
	ldrh    r0, [r9, #0xc]
	tst     r0, #0x8
	beq     branch_6016f8c
	ldrh    r0, [r4, #0x64]
	tst     r0, #0x1
	bne     branch_6016f80
	ldrh    r0, [r9, #0x4]
	tst     r0, #2, 18 @ #0x8000
	beq     branch_6016f8c
.arm
branch_6016f80: @ 6016f80 :arm
	ldrh    r0, [r9, #0xa]
	orr     r0, r0, #0x8
	strh    r0, [r9, #0xa]
.arm
branch_6016f8c: @ 6016f8c :arm
	ldrh    r0, [r9, #0xc]
	tst     r0, #0x30
	beq     branch_6016fd8
	ldrh    r1, [r9, #0x6]
	ldrh    r0, [r4, #0x7c]
	and     r1, r1, #0x3
	and     r0, r0, #0x3
	cmp     r1, r0
	ldreqh  r0, [r9, #0xa]
	orreq   r0, r0, #0x10
	streqh  r0, [r9, #0xa]
	ldrh    r1, [r9, #0x6]
	ldrh    r0, [r4, #0x7c]
	and     r1, r1, #0x10
	and     r0, r0, #0x10
	cmp     r1, r0
	ldreqh  r0, [r9, #0xa]
	orreq   r0, r0, #0x20
	streqh  r0, [r9, #0xa]
.arm
branch_6016fd8: @ 6016fd8 :arm
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x6016fe0

.word 0x380fff4 @ 0x6016fe0
.arm
Function_6016fe4: @ 6016fe4 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x2c
	ldr     r0, [pc, #0x698] @ [0x601768c] (=0x380fff4)
	mvn     r1, #0x0
	ldr     r4, [r0]
	add     r10, r4, #95, 30 @ #0x17c
	ldr     r6, [r10, #0x60]
	add     r0, r4, #3, 24 @ #0x300
	ldrh    r5, [r0, #0x50]
	cmp     r6, r1
	beq     branch_6017680
	ldrh    r0, [r6, #0x28]
	tst     r0, #0x1
	ldrne   r0, [r4, #0x568]
	addne   r0, r0, #0x1
	strne   r0, [r4, #0x568]
	ldreq   r0, [r4, #0x564]
	addeq   r0, r0, #0x1
	streq   r0, [r4, #0x564]
	ldrh    r0, [r6, #0x18]
	ldr     r2, [r4, #0x560]
	and     r1, r0, #0xf0
	mov     r0, r1, asr #3
	add     r0, r1, r0, lsr #28
	mov     r0, r0, asr #4
	sub     r0, r0, #0x1
	add     r0, r2, r0
	str     r0, [r4, #0x560]
	ldrh    r1, [r6, #0x24]
	add     r0, r6, #0x2e
	mov     r2, r1, lsl #28
	mov     r1, r1, lsl #24
	mov     r8, r2, lsr #30
	mov     r9, r1, lsr #28
	bl      Function_600e250
	mov     r7, r0
	strh    r7, [r6, #0x12]
	cmp     r7, #0xff
	bne     branch_60170d4
	mov     r0, #0x0
	strh    r0, [r6, #0x12]
	cmp     r5, #0x1
	bne     branch_601765c
	cmp     r8, #0x0
	bne     branch_601765c
	cmp     r9, #0x0
	beq     branch_60170c8
	cmp     r9, #0x4
	beq     branch_60170bc
	cmp     r9, #0xb
	bne     branch_601765c
	add     r0, r6, #0x10
	bl      Function_6016670
	b       branch_601765c
@ 0x60170bc

.arm
branch_60170bc: @ 60170bc :arm
	add     r0, r6, #0x10
	bl      Function_60161ec
	b       branch_601765c
@ 0x60170c8

.arm
branch_60170c8: @ 60170c8 :arm
	add     r0, r6, #0x10
	bl      Function_601601c
	b       branch_601765c
@ 0x60170d4

.arm
branch_60170d4: @ 60170d4 :arm
	bl      Function_600e734
	ldrh    r1, [r6, #0x22]
	mov     r0, r7, lsl #16
	and     r1, r1, #0xff
	mov     r0, r0, lsr #16
	bl      Function_600e5d4
	cmp     r8, #0x0
	bne     branch_6017120
	ldrh    r11, [r6, #0x3a]
	mov     r0, r7
	bl      Function_600e928
	cmp     r11, r0
	ldreq   r0, [r4, #0x578]
	addeq   r0, r0, #0x1
	streq   r0, [r4, #0x578]
	beq     branch_601765c
	mov     r0, r7
	mov     r1, r11
	bl      Function_600e6f4
.arm
branch_6017120: @ 6017120 :arm
	cmp     r5, #0x1
	beq     branch_6017138
	cmp     r5, #0x2
	cmpne   r5, #0x3
	beq     branch_60173d8
	b       branch_601765c
@ 0x6017138

.arm
branch_6017138: @ 6017138 :arm
	ldrh    r1, [r6, #0x24]
	mov     r0, r7, lsl #16
	mov     r1, r1, lsl #19
	mov     r0, r0, lsr #16
	mov     r1, r1, lsr #31
	bl      Function_600e5f4
	cmp     r8, #0x0
	bne     branch_6017374
	cmp     r9, #0xc
	addls   pc, pc, r9, lsl #2
	b       branch_601765c
@ 0x6017164

.arm
Function_6017164: @ 6017164 :arm
	b       branch_60171a4
@ 0x6017168

.arm
Function_6017168: @ 6017168 :arm
	b       branch_601765c
@ 0x601716c

.arm
Function_601716c: @ 601716c :arm
	b       branch_60171b0
@ 0x6017170

.arm
Function_6017170: @ 6017170 :arm
	b       branch_601765c
@ 0x6017174

.arm
Function_6017174: @ 6017174 :arm
	b       branch_6017334
@ 0x6017178

.arm
Function_6017178: @ 6017178 :arm
	b       branch_6017340
@ 0x601717c

.arm
Function_601717c: @ 601717c :arm
	b       branch_601765c
@ 0x6017180

.arm
Function_6017180: @ 6017180 :arm
	b       branch_601765c
@ 0x6017184

.arm
Function_6017184: @ 6017184 :arm
	b       branch_6017198
@ 0x6017188

.arm
Function_6017188: @ 6017188 :arm
	b       branch_601765c
@ 0x601718c

.arm
Function_601718c: @ 601718c :arm
	b       branch_6017350
@ 0x6017190

.arm
Function_6017190: @ 6017190 :arm
	b       branch_601735c
@ 0x6017194

.arm
Function_6017194: @ 6017194 :arm
	b       branch_6017368
@ 0x6017198

.arm
branch_6017198: @ 6017198 :arm
	add     r0, r6, #0x10
	bl      Function_60158f0
	b       branch_601765c
@ 0x60171a4

.arm
branch_60171a4: @ 60171a4 :arm
	add     r0, r6, #0x10
	bl      Function_601601c
	b       branch_601765c
@ 0x60171b0

.arm
branch_60171b0: @ 60171b0 :arm
	ldr     r0, [pc, #0x4d4] @ [0x601768c] (=0x380fff4)
	ldrh    r4, [r6, #0x16]
	ldr     r5, [r0]
	cmp     r4, #0xa
	bls     branch_601765c
	add     r0, r5, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x50]
	cmp     r0, #0x1
	bne     branch_601765c
	add     r0, r6, #0x2e
	mov     r1, #0x30
	bl      Function_6014d84
	cmp     r0, #0x0
	bne     branch_601765c
	ldrh    r7, [r6, #0x12]
	mov     r0, r7
	bl      Function_600e888
	cmp     r0, #0x30
	bcs     branch_6017230
	add     r0, r6, #0x2e
	mov     r1, #0xc0
	bl      Function_6014d84
	cmp     r0, #0x0
	bne     branch_601765c
	add     r0, r6, #0x2e
	mov     r1, #0x6
	mov     r2, #0x1
	bl      Function_6014c4c
	cmp     r0, #0x0
	beq     branch_601765c
	bl      Function_6013e0c
	b       branch_601765c
@ 0x6017230

.arm
branch_6017230: @ 6017230 :arm
	mov     r0, r7
	bl      Function_600e888
	cmp     r0, #0x40
	mov     r0, r7
	bne     branch_601725c
	mov     r1, #0x30
	bl      Function_600e4ec
	add     r0, r6, #0x2e
	mov     r1, #0x1
	bl      Function_6010bcc
	b       branch_6017268
@ 0x601725c

.arm
branch_601725c: @ 601725c :arm
	bl      Function_600e974
	cmp     r0, #0x0
	bne     branch_601765c
.arm
branch_6017268: @ 6017268 :arm
	add     r1, sp, #0x0
	mov     r0, #0x0
	mov     r2, #0x2c
	bl      Function_600a9f0
	add     r3, r6, #0x46
	sub     r2, r4, #0xa
	mov     r1, #2, 22 @ #0x800
	str     r3, [sp]
	strh    r2, [sp, #0x8]
	strh    r1, [sp, #0xc]
	add     r0, sp, #0x0
	bl      Function_6016cc0
	ldrh    r1, [r6, #0x3c]
	ldr     r0, [pc, #0x3ec] @ [0x6017690] (=0xffc2)
	tst     r1, r0
	bne     branch_60172dc
	add     r0, r5, #3, 24 @ #0x300
	ldrh    r2, [r0, #0x34]
	cmp     r2, #0x0
	moveq   r0, r1, lsl #27
	moveq   r0, r0, lsr #31
	cmpeq   r0, #0x1
	beq     branch_60172dc
	cmp     r2, #0x0
	beq     branch_60172e4
	ldrh    r0, [r6, #0x3c]
	mov     r0, r0, lsl #27
	movs    r0, r0, lsr #31
	bne     branch_60172e4
.arm
branch_60172dc: @ 60172dc :arm
	mov     r1, #0xa
	b       branch_6017318
@ 0x60172e4

.arm
branch_60172e4: @ 60172e4 :arm
	mov     r0, r7
	bl      Function_600e6b4
	ldrh    r0, [sp, #0xa]
	tst     r0, #0x1
	moveq   r1, #0x1
	beq     branch_6017318
	tst     r0, #0x4
	moveq   r1, #0x12
	beq     branch_6017318
	ldrh    r1, [sp, #0x16]
	mov     r0, r7
	bl      Function_600e6d4
	mov     r1, #0x0
.arm
branch_6017318: @ 6017318 :arm
	ldr     r2, [sp, #0x1c]
	mov     r0, r7
	bl      Function_6014780
	cmp     r0, #0x0
	beq     branch_601765c
	bl      Function_6013e0c
	b       branch_601765c
@ 0x6017334

.arm
branch_6017334: @ 6017334 :arm
	add     r0, r6, #0x10
	bl      Function_60161ec
	b       branch_601765c
@ 0x6017340

.arm
branch_6017340: @ 6017340 :arm
	add     r0, r6, #0x10
	mov     r1, #0x0
	bl      Function_60162a0
	b       branch_601765c
@ 0x6017350

.arm
branch_6017350: @ 6017350 :arm
	add     r0, r6, #0x10
	bl      Function_6015f3c
	b       branch_601765c
@ 0x601735c

.arm
branch_601735c: @ 601735c :arm
	add     r0, r6, #0x10
	bl      Function_6016670
	b       branch_601765c
@ 0x6017368

.arm
branch_6017368: @ 6017368 :arm
	add     r0, r6, #0x10
	bl      Function_6016c10
	b       branch_601765c
@ 0x6017374

.arm
branch_6017374: @ 6017374 :arm
	cmp     r8, #0x1
	bne     branch_601765c
	cmp     r9, #0xa
	bne     branch_601765c
	ldr     r0, [pc, #0x300] @ [0x601768c] (=0x380fff4)
	ldrh    r4, [r6, #0x12]
	ldr     r1, [r0]
	mov     r0, r4
	add     r5, r1, #95, 30 @ #0x17c
	bl      Function_600e888
	cmp     r0, #0x40
	bne     branch_601765c
	mov     r0, r4
	bl      Function_600e690
	ldrh    r0, [r5, #0x2c]
	cmp     r0, #0x0
	beq     branch_60173c0
	mov     r0, #0x1
	bl      Function_6012c84
.arm
branch_60173c0: @ 60173c0 :arm
	ldrh    r0, [r5, #0x20]
	cmp     r0, #0x0
	beq     branch_601765c
	mov     r0, #0x0
	bl      Function_6012c84
	b       branch_601765c
@ 0x60173d8

.arm
branch_60173d8: @ 60173d8 :arm
	cmp     r8, #0x0
	bne     branch_601765c
	cmp     r9, #0xc
	addls   pc, pc, r9, lsl #2
	b       branch_601765c
@ 0x60173ec

.arm
Function_60173ec: @ 60173ec :arm
	b       branch_601765c
@ 0x60173f0

.arm
Function_60173f0: @ 60173f0 :arm
	b       branch_601742c
@ 0x60173f4

.arm
Function_60173f4: @ 60173f4 :arm
	b       branch_601765c
@ 0x60173f8

.arm
Function_60173f8: @ 60173f8 :arm
	b       branch_6017528
@ 0x60173fc

.arm
Function_60173fc: @ 60173fc :arm
	b       branch_601765c
@ 0x6017400

.arm
Function_6017400: @ 6017400 :arm
	b       branch_601762c
@ 0x6017404

.arm
Function_6017404: @ 6017404 :arm
	b       branch_601765c
@ 0x6017408

.arm
Function_6017408: @ 6017408 :arm
	b       branch_601765c
@ 0x601740c

.arm
Function_601740c: @ 601740c :arm
	b       branch_6017420
@ 0x6017410

.arm
Function_6017410: @ 6017410 :arm
	b       branch_601765c
@ 0x6017414

.arm
Function_6017414: @ 6017414 :arm
	b       branch_601763c
@ 0x6017418

.arm
Function_6017418: @ 6017418 :arm
	b       branch_6017648
@ 0x601741c

.arm
Function_601741c: @ 601741c :arm
	b       branch_6017654
@ 0x6017420

.arm
branch_6017420: @ 6017420 :arm
	add     r0, r6, #0x10
	bl      Function_60158f0
	b       branch_601765c
@ 0x601742c

.arm
branch_601742c: @ 601742c :arm
	ldr     r0, [pc, #0x258] @ [0x601768c] (=0x380fff4)
	ldr     r0, [r0]
	add     r5, r0, #209, 30 @ #0x344
	ldrh    r1, [r5, #0xc]
	add     r0, r0, #0x4
	cmp     r1, #0x2
	add     r4, r0, #1, 22 @ #0x400
	cmpne   r1, #0x3
	bne     branch_601765c
	ldrh    r0, [r4]
	cmp     r0, #0x51
	bne     branch_601765c
	ldr     r0, [r4, #0x18]
	add     r1, r6, #0x2e
	add     r0, r0, #0x10
	bl      Function_600acc0
	cmp     r0, #0x0
	beq     branch_601765c
	bl      Function_600b89c
	ldrh    r0, [r6, #0x3e]
	cmp     r0, #0x0
	bne     branch_60174c8
	ldrh    r1, [r6, #0x40]
	ldr     r0, [pc, #0x204] @ [0x6017694] (=0xfff)
	and     r0, r1, r0
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_600a7a0
	ldrh    r0, [r5, #0x6a]
	bl      Function_6014ce0
	add     r0, r5, #0x82
	add     r1, r6, #0x2e
	bl      Function_600a924
	add     r0, r6, #0x2e
	bl      Function_600e1a8
	strh    r0, [r5, #0x88]
	ldrh    r0, [r5, #0x88]
	mov     r1, #0x40
	bl      Function_600e4ec
.arm
branch_60174c8: @ 60174c8 :arm
	ldrh    r0, [r6, #0x3e]
	cmp     r0, #0x0
	ldr     r0, [r4, #0x1c]
	movne   r1, #0xc
	strneh  r1, [r0, #0x4]
	ldrneh  r1, [r6, #0x3e]
	ldrne   r0, [r4, #0x1c]
	strneh  r1, [r0, #0x6]
	bne     branch_6017504
	mov     r2, #0x0
	strh    r2, [r0, #0x4]
	ldr     r1, [r4, #0x1c]
	mov     r0, #0x40
	strh    r2, [r1, #0x6]
	bl      Function_600a880
.arm
branch_6017504: @ 6017504 :arm
	ldrh    r1, [r5, #0x6a]
	ldr     r0, [r4, #0x1c]
	mov     r2, #0x53
	strh    r1, [r0, #0x8]
	mov     r0, #0x2
	mov     r1, #0x3
	strh    r2, [r4]
	bl      Function_6008f00
	b       branch_601765c
@ 0x6017528

.arm
branch_6017528: @ 6017528 :arm
	ldr     r0, [pc, #0x15c] @ [0x601768c] (=0x380fff4)
	ldr     r0, [r0]
	add     r5, r0, #209, 30 @ #0x344
	ldrh    r1, [r5, #0xc]
	add     r0, r0, #0x4
	cmp     r1, #0x2
	add     r4, r0, #1, 22 @ #0x400
	cmpne   r1, #0x3
	bne     branch_601765c
	ldrh    r0, [r4]
	cmp     r0, #0x61
	bne     branch_601765c
	ldr     r0, [r4, #0x18]
	add     r1, r6, #0x2e
	add     r0, r0, #0x10
	bl      Function_600acc0
	cmp     r0, #0x0
	beq     branch_601765c
	bl      Function_600b89c
	ldrh    r0, [r6, #0x3e]
	cmp     r0, #0x0
	bne     branch_60175cc
	ldrh    r1, [r6, #0x40]
	ldr     r0, [pc, #0x108] @ [0x6017694] (=0xfff)
	and     r0, r1, r0
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bl      Function_600a7a0
	ldrh    r0, [r5, #0x6a]
	bl      Function_6014ce0
	add     r0, r5, #0x82
	add     r1, r6, #0x2e
	bl      Function_600a924
	add     r0, r6, #0x2e
	bl      Function_600e1a8
	strh    r0, [r5, #0x88]
	ldrh    r0, [r5, #0x88]
	mov     r1, #0x40
	bl      Function_600e4ec
	mov     r0, #0x40
	bl      Function_600a880
.arm
branch_60175cc: @ 60175cc :arm
	ldrh    r0, [r6, #0x3e]
	cmp     r0, #0x0
	ldr     r0, [r4, #0x1c]
	movne   r1, #0xc
	strneh  r1, [r0, #0x4]
	ldrneh  r1, [r6, #0x3e]
	ldrne   r0, [r4, #0x1c]
	strneh  r1, [r0, #0x6]
	bne     branch_6017608
	mov     r2, #0x0
	strh    r2, [r0, #0x4]
	ldr     r1, [r4, #0x1c]
	mov     r0, #0x40
	strh    r2, [r1, #0x6]
	bl      Function_600a880
.arm
branch_6017608: @ 6017608 :arm
	ldrh    r1, [r5, #0x6a]
	ldr     r0, [r4, #0x1c]
	mov     r2, #0x63
	strh    r1, [r0, #0x8]
	mov     r0, #0x2
	mov     r1, #0x4
	strh    r2, [r4]
	bl      Function_6008f00
	b       branch_601765c
@ 0x601762c

.arm
branch_601762c: @ 601762c :arm
	add     r0, r6, #0x10
	mov     r1, #0x0
	bl      Function_60162a0
	b       branch_601765c
@ 0x601763c

.arm
branch_601763c: @ 601763c :arm
	add     r0, r6, #0x10
	bl      Function_6015f3c
	b       branch_601765c
@ 0x6017648

.arm
branch_6017648: @ 6017648 :arm
	add     r0, r6, #0x10
	bl      Function_6016670
	b       branch_601765c
@ 0x6017654

.arm
branch_6017654: @ 6017654 :arm
	add     r0, r6, #0x10
	bl      Function_6016c10
.arm
branch_601765c: @ 601765c :arm
	mov     r1, r6
	add     r0, r10, #0x60
	bl      Function_6009140
	ldrh    r0, [r10, #0x68]
	cmp     r0, #0x0
	beq     branch_6017680
	mov     r0, #0x1
	mov     r1, #0x7
	bl      Function_6008f00
.arm
branch_6017680: @ 6017680 :arm
	add     sp, sp, #0x2c
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x601768c

.word 0x380fff4 @ 0x601768c
.word 0xffc2 @ 0x6017690
.word 0xfff @ 0x6017694
.arm
Function_6017698: @ 6017698 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x18
	ldr     r0, [pc, #0x508] @ [0x6017bb0] (=0x380fff4)
	mvn     r1, #0x0
	ldr     r2, [r0]
	add     r0, r2, #95, 30 @ #0x17c
	ldr     r5, [r0, #0x6c]
	str     r0, [sp, #0x4]
	cmp     r5, r1
	beq     branch_6017ba4
	add     r0, r2, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x4c]
	cmp     r0, #0x40
	bne     branch_6017b78
	ldrh    r1, [r5, #0x20]
	ldr     r0, [pc, #0x4d8] @ [0x6017bb4] (=0x5fc)
	cmp     r1, r0
	bhi     branch_6017b78
	ldrh    r4, [r5, #0x24]
	add     r0, sp, #0x8
	tst     r4, #1, 24 @ #0x100
	beq     branch_6017710
	add     r1, r5, #0x34
	bl      Function_600a924
	tst     r4, #2, 24 @ #0x200
	bne     branch_6017b78
	add     r0, sp, #0xe
	add     r1, r5, #0x2e
	bl      Function_600a924
	b       branch_6017738
@ 0x6017710

.arm
branch_6017710: @ 6017710 :arm
	add     r1, r5, #0x28
	bl      Function_600a924
	tst     r4, #2, 24 @ #0x200
	add     r0, sp, #0xe
	beq     branch_6017730
	add     r1, r5, #0x34
	bl      Function_600a924
	b       branch_6017738
@ 0x6017730

.arm
branch_6017730: @ 6017730 :arm
	add     r1, r5, #0x2e
	bl      Function_600a924
.arm
branch_6017738: @ 6017738 :arm
	ldrh    r0, [r5, #0x3a]
	tst     r4, #1, 22 @ #0x400
	strh    r0, [sp, #0x14]
	beq     branch_6017970
	ldrh    r0, [r5, #0x3a]
	mov     r0, r0, lsl #28
	movs    r0, r0, lsr #28
	bne     branch_6017970
	ldr     r0, [pc, #0x450] @ [0x6017bb0] (=0x380fff4)
	mvn     r6, #0x0
	ldr     r0, [r0]
	mov     r7, #0x0
	add     r0, r0, #0xe4
	add     r8, r0, #1, 22 @ #0x400
	add     r11, sp, #0x8
	mov     r4, #0x18
	b       branch_6017880
@ 0x601777c

.arm
branch_601777c: @ 601777c :arm
	mul     r9, r7, r4
	ldrh    r0, [r8, r9]
	add     r10, r8, r9
	cmp     r0, #0x0
	beq     branch_6017878
	mov     r1, r11
	add     r0, r10, #0x4
	bl      Function_600acc0
	cmp     r0, #0x0
	beq     branch_601787c
	add     r1, sp, #0xe
	add     r0, r10, #0xa
	bl      Function_600acc0
	cmp     r0, #0x0
	beq     branch_601787c
	ldrh    r0, [sp, #0x14]
	ldrh    r1, [r10, #0x10]
	mov     r0, r0, lsl #16
	mov     r2, r0, lsr #20
	mov     r0, r1, lsl #16
	cmp     r2, r0, lsr #20
	bne     branch_601787c
	ldrh    r0, [r5, #0x18]
	mov     r1, r1, lsl #28
	and     r2, r0, #0xf0
	mov     r0, r2, asr #3
	add     r0, r2, r0, lsr #28
	mov     r7, r0, asr #4
	subs    r0, r7, r1, lsr #28
	beq     branch_6017b78
	tst     r0, #2, 2 @ #0x80000000
	bne     branch_6017b78
	mov     r0, r10
	ldr     r4, [r0, #0x14]
	ldrh    r0, [r5, #0x20]
	ldrh    r3, [r4, #0x20]
	sub     r0, r0, r3
	subs    r6, r0, #0x18
	beq     branch_6017b78
	tst     r6, #2, 2 @ #0x80000000
	bne     branch_6017b78
	add     r0, r5, #0x3c
	add     r1, r4, #0x3c
	mov     r2, r6
	add     r0, r0, r3
	add     r1, r1, r3
	bl      Function_6001ae0
	ldrh    r1, [r4, #0x20]
	mov     r0, r7, lsl #16
	add     r1, r1, r6
	strh    r1, [r4, #0x20]
	ldrh    r1, [r10, #0x10]
	mov     r0, r0, lsr #16
	bic     r1, r1, #0xf
	and     r0, r0, #0xf
	orr     r1, r1, r0
	ldr     r0, [pc, #0x34c] @ [0x6017bb0] (=0x380fff4)
	strh    r1, [r10, #0x10]
	ldr     r1, [r0]
	ldr     r0, [r1, #0x560]
	add     r0, r0, r7
	str     r0, [r1, #0x560]
	b       branch_6017b78
@ 0x6017878

.arm
branch_6017878: @ 6017878 :arm
	mov     r6, r7
.arm
branch_601787c: @ 601787c :arm
	add     r7, r7, #0x1
.arm
branch_6017880: @ 6017880 :arm
	cmp     r7, #0x3
	bcc     branch_601777c
	mvn     r0, #0x0
	cmp     r6, r0
	beq     branch_6017b78
	ldr     r0, [pc, #0x314] @ [0x6017bb0] (=0x380fff4)
	ldr     r1, [pc, #0x318] @ [0x6017bb8] (=0x622)
	ldr     r0, [r0]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_60090a4
	movs    r4, r0
	beq     branch_6017964
	mov     r0, #0x18
	mul     r7, r6, r0
	add     r6, r8, r7
	add     r0, sp, #0x8
	add     r1, r6, #0x4
	mov     r2, #0x10
	bl      Function_6001ae0
	mov     r0, #0x5
	strh    r0, [r8, r7]
	mov     r0, r6
	str     r4, [r0, #0x14]
	ldrh    r2, [r5, #0x20]
	add     r0, r5, #0x18
	add     r1, r4, #0x18
	add     r2, r2, #0xc
	bl      Function_6001ae0
	ldr     r0, [pc, #0x2b8] @ [0x6017bb0] (=0x380fff4)
	ldr     r0, [r0]
	ldr     r0, [r0, #0x30c]
	bl      Function_6017bc0
	ldrh    r1, [r4, #0x18]
	ldrh    r0, [r6, #0x10]
	and     r1, r1, #0xf0
	bic     r3, r0, #0xf
	mov     r0, r1, asr #3
	add     r0, r1, r0, lsr #28
	mov     r1, r0, asr #4
	mov     r2, r1, lsl #16
	mov     r2, r2, lsr #16
	and     r2, r2, #0xf
	orr     r2, r3, r2
	strh    r2, [r6, #0x10]
	ldr     r2, [pc, #0x278] @ [0x6017bb0] (=0x380fff4)
	ldr     r3, [r2]
	ldr     r2, [r3, #0x560]
	add     r0, r2, r0, asr #4
	str     r0, [r3, #0x560]
	ldrh    r0, [r5, #0x20]
	sub     r0, r0, #0x18
	strh    r0, [r4, #0x20]
	ldrh    r0, [r4, #0x20]
	bl      Function_6003ea8
	mov     r1, r6
	strh    r0, [r1, #0x2]
	b       branch_6017b78
@ 0x6017964

.arm
branch_6017964: @ 6017964 :arm
	mov     r0, #0x4
	bl      Function_600bd28
	b       branch_6017b78
@ 0x6017970

.arm
branch_6017970: @ 6017970 :arm
	ldr     r1, [pc, #0x238] @ [0x6017bb0] (=0x380fff4)
	ldrh    r0, [r5, #0x20]
	ldr     r4, [r1]
	sub     r1, r0, #0x18
	add     r0, r4, #0xe4
	strh    r1, [r5, #0x20]
	add     r8, r0, #1, 22 @ #0x400
	mov     r7, #0x0
	b       branch_6017a2c
@ 0x6017994

.arm
branch_6017994: @ 6017994 :arm
	mov     r0, #0x18
	mul     r9, r7, r0
	ldrh    r0, [r8, r9]
	add     r10, r8, r9
	cmp     r0, #0x0
	beq     branch_6017a28
	add     r1, sp, #0x8
	add     r0, r10, #0x4
	bl      Function_600acc0
	cmp     r0, #0x0
	beq     branch_6017a28
	add     r1, sp, #0xe
	add     r0, r10, #0xa
	bl      Function_600acc0
	cmp     r0, #0x0
	beq     branch_6017a28
	ldrh    r2, [sp, #0x14]
	ldrh    r0, [r10, #0x10]
	mov     r1, r2, lsl #16
	mov     r1, r1, lsr #20
	mov     r0, r0, lsl #16
	cmp     r1, r0, lsr #20
	bne     branch_6017a28
	mov     r1, r10
	ldrh    r0, [r1, #0x10]
	sub     r11, r0, r2
	tst     r11, #2, 2 @ #0x80000000
	bne     branch_6017b78
	ldrh    r0, [r1, #0x2]
	ldrh    r1, [r5, #0x20]
	mul     r0, r11, r0
	str     r0, [sp]
	subs    r6, r1, r0
	beq     branch_6017b78
	tst     r6, #2, 2 @ #0x80000000
	beq     branch_6017a34
	b       branch_6017b78
@ 0x6017a28

.arm
branch_6017a28: @ 6017a28 :arm
	add     r7, r7, #0x1
.arm
branch_6017a2c: @ 6017a2c :arm
	cmp     r7, #0x3
	bcc     branch_6017994
.arm
branch_6017a34: @ 6017a34 :arm
	cmp     r7, #0x3
	beq     branch_6017b78
	mov     r0, #0x18
	mul     r9, r7, r0
	add     r0, r8, r9
	ldr     r1, [r0, #0x14]
	ldr     r0, [pc, #0x168] @ [0x6017bbc] (=0x5e4)
	add     r7, r1, #0x10
	ldrh    r1, [r7, #0x10]
	add     r10, r1, r6
	cmp     r10, r0
	bls     branch_6017a7c
	add     r0, r4, #98, 30 @ #0x188
	sub     r1, r7, #0x10
	bl      Function_6009140
	mov     r0, #0x0
	strh    r0, [r8, r9]
	b       branch_6017b78
@ 0x6017a7c

.arm
branch_6017a7c: @ 6017a7c :arm
	ldr     r0, [sp]
	add     r3, r5, #0x3c
	add     r2, r7, #0x2c
	add     r1, r2, r1
	add     r0, r3, r0
	add     r2, r6, #0x1
	bl      Function_6001ae0
	strh    r10, [r7, #0x10]
	ldrh    r1, [r5, #0x18]
	add     r0, r8, r9
	ldrh    r6, [r0, #0x10]
	and     r2, r1, #0xf0
	mov     r1, r2, asr #3
	add     r1, r2, r1, lsr #28
	mov     r3, r6, lsl #28
	rsb     r2, r11, r1, asr #4
	add     r2, r2, r3, lsr #28
	mov     r2, r2, lsl #16
	mov     r2, r2, lsr #16
	bic     r3, r6, #0xf
	and     r2, r2, #0xf
	orr     r3, r3, r2
	ldr     r2, [pc, #0xd4] @ [0x6017bb0] (=0x380fff4)
	strh    r3, [r0, #0x10]
	ldr     r3, [r2]
	ldr     r2, [r3, #0x560]
	add     r1, r2, r1, asr #4
	str     r1, [r3, #0x560]
	ldrh    r1, [r5, #0x18]
	tst     r1, #1, 24 @ #0x100
	bne     branch_6017b78
	mov     r1, #0x0
	strh    r1, [r0]
	ldrh    r0, [r7, #0x8]
	bic     r0, r0, #0xf0
	add     r0, r0, #0x10
	strh    r0, [r7, #0x8]
	ldrh    r0, [r7, #0x10]
	add     r0, r0, #0x18
	strh    r0, [r7, #0x10]
	ldrh    r0, [r7, #0x8]
	ands    r0, r0, #0xf
	beq     branch_6017b50
	cmp     r0, #0x8
	add     r0, r4, #98, 30 @ #0x188
	bne     branch_6017b70
	add     r1, r4, #113, 30 @ #0x1c4
	sub     r2, r7, #0x10
	bl      Function_60091c0
	mov     r0, #0x2
	mov     r1, #0x6
	bl      Function_6008f00
	b       branch_6017b78
@ 0x6017b50

.arm
branch_6017b50: @ 6017b50 :arm
	add     r0, r4, #98, 30 @ #0x188
	add     r1, r4, #119, 30 @ #0x1dc
	sub     r2, r7, #0x10
	bl      Function_60091c0
	mov     r0, #0x1
	mov     r1, #0x7
	bl      Function_6008f00
	b       branch_6017b78
@ 0x6017b70

.arm
branch_6017b70: @ 6017b70 :arm
	sub     r1, r7, #0x10
	bl      Function_6009140
.arm
branch_6017b78: @ 6017b78 :arm
	ldr     r0, [sp, #0x4]
	mov     r1, r5
	add     r0, r0, #0x6c
	bl      Function_6009140
	ldr     r0, [sp, #0x4]
	ldrh    r0, [r0, #0x74]
	cmp     r0, #0x0
	beq     branch_6017ba4
	mov     r0, #0x2
	mov     r1, #0x9
	bl      Function_6008f00
.arm
branch_6017ba4: @ 6017ba4 :arm
	add     sp, sp, #0x18
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x6017bb0

.word 0x380fff4 @ 0x6017bb0
.word 0x5fc @ 0x6017bb4
.word 0x622 @ 0x6017bb8
.word 0x5e4 @ 0x6017bbc
.arm
Function_6017bc0: @ 6017bc0 :arm
	ldr     pc, [pc, #-0x4] @ [0x6017bc4] (=0x37faf2c)
@ 0x6017bc4

.word 0x37faf2c @ 0x6017bc4
.arm
Function_6017bc8: @ 6017bc8 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r4, [pc, #0x5c] @ [0x6017c30] (=0x380fff4)
	mov     r6, #0x0
	ldr     r0, [r4]
	mov     r7, #0x18
	add     r0, r0, #0xe4
	add     r5, r0, #1, 22 @ #0x400
.arm
branch_6017be4: @ 6017be4 :arm
	mul     r1, r6, r7
	ldrh    r0, [r5, r1]
	add     r1, r5, r1
	cmp     r0, #0x0
	beq     branch_6017c1c
	sub     r0, r0, #0x1
	strh    r0, [r1]
	ldrh    r0, [r1]
	cmp     r0, #0x0
	bne     branch_6017c1c
	ldr     r0, [r4]
	ldr     r1, [r1, #0x14]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_6009140
.arm
branch_6017c1c: @ 6017c1c :arm
	add     r6, r6, #0x1
	cmp     r6, #0x3
	bcc     branch_6017be4
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6017c30

.word 0x380fff4 @ 0x6017c30
.arm
Function_6017c34: @ 6017c34 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r1, [pc, #0xec] @ [0x6017d2c] (=0x380fff4)
	mov     r0, #0x0
	ldr     r3, [r1]
	mov     r2, #0x50
	add     r1, r3, #0xdc
	add     r5, r1, #1, 22 @ #0x400
	mov     r1, r5
	add     r4, r3, #209, 30 @ #0x344
	bl      Function_600a9f0
	ldr     r1, [pc, #0xcc] @ [0x6017d30] (=0x4808030)
	mov     r2, #2, 18 @ #0x8000
	ldr     r0, [pc, #0xc0] @ [0x6017d2c] (=0x380fff4)
	strh    r2, [r1]
	ldr     r0, [r0]
	add     r0, r0, #3, 24 @ #0x300
	ldrh    r0, [r0, #0x50]
	cmp     r0, #0x3
	addls   pc, pc, r0, lsl #2
	b       branch_6017cb0
@ 0x6017c84

.arm
Function_6017c84: @ 6017c84 :arm
	b       branch_6017c94
@ 0x6017c88

.arm
Function_6017c88: @ 6017c88 :arm
	b       branch_6017c9c
@ 0x6017c8c

.arm
Function_6017c8c: @ 6017c8c :arm
	b       branch_6017ca4
@ 0x6017c90

.arm
Function_6017c90: @ 6017c90 :arm
	b       branch_6017cac
@ 0x6017c94

.arm
branch_6017c94: @ 6017c94 :arm
	ldr     r6, [pc, #0x98] @ [0x6017d34] (=0x794)
	b       branch_6017cb0
@ 0x6017c9c

.arm
branch_6017c9c: @ 6017c9c :arm
	ldr     r6, [pc, #0x94] @ [0x6017d38] (=0x10c4)
	b       branch_6017cb0
@ 0x6017ca4

.arm
branch_6017ca4: @ 6017ca4 :arm
	ldr     r6, [pc, #0x90] @ [0x6017d3c] (=0xbfc)
	b       branch_6017cb0
@ 0x6017cac

.arm
branch_6017cac: @ 6017cac :arm
	ldr     r6, [pc, #0x80] @ [0x6017d34] (=0x794)
.arm
branch_6017cb0: @ 6017cb0 :arm
	ldr     r3, [pc, #0x88] @ [0x6017d40] (=0x4808050)
	add     r0, r6, #1, 18 @ #0x4000
	ldr     r1, [pc, #0x84] @ [0x6017d44] (=0x5f60)
	add     r2, r0, #18, 10 @ #0x4800000
	mov     r0, r6, lsl #15
	strh    r2, [r3]
	mov     r0, r0, lsr #16
	strh    r0, [r3, #0x6]
	strh    r1, [r3, #0x2]
	strh    r0, [r3, #0xa]
	ldr     r2, [pc, #0x68] @ [0x6017d48] (=0xffff)
	strh    r0, [r5, #0x4]
	sub     r0, r1, #1, 18 @ #0x4000
	strh    r2, [r5]
	sub     r0, r0, r6
	strh    r0, [r4, #0x9a]
	sub     r0, r1, #0x2
	strh    r0, [r3, #0x12]
	rsb     r0, r2, #6, 18 @ #0x18000
	strh    r0, [r3, #-0x20]
	add     r0, r3, #127, 30 @ #0x1fc
	ldr     r1, [pc, #0x40] @ [0x6017d4c] (=0x480824e)
	strh    r2, [r0]
	ldr     r0, [pc, #0x3c] @ [0x6017d50] (=0x4805f70)
	strh    r2, [r1]
	strh    r2, [r0]
	strh    r2, [r0, #0x2]
	strh    r2, [r0, #0xe]
	strh    r2, [r0, #0x6]
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6017d2c

.word 0x380fff4 @ 0x6017d2c
.word 0x4808030 @ 0x6017d30
.word 0x794 @ 0x6017d34
.word 0x10c4 @ 0x6017d38
.word 0xbfc @ 0x6017d3c
.word 0x4808050 @ 0x6017d40
.word 0x5f60 @ 0x6017d44
.word 0xffff @ 0x6017d48
.word 0x480824e @ 0x6017d4c
.word 0x4805f70 @ 0x6017d50
.arm
Function_6017d54: @ 6017d54 :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r3, [pc, #0x134] @ [0x6017e94] (=0x380fff4)
	mov     r9, r2
	ldr     r2, [r3]
	mov     r11, r0
	add     r0, r9, #0x1
	mov     r10, r1
	add     r4, r2, #143, 30 @ #0x23c
	bl      Function_600ba0c
	cmp     r0, #0x20
	bhi     branch_6017e8c
	mov     r6, #0x4
	mov     r7, r6
	mov     r8, #1, 22 @ #0x400
	mov     r5, #0x0
	b       branch_6017dd4
@ 0x6017d94

.arm
branch_6017d94: @ 6017d94 :arm
	ldrh    r0, [r4]
	cmp     r0, #0x0
	beq     branch_6017dc8
	add     r0, r4, #0x6
	add     r1, r10, #0x24
	bl      Function_600acc0
	cmp     r0, #0x0
	bne     branch_6017df4
	ldrh    r0, [r4, #0x30]
	cmp     r0, r8
	movcc   r8, r0
	movcc   r7, r5
	b       branch_6017dcc
@ 0x6017dc8

.arm
branch_6017dc8: @ 6017dc8 :arm
	mov     r6, r5
.arm
branch_6017dcc: @ 6017dcc :arm
	add     r5, r5, #0x1
	add     r4, r4, #0x32
.arm
branch_6017dd4: @ 6017dd4 :arm
	cmp     r5, #0x4
	bcc     branch_6017d94
	cmp     r6, #0x4
	movne   r5, r6
	bne     branch_6017df4
	cmp     r7, #0x4
	movne   r5, r7
	beq     branch_6017e8c
.arm
branch_6017df4: @ 6017df4 :arm
	ldr     r0, [pc, #0x98] @ [0x6017e94] (=0x380fff4)
	mov     r2, #0x32
	mul     r4, r5, r2
	ldr     r0, [r0]
	add     r5, r0, #143, 30 @ #0x23c
	add     r6, r5, r4
	mov     r1, r6
	mov     r0, #0x0
	bl      Function_6000598
	mov     r0, #1, 22 @ #0x400
	strh    r0, [r6, #0x30]
	ldrh    r1, [r10, #0x12]
	add     r0, r6, #0x6
	and     r1, r1, #0xff
	strh    r1, [r5, r4]
	strh    r11, [r6, #0x2]
	add     r1, r10, #0x24
	bl      Function_600a924
	add     r0, r9, #0x1
	bl      Function_600ba0c
	strh    r0, [r6, #0xc]
	mov     r7, #0x0
	add     r5, r9, #0x2
	add     r4, r6, #0xe
	b       branch_6017e70
@ 0x6017e58

.arm
branch_6017e58: @ 6017e58 :arm
	add     r0, r5, r7
	bl      Function_600ba0c
	mov     r1, r0
	add     r0, r4, r7
	bl      Function_600b9e0
	add     r7, r7, #0x1
.arm
branch_6017e70: @ 6017e70 :arm
	ldrh    r0, [r6, #0xc]
	cmp     r7, r0
	bcc     branch_6017e58
	ldrh    r0, [r10, #0x34]
	strh    r0, [r6, #0x2e]
	ldrh    r0, [r10, #0x36]
	strh    r0, [r6, #0x4]
.arm
branch_6017e8c: @ 6017e8c :arm
	ldmfd   sp!, {r3-r11,lr}
	bx      lr
@ 0x6017e94

.word 0x380fff4 @ 0x6017e94
.arm
Function_6017e98: @ 6017e98 :arm
	ldr     r1, [pc, #0x14] @ [0x6017eb4] (=0x380fff4)
	ldr     r12, [pc, #0x14] @ [0x6017eb8] (=0x37fb018)
	ldr     r1, [r1]
	mov     r0, #0x0
	mov     r2, #0xc8
	add     r1, r1, #143, 30 @ #0x23c
	bx      r12
@ 0x6017eb4

.word 0x380fff4 @ 0x6017eb4
.word 0x37fb018 @ 0x6017eb8
.arm
Function_6017ebc: @ 6017ebc :arm
	ldr     r0, [pc, #0x3c] @ [0x6017f00] (=0x380fff4)
	mov     r3, #0x0
	ldr     r0, [r0]
	add     r2, r0, #143, 30 @ #0x23c
	mov     r0, r3
.arm
branch_6017ed0: @ 6017ed0 :arm
	ldrh    r1, [r2, #0x30]
	cmp     r1, #0x0
	beq     branch_6017ef0
	sub     r1, r1, #0x1
	strh    r1, [r2, #0x30]
	ldrh    r1, [r2, #0x30]
	cmp     r1, #0x0
	streqh  r0, [r2]
.arm
branch_6017ef0: @ 6017ef0 :arm
	add     r3, r3, #0x1
	cmp     r3, #0x4
	bcc     branch_6017ed0
	bx      lr
@ 0x6017f00

.word 0x380fff4 @ 0x6017f00
.arm
Function_6017f04: @ 6017f04 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r1, [pc, #0x90] @ [0x6017fa0] (=0x380fff4)
	mov     r4, r0
	ldr     r0, [r1]
	ldr     r1, [r0, #0x318]
	ldrh    r6, [r1, #0x2]
	cmp     r6, #0xa4
	bcc     branch_6017f30
	ldr     r0, [pc, #0x78] @ [0x6017fa4] (=0x1d6)
	cmp     r6, r0
	bls     branch_6017f38
.arm
branch_6017f30: @ 6017f30 :arm
	mov     r0, #0x2
	b       branch_6017f98
@ 0x6017f38

.arm
branch_6017f38: @ 6017f38 :arm
	add     r7, r1, #0x2
	mov     r5, #0x0
	b       branch_6017f68
@ 0x6017f44

.arm
branch_6017f44: @ 6017f44 :arm
	mov     r0, r7
	bl      Function_600ba0c
	mov     r1, r5, lsl #16
	and     r0, r0, #0xff
	mov     r1, r1, lsr #16
	add     r7, r7, #0x1
	bl      Function_600baa4
	mov     r5, r0
	sub     r6, r6, #0x1
.arm
branch_6017f68: @ 6017f68 :arm
	cmp     r6, #0x0
	bne     branch_6017f44
	ldr     r0, [pc, #0x28] @ [0x6017fa0] (=0x380fff4)
	cmp     r4, #0x0
	ldr     r0, [r0]
	ldr     r0, [r0, #0x318]
	ldrh    r1, [r0]
	orrne   r0, r1, r5, lsl #16
	strne   r0, [r4]
	cmp     r5, r1
	movne   r0, #0x1
	moveq   r0, #0x0
.arm
branch_6017f98: @ 6017f98 :arm
	ldmfd   sp!, {r3-r7,lr}
	bx      lr
@ 0x6017fa0

.word 0x380fff4 @ 0x6017fa0
.word 0x1d6 @ 0x6017fa4
.arm
Function_6017fa8: @ 6017fa8 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	add     r4, sp, #0x0
.arm
branch_6017fb4: @ 6017fb4 :arm
	mov     r0, r4
	bl      Function_6017fe8
	ldr     r0, [sp]
	tst     r0, #0x20
	beq     branch_6017fd0
	bl      Function_6017ff0
	b       branch_6017fb4
@ 0x6017fd0

.arm
branch_6017fd0: @ 6017fd0 :arm
	ldr     r0, [sp]
	tst     r0, #0x1
	bne     branch_6017fb4
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,lr}
	bx      lr
@ 0x6017fe8

.arm
Function_6017fe8: @ 6017fe8 :arm
	ldr     pc, [pc, #-0x4] @ [0x6017fec] (=0x3803da4)
@ 0x6017fec

.word 0x3803da4 @ 0x6017fec
.arm
Function_6017ff0: @ 6017ff0 :arm
	ldr     pc, [pc, #-0x4] @ [0x6017ff4] (=0x38044e0)
@ 0x6017ff4

.word 0x38044e0 @ 0x6017ff4
.arm
Function_6017ff8: @ 6017ff8 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r3, [pc, #0x50] @ [0x6018054] (=0x380fff4)
	mov     r6, r1
	ldr     r1, [r3]
	mov     r5, r2
	ldr     r1, [r1, #0x318]
	cmp     r1, #0x0
	beq     branch_601804c
	add     r0, r1, r0
	sub     r4, r0, #0x2a
	b       branch_6018044
@ 0x6018024

.arm
branch_6018024: @ 6018024 :arm
	mov     r0, r4
	bl      Function_600ba0c
	mov     r1, r0
	mov     r0, r5
	add     r4, r4, #0x1
	bl      Function_600b9e0
	add     r5, r5, #0x1
	sub     r6, r6, #0x1
.arm
branch_6018044: @ 6018044 :arm
	cmp     r6, #0x0
	bne     branch_6018024
.arm
branch_601804c: @ 601804c :arm
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x6018054

.word 0x380fff4 @ 0x6018054
.arm
Function_6018058: @ 6018058 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r3, [pc, #0x40] @ [0x60180a4] (=0x380fff4)
	mov     r6, r0
	ldr     r0, [r3]
	mov     r5, r1
	ldr     r0, [r0, #0x314]
	mov     r4, r2
	bl      Function_60180a8
	bl      Function_6017fa8
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      Function_60180b0
	ldr     r0, [pc, #0x10] @ [0x60180a4] (=0x380fff4)
	ldr     r0, [r0]
	ldr     r0, [r0, #0x314]
	bl      Function_60180b8
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x60180a4

.word 0x380fff4 @ 0x60180a4
.arm
Function_60180a8: @ 60180a8 :arm
	ldr     pc, [pc, #-0x4] @ [0x60180ac] (=0x3800a44)
@ 0x60180ac

.word 0x3800a44 @ 0x60180ac
.arm
Function_60180b0: @ 60180b0 :arm
	ldr     pc, [pc, #-0x4] @ [0x60180b4] (=0x3803e14)
@ 0x60180b4

.word 0x3803e14 @ 0x60180b4
.arm
Function_60180b8: @ 60180b8 :arm
	ldr     pc, [pc, #-0x4] @ [0x60180bc] (=0x3800aa0)
@ 0x60180bc

.word 0x3800aa0 @ 0x60180bc
.arm
Function_60180c0: @ 60180c0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0xd8] @ [0x60181a4] (=0x380fff4)
	ldr     r0, [r0]
	ldr     r0, [r0, #0x314]
	bl      Function_60180a8
	bl      Function_6017fa8
	mov     r3, #0x0
	add     r2, sp, #0x0
	mov     r0, #0x2c
	mov     r1, #0x2
	str     r3, [sp]
	bl      Function_60180b0
	ldr     r0, [pc, #0xac] @ [0x60181a4] (=0x380fff4)
	ldr     r0, [r0]
	ldr     r0, [r0, #0x314]
	bl      Function_60180b8
	ldr     r1, [sp]
	cmp     r1, #0xa4
	bcc     branch_6018118
	ldr     r0, [pc, #0x94] @ [0x60181a8] (=0x1d6)
	cmp     r1, r0
	bls     branch_6018120
branch_6018118: @ 6018118 :arm
	mov     r0, #0x0
	b       branch_601819c

branch_6018120: @ 6018120 :arm
	ldr     r0, [pc, #0x7c] @ [0x60181a4] (=0x380fff4)
	add     r1, r1, #0x2
	str     r1, [sp]
	ldr     r0, [r0]
	add     r0, r0, #98, 30 @ #0x188
	bl      Function_60090a4
	ldr     r2, [pc, #0x64] @ [0x60181a4] (=0x380fff4)
	ldr     r1, [r2]
	str     r0, [r1, #0x318]
	ldr     r1, [r2]
	ldr     r0, [r1, #0x318]
	cmp     r0, #0x0
	moveq   r0, #0x0
	beq     branch_601819c
	add     r0, r0, #0xc
	str     r0, [r1, #0x318]
	ldr     r0, [r2]
	ldr     r0, [r0, #0x314]
	bl      Function_60180a8
	bl      Function_6017fa8
	ldr     r0, [pc, #0x2c] @ [0x60181a4] (=0x380fff4)
	ldr     r1, [sp]
	ldr     r2, [r0]
	mov     r0, #0x2a
	ldr     r2, [r2, #0x318]
	bl      Function_60180b0
	ldr     r0, [pc, #0x14] @ [0x60181a4] (=0x380fff4)
	ldr     r0, [r0]
	ldr     r0, [r0, #0x314]
	bl      Function_60180b8
	mov     r0, #0x1
branch_601819c: @ 601819c :arm
	ldmfd   sp!, {r3,lr}
	bx      lr
@ 0x60181a4

.word 0x380fff4 @ 0x60181a4
.word 0x1d6 @ 0x60181a8



Jumptable_60181ac: @ 0x60181ac
.word Function_6002b1c @ =0x6002b1c, 0x60181ac
.word Function_6002bbc @ =0x6002bbc, 0x60181b0
.word Function_6002fcc @ =0x6002fcc, 0x60181b4
.word Function_6007f6c @ =0x6007f6c, 0x60181b8
.word Function_6008168 @ =0x6008168, 0x60181bc
.word Function_60081d0 @ =0x60081d0, 0x60181c0
.word Function_6008490 @ =0x6008490, 0x60181c4
.word Function_6003084 @ =0x6003084, 0x60181c8
.word Function_6003144 @ =0x6003144, 0x60181cc
.word Function_600340c @ =0x600340c, 0x60181d0
.word Function_6003604 @ =0x6003604, 0x60181d4
.word Function_6003ef8 @ =0x6003ef8, 0x60181d8
.word Function_6004000 @ =0x6004000, 0x60181dc
.word Function_60045e8 @ =0x60045e8, 0x60181e0
.word Function_6004d18 @ =0x6004d18, 0x60181e4
.word Function_60050ac @ =0x60050ac, 0x60181e8
.word Function_60051e8 @ =0x60051e8, 0x60181ec
.word Function_6005338 @ =0x6005338, 0x60181f0
.word Function_60053c4 @ =0x60053c4, 0x60181f4
.word Function_60054bc @ =0x60054bc, 0x60181f8
.word Function_6005578 @ =0x6005578, 0x60181fc
.word Function_6001e90 @ =0x6001e90, 0x6018200
.word Function_6001e90 @ =0x6001e90, 0x6018204
.word Function_6001e90 @ =0x6001e90, 0x6018208
.word Function_6005718 @ =0x6005718, 0x601820c
.word Function_600580c @ =0x600580c, 0x6018210
.word Function_6005880 @ =0x6005880, 0x6018214
.word Function_60058a4 @ =0x60058a4, 0x6018218
.word Function_6006294 @ =0x6006294, 0x601821c
.word Function_60058c8 @ =0x60058c8, 0x6018220
.word Function_60059f4 @ =0x60059f4, 0x6018224
.word Function_6005bd0 @ =0x6005bd0, 0x6018228
.word Function_6005c38 @ =0x6005c38, 0x601822c
.word Function_6007e30 @ =0x6007e30, 0x6018230
.word Function_6007ec0 @ =0x6007ec0, 0x6018234
.word Function_600853c @ =0x600853c, 0x6018238
.word Function_60088bc @ =0x60088bc, 0x601823c
.word Function_6008934 @ =0x6008934, 0x6018240
.word Function_6003994 @ =0x6003994, 0x6018244
.word Function_6005620 @ =0x6005620, 0x6018248
.word Function_6008948 @ =0x6008948, 0x601824c
.word Function_6008ac8 @ =0x6008ac8, 0x6018250
.word Function_6008aec @ =0x6008aec, 0x6018254
.word Function_6006434 @ =0x6006434, 0x6018258
.word Function_6006468 @ =0x6006468, 0x601825c
.word Function_6006490 @ =0x6006490, 0x6018260
.word Function_600ff9c @ =0x600ff9c, 0x6018264
.word Function_60101f0 @ =0x60101f0, 0x6018268
.word Function_60102cc @ =0x60102cc, 0x601826c
.word Function_60103f0 @ =0x60103f0, 0x6018270
.word Function_60104ec @ =0x60104ec, 0x6018274
.word Function_60105e0 @ =0x60105e0, 0x6018278
.word Function_6015224 @ =0x6015224, 0x601827c
.word Function_6016fe4 @ =0x6016fe4, 0x6018280
.word Function_600da10 @ =0x600da10, 0x6018284
.word Function_6017698 @ =0x6017698, 0x6018288
.word Function_600eb1c @ =0x600eb1c, 0x601828c
.word Function_600f0ac @ =0x600f0ac, 0x6018290
.word Function_6009030 @ =0x6009030, 0x6018294
.word Function_601087c @ =0x601087c, 0x6018298
.word Function_600da5c @ =0x600da5c, 0x601829c
.word Function_600dc30 @ =0x600dc30, 0x60182a0
.word Function_600df9c @ =0x600df9c, 0x60182a4
.word Function_6017bc8 @ =0x6017bc8, 0x60182a8
.word Function_6017ebc @ =0x6017ebc, 0x60182ac
.word Function_600f40c @ =0x600f40c, 0x60182b0
.word Function_600e078 @ =0x600e078, 0x60182b4
.word Function_600bd6c @ =0x600bd6c, 0x60182b8
.word Function_600bdec @ =0x600bdec, 0x60182bc
.word Function_600be8c @ =0x600be8c, 0x60182c0


Unknown_60182c4: @ 0x60182c4
.incbin "./baserom/arm7.bin", 0x271fc, 0x60185e8 - 0x60182c4


Jumptable_60185e8: @ 0x60185e8
.word 0x20018 @ 0x60185e8
.word Function_601237c @ =0x601237c, 0x60185ec
.word 0x10004 @ 0x60185f0
.word Function_6012548 @ =0x6012548, 0x60185f4
.word 0x1000a @ 0x60185f8
.word Function_60126ec @ =0x60126ec, 0x60185fc
.word 0x1000c @ 0x6018600
.word Function_6012ba0 @ =0x6012ba0, 0x6018604
.word 0x10001 @ 0x6018608
.word Function_6012c00 @ =0x6012c00, 0x601860c
.word 0x40000 @ 0x6018610
.word Function_6011a94 @ =0x6011a94, 0x6018614
.word 0x120000 @ 0x6018618
.word Function_6011ac4 @ =0x6011ac4, 0x601861c
.word 0x20000 @ 0x6018620
.word Function_6011b10 @ =0x6011b10, 0x6018624
.word 0x20000 @ 0x6018628
.word Function_6011b38 @ =0x6011b38, 0x601862c
.word 0x20000 @ 0x6018630
.word Function_6011b60 @ =0x6011b60, 0x6018634
.word 0x10000 @ 0x6018638
.word Function_6011b88 @ =0x6011b88, 0x601863c
.word 0x10003 @ 0x6018640
.word Function_6011414 @ =0x6011414, 0x6018644
.word 0x10011 @ 0x6018648
.word Function_601142c @ =0x601142c, 0x601864c
.word 0x10001 @ 0x6018650
.word Function_601144c @ =0x601144c, 0x6018654
.word 0x10001 @ 0x6018658
.word Function_6011488 @ =0x6011488, 0x601865c
.word 0x10001 @ 0x6018660
.word Function_60114c4 @ =0x60114c4, 0x6018664
.word 0x10000 @ 0x6018668
.word Function_6011504 @ =0x6011504, 0x601866c
.word 0x10001 @ 0x6018670
.word Function_600f488 @ =0x600f488, 0x6018674
.word 0x10003 @ 0x6018678
.word Function_600f4c8 @ =0x600f4c8, 0x601867c
.word 0x23001f @ 0x6018680
.word Function_600f574 @ =0x600f574, 0x6018684
.word 0x50022 @ 0x6018688
.word Function_600f6b4 @ =0x600f6b4, 0x601868c
.word 0x60005 @ 0x6018690
.word Function_600f86c @ =0x600f86c, 0x6018694
.word 0x40004 @ 0x6018698
.word Function_600f940 @ =0x600f940, 0x601869c
.word 0x30005 @ 0x60186a0
.word Function_600fa74 @ =0x600fa74, 0x60186a4
.word 0x30005 @ 0x60186a8
.word Function_600fb4c @ =0x600fb4c, 0x60186ac
.word 0x10004 @ 0x60186b0
.word Function_600fc0c @ =0x600fc0c, 0x60186b4
.word 0x10017 @ 0x60186b8
.word Function_600fd18 @ =0x600fd18, 0x60186bc
.word 0x12000c @ 0x60186c0
.word Function_600feb8 @ =0x600feb8, 0x60186c4
.word 0x10000 @ 0x60186c8
.word Function_600f37c @ =0x600f37c, 0x60186cc
.word 0x10000 @ 0x60186d0
.word Function_6011c60 @ =0x6011c60, 0x60186d4
.word 0x10000 @ 0x60186d8
.word Function_6011ca0 @ =0x6011ca0, 0x60186dc
.word 0x10000 @ 0x60186e0
.word Function_6011cfc @ =0x6011cfc, 0x60186e4
.word 0x10000 @ 0x60186e8
.word Function_6011d50 @ =0x6011d50, 0x60186ec
.word 0x10000 @ 0x60186f0
.word Function_6011d8c @ =0x6011d8c, 0x60186f4
.word 0x90000 @ 0x60186f8
.word Function_6011dc4 @ =0x6011dc4, 0x60186fc
.word 0x5c0000 @ 0x6018700
.word Function_6011e68 @ =0x6011e68, 0x6018704
.word 0x20000 @ 0x6018708
.word Function_6011ecc @ =0x6011ecc, 0x601870c
.word 0x10004 @ 0x6018710
.word Function_6011ef4 @ =0x6011ef4, 0x6018714
.word 0x10002 @ 0x6018718
.word Function_60122cc @ =0x60122cc, 0x601871c
.word 0x210000 @ 0x6018720
.word Function_6011568 @ =0x6011568, 0x6018724
.word 0x40000 @ 0x6018728
.word Function_60116a0 @ =0x60116a0, 0x601872c
.word 0x20000 @ 0x6018730
.word Function_60116d0 @ =0x60116d0, 0x6018734
.word 0x30000 @ 0x6018738
.word Function_60116f8 @ =0x60116f8, 0x601873c
.word 0x20000 @ 0x6018740
.word Function_6011730 @ =0x6011730, 0x6018744
.word 0x20000 @ 0x6018748
.word Function_6011758 @ =0x6011758, 0x601874c
.word 0x20000 @ 0x6018750
.word Function_6011780 @ =0x6011780, 0x6018754
.word 0x20000 @ 0x6018758
.word Function_60117a8 @ =0x60117a8, 0x601875c
.word 0x10000 @ 0x6018760
.word Function_600f37c @ =0x600f37c, 0x6018764
.word 0x20000 @ 0x6018768
.word Function_60117d0 @ =0x60117d0, 0x601876c
.word 0x20000 @ 0x6018770
.word Function_6011800 @ =0x6011800, 0x6018774
.word 0x20000 @ 0x6018778
.word Function_6011830 @ =0x6011830, 0x601877c
.word 0x20000 @ 0x6018780
.word Function_6011858 @ =0x6011858, 0x6018784
.word 0x110000 @ 0x6018788
.word Function_6011880 @ =0x6011880, 0x601878c
.word 0x20000 @ 0x6018790
.word Function_60118bc @ =0x60118bc, 0x6018794
.word 0x20000 @ 0x6018798
.word Function_60118ec @ =0x60118ec, 0x601879c
.word 0x40000 @ 0x60187a0
.word Function_6011914 @ =0x6011914, 0x60187a4
.word 0x10000 @ 0x60187a8
.word Function_600f37c @ =0x600f37c, 0x60187ac
.word 0x20000 @ 0x60187b0
.word Function_6011954 @ =0x6011954, 0x60187b4
.word 0x20000 @ 0x60187b8
.word Function_6011980 @ =0x6011980, 0x60187bc
.word 0x30000 @ 0x60187c0
.word Function_60119bc @ =0x60119bc, 0x60187c4
.word 0x20000 @ 0x60187c8
.word Function_6011a1c @ =0x6011a1c, 0x60187cc
.word 0x20000 @ 0x60187d0
.word Function_6011a58 @ =0x6011a58, 0x60187d4
.word 0x10048 @ 0x60187d8
.word Function_6010e60 @ =0x6010e60, 0x60187dc
.word 0x10003 @ 0x60187e0
.word Function_6010f4c @ =0x6010f4c, 0x60187e4
.word 0x10001 @ 0x60187e8
.word Function_6010f8c @ =0x6010f8c, 0x60187ec
.word 0x10001 @ 0x60187f0
.word Function_6010fa4 @ =0x6010fa4, 0x60187f4
.word 0x10001 @ 0x60187f8
.word Function_6010fe4 @ =0x6010fe4, 0x60187fc
.word 0x10001 @ 0x6018800
.word Function_6011034 @ =0x6011034, 0x6018804
.word 0x10001 @ 0x6018808
.word Function_601104c @ =0x601104c, 0x601880c
.word 0x10001 @ 0x6018810
.word Function_6011064 @ =0x6011064, 0x6018814
.word 0x10028 @ 0x6018818
.word Function_601107c @ =0x601107c, 0x601881c
.word 0x10001 @ 0x6018820
.word Function_6011094 @ =0x6011094, 0x6018824
.word 0x10001 @ 0x6018828
.word Function_60110d4 @ =0x60110d4, 0x601882c
.word 0x10001 @ 0x6018830
.word Function_60110ec @ =0x60110ec, 0x6018834
.word 0x10001 @ 0x6018838
.word Function_6011104 @ =0x6011104, 0x601883c
.word 0x10010 @ 0x6018840
.word Function_6011120 @ =0x6011120, 0x6018844
.word 0x10001 @ 0x6018848
.word Function_6011138 @ =0x6011138, 0x601884c
.word 0x10001 @ 0x6018850
.word Function_6011150 @ =0x6011150, 0x6018854
.word 0x10003 @ 0x6018858
.word Function_6011168 @ =0x6011168, 0x601885c
.word 0x10003 @ 0x6018860
.word Function_60111b4 @ =0x60111b4, 0x6018864
.word 0x10001 @ 0x6018868
.word Function_60112bc @ =0x60112bc, 0x601886c
.word 0x10001 @ 0x6018870
.word Function_6011314 @ =0x6011314, 0x6018874
.word 0x10002 @ 0x6018878
.word Function_6011354 @ =0x6011354, 0x601887c
.word 0x10001 @ 0x6018880
.word Function_6011394 @ =0x6011394, 0x6018884
@ 0x6018888


.incbin "./baserom/arm7.bin", 0x277c0, 0x277d8 - 0x277c0






.section .text_, "ax" @ 0x277d8

Unknown_23a77d8: @ 0x23a77d8
@ start adress, size, bss size
.word 0x27e0000, 0xbc, 0x0
.word 0x37f8000, 0xec94, 0x4238
.word 0x6000000, 0x188a0, 0x1590

Unknown_23a77fc: @ 0x23a77fc


