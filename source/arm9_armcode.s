
.arm
Function_209c400: @ 209c400 :arm
	stmfd   sp!, {r4,r5,lr}
	sub     sp, sp, #0x4
	mov     r5, r0
	ldr     r1, [r5, #0x4]
	cmp     r1, #0x0
	addeq   sp, sp, #0x4
	ldmeqfd sp!, {r4,r5,lr}
	bxeq    lr

branch_209c420: @ 209c420 :arm
	ldr     r4, [r1]
	mov     r0, r5
	bl      Function_209c444
	mov     r1, r4
	cmp     r4, #0x0
	bne     branch_209c420
	add     sp, sp, #0x4
	ldmfd   sp!, {r4,r5,lr}
	bx      lr
@ 0x209c444

.arm
Function_209c444: @ 209c444 :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0x4
	mov     r6, r1
	mov     r7, r0
	add     r0, r6, #0x8
	bl      Function_20a22b8
	movs    r1, r0
	beq     branch_209c484
	add     r5, r7, #0x1c
	add     r4, r6, #0x8
.arm
branch_209c46c: @ 209c46c :arm
	mov     r0, r5
	bl      Function_20a2304
	mov     r0, r4
	bl      Function_20a22b8
	movs    r1, r0
	bne     branch_209c46c
.arm
branch_209c484: @ 209c484 :arm
	add     r0, r6, #0x14
	bl      Function_20a22b8
	movs    r1, r0
	beq     branch_209c4b4
	add     r5, r7, #0x1c
	add     r4, r6, #0x14
.arm
branch_209c49c: @ 209c49c :arm
	mov     r0, r5
	bl      Function_20a2304
	mov     r0, r4
	bl      Function_20a22b8
	movs    r1, r0
	bne     branch_209c49c
.arm
branch_209c4b4: @ 209c4b4 :arm
	mov     r1, r6
	add     r0, r7, #0x4
	bl      Function_20a2238
	mov     r1, r6
	add     r0, r7, #0x10
	bl      Function_20a2304
	add     sp, sp, #0x4
	ldmfd   sp!, {r4-r7,lr}
	bx      lr
@ 0x209c4d8


.arm
Function_209c4d8: @ 209c4d8 :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0xc
	mov     r7, r0
	ldr     r0, [r7, #0x10]
	mov     r6, r1
	mov     r5, r2
	cmp     r0, #0x0
	mov     r4, #0x0
	beq     branch_209c55c
	add     r1, sp, #0x0
	str     r4, [r1]
	str     r4, [r1, #0x4]
	add     r0, r7, #0x10
	str     r4, [r1, #0x8]
	bl      Function_20a22b8
	ldr     r1, [r7, #0x28]
	add     r2, sp, #0x0
	add     r1, r1, r6, lsl #5
	mov     r4, r0
	bl      Function_209d998
	cmp     r5, #0x0
	beq     branch_209c538
	mov     r0, r4
	blx     r5
.arm
branch_209c538: @ 209c538 :arm
	mov     r1, r4
	add     r0, r7, #0x4
	bl      Function_20a2304
	ldr     r0, [r4, #0x20]
	ldr     r0, [r0]
	ldr     r0, [r0]
	mov     r0, r0, lsl #17
	movs    r0, r0, lsr #31
	movne   r4, #0x0
.arm
branch_209c55c: @ 209c55c :arm
	mov     r0, r4
	add     sp, sp, #0xc
	ldmfd   sp!, {r4-r7,lr}
	bx      lr
@ 0x209c56c


.arm
Function_209c56c: @ 209c56c :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0x4
	mov     r7, r0
	ldr     r0, [r7, #0x10]
	mov     r6, r1
	mov     r5, r2
	cmp     r0, #0x0
	mov     r4, #0x0
	beq     branch_209c5d0
	add     r0, r7, #0x10
	bl      Function_20a22b8
	ldr     r1, [r7, #0x28]
	mov     r4, r0
	mov     r2, r5
	add     r1, r1, r6, lsl #5
	bl      Function_209d998
	mov     r1, r4
	add     r0, r7, #0x4
	bl      Function_20a2304
	ldr     r0, [r4, #0x20]
	ldr     r0, [r0]
	ldr     r0, [r0]
	mov     r0, r0, lsl #17
	movs    r0, r0, lsr #31
	movne   r4, #0x0
branch_209c5d0: @ 209c5d0 :arm
	mov     r0, r4
	add     sp, sp, #0x4
	ldmfd   sp!, {r4-r7,lr}
	bx      lr
@ 0x209c5e0


.arm
Function_209c5e0: @ 209c5e0 :arm
	stmfd   sp!, {r4,r5,lr}
	sub     sp, sp, #0x4
	ldr     r2, [pc, #0xb4] @ [0x209c6a4] (=GFX_CONTROL)
	mov     r4, r0
	ldrh    r0, [r2]
	bic     r0, r0, #3, 20 @ #0x3000
	orr     r0, r0, #0x8
	strh    r0, [r2]
	str     r1, [r4, #0x44]
	ldr     r0, [r4, #0x38]
	mov     r0, r0, lsl #7
	movs    r0, r0, lsr #31
	bne     branch_209c65c
	ldr     r5, [r4, #0x4]
	cmp     r5, #0x0
	addeq   sp, sp, #0x4
	ldmeqfd sp!, {r4,r5,lr}
	bxeq    lr
.arm
branch_209c628: @ 209c628 :arm
	str     r5, [r4, #0x40]
	ldr     r0, [r5, #0x24]
	mov     r0, r0, lsl #28
	movs    r0, r0, lsr #31
	bne     branch_209c644
	mov     r0, r4
	bl      Function_209cf00
.arm
branch_209c644: @ 209c644 :arm
	ldr     r5, [r5]
	cmp     r5, #0x0
	bne     branch_209c628
	add     sp, sp, #0x4
	ldmfd   sp!, {r4,r5,lr}
	bx      lr
@ 0x209c65c

.arm
branch_209c65c: @ 209c65c :arm
	ldr     r5, [r4, #0xc]
	cmp     r5, #0x0
	addeq   sp, sp, #0x4
	ldmeqfd sp!, {r4,r5,lr}
	bxeq    lr
.arm
branch_209c670: @ 209c670 :arm
	str     r5, [r4, #0x40]
	ldr     r0, [r5, #0x24]
	mov     r0, r0, lsl #28
	movs    r0, r0, lsr #31
	bne     branch_209c68c
	mov     r0, r4
	bl      Function_209cf00
.arm
branch_209c68c: @ 209c68c :arm
	ldr     r5, [r5, #0x4]
	cmp     r5, #0x0
	bne     branch_209c670
	add     sp, sp, #0x4
	ldmfd   sp!, {r4,r5,lr}
	bx      lr
@ 0x209c6a4

.word GFX_CONTROL @ 0x209c6a4



.arm
Function_209c6a8: @ 209c6a8 :arm
	stmfd   sp!, {r4-r10,lr}
	mov     r8, r0
	ldr     r7, [r8, #0x4]
	cmp     r7, #0x0
	beq     branch_209c7bc
	add     r10, r8, #0x4
	add     r9, r8, #0x10
	mov     r4, #0x0
.arm
branch_209c6c8: @ 209c6c8 :arm
	ldr     r2, [r7, #0x24]
	ldr     r1, [r7, #0x20]
	mov     r0, r2, lsl #27
	movs    r0, r0, lsr #31
	ldr     r5, [r1]
	ldr     r6, [r7]
	bne     branch_209c6fc
	ldrh    r1, [r7, #0x4c]
	ldrh    r0, [r5, #0x32]
	cmp     r1, r0
	orrcs   r0, r2, #0x10
	strcs   r0, [r7, #0x24]
	strcsh  r4, [r7, #0x4c]
.arm
branch_209c6fc: @ 209c6fc :arm
	ldr     r0, [r7, #0x24]
	mov     r0, r0, lsl #29
	movs    r0, r0, lsr #31
	bne     branch_209c738
	ldr     r0, [r7, #0x80]
	mov     r0, r0, lsl #13
	movs    r0, r0, lsr #29
	beq     branch_209c72c
	ldrh    r1, [r8, #0x48]
	sub     r0, r0, #0x1
	cmp     r1, r0
	bne     branch_209c738
.arm
branch_209c72c: @ 209c72c :arm
	mov     r0, r8
	mov     r1, r7
	bl      Function_209d150
.arm
branch_209c738: @ 209c738 :arm
	ldr     r0, [r5]
	mov     r0, r0, lsl #17
	movs    r0, r0, lsr #31
	beq     branch_209c770
	ldrh    r1, [r5, #0x3c]
	cmp     r1, #0x0
	beq     branch_209c770
	ldr     r0, [r7, #0x24]
	mov     r0, r0, lsl #27
	movs    r0, r0, lsr #31
	beq     branch_209c770
	ldrh    r0, [r7, #0x4c]
	cmp     r0, r1
	bhi     branch_209c780
.arm
branch_209c770: @ 209c770 :arm
	ldr     r0, [r7, #0x24]
	mov     r0, r0, lsl #31
	movs    r0, r0, lsr #31
	beq     branch_209c7b0
.arm
branch_209c780: @ 209c780 :arm
	ldr     r0, [r7, #0xc]
	cmp     r0, #0x0
	bne     branch_209c7b0
	ldr     r0, [r7, #0x18]
	cmp     r0, #0x0
	bne     branch_209c7b0
	mov     r0, r10
	mov     r1, r7
	bl      Function_20a2238
	mov     r1, r0
	mov     r0, r9
	bl      Function_20a2304
.arm
branch_209c7b0: @ 209c7b0 :arm
	mov     r7, r6
	cmp     r6, #0x0
	bne     branch_209c6c8
.arm
branch_209c7bc: @ 209c7bc :arm
	ldrh    r0, [r8, #0x48]
	add     r0, r0, #0x1
	strh    r0, [r8, #0x48]
	ldrh    r0, [r8, #0x48]
	cmp     r0, #0x1
	movhi   r0, #0x0
	strhih  r0, [r8, #0x48]
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x209c7e0


.arm
Function_209c7e0: @ 209c7e0 :arm
	ldr     r12, =BeginDoEndLoadTexPltt
	ldr     r1, =Function_209ce90
	bx      r12
@ 0x209c7ec

.pool



.arm
Function_209c7f4: @ 209c7f4 :arm
	ldr     r12, =BeginDoEndLoadTex
	ldr     r1, =Function_209cec8
	bx      r12
@ 0x209c800

.pool



arm_func_start BeginDoEndLoadTexPltt
BeginDoEndLoadTexPltt: @ 209c808 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x4
	mov     r10, r0
	mov     r11, r1
	bl      GX_BeginLoadTexPltt
	ldrh    r0, [r10, #0x32]
	mov     r9, #0x0
	cmp     r0, #0x0
	ble     branch_209c8a8
	mov     r0, #0x1
	mov     r5, r9
	mov     r4, r9
	str     r0, [sp]
branch_209c83c: @ 209c83c :arm
	ldr     r0, [r10, #0x2c]
	mov     r6, r4
	ldr     r7, [r0, r5]
	add     r8, r0, r5
	ldr     r0, [r7, #0x10]
	cmp     r0, #0x0
	beq     branch_209c890
	ldr     r1, [r7, #0x4]
	mov     r1, r1, lsl #28
	mov     r1, r1, lsr #28
	cmp     r1, #0x2
	ldreq   r1, [sp]
	movne   r1, r4
	blx     r11
	mov     r6, r0
	ldr     r1, [r8]
	ldr     r0, [r7, #0xc]
	ldr     r2, [r7, #0x10]
	add     r0, r1, r0
	mov     r1, r6
	bl      GX_LoadTexPltt
branch_209c890: @ 209c890 :arm
	str     r6, [r8, #0x8]
	ldrh    r0, [r10, #0x32]
	add     r9, r9, #0x1
	add     r5, r5, #0x14
	cmp     r9, r0
	blt     branch_209c83c

branch_209c8a8: @ 209c8a8 :arm
	bl      GX_EndLoadTexPltt
	mov     r0, #0x1
	add     sp, sp, #0x4
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
arm_func_end BeginDoEndLoadTexPltt


arm_func_start BeginDoEndLoadTex
BeginDoEndLoadTex: @ 209c8bc :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0xc
	mov     r10, r0
	mov     r11, r1
	bl      GX_BeginLoadTex
	ldrh    r0, [r10, #0x32]
	mov     r9, #0x0
	cmp     r0, #0x0
	ble     branch_209c974
	mov     r0, #0x1
	mov     r6, r9
	str     r9, [sp, #0x4]
	str     r0, [sp]
	mov     r4, #0x14
branch_209c8f4: @ 209c8f4 :arm
	ldr     r2, [r10, #0x2c]
	ldr     r7, [r2, r6]
	add     r8, r2, r6
	ldr     r0, [r7, #0x4]
	mov     r1, r0, lsl #14
	movs    r1, r1, lsr #31
	beq     branch_209c928
	mov     r0, r0, lsl #6
	mov     r1, r0, lsr #24
	mla     r0, r1, r4, r2
	ldr     r0, [r0, #0x4]
	str     r0, [r8, #0x4]
	b       branch_209c960

branch_209c928: @ 209c928 :arm
	mov     r0, r0, lsl #28
	mov     r0, r0, lsr #28
	cmp     r0, #0x5
	ldreq   r1, [sp]
	ldr     r0, [r7, #0x8]
	ldrne   r1, [sp, #0x4]
	blx     r11
	mov     r5, r0
	ldr     r0, [r8]
	ldr     r2, [r7, #0x8]
	add     r0, r0, #0x20
	mov     r1, r5
	bl      GX_LoadTex
	str     r5, [r8, #0x4]
branch_209c960: @ 209c960 :arm
	ldrh    r0, [r10, #0x32]
	add     r9, r9, #0x1
	add     r6, r6, #0x14
	cmp     r9, r0
	blt     branch_209c8f4

branch_209c974: @ 209c974 :arm
	bl      GX_EndLoadTex
	mov     r0, #0x1
	add     sp, sp, #0xc
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
arm_func_end BeginDoEndLoadTex


.arm
Function_209c988: @ 209c988 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x2c
	mov     r9, r1
	ldrh    r1, [r9, #0x8]
	mov     r10, r0
	mov     r8, #0x20
	strh    r1, [r10, #0x30]
	ldrh    r0, [r9, #0xa]
	strh    r0, [r10, #0x32]
	ldrh    r0, [r10, #0x30]
	ldr     r1, [r10]
	mov     r0, r0, lsl #5
	blx     r1
	str     r0, [r10, #0x28]
	ldrh    r2, [r10, #0x30]
	ldr     r0, [r10, #0x28]
	mov     r1, #0x0
	mov     r2, r2, lsl #5
	bl      MI_CpuFill8
	ldrh    r1, [r10, #0x30]
	mov     r0, #0x0
	str     r0, [sp]
	cmp     r1, #0x0
	ble     branch_209cc28
	mov     r6, r0
	str     r0, [sp, #0x10]
	str     r0, [sp, #0x14]
	str     r0, [sp, #0x18]
	str     r0, [sp, #0x1c]
	str     r0, [sp, #0x20]
	str     r0, [sp, #0x24]
branch_209ca04: @ 209ca04 :arm
	ldr     r1, [r10, #0x28]
	add     r0, r9, r8
	str     r0, [r1, r6]
	ldr     r0, [r1, r6]
	add     r8, r8, #0x58
	ldr     r0, [r0]
	add     r7, r1, r6
	str     r0, [sp, #0x28]
	mov     r0, r0, lsl #23
	movs    r0, r0, lsr #31
	addne   r0, r9, r8
	strne   r0, [r7, #0x4]
	ldreq   r0, [sp, #0x10]
	addne   r8, r8, #0xc
	streq   r0, [r7, #0x4]
	ldr     r0, [sp, #0x28]
	mov     r0, r0, lsl #22
	movs    r0, r0, lsr #31
	addne   r0, r9, r8
	strne   r0, [r7, #0x8]
	ldreq   r0, [sp, #0x14]
	addne   r8, r8, #0xc
	streq   r0, [r7, #0x8]
	ldr     r0, [sp, #0x28]
	mov     r0, r0, lsl #21
	movs    r0, r0, lsr #31
	addne   r0, r9, r8
	strne   r0, [r7, #0xc]
	ldreq   r0, [sp, #0x18]
	addne   r8, r8, #0x8
	streq   r0, [r7, #0xc]
	ldr     r0, [sp, #0x28]
	mov     r0, r0, lsl #20
	movs    r0, r0, lsr #31
	addne   r0, r9, r8
	strne   r0, [r7, #0x10]
	ldreq   r0, [sp, #0x1c]
	addne   r8, r8, #0xc
	streq   r0, [r7, #0x10]
	ldr     r0, [sp, #0x28]
	mov     r0, r0, lsl #15
	movs    r0, r0, lsr #31
	addne   r0, r9, r8
	strne   r0, [r7, #0x14]
	ldreq   r0, [sp, #0x20]
	addne   r8, r8, #0x14
	streq   r0, [r7, #0x14]
	ldr     r0, [sp, #0x28]
	mov     r1, r0, lsl #7
	mov     r2, r0, lsl #6
	mov     r5, r1, lsr #31
	mov     r4, r2, lsr #31
	add     r1, r5, r2, lsr #31
	mov     r2, r0, lsl #5
	add     r1, r1, r2, lsr #31
	mov     r3, r0, lsl #4
	mov     r11, r2, lsr #31
	add     r2, r1, r3, lsr #31
	mov     r1, r3, lsr #31
	mov     r12, r0, lsl #3
	str     r1, [sp, #0x4]
	mov     r3, r0, lsl #2
	mov     r0, r12, lsr #31
	add     r1, r2, r12, lsr #31
	str     r0, [sp, #0x8]
	add     r0, r1, r3, lsr #31
	strh    r0, [r7, #0x1c]
	mov     r0, r3, lsr #31
	str     r0, [sp, #0xc]
	ldrh    r0, [r7, #0x1c]
	cmp     r0, #0x0
	beq     branch_209cc04
	mov     r0, r0, lsl #3
	ldr     r1, [r10]
	blx     r1
	str     r0, [r7, #0x18]
	cmp     r5, #0x0
	ldr     r0, [r7, #0x18]
	beq     branch_209cb58
	add     r1, r9, r8
	str     r1, [r0, #0x4]
	ldr     r1, [pc, #0x198] @ [0x209cce8] (=Function_20a2204)
	add     r8, r8, #0x8
	str     r1, [r0]
	add     r0, r0, #0x8
branch_209cb58: @ 209cb58 :arm
	cmp     r4, #0x0
	beq     branch_209cb78
	add     r1, r9, r8
	str     r1, [r0, #0x4]
	ldr     r1, [pc, #0x17c] @ [0x209ccec] (=Function_20a213c)
	add     r8, r8, #0x8
	str     r1, [r0]
	add     r0, r0, #0x8
branch_209cb78: @ 209cb78 :arm
	cmp     r11, #0x0
	beq     branch_209cb98
	add     r1, r9, r8
	str     r1, [r0, #0x4]
	ldr     r1, [pc, #0x160] @ [0x209ccf0] (=Function_20a20b8)
	add     r8, r8, #0x10
	str     r1, [r0]
	add     r0, r0, #0x8
branch_209cb98: @ 209cb98 :arm
	ldr     r1, [sp, #0x4]
	cmp     r1, #0x0
	beq     branch_209cbbc
	add     r1, r9, r8
	str     r1, [r0, #0x4]
	ldr     r1, [pc, #0x140] @ [0x209ccf4] (=Function_20a1fe0)
	add     r8, r8, #0x4
	str     r1, [r0]
	add     r0, r0, #0x8
branch_209cbbc: @ 209cbbc :arm
	ldr     r1, [sp, #0x8]
	cmp     r1, #0x0
	beq     branch_209cbe0
	add     r1, r9, r8
	str     r1, [r0, #0x4]
	ldr     r1, [pc, #0x120] @ [0x209ccf8] (=Function_20a1ec4)
	add     r8, r8, #0x8
	str     r1, [r0]
	add     r0, r0, #0x8
branch_209cbe0: @ 209cbe0 :arm
	ldr     r1, [sp, #0xc]
	cmp     r1, #0x0
	beq     branch_209cc0c
	add     r1, r9, r8
	str     r1, [r0, #0x4]
	ldr     r1, [pc, #0x100] @ [0x209ccfc] (=Function_20a1e30)
	add     r8, r8, #0x10
	str     r1, [r0]
	b       branch_209cc0c

branch_209cc04: @ 209cc04 :arm
	ldr     r0, [sp, #0x24]
	str     r0, [r7, #0x18]
branch_209cc0c: @ 209cc0c :arm
	ldr     r0, [sp]
	ldrh    r1, [r10, #0x30]
	add     r0, r0, #0x1
	add     r6, r6, #0x20
	str     r0, [sp]
	cmp     r0, r1
	blt     branch_209ca04

branch_209cc28: @ 209cc28 :arm
	ldrh    r2, [r10, #0x32]
	mov     r0, #0x14
	ldr     r1, [r10]
	mul     r0, r2, r0
	blx     r1
	str     r0, [r10, #0x2c]
	ldrh    r3, [r10, #0x32]
	mov     r1, #0x14
	ldr     r0, [r10, #0x2c]
	mul     r2, r3, r1
	mov     r1, #0x0
	bl      MI_CpuFill8
	ldrh    r0, [r10, #0x32]
	mov     r3, #0x0
	cmp     r0, #0x0
	addle   sp, sp, #0x2c
	ldmlefd sp!, {r4-r11,lr}
	bxle    lr

	mov     r4, r3
	mov     r0, #0x1
branch_209cc78: @ 209cc78 :arm
	ldr     r2, [r10, #0x2c]
	add     r1, r9, r8
	str     r1, [r2, r4]
	ldr     r5, [r1, #0x4]
	add     r2, r2, r4
	mov     r5, r5, lsl #24
	mov     r5, r5, lsr #28
	add     r5, r5, #0x3
	mov     r5, r0, lsl r5
	strh    r5, [r2, #0x10]
	ldr     r5, [r1, #0x4]
	add     r3, r3, #0x1
	mov     r5, r5, lsl #20
	mov     r5, r5, lsr #28
	add     r5, r5, #0x3
	mov     r5, r0, lsl r5
	strh    r5, [r2, #0x12]
	ldr     r5, [r1, #0x4]
	add     r4, r4, #0x14
	str     r5, [r2, #0xc]
	ldrh    r2, [r10, #0x32]
	ldr     r1, [r1, #0x1c]
	cmp     r3, r2
	add     r8, r8, r1
	blt     branch_209cc78
	add     sp, sp, #0x2c
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x209cce8

.word Function_20a2204 @ 0x209cce8
.word Function_20a213c @ 0x209ccec
.word Function_20a20b8 @ 0x209ccf0
.word Function_20a1fe0 @ 0x209ccf4
.word Function_20a1ec4 @ 0x209ccf8
.word Function_20a1e30 @ 0x209ccfc



.arm
Function_209cd00: @ 209cd00 :arm
	stmfd   sp!, {r4-r10,lr}
	mov     r8, r0
	mov     r0, #0x4c
	mov     r7, r1
	mov     r6, r2
	mov     r4, r3
	blx     r8
	mov     r5, r0
	mov     r1, #0x0
	mov     r2, #0x4c
	bl      MI_CpuFill8
	strh    r7, [r5, #0x34]
	strh    r6, [r5, #0x36]
	ldrh    r0, [sp, #0x20]
	and     r2, r4, #0x3f
	ldr     r1, [r5, #0x38]
	and     r0, r0, #0x3f
	bic     r1, r1, #0x3f
	orr     r0, r1, r0
	str     r0, [r5, #0x38]
	ldrh    r0, [sp, #0x24]
	ldr     r3, [r5, #0x38]
	mov     r1, #0x0
	bic     r3, r3, #63, 26 @ #0xfc0
	and     r0, r0, #0x3f
	orr     r0, r3, r0, lsl #6
	str     r0, [r5, #0x38]
	ldr     r3, [r5, #0x38]
	mov     r0, #0x9c
	mul     r4, r7, r0
	bic     r12, r3, #63, 20 @ #0x3f000
	mov     r0, r3, lsl #26
	mov     r0, r0, lsr #26
	and     r0, r0, #0x3f
	orr     r0, r12, r0, lsl #12
	str     r0, [r5, #0x38]
	ldr     r3, [r5, #0x38]
	mov     r0, r4
	bic     r3, r3, #63, 14 @ #0xfc0000
	orr     r2, r3, r2, lsl #18
	str     r2, [r5, #0x38]
	ldr     r2, [r5, #0x38]
	bic     r2, r2, #1, 8 @ #0x1000000
	str     r2, [r5, #0x38]
	ldr     r2, [r5, #0x38]
	bic     r2, r2, #254, 8 @ #0xfe000000
	str     r2, [r5, #0x38]
	str     r8, [r5]
	str     r1, [r5, #0x8]
	str     r1, [r5, #0x14]
	str     r1, [r5, #0x20]
	str     r1, [r5, #0x4]
	str     r1, [r5, #0x10]
	str     r1, [r5, #0x1c]
	str     r1, [r5, #0x3c]
	strh    r1, [r5, #0x48]
	blx     r8
	mov     r2, r4
	mov     r9, r0
	mov     r1, #0x0
	bl      MI_CpuFill8
	cmp     r7, #0x0
	mov     r10, #0x0
	ble     branch_209ce20
	add     r4, r5, #0x10
branch_209ce04: @ 209ce04 :arm
	mov     r0, r4
	mov     r1, r9
	bl      Function_20a2304
	add     r10, r10, #0x1
	cmp     r10, r7
	add     r9, r9, #0x9c
	blt     branch_209ce04

branch_209ce20: @ 209ce20 :arm
	mov     r0, #0x44
	mul     r4, r6, r0
	mov     r0, r4
	blx     r8
	mov     r2, r4
	mov     r1, #0x0
	mov     r8, r0
	bl      MI_CpuFill8
	cmp     r6, #0x0
	mov     r7, #0x0
	ble     branch_209ce6c
	add     r4, r5, #0x1c
branch_209ce50: @ 209ce50 :arm
	mov     r0, r4
	mov     r1, r8
	bl      Function_20a2304
	add     r7, r7, #0x1
	cmp     r7, r6
	add     r8, r8, #0x44
	blt     branch_209ce50

branch_209ce6c: @ 209ce6c :arm
	mov     r0, #0x0
	str     r0, [r5, #0x28]
	str     r0, [r5, #0x2c]
	strh    r0, [r5, #0x32]
	ldrh    r1, [r5, #0x32]
	mov     r0, r5
	strh    r1, [r5, #0x30]
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x209ce90


.arm
Function_209ce90: @ 209ce90 :arm
	stmfd   sp!, {lr}
	sub     sp, sp, #0x4
	ldr     r3, [pc, #0x20] @ [0x209cec0] (=Unknown_2100df4)
	mov     r2, #0x0
	ldr     r3, [r3]
	blx     r3
	ldr     r1, [pc, #0x14] @ [0x209cec4] (=0xffff)
	and     r0, r0, r1
	mov     r0, r0, lsl #3
	add     sp, sp, #0x4
	ldmfd   sp!, {lr}
	bx      lr
@ 0x209cec0

.word Unknown_2100df4 @ 0x209cec0
.word 0xffff @ 0x209cec4



.arm
Function_209cec8: @ 209cec8 :arm
	stmfd   sp!, {lr}
	sub     sp, sp, #0x4
	ldr     r3, [pc, #0x20] @ [0x209cef8] (=Unknown_2100dec)
	mov     r2, #0x0
	ldr     r3, [r3]
	blx     r3
	ldr     r1, [pc, #0x14] @ [0x209cefc] (=0xffff)
	and     r0, r0, r1
	mov     r0, r0, lsl #3
	add     sp, sp, #0x4
	ldmfd   sp!, {lr}
	bx      lr
@ 0x209cef8

.word Unknown_2100dec @ 0x209cef8
.word 0xffff @ 0x209cefc



.arm
Function_209cf00: @ 209cf00 :arm
	stmfd   sp!, {r4,r5,lr}
	sub     sp, sp, #0x4
	mov     r4, r0
	ldr     r1, [r4, #0x40]
	ldr     r1, [r1, #0x20]
	ldr     r5, [r1]
	ldr     r1, [r5]
	mov     r2, r1, lsl #10
	movs    r2, r2, lsr #31
	beq     branch_209cf58
	bl      Function_209cf7c
	ldr     r0, [r5]
	mov     r0, r0, lsl #9
	movs    r0, r0, lsr #31
	addne   sp, sp, #0x4
	ldmnefd sp!, {r4,r5,lr}
	bxne    lr
	mov     r0, r4
	bl      Function_209d064
	add     sp, sp, #0x4
	ldmfd   sp!, {r4,r5,lr}
	bx      lr

branch_209cf58: @ 209cf58 :arm
	mov     r1, r1, lsl #9
	movs    r1, r1, lsr #31
	bne     branch_209cf68
	bl      Function_209d064
branch_209cf68: @ 209cf68 :arm

	mov     r0, r4
	bl      Function_209cf7c
	add     sp, sp, #0x4
	ldmfd   sp!, {r4,r5,lr}
	bx      lr
@ 0x209cf7c


.arm
Function_209cf7c: @ 209cf7c :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0x4
	mov     r7, r0
	ldr     r6, [r7, #0x40]
	mov     r4, #0x0
	ldr     r5, [r6, #0x20]
	ldr     r0, [r5]
	ldr     r0, [r0]
	mov     r0, r0, lsl #15
	movs    r0, r0, lsr #31
	addeq   sp, sp, #0x4
	ldmeqfd sp!, {r4-r7,lr}
	bxeq    lr
	ldr     r0, [r5, #0x14]
	ldr     r2, [r7, #0x2c]
	ldrb    r1, [r0, #0xf]
	mov     r0, #0x14
	mla     r0, r1, r0, r2
	bl      Function_209dc68
	ldr     r0, [r5, #0x14]
	ldrh    r0, [r0]
	mov     r0, r0, lsl #23
	mov     r0, r0, lsr #30
	cmp     r0, #0x4
	addls   pc, pc, r0, lsl #2
	b       branch_209d01c
	b       branch_209cff8
	b       branch_209d000
	b       branch_209d008
	b       branch_209d010
	b       branch_209d018
@ 0x209cff8

.arm
branch_209cff8: @ 209cff8 :arm
	ldr     r4, [pc, #0x54] @ [0x209d054] (=0x209fab8)
	b       branch_209d01c
@ 0x209d000

.arm
branch_209d000: @ 209d000 :arm
	ldr     r4, [pc, #0x50] @ [0x209d058] (=0x209ecf0)
	b       branch_209d01c
@ 0x209d008

.arm
branch_209d008: @ 209d008 :arm
	ldr     r4, [pc, #0x4c] @ [0x209d05c] (=0x209e650)
	b       branch_209d01c
@ 0x209d010

.arm
branch_209d010: @ 209d010 :arm
	ldr     r4, [pc, #0x48] @ [0x209d060] (=0x209dd54)
	b       branch_209d01c
@ 0x209d018

.arm
branch_209d018: @ 209d018 :arm
	ldr     r4, [pc, #0x40] @ [0x209d060] (=0x209dd54)
.arm
branch_209d01c: @ 209d01c :arm
	ldr     r5, [r6, #0x14]
	cmp     r5, #0x0
	addeq   sp, sp, #0x4
	ldmeqfd sp!, {r4-r7,lr}
	bxeq    lr
.arm
branch_209d030: @ 209d030 :arm
	mov     r0, r7
	mov     r1, r5
	blx     r4
	ldr     r5, [r5]
	cmp     r5, #0x0
	bne     branch_209d030
	add     sp, sp, #0x4
	ldmfd   sp!, {r4-r7,lr}
	bx      lr
@ 0x209d054

.word Function_209fab8 @ 0x209d054
.word Function_209ecf0 @ 0x209d058
.word Function_209e650 @ 0x209d05c
.word Function_209dd54 @ 0x209d060



.arm
Function_209d064: @ 209d064 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r7, r0
	ldr     r6, [r7, #0x40]
	ldr     r2, [r7, #0x2c]
	ldr     r1, [r6, #0x20]
	mov     r0, #0x14
	ldr     r5, [r1]
	mov     r4, #0x0
	ldrb    r1, [r5, #0x47]
	mla     r0, r1, r0, r2
	bl      Function_209dc68
	ldr     r0, [r5]
	mov     r0, r0, lsl #26
	mov     r0, r0, lsr #30
	cmp     r0, #0x4
	addls   pc, pc, r0, lsl #2
	b       branch_209d0e0
@ 0x209d0a8

.arm
Function_209d0a8: @ 209d0a8 :arm
	b       branch_209d0bc
@ 0x209d0ac

.arm
Function_209d0ac: @ 209d0ac :arm
	b       branch_209d0c4
@ 0x209d0b0

.arm
Function_209d0b0: @ 209d0b0 :arm
	b       branch_209d0cc
@ 0x209d0b4

.arm
Function_209d0b4: @ 209d0b4 :arm
	b       branch_209d0d4
@ 0x209d0b8

.arm
Function_209d0b8: @ 209d0b8 :arm
	b       branch_209d0dc
@ 0x209d0bc

.arm
branch_209d0bc: @ 209d0bc :arm
	ldr     r4, [pc, #0x74] @ [0x209d138] (=0x209ff0c)
	b       branch_209d0e0
@ 0x209d0c4

.arm
branch_209d0c4: @ 209d0c4 :arm
	ldr     r4, [pc, #0x70] @ [0x209d13c] (=0x209f3d0)
	b       branch_209d0e0
@ 0x209d0cc

.arm
branch_209d0cc: @ 209d0cc :arm
	ldr     r4, [pc, #0x6c] @ [0x209d140] (=0x209e9a0)
	b       branch_209d0e0
@ 0x209d0d4

.arm
branch_209d0d4: @ 209d0d4 :arm
	ldr     r4, [pc, #0x68] @ [0x209d144] (=0x209e1d4)
	b       branch_209d0e0
@ 0x209d0dc

.arm
branch_209d0dc: @ 209d0dc :arm
	ldr     r4, [pc, #0x60] @ [0x209d144] (=0x209e1d4)
.arm
branch_209d0e0: @ 209d0e0 :arm
	ldr     r0, [r5]
	ldr     r8, [r6, #0x8]
	mov     r0, r0, lsl #20
	movs    r0, r0, lsr #31
	ldrne   r5, [pc, #0x50] @ [0x209d148] (=0x209dc68)
	ldreq   r5, [pc, #0x50] @ [0x209d14c] (=0x209dc64)
	cmp     r8, #0x0
	ldmeqfd sp!, {r4-r8,lr}
	bxeq    lr
	mov     r6, #0x14
.arm
branch_209d108: @ 209d108 :arm
	ldrb    r1, [r8, #0x2c]
	ldr     r0, [r7, #0x2c]
	mla     r0, r1, r6, r0
	blx     r5
	mov     r0, r7
	mov     r1, r8
	blx     r4
	ldr     r8, [r8]
	cmp     r8, #0x0
	bne     branch_209d108
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x209d138

.word Function_209ff0c @ 0x209d138
.word Function_209f3d0 @ 0x209d13c
.word Function_209e9a0 @ 0x209d140
.word Function_209e1d4 @ 0x209d144
.word Function_209dc68 @ =0x209dc68, 0x209d148
.word Function_209dc64 @ =0x209dc64, 0x209d14c



.arm
Function_209d150: @ 209d150 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x74
	mov     r9, r1
	ldr     r8, [r9, #0x20]
	mov     r10, r0
	ldr     r0, [r8, #0x14]
	ldr     r4, [r8]
	str     r0, [sp, #0x4]
	ldr     r0, [r4]
	mov     r6, #0x0
	str     r0, [sp, #0x24]
	ldrb    r0, [r4, #0x46]
	ldr     r2, [r9, #0x90]
	ldrh    r7, [r8, #0x1c]
	add     r0, r0, #6, 26 @ #0x180
	cmp     r2, #0x0
	str     r0, [sp, #0x8]
	beq     branch_209d1a4
	mov     r0, r9
	mov     r1, r6
	blx     r2
.arm
branch_209d1a4: @ 209d1a4 :arm
	ldrh    r1, [r4, #0x3c]
	cmp     r1, #0x0
	beq     branch_209d1bc
	ldrh    r0, [r9, #0x4c]
	cmp     r0, r1
	bhs     branch_209d204
.arm
branch_209d1bc: @ 209d1bc :arm
	ldrh    r0, [r9, #0x4c]
	ldrb    r1, [r9, #0x80]
	bl      _s32_div_f
	cmp     r1, #0x0
	bne     branch_209d204
	ldr     r1, [r9, #0x24]
	mov     r0, r1, lsl #31
	movs    r0, r0, lsr #31
	bne     branch_209d204
	mov     r0, r1, lsl #30
	movs    r0, r0, lsr #31
	bne     branch_209d204
	mov     r0, r1, lsl #27
	movs    r0, r0, lsr #31
	beq     branch_209d204
	mov     r0, r9
	add     r1, r10, #0x1c
	bl      Function_20a08dc
.arm
branch_209d204: @ 209d204 :arm
	ldr     r0, [sp, #0x24]
	mov     r0, r0, lsl #23
	movs    r0, r0, lsr #31
	beq     branch_209d234
	ldr     r0, [pc, #0x764] @ [0x209d980] (=0x20a1da0)
	add     r6, r6, #0x1
	str     r0, [sp, #0x28]
	ldr     r0, [r8, #0x4]
	ldrh    r0, [r0, #0x8]
	mov     r0, r0, lsl #31
	mov     r0, r0, lsr #31
	str     r0, [sp, #0x2c]
.arm
branch_209d234: @ 209d234 :arm
	ldr     r0, [sp, #0x24]
	mov     r0, r0, lsl #22
	movs    r0, r0, lsr #31
	beq     branch_209d280
	ldr     r3, [r8, #0x8]
	ldrh    r0, [r3, #0x8]
	mov     r0, r0, lsl #31
	movs    r0, r0, lsr #31
	bne     branch_209d280
	ldr     r2, [pc, #0x724] @ [0x209d984] (=0x20a1bd4)
	add     r1, sp, #0x28
	str     r2, [r1, r6, lsl #0x3]
	ldrh    r1, [r3, #0x8]
	mov     r2, r6, lsl #3
	add     r0, sp, #0x2c
	mov     r1, r1, lsl #30
	mov     r1, r1, lsr #31
	add     r6, r6, #0x1
	str     r1, [r0, r2]
.arm
branch_209d280: @ 209d280 :arm
	ldr     r0, [sp, #0x24]
	mov     r0, r0, lsl #21
	movs    r0, r0, lsr #31
	beq     branch_209d2bc
	ldr     r2, [pc, #0x6f0] @ [0x209d988] (=0x20a1af8)
	add     r1, sp, #0x28
	str     r2, [r1, r6, lsl #0x3]
	ldr     r1, [r8, #0xc]
	mov     r2, r6, lsl #3
	ldrh    r1, [r1, #0x2]
	add     r0, sp, #0x2c
	add     r6, r6, #0x1
	mov     r1, r1, lsl #23
	mov     r1, r1, lsr #31
	str     r1, [r0, r2]
.arm
branch_209d2bc: @ 209d2bc :arm
	ldr     r0, [sp, #0x24]
	mov     r0, r0, lsl #20
	movs    r0, r0, lsr #31
	beq     branch_209d304
	ldr     r3, [r8, #0x10]
	ldr     r0, [r3, #0x8]
	mov     r0, r0, lsl #15
	movs    r0, r0, lsr #31
	bne     branch_209d304
	ldr     r2, [pc, #0x6a4] @ [0x209d98c] (=0x20a1a94)
	add     r1, sp, #0x28
	str     r2, [r1, r6, lsl #0x3]
	ldr     r1, [r3, #0x8]
	add     r0, sp, #0x2c
	mov     r1, r1, lsl #14
	mov     r1, r1, lsr #31
	str     r1, [r0, r6, lsl #0x3]
	add     r6, r6, #0x1
.arm
branch_209d304: @ 209d304 :arm
	ldr     r4, [r9, #0x8]
	cmp     r4, #0x0
	beq     branch_209d640
	ldr     r0, [sp, #0x24]
	add     r11, sp, #0x28
	mov     r2, r0, lsl #16
	mov     r1, r0, lsl #15
	mov     r0, r2, lsr #31
	str     r0, [sp, #0xc]
	mov     r0, r1, lsr #31
	str     r0, [sp, #0x10]
	mov     r0, #0x0
	str     r0, [sp, #0x18]
.arm
branch_209d338: @ 209d338 :arm
	ldr     r0, [r4]
	ldrh    r1, [r4, #0x2a]
	str     r0, [sp]
	ldrh    r0, [r4, #0x26]
	cmp     r6, #0x0
	ldr     r5, [sp, #0x18]
	mul     r2, r1, r0
	mov     r1, r2, asr #8
	strb    r1, [sp, #0x20]
	ldrh    r1, [r4, #0x28]
	ldrb    r2, [r4, #0x2d]
	mul     r0, r1, r0
	add     r0, r2, r0, asr #8
	strb    r0, [sp, #0x21]
	ble     branch_209d3a0
.arm
branch_209d374: @ 209d374 :arm
	add     r2, r11, r5, lsl #3
	ldr     r12, [r2, #0x4]
	add     r2, sp, #0x20
	ldrb    r2, [r2, r12]
	ldr     r3, [r11, r5, lsl #0x3]
	mov     r0, r4
	mov     r1, r8
	blx     r3
	add     r5, r5, #0x1
	cmp     r5, r6
	blt     branch_209d374
.arm
branch_209d3a0: @ 209d3a0 :arm
	ldr     r0, [sp, #0x18]
	ldr     r5, [sp, #0x18]
	str     r0, [sp, #0x70]
	str     r0, [sp, #0x6c]
	str     r0, [sp, #0x68]
	ldr     r0, [sp, #0xc]
	cmp     r0, #0x0
	addne   r0, r9, #0x28
	addne   r3, r4, #0x38
	ldmneia r0, {r0-r2}
	stmneia r3, {r0-r2}
	cmp     r7, #0x0
	ble     branch_209d400
.arm
branch_209d3d4: @ 209d3d4 :arm
	ldr     r2, [r8, #0x18]
	mov     r1, r4
	add     r0, r2, r5, lsl #3
	ldr     r12, [r2, r5, lsl #0x3]
	ldr     r0, [r0, #0x4]
	add     r2, sp, #0x68
	mov     r3, r9
	blx     r12
	add     r5, r5, #0x1
	cmp     r5, r7
	blt     branch_209d3d4
.arm
branch_209d400: @ 209d400 :arm
	ldr     r0, [sp, #0x10]
	ldrh    r1, [r4, #0x20]
	cmp     r0, #0x0
	ldrsh   r0, [r4, #0x22]
	add     r0, r1, r0
	strh    r0, [r4, #0x20]
	ldr     r1, [r4, #0x14]
	ldr     r0, [sp, #0x8]
	mul     r0, r1, r0
	mov     r0, r0, asr #9
	str     r0, [r4, #0x14]
	ldr     r1, [r4, #0x18]
	ldr     r0, [sp, #0x8]
	mul     r0, r1, r0
	mov     r0, r0, asr #9
	str     r0, [r4, #0x18]
	ldr     r1, [r4, #0x1c]
	ldr     r0, [sp, #0x8]
	mul     r0, r1, r0
	mov     r0, r0, asr #9
	str     r0, [r4, #0x1c]
	ldr     r1, [r4, #0x14]
	ldr     r0, [sp, #0x68]
	add     r0, r1, r0
	str     r0, [r4, #0x14]
	ldr     r1, [r4, #0x18]
	ldr     r0, [sp, #0x6c]
	add     r0, r1, r0
	str     r0, [r4, #0x18]
	ldr     r1, [r4, #0x1c]
	ldr     r0, [sp, #0x70]
	add     r0, r1, r0
	str     r0, [r4, #0x1c]
	ldr     r1, [r4, #0x14]
	ldr     r0, [r9, #0x34]
	ldr     r2, [r4, #0x8]
	add     r0, r1, r0
	add     r0, r2, r0
	str     r0, [r4, #0x8]
	ldr     r1, [r4, #0x18]
	ldr     r0, [r9, #0x38]
	ldr     r2, [r4, #0xc]
	add     r0, r1, r0
	add     r0, r2, r0
	str     r0, [r4, #0xc]
	ldr     r1, [r4, #0x1c]
	ldr     r0, [r9, #0x3c]
	ldr     r2, [r4, #0x10]
	add     r0, r1, r0
	add     r0, r2, r0
	str     r0, [r4, #0x10]
	beq     branch_209d538
	ldr     r0, [sp, #0x4]
	ldrh    r2, [r4, #0x24]
	ldrb    r1, [r0, #0xd]
	ldrh    r3, [r4, #0x26]
	mov     r2, r2, lsl #12
	mov     r1, r1, lsl #12
	mov     r0, r3, lsl #12
	smull   r5, r3, r2, r1
	mov     r1, #2, 22 @ #0x800
	adds    r2, r5, r1
	adc     r1, r3, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	mov     r1, r2, asr #8
	subs    r0, r0, r1
	bmi     branch_209d538
	ldr     r1, [sp, #0x4]
	mov     r0, r0, asr #12
	ldrb    r1, [r1, #0xe]
	bl      _s32_div_f
	cmp     r1, #0x0
	bne     branch_209d538
	mov     r0, r4
	mov     r1, r9
	add     r2, r10, #0x1c
	bl      Function_20a05bc
.arm
branch_209d538: @ 209d538 :arm
	ldr     r0, [r9, #0x20]
	ldr     r0, [r0]
	ldr     r0, [r0]
	mov     r0, r0, lsl #1
	movs    r0, r0, lsr #31
	beq     branch_209d57c
	ldrh    r0, [r4, #0x2e]
	ldr     r1, [r10, #0x38]
	bic     r0, r0, #63, 22 @ #0xfc00
	mov     r1, r1, lsl #8
	mov     r1, r1, lsr #26
	mov     r1, r1, lsl #16
	mov     r1, r1, lsr #16
	and     r1, r1, #0x3f
	orr     r0, r0, r1, lsl #10
	strh    r0, [r4, #0x2e]
	b       branch_209d5fc
@ 0x209d57c

.arm
branch_209d57c: @ 209d57c :arm
	ldrh    r0, [r4, #0x2e]
	ldr     r2, [r10, #0x38]
	add     r1, r10, #0x38
	bic     r0, r0, #63, 22 @ #0xfc00
	mov     r2, r2, lsl #14
	mov     r2, r2, lsr #26
	mov     r2, r2, lsl #16
	mov     r2, r2, lsr #16
	and     r2, r2, #0x3f
	orr     r0, r0, r2, lsl #10
	strh    r0, [r4, #0x2e]
	ldr     r2, [r10, #0x38]
	bic     r0, r2, #63, 20 @ #0x3f000
	mov     r2, r2, lsl #14
	mov     r2, r2, lsr #26
	add     r2, r2, #0x1
	and     r2, r2, #0x3f
	orr     r0, r0, r2, lsl #12
	str     r0, [r10, #0x38]
	ldr     r2, [r10, #0x38]
	mov     r0, r2, lsl #14
	mov     r3, r0, lsr #26
	mov     r0, r2, lsl #20
	cmp     r3, r0, lsr #26
	bls     branch_209d5fc
	mov     r0, r2, lsl #26
	mov     r0, r0, lsr #26
	and     r0, r0, #0x3f
	ldr     r2, [r1]
	bic     r2, r2, #63, 20 @ #0x3f000
	orr     r0, r2, r0, lsl #12
	str     r0, [r1]
.arm
branch_209d5fc: @ 209d5fc :arm
	ldrh    r0, [r4, #0x26]
	add     r0, r0, #0x1
	strh    r0, [r4, #0x26]
	ldrh    r1, [r4, #0x26]
	ldrh    r0, [r4, #0x24]
	cmp     r1, r0
	bls     branch_209d630
	mov     r1, r4
	add     r0, r9, #0x8
	bl      Function_20a2238
	mov     r1, r0
	add     r0, r10, #0x1c
	bl      Function_20a2304
.arm
branch_209d630: @ 209d630 :arm
	ldr     r0, [sp]
	cmp     r0, #0x0
	mov     r4, r0
	bne     branch_209d338
.arm
branch_209d640: @ 209d640 :arm
	ldr     r0, [sp, #0x24]
	mov     r0, r0, lsl #15
	movs    r0, r0, lsr #31
	beq     branch_209d948
	ldr     r0, [sp, #0x4]
	mov     r6, #0x0
	ldrh    r0, [r0]
	mov     r0, r0, lsl #30
	movs    r0, r0, lsr #31
	ldrne   r0, [pc, #0x324] @ [0x209d990] (=0x20a1a48)
	strne   r6, [sp, #0x4c]
	strne   r0, [sp, #0x48]
	ldr     r0, [sp, #0x4]
	addne   r6, r6, #0x1
	ldrh    r0, [r0]
	mov     r0, r0, lsl #29
	movs    r0, r0, lsr #31
	beq     branch_209d6a4
	ldr     r2, [pc, #0x304] @ [0x209d994] (=0x20a19f0)
	add     r1, sp, #0x48
	str     r2, [r1, r6, lsl #0x3]
	add     r0, sp, #0x4c
	mov     r1, #0x0
	str     r1, [r0, r6, lsl #0x3]
	add     r6, r6, #0x1
.arm
branch_209d6a4: @ 209d6a4 :arm
	ldr     r0, [sp, #0x4]
	ldr     r5, [r9, #0x14]
	ldrh    r0, [r0]
	mov     r0, r0, lsl #31
	movs    r0, r0, lsr #31
	moveq   r7, #0x0
	cmp     r5, #0x0
	beq     branch_209d948
	mov     r0, #0x0
	str     r0, [sp, #0x1c]
.arm
branch_209d6cc: @ 209d6cc :arm
	ldrh    r2, [r5, #0x26]
	ldr     r0, [r5]
	ldrh    r1, [r5, #0x24]
	str     r0, [sp, #0x14]
	mov     r0, r2, lsl #8
	bl      _s32_div_f
	ldr     r4, [sp, #0x1c]
	strb    r0, [sp, #0x20]
	cmp     r6, #0x0
	ble     branch_209d71c
	ldrb    r11, [sp, #0x20]
.arm
branch_209d6f8: @ 209d6f8 :arm
	add     r3, sp, #0x48
	ldr     r3, [r3, r4, lsl #0x3]
	mov     r0, r5
	mov     r1, r8
	mov     r2, r11
	blx     r3
	add     r4, r4, #0x1
	cmp     r4, r6
	blt     branch_209d6f8
.arm
branch_209d71c: @ 209d71c :arm
	ldr     r0, [sp, #0x1c]
	ldr     r4, [sp, #0x1c]
	str     r0, [sp, #0x70]
	str     r0, [sp, #0x6c]
	str     r0, [sp, #0x68]
	ldr     r0, [sp, #0x4]
	ldrh    r0, [r0]
	mov     r0, r0, lsl #26
	movs    r0, r0, lsr #31
	addne   r0, r9, #0x28
	addne   r3, r5, #0x38
	ldmneia r0, {r0-r2}
	stmneia r3, {r0-r2}
	cmp     r7, #0x0
	ble     branch_209d784
.arm
branch_209d758: @ 209d758 :arm
	ldr     r2, [r8, #0x18]
	mov     r1, r5
	add     r0, r2, r4, lsl #3
	ldr     r11, [r2, r4, lsl #0x3]
	ldr     r0, [r0, #0x4]
	add     r2, sp, #0x68
	mov     r3, r9
	blx     r11
	add     r4, r4, #0x1
	cmp     r4, r7
	blt     branch_209d758
.arm
branch_209d784: @ 209d784 :arm
	ldrh    r1, [r5, #0x20]
	ldrsh   r0, [r5, #0x22]
	add     r0, r1, r0
	strh    r0, [r5, #0x20]
	ldr     r1, [r5, #0x14]
	ldr     r0, [sp, #0x8]
	mul     r0, r1, r0
	mov     r0, r0, asr #9
	str     r0, [r5, #0x14]
	ldr     r1, [r5, #0x18]
	ldr     r0, [sp, #0x8]
	mul     r0, r1, r0
	mov     r0, r0, asr #9
	str     r0, [r5, #0x18]
	ldr     r1, [r5, #0x1c]
	ldr     r0, [sp, #0x8]
	mul     r0, r1, r0
	mov     r0, r0, asr #9
	str     r0, [r5, #0x1c]
	ldr     r1, [r5, #0x14]
	ldr     r0, [sp, #0x68]
	add     r0, r1, r0
	str     r0, [r5, #0x14]
	ldr     r1, [r5, #0x18]
	ldr     r0, [sp, #0x6c]
	add     r0, r1, r0
	str     r0, [r5, #0x18]
	ldr     r1, [r5, #0x1c]
	ldr     r0, [sp, #0x70]
	add     r0, r1, r0
	str     r0, [r5, #0x1c]
	ldr     r1, [r5, #0x14]
	ldr     r0, [r9, #0x34]
	ldr     r2, [r5, #0x8]
	add     r0, r1, r0
	add     r0, r2, r0
	str     r0, [r5, #0x8]
	ldr     r1, [r5, #0x18]
	ldr     r0, [r9, #0x38]
	ldr     r2, [r5, #0xc]
	add     r0, r1, r0
	add     r0, r2, r0
	str     r0, [r5, #0xc]
	ldr     r1, [r5, #0x1c]
	ldr     r0, [r9, #0x3c]
	ldr     r2, [r5, #0x10]
	add     r0, r1, r0
	add     r0, r2, r0
	str     r0, [r5, #0x10]
	ldr     r0, [r9, #0x20]
	ldr     r0, [r0]
	ldr     r0, [r0]
	movs    r0, r0, lsr #31
	beq     branch_209d888
	ldr     r0, [r10, #0x38]
	ldrh    r1, [r5, #0x2e]
	mov     r0, r0, lsl #8
	mov     r0, r0, lsr #26
	bic     r1, r1, #63, 22 @ #0xfc00
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	and     r0, r0, #0x3f
	orr     r0, r1, r0, lsl #10
	strh    r0, [r5, #0x2e]
	b       branch_209d908
@ 0x209d888

.arm
branch_209d888: @ 209d888 :arm
	ldr     r0, [r10, #0x38]
	ldrh    r1, [r5, #0x2e]
	mov     r0, r0, lsl #14
	mov     r0, r0, lsr #26
	bic     r1, r1, #63, 22 @ #0xfc00
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	and     r0, r0, #0x3f
	orr     r0, r1, r0, lsl #10
	strh    r0, [r5, #0x2e]
	ldr     r1, [r10, #0x38]
	add     r0, r10, #0x38
	bic     r2, r1, #63, 20 @ #0x3f000
	mov     r1, r1, lsl #14
	mov     r1, r1, lsr #26
	add     r1, r1, #0x1
	and     r1, r1, #0x3f
	orr     r1, r2, r1, lsl #12
	str     r1, [r10, #0x38]
	ldr     r2, [r10, #0x38]
	mov     r1, r2, lsl #14
	mov     r3, r1, lsr #26
	mov     r1, r2, lsl #20
	cmp     r3, r1, lsr #26
	bls     branch_209d908
	mov     r1, r2, lsl #26
	mov     r1, r1, lsr #26
	and     r1, r1, #0x3f
	ldr     r2, [r0]
	bic     r2, r2, #63, 20 @ #0x3f000
	orr     r1, r2, r1, lsl #12
	str     r1, [r0]
.arm
branch_209d908: @ 209d908 :arm
	ldrh    r0, [r5, #0x26]
	add     r0, r0, #0x1
	strh    r0, [r5, #0x26]
	ldrh    r1, [r5, #0x26]
	ldrh    r0, [r5, #0x24]
	cmp     r1, r0
	bls     branch_209d93c
	mov     r1, r5
	add     r0, r9, #0x14
	bl      Function_20a2238
	mov     r1, r0
	add     r0, r10, #0x1c
	bl      Function_20a2304
.arm
branch_209d93c: @ 209d93c :arm
	ldr     r5, [sp, #0x14]
	movs    r0, r5
	bne     branch_209d6cc
.arm
branch_209d948: @ 209d948 :arm
	ldrh    r0, [r9, #0x4c]
	add     r0, r0, #0x1
	strh    r0, [r9, #0x4c]
	ldr     r2, [r9, #0x90]
	cmp     r2, #0x0
	addeq   sp, sp, #0x74
	ldmeqfd sp!, {r4-r11,lr}
	bxeq    lr
	mov     r0, r9
	mov     r1, #0x1
	blx     r2
	add     sp, sp, #0x74
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x209d980

.word Function_20a1da0 @ 0x209d980
.word Function_20a1bd4 @ 0x209d984
.word Function_20a1af8 @ 0x209d988
.word Function_20a1a94 @ 0x209d98c
.word Function_20a1a48 @ 0x209d990
.word Function_20a19f0 @ 0x209d994



.arm
Function_209d998: @ 209d998 :arm
	stmfd   sp!, {r4-r6,lr}
	str     r1, [r0, #0x20]
	mov     r3, #0x0
	str     r3, [r0, #0x24]
	ldr     r1, [r0, #0x20]
	ldr     r5, [r2]
	ldr     r1, [r1]
	ldr     r4, [pc, #0x2a0] @ [0x209dc5c] (=0x7fff)
	ldr     r1, [r1, #0x4]
	ldr     r12, [pc, #0x29c] @ [0x209dc60] (=0x7ffff)
	add     r1, r5, r1
	str     r1, [r0, #0x28]
	ldr     r1, [r0, #0x20]
	ldr     r6, [r2, #0x4]
	ldr     r1, [r1]
	mov     lr, #2, 2 @ #0x80000000
	ldr     r5, [r1, #0x8]
	mov     r1, #1, 20 @ #0x1000
	add     r5, r6, r5
	str     r5, [r0, #0x2c]
	ldr     r5, [r0, #0x20]
	ldr     r6, [r2, #0x8]
	ldr     r2, [r5]
	ldr     r2, [r2, #0xc]
	add     r2, r6, r2
	str     r2, [r0, #0x30]
	str     r3, [r0, #0x40]
	str     r3, [r0, #0x44]
	str     r3, [r0, #0x48]
	str     r3, [r0, #0x3c]
	ldr     r2, [r0, #0x3c]
	str     r2, [r0, #0x38]
	ldr     r2, [r0, #0x38]
	str     r2, [r0, #0x34]
	strh    r3, [r0, #0x4c]
	strh    r3, [r0, #0x4e]
	ldr     r2, [r0, #0x20]
	ldr     r5, [r2]
	ldrh    r3, [r5, #0x1c]
	ldrh    r2, [r5, #0x1e]
	strh    r3, [r0, #0x50]
	strh    r2, [r0, #0x52]
	ldrh    r2, [r5, #0x20]
	strh    r2, [r0, #0x54]
	ldr     r2, [r0, #0x20]
	ldr     r2, [r2]
	ldrh    r2, [r2, #0x38]
	strh    r2, [r0, #0x56]
	ldr     r2, [r0, #0x20]
	ldr     r2, [r2]
	ldr     r2, [r2, #0x10]
	str     r2, [r0, #0x58]
	ldr     r2, [r0, #0x20]
	ldr     r2, [r2]
	ldr     r2, [r2, #0x14]
	str     r2, [r0, #0x5c]
	ldr     r2, [r0, #0x20]
	ldr     r2, [r2]
	ldr     r2, [r2, #0x18]
	str     r2, [r0, #0x60]
	ldr     r2, [r0, #0x20]
	ldr     r2, [r2]
	ldr     r2, [r2, #0x24]
	str     r2, [r0, #0x64]
	ldr     r2, [r0, #0x20]
	ldr     r2, [r2]
	ldr     r2, [r2, #0x28]
	str     r2, [r0, #0x68]
	ldr     r2, [r0, #0x20]
	ldr     r2, [r2]
	ldr     r2, [r2, #0x2c]
	str     r2, [r0, #0x6c]
	ldr     r2, [r0, #0x20]
	ldr     r2, [r2]
	ldrh    r2, [r2, #0x3e]
	strh    r2, [r0, #0x70]
	strh    r4, [r0, #0x72]
	ldr     r2, [r0, #0x20]
	ldr     r2, [r2]
	ldrb    r2, [r2, #0x44]
	strb    r2, [r0, #0x80]
	ldr     r2, [r0, #0x20]
	ldr     r2, [r2]
	ldrb    r2, [r2, #0x45]
	strb    r2, [r0, #0x81]
	ldr     r2, [r0, #0x80]
	bic     r2, r2, #7, 16 @ #0x70000
	str     r2, [r0, #0x80]
	ldr     r2, [r0, #0x80]
	and     r2, r2, r12
	str     r2, [r0, #0x80]
	str     lr, [r0, #0x74]
	ldr     r2, [r0, #0x20]
	ldr     r2, [r2]
	ldr     r2, [r2, #0x48]
	mov     r2, r2, lsl #6
	mov     r2, r2, lsr #30
	mov     r2, r1, lsl r2
	strh    r2, [r0, #0x78]
	ldr     r2, [r0, #0x20]
	ldr     r2, [r2]
	ldr     r2, [r2, #0x48]
	mov     r2, r2, lsl #4
	mov     r2, r2, lsr #30
	mov     r1, r1, lsl r2
	strh    r1, [r0, #0x7a]
	ldr     r1, [r0, #0x20]
	ldr     r1, [r1]
	ldr     r1, [r1, #0x4c]
	mov     r1, r1, lsl #31
	movs    r1, r1, lsr #31
	ldrnesh r2, [r0, #0x78]
	mvnne   r1, #0x0
	smulbbne r1, r2, r1
	strneh  r1, [r0, #0x78]
	ldr     r1, [r0, #0x20]
	ldr     r1, [r1]
	ldr     r1, [r1, #0x4c]
	mov     r1, r1, lsl #30
	movs    r1, r1, lsr #31
	ldrnesh r2, [r0, #0x7a]
	mvnne   r1, #0x0
	smulbbne r1, r2, r1
	strneh  r1, [r0, #0x7a]
	ldr     r2, [r0, #0x20]
	ldr     r1, [r2]
	ldr     r1, [r1]
	mov     r1, r1, lsl #15
	movs    r1, r1, lsr #31
	beq     branch_209dc20
	ldr     r1, [r2, #0x14]
	mov     r2, #1, 20 @ #0x1000
	ldr     r1, [r1, #0x10]
	mov     r1, r1, lsl #30
	mov     r1, r1, lsr #30
	mov     r1, r2, lsl r1
	strh    r1, [r0, #0x7c]
	ldr     r1, [r0, #0x20]
	ldr     r1, [r1, #0x14]
	ldr     r1, [r1, #0x10]
	mov     r1, r1, lsl #28
	mov     r1, r1, lsr #30
	mov     r1, r2, lsl r1
	strh    r1, [r0, #0x7e]
	ldr     r1, [r0, #0x20]
	ldr     r1, [r1, #0x14]
	ldr     r1, [r1, #0x10]
	mov     r1, r1, lsl #27
	movs    r1, r1, lsr #31
	ldrnesh r2, [r0, #0x7c]
	mvnne   r1, #0x0
	smulbbne r1, r2, r1
	strneh  r1, [r0, #0x7c]
	ldr     r1, [r0, #0x20]
	ldr     r1, [r1, #0x14]
	ldr     r1, [r1, #0x10]
	mov     r1, r1, lsl #26
	movs    r1, r1, lsr #31
	ldrnesh r2, [r0, #0x7e]
	mvnne   r1, #0x0
	smulbbne r1, r2, r1
	strneh  r1, [r0, #0x7e]
branch_209dc20: @ 209dc20 :arm
	mov     r2, #0x0
	str     r2, [r0, #0x4]
	ldr     r1, [r0, #0x4]
	str     r1, [r0]
	str     r2, [r0, #0x14]
	ldr     r1, [r0, #0x14]
	str     r1, [r0, #0x8]
	str     r2, [r0, #0x18]
	ldr     r1, [r0, #0x18]
	str     r1, [r0, #0xc]
	str     r2, [r0, #0x90]
	str     r2, [r0, #0x94]
	str     r2, [r0, #0x98]
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x209dc5c

.word 0x7fff @ 0x209dc5c
.word 0x7ffff @ 0x209dc60



.arm
Function_209dc64: @ 209dc64 :arm
	bx      lr
@ 0x209dc68


.arm
Function_209dc68: @ 209dc68 :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0x4
	ldr     r7, [r0, #0xc]
	ldr     r3, [pc, #0xc4] @ [0x209dd40] (=GFX_TEX_FORMAT)
	str     r7, [sp]
	ldr     r1, [r0, #0x4]
	mov     r2, r7, lsl #28
	mov     lr, r2, lsr #28
	mov     r1, r1, lsr #3
	orr     r12, r1, lr, lsl #26
	mov     r4, r7, lsl #24
	mov     r5, r7, lsl #20
	mov     r2, r7, lsl #15
	mov     r4, r4, lsr #28
	orr     r12, r12, #1, 2 @ #0x40000000
	mov     r6, r7, lsl #18
	orr     r12, r12, r4, lsl #20
	mov     r5, r5, lsr #28
	mov     r1, r7, lsl #16
	orr     r12, r12, r5, lsl #23
	mov     r4, r6, lsr #30
	mov     r5, r1, lsr #30
	orr     r1, r12, r4, lsl #16
	mov     r2, r2, lsr #31
	orr     r1, r1, r5, lsl #18
	orr     r1, r1, r2, lsl #29
	str     r1, [r3]
	cmp     lr, #0x2
	moveq   r1, #0x1
	movne   r1, #0x0
	ldr     r2, [r0, #0x8]
	rsb     r1, r1, #0x4
	mov     r2, r2, lsr r1
	ldr     r1, [pc, #0x50] @ [0x209dd44] (=GFX_PAL_FORMAT)
	ldr     r12, [pc, #0x50] @ [0x209dd48] (=MATRIX_CONTROL)
	str     r2, [r1]
	mov     r2, #0x3
	ldr     r1, [pc, #0x48] @ [0x209dd4c] (=MATRIX_IDENTITY)
	str     r2, [r12]
	mov     r3, #0x0
	str     r3, [r1]
	ldrh    r1, [r0, #0x10]
	ldrh    r2, [r0, #0x12]
	ldr     r0, [pc, #0x34] @ [0x209dd50] (=MATRIX_SCALE)
	mov     r1, r1, lsl #12
	str     r1, [r0]
	mov     r1, r2, lsl #12
	str     r1, [r0]
	str     r3, [r0]
	mov     r0, #0x1
	str     r0, [r12]
	add     sp, sp, #0x4
	ldmfd   sp!, {r4-r7,lr}
	bx      lr
@ 0x209dd40

.word GFX_TEX_FORMAT @ 0x209dd40
.word GFX_PAL_FORMAT @ 0x209dd44
.word MATRIX_CONTROL @ 0x209dd48
.word MATRIX_IDENTITY @ 0x209dd4c
.word MATRIX_SCALE @ 0x209dd50



.arm
Function_209dd54: @ 209dd54 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0xf0
	mov     r4, r1
	ldrh    r2, [r4, #0x2e]
	mov     r5, r0
	ldr     r0, [r5, #0x3c]
	mov     r1, r2, lsl #22
	mov     r3, r2, lsl #27
	mov     r1, r1, lsr #27
	mov     r3, r3, lsr #27
	add     r1, r1, #0x1
	mul     r6, r3, r1
	mov     r1, r2, lsl #16
	movs    r2, r6, asr #5
	mov     r1, r1, lsr #26
	orr     r0, r0, #0xc0
	orr     r1, r0, r1, lsl #24
	ldr     r0, [pc, #0x410] @ [0x209e1b0] (=GFX_POLY_FORMAT)
	orr     r1, r1, r2, lsl #16
	str     r1, [r0]
	addeq   sp, sp, #0xf0
	ldr     r0, [r0]
	ldmeqfd sp!, {r4-r8,lr}
	bxeq    lr
	ldr     r0, [r5, #0x40]
	ldrh    r1, [r4, #0x20]
	ldr     r0, [r0, #0x20]
	ldr     r6, [pc, #0x3ec] @ [0x209e1b4] (=Unknown_20f983c)
	ldr     r0, [r0, #0x14]
	mov     r1, r1, asr #4
	ldrh    r0, [r0]
	mov     r2, r1, lsl #1
	add     r1, r2, #0x1
	mov     r7, r2, lsl #1
	mov     r1, r1, lsl #1
	mov     r0, r0, lsl #21
	mov     r3, r0, lsr #30
	ldr     r2, [pc, #0x3c8] @ [0x209e1b8] (=Unknown_2100da8)
	ldrsh   r0, [r6, r7]
	ldr     r3, [r2, r3, lsl #0x2]
	ldrsh   r1, [r6, r1]
	add     r2, sp, #0x30
	blx     r3
	add     r0, sp, #0xc0
	bl      MTX_Identity43_
	ldr     r0, [r5, #0x40]
	ldr     r0, [r0, #0x20]
	ldr     r0, [r0, #0x14]
	ldr     r0, [r0, #0x10]
	mov     r0, r0, lsl #25
	movs    r0, r0, lsr #31
	bne     branch_209de34
	add     r1, sp, #0x90
	add     r0, r4, #0x14
	bl      VEC_Normalize
	b       branch_209de64
@ 0x209de34

.arm
branch_209de34: @ 209de34 :arm
	add     r1, sp, #0x90
	add     r0, r4, #0x8
	bl      VEC_Normalize
	ldr     r2, [sp, #0x90]
	ldr     r1, [sp, #0x94]
	ldr     r0, [sp, #0x98]
	rsb     r2, r2, #0x0
	rsb     r1, r1, #0x0
	rsb     r0, r0, #0x0
	str     r2, [sp, #0x90]
	str     r1, [sp, #0x94]
	str     r0, [sp, #0x98]
.arm
branch_209de64: @ 209de64 :arm
	mov     r3, #0x0
	mov     r2, #1, 20 @ #0x1000
	add     r0, sp, #0x90
	add     r1, sp, #0xb4
	str     r3, [sp, #0xb4]
	str     r2, [sp, #0xb8]
	str     r3, [sp, #0xbc]
	bl      VEC_DotProduct
	ldr     r1, [pc, #0x330] @ [0x209e1bc] (=0xccd)
	cmp     r0, r1
	bgt     branch_209de9c
	ldr     r1, [pc, #0x328] @ [0x209e1c0] (=0xfffff333)
	cmp     r0, r1
	bge     branch_209deb0
.arm
branch_209de9c: @ 209de9c :arm
	mov     r0, #0x0
	mov     r1, #1, 20 @ #0x1000
	str     r1, [sp, #0xb4]
	str     r0, [sp, #0xb8]
	str     r0, [sp, #0xbc]
.arm
branch_209deb0: @ 209deb0 :arm
	add     r0, sp, #0x90
	add     r1, sp, #0xb4
	add     r2, sp, #0x9c
	bl      VEC_CrossProduct
	add     r0, sp, #0x90
	add     r1, sp, #0x9c
	add     r2, sp, #0xa8
	bl      VEC_CrossProduct
	ldr     r7, [sp, #0x9c]
	ldr     r6, [sp, #0xa0]
	ldr     r3, [sp, #0xa4]
	ldr     r0, [sp, #0x90]
	ldr     r1, [sp, #0x94]
	ldr     r2, [sp, #0x98]
	str     r7, [sp, #0xc0]
	ldr     r7, [sp, #0xa8]
	str     r6, [sp, #0xc4]
	ldr     r6, [sp, #0xac]
	str     r3, [sp, #0xc8]
	ldr     r3, [sp, #0xb0]
	str     r0, [sp, #0xcc]
	str     r1, [sp, #0xd0]
	add     r0, sp, #0x30
	str     r2, [sp, #0xd4]
	add     r1, sp, #0xc0
	mov     r2, r0
	str     r7, [sp, #0xd8]
	str     r6, [sp, #0xdc]
	str     r3, [sp, #0xe0]
	bl      MTX_Concat43
	ldr     r0, [r5, #0x40]
	ldr     r2, [r4, #0x30]
	ldr     r0, [r0, #0x20]
	mov     r12, #2, 22 @ #0x800
	ldr     r0, [r0]
	mov     r3, r2, asr #31
	ldrsh   r1, [r0, #0x30]
	ldr     r0, [r0, #0x48]
	mov     lr, #0x0
	smull   r6, r1, r2, r1
	adds    r7, r6, r12
	adc     r6, r1, #0x0
	mov     r0, r0, lsl #1
	mov     r1, r7, lsr #12
	orr     r1, r1, r6, lsl #20
	movs    r0, r0, lsr #29
	beq     branch_209df80
	cmp     r0, #0x1
	beq     branch_209dfbc
	cmp     r0, #0x2
	beq     branch_209dfd8
	b       branch_209dffc
@ 0x209df80

.arm
branch_209df80: @ 209df80 :arm
	ldrsh   r0, [r4, #0x34]
	mov     r8, r0, asr #31
	umull   r7, r6, r2, r0
	mla     r6, r2, r8, r6
	smull   r8, r2, r1, r0
	adds    r1, r8, r12
	adc     r8, r2, lr
	adds    r2, r7, r12
	mla     r6, r3, r0, r6
	mov     r1, r1, lsr #12
	adc     r0, r6, lr
	mov     r2, r2, lsr #12
	orr     r1, r1, r8, lsl #20
	orr     r2, r2, r0, lsl #20
	b       branch_209dffc
@ 0x209dfbc

.arm
branch_209dfbc: @ 209dfbc :arm
	ldrsh   r0, [r4, #0x34]
	smull   r3, r0, r1, r0
	adds    r1, r3, r12
	adc     r0, r0, lr
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	b       branch_209dffc
@ 0x209dfd8

.arm
branch_209dfd8: @ 209dfd8 :arm
	ldrsh   r6, [r4, #0x34]
	mov     r0, r6, asr #31
	umull   r8, r7, r2, r6
	mla     r7, r2, r0, r7
	adds    r2, r8, r12
	mla     r7, r3, r6, r7
	adc     r0, r7, lr
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
.arm
branch_209dffc: @ 209dffc :arm
	add     r0, sp, #0x60
	mov     r3, r2
	blx     MTX_Scale43_
	add     r0, sp, #0x30
	add     r1, sp, #0x60
	add     r2, sp, #0x0
	bl      MTX_Concat43
	ldr     r0, [r5, #0x40]
	ldr     r0, [r0, #0x20]
	ldr     r3, [r0]
	ldr     r0, [r3]
	mov     r0, r0, lsl #8
	movs    r0, r0, lsr #31
	bne     branch_209e078
	ldr     r1, [r4, #0x8]
	ldr     r0, [r4, #0x38]
	add     r0, r1, r0
	str     r0, [sp, #0x24]
	ldr     r1, [r4, #0xc]
	ldr     r0, [r4, #0x3c]
	add     r0, r1, r0
	str     r0, [sp, #0x28]
	ldr     r1, [r4, #0x10]
	ldr     r0, [r4, #0x40]
	add     r0, r1, r0
	str     r0, [sp, #0x2c]
	ldr     r0, [r5, #0x44]
	bl      G3_LoadMtx43
	add     r0, sp, #0x0
	bl      G3_MultMtx43
	b       branch_209e11c
@ 0x209e078

.arm
branch_209e078: @ 209e078 :arm
	ldr     r2, [r4, #0x8]
	ldr     r1, [r4, #0x38]
	ldr     r0, [r3, #0x4]
	add     r1, r2, r1
	sub     r0, r1, r0
	str     r0, [sp, #0x24]
	ldr     r0, [r5, #0x40]
	ldr     r2, [r4, #0xc]
	ldr     r0, [r0, #0x20]
	ldr     r1, [r4, #0x3c]
	ldr     r0, [r0]
	add     r2, r2, r1
	ldr     r1, [r0, #0x8]
	ldr     r0, [pc, #0x110] @ [0x209e1c4] (=MATRIX_IDENTITY)
	sub     r1, r2, r1
	str     r1, [sp, #0x28]
	ldr     r1, [r5, #0x40]
	ldr     r3, [r4, #0x10]
	ldr     r1, [r1, #0x20]
	ldr     r2, [r4, #0x40]
	ldr     r1, [r1]
	add     r3, r3, r2
	ldr     r2, [r1, #0xc]
	mov     r1, #0x0
	sub     r2, r3, r2
	str     r2, [sp, #0x2c]
	str     r1, [r0]
	ldr     r1, [r5, #0x40]
	ldr     r0, [pc, #0xd8] @ [0x209e1c8] (=MATRIX_TRANSLATE)
	ldr     r1, [r1, #0x20]
	ldr     r1, [r1]
	ldr     r3, [r1, #0xc]
	ldr     r2, [r1, #0x8]
	ldr     r1, [r1, #0x4]
	str     r1, [r0]
	str     r2, [r0]
	str     r3, [r0]
	ldr     r0, [r5, #0x44]
	bl      G3_MultMtx43
	add     r0, sp, #0x0
	bl      G3_MultMtx43
.arm
branch_209e11c: @ 209e11c :arm
	ldr     r0, [r5, #0x40]
	ldrh    r4, [r4, #0x36]
	ldrh    r12, [r0, #0x72]
	mov     r2, #0x0
	and     r1, r4, #0x1f
	and     r0, r12, #0x1f
	mul     r3, r1, r0
	and     r1, r4, #62, 28 @ #0x3e0
	and     r0, r12, #62, 28 @ #0x3e0
	mul     r0, r1, r0
	and     r4, r4, #31, 22 @ #0x7c00
	and     r1, r12, #31, 22 @ #0x7c00
	mul     r12, r4, r1
	mov     r1, r3, asr #5
	mov     r0, r0, asr #15
	mov     r3, r12, asr #25
	orr     r0, r1, r0, lsl #5
	orr     r0, r0, r3, lsl #10
	mov     r0, r0, lsl #16
	ldr     r1, [pc, #0x5c] @ [0x209e1cc] (=GFX_COLOR)
	mov     r0, r0, lsr #16
	str     r0, [r1]
	ldr     r5, [r5, #0x40]
	ldr     r4, [pc, #0x50] @ [0x209e1d0] (=Unknown_2100da0)
	ldr     r1, [r5, #0x20]
	ldrsh   r0, [r5, #0x7c]
	ldr     r3, [r1, #0x14]
	ldrsh   r1, [r5, #0x7e]
	ldrh    r5, [r3]
	mov     r3, r2
	mov     r5, r5, lsl #20
	mov     r5, r5, lsr #31
	ldr     r4, [r4, r5, lsl #0x2]
	blx     r4
	add     sp, sp, #0xf0
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x209e1b0

.word GFX_POLY_FORMAT @ 0x209e1b0
.word Unknown_20f983c @ 0x209e1b4
.word Unknown_2100da8 @ 0x209e1b8
.word 0xccd @ 0x209e1bc
.word 0xfffff333 @ 0x209e1c0
.word MATRIX_IDENTITY @ 0x209e1c4
.word MATRIX_TRANSLATE @ 0x209e1c8
.word GFX_COLOR @ 0x209e1cc
.word Unknown_2100da0 @ 0x209e1d0



.arm
Function_209e1d4: @ 209e1d4 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0xf0
	mov     r4, r1
	ldrh    r2, [r4, #0x2e]
	mov     r5, r0
	ldr     r0, [r5, #0x3c]
	mov     r1, r2, lsl #22
	mov     r3, r2, lsl #27
	mov     r1, r1, lsr #27
	mov     r3, r3, lsr #27
	add     r1, r1, #0x1
	mul     r6, r3, r1
	mov     r1, r2, lsl #16
	movs    r2, r6, asr #5
	mov     r1, r1, lsr #26
	orr     r0, r0, #0xc0
	orr     r1, r0, r1, lsl #24
	ldr     r0, [pc, #0x40c] @ [0x209e62c] (=GFX_POLY_FORMAT)
	orr     r1, r1, r2, lsl #16
	str     r1, [r0]
	addeq   sp, sp, #0xf0
	ldr     r0, [r0]
	ldmeqfd sp!, {r4-r8,lr}
	bxeq    lr
	ldr     r0, [r5, #0x40]
	ldrh    r1, [r4, #0x20]
	ldr     r0, [r0, #0x20]
	ldr     r6, [pc, #0x3e8] @ [0x209e630] (=Unknown_20f983c)
	ldr     r0, [r0]
	mov     r1, r1, asr #4
	mov     r2, r1, lsl #1
	ldr     r0, [r0]
	add     r1, r2, #0x1
	mov     r7, r2, lsl #1
	mov     r1, r1, lsl #1
	mov     r0, r0, lsl #13
	mov     r3, r0, lsr #30
	ldr     r2, [pc, #0x3c4] @ [0x209e634] (=Unknown_2100da8)
	ldrsh   r0, [r6, r7]
	ldr     r3, [r2, r3, lsl #0x2]
	ldrsh   r1, [r6, r1]
	add     r2, sp, #0x30
	blx     r3
	add     r0, sp, #0xc0
	bl      MTX_Identity43_
	ldr     r0, [r5, #0x40]
	ldr     r0, [r0, #0x20]
	ldr     r0, [r0]
	ldr     r0, [r0, #0x48]
	movs    r0, r0, lsr #31
	bne     branch_209e2b0
	add     r1, sp, #0x90
	add     r0, r4, #0x14
	bl      VEC_Normalize
	b       branch_209e2e0
@ 0x209e2b0

.arm
branch_209e2b0: @ 209e2b0 :arm
	add     r1, sp, #0x90
	add     r0, r4, #0x8
	bl      VEC_Normalize
	ldr     r2, [sp, #0x90]
	ldr     r1, [sp, #0x94]
	ldr     r0, [sp, #0x98]
	rsb     r2, r2, #0x0
	rsb     r1, r1, #0x0
	rsb     r0, r0, #0x0
	str     r2, [sp, #0x90]
	str     r1, [sp, #0x94]
	str     r0, [sp, #0x98]
.arm
branch_209e2e0: @ 209e2e0 :arm
	mov     r3, #0x0
	mov     r2, #1, 20 @ #0x1000
	add     r0, sp, #0x90
	add     r1, sp, #0xb4
	str     r3, [sp, #0xb4]
	str     r2, [sp, #0xb8]
	str     r3, [sp, #0xbc]
	bl      VEC_DotProduct
	ldr     r1, [pc, #0x330] @ [0x209e638] (=0xccd)
	cmp     r0, r1
	bgt     branch_209e318
	ldr     r1, [pc, #0x328] @ [0x209e63c] (=0xfffff333)
	cmp     r0, r1
	bge     branch_209e32c
.arm
branch_209e318: @ 209e318 :arm
	mov     r0, #0x0
	mov     r1, #1, 20 @ #0x1000
	str     r1, [sp, #0xb4]
	str     r0, [sp, #0xb8]
	str     r0, [sp, #0xbc]
.arm
branch_209e32c: @ 209e32c :arm
	add     r0, sp, #0x90
	add     r1, sp, #0xb4
	add     r2, sp, #0x9c
	bl      VEC_CrossProduct
	add     r0, sp, #0x90
	add     r1, sp, #0x9c
	add     r2, sp, #0xa8
	bl      VEC_CrossProduct
	ldr     r7, [sp, #0x9c]
	ldr     r6, [sp, #0xa0]
	ldr     r3, [sp, #0xa4]
	ldr     r0, [sp, #0x90]
	ldr     r1, [sp, #0x94]
	ldr     r2, [sp, #0x98]
	str     r7, [sp, #0xc0]
	ldr     r7, [sp, #0xa8]
	str     r6, [sp, #0xc4]
	ldr     r6, [sp, #0xac]
	str     r3, [sp, #0xc8]
	ldr     r3, [sp, #0xb0]
	str     r0, [sp, #0xcc]
	str     r1, [sp, #0xd0]
	add     r0, sp, #0x30
	str     r2, [sp, #0xd4]
	add     r1, sp, #0xc0
	mov     r2, r0
	str     r7, [sp, #0xd8]
	str     r6, [sp, #0xdc]
	str     r3, [sp, #0xe0]
	bl      MTX_Concat43
	ldr     r0, [r5, #0x40]
	ldr     r2, [r4, #0x30]
	ldr     r0, [r0, #0x20]
	mov     r12, #2, 22 @ #0x800
	ldr     r0, [r0]
	mov     r3, r2, asr #31
	ldrsh   r1, [r0, #0x30]
	ldr     r0, [r0, #0x48]
	mov     lr, #0x0
	smull   r6, r1, r2, r1
	adds    r7, r6, r12
	adc     r6, r1, #0x0
	mov     r0, r0, lsl #1
	mov     r1, r7, lsr #12
	orr     r1, r1, r6, lsl #20
	movs    r0, r0, lsr #29
	beq     branch_209e3fc
	cmp     r0, #0x1
	beq     branch_209e438
	cmp     r0, #0x2
	beq     branch_209e454
	b       branch_209e478
@ 0x209e3fc

.arm
branch_209e3fc: @ 209e3fc :arm
	ldrsh   r0, [r4, #0x34]
	mov     r8, r0, asr #31
	umull   r7, r6, r2, r0
	mla     r6, r2, r8, r6
	smull   r8, r2, r1, r0
	adds    r1, r8, r12
	adc     r8, r2, lr
	adds    r2, r7, r12
	mla     r6, r3, r0, r6
	mov     r1, r1, lsr #12
	adc     r0, r6, lr
	mov     r2, r2, lsr #12
	orr     r1, r1, r8, lsl #20
	orr     r2, r2, r0, lsl #20
	b       branch_209e478
@ 0x209e438

.arm
branch_209e438: @ 209e438 :arm
	ldrsh   r0, [r4, #0x34]
	smull   r3, r0, r1, r0
	adds    r1, r3, r12
	adc     r0, r0, lr
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	b       branch_209e478
@ 0x209e454

.arm
branch_209e454: @ 209e454 :arm
	ldrsh   r6, [r4, #0x34]
	mov     r0, r6, asr #31
	umull   r8, r7, r2, r6
	mla     r7, r2, r0, r7
	adds    r2, r8, r12
	mla     r7, r3, r6, r7
	adc     r0, r7, lr
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
.arm
branch_209e478: @ 209e478 :arm
	add     r0, sp, #0x60
	mov     r3, r2
	blx     MTX_Scale43_
	add     r0, sp, #0x60
	add     r1, sp, #0x30
	add     r2, sp, #0x0
	bl      MTX_Concat43
	ldr     r0, [r5, #0x40]
	ldr     r0, [r0, #0x20]
	ldr     r3, [r0]
	ldr     r0, [r3]
	mov     r0, r0, lsl #8
	movs    r0, r0, lsr #31
	bne     branch_209e4f4
	ldr     r1, [r4, #0x8]
	ldr     r0, [r4, #0x38]
	add     r0, r1, r0
	str     r0, [sp, #0x24]
	ldr     r1, [r4, #0xc]
	ldr     r0, [r4, #0x3c]
	add     r0, r1, r0
	str     r0, [sp, #0x28]
	ldr     r1, [r4, #0x10]
	ldr     r0, [r4, #0x40]
	add     r0, r1, r0
	str     r0, [sp, #0x2c]
	ldr     r0, [r5, #0x44]
	bl      G3_LoadMtx43
	add     r0, sp, #0x0
	bl      G3_MultMtx43
	b       branch_209e598
@ 0x209e4f4

.arm
branch_209e4f4: @ 209e4f4 :arm
	ldr     r2, [r4, #0x8]
	ldr     r1, [r4, #0x38]
	ldr     r0, [r3, #0x4]
	add     r1, r2, r1
	sub     r0, r1, r0
	str     r0, [sp, #0x24]
	ldr     r0, [r5, #0x40]
	ldr     r2, [r4, #0xc]
	ldr     r0, [r0, #0x20]
	ldr     r1, [r4, #0x3c]
	ldr     r0, [r0]
	add     r2, r2, r1
	ldr     r1, [r0, #0x8]
	ldr     r0, [pc, #0x110] @ [0x209e640] (=MATRIX_IDENTITY)
	sub     r1, r2, r1
	str     r1, [sp, #0x28]
	ldr     r1, [r5, #0x40]
	ldr     r3, [r4, #0x10]
	ldr     r1, [r1, #0x20]
	ldr     r2, [r4, #0x40]
	ldr     r1, [r1]
	add     r3, r3, r2
	ldr     r2, [r1, #0xc]
	mov     r1, #0x0
	sub     r2, r3, r2
	str     r2, [sp, #0x2c]
	str     r1, [r0]
	ldr     r1, [r5, #0x40]
	ldr     r0, [pc, #0xd8] @ [0x209e644] (=MATRIX_TRANSLATE)
	ldr     r1, [r1, #0x20]
	ldr     r1, [r1]
	ldr     r3, [r1, #0xc]
	ldr     r2, [r1, #0x8]
	ldr     r1, [r1, #0x4]
	str     r1, [r0]
	str     r2, [r0]
	str     r3, [r0]
	ldr     r0, [r5, #0x44]
	bl      G3_MultMtx43
	add     r0, sp, #0x0
	bl      G3_MultMtx43
.arm
branch_209e598: @ 209e598 :arm
	ldr     r0, [r5, #0x40]
	ldrh    r4, [r4, #0x36]
	ldrh    r12, [r0, #0x72]
	ldr     r1, [pc, #0x9c] @ [0x209e648] (=GFX_COLOR)
	and     r2, r4, #0x1f
	and     r0, r12, #0x1f
	mul     r3, r2, r0
	and     r2, r4, #62, 28 @ #0x3e0
	and     r0, r12, #62, 28 @ #0x3e0
	mul     r0, r2, r0
	and     r4, r4, #31, 22 @ #0x7c00
	and     r2, r12, #31, 22 @ #0x7c00
	mul     r12, r4, r2
	mov     r2, r3, asr #5
	mov     r0, r0, asr #15
	mov     r3, r12, asr #25
	orr     r0, r2, r0, lsl #5
	orr     r0, r0, r3, lsl #10
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	str     r0, [r1]
	ldr     r2, [r5, #0x40]
	ldr     r4, [pc, #0x54] @ [0x209e64c] (=Unknown_2100da0)
	ldr     r1, [r2, #0x20]
	ldrsh   r0, [r2, #0x78]
	ldr     r12, [r1]
	ldrsh   r1, [r2, #0x7a]
	ldr     r3, [r12]
	ldrsh   r2, [r12, #0x50]
	mov     r3, r3, lsl #12
	mov     r5, r3, lsr #31
	ldrsh   r3, [r12, #0x52]
	ldr     r4, [r4, r5, lsl #0x2]
	blx     r4
	add     sp, sp, #0xf0
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x209e62c

.word GFX_POLY_FORMAT @ 0x209e62c
.word Unknown_20f983c @ 0x209e630
.word Unknown_2100da8 @ 0x209e634
.word 0xccd @ 0x209e638
.word 0xfffff333 @ 0x209e63c
.word MATRIX_IDENTITY @ 0x209e640
.word MATRIX_TRANSLATE @ 0x209e644
.word GFX_COLOR @ 0x209e648
.word Unknown_2100da0 @ 0x209e64c



.arm
Function_209e650: @ 209e650 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x90
	mov     r4, r1
	ldrh    r2, [r4, #0x2e]
	mov     r5, r0
	ldr     r0, [r5, #0x3c]
	mov     r1, r2, lsl #22
	mov     r3, r2, lsl #27
	mov     r1, r1, lsr #27
	mov     r3, r3, lsr #27
	add     r1, r1, #0x1
	mul     r6, r3, r1
	mov     r1, r2, lsl #16
	movs    r2, r6, asr #5
	mov     r1, r1, lsr #26
	orr     r0, r0, #0xc0
	orr     r1, r0, r1, lsl #24
	ldr     r0, [pc, #0x2e8] @ [0x209e984] (=GFX_POLY_FORMAT)
	orr     r1, r1, r2, lsl #16
	str     r1, [r0]
	addeq   sp, sp, #0x90
	ldr     r0, [r0]
	ldmeqfd sp!, {r4-r8,lr}
	bxeq    lr
	ldr     r0, [r5, #0x40]
	ldrh    r1, [r4, #0x20]
	ldr     r0, [r0, #0x20]
	ldr     r6, [pc, #0x2c4] @ [0x209e988] (=Unknown_20f983c)
	ldr     r0, [r0, #0x14]
	mov     r1, r1, asr #4
	ldrh    r0, [r0]
	mov     r2, r1, lsl #1
	add     r1, r2, #0x1
	mov     r7, r2, lsl #1
	mov     r1, r1, lsl #1
	mov     r0, r0, lsl #21
	mov     r3, r0, lsr #30
	ldr     r2, [pc, #0x2a0] @ [0x209e98c] (=Unknown_2100da8)
	ldrsh   r0, [r6, r7]
	ldr     r3, [r2, r3, lsl #0x2]
	ldrsh   r1, [r6, r1]
	add     r2, sp, #0x30
	blx     r3
	ldr     r0, [r5, #0x40]
	ldr     r2, [r4, #0x30]
	ldr     r0, [r0, #0x20]
	mov     r12, #2, 22 @ #0x800
	ldr     r0, [r0]
	mov     r3, r2, asr #31
	ldrsh   r1, [r0, #0x30]
	ldr     r0, [r0, #0x48]
	mov     lr, #0x0
	smull   r6, r1, r2, r1
	adds    r7, r6, r12
	adc     r6, r1, #0x0
	mov     r1, r7, lsr #12
	mov     r0, r0, lsl #1
	orr     r1, r1, r6, lsl #20
	movs    r0, r0, lsr #29
	beq     branch_209e754
	cmp     r0, #0x1
	beq     branch_209e790
	cmp     r0, #0x2
	beq     branch_209e7ac
	b       branch_209e7d0
@ 0x209e754

.arm
branch_209e754: @ 209e754 :arm
	ldrsh   r0, [r4, #0x34]
	mov     r8, r0, asr #31
	umull   r7, r6, r2, r0
	mla     r6, r2, r8, r6
	smull   r8, r2, r1, r0
	adds    r1, r8, r12
	adc     r8, r2, lr
	adds    r2, r7, r12
	mla     r6, r3, r0, r6
	mov     r1, r1, lsr #12
	adc     r0, r6, lr
	mov     r2, r2, lsr #12
	orr     r1, r1, r8, lsl #20
	orr     r2, r2, r0, lsl #20
	b       branch_209e7d0
@ 0x209e790

.arm
branch_209e790: @ 209e790 :arm
	ldrsh   r0, [r4, #0x34]
	smull   r3, r0, r1, r0
	adds    r1, r3, r12
	adc     r0, r0, lr
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	b       branch_209e7d0
@ 0x209e7ac

.arm
branch_209e7ac: @ 209e7ac :arm
	ldrsh   r6, [r4, #0x34]
	mov     r0, r6, asr #31
	umull   r8, r7, r2, r6
	mla     r7, r2, r0, r7
	adds    r2, r8, r12
	mla     r7, r3, r6, r7
	adc     r0, r7, lr
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
.arm
branch_209e7d0: @ 209e7d0 :arm
	add     r0, sp, #0x60
	mov     r3, r2
	blx     MTX_Scale43_
	add     r0, sp, #0x30
	add     r1, sp, #0x60
	add     r2, sp, #0x0
	bl      MTX_Concat43
	ldr     r0, [r5, #0x40]
	ldr     r0, [r0, #0x20]
	ldr     r3, [r0]
	ldr     r0, [r3]
	mov     r0, r0, lsl #8
	movs    r0, r0, lsr #31
	bne     branch_209e84c
	ldr     r1, [r4, #0x8]
	ldr     r0, [r4, #0x38]
	add     r0, r1, r0
	str     r0, [sp, #0x24]
	ldr     r1, [r4, #0xc]
	ldr     r0, [r4, #0x3c]
	add     r0, r1, r0
	str     r0, [sp, #0x28]
	ldr     r1, [r4, #0x10]
	ldr     r0, [r4, #0x40]
	add     r0, r1, r0
	str     r0, [sp, #0x2c]
	ldr     r0, [r5, #0x44]
	bl      G3_LoadMtx43
	add     r0, sp, #0x0
	bl      G3_MultMtx43
	b       branch_209e8f0
@ 0x209e84c

.arm
branch_209e84c: @ 209e84c :arm
	ldr     r2, [r4, #0x8]
	ldr     r1, [r4, #0x38]
	ldr     r0, [r3, #0x4]
	add     r1, r2, r1
	sub     r0, r1, r0
	str     r0, [sp, #0x24]
	ldr     r0, [r5, #0x40]
	ldr     r2, [r4, #0xc]
	ldr     r0, [r0, #0x20]
	ldr     r1, [r4, #0x3c]
	ldr     r0, [r0]
	add     r2, r2, r1
	ldr     r1, [r0, #0x8]
	ldr     r0, [pc, #0x108] @ [0x209e990] (=MATRIX_IDENTITY)
	sub     r1, r2, r1
	str     r1, [sp, #0x28]
	ldr     r1, [r5, #0x40]
	ldr     r3, [r4, #0x10]
	ldr     r1, [r1, #0x20]
	ldr     r2, [r4, #0x40]
	ldr     r1, [r1]
	add     r3, r3, r2
	ldr     r2, [r1, #0xc]
	mov     r1, #0x0
	sub     r2, r3, r2
	str     r2, [sp, #0x2c]
	str     r1, [r0]
	ldr     r1, [r5, #0x40]
	ldr     r0, [pc, #0xd0] @ [0x209e994] (=MATRIX_TRANSLATE)
	ldr     r1, [r1, #0x20]
	ldr     r1, [r1]
	ldr     r3, [r1, #0xc]
	ldr     r2, [r1, #0x8]
	ldr     r1, [r1, #0x4]
	str     r1, [r0]
	str     r2, [r0]
	str     r3, [r0]
	ldr     r0, [r5, #0x44]
	bl      G3_MultMtx43
	add     r0, sp, #0x0
	bl      G3_MultMtx43
.arm
branch_209e8f0: @ 209e8f0 :arm
	ldr     r0, [r5, #0x40]
	ldrh    r4, [r4, #0x36]
	ldrh    r12, [r0, #0x72]
	mov     r2, #0x0
	and     r1, r4, #0x1f
	and     r0, r12, #0x1f
	mul     r3, r1, r0
	and     r1, r4, #62, 28 @ #0x3e0
	and     r0, r12, #62, 28 @ #0x3e0
	mul     r0, r1, r0
	and     r4, r4, #31, 22 @ #0x7c00
	and     r1, r12, #31, 22 @ #0x7c00
	mul     r12, r4, r1
	mov     r1, r3, asr #5
	mov     r0, r0, asr #15
	mov     r3, r12, asr #25
	orr     r0, r1, r0, lsl #5
	orr     r0, r0, r3, lsl #10
	mov     r0, r0, lsl #16
	ldr     r1, [pc, #0x54] @ [0x209e998] (=GFX_COLOR)
	mov     r0, r0, lsr #16
	str     r0, [r1]
	ldr     r5, [r5, #0x40]
	ldr     r4, [pc, #0x48] @ [0x209e99c] (=Unknown_2100da0)
	ldr     r1, [r5, #0x20]
	ldrsh   r0, [r5, #0x7c]
	ldr     r3, [r1, #0x14]
	ldrsh   r1, [r5, #0x7e]
	ldrh    r5, [r3]
	mov     r3, r2
	mov     r5, r5, lsl #20
	mov     r5, r5, lsr #31
	ldr     r4, [r4, r5, lsl #0x2]
	blx     r4
	add     sp, sp, #0x90
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x209e984

.word GFX_POLY_FORMAT @ 0x209e984
.word Unknown_20f983c @ 0x209e988
.word Unknown_2100da8 @ 0x209e98c
.word MATRIX_IDENTITY @ 0x209e990
.word MATRIX_TRANSLATE @ 0x209e994
.word GFX_COLOR @ 0x209e998
.word Unknown_2100da0 @ 0x209e99c



.arm
Function_209e9a0: @ 209e9a0 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x90
	mov     r4, r1
	ldrh    r2, [r4, #0x2e]
	mov     r5, r0
	ldr     r0, [r5, #0x3c]
	mov     r1, r2, lsl #22
	mov     r3, r2, lsl #27
	mov     r1, r1, lsr #27
	mov     r3, r3, lsr #27
	add     r1, r1, #0x1
	mul     r6, r3, r1
	mov     r1, r2, lsl #16
	movs    r2, r6, asr #5
	mov     r1, r1, lsr #26
	orr     r0, r0, #0xc0
	orr     r1, r0, r1, lsl #24
	ldr     r0, [pc, #0x2e8] @ [0x209ecd4] (=GFX_POLY_FORMAT)
	orr     r1, r1, r2, lsl #16
	str     r1, [r0]
	addeq   sp, sp, #0x90
	ldr     r0, [r0]
	ldmeqfd sp!, {r4-r8,lr}
	bxeq    lr
	ldr     r0, [r5, #0x40]
	ldrh    r1, [r4, #0x20]
	ldr     r0, [r0, #0x20]
	ldr     r6, [pc, #0x2c4] @ [0x209ecd8] (=Unknown_20f983c)
	ldr     r0, [r0]
	mov     r1, r1, asr #4
	mov     r2, r1, lsl #1
	ldr     r0, [r0]
	add     r1, r2, #0x1
	mov     r7, r2, lsl #1
	mov     r1, r1, lsl #1
	mov     r0, r0, lsl #13
	mov     r3, r0, lsr #30
	ldr     r2, [pc, #0x2a0] @ [0x209ecdc] (=Unknown_2100da8)
	ldrsh   r0, [r6, r7]
	ldr     r3, [r2, r3, lsl #0x2]
	ldrsh   r1, [r6, r1]
	add     r2, sp, #0x30
	blx     r3
	ldr     r0, [r5, #0x40]
	ldr     r2, [r4, #0x30]
	ldr     r0, [r0, #0x20]
	mov     r12, #2, 22 @ #0x800
	ldr     r0, [r0]
	mov     r3, r2, asr #31
	ldrsh   r1, [r0, #0x30]
	ldr     r0, [r0, #0x48]
	mov     lr, #0x0
	smull   r6, r1, r2, r1
	adds    r7, r6, r12
	adc     r6, r1, #0x0
	mov     r1, r7, lsr #12
	mov     r0, r0, lsl #1
	orr     r1, r1, r6, lsl #20
	movs    r0, r0, lsr #29
	beq     branch_209eaa4
	cmp     r0, #0x1
	beq     branch_209eae0
	cmp     r0, #0x2
	beq     branch_209eafc
	b       branch_209eb20
@ 0x209eaa4

.arm
branch_209eaa4: @ 209eaa4 :arm
	ldrsh   r0, [r4, #0x34]
	mov     r8, r0, asr #31
	umull   r7, r6, r2, r0
	mla     r6, r2, r8, r6
	smull   r8, r2, r1, r0
	adds    r1, r8, r12
	adc     r8, r2, lr
	adds    r2, r7, r12
	mla     r6, r3, r0, r6
	mov     r1, r1, lsr #12
	adc     r0, r6, lr
	mov     r2, r2, lsr #12
	orr     r1, r1, r8, lsl #20
	orr     r2, r2, r0, lsl #20
	b       branch_209eb20
@ 0x209eae0

.arm
branch_209eae0: @ 209eae0 :arm
	ldrsh   r0, [r4, #0x34]
	smull   r3, r0, r1, r0
	adds    r1, r3, r12
	adc     r0, r0, lr
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	b       branch_209eb20
@ 0x209eafc

.arm
branch_209eafc: @ 209eafc :arm
	ldrsh   r6, [r4, #0x34]
	mov     r0, r6, asr #31
	umull   r8, r7, r2, r6
	mla     r7, r2, r0, r7
	adds    r2, r8, r12
	mla     r7, r3, r6, r7
	adc     r0, r7, lr
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
.arm
branch_209eb20: @ 209eb20 :arm
	add     r0, sp, #0x60
	mov     r3, r2
	blx     MTX_Scale43_
	add     r0, sp, #0x60
	add     r1, sp, #0x30
	add     r2, sp, #0x0
	bl      MTX_Concat43
	ldr     r0, [r5, #0x40]
	ldr     r0, [r0, #0x20]
	ldr     r3, [r0]
	ldr     r0, [r3]
	mov     r0, r0, lsl #8
	movs    r0, r0, lsr #31
	bne     branch_209eb9c
	ldr     r1, [r4, #0x8]
	ldr     r0, [r4, #0x38]
	add     r0, r1, r0
	str     r0, [sp, #0x24]
	ldr     r1, [r4, #0xc]
	ldr     r0, [r4, #0x3c]
	add     r0, r1, r0
	str     r0, [sp, #0x28]
	ldr     r1, [r4, #0x10]
	ldr     r0, [r4, #0x40]
	add     r0, r1, r0
	str     r0, [sp, #0x2c]
	ldr     r0, [r5, #0x44]
	bl      G3_LoadMtx43
	add     r0, sp, #0x0
	bl      G3_MultMtx43
	b       branch_209ec40
@ 0x209eb9c

.arm
branch_209eb9c: @ 209eb9c :arm
	ldr     r2, [r4, #0x8]
	ldr     r1, [r4, #0x38]
	ldr     r0, [r3, #0x4]
	add     r1, r2, r1
	sub     r0, r1, r0
	str     r0, [sp, #0x24]
	ldr     r0, [r5, #0x40]
	ldr     r2, [r4, #0xc]
	ldr     r0, [r0, #0x20]
	ldr     r1, [r4, #0x3c]
	ldr     r0, [r0]
	add     r2, r2, r1
	ldr     r1, [r0, #0x8]
	ldr     r0, [pc, #0x108] @ [0x209ece0] (=MATRIX_IDENTITY)
	sub     r1, r2, r1
	str     r1, [sp, #0x28]
	ldr     r1, [r5, #0x40]
	ldr     r3, [r4, #0x10]
	ldr     r1, [r1, #0x20]
	ldr     r2, [r4, #0x40]
	ldr     r1, [r1]
	add     r3, r3, r2
	ldr     r2, [r1, #0xc]
	mov     r1, #0x0
	sub     r2, r3, r2
	str     r2, [sp, #0x2c]
	str     r1, [r0]
	ldr     r1, [r5, #0x40]
	ldr     r0, [pc, #0xd0] @ [0x209ece4] (=MATRIX_TRANSLATE)
	ldr     r1, [r1, #0x20]
	ldr     r1, [r1]
	ldr     r3, [r1, #0xc]
	ldr     r2, [r1, #0x8]
	ldr     r1, [r1, #0x4]
	str     r1, [r0]
	str     r2, [r0]
	str     r3, [r0]
	ldr     r0, [r5, #0x44]
	bl      G3_MultMtx43
	add     r0, sp, #0x0
	bl      G3_MultMtx43
.arm
branch_209ec40: @ 209ec40 :arm
	ldr     r0, [r5, #0x40]
	ldrh    r4, [r4, #0x36]
	ldrh    r12, [r0, #0x72]
	ldr     r1, [pc, #0x94] @ [0x209ece8] (=GFX_COLOR)
	and     r2, r4, #0x1f
	and     r0, r12, #0x1f
	mul     r3, r2, r0
	and     r2, r4, #62, 28 @ #0x3e0
	and     r0, r12, #62, 28 @ #0x3e0
	mul     r0, r2, r0
	and     r4, r4, #31, 22 @ #0x7c00
	and     r2, r12, #31, 22 @ #0x7c00
	mul     r12, r4, r2
	mov     r2, r3, asr #5
	mov     r0, r0, asr #15
	mov     r3, r12, asr #25
	orr     r0, r2, r0, lsl #5
	orr     r0, r0, r3, lsl #10
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	str     r0, [r1]
	ldr     r2, [r5, #0x40]
	ldr     r4, [pc, #0x4c] @ [0x209ecec] (=Unknown_2100da0)
	ldr     r1, [r2, #0x20]
	ldrsh   r0, [r2, #0x78]
	ldr     r12, [r1]
	ldrsh   r1, [r2, #0x7a]
	ldr     r3, [r12]
	ldrsh   r2, [r12, #0x50]
	mov     r3, r3, lsl #12
	mov     r5, r3, lsr #31
	ldrsh   r3, [r12, #0x52]
	ldr     r4, [r4, r5, lsl #0x2]
	blx     r4
	add     sp, sp, #0x90
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x209ecd4

.word GFX_POLY_FORMAT @ 0x209ecd4
.word Unknown_20f983c @ 0x209ecd8
.word Unknown_2100da8 @ 0x209ecdc
.word MATRIX_IDENTITY @ 0x209ece0
.word MATRIX_TRANSLATE @ 0x209ece4
.word GFX_COLOR @ 0x209ece8
.word Unknown_2100da0 @ 0x209ecec



.arm
Function_209ecf0: @ 209ecf0 :arm
	stmfd   sp!, {r4-r10,lr}
	sub     sp, sp, #0x88
	mov     r6, r1
	ldrh    r1, [r6, #0x2e]
	mov     r7, r0
	ldr     r4, [r7, #0x40]
	mov     r0, r1, lsl #22
	mov     r2, r1, lsl #27
	mov     r0, r0, lsr #27
	mov     r2, r2, lsr #27
	add     r0, r0, #0x1
	mul     r3, r2, r0
	ldr     r2, [r4, #0x20]
	movs    r3, r3, asr #5
	ldr     r0, [r7, #0x3c]
	ldr     r4, [r2]
	mov     r1, r1, lsl #16
	mov     r2, r1, lsr #26
	orr     r1, r0, #0xc0
	orr     r2, r1, r2, lsl #24
	ldrsh   r0, [r4, #0x30]
	ldr     r8, [r7, #0x44]
	ldr     r1, [pc, #0x670] @ [0x209f3c0] (=GFX_POLY_FORMAT)
	orr     r2, r2, r3, lsl #16
	str     r2, [r1]
	addeq   sp, sp, #0x88
	ldr     r1, [r1]
	ldmeqfd sp!, {r4-r10,lr}
	bxeq    lr
	ldr     r4, [r6, #0x30]
	ldr     r1, [r7, #0x40]
	smull   r2, r5, r4, r0
	ldr     r0, [r1, #0x20]
	mov     r3, #2, 22 @ #0x800
	adds    r1, r2, r3
	ldr     r2, [r0]
	adc     r9, r5, #0x0
	ldr     r0, [r2, #0x48]
	mov     r5, r1, lsr #12
	mov     r0, r0, lsl #1
	mov     r1, r4, asr #31
	orr     r5, r5, r9, lsl #20
	movs    r0, r0, lsr #29
	mov     r9, #0x0
	beq     branch_209edb8
	cmp     r0, #0x1
	beq     branch_209edf4
	cmp     r0, #0x2
	beq     branch_209ee10
	b       branch_209ee34
@ 0x209edb8

.arm
branch_209edb8: @ 209edb8 :arm
	ldrsh   r0, [r6, #0x34]
	mov     lr, r0, asr #31
	umull   r12, r10, r4, r0
	mla     r10, r4, lr, r10
	smull   lr, r4, r5, r0
	mla     r10, r1, r0, r10
	adds    r0, lr, r3
	adc     lr, r4, r9
	adds    r1, r12, r3
	mov     r5, r0, lsr #12
	adc     r0, r10, r9
	mov     r4, r1, lsr #12
	orr     r5, r5, lr, lsl #20
	orr     r4, r4, r0, lsl #20
	b       branch_209ee34
@ 0x209edf4

.arm
branch_209edf4: @ 209edf4 :arm
	ldrsh   r0, [r6, #0x34]
	smull   r1, r0, r5, r0
	adds    r1, r1, r3
	adc     r0, r0, r9
	mov     r5, r1, lsr #12
	orr     r5, r5, r0, lsl #20
	b       branch_209ee34
@ 0x209ee10

.arm
branch_209ee10: @ 209ee10 :arm
	ldrsh   r10, [r6, #0x34]
	mov     r0, r10, asr #31
	umull   lr, r12, r4, r10
	mla     r12, r4, r0, r12
	adds    r3, lr, r3
	mla     r12, r1, r10, r12
	adc     r0, r12, r9
	mov     r4, r3, lsr #12
	orr     r4, r4, r0, lsl #20
.arm
branch_209ee34: @ 209ee34 :arm
	ldr     r0, [r2]
	mov     r0, r0, lsl #8
	movs    r0, r0, lsr #31
	bne     branch_209f09c
	ldr     r1, [r6, #0x8]
	ldr     r0, [r6, #0x38]
	add     r9, sp, #0x18
	add     r0, r1, r0
	str     r0, [sp, #0xc]
	ldr     r2, [r6, #0xc]
	ldr     r1, [r6, #0x3c]
	add     r0, r6, #0x14
	add     r1, r2, r1
	str     r1, [sp, #0x10]
	ldr     r2, [r6, #0x10]
	ldr     r1, [r6, #0x40]
	add     r1, r2, r1
	str     r1, [sp, #0x14]
	ldmia   r0, {r0-r2}
	stmia   r9, {r0-r2}
	ldr     r0, [r8, #0x8]
	add     r1, sp, #0x24
	str     r0, [sp, #0x24]
	ldr     r2, [r8, #0x14]
	mov     r0, r9
	str     r2, [sp, #0x28]
	ldr     r3, [r8, #0x20]
	mov     r2, r9
	str     r3, [sp, #0x2c]
	bl      VEC_CrossProduct
	ldr     r0, [sp, #0x18]
	cmp     r0, #0x0
	bne     branch_209eed8
	ldr     r0, [sp, #0x1c]
	cmp     r0, #0x0
	bne     branch_209eed8
	ldr     r0, [sp, #0x20]
	cmp     r0, #0x0
	addeq   sp, sp, #0x88
	ldmeqfd sp!, {r4-r10,lr}
	bxeq    lr
.arm
branch_209eed8: @ 209eed8 :arm
	add     r0, sp, #0x18
	mov     r1, r0
	bl      VEC_Normalize
	add     r1, sp, #0x30
	mov     r0, r8
	bl      MI_Copy36B
	add     r0, sp, #0x18
	add     r1, sp, #0x30
	mov     r2, r0
	bl      MTX_MultVec33
	add     r0, sp, #0xc
	mov     r1, r8
	mov     r2, r0
	bl      MTX_MultVec43
	add     r0, r6, #0x14
	add     r3, sp, #0x0
	ldmia   r0, {r0-r2}
	stmia   r3, {r0-r2}
	mov     r0, r3
	mov     r1, r3
	bl      VEC_Normalize
	ldr     r0, [r8, #0x20]
	ldr     r1, [sp, #0x8]
	rsb     r0, r0, #0x0
	smull   r3, r0, r1, r0
	mov     r2, #2, 22 @ #0x800
	adds    r1, r3, r2
	ldr     r3, [r8, #0x14]
	adc     r0, r0, #0x0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	ldr     r0, [r8, #0x8]
	ldr     r9, [sp]
	rsb     r0, r0, #0x0
	smull   r8, r0, r9, r0
	adds    r9, r8, r2
	adc     r8, r0, #0x0
	mov     r0, r9, lsr #12
	orr     r0, r0, r8, lsl #20
	ldr     r8, [sp, #0x4]
	rsb     r3, r3, #0x0
	smull   r9, r3, r8, r3
	adds    r8, r9, r2
	adc     r2, r3, #0x0
	mov     r3, r8, lsr #12
	orr     r3, r3, r2, lsl #20
	add     r0, r0, r3
	adds    r1, r1, r0
	ldr     r0, [r7, #0x40]
	rsbmi   r1, r1, #0x0
	ldr     r0, [r0, #0x20]
	rsb     r2, r1, #1, 20 @ #0x1000
	ldr     r0, [r0]
	mov     r9, #2, 22 @ #0x800
	ldr     r0, [r0, #0x48]
	ldr     r12, [sp, #0x18]
	mov     r0, r0, lsl #8
	mov     r0, r0, lsr #16
	smull   r8, r0, r2, r0
	adds    r2, r8, r9
	adc     r0, r0, #0x0
	mov     r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
	add     r0, r2, #1, 20 @ #0x1000
	smull   r2, r0, r4, r0
	adds    r2, r2, r9
	adc     r0, r0, #0x0
	mov     lr, r2, lsr #12
	orr     lr, lr, r0, lsl #20
	smull   r0, r4, r12, r5
	adds    r8, r0, r9
	ldr     r3, [sp, #0x1c]
	ldr     r0, [sp, #0xc]
	rsb     r2, r3, #0x0
	str     r0, [sp, #0x78]
	ldr     r0, [sp, #0x10]
	smull   r10, r5, r3, r5
	str     r0, [sp, #0x7c]
	smull   r3, r0, r2, lr
	adc     r4, r4, #0x0
	mov     r8, r8, lsr #12
	orr     r8, r8, r4, lsl #20
	adds    r3, r3, r9
	smull   lr, r2, r12, lr
	str     r8, [sp, #0x54]
	adc     r0, r0, #0x0
	adds    r8, r10, r9
	adc     r4, r5, #0x0
	adds    r5, lr, r9
	mov     r9, r3, lsr #12
	orr     r9, r9, r0, lsl #20
	mov     r8, r8, lsr #12
	orr     r8, r8, r4, lsl #20
	ldr     r3, [sp, #0x14]
	adc     r0, r2, #0x0
	mov     r5, r5, lsr #12
	orr     r5, r5, r0, lsl #20
	mov     r4, #1, 20 @ #0x1000
	ldr     r2, [pc, #0x358] @ [0x209f3c4] (=MATRIX_IDENTITY)
	str     r9, [sp, #0x60]
	str     r8, [sp, #0x58]
	add     r0, sp, #0x54
	str     r5, [sp, #0x64]
	str     r1, [sp, #0x6c]
	str     r1, [sp, #0x70]
	str     r1, [sp, #0x5c]
	str     r1, [sp, #0x68]
	str     r4, [sp, #0x74]
	str     r3, [sp, #0x80]
	str     r1, [r2]
	bl      G3_MultMtx43
	b       branch_209f348
@ 0x209f09c

.arm
branch_209f09c: @ 209f09c :arm
	ldr     r3, [r6, #0x8]
	ldr     r1, [r6, #0x38]
	ldr     r0, [r2, #0x4]
	add     r1, r3, r1
	sub     r0, r1, r0
	str     r0, [sp, #0xc]
	ldr     r0, [r7, #0x40]
	ldr     r2, [r6, #0xc]
	ldr     r0, [r0, #0x20]
	ldr     r1, [r6, #0x3c]
	ldr     r0, [r0]
	add     r1, r2, r1
	ldr     r0, [r0, #0x8]
	add     r9, sp, #0x18
	sub     r0, r1, r0
	str     r0, [sp, #0x10]
	ldr     r0, [r7, #0x40]
	ldr     r2, [r6, #0x10]
	ldr     r0, [r0, #0x20]
	ldr     r1, [r6, #0x40]
	ldr     r0, [r0]
	add     r2, r2, r1
	ldr     r1, [r0, #0xc]
	add     r0, r6, #0x14
	sub     r1, r2, r1
	str     r1, [sp, #0x14]
	ldmia   r0, {r0-r2}
	stmia   r9, {r0-r2}
	ldr     r0, [r8, #0x8]
	add     r1, sp, #0x24
	str     r0, [sp, #0x24]
	ldr     r2, [r8, #0x14]
	mov     r0, r9
	str     r2, [sp, #0x28]
	ldr     r3, [r8, #0x20]
	mov     r2, r9
	str     r3, [sp, #0x2c]
	bl      VEC_CrossProduct
	ldr     r0, [sp, #0x18]
	cmp     r0, #0x0
	bne     branch_209f160
	ldr     r0, [sp, #0x1c]
	cmp     r0, #0x0
	bne     branch_209f160
	ldr     r0, [sp, #0x20]
	cmp     r0, #0x0
	addeq   sp, sp, #0x88
	ldmeqfd sp!, {r4-r10,lr}
	bxeq    lr
.arm
branch_209f160: @ 209f160 :arm
	add     r0, sp, #0x18
	mov     r1, r0
	bl      VEC_Normalize
	add     r1, sp, #0x30
	mov     r0, r8
	bl      MI_Copy36B
	add     r0, sp, #0x18
	add     r1, sp, #0x30
	mov     r2, r0
	bl      MTX_MultVec33
	add     r0, sp, #0xc
	mov     r1, r8
	mov     r2, r0
	bl      MTX_MultVec43
	add     r0, r6, #0x14
	add     r3, sp, #0x0
	ldmia   r0, {r0-r2}
	stmia   r3, {r0-r2}
	mov     r0, r3
	mov     r1, r3
	bl      VEC_Normalize
	ldr     r0, [r8, #0x20]
	ldr     r1, [sp, #0x8]
	rsb     r0, r0, #0x0
	smull   r3, r0, r1, r0
	mov     r2, #2, 22 @ #0x800
	adds    r1, r3, r2
	ldr     r3, [r8, #0x14]
	adc     r0, r0, #0x0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	ldr     r0, [r8, #0x8]
	ldr     r9, [sp]
	rsb     r0, r0, #0x0
	smull   r8, r0, r9, r0
	adds    r9, r8, r2
	adc     r8, r0, #0x0
	mov     r0, r9, lsr #12
	orr     r0, r0, r8, lsl #20
	ldr     r8, [sp, #0x4]
	rsb     r3, r3, #0x0
	smull   r9, r3, r8, r3
	adds    r8, r9, r2
	adc     r2, r3, #0x0
	mov     r3, r8, lsr #12
	orr     r3, r3, r2, lsl #20
	add     r0, r0, r3
	adds    r1, r1, r0
	ldr     r0, [r7, #0x40]
	rsbmi   r1, r1, #0x0
	ldr     r0, [r0, #0x20]
	rsb     r2, r1, #1, 20 @ #0x1000
	ldr     r0, [r0]
	mov     r9, #2, 22 @ #0x800
	ldr     r0, [r0, #0x48]
	ldr     lr, [sp, #0x18]
	mov     r0, r0, lsl #8
	mov     r0, r0, lsr #16
	smull   r8, r0, r2, r0
	adds    r2, r8, r9
	adc     r0, r0, #0x0
	mov     r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
	add     r0, r2, #1, 20 @ #0x1000
	smull   r2, r0, r4, r0
	adds    r2, r2, r9
	adc     r0, r0, #0x0
	mov     r8, r2, lsr #12
	orr     r8, r8, r0, lsl #20
	smull   r0, r4, lr, r5
	adds    r12, r0, r9
	ldr     r3, [sp, #0x1c]
	ldr     r0, [sp, #0xc]
	rsb     r2, r3, #0x0
	str     r0, [sp, #0x78]
	ldr     r0, [sp, #0x10]
	smull   r10, r5, r3, r5
	str     r0, [sp, #0x7c]
	smull   r3, r0, r2, r8
	adc     r4, r4, #0x0
	mov     r12, r12, lsr #12
	adds    r3, r3, r9
	orr     r12, r12, r4, lsl #20
	adc     r0, r0, #0x0
	adds    r10, r10, r9
	smull   r8, r2, lr, r8
	adc     r4, r5, #0x0
	adds    r5, r8, r9
	mov     r9, r3, lsr #12
	orr     r9, r9, r0, lsl #20
	mov     r8, r10, lsr #12
	orr     r8, r8, r4, lsl #20
	ldr     r3, [sp, #0x14]
	adc     r0, r2, #0x0
	mov     r2, r5, lsr #12
	orr     r2, r2, r0, lsl #20
	mov     r4, #1, 20 @ #0x1000
	ldr     r0, [pc, #0xd4] @ [0x209f3c4] (=MATRIX_IDENTITY)
	str     r12, [sp, #0x54]
	str     r9, [sp, #0x60]
	str     r8, [sp, #0x58]
	str     r1, [sp, #0x6c]
	str     r2, [sp, #0x64]
	str     r1, [sp, #0x70]
	str     r1, [sp, #0x5c]
	str     r1, [sp, #0x68]
	str     r4, [sp, #0x74]
	str     r3, [sp, #0x80]
	str     r1, [r0]
	ldr     r0, [r7, #0x40]
	ldr     r1, [pc, #0xa4] @ [0x209f3c8] (=MATRIX_TRANSLATE)
	ldr     r2, [r0, #0x20]
	add     r0, sp, #0x54
	ldr     r2, [r2]
	ldr     r4, [r2, #0xc]
	ldr     r3, [r2, #0x8]
	ldr     r2, [r2, #0x4]
	str     r2, [r1]
	str     r3, [r1]
	str     r4, [r1]
	bl      G3_MultMtx43
.arm
branch_209f348: @ 209f348 :arm
	ldr     r0, [r7, #0x40]
	ldrh    r4, [r6, #0x36]
	ldrh    r5, [r0, #0x72]
	mov     r2, #0x0
	and     r1, r4, #0x1f
	and     r0, r5, #0x1f
	mul     r3, r1, r0
	and     r1, r4, #62, 28 @ #0x3e0
	and     r0, r5, #62, 28 @ #0x3e0
	mul     r0, r1, r0
	and     r4, r4, #31, 22 @ #0x7c00
	and     r1, r5, #31, 22 @ #0x7c00
	mul     r5, r4, r1
	mov     r1, r3, asr #5
	mov     r0, r0, asr #15
	mov     r3, r5, asr #25
	orr     r0, r1, r0, lsl #5
	orr     r0, r0, r3, lsl #10
	mov     r0, r0, lsl #16
	ldr     r1, [pc, #0x30] @ [0x209f3cc] (=GFX_COLOR)
	mov     r0, r0, lsr #16
	str     r0, [r1]
	ldr     r1, [r7, #0x40]
	mov     r3, r2
	ldrsh   r0, [r1, #0x7c]
	ldrsh   r1, [r1, #0x7e]
	bl      Function_20a0500
	add     sp, sp, #0x88
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x209f3c0

.word GFX_POLY_FORMAT @ 0x209f3c0
.word MATRIX_IDENTITY @ 0x209f3c4
.word MATRIX_TRANSLATE @ 0x209f3c8
.word GFX_COLOR @ 0x209f3cc
.arm
Function_209f3d0: @ 209f3d0 :arm
	stmfd   sp!, {r4-r10,lr}
	sub     sp, sp, #0x88
	mov     r6, r1
	ldrh    r1, [r6, #0x2e]
	mov     r7, r0
	ldr     r4, [r7, #0x40]
	mov     r0, r1, lsl #22
	mov     r2, r1, lsl #27
	mov     r0, r0, lsr #27
	mov     r2, r2, lsr #27
	add     r0, r0, #0x1
	mul     r3, r2, r0
	ldr     r2, [r4, #0x20]
	movs    r3, r3, asr #5
	ldr     r0, [r7, #0x3c]
	ldr     r4, [r2]
	mov     r1, r1, lsl #16
	mov     r2, r1, lsr #26
	orr     r1, r0, #0xc0
	orr     r2, r1, r2, lsl #24
	ldrsh   r0, [r4, #0x30]
	ldr     r8, [r7, #0x44]
	ldr     r1, [pc, #0x678] @ [0x209faa8] (=GFX_POLY_FORMAT)
	orr     r2, r2, r3, lsl #16
	str     r2, [r1]
	addeq   sp, sp, #0x88
	ldr     r1, [r1]
	ldmeqfd sp!, {r4-r10,lr}
	bxeq    lr
	ldr     r4, [r6, #0x30]
	ldr     r1, [r7, #0x40]
	smull   r2, r5, r4, r0
	ldr     r0, [r1, #0x20]
	mov     r3, #2, 22 @ #0x800
	adds    r1, r2, r3
	ldr     r2, [r0]
	adc     r9, r5, #0x0
	ldr     r0, [r2, #0x48]
	mov     r5, r1, lsr #12
	mov     r0, r0, lsl #1
	mov     r1, r4, asr #31
	orr     r5, r5, r9, lsl #20
	movs    r0, r0, lsr #29
	mov     r9, #0x0
	beq     branch_209f498
	cmp     r0, #0x1
	beq     branch_209f4d4
	cmp     r0, #0x2
	beq     branch_209f4f0
	b       branch_209f514
@ 0x209f498

.arm
branch_209f498: @ 209f498 :arm
	ldrsh   r0, [r6, #0x34]
	mov     lr, r0, asr #31
	umull   r12, r10, r4, r0
	mla     r10, r4, lr, r10
	smull   lr, r4, r5, r0
	mla     r10, r1, r0, r10
	adds    r0, lr, r3
	adc     lr, r4, r9
	adds    r1, r12, r3
	mov     r5, r0, lsr #12
	adc     r0, r10, r9
	mov     r4, r1, lsr #12
	orr     r5, r5, lr, lsl #20
	orr     r4, r4, r0, lsl #20
	b       branch_209f514
@ 0x209f4d4

.arm
branch_209f4d4: @ 209f4d4 :arm
	ldrsh   r0, [r6, #0x34]
	smull   r1, r0, r5, r0
	adds    r1, r1, r3
	adc     r0, r0, r9
	mov     r5, r1, lsr #12
	orr     r5, r5, r0, lsl #20
	b       branch_209f514
@ 0x209f4f0

.arm
branch_209f4f0: @ 209f4f0 :arm
	ldrsh   r10, [r6, #0x34]
	mov     r0, r10, asr #31
	umull   lr, r12, r4, r10
	mla     r12, r4, r0, r12
	adds    r3, lr, r3
	mla     r12, r1, r10, r12
	adc     r0, r12, r9
	mov     r4, r3, lsr #12
	orr     r4, r4, r0, lsl #20
.arm
branch_209f514: @ 209f514 :arm
	ldr     r0, [r2]
	mov     r0, r0, lsl #8
	movs    r0, r0, lsr #31
	bne     branch_209f77c
	ldr     r1, [r6, #0x8]
	ldr     r0, [r6, #0x38]
	add     r9, sp, #0x18
	add     r0, r1, r0
	str     r0, [sp, #0xc]
	ldr     r2, [r6, #0xc]
	ldr     r1, [r6, #0x3c]
	add     r0, r6, #0x14
	add     r1, r2, r1
	str     r1, [sp, #0x10]
	ldr     r2, [r6, #0x10]
	ldr     r1, [r6, #0x40]
	add     r1, r2, r1
	str     r1, [sp, #0x14]
	ldmia   r0, {r0-r2}
	stmia   r9, {r0-r2}
	ldr     r0, [r8, #0x8]
	add     r1, sp, #0x24
	str     r0, [sp, #0x24]
	ldr     r2, [r8, #0x14]
	mov     r0, r9
	str     r2, [sp, #0x28]
	ldr     r3, [r8, #0x20]
	mov     r2, r9
	str     r3, [sp, #0x2c]
	bl      VEC_CrossProduct
	ldr     r0, [sp, #0x18]
	cmp     r0, #0x0
	bne     branch_209f5b8
	ldr     r0, [sp, #0x1c]
	cmp     r0, #0x0
	bne     branch_209f5b8
	ldr     r0, [sp, #0x20]
	cmp     r0, #0x0
	addeq   sp, sp, #0x88
	ldmeqfd sp!, {r4-r10,lr}
	bxeq    lr
.arm
branch_209f5b8: @ 209f5b8 :arm
	add     r0, sp, #0x18
	mov     r1, r0
	bl      VEC_Normalize
	add     r1, sp, #0x30
	mov     r0, r8
	bl      MI_Copy36B
	add     r0, sp, #0x18
	add     r1, sp, #0x30
	mov     r2, r0
	bl      MTX_MultVec33
	add     r0, sp, #0xc
	mov     r1, r8
	mov     r2, r0
	bl      MTX_MultVec43
	add     r0, r6, #0x14
	add     r3, sp, #0x0
	ldmia   r0, {r0-r2}
	stmia   r3, {r0-r2}
	mov     r0, r3
	mov     r1, r3
	bl      VEC_Normalize
	ldr     r0, [r8, #0x20]
	ldr     r1, [sp, #0x8]
	rsb     r0, r0, #0x0
	smull   r3, r0, r1, r0
	mov     r2, #2, 22 @ #0x800
	adds    r1, r3, r2
	ldr     r3, [r8, #0x14]
	adc     r0, r0, #0x0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	ldr     r0, [r8, #0x8]
	ldr     r9, [sp]
	rsb     r0, r0, #0x0
	smull   r8, r0, r9, r0
	adds    r9, r8, r2
	adc     r8, r0, #0x0
	mov     r0, r9, lsr #12
	orr     r0, r0, r8, lsl #20
	ldr     r8, [sp, #0x4]
	rsb     r3, r3, #0x0
	smull   r9, r3, r8, r3
	adds    r8, r9, r2
	adc     r2, r3, #0x0
	mov     r3, r8, lsr #12
	orr     r3, r3, r2, lsl #20
	add     r0, r0, r3
	adds    r1, r1, r0
	ldr     r0, [r7, #0x40]
	rsbmi   r1, r1, #0x0
	ldr     r0, [r0, #0x20]
	rsb     r2, r1, #1, 20 @ #0x1000
	ldr     r0, [r0]
	mov     r9, #2, 22 @ #0x800
	ldr     r0, [r0, #0x48]
	ldr     r12, [sp, #0x18]
	mov     r0, r0, lsl #8
	mov     r0, r0, lsr #16
	smull   r8, r0, r2, r0
	adds    r2, r8, r9
	adc     r0, r0, #0x0
	mov     r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
	add     r0, r2, #1, 20 @ #0x1000
	smull   r2, r0, r4, r0
	adds    r2, r2, r9
	adc     r0, r0, #0x0
	mov     lr, r2, lsr #12
	orr     lr, lr, r0, lsl #20
	smull   r0, r4, r12, r5
	adds    r8, r0, r9
	ldr     r3, [sp, #0x1c]
	ldr     r0, [sp, #0xc]
	rsb     r2, r3, #0x0
	str     r0, [sp, #0x78]
	ldr     r0, [sp, #0x10]
	smull   r10, r5, r3, r5
	str     r0, [sp, #0x7c]
	smull   r3, r0, r2, lr
	adc     r4, r4, #0x0
	mov     r8, r8, lsr #12
	orr     r8, r8, r4, lsl #20
	adds    r3, r3, r9
	smull   lr, r2, r12, lr
	str     r8, [sp, #0x54]
	adc     r0, r0, #0x0
	adds    r8, r10, r9
	adc     r4, r5, #0x0
	adds    r5, lr, r9
	mov     r9, r3, lsr #12
	orr     r9, r9, r0, lsl #20
	mov     r8, r8, lsr #12
	orr     r8, r8, r4, lsl #20
	ldr     r3, [sp, #0x14]
	adc     r0, r2, #0x0
	mov     r5, r5, lsr #12
	orr     r5, r5, r0, lsl #20
	mov     r4, #1, 20 @ #0x1000
	ldr     r2, [pc, #0x360] @ [0x209faac] (=MATRIX_IDENTITY)
	str     r9, [sp, #0x60]
	str     r8, [sp, #0x58]
	add     r0, sp, #0x54
	str     r5, [sp, #0x64]
	str     r1, [sp, #0x6c]
	str     r1, [sp, #0x70]
	str     r1, [sp, #0x5c]
	str     r1, [sp, #0x68]
	str     r4, [sp, #0x74]
	str     r3, [sp, #0x80]
	str     r1, [r2]
	bl      G3_MultMtx43
	b       branch_209fa28
@ 0x209f77c

.arm
branch_209f77c: @ 209f77c :arm
	ldr     r3, [r6, #0x8]
	ldr     r1, [r6, #0x38]
	ldr     r0, [r2, #0x4]
	add     r1, r3, r1
	sub     r0, r1, r0
	str     r0, [sp, #0xc]
	ldr     r0, [r7, #0x40]
	ldr     r2, [r6, #0xc]
	ldr     r0, [r0, #0x20]
	ldr     r1, [r6, #0x3c]
	ldr     r0, [r0]
	add     r1, r2, r1
	ldr     r0, [r0, #0x8]
	add     r9, sp, #0x18
	sub     r0, r1, r0
	str     r0, [sp, #0x10]
	ldr     r0, [r7, #0x40]
	ldr     r2, [r6, #0x10]
	ldr     r0, [r0, #0x20]
	ldr     r1, [r6, #0x40]
	ldr     r0, [r0]
	add     r2, r2, r1
	ldr     r1, [r0, #0xc]
	add     r0, r6, #0x14
	sub     r1, r2, r1
	str     r1, [sp, #0x14]
	ldmia   r0, {r0-r2}
	stmia   r9, {r0-r2}
	ldr     r0, [r8, #0x8]
	add     r1, sp, #0x24
	str     r0, [sp, #0x24]
	ldr     r2, [r8, #0x14]
	mov     r0, r9
	str     r2, [sp, #0x28]
	ldr     r3, [r8, #0x20]
	mov     r2, r9
	str     r3, [sp, #0x2c]
	bl      VEC_CrossProduct
	ldr     r0, [sp, #0x18]
	cmp     r0, #0x0
	bne     branch_209f840
	ldr     r0, [sp, #0x1c]
	cmp     r0, #0x0
	bne     branch_209f840
	ldr     r0, [sp, #0x20]
	cmp     r0, #0x0
	addeq   sp, sp, #0x88
	ldmeqfd sp!, {r4-r10,lr}
	bxeq    lr
.arm
branch_209f840: @ 209f840 :arm
	add     r0, sp, #0x18
	mov     r1, r0
	bl      VEC_Normalize
	add     r1, sp, #0x30
	mov     r0, r8
	bl      MI_Copy36B
	add     r0, sp, #0x18
	add     r1, sp, #0x30
	mov     r2, r0
	bl      MTX_MultVec33
	add     r0, sp, #0xc
	mov     r1, r8
	mov     r2, r0
	bl      MTX_MultVec43
	add     r0, r6, #0x14
	add     r3, sp, #0x0
	ldmia   r0, {r0-r2}
	stmia   r3, {r0-r2}
	mov     r0, r3
	mov     r1, r3
	bl      VEC_Normalize
	ldr     r0, [r8, #0x20]
	ldr     r1, [sp, #0x8]
	rsb     r0, r0, #0x0
	smull   r3, r0, r1, r0
	mov     r2, #2, 22 @ #0x800
	adds    r1, r3, r2
	ldr     r3, [r8, #0x14]
	adc     r0, r0, #0x0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	ldr     r0, [r8, #0x8]
	ldr     r9, [sp]
	rsb     r0, r0, #0x0
	smull   r8, r0, r9, r0
	adds    r9, r8, r2
	adc     r8, r0, #0x0
	mov     r0, r9, lsr #12
	orr     r0, r0, r8, lsl #20
	ldr     r8, [sp, #0x4]
	rsb     r3, r3, #0x0
	smull   r9, r3, r8, r3
	adds    r8, r9, r2
	adc     r2, r3, #0x0
	mov     r3, r8, lsr #12
	orr     r3, r3, r2, lsl #20
	add     r0, r0, r3
	adds    r1, r1, r0
	ldr     r0, [r7, #0x40]
	rsbmi   r1, r1, #0x0
	ldr     r0, [r0, #0x20]
	rsb     r2, r1, #1, 20 @ #0x1000
	ldr     r0, [r0]
	mov     r9, #2, 22 @ #0x800
	ldr     r0, [r0, #0x48]
	ldr     lr, [sp, #0x18]
	mov     r0, r0, lsl #8
	mov     r0, r0, lsr #16
	smull   r8, r0, r2, r0
	adds    r2, r8, r9
	adc     r0, r0, #0x0
	mov     r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
	add     r0, r2, #1, 20 @ #0x1000
	smull   r2, r0, r4, r0
	adds    r2, r2, r9
	adc     r0, r0, #0x0
	mov     r8, r2, lsr #12
	orr     r8, r8, r0, lsl #20
	smull   r0, r4, lr, r5
	adds    r12, r0, r9
	ldr     r3, [sp, #0x1c]
	ldr     r0, [sp, #0xc]
	rsb     r2, r3, #0x0
	str     r0, [sp, #0x78]
	ldr     r0, [sp, #0x10]
	smull   r10, r5, r3, r5
	str     r0, [sp, #0x7c]
	smull   r3, r0, r2, r8
	adc     r4, r4, #0x0
	mov     r12, r12, lsr #12
	adds    r3, r3, r9
	orr     r12, r12, r4, lsl #20
	adc     r0, r0, #0x0
	adds    r10, r10, r9
	smull   r8, r2, lr, r8
	adc     r4, r5, #0x0
	adds    r5, r8, r9
	mov     r9, r3, lsr #12
	orr     r9, r9, r0, lsl #20
	mov     r8, r10, lsr #12
	orr     r8, r8, r4, lsl #20
	ldr     r3, [sp, #0x14]
	adc     r0, r2, #0x0
	mov     r2, r5, lsr #12
	orr     r2, r2, r0, lsl #20
	mov     r4, #1, 20 @ #0x1000
	ldr     r0, [pc, #0xdc] @ [0x209faac] (=MATRIX_IDENTITY)
	str     r12, [sp, #0x54]
	str     r9, [sp, #0x60]
	str     r8, [sp, #0x58]
	str     r1, [sp, #0x6c]
	str     r2, [sp, #0x64]
	str     r1, [sp, #0x70]
	str     r1, [sp, #0x5c]
	str     r1, [sp, #0x68]
	str     r4, [sp, #0x74]
	str     r3, [sp, #0x80]
	str     r1, [r0]
	ldr     r0, [r7, #0x40]
	ldr     r1, [pc, #0xac] @ [0x209fab0] (=MATRIX_TRANSLATE)
	ldr     r2, [r0, #0x20]
	add     r0, sp, #0x54
	ldr     r2, [r2]
	ldr     r4, [r2, #0xc]
	ldr     r3, [r2, #0x8]
	ldr     r2, [r2, #0x4]
	str     r2, [r1]
	str     r3, [r1]
	str     r4, [r1]
	bl      G3_MultMtx43
.arm
branch_209fa28: @ 209fa28 :arm
	ldr     r0, [r7, #0x40]
	ldrh    r4, [r6, #0x36]
	ldrh    r5, [r0, #0x72]
	ldr     r1, [pc, #0x78] @ [0x209fab4] (=GFX_COLOR)
	and     r2, r4, #0x1f
	and     r0, r5, #0x1f
	mul     r3, r2, r0
	and     r2, r4, #62, 28 @ #0x3e0
	and     r0, r5, #62, 28 @ #0x3e0
	mul     r0, r2, r0
	and     r4, r4, #31, 22 @ #0x7c00
	and     r2, r5, #31, 22 @ #0x7c00
	mul     r5, r4, r2
	mov     r2, r3, asr #5
	mov     r0, r0, asr #15
	mov     r3, r5, asr #25
	orr     r0, r2, r0, lsl #5
	orr     r0, r0, r3, lsl #10
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	str     r0, [r1]
	ldr     r2, [r7, #0x40]
	ldr     r1, [r2, #0x20]
	ldrsh   r0, [r2, #0x78]
	ldr     r3, [r1]
	ldrsh   r1, [r2, #0x7a]
	ldrsh   r2, [r3, #0x50]
	ldrsh   r3, [r3, #0x52]
	bl      Function_20a0500
	add     sp, sp, #0x88
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x209faa8

.word GFX_POLY_FORMAT @ 0x209faa8
.word MATRIX_IDENTITY @ 0x209faac
.word MATRIX_TRANSLATE @ 0x209fab0
.word GFX_COLOR @ 0x209fab4
.arm
Function_209fab8: @ 209fab8 :arm
	stmfd   sp!, {r4-r10,lr}
	sub     sp, sp, #0x40
	mov     r6, r1
	ldrh    r1, [r6, #0x2e]
	mov     r7, r0
	ldr     r4, [r7, #0x40]
	mov     r0, r1, lsl #22
	mov     r2, r1, lsl #27
	mov     r0, r0, lsr #27
	mov     r2, r2, lsr #27
	add     r0, r0, #0x1
	mul     r3, r2, r0
	ldr     r2, [r4, #0x20]
	ldr     r0, [r7, #0x3c]
	ldr     r4, [r2]
	mov     r1, r1, lsl #16
	mov     r2, r1, lsr #26
	orr     r1, r0, #0xc0
	ldrsh   r0, [r4, #0x30]
	movs    r4, r3, asr #5
	orr     r3, r1, r2, lsl #24
	ldr     r1, [r7, #0x44]
	ldr     r2, [pc, #0x3e0] @ [0x209fef8] (=GFX_POLY_FORMAT)
	orr     r3, r3, r4, lsl #16
	str     r3, [r2]
	addeq   sp, sp, #0x40
	ldr     r2, [r2]
	ldmeqfd sp!, {r4-r10,lr}
	bxeq    lr
	ldr     r4, [r6, #0x30]
	ldr     r2, [r7, #0x40]
	smull   r3, r5, r4, r0
	ldr     r0, [r2, #0x20]
	mov     r8, #2, 22 @ #0x800
	adds    r2, r3, r8
	ldr     r3, [r0]
	adc     r9, r5, #0x0
	ldr     r0, [r3, #0x48]
	mov     r5, r2, lsr #12
	mov     r0, r0, lsl #1
	mov     r2, r4, asr #31
	orr     r5, r5, r9, lsl #20
	movs    r0, r0, lsr #29
	mov     r9, #0x0
	beq     branch_209fb80
	cmp     r0, #0x1
	beq     branch_209fbbc
	cmp     r0, #0x2
	beq     branch_209fbd8
	b       branch_209fbfc
@ 0x209fb80

.arm
branch_209fb80: @ 209fb80 :arm
	ldrsh   r0, [r6, #0x34]
	mov     lr, r0, asr #31
	umull   r12, r10, r4, r0
	mla     r10, r4, lr, r10
	smull   lr, r4, r5, r0
	mla     r10, r2, r0, r10
	adds    r0, lr, r8
	adc     lr, r4, r9
	adds    r2, r12, r8
	mov     r5, r0, lsr #12
	adc     r0, r10, r9
	mov     r4, r2, lsr #12
	orr     r5, r5, lr, lsl #20
	orr     r4, r4, r0, lsl #20
	b       branch_209fbfc
@ 0x209fbbc

.arm
branch_209fbbc: @ 209fbbc :arm
	ldrsh   r0, [r6, #0x34]
	smull   r2, r0, r5, r0
	adds    r2, r2, r8
	adc     r0, r0, r9
	mov     r5, r2, lsr #12
	orr     r5, r5, r0, lsl #20
	b       branch_209fbfc
@ 0x209fbd8

.arm
branch_209fbd8: @ 209fbd8 :arm
	ldrsh   r10, [r6, #0x34]
	mov     r0, r10, asr #31
	umull   lr, r12, r4, r10
	mla     r12, r4, r0, r12
	adds    r4, lr, r8
	mla     r12, r2, r10, r12
	adc     r0, r12, r9
	mov     r4, r4, lsr #12
	orr     r4, r4, r0, lsl #20
.arm
branch_209fbfc: @ 209fbfc :arm
	ldr     r0, [r3]
	mov     r0, r0, lsl #8
	movs    r0, r0, lsr #31
	bne     branch_209fd1c
	ldr     r3, [r6, #0x8]
	ldr     r2, [r6, #0x38]
	add     r0, sp, #0x0
	add     r2, r3, r2
	str     r2, [sp]
	ldr     r8, [r6, #0xc]
	ldr     r3, [r6, #0x3c]
	mov     r2, r0
	add     r3, r8, r3
	str     r3, [sp, #0x4]
	ldr     r8, [r6, #0x10]
	ldr     r3, [r6, #0x40]
	add     r3, r8, r3
	str     r3, [sp, #0x8]
	bl      MTX_MultVec43
	ldrh    r0, [r6, #0x20]
	ldr     r2, [pc, #0x2a8] @ [0x209fefc] (=Unknown_20f983c)
	mov     r9, #0x0
	mov     r0, r0, asr #4
	mov     r3, r0, lsl #1
	mov     r0, r3, lsl #1
	ldrsh   r1, [r2, r0]
	add     r0, r3, #0x1
	mov     r0, r0, lsl #1
	ldrsh   r0, [r2, r0]
	mov     lr, #1, 20 @ #0x1000
	ldr     r3, [sp]
	ldr     r2, [sp, #0x4]
	str     r3, [sp, #0x30]
	smull   r12, r10, r1, r5
	str     lr, [sp, #0x2c]
	rsb     r8, r1, #0x0
	ldr     r1, [sp, #0x8]
	smull   lr, r5, r0, r5
	mov     r3, #2, 22 @ #0x800
	str     r2, [sp, #0x34]
	adds    r2, lr, r3
	adc     r5, r5, #0x0
	adds    r12, r12, r3
	mov     lr, r2, lsr #12
	orr     lr, lr, r5, lsl #20
	smull   r5, r2, r8, r4
	adc     r10, r10, #0x0
	mov     r8, r12, lsr #12
	orr     r8, r8, r10, lsl #20
	adds    r5, r5, r3
	smull   r10, r4, r0, r4
	adc     r0, r2, #0x0
	adds    r2, r10, r3
	mov     r5, r5, lsr #12
	orr     r5, r5, r0, lsl #20
	mov     r3, r2, lsr #12
	adc     r0, r4, #0x0
	orr     r3, r3, r0, lsl #20
	ldr     r2, [pc, #0x214] @ [0x209ff00] (=MATRIX_IDENTITY)
	str     lr, [sp, #0xc]
	add     r0, sp, #0xc
	str     r8, [sp, #0x10]
	str     r9, [sp, #0x14]
	str     r5, [sp, #0x18]
	str     r3, [sp, #0x1c]
	str     r9, [sp, #0x20]
	str     r9, [sp, #0x24]
	str     r9, [sp, #0x28]
	str     r1, [sp, #0x38]
	str     r9, [r2]
	bl      G3_MultMtx43
	b       branch_209fe80
@ 0x209fd1c

.arm
branch_209fd1c: @ 209fd1c :arm
	ldr     r8, [r6, #0x8]
	ldr     r2, [r6, #0x38]
	ldr     r0, [r3, #0x4]
	add     r2, r8, r2
	sub     r0, r2, r0
	str     r0, [sp]
	ldr     r2, [r7, #0x40]
	ldr     r8, [r6, #0xc]
	ldr     r2, [r2, #0x20]
	ldr     r3, [r6, #0x3c]
	ldr     r2, [r2]
	add     r3, r8, r3
	ldr     r2, [r2, #0x8]
	add     r0, sp, #0x0
	sub     r2, r3, r2
	str     r2, [sp, #0x4]
	ldr     r2, [r7, #0x40]
	ldr     r8, [r6, #0x10]
	ldr     r2, [r2, #0x20]
	ldr     r3, [r6, #0x40]
	ldr     r2, [r2]
	add     r8, r8, r3
	ldr     r3, [r2, #0xc]
	mov     r2, r0
	sub     r3, r8, r3
	str     r3, [sp, #0x8]
	bl      MTX_MultVec43
	ldrh    r0, [r6, #0x20]
	ldr     r2, [pc, #0x168] @ [0x209fefc] (=Unknown_20f983c)
	mov     lr, #0x0
	mov     r0, r0, asr #4
	mov     r3, r0, lsl #1
	mov     r0, r3, lsl #1
	ldrsh   r1, [r2, r0]
	add     r0, r3, #0x1
	mov     r0, r0, lsl #1
	ldrsh   r0, [r2, r0]
	mov     r10, #1, 20 @ #0x1000
	ldr     r3, [sp]
	ldr     r2, [sp, #0x4]
	str     r3, [sp, #0x30]
	smull   r9, r8, r1, r5
	str     r10, [sp, #0x2c]
	rsb     r12, r1, #0x0
	smull   r10, r5, r0, r5
	ldr     r1, [sp, #0x8]
	mov     r3, #2, 22 @ #0x800
	str     r2, [sp, #0x34]
	adds    r2, r10, r3
	adc     r5, r5, #0x0
	mov     r10, r2, lsr #12
	orr     r10, r10, r5, lsl #20
	str     r1, [sp, #0x38]
	adds    r9, r9, r3
	str     r10, [sp, #0xc]
	adc     r10, r8, #0x0
	smull   r5, r2, r12, r4
	mov     r8, r9, lsr #12
	orr     r8, r8, r10, lsl #20
	smull   r9, r4, r0, r4
	adds    r5, r5, r3
	adc     r0, r2, #0x0
	adds    r2, r9, r3
	mov     r3, r5, lsr #12
	orr     r3, r3, r0, lsl #20
	adc     r0, r4, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
	ldr     r0, [pc, #0xcc] @ [0x209ff00] (=MATRIX_IDENTITY)
	str     r8, [sp, #0x10]
	str     lr, [sp, #0x14]
	str     r3, [sp, #0x18]
	str     r2, [sp, #0x1c]
	str     lr, [sp, #0x20]
	str     lr, [sp, #0x24]
	str     lr, [sp, #0x28]
	str     lr, [r0]
	ldr     r0, [r7, #0x40]
	ldr     r1, [pc, #0xa8] @ [0x209ff04] (=MATRIX_TRANSLATE)
	ldr     r2, [r0, #0x20]
	add     r0, sp, #0xc
	ldr     r2, [r2]
	ldr     r4, [r2, #0xc]
	ldr     r3, [r2, #0x8]
	ldr     r2, [r2, #0x4]
	str     r2, [r1]
	str     r3, [r1]
	str     r4, [r1]
	bl      G3_MultMtx43
.arm
branch_209fe80: @ 209fe80 :arm
	ldr     r0, [r7, #0x40]
	ldrh    r4, [r6, #0x36]
	ldrh    r5, [r0, #0x72]
	mov     r2, #0x0
	and     r1, r4, #0x1f
	and     r0, r5, #0x1f
	mul     r3, r1, r0
	and     r1, r4, #62, 28 @ #0x3e0
	and     r0, r5, #62, 28 @ #0x3e0
	mul     r0, r1, r0
	and     r4, r4, #31, 22 @ #0x7c00
	and     r1, r5, #31, 22 @ #0x7c00
	mul     r5, r4, r1
	mov     r1, r3, asr #5
	mov     r0, r0, asr #15
	mov     r3, r5, asr #25
	orr     r0, r1, r0, lsl #5
	orr     r0, r0, r3, lsl #10
	mov     r0, r0, lsl #16
	ldr     r1, [pc, #0x34] @ [0x209ff08] (=GFX_COLOR)
	mov     r0, r0, lsr #16
	str     r0, [r1]
	ldr     r1, [r7, #0x40]
	mov     r3, r2
	ldrsh   r0, [r1, #0x7c]
	ldrsh   r1, [r1, #0x7e]
	bl      Function_20a0500
	add     sp, sp, #0x40
	ldmfd   sp!, {r4-r10,lr}
	bx      lr
@ 0x209fef8

.word GFX_POLY_FORMAT @ 0x209fef8
.word Unknown_20f983c @ 0x209fefc
.word MATRIX_IDENTITY @ 0x209ff00
.word MATRIX_TRANSLATE @ 0x209ff04
.word GFX_COLOR @ 0x209ff08



.arm
Function_209ff0c: @ 209ff0c :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x3c
	mov     r8, r1
	ldrh    r3, [r8, #0x2e]
	mov     r9, r0
	ldr     r1, [r9, #0x40]
	mov     r0, r3, lsl #22
	mov     r2, r3, lsl #27
	mov     r0, r0, lsr #27
	ldr     r4, [r1, #0x20]
	mov     r2, r2, lsr #27
	ldr     r5, [r4]
	add     r0, r0, #0x1
	mul     r0, r2, r0
	movs    r11, r0, asr #5
	mov     r3, r3, lsl #16
	ldr     r2, [r9, #0x3c]
	mov     r6, r3, lsr #26
	orr     r3, r2, #0xc0
	ldr     r4, [r5, #0x48]
	ldrsh   r7, [r5, #0x30]
	mov     r2, r4, lsl #1
	ldrh    r4, [r1, #0x72]
	orr     r3, r3, r6, lsl #24
	ldrsh   r10, [r8, #0x34]
	ldrh    r5, [r8, #0x36]
	ldr     r1, [r9, #0x44]
	ldr     r0, [pc, #0x3c4] @ [0x20a0344] (=GFX_POLY_FORMAT)
	orr     r3, r3, r11, lsl #16
	str     r3, [r0]
	mov     r2, r2, lsr #29
	addeq   sp, sp, #0x3c
	and     r3, r2, #0xff
	ldr     r0, [r0]
	ldmeqfd sp!, {r4-r11,lr}
	bxeq    lr
	ldr     r6, [r8, #0x30]
	mov     r0, #2, 22 @ #0x800
	smull   r7, r2, r6, r7
	adds    r7, r7, r0
	adc     r2, r2, #0x0
	mov     r7, r7, lsr #12
	cmp     r3, #0x0
	mov     lr, r6, asr #31
	orr     r7, r7, r2, lsl #20
	mov     r2, #0x0
	bne     branch_20a0000
	mov     r12, r10, asr #31
	umull   r11, r3, r6, r10
	mla     r3, r6, r12, r3
	mla     r3, lr, r10, r3
	smull   r6, r10, r7, r10
	adds    r6, r6, r0
	adc     r10, r10, r2
	adds    r11, r11, r0
	adc     r0, r3, r2
	mov     r7, r6, lsr #12
	mov     r6, r11, lsr #12
	orr     r7, r7, r10, lsl #20
	orr     r6, r6, r0, lsl #20
	b       branch_20a0040
@ 0x20a0000

.arm
branch_20a0000: @ 20a0000 :arm
	cmp     r3, #0x1
	bne     branch_20a0020
	smull   r10, r3, r7, r10
	adds    r7, r10, r0
	adc     r0, r3, r2
	mov     r7, r7, lsr #12
	orr     r7, r7, r0, lsl #20
	b       branch_20a0040
@ 0x20a0020

.arm
branch_20a0020: @ 20a0020 :arm
	mov     r12, r10, asr #31
	umull   r11, r3, r6, r10
	adds    r0, r11, r0
	mla     r3, r6, r12, r3
	mla     r3, lr, r10, r3
	adc     r2, r3, r2
	mov     r6, r0, lsr #12
	orr     r6, r6, r2, lsl #20
.arm
branch_20a0040: @ 20a0040 :arm
	ldr     r0, [r9, #0x40]
	ldr     r0, [r0, #0x20]
	ldr     r10, [r0]
	ldr     r0, [r10]
	mov     r0, r0, lsl #8
	movs    r0, r0, lsr #31
	bne     branch_20a016c
	ldr     r3, [r8, #0x8]
	ldr     r2, [r8, #0x38]
	add     r0, sp, #0x0
	add     r2, r3, r2
	str     r2, [sp]
	ldr     r10, [r8, #0xc]
	ldr     r3, [r8, #0x3c]
	mov     r2, r0
	add     r3, r10, r3
	str     r3, [sp, #0x4]
	ldr     r10, [r8, #0x10]
	ldr     r3, [r8, #0x40]
	add     r3, r10, r3
	str     r3, [sp, #0x8]
	bl      MTX_MultVec43
	ldrh    r0, [r8, #0x20]
	ldr     r2, [pc, #0x2a4] @ [0x20a0348] (=Unknown_20f983c)
	ldr     r12, [sp]
	mov     r0, r0, asr #4
	mov     r3, r0, lsl #1
	mov     r0, r3, lsl #1
	ldrsh   r1, [r2, r0]
	add     r0, r3, #0x1
	mov     r0, r0, lsl #1
	ldrsh   r0, [r2, r0]
	str     r12, [sp, #0x30]
	mov     r12, #1, 20 @ #0x1000
	ldr     r2, [sp, #0x4]
	smull   r11, r10, r1, r7
	str     r12, [sp, #0x2c]
	rsb     r3, r1, #0x0
	ldr     r1, [sp, #0x8]
	str     r2, [sp, #0x34]
	mov     r8, #0x0
	smull   r12, r7, r0, r7
	mov     r2, #2, 22 @ #0x800
	str     r1, [sp, #0x38]
	adds    r1, r12, r2
	adc     r12, r7, #0x0
	adds    r7, r11, r2
	mov     r11, r1, lsr #12
	orr     r11, r11, r12, lsl #20
	smull   r12, r1, r3, r6
	adc     r10, r10, #0x0
	mov     r7, r7, lsr #12
	orr     r7, r7, r10, lsl #20
	adds    r3, r12, r2
	smull   r10, r6, r0, r6
	adc     r0, r1, #0x0
	adds    r1, r10, r2
	mov     r3, r3, lsr #12
	orr     r3, r3, r0, lsl #20
	mov     r2, r1, lsr #12
	adc     r0, r6, #0x0
	orr     r2, r2, r0, lsl #20
	ldr     r1, [pc, #0x20c] @ [0x20a034c] (=MATRIX_IDENTITY)
	str     r11, [sp, #0xc]
	add     r0, sp, #0xc
	str     r7, [sp, #0x10]
	str     r8, [sp, #0x14]
	str     r3, [sp, #0x18]
	str     r2, [sp, #0x1c]
	str     r8, [sp, #0x20]
	str     r8, [sp, #0x24]
	str     r8, [sp, #0x28]
	str     r8, [r1]
	bl      G3_MultMtx43
	b       branch_20a02d0
@ 0x20a016c

.arm
branch_20a016c: @ 20a016c :arm
	ldr     r3, [r8, #0x8]
	ldr     r2, [r8, #0x38]
	ldr     r0, [r10, #0x4]
	add     r2, r3, r2
	sub     r0, r2, r0
	str     r0, [sp]
	ldr     r2, [r9, #0x40]
	ldr     r10, [r8, #0xc]
	ldr     r2, [r2, #0x20]
	ldr     r3, [r8, #0x3c]
	ldr     r2, [r2]
	add     r3, r10, r3
	ldr     r2, [r2, #0x8]
	add     r0, sp, #0x0
	sub     r2, r3, r2
	str     r2, [sp, #0x4]
	ldr     r2, [r9, #0x40]
	ldr     r10, [r8, #0x10]
	ldr     r2, [r2, #0x20]
	ldr     r3, [r8, #0x40]
	ldr     r2, [r2]
	add     r10, r10, r3
	ldr     r3, [r2, #0xc]
	mov     r2, r0
	sub     r3, r10, r3
	str     r3, [sp, #0x8]
	bl      MTX_MultVec43
	ldrh    r0, [r8, #0x20]
	ldr     r2, [pc, #0x164] @ [0x20a0348] (=Unknown_20f983c)
	mov     r8, #0x0
	mov     r0, r0, asr #4
	mov     r3, r0, lsl #1
	mov     r0, r3, lsl #1
	ldrsh   r1, [r2, r0]
	add     r0, r3, #0x1
	mov     r0, r0, lsl #1
	ldrsh   r0, [r2, r0]
	ldr     r12, [sp]
	ldr     r2, [sp, #0x4]
	str     r12, [sp, #0x30]
	mov     r12, #1, 20 @ #0x1000
	str     r2, [sp, #0x34]
	smull   r11, r10, r1, r7
	str     r12, [sp, #0x2c]
	rsb     r3, r1, #0x0
	ldr     r1, [sp, #0x8]
	smull   r12, r7, r0, r7
	mov     r2, #2, 22 @ #0x800
	str     r1, [sp, #0x38]
	adds    r1, r12, r2
	adc     r12, r7, #0x0
	adds    r7, r11, r2
	mov     r11, r1, lsr #12
	orr     r11, r11, r12, lsl #20
	smull   r12, r1, r3, r6
	adc     r10, r10, #0x0
	mov     r7, r7, lsr #12
	orr     r7, r7, r10, lsl #20
	smull   r10, r6, r0, r6
	adds    r3, r12, r2
	adc     r0, r1, #0x0
	adds    r1, r10, r2
	mov     r2, r3, lsr #12
	orr     r2, r2, r0, lsl #20
	adc     r0, r6, #0x0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	str     r1, [sp, #0x1c]
	ldr     r0, [pc, #0xc8] @ [0x20a034c] (=MATRIX_IDENTITY)
	str     r11, [sp, #0xc]
	str     r7, [sp, #0x10]
	str     r8, [sp, #0x14]
	str     r2, [sp, #0x18]
	str     r8, [sp, #0x20]
	str     r8, [sp, #0x24]
	str     r8, [sp, #0x28]
	str     r8, [r0]
	ldr     r0, [r9, #0x40]
	ldr     r1, [pc, #0xa4] @ [0x20a0350] (=MATRIX_TRANSLATE)
	ldr     r2, [r0, #0x20]
	add     r0, sp, #0xc
	ldr     r2, [r2]
	ldr     r6, [r2, #0xc]
	ldr     r3, [r2, #0x8]
	ldr     r2, [r2, #0x4]
	str     r2, [r1]
	str     r3, [r1]
	str     r6, [r1]
	bl      G3_MultMtx43
.arm
branch_20a02d0: @ 20a02d0 :arm
	and     r1, r5, #0x1f
	and     r0, r4, #0x1f
	mul     r2, r1, r0
	and     r1, r5, #62, 28 @ #0x3e0
	and     r0, r4, #62, 28 @ #0x3e0
	mul     r0, r1, r0
	and     r3, r5, #31, 22 @ #0x7c00
	and     r1, r4, #31, 22 @ #0x7c00
	mul     r4, r3, r1
	mov     r1, r2, asr #5
	mov     r0, r0, asr #15
	mov     r2, r4, asr #25
	orr     r0, r1, r0, lsl #5
	orr     r0, r0, r2, lsl #10
	mov     r0, r0, lsl #16
	ldr     r1, [pc, #0x40] @ [0x20a0354] (=GFX_COLOR)
	mov     r0, r0, lsr #16
	str     r0, [r1]
	ldr     r2, [r9, #0x40]
	ldr     r1, [r2, #0x20]
	ldrsh   r0, [r2, #0x78]
	ldr     r3, [r1]
	ldrsh   r1, [r2, #0x7a]
	ldrsh   r2, [r3, #0x50]
	ldrsh   r3, [r3, #0x52]
	bl      Function_20a0500
	add     sp, sp, #0x3c
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x20a0344

.word GFX_POLY_FORMAT @ 0x20a0344
.word Unknown_20f983c @ 0x20a0348
.word MATRIX_IDENTITY @ 0x20a034c
.word MATRIX_TRANSLATE @ 0x20a0350
.word GFX_COLOR @ 0x20a0354



.arm
Function_20a0358: @ 20a0358 :arm
	str     r1, [r2]
	mov     r12, #0x0
	str     r12, [r2, #0xc]
	str     r0, [r2, #0x18]
	str     r12, [r2, #0x24]
	str     r12, [r2, #0x4]
	mov     r3, #1, 20 @ #0x1000
	str     r3, [r2, #0x10]
	str     r12, [r2, #0x1c]
	str     r12, [r2, #0x28]
	rsb     r0, r0, #0x0
	str     r0, [r2, #0x8]
	str     r12, [r2, #0x14]
	str     r1, [r2, #0x20]
	str     r12, [r2, #0x2c]
	bx      lr
@ 0x20a0398


.arm
Function_20a0398: @ 20a0398 :arm
	stmfd   sp!, {r4-r9,lr}
	sub     sp, sp, #0x4
	ldr     r3, [pc, #0x94] @ [0x20a043c] (=0x555)
	rsb     r7, r1, #1, 20 @ #0x1000
	ldr     r12, [pc, #0x90] @ [0x20a0440] (=0x93d)
	mov     r4, #0x0
	umull   r9, r8, r7, r3
	umull   r6, r5, r0, r12
	mov     lr, #2, 22 @ #0x800
	adds    r9, r9, lr
	mla     r8, r7, r4, r8
	mov     r7, r7, asr #31
	mla     r8, r7, r3, r8
	adc     r7, r8, #0x0
	mov     r3, r9, lsr #12
	adds    r6, r6, lr
	orr     r3, r3, r7, lsl #20
	add     r1, r3, r1
	mla     r5, r0, r4, r5
	mov     r0, r0, asr #31
	mla     r5, r0, r12, r5
	adc     r0, r5, #0x0
	mov     r5, r6, lsr #12
	orr     r5, r5, r0, lsl #20
	str     r1, [r2]
	add     r12, r3, r5
	str     r12, [r2, #0xc]
	sub     r0, r3, r5
	str     r0, [r2, #0x18]
	str     r4, [r2, #0x24]
	str     r0, [r2, #0x4]
	str     r1, [r2, #0x10]
	str     r12, [r2, #0x1c]
	str     r4, [r2, #0x28]
	str     r12, [r2, #0x8]
	str     r0, [r2, #0x14]
	str     r1, [r2, #0x20]
	str     r4, [r2, #0x2c]
	add     sp, sp, #0x4
	ldmfd   sp!, {r4-r9,lr}
	bx      lr
@ 0x20a043c

.word 0x555 @ 0x20a043c
.word 0x93d @ 0x20a0440



.arm
Function_20a0444: @ 20a0444 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     r7, r2, #1, 20 @ #0x1000
	add     r5, r3, #1, 20 @ #0x1000
	add     r4, r2, #1, 20 @ #0x1000
	mov     r2, r0, lsl #8
	mov     r0, r1, lsl #8
	sub     r3, r3, #1, 20 @ #0x1000
	mov     r0, r0, lsr #16
	mov     r1, r2, lsr #16
	ldr     r12, [pc, #0x7c] @ [0x20a04ec] (=GFX_BEGIN)
	mov     r8, #0x1
	ldr     r6, [pc, #0x78] @ [0x20a04f0] (=0x3ff)
	mov     r2, r7, lsl #16
	mov     lr, r5, lsl #16
	mov     r4, r4, lsl #16
	mov     r5, r3, lsl #16
	ldr     r3, [pc, #0x68] @ [0x20a04f4] (=GFX_TEX_COORD)
	str     r8, [r12]
	mov     r12, #0x0
	and     r2, r6, r2, asr #22
	and     r7, r6, lr, asr #22
	and     lr, r6, r4, asr #22
	and     r4, r6, r5, asr #22
	ldr     r6, [pc, #0x50] @ [0x20a04f8] (=GFX_VERTEX10)
	str     r12, [r3]
	orr     r5, r2, r7, lsl #20
	str     r5, [r6]
	str     r1, [r3]
	orr     r5, lr, r7, lsl #20
	str     r5, [r6]
	orr     r1, r1, r0, lsl #16
	str     r1, [r3]
	orr     r1, lr, r4, lsl #20
	str     r1, [r6]
	mov     r0, r0, lsl #16
	str     r0, [r3]
	orr     r1, r2, r4, lsl #20
	ldr     r0, [pc, #0x1c] @ [0x20a04fc] (=GFX_END)
	str     r1, [r6]
	str     r12, [r0]
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x20a04ec

.word GFX_BEGIN @ 0x20a04ec
.word 0x3ff @ 0x20a04f0
.word GFX_TEX_COORD @ 0x20a04f4
.word GFX_VERTEX10 @ 0x20a04f8
.word GFX_END @ 0x20a04fc



.arm
Function_20a0500: @ 20a0500 :arm
	stmfd   sp!, {r4-r8,lr}
	add     r12, r3, #1, 20 @ #0x1000
	sub     r5, r2, #1, 20 @ #0x1000
	add     r4, r2, #1, 20 @ #0x1000
	mov     r2, r0, lsl #8
	mov     r0, r1, lsl #8
	sub     r3, r3, #1, 20 @ #0x1000
	mov     r0, r0, lsr #16
	mov     r1, r2, lsr #16
	ldr     r7, [pc, #0x7c] @ [0x20a05a8] (=GFX_BEGIN)
	mov     r8, #0x1
	ldr     r6, [pc, #0x78] @ [0x20a05ac] (=0x3ff)
	mov     r2, r12, lsl #16
	mov     lr, r5, lsl #16
	mov     r4, r4, lsl #16
	mov     r5, r3, lsl #16
	ldr     r3, [pc, #0x68] @ [0x20a05b0] (=GFX_TEX_COORD)
	str     r8, [r7]
	mov     r12, #0x0
	and     r7, r6, r2, asr #22
	and     r2, r6, lr, asr #22
	and     lr, r6, r4, asr #22
	and     r4, r6, r5, asr #22
	ldr     r6, [pc, #0x50] @ [0x20a05b4] (=GFX_VERTEX10)
	str     r12, [r3]
	orr     r5, r2, r7, lsl #10
	str     r5, [r6]
	str     r1, [r3]
	orr     r5, lr, r7, lsl #10
	str     r5, [r6]
	orr     r1, r1, r0, lsl #16
	str     r1, [r3]
	orr     r1, lr, r4, lsl #10
	str     r1, [r6]
	mov     r0, r0, lsl #16
	str     r0, [r3]
	orr     r1, r2, r4, lsl #10
	ldr     r0, [pc, #0x1c] @ [0x20a05b8] (=GFX_END)
	str     r1, [r6]
	str     r12, [r0]
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x20a05a8

.word GFX_BEGIN @ 0x20a05a8
.word 0x3ff @ 0x20a05ac
.word GFX_TEX_COORD @ 0x20a05b0
.word GFX_VERTEX10 @ 0x20a05b4
.word GFX_END @ 0x20a05b8



.arm
Function_20a05bc: @ 20a05bc :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x24
	ldr     r3, [r1, #0x20]
	str     r1, [sp]
	ldr     r6, [r3, #0x14]
	mov     r8, r0
	ldrb    r3, [r6, #0x8]
	ldrb    r0, [r6, #0xc]
	str     r2, [sp, #0x4]
	mov     r3, r3, lsl #12
	mov     r2, r3, asr #31
	mov     r2, r2, lsl #4
	mov     r1, #2, 22 @ #0x800
	mov     r4, r3, lsl #4
	adds    r4, r4, r1
	orr     r2, r2, r3, lsr #28
	adc     r1, r2, #0x0
	mov     r5, r4, lsr #12
	cmp     r0, #0x0
	mov     r0, #0x0
	str     r0, [sp, #0x8]
	orr     r5, r5, r1, lsl #20
	addle   sp, sp, #0x24
	ldmlefd sp!, {r4-r11,lr}
	bxle    lr
	ldr     r9, [pc, #0x2a4] @ [0x20a08cc] (=RAM_21c3a38)
	str     r0, [sp, #0x18]
	str     r0, [sp, #0x14]
	str     r0, [sp, #0x1c]
	str     r0, [sp, #0x20]
	mov     r0, #1, 20 @ #0x1000
	mov     r4, r5, asr #31
	str     r0, [sp, #0x10]
.arm
branch_20a0640: @ 20a0640 :arm
	ldr     r0, [sp, #0x4]
	bl      Function_20a22b8
	movs    r7, r0
	addeq   sp, sp, #0x24
	ldmeqfd sp!, {r4-r11,lr}
	bxeq    lr
	ldr     r0, [sp]
	mov     r1, r7
	add     r0, r0, #0x14
	bl      Function_20a2304
	add     r0, r7, #0x38
	add     r1, r8, #0x8
	str     r0, [sp, #0xc]
	add     r10, r7, #0x8
	ldmia   r1, {r0-r2}
	stmia   r10, {r0-r2}
	ldr     r10, [r8, #0x14]
	ldr     r12, [r9]
	ldr     r1, [pc, #0x240] @ [0x20a08d0] (=0x5eedf715)
	ldr     r0, [pc, #0x240] @ [0x20a08d4] (=0x1b0cb173)
	mov     r2, r10, asr #31
	mla     r0, r12, r1, r0
	str     r0, [r9]
	umull   lr, r12, r10, r5
	mla     r12, r10, r4, r12
	ldrsh   r1, [r6, #0x2]
	mov     r0, r0, lsr #23
	mla     r12, r2, r5, r12
	mul     r0, r1, r0
	mov     r3, #2, 22 @ #0x800
	adds    r2, lr, r3
	sub     r0, r0, r1, lsl #8
	adc     r10, r12, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r10, lsl #20
	add     r0, r2, r0, asr #8
	str     r0, [r7, #0x14]
	ldr     r10, [r8, #0x18]
	ldr     r12, [r9]
	ldr     r1, [pc, #0x1ec] @ [0x20a08d0] (=0x5eedf715)
	ldr     r0, [pc, #0x1ec] @ [0x20a08d4] (=0x1b0cb173)
	mov     r2, r10, asr #31
	mla     r0, r12, r1, r0
	str     r0, [r9]
	umull   lr, r12, r10, r5
	mla     r12, r10, r4, r12
	mla     r12, r2, r5, r12
	adds    r2, lr, r3
	ldrsh   r1, [r6, #0x2]
	mov     r0, r0, lsr #23
	adc     r10, r12, #0x0
	mul     r0, r1, r0
	mov     r2, r2, lsr #12
	sub     r0, r0, r1, lsl #8
	orr     r2, r2, r10, lsl #20
	add     r0, r2, r0, asr #8
	str     r0, [r7, #0x18]
	ldr     r12, [r8, #0x1c]
	ldr     r10, [r9]
	ldr     r1, [pc, #0x19c] @ [0x20a08d0] (=0x5eedf715)
	ldr     r0, [pc, #0x19c] @ [0x20a08d4] (=0x1b0cb173)
	mov     r2, r12, asr #31
	mla     r0, r10, r1, r0
	umull   r10, lr, r12, r5
	str     r0, [r9]
	mla     lr, r12, r4, lr
	adds    r3, r10, r3
	mla     lr, r2, r5, lr
	ldrsh   r1, [r6, #0x2]
	mov     r0, r0, lsr #23
	adc     r2, lr, #0x0
	mul     r0, r1, r0
	mov     r3, r3, lsr #12
	orr     r3, r3, r2, lsl #20
	sub     r0, r0, r1, lsl #8
	add     r0, r3, r0, asr #8
	ldr     r3, [sp, #0xc]
	add     r11, r8, #0x38
	str     r0, [r7, #0x1c]
	ldmia   r11, {r0-r2}
	stmia   r3, {r0-r2}
	ldrb    r0, [r6, #0x9]
	ldrsh   r1, [r8, #0x34]
	ldr     r2, [r8, #0x30]
	add     r0, r0, #0x1
	mul     r1, r2, r1
	mov     r1, r1, asr #12
	mul     r0, r1, r0
	mov     r0, r0, asr #6
	str     r0, [r7, #0x30]
	ldr     r0, [sp, #0x10]
	strh    r0, [r7, #0x34]
	ldrh    r0, [r6]
	mov     r0, r0, lsl #25
	movs    r0, r0, lsr #31
	ldrneh  r0, [r6, #0xa]
	strneh  r0, [r7, #0x36]
	ldreqh  r0, [r8, #0x36]
	streqh  r0, [r7, #0x36]
	ldrh    r1, [r8, #0x2e]
	ldrh    r0, [r7, #0x2e]
	mov     r2, r1, lsl #27
	mov     r1, r1, lsl #22
	mov     r1, r1, lsr #27
	mov     r2, r2, lsr #27
	add     r1, r1, #0x1
	mul     r1, r2, r1
	mov     r1, r1, lsl #11
	mov     r1, r1, lsr #16
	bic     r0, r0, #0x1f
	and     r1, r1, #0x1f
	orr     r0, r0, r1
	strh    r0, [r7, #0x2e]
	ldrh    r0, [r7, #0x2e]
	bic     r0, r0, #62, 28 @ #0x3e0
	orr     r0, r0, #62, 28 @ #0x3e0
	strh    r0, [r7, #0x2e]
	ldrh    r0, [r6]
	mov     r0, r0, lsl #27
	movs    r0, r0, lsr #30
	beq     branch_20a0844
	cmp     r0, #0x1
	beq     branch_20a0854
	cmp     r0, #0x2
	ldreqh  r0, [r8, #0x20]
	streqh  r0, [r7, #0x20]
	ldreqsh r0, [r8, #0x22]
	streqh  r0, [r7, #0x22]
	b       branch_20a0864
@ 0x20a0844

.arm
branch_20a0844: @ 20a0844 :arm
	ldr     r0, [sp, #0x14]
	strh    r0, [r7, #0x20]
	strh    r0, [r7, #0x22]
	b       branch_20a0864
@ 0x20a0854

.arm
branch_20a0854: @ 20a0854 :arm
	ldrh    r0, [r8, #0x20]
	strh    r0, [r7, #0x20]
	ldr     r0, [sp, #0x18]
	strh    r0, [r7, #0x22]
.arm
branch_20a0864: @ 20a0864 :arm
	ldrh    r1, [r6, #0x6]
	ldr     r0, [pc, #0x68] @ [0x20a08d8] (=0xffff)
	strh    r1, [r7, #0x24]
	ldr     r1, [sp, #0x1c]
	strh    r1, [r7, #0x26]
	ldrb    r1, [r6, #0xf]
	strb    r1, [r7, #0x2c]
	ldrh    r1, [r8, #0x24]
	mov     r1, r1, lsr #1
	bl      _s32_div_f
	strh    r0, [r7, #0x28]
	ldrh    r1, [r8, #0x24]
	ldr     r0, [pc, #0x3c] @ [0x20a08d8] (=0xffff)
	bl      _s32_div_f
	strh    r0, [r7, #0x2a]
	ldr     r0, [sp, #0x20]
	strb    r0, [r7, #0x2d]
	ldr     r0, [sp, #0x8]
	ldrb    r1, [r6, #0xc]
	add     r0, r0, #0x1
	str     r0, [sp, #0x8]
	cmp     r0, r1
	blt     branch_20a0640
	add     sp, sp, #0x24
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x20a08cc

.word RAM_21c3a38 @ 0x20a08cc
.word 0x5eedf715 @ 0x20a08d0
.word 0x1b0cb173 @ 0x20a08d4
.word 0xffff @ 0x20a08d8



.arm
Function_20a08dc: @ 20a08dc :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0xc4
	mov     r9, r0
	ldr     r0, [r9, #0x20]
	ldrsh   r3, [r9, #0x4e]
	str     r0, [sp, #0x4]
	ldr     r0, [r9, #0x58]
	ldr     r2, [pc, #0xce8] @ [0x20a15e8] (=0xfff)
	add     r3, r0, r3
	ldr     r0, [sp, #0x4]
	str     r1, [sp]
	ldr     r8, [r0]
	and     r0, r3, r2
	strh    r0, [r9, #0x4e]
	ldr     r0, [r8]
	mov     r0, r0, lsl #28
	mov     r1, r0, lsr #28
	mov     r0, r3, asr #12
	cmp     r1, #0x2
	str     r0, [sp, #0xc]
	beq     branch_20a0944
	cmp     r1, #0x3
	beq     branch_20a0944
	sub     r0, r1, #0x5
	cmp     r0, #0x4
	bhi     branch_20a094c
.arm
branch_20a0944: @ 20a0944 :arm
	mov     r0, r9
	bl      Function_20a1768
.arm
branch_20a094c: @ 20a094c :arm
	ldr     r0, [sp, #0xc]
	cmp     r0, #0x0
	mov     r0, #0x0
	str     r0, [sp, #0x8]
	addle   sp, sp, #0xc4
	ldmlefd sp!, {r4-r11,lr}
	bxle    lr
	str     r0, [sp, #0x18]
	str     r0, [sp, #0x24]
	str     r0, [sp, #0x20]
	str     r0, [sp, #0x1c]
	mov     r0, #1, 20 @ #0x1000
	str     r0, [sp, #0x34]
	ldr     r0, [sp, #0x8]
	ldr     r6, [pc, #0xc60] @ [0x20a15ec] (=RAM_21c3a38)
	ldr     r4, [pc, #0xc60] @ [0x20a15f0] (=0x5eedf715)
	ldr     r5, [pc, #0xc60] @ [0x20a15f4] (=0x1b0cb173)
	str     r0, [sp, #0x38]
	str     r0, [sp, #0x3c]
	str     r0, [sp, #0x40]
.arm
branch_20a099c: @ 20a099c :arm
	ldr     r0, [sp]
	bl      Function_20a22b8
	movs    r7, r0
	addeq   sp, sp, #0xc4
	ldmeqfd sp!, {r4-r11,lr}
	bxeq    lr
	add     r0, r9, #0x8
	mov     r1, r7
	bl      Function_20a2304
	ldr     r0, [r8]
	mov     r0, r0, lsl #28
	mov     r0, r0, lsr #28
	cmp     r0, #0x9
	addls   pc, pc, r0, lsl #2
	b       branch_20a10dc
	b       branch_20a0a00
	b       branch_20a0a1c
	b       branch_20a0a8c
	b       branch_20a0af4
	b       branch_20a0b88
	b       branch_20a0c88
	b       branch_20a0f80
	b       branch_20a1004
	b       branch_20a0d44
	b       branch_20a0e14
@ 0x20a0a00

.arm
branch_20a0a00: @ 20a0a00 :arm
	ldr     r0, [sp, #0x1c]
	str     r0, [r7, #0x10]
	ldr     r0, [r7, #0x10]
	str     r0, [r7, #0xc]
	ldr     r0, [r7, #0xc]
	str     r0, [r7, #0x8]
	b       branch_20a10dc
@ 0x20a0a1c

.arm
branch_20a0a1c: @ 20a0a1c :arm
	add     r0, r7, #0x8
	bl      Function_20a23b0
	ldr     r2, [r7, #0x8]
	ldr     r1, [r9, #0x5c]
	mov     r0, #2, 22 @ #0x800
	smull   r3, r1, r2, r1
	adds    r2, r3, r0
	adc     r1, r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [r7, #0x8]
	ldr     r2, [r7, #0xc]
	ldr     r1, [r9, #0x5c]
	smull   r3, r1, r2, r1
	adds    r2, r3, r0
	adc     r1, r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [r7, #0xc]
	ldr     r2, [r7, #0x10]
	ldr     r1, [r9, #0x5c]
	smull   r3, r1, r2, r1
	adds    r2, r3, r0
	adc     r0, r1, #0x0
	mov     r1, r2, lsr #12
	orr     r1, r1, r0, lsl #20
	str     r1, [r7, #0x10]
	b       branch_20a10dc
@ 0x20a0a8c

.arm
branch_20a0a8c: @ 20a0a8c :arm
	add     r0, sp, #0x58
	bl      Function_20a2354
	ldr     r2, [sp, #0x58]
	ldr     r0, [r9, #0x5c]
	mov     r1, #2, 22 @ #0x800
	smull   r3, r0, r2, r0
	adds    r2, r3, r1
	adc     r0, r0, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
	str     r2, [sp, #0x58]
	ldr     r3, [sp, #0x5c]
	ldr     r2, [r9, #0x5c]
	add     r0, r7, #0x8
	smull   r10, r2, r3, r2
	adds    r3, r10, r1
	adc     r1, r2, #0x0
	mov     r2, r3, lsr #12
	orr     r2, r2, r1, lsl #20
	ldr     r1, [sp, #0x20]
	str     r2, [sp, #0x5c]
	str     r1, [sp, #0x60]
	add     r1, sp, #0x58
	mov     r2, r9
	bl      Function_20a1608
	b       branch_20a10dc
@ 0x20a0af4

.arm
branch_20a0af4: @ 20a0af4 :arm
	ldr     r0, [sp, #0x18]
	ldr     r1, [sp, #0xc]
	bl      _s32_div_f
	ldr     r1, [sp, #0x18]
	mov     r0, r0, asr #4
	add     r1, r1, #1, 16 @ #0x10000
	mov     r2, r0, lsl #1
	str     r1, [sp, #0x18]
	ldr     r0, [pc, #0xadc] @ [0x20a15f8] (=Unknown_20f983c)
	mov     r1, r2, lsl #1
	ldrsh   r0, [r0, r1]
	add     r1, r2, #0x1
	mov     r2, r1, lsl #1
	ldr     r1, [pc, #0xac8] @ [0x20a15f8] (=Unknown_20f983c)
	ldrsh   r3, [r1, r2]
	ldr     r2, [r9, #0x5c]
	mov     r1, #2, 22 @ #0x800
	smull   r10, r2, r0, r2
	adds    r10, r10, r1
	adc     r0, r2, #0x0
	mov     r2, r10, lsr #12
	orr     r2, r2, r0, lsl #20
	str     r2, [sp, #0x64]
	ldr     r2, [r9, #0x5c]
	add     r0, r7, #0x8
	smull   r10, r2, r3, r2
	adds    r3, r10, r1
	adc     r1, r2, #0x0
	mov     r2, r3, lsr #12
	orr     r2, r2, r1, lsl #20
	ldr     r1, [sp, #0x24]
	str     r2, [sp, #0x68]
	str     r1, [sp, #0x6c]
	add     r1, sp, #0x64
	mov     r2, r9
	bl      Function_20a1608
	b       branch_20a10dc
@ 0x20a0b88

.arm
branch_20a0b88: @ 20a0b88 :arm
	add     r0, r7, #0x8
	bl      Function_20a23b0
	ldr     r1, [r6]
	mov     r0, #2, 22 @ #0x800
	mla     r2, r1, r4, r5
	str     r2, [r6]
	mov     r1, r2, lsr #23
	mov     r1, r1, lsl #12
	sub     r1, r1, #1, 12 @ #0x100000
	mov     r1, r1, asr #8
	ldr     r3, [r7, #0x8]
	ldr     r2, [r9, #0x5c]
	smull   r10, r2, r3, r2
	adds    r3, r10, r0
	adc     r2, r2, #0x0
	mov     r3, r3, lsr #12
	orr     r3, r3, r2, lsl #20
	smull   r2, r1, r3, r1
	adds    r2, r2, r0
	adc     r1, r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [r7, #0x8]
	ldr     r1, [r6]
	mla     r2, r1, r4, r5
	str     r2, [r6]
	mov     r1, r2, lsr #23
	mov     r1, r1, lsl #12
	sub     r1, r1, #1, 12 @ #0x100000
	mov     r1, r1, asr #8
	ldr     r3, [r7, #0xc]
	ldr     r2, [r9, #0x5c]
	smull   r10, r2, r3, r2
	adds    r3, r10, r0
	adc     r2, r2, #0x0
	mov     r3, r3, lsr #12
	orr     r3, r3, r2, lsl #20
	smull   r2, r1, r3, r1
	adds    r2, r2, r0
	adc     r1, r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [r7, #0xc]
	ldr     r1, [r6]
	mla     r2, r1, r4, r5
	str     r2, [r6]
	mov     r1, r2, lsr #23
	mov     r1, r1, lsl #12
	sub     r1, r1, #1, 12 @ #0x100000
	mov     r1, r1, asr #8
	ldr     r3, [r7, #0x10]
	ldr     r2, [r9, #0x5c]
	smull   r10, r2, r3, r2
	adds    r3, r10, r0
	adc     r2, r2, #0x0
	mov     r3, r3, lsr #12
	orr     r3, r3, r2, lsl #20
	smull   r2, r1, r3, r1
	adds    r2, r2, r0
	adc     r0, r1, #0x0
	mov     r1, r2, lsr #12
	orr     r1, r1, r0, lsl #20
	str     r1, [r7, #0x10]
	b       branch_20a10dc
@ 0x20a0c88

.arm
branch_20a0c88: @ 20a0c88 :arm
	add     r0, sp, #0x70
	bl      Function_20a2354
	ldr     r0, [r6]
	ldr     r3, [sp, #0x70]
	mla     r1, r0, r4, r5
	str     r1, [r6]
	ldr     r0, [r9, #0x5c]
	mov     r2, #2, 22 @ #0x800
	smull   r10, r0, r3, r0
	adds    r10, r10, r2
	adc     r3, r0, #0x0
	mov     r0, r10, lsr #12
	orr     r0, r0, r3, lsl #20
	mov     r3, r1, lsr #23
	mov     r3, r3, lsl #12
	sub     r3, r3, #1, 12 @ #0x100000
	mov     r3, r3, asr #8
	smull   r10, r3, r0, r3
	adds    r10, r10, r2
	adc     r0, r3, #0x0
	mov     r3, r10, lsr #12
	orr     r3, r3, r0, lsl #20
	mla     r0, r1, r4, r5
	str     r0, [r6]
	str     r3, [sp, #0x70]
	mov     r0, r0, lsr #23
	mov     r0, r0, lsl #12
	sub     r0, r0, #1, 12 @ #0x100000
	mov     r1, r0, asr #8
	ldr     r10, [sp, #0x74]
	ldr     r3, [r9, #0x5c]
	add     r0, r7, #0x8
	smull   r11, r3, r10, r3
	adds    r10, r11, r2
	adc     r3, r3, #0x0
	mov     r10, r10, lsr #12
	orr     r10, r10, r3, lsl #20
	smull   r3, r1, r10, r1
	adds    r2, r3, r2
	adc     r1, r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [sp, #0x74]
	add     r1, sp, #0x70
	mov     r2, r9
	bl      Function_20a1608
	b       branch_20a10dc
@ 0x20a0d44

.arm
branch_20a0d44: @ 20a0d44 :arm
	add     r0, r7, #0x8
	bl      Function_20a23b0
	add     r0, r9, #0x84
	add     r1, r9, #0x8a
	add     r2, sp, #0x44
	bl      VEC_Fx16CrossProduct
	ldrsh   r1, [sp, #0x46]
	ldrsh   r0, [sp, #0x48]
	ldrsh   r2, [sp, #0x44]
	str     r1, [sp, #0x80]
	str     r0, [sp, #0x84]
	add     r0, sp, #0x7c
	add     r1, r7, #0x8
	str     r2, [sp, #0x7c]
	bl      VEC_DotProduct
	cmp     r0, #0x0
	bgt     branch_20a0dac
	ldr     r0, [r7, #0x8]
	rsb     r0, r0, #0x0
	str     r0, [r7, #0x8]
	ldr     r0, [r7, #0xc]
	rsb     r0, r0, #0x0
	str     r0, [r7, #0xc]
	ldr     r0, [r7, #0x10]
	rsb     r0, r0, #0x0
	str     r0, [r7, #0x10]
.arm
branch_20a0dac: @ 20a0dac :arm
	ldr     r2, [r7, #0x8]
	ldr     r1, [r9, #0x5c]
	mov     r0, #2, 22 @ #0x800
	smull   r3, r1, r2, r1
	adds    r2, r3, r0
	adc     r1, r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [r7, #0x8]
	ldr     r2, [r7, #0xc]
	ldr     r1, [r9, #0x5c]
	smull   r3, r1, r2, r1
	adds    r2, r3, r0
	adc     r1, r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [r7, #0xc]
	ldr     r2, [r7, #0x10]
	ldr     r1, [r9, #0x5c]
	smull   r3, r1, r2, r1
	adds    r2, r3, r0
	adc     r0, r1, #0x0
	mov     r1, r2, lsr #12
	orr     r1, r1, r0, lsl #20
	str     r1, [r7, #0x10]
	b       branch_20a10dc
@ 0x20a0e14

.arm
branch_20a0e14: @ 20a0e14 :arm
	add     r0, r7, #0x8
	bl      Function_20a23b0
	add     r0, r9, #0x84
	add     r1, r9, #0x8a
	add     r2, sp, #0x4a
	bl      VEC_Fx16CrossProduct
	ldrsh   r1, [sp, #0x4c]
	ldrsh   r0, [sp, #0x4e]
	ldrsh   r2, [sp, #0x4a]
	str     r1, [sp, #0x8c]
	str     r0, [sp, #0x90]
	add     r0, sp, #0x88
	add     r1, r7, #0x8
	str     r2, [sp, #0x88]
	bl      VEC_DotProduct
	cmp     r0, #0x0
	bge     branch_20a0e7c
	ldr     r0, [r7, #0x8]
	rsb     r0, r0, #0x0
	str     r0, [r7, #0x8]
	ldr     r0, [r7, #0xc]
	rsb     r0, r0, #0x0
	str     r0, [r7, #0xc]
	ldr     r0, [r7, #0x10]
	rsb     r0, r0, #0x0
	str     r0, [r7, #0x10]
.arm
branch_20a0e7c: @ 20a0e7c :arm
	ldr     r1, [r6]
	mov     r0, #2, 22 @ #0x800
	mla     r2, r1, r4, r5
	str     r2, [r6]
	mov     r1, r2, lsr #23
	mov     r1, r1, lsl #12
	sub     r1, r1, #1, 12 @ #0x100000
	mov     r1, r1, asr #9
	add     r1, r1, #2, 22 @ #0x800
	ldr     r3, [r7, #0x8]
	ldr     r2, [r9, #0x5c]
	smull   r10, r2, r3, r2
	adds    r3, r10, r0
	adc     r2, r2, #0x0
	mov     r3, r3, lsr #12
	orr     r3, r3, r2, lsl #20
	smull   r2, r1, r3, r1
	adds    r2, r2, r0
	adc     r1, r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [r7, #0x8]
	ldr     r1, [r6]
	mla     r2, r1, r4, r5
	str     r2, [r6]
	mov     r1, r2, lsr #23
	mov     r1, r1, lsl #12
	sub     r1, r1, #1, 12 @ #0x100000
	mov     r1, r1, asr #9
	add     r1, r1, #2, 22 @ #0x800
	ldr     r3, [r7, #0xc]
	ldr     r2, [r9, #0x5c]
	smull   r10, r2, r3, r2
	adds    r3, r10, r0
	adc     r2, r2, #0x0
	mov     r3, r3, lsr #12
	orr     r3, r3, r2, lsl #20
	smull   r2, r1, r3, r1
	adds    r2, r2, r0
	adc     r1, r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [r7, #0xc]
	ldr     r1, [r6]
	mla     r2, r1, r4, r5
	str     r2, [r6]
	mov     r1, r2, lsr #23
	mov     r1, r1, lsl #12
	sub     r1, r1, #1, 12 @ #0x100000
	mov     r1, r1, asr #9
	add     r1, r1, #2, 22 @ #0x800
	ldr     r3, [r7, #0x10]
	ldr     r2, [r9, #0x5c]
	smull   r10, r2, r3, r2
	adds    r3, r10, r0
	adc     r2, r2, #0x0
	mov     r3, r3, lsr #12
	orr     r3, r3, r2, lsl #20
	smull   r2, r1, r3, r1
	adds    r2, r2, r0
	adc     r0, r1, #0x0
	mov     r1, r2, lsr #12
	orr     r1, r1, r0, lsl #20
	str     r1, [r7, #0x10]
	b       branch_20a10dc
@ 0x20a0f80

.arm
branch_20a0f80: @ 20a0f80 :arm
	add     r0, r7, #0x14
	bl      Function_20a2354
	ldr     r2, [r7, #0x14]
	ldr     r1, [r9, #0x5c]
	mov     r0, #2, 22 @ #0x800
	smull   r3, r1, r2, r1
	adds    r2, r3, r0
	adc     r1, r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [sp, #0x94]
	ldr     r3, [r7, #0x18]
	ldr     r2, [r9, #0x5c]
	ldr     r1, [r6]
	smull   r10, r2, r3, r2
	adds    r3, r10, r0
	adc     r0, r2, #0x0
	mov     r2, r3, lsr #12
	orr     r2, r2, r0, lsl #20
	mla     r0, r1, r4, r5
	str     r0, [r6]
	str     r2, [sp, #0x98]
	mov     r1, r0, lsr #23
	ldr     r2, [r9, #0x60]
	add     r0, r7, #0x8
	mul     r1, r2, r1
	sub     r1, r1, r2, lsl #8
	mov     r1, r1, asr #8
	str     r1, [sp, #0x9c]
	add     r1, sp, #0x94
	mov     r2, r9
	bl      Function_20a1608
	b       branch_20a10dc
@ 0x20a1004

.arm
branch_20a1004: @ 20a1004 :arm
	add     r0, r7, #0x14
	bl      Function_20a2354
	ldr     r0, [r6]
	mov     r3, #2, 22 @ #0x800
	mla     r2, r0, r4, r5
	str     r2, [r6]
	ldr     r10, [r7, #0x14]
	ldr     r0, [r9, #0x5c]
	mov     r1, r2, lsr #23
	smull   r11, r0, r10, r0
	adds    r11, r11, r3
	mov     r1, r1, lsl #12
	adc     r10, r0, #0x0
	mov     r0, r11, lsr #12
	sub     r1, r1, #1, 12 @ #0x100000
	orr     r0, r0, r10, lsl #20
	mov     r1, r1, asr #8
	smull   r10, r1, r0, r1
	adds    r10, r10, r3
	adc     r0, r1, #0x0
	mov     r1, r10, lsr #12
	orr     r1, r1, r0, lsl #20
	str     r1, [sp, #0xa0]
	mla     r1, r2, r4, r5
	str     r1, [r6]
	mov     r2, r1, lsr #23
	mov     r2, r2, lsl #12
	sub     r2, r2, #1, 12 @ #0x100000
	ldr     r10, [r7, #0x18]
	ldr     r0, [r9, #0x5c]
	mov     r2, r2, asr #8
	smull   r11, r0, r10, r0
	adds    r11, r11, r3
	adc     r10, r0, #0x0
	mov     r0, r11, lsr #12
	orr     r0, r0, r10, lsl #20
	smull   r10, r2, r0, r2
	adds    r3, r10, r3
	adc     r0, r2, #0x0
	mov     r2, r3, lsr #12
	orr     r2, r2, r0, lsl #20
	mla     r0, r1, r4, r5
	str     r0, [r6]
	str     r2, [sp, #0xa4]
	mov     r1, r0, lsr #23
	ldr     r2, [r9, #0x60]
	add     r0, r7, #0x8
	mul     r1, r2, r1
	sub     r1, r1, r2, lsl #8
	mov     r1, r1, asr #8
	str     r1, [sp, #0xa8]
	add     r1, sp, #0xa0
	mov     r2, r9
	bl      Function_20a1608
.arm
branch_20a10dc: @ 20a10dc :arm
	ldr     r1, [r6]
	mla     r0, r1, r4, r5
	str     r0, [r6]
	ldrb    r2, [r8, #0x42]
	mov     r1, r0, lsr #24
	ldr     r3, [r9, #0x64]
	mul     r1, r2, r1
	add     r2, r2, #0xff
	sub     r1, r2, r1, asr #7
	mul     r1, r3, r1
	mov     r1, r1, asr #8
	str     r1, [sp, #0x10]
	mla     r1, r0, r4, r5
	str     r1, [r6]
	mov     r0, r1, lsr #24
	ldrb    r2, [r8, #0x42]
	ldr     r3, [r9, #0x68]
	ldr     r1, [r8]
	mul     r0, r2, r0
	add     r2, r2, #0xff
	sub     r0, r2, r0, asr #7
	mul     r0, r3, r0
	mov     r0, r0, asr #8
	str     r0, [sp, #0x14]
	mov     r0, r1, lsl #28
	mov     r0, r0, lsr #28
	cmp     r0, #0x6
	bne     branch_20a1228
	ldrsh   r0, [r9, #0x84]
	ldr     r1, [r7, #0x14]
	mov     r2, #2, 22 @ #0x800
	smull   r3, r0, r1, r0
	adds    r1, r3, r2
	ldrsh   r3, [r9, #0x8a]
	ldr     lr, [r7, #0x18]
	mov     r12, r1, lsr #12
	smull   r10, r3, lr, r3
	adc     r0, r0, #0x0
	adds    r10, r10, r2
	orr     r12, r12, r0, lsl #20
	adc     r3, r3, #0x0
	mov     r10, r10, lsr #12
	orr     r10, r10, r3, lsl #20
	add     r3, r12, r10
	str     r3, [sp, #0xb8]
	ldrsh   r10, [r9, #0x86]
	ldr     r3, [r7, #0x14]
	ldrsh   lr, [r9, #0x8c]
	smull   r12, r10, r3, r10
	adds    r12, r12, r2
	ldr     r11, [r7, #0x18]
	adc     r10, r10, #0x0
	smull   r3, lr, r11, lr
	mov     r12, r12, lsr #12
	adds    r3, r3, r2
	orr     r12, r12, r10, lsl #20
	adc     r10, lr, #0x0
	mov     r3, r3, lsr #12
	orr     r3, r3, r10, lsl #20
	add     r3, r12, r3
	str     r3, [sp, #0xbc]
	ldr     r10, [r7, #0x18]
	ldrsh   r11, [r9, #0x88]
	ldr     r3, [r7, #0x14]
	str     r10, [sp, #0x28]
	smull   r12, r11, r3, r11
	ldrsh   r10, [r9, #0x8e]
	ldr     r3, [sp, #0x28]
	adds    r12, r12, r2
	smull   r10, lr, r3, r10
	adc     r3, r11, #0x0
	adds    r2, r10, r2
	mov     r10, r12, lsr #12
	orr     r10, r10, r3, lsl #20
	adc     r3, lr, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r3, lsl #20
	add     r2, r10, r2
	add     r0, sp, #0xb8
	add     r1, sp, #0xac
	str     r2, [sp, #0xc0]
	bl      VEC_Normalize
	b       branch_20a1264
@ 0x20a1228

.arm
branch_20a1228: @ 20a1228 :arm
	ldr     r0, [r7, #0x8]
	cmp     r0, #0x0
	bne     branch_20a1258
	ldr     r0, [r7, #0xc]
	cmp     r0, #0x0
	bne     branch_20a1258
	ldr     r0, [r7, #0x10]
	cmp     r0, #0x0
	bne     branch_20a1258
	add     r0, sp, #0xac
	bl      Function_20a23b0
	b       branch_20a1264
@ 0x20a1258

.arm
branch_20a1258: @ 20a1258 :arm
	add     r0, r7, #0x8
	add     r1, sp, #0xac
	bl      VEC_Normalize
.arm
branch_20a1264: @ 20a1264 :arm
	ldr     r2, [sp, #0xac]
	ldr     r1, [sp, #0x10]
	mov     r0, #2, 22 @ #0x800
	smull   r10, r1, r2, r1
	adds    r2, r10, r0
	add     r10, r9, #0x28
	str     r10, [sp, #0x2c]
	add     r10, r7, #0x38
	str     r10, [sp, #0x30]
	adc     r1, r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	ldrsh   r1, [r9, #0x50]
	ldr     r10, [sp, #0x14]
	ldr     r3, [r9, #0x40]
	smull   r11, r10, r1, r10
	adds    r11, r11, r0
	adc     r1, r10, #0x0
	mov     r10, r11, lsr #12
	orr     r10, r10, r1, lsl #20
	add     r1, r2, r10
	add     r1, r3, r1
	str     r1, [r7, #0x14]
	ldr     r3, [sp, #0xb0]
	ldr     r1, [sp, #0x10]
	ldrsh   r10, [r9, #0x52]
	smull   r11, r1, r3, r1
	adds    r11, r11, r0
	adc     r3, r1, #0x0
	mov     r1, r11, lsr #12
	orr     r1, r1, r3, lsl #20
	ldr     r3, [sp, #0x14]
	ldr     r2, [r9, #0x44]
	smull   r11, r3, r10, r3
	adds    r10, r11, r0
	adc     r3, r3, #0x0
	mov     r10, r10, lsr #12
	orr     r10, r10, r3, lsl #20
	add     r1, r1, r10
	add     r1, r2, r1
	str     r1, [r7, #0x18]
	ldr     r1, [sp, #0xb4]
	ldr     r2, [sp, #0x10]
	ldrsh   lr, [r9, #0x54]
	smull   r10, r3, r1, r2
	ldr     r1, [sp, #0x14]
	adds    r10, r10, r0
	smull   r2, r1, lr, r1
	adc     r3, r3, #0x0
	adds    r0, r2, r0
	mov     r2, r10, lsr #12
	orr     r2, r2, r3, lsl #20
	adc     r1, r1, #0x0
	mov     r0, r0, lsr #12
	orr     r0, r0, r1, lsl #20
	ldr     r12, [r9, #0x48]
	add     r0, r2, r0
	add     r0, r12, r0
	str     r0, [r7, #0x1c]
	ldr     r0, [sp, #0x2c]
	ldr     r3, [sp, #0x30]
	ldmia   r0, {r0-r2}
	stmia   r3, {r0-r2}
	ldr     r0, [r6]
	mla     r1, r0, r4, r5
	str     r1, [r6]
	mov     r0, r1, lsr #24
	ldrb    r1, [r8, #0x40]
	ldr     r2, [r9, #0x6c]
	mul     r0, r1, r0
	add     r1, r1, #0xff
	sub     r0, r1, r0, asr #7
	mul     r0, r2, r0
	mov     r0, r0, asr #8
	str     r0, [r7, #0x30]
	ldr     r0, [sp, #0x34]
	strh    r0, [r7, #0x34]
	ldr     r0, [r8]
	mov     r0, r0, lsl #22
	movs    r0, r0, lsr #31
	beq     branch_20a141c
	ldr     r0, [sp, #0x4]
	ldr     r0, [r0, #0x8]
	ldrh    r0, [r0, #0x8]
	mov     r0, r0, lsl #31
	movs    r0, r0, lsr #31
	beq     branch_20a141c
	ldr     r0, [r6]
	ldr     r3, [pc, #0x230] @ [0x20a15fc] (=0x3)
	mla     r1, r0, r4, r5
	str     r1, [r6]
	mov     r0, r1, lsr #20
	ldr     r1, [sp, #0x4]
	ldr     r2, [r1, #0x8]
	ldr     r1, [pc, #0x21c] @ [0x20a1600] (=0xaaaaaaab)
	umull   r1, r10, r0, r1
	mov     r10, r10, lsr #1
	umull   r10, r11, r3, r10
	ldrh    r1, [r2]
	sub     r10, r0, r10
	strh    r1, [sp, #0x50]
	ldrh    r0, [r8, #0x22]
	mov     r1, r10, lsl #1
	strh    r0, [sp, #0x52]
	ldrh    r0, [r2, #0x2]
	strh    r0, [sp, #0x54]
	add     r0, sp, #0x50
	ldrh    r0, [r0, r1]
	strh    r0, [r7, #0x36]
	b       branch_20a1424
@ 0x20a141c

.arm
branch_20a141c: @ 20a141c :arm
	ldrh    r0, [r8, #0x22]
	strh    r0, [r7, #0x36]
.arm
branch_20a1424: @ 20a1424 :arm
	ldrh    r1, [r7, #0x2e]
	ldrb    r0, [r9, #0x81]
	bic     r1, r1, #0x1f
	and     r0, r0, #0x1f
	orr     r0, r1, r0
	strh    r0, [r7, #0x2e]
	ldrh    r0, [r7, #0x2e]
	bic     r0, r0, #62, 28 @ #0x3e0
	orr     r0, r0, #62, 28 @ #0x3e0
	strh    r0, [r7, #0x2e]
	ldr     r0, [r8]
	mov     r0, r0, lsl #18
	movs    r0, r0, lsr #31
	ldrne   r0, [r6]
	mlane   r1, r0, r4, r5
	strne   r1, [r6]
	strneh  r1, [r7, #0x20]
	ldreqh  r0, [r9, #0x56]
	streqh  r0, [r7, #0x20]
	ldr     r0, [r8]
	mov     r0, r0, lsl #19
	movs    r0, r0, lsr #31
	ldreq   r0, [sp, #0x38]
	streqh  r0, [r7, #0x22]
	beq     branch_20a14b4
	ldr     r0, [r6]
	mla     r1, r0, r4, r5
	str     r1, [r6]
	mov     r0, r1, lsr #20
	ldrsh   r2, [r8, #0x34]
	ldrsh   r1, [r8, #0x36]
	sub     r1, r1, r2
	mul     r0, r1, r0
	add     r0, r0, r2, lsl #12
	mov     r0, r0, lsr #12
	strh    r0, [r7, #0x22]
.arm
branch_20a14b4: @ 20a14b4 :arm
	ldr     r0, [r6]
	mla     r1, r0, r4, r5
	str     r1, [r6]
	mov     r0, r1, lsr #24
	ldrb    r1, [r8, #0x41]
	ldrh    r2, [r9, #0x70]
	mul     r0, r1, r0
	mov     r0, r0, asr #8
	rsb     r0, r0, #0xff
	mul     r0, r2, r0
	mov     r0, r0, asr #8
	add     r0, r0, #0x1
	strh    r0, [r7, #0x24]
	ldr     r0, [sp, #0x3c]
	strh    r0, [r7, #0x26]
	ldr     r0, [r8]
	mov     r0, r0, lsl #20
	movs    r1, r0, lsr #31
	beq     branch_20a1544
	ldr     r0, [sp, #0x4]
	ldr     r0, [r0, #0x10]
	ldr     r0, [r0, #0x8]
	mov     r0, r0, lsl #15
	movs    r0, r0, lsr #31
	beq     branch_20a1544
	ldr     r0, [r6]
	mla     r1, r0, r4, r5
	str     r1, [r6]
	mov     r0, r1, lsr #20
	ldr     r1, [sp, #0x4]
	ldr     r10, [r1, #0x10]
	ldrb    r1, [r10, #0x8]
	bl      _u32_div_f
	ldrb    r0, [r10, r1]
	strb    r0, [r7, #0x2c]
	b       branch_20a1574
@ 0x20a1544

.arm
branch_20a1544: @ 20a1544 :arm
	cmp     r1, #0x0
	beq     branch_20a156c
	ldr     r0, [sp, #0x4]
	ldr     r1, [r0, #0x10]
	ldr     r0, [r1, #0x8]
	mov     r0, r0, lsl #15
	movs    r0, r0, lsr #31
	ldreqb  r0, [r1]
	streqb  r0, [r7, #0x2c]
	beq     branch_20a1574
.arm
branch_20a156c: @ 20a156c :arm
	ldrb    r0, [r8, #0x47]
	strb    r0, [r7, #0x2c]
.arm
branch_20a1574: @ 20a1574 :arm
	ldr     r1, [sp, #0x4]
	ldr     r0, [pc, #0x84] @ [0x20a1604] (=0xffff)
	ldr     r1, [r1]
	ldrb    r1, [r1, #0x48]
	bl      _s32_div_f
	strh    r0, [r7, #0x28]
	ldrh    r1, [r7, #0x24]
	ldr     r0, [pc, #0x6c] @ [0x20a1604] (=0xffff)
	bl      _s32_div_f
	strh    r0, [r7, #0x2a]
	ldr     r0, [sp, #0x40]
	strb    r0, [r7, #0x2d]
	ldr     r0, [r8]
	mov     r0, r0, lsl #11
	movs    r0, r0, lsr #31
	ldrne   r0, [r6]
	mlane   r1, r0, r4, r5
	strne   r1, [r6]
	movne   r0, r1, lsr #24
	strneb  r0, [r7, #0x2d]
	ldr     r0, [sp, #0x8]
	add     r1, r0, #0x1
	ldr     r0, [sp, #0xc]
	str     r1, [sp, #0x8]
	cmp     r1, r0
	blt     branch_20a099c
	add     sp, sp, #0xc4
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x20a15e8

.word 0xfff @ 0x20a15e8
.word RAM_21c3a38 @ 0x20a15ec
.word 0x5eedf715 @ 0x20a15f0
.word 0x1b0cb173 @ 0x20a15f4
.word Unknown_20f983c @ 0x20a15f8
.word 0x3 @ 0x20a15fc
.word 0xaaaaaaab @ 0x20a1600
.word 0xffff @ 0x20a1604



.arm
Function_20a1608: @ 20a1608 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x8
	mov     r4, r2
	mov     r6, r0
	mov     r5, r1
	add     r2, sp, #0x0
	add     r0, r4, #0x84
	add     r1, r4, #0x8a
	bl      VEC_Fx16CrossProduct
	add     r0, sp, #0x0
	mov     r1, r0
	bl      VEC_Fx16Normalize
	ldrsh   r1, [sp]
	ldr     lr, [r5, #0x8]
	ldrsh   r0, [r4, #0x84]
	ldr     r12, [r5]
	smull   r3, r2, lr, r1
	smull   r1, r0, r12, r0
	ldrsh   r7, [r4, #0x8a]
	ldr     r8, [r5, #0x4]
	mov     r12, #2, 22 @ #0x800
	smull   lr, r7, r8, r7
	adds    r8, r3, r12
	adc     r3, r2, #0x0
	mov     r2, r8, lsr #12
	adds    r1, r1, r12
	orr     r2, r2, r3, lsl #20
	adc     r0, r0, #0x0
	mov     r3, r1, lsr #12
	adds    r1, lr, r12
	orr     r3, r3, r0, lsl #20
	adc     r0, r7, #0x0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	add     r0, r3, r1
	add     r0, r2, r0
	str     r0, [r6]
	ldrsh   r0, [sp, #0x2]
	ldr     r1, [r5, #0x8]
	ldrsh   r3, [r4, #0x86]
	smull   r2, r0, r1, r0
	adds    r2, r2, r12
	ldr     lr, [r5]
	adc     r1, r0, #0x0
	mov     r0, r2, lsr #12
	orr     r0, r0, r1, lsl #20
	smull   r8, r7, lr, r3
	ldrsh   r1, [r4, #0x8c]
	ldr     r2, [r5, #0x4]
	adds    r8, r8, r12
	smull   r3, r1, r2, r1
	adc     r2, r7, #0x0
	mov     r7, r8, lsr #12
	orr     r7, r7, r2, lsl #20
	adds    r2, r3, r12
	adc     r1, r1, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	add     r1, r7, r2
	add     r0, r0, r1
	str     r0, [r6, #0x4]
	ldrsh   r0, [sp, #0x4]
	ldr     r1, [r5, #0x8]
	ldr     lr, [r5]
	smull   r3, r0, r1, r0
	adds    r3, r3, r12
	adc     r1, r0, #0x0
	mov     r0, r3, lsr #12
	orr     r0, r0, r1, lsl #20
	ldrsh   r3, [r4, #0x88]
	ldrsh   r1, [r4, #0x8e]
	ldr     r2, [r5, #0x4]
	smull   r5, r4, lr, r3
	adds    r5, r5, r12
	smull   r3, r1, r2, r1
	adc     r4, r4, #0x0
	adds    r2, r3, r12
	mov     r3, r5, lsr #12
	adc     r1, r1, #0x0
	mov     r2, r2, lsr #12
	orr     r3, r3, r4, lsl #20
	orr     r2, r2, r1, lsl #20
	add     r1, r3, r2
	add     r0, r0, r1
	str     r0, [r6, #0x8]
	add     sp, sp, #0x8
	ldmfd   sp!, {r4-r8,lr}
	bx      lr
@ 0x20a1768


.arm
Function_20a1768: @ 20a1768 :arm
	stmfd   sp!, {r4-r6,lr}
	sub     sp, sp, #0x10
	ldr     r1, [pc, #0x274] @ [0x20a19ec] (=Unknown_2100db0)
	mov     r4, r0
	ldrh    r3, [r1]
	ldrh    r2, [r1, #0x2]
	ldrh    r0, [r1, #0x4]
	strh    r3, [sp]
	strh    r2, [sp, #0x2]
	strh    r0, [sp, #0x4]
	ldr     r0, [r4, #0x20]
	ldr     r0, [r0]
	ldr     r0, [r0]
	mov     r0, r0, lsl #24
	movs    r0, r0, lsr #30
	beq     branch_20a17e8
	cmp     r0, #0x1
	beq     branch_20a17d0
	cmp     r0, #0x2
	bne     branch_20a1800
	mov     r0, #0x0
	mov     r1, #1, 20 @ #0x1000
	strh    r1, [sp, #0x6]
	strh    r0, [sp, #0x8]
	strh    r0, [sp, #0xa]
	b       branch_20a180c
@ 0x20a17d0

.arm
branch_20a17d0: @ 20a17d0 :arm
	mov     r1, #0x0
	mov     r0, #1, 20 @ #0x1000
	strh    r1, [sp, #0x6]
	strh    r0, [sp, #0x8]
	strh    r1, [sp, #0xa]
	b       branch_20a180c
@ 0x20a17e8

.arm
branch_20a17e8: @ 20a17e8 :arm
	mov     r1, #0x0
	mov     r0, #1, 20 @ #0x1000
	strh    r1, [sp, #0x6]
	strh    r1, [sp, #0x8]
	strh    r0, [sp, #0xa]
	b       branch_20a180c
@ 0x20a1800

.arm
branch_20a1800: @ 20a1800 :arm
	add     r1, sp, #0x6
	add     r0, r4, #0x50
	bl      VEC_Fx16Normalize
.arm
branch_20a180c: @ 20a180c :arm
	add     r0, sp, #0x0
	add     r1, sp, #0x6
	bl      VEC_Fx16DotProduct
	cmp     r0, #1, 20 @ #0x1000
	beq     branch_20a1830
	mov     r1, #1, 20 @ #0x1000
	rsb     r1, r1, #0x0
	cmp     r0, r1
	bne     branch_20a1844
.arm
branch_20a1830: @ 20a1830 :arm
	mov     r0, #0x0
	mov     r1, #1, 20 @ #0x1000
	strh    r1, [sp]
	strh    r0, [sp, #0x2]
	strh    r0, [sp, #0x4]
.arm
branch_20a1844: @ 20a1844 :arm
	ldrsh   r3, [sp, #0x8]
	ldrsh   r1, [sp, #0x4]
	ldrsh   r2, [sp, #0xa]
	ldrsh   r0, [sp, #0x2]
	smull   r6, r5, r3, r1
	mov     r1, #2, 22 @ #0x800
	adds    r6, r6, r1
	smull   r3, r0, r2, r0
	adc     r5, r5, #0x0
	adds    r2, r3, r1
	mov     r3, r6, lsr #12
	adc     r0, r0, #0x0
	mov     r2, r2, lsr #12
	orr     r3, r3, r5, lsl #20
	orr     r2, r2, r0, lsl #20
	sub     r0, r3, r2
	strh    r0, [r4, #0x84]
	ldrsh   r5, [sp, #0xa]
	ldrsh   r3, [sp]
	ldrsh   r2, [sp, #0x6]
	ldrsh   r0, [sp, #0x4]
	smull   r3, r6, r5, r3
	adds    r12, r3, r1
	smull   r3, r0, r2, r0
	adc     r5, r6, #0x0
	adds    r2, r3, r1
	mov     r3, r12, lsr #12
	adc     r0, r0, #0x0
	mov     r2, r2, lsr #12
	orr     r3, r3, r5, lsl #20
	orr     r2, r2, r0, lsl #20
	sub     r0, r3, r2
	strh    r0, [r4, #0x86]
	ldrsh   r5, [sp, #0x6]
	ldrsh   r3, [sp, #0x2]
	ldrsh   r2, [sp, #0x8]
	ldrsh   r0, [sp]
	smull   r3, r6, r5, r3
	adds    r12, r3, r1
	smull   r3, r0, r2, r0
	adc     r5, r6, #0x0
	adds    r2, r3, r1
	mov     r3, r12, lsr #12
	adc     r0, r0, #0x0
	mov     r2, r2, lsr #12
	orr     r3, r3, r5, lsl #20
	orr     r2, r2, r0, lsl #20
	sub     r0, r3, r2
	strh    r0, [r4, #0x88]
	ldrsh   r6, [sp, #0x8]
	ldrsh   r5, [r4, #0x88]
	add     r0, r4, #0x84
	ldrsh   r3, [sp, #0xa]
	ldrsh   r2, [r4, #0x86]
	smull   r5, r12, r6, r5
	adds    lr, r5, r1
	smull   r5, r2, r3, r2
	adc     r6, r12, #0x0
	adds    r3, r5, r1
	mov     r5, lr, lsr #12
	adc     r2, r2, #0x0
	mov     r3, r3, lsr #12
	orr     r5, r5, r6, lsl #20
	orr     r3, r3, r2, lsl #20
	sub     r2, r5, r3
	strh    r2, [r4, #0x8a]
	ldrsh   r6, [sp, #0xa]
	ldrsh   r5, [r4, #0x84]
	ldrsh   r3, [sp, #0x6]
	ldrsh   r2, [r4, #0x88]
	smull   lr, r12, r6, r5
	smull   r5, r2, r3, r2
	adds    r6, lr, r1
	adc     r3, r12, #0x0
	mov     r6, r6, lsr #12
	orr     r6, r6, r3, lsl #20
	adds    r3, r5, r1
	adc     r2, r2, #0x0
	mov     r3, r3, lsr #12
	orr     r3, r3, r2, lsl #20
	sub     r2, r6, r3
	strh    r2, [r4, #0x8c]
	ldrsh   lr, [sp, #0x6]
	ldrsh   r12, [r4, #0x86]
	ldrsh   r3, [sp, #0x8]
	ldrsh   r2, [r4, #0x84]
	smull   r6, r5, lr, r12
	smull   r12, r2, r3, r2
	adds    r6, r6, r1
	adc     r5, r5, #0x0
	adds    r3, r12, r1
	mov     r6, r6, lsr #12
	orr     r6, r6, r5, lsl #20
	adc     r1, r2, #0x0
	mov     r2, r3, lsr #12
	orr     r2, r2, r1, lsl #20
	sub     r1, r6, r2
	strh    r1, [r4, #0x8e]
	mov     r1, r0
	bl      VEC_Fx16Normalize
	add     r0, r4, #0x8a
	mov     r1, r0
	bl      VEC_Fx16Normalize
	add     sp, sp, #0x10
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x20a19ec

.word Unknown_2100db0 @ 0x20a19ec



.arm
Function_20a19f0: @ 20a19f0 :arm
	stmfd   sp!, {lr}
	sub     sp, sp, #0x4
	rsb     r2, r2, #0xff
	mov     r1, #0x1f
	mul     r3, r2, r1
	ldr     r2, [pc, #0x38] @ [0x20a1a44] (=0x80808081)
	ldrh    lr, [r0, #0x2e]
	smull   r1, r12, r2, r3
	add     r12, r3, r12
	mov     r12, r12, asr #7
	mov     r1, r3, lsr #31
	add     r12, r1, r12
	mov     r1, r12, lsl #16
	mov     r1, r1, lsr #16
	bic     r2, lr, #62, 28 @ #0x3e0
	and     r1, r1, #0x1f
	orr     r1, r2, r1, lsl #5
	strh    r1, [r0, #0x2e]
	add     sp, sp, #0x4
	ldmfd   sp!, {lr}
	bx      lr
@ 0x20a1a44

.word 0x80808081 @ 0x20a1a44
.arm
Function_20a1a48: @ 20a1a48 :arm
	stmfd   sp!, {lr}
	sub     sp, sp, #0x4
	ldr     r3, [r1, #0x14]
	sub     r1, r2, #0xff
	ldrsh   lr, [r3, #0x4]
	ldr     r2, [pc, #0x2c] @ [0x20a1a90] (=0x80808081)
	sub     r3, lr, #1, 20 @ #0x1000
	mul     r12, r3, r1
	smull   r1, r3, r2, r12
	add     r3, r12, r3
	mov     r3, r3, asr #7
	mov     r1, r12, lsr #31
	add     r3, r1, r3
	add     r1, lr, r3
	strh    r1, [r0, #0x34]
	add     sp, sp, #0x4
	ldmfd   sp!, {lr}
	bx      lr
@ 0x20a1a90

.word 0x80808081 @ 0x20a1a90
.arm
Function_20a1a94: @ 20a1a94 :arm
	stmfd   sp!, {r4,r5,lr}
	sub     sp, sp, #0x4
	ldr     r5, [r1, #0x10]
	mov     r4, #0x0
	ldrb    r3, [r5, #0x8]
	cmp     r3, #0x0
	addle   sp, sp, #0x4
	ldmlefd sp!, {r4,r5,lr}
	bxle    lr
	ldrb    r12, [r5, #0x9]
	mov     lr, r4
.arm
branch_20a1ac0: @ 20a1ac0 :arm
	add     r1, lr, r12
	cmp     r2, r1
	ldrltb  r1, [r5, r4]
	addlt   sp, sp, #0x4
	strltb  r1, [r0, #0x2c]
	ldmltfd sp!, {r4,r5,lr}
	bxlt    lr
	add     r4, r4, #0x1
	cmp     r4, r3
	add     lr, lr, r12
	blt     branch_20a1ac0
	add     sp, sp, #0x4
	ldmfd   sp!, {r4,r5,lr}
	bx      lr
@ 0x20a1af8

.arm
Function_20a1af8: @ 20a1af8 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r4, [r1, #0xc]
	mov     r5, r0
	ldrb    r1, [r4, #0x4]
	ldrb    r3, [r4, #0x5]
	cmp     r2, r1
	bge     branch_20a1b38
	ldrh    r3, [r4]
	mov     r0, r3, lsl #22
	mov     r6, r3, lsl #27
	mov     r0, r0, lsr #27
	sub     r0, r0, r6, lsr #27
	mul     r0, r2, r0
	bl      _s32_div_f
	add     r0, r0, r6, lsr #27
	b       branch_20a1b74
@ 0x20a1b38

.arm
branch_20a1b38: @ 20a1b38 :arm
	cmp     r2, r3
	ldrlth  r0, [r4]
	movlt   r0, r0, lsl #22
	movlt   r0, r0, lsr #27
	blt     branch_20a1b74
	ldrh    r0, [r4]
	sub     r2, r2, #0xff
	rsb     r1, r3, #0xff
	mov     r6, r0, lsl #17
	mov     r3, r6, lsr #27
	mov     r0, r0, lsl #22
	sub     r0, r3, r0, lsr #27
	mul     r0, r2, r0
	bl      _s32_div_f
	add     r0, r0, r6, lsr #27
.arm
branch_20a1b74: @ 20a1b74 :arm
	ldr     r3, [pc, #0x4c] @ [0x20a1bc8] (=RAM_21c3a38)
	ldr     r1, [pc, #0x4c] @ [0x20a1bcc] (=0x5eedf715)
	ldr     r12, [r3]
	ldr     r2, [pc, #0x48] @ [0x20a1bd0] (=0x1b0cb173)
	mla     r1, r12, r1, r2
	str     r1, [r3]
	ldrb    r2, [r4, #0x2]
	mov     r1, r1, lsr #24
	ldrh    r3, [r5, #0x2e]
	mul     r1, r2, r1
	mov     r1, r1, asr #8
	rsb     r1, r1, #0xff
	mul     r1, r0, r1
	mov     r0, r1, lsl #8
	mov     r0, r0, lsr #16
	bic     r1, r3, #62, 28 @ #0x3e0
	and     r0, r0, #0x1f
	orr     r0, r1, r0, lsl #5
	strh    r0, [r5, #0x2e]
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x20a1bc8

.word RAM_21c3a38 @ 0x20a1bc8
.word 0x5eedf715 @ 0x20a1bcc
.word 0x1b0cb173 @ 0x20a1bd0
.arm
Function_20a1bd4: @ 20a1bd4 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x4
	ldr     r4, [r1, #0x8]
	mov     r10, r0
	ldrb    r3, [r4, #0x4]
	ldr     r0, [r1]
	ldrb    r1, [r4, #0x5]
	cmp     r2, r3
	ldrb    r11, [r4, #0x6]
	ldrlth  r0, [r4]
	addlt   sp, sp, #0x4
	strlth  r0, [r10, #0x36]
	ldmltfd sp!, {r4-r11,lr}
	bxlt    lr
	cmp     r2, r1
	bge     branch_20a1ccc
	ldrh    r9, [r0, #0x22]
	ldrh    r0, [r4, #0x8]
	ldrh    r8, [r4]
	mov     r7, r9, asr #5
	mov     r11, r9, asr #10
	mov     r4, r0, lsl #29
	mov     r6, r8, asr #5
	mov     r5, r8, asr #10
	movs    r4, r4, lsr #31
	and     r9, r9, #0x1f
	and     r7, r7, #0x1f
	and     r0, r11, #0x1f
	orreq   r1, r9, r7, lsl #5
	orreq   r0, r1, r0, lsl #10
	and     r8, r8, #0x1f
	and     r6, r6, #0x1f
	and     r5, r5, #0x1f
	addeq   sp, sp, #0x4
	streqh  r0, [r10, #0x36]
	ldmeqfd sp!, {r4-r11,lr}
	bxeq    lr
	sub     r4, r2, r3
	sub     r0, r0, r5
	mul     r0, r4, r0
	sub     r11, r1, r3
	mov     r1, r11
	bl      _s32_div_f
	sub     r1, r9, r8
	mov     r9, r0
	mul     r0, r4, r1
	mov     r1, r11
	bl      _s32_div_f
	sub     r1, r7, r6
	mov     r7, r0
	mul     r0, r4, r1
	mov     r1, r11
	bl      _s32_div_f
	add     r1, r8, r7
	add     r0, r6, r0
	add     r2, r5, r9
	orr     r0, r1, r0, lsl #5
	orr     r0, r0, r2, lsl #10
	add     sp, sp, #0x4
	strh    r0, [r10, #0x36]
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x20a1ccc

.arm
branch_20a1ccc: @ 20a1ccc :arm
	cmp     r2, r11
	bge     branch_20a1d8c
	ldrh    r7, [r4, #0x2]
	ldrh    r8, [r0, #0x22]
	ldrh    r0, [r4, #0x8]
	mov     r5, r7, asr #5
	mov     r4, r7, asr #10
	mov     r3, r0, lsl #29
	mov     r6, r8, asr #5
	mov     r9, r8, asr #10
	movs    r3, r3, lsr #31
	and     r7, r7, #0x1f
	and     r5, r5, #0x1f
	and     r0, r4, #0x1f
	orreq   r1, r7, r5, lsl #5
	orreq   r0, r1, r0, lsl #10
	and     r8, r8, #0x1f
	and     r6, r6, #0x1f
	and     r9, r9, #0x1f
	addeq   sp, sp, #0x4
	streqh  r0, [r10, #0x36]
	ldmeqfd sp!, {r4-r11,lr}
	bxeq    lr
	sub     r4, r2, r1
	sub     r0, r0, r9
	mul     r0, r4, r0
	sub     r11, r11, r1
	mov     r1, r11
	bl      _s32_div_f
	sub     r1, r7, r8
	mov     r7, r0
	mul     r0, r4, r1
	mov     r1, r11
	bl      _s32_div_f
	sub     r1, r5, r6
	mov     r5, r0
	mul     r0, r4, r1
	mov     r1, r11
	bl      _s32_div_f
	add     r1, r8, r5
	add     r0, r6, r0
	add     r2, r9, r7
	orr     r0, r1, r0, lsl #5
	orr     r0, r0, r2, lsl #10
	add     sp, sp, #0x4
	strh    r0, [r10, #0x36]
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x20a1d8c

.arm
branch_20a1d8c: @ 20a1d8c :arm
	ldrh    r0, [r4, #0x2]
	strh    r0, [r10, #0x36]
	add     sp, sp, #0x4
	ldmfd   sp!, {r4-r11,lr}
	bx      lr
@ 0x20a1da0

.arm
Function_20a1da0: @ 20a1da0 :arm
	stmfd   sp!, {r4,r5,lr}
	sub     sp, sp, #0x4
	ldr     r12, [r1, #0x4]
	mov     r4, r0
	ldrb    r1, [r12, #0x6]
	ldrb    r3, [r12, #0x7]
	cmp     r2, r1
	bge     branch_20a1de8
	ldrsh   r5, [r12]
	ldrsh   r0, [r12, #0x2]
	sub     r0, r0, r5
	mul     r0, r2, r0
	bl      _s32_div_f
	add     r0, r5, r0
	add     sp, sp, #0x4
	strh    r0, [r4, #0x34]
	ldmfd   sp!, {r4,r5,lr}
	bx      lr
@ 0x20a1de8

.arm
branch_20a1de8: @ 20a1de8 :arm
	cmp     r2, r3
	ldrltsh r0, [r12, #0x2]
	addlt   sp, sp, #0x4
	strlth  r0, [r4, #0x34]
	ldmltfd sp!, {r4,r5,lr}
	bxlt    lr
	ldrsh   r5, [r12, #0x4]
	ldrsh   r0, [r12, #0x2]
	sub     r2, r2, #0xff
	rsb     r1, r3, #0xff
	sub     r0, r5, r0
	mul     r0, r2, r0
	bl      _s32_div_f
	add     r0, r5, r0
	strh    r0, [r4, #0x34]
	add     sp, sp, #0x4
	ldmfd   sp!, {r4,r5,lr}
	bx      lr
@ 0x20a1e30


.arm
Function_20a1e30: @ 20a1e30 :arm
	stmfd   sp!, {r4,lr}
	ldr     lr, [r1, #0x8]
	ldr     r2, [r0]
	ldrsh   r4, [r0, #0xc]
	sub     r3, r2, lr
	mov     r2, #2, 22 @ #0x800
	smull   r12, r3, r4, r3
	adds    r4, r12, r2
	adc     r3, r3, #0x0
	mov     r4, r4, lsr #12
	orr     r4, r4, r3, lsl #20
	add     r3, lr, r4
	str     r3, [r1, #0x8]
	ldr     r4, [r1, #0xc]
	ldr     r3, [r0, #0x4]
	ldrsh   r12, [r0, #0xc]
	sub     r3, r3, r4
	smull   lr, r3, r12, r3
	adds    r12, lr, r2
	adc     r3, r3, #0x0
	mov     r12, r12, lsr #12
	orr     r12, r12, r3, lsl #20
	add     r3, r4, r12
	str     r3, [r1, #0xc]
	ldr     lr, [r1, #0x10]
	ldr     r3, [r0, #0x8]
	ldrsh   r12, [r0, #0xc]
	sub     r0, r3, lr
	smull   r3, r0, r12, r0
	adds    r2, r3, r2
	adc     r0, r0, #0x0
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
	add     r0, lr, r2
	str     r0, [r1, #0x10]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x20a1ec4


.arm
Function_20a1ec4: @ 20a1ec4 :arm
	ldr     r3, [r3, #0x74]
	ldr     r2, [r0]
	cmp     r3, #2, 2 @ #0x80000000
	movne   r2, r3
	ldrh    r3, [r0, #0x6]
	mov     r3, r3, lsl #30
	movs    r3, r3, lsr #30
	beq     branch_20a1ef0
	cmp     r3, #0x1
	beq     branch_20a1f44
	bx      lr

branch_20a1ef0: @ 20a1ef0 :arm
	ldr     r3, [r1, #0x3c]
	cmp     r3, r2
	bge     branch_20a1f1c
	ldr     r0, [r1, #0xc]
	add     r0, r3, r0
	cmp     r0, r2
	subgt   r0, r2, r3
	strgt   r0, [r1, #0xc]
	ldrgth  r0, [r1, #0x24]
	strgth  r0, [r1, #0x26]
	bxgt    lr
branch_20a1f1c: @ 20a1f1c :arm
	cmp     r3, r2
	bxlt    lr
	ldr     r0, [r1, #0xc]
	add     r0, r3, r0
	cmp     r0, r2
	sublt   r0, r2, r3
	strlt   r0, [r1, #0xc]
	ldrlth  r0, [r1, #0x24]
	strlth  r0, [r1, #0x26]
	bx      lr

branch_20a1f44: @ 20a1f44 :arm
	ldr     r12, [r1, #0x3c]
	cmp     r12, r2
	bge     branch_20a1f94
	ldr     r3, [r1, #0xc]
	add     r3, r12, r3
	cmp     r3, r2
	ble     branch_20a1f94
	sub     r2, r2, r12
	str     r2, [r1, #0xc]
	ldrsh   r2, [r0, #0x4]
	ldr     r3, [r1, #0x18]
	mov     r0, #2, 22 @ #0x800
	smull   r12, r2, r3, r2
	adds    r3, r12, r0
	adc     r0, r2, #0x0
	mov     r2, r3, lsr #12
	orr     r2, r2, r0, lsl #20
	rsb     r0, r2, #0x0
	str     r0, [r1, #0x18]
	bx      lr

branch_20a1f94: @ 20a1f94 :arm
	cmp     r12, r2
	bxlt    lr
	ldr     r3, [r1, #0xc]
	add     r3, r12, r3
	cmp     r3, r2
	bxge    lr
	sub     r2, r2, r12
	str     r2, [r1, #0xc]
	ldrsh   r2, [r0, #0x4]
	ldr     r3, [r1, #0x18]
	mov     r0, #2, 22 @ #0x800
	smull   r12, r2, r3, r2
	adds    r3, r12, r0
	adc     r0, r2, #0x0
	mov     r2, r3, lsr #12
	orr     r2, r2, r0, lsl #20
	rsb     r0, r2, #0x0
	str     r0, [r1, #0x18]
	bx      lr

Function_20a1fe0: @ 20a1fe0 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #0x28
	ldrh    r2, [r0, #0x2]
	mov     r4, r1
	cmp     r2, #0x0
	beq     branch_20a200c
	cmp     r2, #0x1
	beq     branch_20a203c
	cmp     r2, #0x2
	beq     branch_20a206c
	b       branch_20a2098

branch_20a200c: @ 20a200c :arm
	ldrh    r1, [r0]
	ldr     r3, [pc, #0x9c] @ [0x20a20b4] (=Unknown_20f983c)
	add     r0, sp, #0x0
	mov     r1, r1, asr #4
	mov     r2, r1, lsl #1
	add     r1, r2, #0x1
	mov     r12, r2, lsl #1
	mov     r2, r1, lsl #1
	ldrsh   r1, [r3, r12]
	ldrsh   r2, [r3, r2]
	blx     MTX_RotX33_
	b       branch_20a2098

branch_20a203c: @ 20a203c :arm
	ldrh    r1, [r0]
	ldr     r3, [pc, #0x6c] @ [0x20a20b4] (=Unknown_20f983c)
	add     r0, sp, #0x0
	mov     r1, r1, asr #4
	mov     r2, r1, lsl #1
	add     r1, r2, #0x1
	mov     r12, r2, lsl #1
	mov     r2, r1, lsl #1
	ldrsh   r1, [r3, r12]
	ldrsh   r2, [r3, r2]
	blx     MTX_RotY33_
	b       branch_20a2098

branch_20a206c: @ 20a206c :arm
	ldrh    r1, [r0]
	ldr     r3, [pc, #0x3c] @ [0x20a20b4] (=Unknown_20f983c)
	add     r0, sp, #0x0
	mov     r1, r1, asr #4
	mov     r2, r1, lsl #1
	add     r1, r2, #0x1
	mov     r12, r2, lsl #1
	mov     r2, r1, lsl #1
	ldrsh   r1, [r3, r12]
	ldrsh   r2, [r3, r2]
	blx     MTX_RotZ33_
branch_20a2098: @ 20a2098 :arm
	add     r0, r4, #0x8
	add     r1, sp, #0x0
	mov     r2, r0
	bl      MTX_MultVec33
	add     sp, sp, #0x28
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x20a20b4

.word Unknown_20f983c @ 0x20a20b4



.arm
Function_20a20b8: @ 20a20b8 :arm
	stmfd   sp!, {r4,lr}
	ldr     r12, [r0]
	ldr     r4, [r1, #0x8]
	ldrsh   lr, [r0, #0xc]
	ldr     r3, [r1, #0x14]
	sub     r4, r12, r4
	sub     r3, r4, r3
	mul     r3, lr, r3
	ldr     r4, [r2]
	add     r3, r4, r3, asr #12
	str     r3, [r2]
	ldr     lr, [r0, #0x4]
	ldr     r12, [r1, #0xc]
	ldrsh   r4, [r0, #0xc]
	ldr     r3, [r1, #0x18]
	sub     r12, lr, r12
	sub     r3, r12, r3
	mul     r3, r4, r3
	ldr     r4, [r2, #0x4]
	add     r3, r4, r3, asr #12
	str     r3, [r2, #0x4]
	ldr     r12, [r0, #0x8]
	ldr     r3, [r1, #0x10]
	ldrsh   lr, [r0, #0xc]
	ldr     r0, [r1, #0x1c]
	sub     r1, r12, r3
	sub     r0, r1, r0
	mul     r0, lr, r0
	ldr     r1, [r2, #0x8]
	add     r0, r1, r0, asr #12
	str     r0, [r2, #0x8]
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x20a213c


.arm
Function_20a213c: @ 20a213c :arm
	stmfd   sp!, {r4,r5,lr}
	sub     sp, sp, #0x4
	mov     r5, r0
	ldrh    r0, [r1, #0x26]
	ldrh    r1, [r5, #0x6]
	mov     r4, r2
	bl      _s32_div_f
	cmp     r1, #0x0
	addne   sp, sp, #0x4
	ldmnefd sp!, {r4,r5,lr}
	bxne    lr
	ldr     r2, [pc, #0x88] @ [0x20a21f8] (=RAM_21c3a38)
	ldr     r0, [pc, #0x88] @ [0x20a21fc] (=0x5eedf715)
	ldr     r3, [r2]
	ldr     r1, [pc, #0x84] @ [0x20a2200] (=0x1b0cb173)
	mla     r12, r3, r0, r1
	str     r12, [r2]
	ldrsh   lr, [r5]
	mov     r3, r12, lsr #23
	ldr     r12, [r4]
	mul     r3, lr, r3
	sub     r3, r3, lr, lsl #8
	add     r3, r12, r3, asr #8
	str     r3, [r4]
	ldr     r3, [r2]
	mla     r12, r3, r0, r1
	str     r12, [r2]
	ldrsh   lr, [r5, #0x2]
	mov     r3, r12, lsr #23
	ldr     r12, [r4, #0x4]
	mul     r3, lr, r3
	sub     r3, r3, lr, lsl #8
	add     r3, r12, r3, asr #8
	str     r3, [r4, #0x4]
	ldr     r3, [r2]
	mla     r0, r3, r0, r1
	str     r0, [r2]
	ldrsh   r2, [r5, #0x4]
	mov     r0, r0, lsr #23
	ldr     r1, [r4, #0x8]
	mul     r0, r2, r0
	sub     r0, r0, r2, lsl #8
	add     r0, r1, r0, asr #8
	str     r0, [r4, #0x8]
	add     sp, sp, #0x4
	ldmfd   sp!, {r4,r5,lr}
	bx      lr
@ 0x20a21f8

.word RAM_21c3a38 @ 0x20a21f8
.word 0x5eedf715 @ 0x20a21fc
.word 0x1b0cb173 @ 0x20a2200



.arm
Function_20a2204: @ 20a2204 :arm
	ldrsh   r1, [r0]
	ldr     r3, [r2]
	add     r1, r3, r1
	str     r1, [r2]
	ldrsh   r1, [r0, #0x2]
	ldr     r3, [r2, #0x4]
	add     r1, r3, r1
	str     r1, [r2, #0x4]
	ldrsh   r0, [r0, #0x4]
	ldr     r1, [r2, #0x8]
	add     r0, r1, r0
	str     r0, [r2, #0x8]
	bx      lr
@ 0x20a2238


.arm
Function_20a2238: @ 20a2238 :arm
	ldr     r3, [r1]
	cmp     r3, #0x0
	bne     branch_20a2278
	ldr     r2, [r0]
	cmp     r2, r1
	moveq   r2, #0x0
	streq   r2, [r0]
	streq   r2, [r0, #0x8]
	beq     branch_20a22a4
	ldr     r2, [r1, #0x4]
	mov     r3, #0x0
	str     r3, [r2]
	ldr     r2, [r0, #0x8]
	ldr     r2, [r2, #0x4]
	str     r2, [r0, #0x8]
	b       branch_20a22a4
@ 0x20a2278

.arm
branch_20a2278: @ 20a2278 :arm
	ldr     r2, [r0]
	cmp     r2, r1
	streq   r3, [r0]
	ldreq   r2, [r0]
	moveq   r3, #0x0
	streq   r3, [r2, #0x4]
	ldrne   r2, [r1, #0x4]
	strne   r2, [r3, #0x4]
	ldrne   r3, [r1]
	ldrne   r2, [r1, #0x4]
	strne   r3, [r2]
.arm
branch_20a22a4: @ 20a22a4 :arm
	ldr     r2, [r0, #0x4]
	sub     r2, r2, #0x1
	str     r2, [r0, #0x4]
	mov     r0, r1
	bx      lr
@ 0x20a22b8


.arm
Function_20a22b8: @ 20a22b8 :arm
	ldr     r2, [r0]
	mov     r3, #0x0
	mov     r12, r3
	cmp     r2, #0x0
	beq     branch_20a22fc
	ldr     r1, [r2]
	mov     r12, r2
	str     r1, [r0]
	ldr     r1, [r0]
	cmp     r1, #0x0
	ldrne   r1, [r2]
	strne   r3, [r1, #0x4]
	streq   r3, [r0]
	streq   r3, [r0, #0x8]
	ldr     r1, [r0, #0x4]
	sub     r1, r1, #0x1
	str     r1, [r0, #0x4]
.arm
branch_20a22fc: @ 20a22fc :arm
	mov     r0, r12
	bx      lr
@ 0x20a2304

.arm
Function_20a2304: @ 20a2304 :arm
	ldr     r2, [r0]
	cmp     r2, #0x0
	bne     branch_20a232c
	str     r1, [r0]
	str     r1, [r0, #0x8]
	mov     r2, #0x0
	str     r2, [r1]
	ldr     r2, [r1]
	str     r2, [r1, #0x4]
	b       branch_20a2344
@ 0x20a232c

.arm
branch_20a232c: @ 20a232c :arm
	str     r2, [r1]
	mov     r2, #0x0
	str     r2, [r1, #0x4]
	ldr     r2, [r0]
	str     r1, [r2, #0x4]
	str     r1, [r0]
branch_20a2344: @ 20a2344 :arm
	ldr     r1, [r0, #0x4]
	add     r1, r1, #0x1
	str     r1, [r0, #0x4]
	bx      lr
@ 0x20a2354


.arm
Function_20a2354: @ 20a2354 :arm
	stmfd   sp!, {r4,lr}
	ldr     r12, [pc, #0x44] @ [0x20a23a4] (=RAM_21c3a38)
	ldr     r2, [pc, #0x44] @ [0x20a23a8] (=0x5eedf715)
	ldr     r4, [r12]
	ldr     r3, [pc, #0x40] @ [0x20a23ac] (=0x1b0cb173)
	mov     r1, r0
	mla     lr, r4, r2, r3
	str     lr, [r12]
	mov     r4, lr, asr #8
	str     r4, [r0]
	ldr     r4, [r12]
	mov     lr, #0x0
	mla     r2, r4, r2, r3
	str     r2, [r12]
	mov     r2, r2, asr #8
	str     r2, [r0, #0x4]
	str     lr, [r0, #0x8]
	bl      VEC_Normalize
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x20a23a4

.word RAM_21c3a38 @ 0x20a23a4
.word 0x5eedf715 @ 0x20a23a8
.word 0x1b0cb173 @ 0x20a23ac



.arm
Function_20a23b0: @ 20a23b0 :arm
	stmfd   sp!, {r4,lr}
	ldr     r12, [pc, #0x50] @ [0x20a240c] (=RAM_21c3a38)
	ldr     r2, [pc, #0x50] @ [0x20a2410] (=0x5eedf715)
	ldr     r4, [r12]
	ldr     r3, [pc, #0x4c] @ [0x20a2414] (=0x1b0cb173)
	mov     r1, r0
	mla     lr, r4, r2, r3
	str     lr, [r12]
	mov     r4, lr, asr #8
	str     r4, [r0]
	ldr     lr, [r12]
	mla     r4, lr, r2, r3
	str     r4, [r12]
	mov     lr, r4, asr #8
	str     lr, [r0, #0x4]
	ldr     lr, [r12]
	mla     r2, lr, r2, r3
	str     r2, [r12]
	mov     r2, r2, asr #8
	str     r2, [r0, #0x8]
	bl      VEC_Normalize
	ldmfd   sp!, {r4,lr}
	bx      lr
@ 0x20a240c

.word RAM_21c3a38 @ 0x20a240c
.word 0x5eedf715 @ 0x20a2410
.word 0x1b0cb173 @ 0x20a2414



.arm
Function_20a2418: @ 20a2418 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r7, r0
	mov     r6, r1
	mov     r5, r2
	bl      Function_20c6350
	mov     r0, #0xf
	mov     r1, #0x1
	bl      PXI_IsCallbackReady
	cmp     r0, #0x0
	moveq   r0, #0x2
	ldmeqfd sp!, {r4-r8,pc}
	ldr     r8, [pc, #0x1f4] @ [0x20a2640] (=RAM_21c3a3c)
	ldrh    r0, [r8]
	cmp     r0, #0x0
	bne     branch_20a2478
	mvn     r4, #0x2
branch_20a2458: @ 20a2458 :arm
	bl      OS_GetLockID
	cmp     r0, r4
	moveq   r0, #0x7
	ldmeqfd sp!, {r4-r8,pc}
	strh    r0, [r8]
	ldrh    r0, [r8]
	cmp     r0, #0x0
	beq     branch_20a2458
branch_20a2478: @ 20a2478 :arm
	bl      OS_DisableInterrupts
	ldr     r1, [pc, #0x1bc] @ [0x20a2640] (=RAM_21c3a3c)
	mov     r4, r0
	ldr     r2, [r1, #0x8]
	cmp     r2, #0x0
	beq     branch_20a249c
	bl      OS_RestoreInterrupts
	mov     r0, #0x5
	ldmfd   sp!, {r4-r8,pc}

branch_20a249c: @ 20a249c :arm
	ldrh    r2, [r1, #0x2]
	cmp     r2, #0x0
	beq     branch_20a24b4
	bl      OS_RestoreInterrupts
	mov     r0, #0x5
	ldmfd   sp!, {r4-r8,pc}

branch_20a24b4: @ 20a24b4 :arm
	cmp     r7, #0x4
	beq     branch_20a24d0
	cmp     r7, #0x8
	beq     branch_20a2510
	cmp     r7, #0xc
	beq     branch_20a2550
	b       branch_20a2598

branch_20a24d0: @ 20a24d0 :arm
	ldrh    r1, [r1]
	mov     r0, #0x4
	bl      OSi_TryLockVram
	cmp     r0, #0x0
	bne     branch_20a24f4
	mov     r0, r4
	bl      OS_RestoreInterrupts
	mov     r0, #0x6
	ldmfd   sp!, {r4-r8,pc}

branch_20a24f4: @ 20a24f4 :arm
	ldr     r0, [pc, #0x144] @ [0x20a2640] (=RAM_21c3a3c)
	mov     r2, #0x4
	ldr     r1, [pc, #0x140] @ [0x20a2644] (=VRAM_C_CR)
	strh    r2, [r0, #0x2]
	mov     r0, #0x82
	strb    r0, [r1]
	b       branch_20a25a4

branch_20a2510: @ 20a2510 :arm
	ldrh    r1, [r1]
	mov     r0, #0x8
	bl      OSi_TryLockVram
	cmp     r0, #0x0
	bne     branch_20a2534
	mov     r0, r4
	bl      OS_RestoreInterrupts
	mov     r0, #0x6
	ldmfd   sp!, {r4-r8,pc}

branch_20a2534: @ 20a2534 :arm
	ldr     r0, [pc, #0x104] @ [0x20a2640] (=RAM_21c3a3c)
	mov     r2, #0x8
	ldr     r1, [pc, #0x104] @ [0x20a2648] (=VRAM_D_CR)
	strh    r2, [r0, #0x2]
	mov     r0, #0x82
	strb    r0, [r1]
	b       branch_20a25a4

branch_20a2550: @ 20a2550 :arm
	ldrh    r1, [r1]
	mov     r0, #0xc
	bl      OSi_TryLockVram
	cmp     r0, #0x0
	bne     branch_20a2574
	mov     r0, r4
	bl      OS_RestoreInterrupts
	mov     r0, #0x6
	ldmfd   sp!, {r4-r8,pc}

branch_20a2574: @ 20a2574 :arm
	ldr     r0, [pc, #0xc4] @ [0x20a2640] (=RAM_21c3a3c)
	mov     r2, #0xc
	ldr     r1, [pc, #0xc0] @ [0x20a2644] (=VRAM_C_CR)
	strh    r2, [r0, #0x2]
	mov     r0, #0x82
	strb    r0, [r1]
	mov     r0, #0x8a
	strb    r0, [r1, #0x1]
	b       branch_20a25a4

branch_20a2598: @ 20a2598 :arm
	bl      OS_RestoreInterrupts
	mov     r0, #0x3
	ldmfd   sp!, {r4-r8,pc}

branch_20a25a4: @ 20a25a4 :arm
	mov     r0, #0xf
	mov     r1, #0x0
	bl      PXI_IsCallbackReady
	cmp     r0, #0x0
	bne     branch_20a25c4
	ldr     r1, [pc, #0x8c] @ [0x20a264c] (=Function_20a2734)
	mov     r0, #0xf
	bl      PXI_SetFifoRecvCallback
branch_20a25c4: @ 20a25c4 :arm
	cmp     r6, #0x0
	ldrne   r0, [pc, #0x70] @ [0x20a2640] (=RAM_21c3a3c)
	strne   r6, [r0, #0x8]
	bne     branch_20a25e0
	ldr     r1, [pc, #0x74] @ [0x20a2650] (=Function_20a280c)
	ldr     r0, [pc, #0x60] @ [0x20a2640] (=RAM_21c3a3c)
	str     r1, [r0, #0x8]
branch_20a25e0: @ 20a25e0 :arm
	ldr     r3, [pc, #0x58] @ [0x20a2640] (=RAM_21c3a3c)
	mov     r0, #0xf
	mov     r1, #1, 16 @ #0x10000
	mov     r2, #0x0
	str     r5, [r3, #0x4]
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	bge     branch_20a2630
	ldr     r1, [pc, #0x38] @ [0x20a2640] (=RAM_21c3a3c)
	ldrh    r0, [r1, #0x2]
	ldrh    r1, [r1]
	bl      OSi_UnlockVram
	ldr     r1, [pc, #0x28] @ [0x20a2640] (=RAM_21c3a3c)
	mov     r2, #0x0
	strh    r2, [r1, #0x2]
	mov     r0, r4
	str     r2, [r1, #0x8]
	bl      OS_RestoreInterrupts
	mov     r0, #0x4
	ldmfd   sp!, {r4-r8,pc}

branch_20a2630: @ 20a2630 :arm
	mov     r0, r4
	bl      OS_RestoreInterrupts
	mov     r0, #0x1
	ldmfd   sp!, {r4-r8,pc}
@ 0x20a2640

.word RAM_21c3a3c @ 0x20a2640
.word VRAM_C_CR @ 0x20a2644
.word VRAM_D_CR @ 0x20a2648
.word Function_20a2734 @ 0x20a264c
.word Function_20a280c @ 0x20a2650



.arm
Function_20a2654: @ 20a2654 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	bl      Function_20c6350
	mov     r0, #0xf
	mov     r1, #0x1
	bl      PXI_IsCallbackReady
	cmp     r0, #0x0
	moveq   r0, #0x2
	ldmeqfd sp!, {r4-r6,pc}
	bl      OS_DisableInterrupts
	ldr     r1, [pc, #0xa0] @ [0x20a2728] (=RAM_21c3a3c)
	mov     r4, r0
	ldr     r1, [r1, #0x8]
	cmp     r1, #0x0
	beq     branch_20a26a0
	bl      OS_RestoreInterrupts
	mov     r0, #0x5
	ldmfd   sp!, {r4-r6,pc}

branch_20a26a0: @ 20a26a0 :arm
	mov     r0, #0xf
	mov     r1, #0x0
	bl      PXI_IsCallbackReady
	cmp     r0, #0x0
	bne     branch_20a26c0
	ldr     r1, [pc, #0x70] @ [0x20a272c] (=Function_20a2734)
	mov     r0, #0xf
	bl      PXI_SetFifoRecvCallback
branch_20a26c0: @ 20a26c0 :arm
	cmp     r6, #0x0
	ldrne   r0, [pc, #0x5c] @ [0x20a2728] (=RAM_21c3a3c)
	strne   r6, [r0, #0x8]
	bne     branch_20a26dc
	ldr     r1, [pc, #0x58] @ [0x20a2730] (=Function_20a280c)
	ldr     r0, [pc, #0x4c] @ [0x20a2728] (=RAM_21c3a3c)
	str     r1, [r0, #0x8]
branch_20a26dc: @ 20a26dc :arm
	ldr     r3, [pc, #0x44] @ [0x20a2728] (=RAM_21c3a3c)
	mov     r0, #0xf
	mov     r1, #2, 16 @ #0x20000
	mov     r2, #0x0
	str     r5, [r3, #0x4]
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	bge     branch_20a2718
	ldr     r1, [pc, #0x24] @ [0x20a2728] (=RAM_21c3a3c)
	mov     r2, #0x0
	mov     r0, r4
	str     r2, [r1, #0x8]
	bl      OS_RestoreInterrupts
	mov     r0, #0x4
	ldmfd   sp!, {r4-r6,pc}

branch_20a2718: @ 20a2718 :arm
	mov     r0, r4
	bl      OS_RestoreInterrupts
	mov     r0, #0x1
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a2728

.word RAM_21c3a3c @ 0x20a2728
.word Function_20a2734 @ 0x20a272c
.word Function_20a280c @ 0x20a2730



.arm
Function_20a2734: @ 20a2734 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r0, #1, 16 @ #0x10000
	ldr     r2, [pc, #0xc4] @ [0x20a2808] (=RAM_21c3a3c)
	rsb     r0, r0, #0x0
	and     r0, r1, r0
	cmp     r0, #1, 16 @ #0x10000
	and     r6, r1, #0xff
	ldr     r4, [r2, #0x8]
	ldr     r5, [r2, #0x4]
	beq     branch_20a2768
	cmp     r0, #2, 16 @ #0x20000
	beq     branch_20a27a0
	b       branch_20a27e0

branch_20a2768: @ 20a2768 :arm
	cmp     r6, #0x7
	bne     branch_20a27e0
	ldrh    r0, [r2, #0x2]
	cmp     r0, #0x0
	ldrneh  r0, [r2]
	cmpne   r0, #0x0
	beq     branch_20a27e0
	ldrh    r0, [r2, #0x2]
	ldrh    r1, [r2]
	bl      OSi_UnlockVram
	ldr     r0, [pc, #0x70] @ [0x20a2808] (=RAM_21c3a3c)
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	b       branch_20a27e0

branch_20a27a0: @ 20a27a0 :arm
	cmp     r6, #0x0
	bne     branch_20a27d4
	ldrh    r0, [r2, #0x2]
	cmp     r0, #0x0
	ldrneh  r0, [r2]
	cmpne   r0, #0x0
	beq     branch_20a27d4
	ldrh    r0, [r2, #0x2]
	ldrh    r1, [r2]
	bl      OSi_UnlockVram
	ldr     r0, [pc, #0x38] @ [0x20a2808] (=RAM_21c3a3c)
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
branch_20a27d4: @ 20a27d4 :arm
	mov     r0, #0xf
	mov     r1, #0x0
	bl      PXI_SetFifoRecvCallback
branch_20a27e0: @ 20a27e0 :arm
	cmp     r4, #0x0
	ldmeqfd sp!, {r4-r6,pc}
	ldr     r2, [pc, #0x18] @ [0x20a2808] (=RAM_21c3a3c)
	mov     r3, #0x0
	str     r3, [r2, #0x8]
	mov     r0, r5
	mov     r1, r6
	str     r3, [r2, #0x4]
	blx     r4
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a2808

.word RAM_21c3a3c @ 0x20a2808



.arm
Function_20a280c: @ 20a280c :arm
	bx      lr
@ 0x20a2810


.arm
.globl Function_20a2810
Function_20a2810: @ 20a2810 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x1c] @ [0x20a2838] (=RAM_21c3a48)
	mov     r2, r0
	ldr     r0, [r1, #0x8]
	mov     r1, #3, 24 @ #0x300
	bl      Function_20a3144
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20a2838

.word RAM_21c3a48 @ 0x20a2838


.arm
.globl Function_20a283c
Function_20a283c: @ 20a283c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r0, [pc, #0xb0] @ [0x20a28fc] (=RAM_21c3a54)
	mov     r1, r4
	mov     r2, #0x6
	bl      MI_CpuCopy8
	ldr     r1, [pc, #0xa4] @ [0x20a2900] (=0x7ff)
	ldr     r3, [r4]
	sub     r0, r1, #2, 22 @ #0x800
	ldr     r2, [r4, #0x4]
	and     r0, r3, r0
	str     r0, [r4]
	and     r1, r2, r1
	str     r1, [r4, #0x4]
	ldr     r0, [pc, #0x88] @ [0x20a2904] (=RAM_21c3a59)
	add     r1, r4, #0x8
	mov     r2, #0x6
	bl      MI_CpuCopy8
	ldr     r1, [r4, #0x8]
	ldr     r0, [r4, #0xc]
	mov     r1, r1, lsr #3
	orr     r1, r1, r0, lsl #29
	str     r1, [r4, #0x8]
	mov     r3, r0, lsr #3
	str     r3, [r4, #0xc]
	ldr     r1, [pc, #0x58] @ [0x20a2900] (=0x7ff)
	ldr     r2, [r4, #0x8]
	sub     r0, r1, #2, 22 @ #0x800
	and     r0, r2, r0
	str     r0, [r4, #0x8]
	and     r1, r1, r3
	str     r1, [r4, #0xc]
	ldr     r0, [pc, #0x44] @ [0x20a2908] (=RAM_21c3a5e)
	add     r1, r4, #0x10
	mov     r2, #0x2
	bl      MI_CpuCopy8
	ldrh    r1, [r4, #0x10]
	ldr     r3, [pc, #0x34] @ [0x20a290c] (=0x3ff)
	ldr     r0, [pc, #0x34] @ [0x20a2910] (=RAM_21c3a60)
	mov     r1, r1, asr #6
	strh    r1, [r4, #0x10]
	ldrh    r12, [r4, #0x10]
	add     r1, r4, #0x12
	mov     r2, #0x2
	and     r3, r12, r3
	strh    r3, [r4, #0x10]
	bl      MI_CpuCopy8
	ldmfd   sp!, {r4,pc}
@ 0x20a28fc

.word RAM_21c3a54 @ 0x20a28fc
.word 0x7ff @ 0x20a2900
.word RAM_21c3a59 @ 0x20a2904
.word RAM_21c3a5e @ 0x20a2908
.word 0x3ff @ 0x20a290c
.word RAM_21c3a60 @ 0x20a2910



.arm
Function_20a2914: @ 20a2914 :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r2, [pc, #0xc4] @ [0x20a29e4] (=RAM_21c3a48)
	mov     r10, r1
	ldr     r9, [r2, #0x8]
	bl      Function_20a3338
	ldr     r1, [pc, #0xb8] @ [0x20a29e8] (=0xa001)
	add     r0, r10, #2, 24 @ #0x200
	bl      Function_20d316c
	mov     r5, #1, 24 @ #0x100
	ldr     r6, [pc, #0xac] @ [0x20a29ec] (=RAM_21c3a54)
	mov     r8, #0x0
	mov     r4, r5
	mov     r11, #0xe
	mov     r7, r5
branch_20a294c: @ 20a294c :arm
	mov     r0, r9
	mov     r1, r7
	mov     r2, r10
	bl      Function_20a3144
	cmp     r0, #0x0
	bne     branch_20a2970
	bl      OS_Panic
	mov     r0, #0x0
	ldmfd   sp!, {r3-r11,pc}

branch_20a2970: @ 20a2970 :arm
	mov     r0, r6
	mov     r2, r11
	add     r1, r10, #0xf0
	bl      MI_CpuCopy8
	mov     r1, r10
	mov     r2, #0xfe
	add     r0, r10, #2, 24 @ #0x200
	bl      Function_20d32d4
	strh    r0, [r10, #0xfe]
branch_20a2994: @ 20a2994 :arm
	mov     r0, r9
	mov     r1, r5
	mov     r2, r10
	bl      Function_20a31d4
	mov     r0, r10
	mov     r1, r9
	mov     r2, r4
	add     r3, r10, #1, 24 @ #0x100
	bl      Function_20a3250
	cmp     r0, #0x0
	beq     branch_20a2994
	add     r8, r8, #0x1
	cmp     r8, #0x2
	add     r9, r9, #1, 24 @ #0x100
	blt     branch_20a294c
	bl      Function_20a329c
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	ldmfd   sp!, {r3-r11,pc}
@ 0x20a29e4

.word RAM_21c3a48 @ 0x20a29e4
.word 0xa001 @ 0x20a29e8
.word RAM_21c3a54 @ 0x20a29ec



.arm
Function_20a29f0: @ 20a29f0 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #0x20
	mov     r1, r0
	mov     r2, r4
	bl      Function_20a3144
	cmp     r0, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4,pc}
	ldrh    r2, [r4]
	ldr     r1, [pc, #0x10] @ [0x20a2a30] (=RAM_21c3a48)
	mov     r0, #0x1
	mov     r2, r2, lsl #3
	sub     r2, r2, #1, 22 @ #0x400
	str     r2, [r1, #0x8]
	ldmfd   sp!, {r4,pc}
@ 0x20a2a30

.word RAM_21c3a48 @ 0x20a2a30



.arm
.globl Function_20a2a34
Function_20a2a34: @ 20a2a34 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x1c] @ [0x20a2a5c] (=RAM_21c3a48)
	mov     r2, r0
	ldr     r0, [r1, #0x8]
	mov     r1, #1, 22 @ #0x400
	bl      Function_20a3144
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20a2a5c

.word RAM_21c3a48 @ 0x20a2a5c



.arm
.globl Function_20a2a60
Function_20a2a60: @ 20a2a60 :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r3, [pc, #0x78] @ [0x20a2ae4] (=RAM_21c3a48)
	mov     r10, #1, 24 @ #0x100
	ldr     r5, [r3, #0x8]
	mov     r8, r0
	mov     r7, r1
	mov     r6, r2
	mov     r4, #0x0
	mov     r9, r10
branch_20a2a84: @ 20a2a84 :arm
	ldr     r0, [r7, r4, lsl #0x2]
	cmp     r0, #0x0
	beq     branch_20a2abc
branch_20a2a90: @ 20a2a90 :arm
	mov     r0, r5
	mov     r1, r10
	mov     r2, r8
	bl      Function_20a31d4
	mov     r0, r8
	mov     r1, r5
	mov     r2, r9
	mov     r3, r6
	bl      Function_20a3250
	cmp     r0, #0x0
	beq     branch_20a2a90
branch_20a2abc: @ 20a2abc :arm
	add     r4, r4, #0x1
	cmp     r4, #0x4
	add     r8, r8, #1, 24 @ #0x100
	add     r5, r5, #1, 24 @ #0x100
	blt     branch_20a2a84
	bl      Function_20a329c
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	ldmfd   sp!, {r4-r10,pc}
@ 0x20a2ae4

.word RAM_21c3a48 @ 0x20a2ae4



.arm
Function_20a2ae8: @ 20a2ae8 :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r1, [pc, #0x84] @ [0x20a2b78] (=RAM_21c3a48)
	mov     r8, r0
	mov     r10, #1, 24 @ #0x100
	ldr     r6, [r1, #0x8]
	mov     r7, r8
	mov     r5, #0x0
	mov     r9, r10
	mov     r4, #0xfe
branch_20a2b0c: @ 20a2b0c :arm
	mov     r1, r7
	mov     r2, r4
	add     r0, r8, #5, 24 @ #0x500
	bl      Function_20d32d4
	add     r1, r8, r5, lsl #8
	strh    r0, [r1, #0xfe]
branch_20a2b24: @ 20a2b24 :arm
	mov     r0, r6
	mov     r1, r10
	mov     r2, r7
	bl      Function_20a31d4
	mov     r0, r7
	mov     r1, r6
	mov     r2, r9
	add     r3, r8, #1, 22 @ #0x400
	bl      Function_20a3250
	cmp     r0, #0x0
	beq     branch_20a2b24
	add     r5, r5, #0x1
	cmp     r5, #0x4
	add     r7, r7, #1, 24 @ #0x100
	add     r6, r6, #1, 24 @ #0x100
	blt     branch_20a2b0c
	bl      Function_20a329c
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	ldmfd   sp!, {r4-r10,pc}
@ 0x20a2b78

.word RAM_21c3a48 @ 0x20a2b78



.arm
Function_20a2b7c: @ 20a2b7c :arm
	ldr     r12, [pc, #0x8] @ [0x20a2b8c] (=MI_CpuCopy8)
	ldr     r1, [pc, #0x8] @ [0x20a2b90] (=RAM_21c3a54)
	mov     r2, #0xe
	bx      r12
@ 0x20a2b8c

.word MI_CpuCopy8 @ =MI_CpuCopy8, 0x20a2b8c
.word RAM_21c3a54 @ 0x20a2b90



.arm
.globl Function_20a2b94
Function_20a2b94: @ 20a2b94 :arm
	stmfd   sp!, {r4,lr}
	mov     r12, #0x0
	mov     r3, r12
	mov     r2, r12
branch_20a2ba4: @ 20a2ba4 :arm
	ldrb    r4, [r0, r12]
	mov     lr, r2
branch_20a2bac: @ 20a2bac :arm
	mov     r1, r4, asr lr
	tst     r1, #0x1
	add     lr, lr, #0x1
	addne   r3, r3, #0x1
	cmp     lr, #0x8
	blt     branch_20a2bac
	add     r12, r12, #0x1
	cmp     r12, #0x4
	blt     branch_20a2ba4
	and     r0, r3, #0xff
	ldmfd   sp!, {r4,pc}
@ 0x20a2bd8


.arm
.globl Function_20a2bd8
Function_20a2bd8: @ 20a2bd8 :arm
	mvn     r2, #0x0
	mov     r3, #0x0
	eor     r2, r2, r2, lsr r0
	mov     r12, r3
branch_20a2be8: @ 20a2be8 :arm
	rsb     r0, r12, #0x18
	mov     r0, r2, lsr r0
	strb    r0, [r1, r3]
	add     r3, r3, #0x1
	cmp     r3, #0x4
	add     r12, r12, #0x8
	blt     branch_20a2be8
	bx      lr
@ 0x20a2c08


.arm
Function_20a2c08: @ 20a2c08 :arm
	mov     r2, #0x0
branch_20a2c0c: @ 20a2c0c :arm
	ldrb    r1, [r0, r2]
	cmp     r1, #0x0
	movne   r0, #0x1
	bxne    lr
	add     r2, r2, #0x1
	cmp     r2, #0x20
	blt     branch_20a2c0c
	mov     r0, #0x0
	bx      lr
@ 0x20a2c30


.arm
.globl Function_20a2c30
Function_20a2c30: @ 20a2c30 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x8
	mov     r5, r0
	mov     r4, r1
	bl      Function_20a2cac
	cmp     r0, #0x0
	addeq   sp, sp, #0x8
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}

	add     r1, sp, #0x4
	mov     r0, r5
	mov     r2, #0x4
	bl      MI_CpuCopy8
	add     r1, sp, #0x0
	mov     r0, r4
	mov     r2, #0x4
	bl      MI_CpuCopy8
	ldr     r3, [sp]
	ldr     r2, [sp, #0x4]
	mvn     r0, #0x1
	orr     r1, r2, r3
	cmp     r1, r0
	addeq   sp, sp, #0x8
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}

	mvn     r0, r3
	tst     r2, r0
	movne   r0, #0x1
	moveq   r0, #0x0
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a2cac


.arm
.globl Function_20a2cac
Function_20a2cac: @ 20a2cac :arm
	ldrb    r0, [r0]
	cmp     r0, #0x7f
	moveq   r0, #0x0
	bxeq    lr
	cmp     r0, #0x1
	movcc   r0, #0x0
	bxcc    lr
	cmp     r0, #0xdf
	movls   r0, #0x1
	movhi   r0, #0x0
	bx      lr
@ 0x20a2cd8


.arm
Function_20a2cd8: @ 20a2cd8 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x3c
	ldr     r10, [pc, #0x444] @ [0x20a312c] (=RAM_21c3a80)
	mov     r8, r1, lsr #16
	mov     r4, r10, lsl #8
	mov     r9, r4
	and     r4, r4, #255, 24 @ #0xff00
	mov     r1, r1, lsl #16
	orr     r4, r4, #2, 16 @ #0x20000
	mov     r5, r3, lsr #16
	mov     r7, r0
	ldr     r12, [pc, #0x424] @ [0x20a3130] (=0x1020000)
	mov     r1, r1, lsr #16
	str     r4, [sp, #0x30]
	orr     r4, r1, #1, 16 @ #0x10000
	mov     r3, r3, lsl #16
	add     r1, r12, #3, 16 @ #0x30000
	orr     r1, r1, r3, lsr #16
	str     r1, [sp, #0x10]
	mov     r1, r3, lsr #16
	orr     r1, r1, #65, 14 @ #0x1040000
	ldr     r0, [pc, #0x400] @ [0x20a3134] (=0x2002200)
	str     r1, [sp, #0x24]
	orr     r1, r0, r10, lsr #24
	str     r1, [sp, #0x28]
	ldr     r1, [sp, #0x30]
	mov     r9, r9, lsr #16
	orr     r1, r1, #1, 8 @ #0x1000000
	str     r1, [sp, #0x30]
	add     r1, r0, #3, 24 @ #0x300
	and     r8, r8, #0xff
	add     r0, r0, #1, 24 @ #0x100
	orr     r0, r8, r0
	orr     r1, r8, r1
	str     r0, [sp]
	orr     r0, r2, #2, 16 @ #0x20000
	str     r0, [sp, #0x1c]
	orr     r0, r5, #3, 16 @ #0x30000
	str     r0, [sp, #0x20]
	orr     r0, r5, #1, 14 @ #0x40000
	str     r0, [sp, #0xc]
	ldr     r0, [pc, #0x3b4] @ [0x20a3138] (=0x3002100)
	mov     r6, #0x0
	sub     r0, r0, #1, 24 @ #0x100
	str     r0, [sp, #0x14]
	mov     r0, r2, lsr #16
	orr     r0, r0, #2, 16 @ #0x20000
	str     r0, [sp, #0x4]
	mov     r0, r2, lsl #16
	mov     r0, r0, lsr #16
	orr     r9, r9, #1, 16 @ #0x10000
	orr     r0, r0, #3, 16 @ #0x30000
	str     r9, [sp, #0x2c]
	str     r1, [sp, #0x18]
	str     r0, [sp, #0x8]
	mov     r5, r6
	mov     r8, #250, 28 @ #0xfa0
branch_20a2dbc: @ 20a2dbc :arm
	cmp     r6, #0x0
	bne     branch_20a2ffc
	ldr     r0, [pc, #0x370] @ [0x20a313c] (=RAM_21c3a48)
	cmp     r7, #0x7
	str     r5, [r0, #0x4]
	addls   pc, pc, r7, lsl #2
	b       branch_20a2dbc
	b       branch_20a2dbc
	b       branch_20a2df8
	b       branch_20a2ea4
	b       branch_20a2ec4
	b       branch_20a2f60
	b       branch_20a2f60
	b       branch_20a2fb8
	b       branch_20a2fdc

branch_20a2df8: @ 20a2df8 :arm
	ldr     r1, [sp]
	mov     r0, #0x4
	mov     r2, r5
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	blt     branch_20a2dbc
	mov     r0, #0x4
	mov     r1, r4
	mov     r2, #0x0
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	blt     branch_20a2dbc
	ldr     r1, [sp, #0x4]
	mov     r0, #0x4
	mov     r2, #0x0
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	blt     branch_20a2dbc
	ldr     r1, [sp, #0x8]
	mov     r0, #0x4
	mov     r2, #0x0
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	blt     branch_20a2dbc
	ldr     r1, [sp, #0xc]
	mov     r0, #0x4
	mov     r2, #0x0
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	blt     branch_20a2dbc
	ldr     r1, [sp, #0x10]
	mov     r0, #0x4
	mov     r2, #0x0
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	movge   r6, #0x1
	b       branch_20a2dbc

branch_20a2ea4: @ 20a2ea4 :arm
	ldr     r1, [sp, #0x14]
	mov     r0, #0x4
	mov     r2, r5
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	movge   r6, #0x1
	b       branch_20a2dbc

branch_20a2ec4: @ 20a2ec4 :arm
	ldr     r1, [sp, #0x18]
	mov     r0, #0x4
	mov     r2, r5
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	blt     branch_20a2f50
	mov     r0, #0x4
	mov     r1, r4
	mov     r2, #0x0
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	blt     branch_20a2f50
	ldr     r1, [sp, #0x1c]
	mov     r0, #0x4
	mov     r2, #0x0
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	blt     branch_20a2f50
	ldr     r1, [sp, #0x20]
	mov     r0, #0x4
	mov     r2, #0x0
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	blt     branch_20a2f50
	ldr     r1, [sp, #0x24]
	mov     r0, #0x4
	mov     r2, #0x0
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	movge   r6, #0x1
branch_20a2f50: @ 20a2f50 :arm
	bl      OS_GetTick
	str     r0, [sp, #0x34]
	mov     r11, r1
	b       branch_20a2dbc

branch_20a2f60: @ 20a2f60 :arm
	ldr     r1, [sp, #0x28]
	mov     r0, #0x4
	mov     r2, r5
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	blt     branch_20a2dbc
	ldr     r1, [sp, #0x2c]
	mov     r0, #0x4
	mov     r2, #0x0
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	blt     branch_20a2dbc
	ldr     r1, [sp, #0x30]
	mov     r0, #0x4
	mov     r2, #0x0
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	movge   r6, #0x1
	b       branch_20a2dbc

branch_20a2fb8: @ 20a2fb8 :arm
	ldr     r1, [pc, #0x178] @ [0x20a3138] (=0x3002100)
	mov     r0, #0x4
	add     r1, r1, #3, 22 @ #0xc00
	mov     r2, r5
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	movge   r6, #0x1
	b       branch_20a2dbc

branch_20a2fdc: @ 20a2fdc :arm
	ldr     r1, [pc, #0x154] @ [0x20a3138] (=0x3002100)
	mov     r0, #0x4
	mov     r2, r5
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	movlt   r6, #0x0
	movge   r6, #0x1
	b       branch_20a2dbc

branch_20a2ffc: @ 20a2ffc :arm
	ldr     r0, [pc, #0x138] @ [0x20a313c] (=RAM_21c3a48)
	ldr     r0, [r0, #0x4]
	cmp     r0, #0x1
	bne     branch_20a2dbc
	ldr     r0, [pc, #0x128] @ [0x20a313c] (=RAM_21c3a48)
	mov     r6, #0x0
	ldrh    r0, [r0]
	cmp     r0, #0x0
	bne     branch_20a3120
	cmp     r7, #0x7
	addls   pc, pc, r7, lsl #2
	b       branch_20a2dbc
	b       branch_20a2dbc
	b       branch_20a304c
	b       branch_20a3058
	b       branch_20a3060
	b       branch_20a3068
	b       branch_20a3068
	b       branch_20a3108
	b       branch_20a3114

branch_20a304c: @ 20a304c :arm
	add     sp, sp, #0x3c
	mov     r0, #0x1
	ldmfd   sp!, {r4-r11,pc}

branch_20a3058: @ 20a3058 :arm
	mov     r7, #0x4
	b       branch_20a2dbc

branch_20a3060: @ 20a3060 :arm
	mov     r7, #0x5
	b       branch_20a2dbc

branch_20a3068: @ 20a3068 :arm
	mov     r0, r10
	mov     r1, #0x1
	bl      DC_InvalidateRange
	cmp     r7, #0x4
	ldrb    r0, [r10]
	bne     branch_20a3098
	tst     r0, #0x2
	movne   r7, #0x3
	bne     branch_20a2dbc
	add     sp, sp, #0x3c
	mov     r0, r6
	ldmfd   sp!, {r4-r11,pc}

branch_20a3098: @ 20a3098 :arm
	tst     r0, #0x1
	addeq   sp, sp, #0x3c
	moveq   r0, #0x1
	ldmeqfd sp!, {r4-r11,pc}
	tst     r0, #0x20
	bne     branch_20a30f4
	bl      OS_GetTick
	ldr     r2, [sp, #0x34]
	mov     r12, r6
	subs    r9, r0, r2
	mov     r0, #0x40
	sbc     lr, r1, r11
	umull   r0, r1, r9, r0
	mla     r1, r9, r12, r1
	mov     r9, #0x40
	mla     r1, lr, r9, r1
	ldr     r2, [pc, #0x60] @ [0x20a3140] (=0x82ea)
	mov     r3, r6
	bl      _ll_udiv
	mov     r2, r6
	cmp     r1, r2
	cmpeq   r0, r8
	bls     branch_20a30fc
branch_20a30f4: @ 20a30f4 :arm
	mov     r7, #0x6
	b       branch_20a2dbc

branch_20a30fc: @ 20a30fc :arm
	mov     r0, #1, 18 @ #0x4000
	blx     Bios_WaitByLoop
	b       branch_20a2dbc

branch_20a3108: @ 20a3108 :arm
	add     sp, sp, #0x3c
	mov     r0, r6
	ldmfd   sp!, {r4-r11,pc}

branch_20a3114: @ 20a3114 :arm
	add     sp, sp, #0x3c
	mov     r0, #0x1
	ldmfd   sp!, {r4-r11,pc}

branch_20a3120: @ 20a3120 :arm
	mov     r0, r6
	add     sp, sp, #0x3c
	ldmfd   sp!, {r4-r11,pc}
@ 0x20a312c

.word RAM_21c3a80 @ 0x20a312c
.word 0x1020000 @ 0x20a3130
.word 0x2002200 @ 0x20a3134
.word 0x3002100 @ 0x20a3138
.word RAM_21c3a48 @ 0x20a313c
.word 0x82ea @ 0x20a3140



.arm
Function_20a3144: @ 20a3144 :arm
	stmfd   sp!, {r3-r9,lr}
	mov     r4, r2
	mov     r6, r0
	mov     r0, r4
	mov     r5, r1
	bl      DC_InvalidateRange
	mov     r8, #0x4
	mov     r7, #0x1
.arm
branch_20a3164: @ 20a3164 :arm
	mov     r0, r8
	mov     r1, r7
	bl      PXI_IsCallbackReady
	cmp     r0, #0x0
	beq     branch_20a3164
	ldr     r1, [pc, #0x50] @ [0x20a31d0] (=Function_20a3308)
	mov     r0, #0x4
	bl      PXI_SetFifoRecvCallback
	mov     r0, r5, lsl #16
	mov     r8, r0, lsr #16
	mov     r7, #1, 14 @ #0x40000
	mov     r9, #0x1
.arm
branch_20a3194: @ 20a3194 :arm
	mov     r0, r9
	mov     r1, r6
	mov     r2, r8
	mov     r3, r4
	bl      Function_20a2cd8
	cmp     r0, #0x1
	beq     branch_20a31bc
	mov     r0, r7
	blx     Bios_WaitByLoop
	b       branch_20a3194
@ 0x20a31bc

.arm
branch_20a31bc: @ 20a31bc :arm
	mov     r0, r4
	mov     r1, r5
	bl      DC_InvalidateRange
	mov     r0, #0x1
	ldmfd   sp!, {r3-r9,pc}
@ 0x20a31d0

.word Function_20a3308 @ 0x20a31d0
.arm
Function_20a31d4: @ 20a31d4 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r8, r0
	mov     r7, r1
	mov     r6, r2
	mov     r5, #0x4
	mov     r4, #0x1
.arm
branch_20a31ec: @ 20a31ec :arm
	mov     r0, r5
	mov     r1, r4
	bl      PXI_IsCallbackReady
	cmp     r0, #0x0
	beq     branch_20a31ec
	ldr     r1, [pc, #0x44] @ [0x20a324c] (=Function_20a3308)
	mov     r0, #0x4
	bl      PXI_SetFifoRecvCallback
	mov     r0, r6
	mov     r1, r7
	bl      DC_StoreRange
	mov     r4, #1, 14 @ #0x40000
	mov     r5, #0x2
.arm
branch_20a3220: @ 20a3220 :arm
	mov     r0, r5
	mov     r1, r8
	mov     r2, r7
	mov     r3, r6
	bl      Function_20a2cd8
	cmp     r0, #0x1
	ldmeqfd sp!, {r4-r8,pc}
	mov     r0, r4
	blx     Bios_WaitByLoop
	b       branch_20a3220
@ 0x20a3248

.arm
Function_20a3248: @ 20a3248 :arm
	ldmfd   sp!, {r4-r8,pc}
@ 0x20a324c

.word Function_20a3308 @ 0x20a324c



.arm
Function_20a3250: @ 20a3250 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r5, r2
	mov     r4, r3
	mov     r6, r0
	mov     r0, r1
	mov     r1, r5
	mov     r2, r4
	bl      Function_20a3144
	cmp     r0, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4-r6,pc}
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20d5190
	cmp     r0, #0x0
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a329c

.arm
Function_20a329c: @ 20a329c :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r5, #0x4
	mov     r4, #0x1
.arm
branch_20a32a8: @ 20a32a8 :arm
	mov     r0, r5
	mov     r1, r4
	bl      PXI_IsCallbackReady
	cmp     r0, #0x0
	beq     branch_20a32a8
	ldr     r1, [pc, #0x40] @ [0x20a3304] (=Function_20a3308)
	mov     r0, #0x4
	bl      PXI_SetFifoRecvCallback
	mov     r4, #1, 14 @ #0x40000
	mov     r6, #0x7
	mov     r5, #0x0
.arm
branch_20a32d4: @ 20a32d4 :arm
	mov     r0, r6
	mov     r1, r5
	mov     r2, r5
	mov     r3, r5
	bl      Function_20a2cd8
	cmp     r0, #0x1
	beq     branch_20a32fc
	mov     r0, r4
	blx     Bios_WaitByLoop
	b       branch_20a32d4
@ 0x20a32fc

.arm
branch_20a32fc: @ 20a32fc :arm
	mov     r0, #0x1
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a3304

.word Function_20a3308 @ 0x20a3304



.arm
Function_20a3308: @ 20a3308 :arm
	ldr     r0, [pc, #0x24] @ [0x20a3334] (=RAM_21c3a48)
	and     r1, r1, #0xff
	strh    r1, [r0]
	mov     r1, #0x1
	str     r1, [r0, #0x4]
	cmp     r2, #0x0
	movne   r1, #0xff
	strneh  r1, [r0]
	ldr     r0, [pc, #0x4] @ [0x20a3334] (=RAM_21c3a48)
	ldrh    r0, [r0]
	bx      lr
@ 0x20a3334

.word RAM_21c3a48 @ 0x20a3334



.arm
.globl Function_20a3338
Function_20a3338: @ 20a3338 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #0x8
	mov     r4, r0
	ldr     r3, [r4, #0x8]
	ldr     r2, [r4, #0xc]
	ldr     r1, [pc, #0x98] @ [0x20a33ec] (=RAM_21c3a54)
	str     r2, [sp, #0x4]
	str     r3, [sp]
	mov     r2, #0x5
	bl      MI_CpuCopy8
	ldr     r2, [sp]
	ldr     r1, [sp, #0x4]
	mov     r12, r2, lsr #5
	ldr     lr, [r4, #0x4]
	mov     r3, r1, lsr #5
	orr     r12, r12, r1, lsl #27
	mov     r0, #0x7
	and     r1, r0, lr, lsr #8
	and     r0, r2, #0x1f
	orr     lr, r1, r0, lsl #3
	ldr     r2, [pc, #0x5c] @ [0x20a33ec] (=RAM_21c3a54)
	ldr     r1, [pc, #0x5c] @ [0x20a33f0] (=RAM_21c3a5a)
	strb    lr, [r2, #0x5]
	add     r0, sp, #0x0
	str     r12, [sp]
	str     r3, [sp, #0x4]
	mov     r2, #0x4
	bl      MI_CpuCopy8
	ldrh    r0, [r4, #0x10]
	ldr     r1, [sp, #0x4]
	ldr     r3, [pc, #0x34] @ [0x20a33ec] (=RAM_21c3a54)
	and     r1, r1, #0x3f
	mov     r0, r0, lsl #30
	orr     r0, r1, r0, lsr #24
	strb    r0, [r3, #0xa]
	ldrh    r2, [r4, #0x10]
	add     r0, r4, #0x12
	ldr     r1, [pc, #0x20] @ [0x20a33f4] (=RAM_21c3a60)
	mov     r4, r2, asr #2
	mov     r2, #0x2
	strb    r4, [r3, #0xb]
	bl      MI_CpuCopy8
	ldr     r0, [pc, #0x4] @ [0x20a33ec] (=RAM_21c3a54)
	add     sp, sp, #0x8
	ldmfd   sp!, {r4,pc}
@ 0x20a33ec

.word RAM_21c3a54 @ 0x20a33ec
.word RAM_21c3a5a @ 0x20a33f0
.word RAM_21c3a60 @ 0x20a33f4



.arm
.globl Function_20a33f8
Function_20a33f8: @ 20a33f8 :arm
	ldr     r0, [pc, #0x0] @ [0x20a3400] (=RAM_21c3a54)
	bx      lr
@ 0x20a3400

.word RAM_21c3a54 @ 0x20a3400



.arm
.globl Function_20a3404
Function_20a3404: @ 20a3404 :arm
	stmfd   sp!, {r4-r10,lr}
	sub     sp, sp, #0x10
	mov     r8, r0
	mov     r1, #0x0
	mov     r2, #7, 24 @ #0x700
	bl      MI_CpuFill8
	mov     r0, r8
	bl      Function_20a29f0
	cmp     r0, #0x0
	addeq   sp, sp, #0x10
	ldreq   r0, [pc, #0x2c4] @ [0x20a36f8] (=0xffffd8ef)
	ldmeqfd sp!, {r4-r10,pc}
	ldr     r1, [pc, #0x2c0] @ [0x20a36fc] (=0xa001)
	add     r0, r8, #5, 24 @ #0x500
	bl      Function_20d316c
	mov     r0, r8
	bl      Function_20a2a34
	cmp     r0, #0x0
	addeq   sp, sp, #0x10
	ldreq   r0, [pc, #0x2a0] @ [0x20a36f8] (=0xffffd8ef)
	ldmeqfd sp!, {r4-r10,pc}
	add     r0, sp, #0x0
	mov     r1, #0x0
	mov     r2, #0x10
	bl      MI_CpuFill8
	mov     r6, r8
	mov     r7, r8
	mov     r5, #0x0
	mov     r10, #0x1
	add     r9, sp, #0x0
	mov     r4, #0xfe
.arm
branch_20a3480: @ 20a3480 :arm
	mov     r1, r6
	mov     r2, r4
	add     r0, r8, #5, 24 @ #0x500
	bl      Function_20d32d4
	add     r1, r8, r5, lsl #8
	ldrh    r1, [r1, #0xfe]
	cmp     r0, r1
	bne     branch_20a34b0
	mov     r0, r7
	bl      Function_20a370c
	cmp     r0, #0x0
	strne   r10, [r9, r5, lsl #0x2]
.arm
branch_20a34b0: @ 20a34b0 :arm
	add     r5, r5, #0x1
	cmp     r5, #0x3
	add     r6, r6, #1, 24 @ #0x100
	add     r7, r7, #1, 24 @ #0x100
	blt     branch_20a3480
	add     r0, r8, #5, 24 @ #0x500
	add     r1, r8, #3, 24 @ #0x300
	mov     r2, #0xfe
	bl      Function_20d32d4
	add     r1, r8, #3, 24 @ #0x300
	ldrh    r1, [r1, #0xfe]
	cmp     r0, r1
	moveq   r0, #0x1
	ldr     r1, [sp]
	streq   r0, [sp, #0xc]
	cmp     r1, #0x0
	ldrne   r0, [sp, #0x4]
	cmpne   r0, #0x0
	ldrne   r0, [sp, #0x8]
	cmpne   r0, #0x0
	ldrne   r0, [sp, #0xc]
	cmpne   r0, #0x0
	beq     branch_20a3520
	add     r0, r8, #0xf0
	bl      Function_20a2b7c
	add     sp, sp, #0x10
	mov     r0, #0x0
	ldmfd   sp!, {r4-r10,pc}
@ 0x20a3520

.arm
branch_20a3520: @ 20a3520 :arm
	cmp     r1, #0x0
	ldreq   r0, [sp, #0x4]
	cmpeq   r0, #0x0
	ldreq   r0, [sp, #0x8]
	cmpeq   r0, #0x0
	ldreq   r0, [sp, #0xc]
	cmpeq   r0, #0x0
	bne     branch_20a3564
	mov     r0, r8
	bl      Function_20a380c
	mov     r0, r8
	bl      Function_20a2ae8
	cmp     r0, #0x0
	movne   r0, #0x0
	add     sp, sp, #0x10
	ldreq   r0, [pc, #0x19c] @ [0x20a3700] (=0xffffd8f0)
	ldmfd   sp!, {r4-r10,pc}
@ 0x20a3564

.arm
branch_20a3564: @ 20a3564 :arm
	cmp     r1, #0x0
	ldrne   r0, [sp, #0x4]
	cmpne   r0, #0x0
	bne     branch_20a35ac
	ldr     r0, [sp, #0x8]
	cmp     r0, #0x0
	ldrne   r0, [sp, #0xc]
	cmpne   r0, #0x0
	bne     branch_20a35ac
	mov     r0, r8
	bl      Function_20a380c
	mov     r0, r8
	bl      Function_20a2ae8
	cmp     r0, #0x0
	movne   r0, #0x0
	add     sp, sp, #0x10
	ldreq   r0, [pc, #0x154] @ [0x20a3700] (=0xffffd8f0)
	ldmfd   sp!, {r4-r10,pc}
@ 0x20a35ac

.arm
branch_20a35ac: @ 20a35ac :arm
	cmp     r1, #0x0
	ldreq   r0, [sp, #0x4]
	cmpeq   r0, #0x0
	bne     branch_20a35e0
	mov     r0, r8
	bl      Function_20a380c
	mov     r0, r8
	bl      Function_20a2ae8
	cmp     r0, #0x0
	ldrne   r0, [pc, #0x12c] @ [0x20a3704] (=0xffffd8ed)
	add     sp, sp, #0x10
	ldreq   r0, [pc, #0x120] @ [0x20a3700] (=0xffffd8f0)
	ldmfd   sp!, {r4-r10,pc}
@ 0x20a35e0

.arm
branch_20a35e0: @ 20a35e0 :arm
	cmp     r1, #0x0
	bne     branch_20a3610
	mov     r0, r8
	mov     r1, #0x0
	bl      Function_20a388c
	add     r0, r8, #31, 28 @ #0x1f0
	add     r1, r8, #0xf0
	mov     r2, #0xe
	bl      MI_CpuCopy8
	ldrb    r0, [r8, #0x1ef]
	strb    r0, [r8, #0xef]
	b       branch_20a3640
@ 0x20a3610

.arm
branch_20a3610: @ 20a3610 :arm
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	bne     branch_20a3640
	mov     r0, r8
	mov     r1, #0x1
	bl      Function_20a388c
	add     r0, r8, #0xf0
	add     r1, r8, #31, 28 @ #0x1f0
	mov     r2, #0xe
	bl      MI_CpuCopy8
	ldrb    r0, [r8, #0xef]
	strb    r0, [r8, #0x1ef]
.arm
branch_20a3640: @ 20a3640 :arm
	add     r0, r8, #0xf0
	bl      Function_20a2b7c
	ldr     r0, [sp, #0x8]
	cmp     r0, #0x0
	bne     branch_20a3660
	mov     r0, r8
	mov     r1, #0x2
	bl      Function_20a388c
.arm
branch_20a3660: @ 20a3660 :arm
	ldr     r0, [sp, #0xc]
	cmp     r0, #0x0
	bne     branch_20a367c
	add     r1, r8, #3, 24 @ #0x300
	mov     r0, #0x0
	mov     r2, #1, 24 @ #0x100
	bl      MIi_CpuClear16
.arm
branch_20a367c: @ 20a367c :arm
	mov     r4, #0x0
	mov     r5, r4
	mov     r2, #0x1
	add     r3, sp, #0x0
.arm
branch_20a368c: @ 20a368c :arm
	ldr     r0, [r3, r5, lsl #0x2]
	cmp     r0, #0x0
	bne     branch_20a36c0
	ldrb    r0, [r8, #0xef]
	tst     r0, r2, lsl r5
	beq     branch_20a36c0
	mov     r1, r0
	mvn     r0, r2, lsl r5
	and     r0, r1, r0
	strb    r0, [r8, #0xef]
	and     r0, r0, #0xff
	mov     r4, r2
	strb    r0, [r8, #0x1ef]
.arm
branch_20a36c0: @ 20a36c0 :arm
	add     r5, r5, #0x1
	cmp     r5, #0x3
	blt     branch_20a368c
	mov     r0, r8
	bl      Function_20a2ae8
	cmp     r0, #0x0
	addeq   sp, sp, #0x10
	ldreq   r0, [pc, #0x1c] @ [0x20a3700] (=0xffffd8f0)
	ldmeqfd sp!, {r4-r10,pc}
	cmp     r4, #0x0
	ldrne   r0, [pc, #0x18] @ [0x20a3708] (=0xffffd8ee)
	moveq   r0, #0x0
	add     sp, sp, #0x10
	ldmfd   sp!, {r4-r10,pc}
@ 0x20a36f8

.word 0xffffd8ef @ 0x20a36f8
.word 0xa001 @ 0x20a36fc
.word 0xffffd8f0 @ 0x20a3700
.word 0xffffd8ed @ 0x20a3704
.word 0xffffd8ee @ 0x20a3708
.arm
Function_20a370c: @ 20a370c :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	mov     r4, r0
	ldrb    r0, [r4, #0xe7]
	cmp     r0, #0xff
	addeq   sp, sp, #0x4
	moveq   r0, #0x1
	ldmeqfd sp!, {r3,r4,pc}
	cmp     r0, #0x2
	addhi   sp, sp, #0x4
	movhi   r0, #0x0
	ldmhifd sp!, {r3,r4,pc}
	add     r0, r4, #0x40
	bl      Function_20a2c08
	cmp     r0, #0x0
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3,r4,pc}
	ldr     r1, [pc, #0xac] @ [0x20a3808] (=Unknown_20f9534)
	add     r0, r4, #0xc0
	mov     r2, #0x4
	bl      Function_20d5190
	cmp     r0, #0x0
	beq     branch_20a37bc
	add     r0, r4, #0xc4
	bl      Function_20a2cac
	cmp     r0, #0x0
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3,r4,pc}
	ldrb    r0, [r4, #0xd0]
	cmp     r0, #0x20
	addhi   sp, sp, #0x4
	movhi   r0, #0x0
	ldmhifd sp!, {r3,r4,pc}
	add     r1, sp, #0x0
	bl      Function_20a2bd8
	add     r1, sp, #0x0
	add     r0, r4, #0xc0
	bl      Function_20a2c30
	cmp     r0, #0x0
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3,r4,pc}
.arm
branch_20a37bc: @ 20a37bc :arm
	ldr     r1, [pc, #0x44] @ [0x20a3808] (=Unknown_20f9534)
	add     r0, r4, #0xc8
	mov     r2, #0x4
	bl      Function_20d5190
	cmp     r0, #0x0
	beq     branch_20a37fc
	add     r0, r4, #0xc8
	bl      Function_20a2cac
	cmp     r0, #0x0
	bne     branch_20a37fc
	add     r0, r4, #0xcc
	bl      Function_20a2cac
	cmp     r0, #0x0
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3,r4,pc}
.arm
branch_20a37fc: @ 20a37fc :arm
	mov     r0, #0x1
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,pc}
@ 0x20a3808

.word Unknown_20f9534 @ 0x20a3808



.arm
Function_20a380c: @ 20a380c :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0x14
	mov     r7, r0
	mov     r1, r7
	mov     r0, #0x0
	mov     r2, #1, 22 @ #0x400
	bl      MIi_CpuClear16
	mov     r2, #0x0
	mov     r1, #0xff
.arm
branch_20a3830: @ 20a3830 :arm
	add     r0, r7, r2, lsl #8
	add     r2, r2, #0x1
	strb    r1, [r0, #0xe7]
	cmp     r2, #0x3
	blt     branch_20a3830
	add     r0, sp, #0x0
	bl      Function_20a3a3c
	add     r0, sp, #0x0
	bl      Function_20a3338
	mov     r5, r0
	mov     r6, #0x0
	mov     r4, #0xe
.arm
branch_20a3860: @ 20a3860 :arm
	mov     r0, r5
	mov     r2, r4
	add     r1, r7, #0xf0
	bl      MI_CpuCopy8
	add     r6, r6, #0x1
	cmp     r6, #0x2
	add     r7, r7, #1, 24 @ #0x100
	blt     branch_20a3860
	mov     r0, #0x0
	add     sp, sp, #0x14
	ldmfd   sp!, {r4-r7,pc}
@ 0x20a388c

.arm
Function_20a388c: @ 20a388c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	add     r1, r5, r4, lsl #8
	mov     r0, #0x0
	mov     r2, #1, 24 @ #0x100
	bl      MIi_CpuClear16
	add     r0, r5, r4, lsl #8
	mov     r1, #0xff
	strb    r1, [r0, #0xe7]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a38b8

.arm
Function_20a38b8: @ 20a38b8 :arm
	stmfd   sp!, {r3-r7,lr}
	sub     sp, sp, #0x10
	ldr     r4, [pc, #0x168] @ [0x20a3a30] (=0xffff)
	mov     lr, #0x0
	and     r12, lr, #0x0
	add     r5, r4, #255, 16 @ #0xff0000
	and     r2, r2, #0x1
	mov     r6, r12, lsl #2
	and     r3, r3, #0x3
	and     r5, r1, r5
	orr     r1, r3, r2, lsl #2
	orr     r6, r6, r2, lsr #30
	mov     r7, r12, lsl #3
	and     r2, r0, r4
	orr     r0, r1, r5, lsl #3
	orr     r1, r0, r2, lsl #27
	mov     r3, r12, lsl #27
	orr     r3, r3, r2, lsr #5
	orr     r7, r7, r5, lsr #29
	orr     r0, r12, r6
	orr     r0, r7, r0
	orr     r0, r3, r0
	add     r2, sp, #0x8
	str     r1, [sp, #0x8]
	str     r0, [sp, #0xc]
.arm
branch_20a391c: @ 20a391c :arm
	ldrb    r0, [r2]
	add     lr, lr, #0x1
	cmp     lr, #0x6
	eor     r0, r0, #0xd6
	strb    r0, [r2], #0x1
	blt     branch_20a391c
	ldr     r2, [pc, #0xf8] @ [0x20a3a34] (=Unknown_20f9540)
	add     r4, sp, #0x8
	mov     r5, #0x0
branch_20a3940: @ 20a3940 :arm
	ldrb    r3, [r4]
	add     r5, r5, #0x1
	cmp     r5, #0x5
	mov     r0, r3, asr #4
	and     r1, r0, #0xf
	and     r0, r3, #0xf
	ldrb    r1, [r2, r1]
	ldrb    r0, [r2, r0]
	orr     r0, r0, r1, lsl #4
	strb    r0, [r4], #0x1
	blt     branch_20a3940
	add     r0, sp, #0x8
	add     r1, sp, #0x0
	mov     r2, #0x8
	bl      MI_CpuCopy8
	ldr     r4, [pc, #0xb4] @ [0x20a3a38] (=Unknown_20f9538)
	add     r3, sp, #0x0
	mov     r5, #0x0
	add     r0, sp, #0x8
branch_20a398c: @ 20a398c :arm
	ldrb    r2, [r3], #0x1
	ldrb    r1, [r4], #0x1
	add     r5, r5, #0x1
	cmp     r5, #0x5
	strb    r2, [r0, r1]
	blt     branch_20a398c
	ldrb    r2, [sp, #0xd]
	mov     r1, #0x0
	ldr     r3, [sp, #0x8]
	and     r2, r2, #0x7
	strb    r1, [sp, #0xf]
	strb    r1, [sp, #0xe]
	strb    r2, [sp, #0xd]
	ldr     r2, [sp, #0xc]
	mov     r4, r3, lsl #1
	mov     r2, r2, lsl #1
	orr     r2, r2, r3, lsr #31
	str     r2, [sp, #0xc]
	ldrb    r2, [sp, #0xd]
	str     r4, [sp, #0x8]
	ldrb    r3, [sp, #0x8]
	mov     r2, r2, asr #3
	and     r2, r2, #0x1
	orr     r2, r3, r2
	strb    r2, [sp, #0x8]
branch_20a39f0: @ 20a39f0 :arm
	ldrb    r2, [r0]
	add     r1, r1, #0x1
	cmp     r1, #0x6
	eor     r2, r2, #0x67
	strb    r2, [r0], #0x1
	blt     branch_20a39f0
	ldrb    r0, [sp, #0xd]
	mov     r1, #0x0
	strb    r1, [sp, #0xf]
	and     r0, r0, #0x7
	strb    r1, [sp, #0xe]
	strb    r0, [sp, #0xd]
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	add     sp, sp, #0x10
	ldmfd   sp!, {r3-r7,pc}
@ 0x20a3a30

.word 0xffff @ 0x20a3a30
.word Unknown_20f9540 @ 0x20a3a34
.word Unknown_20f9538 @ 0x20a3a38



.arm
.globl Function_20a3a3c
Function_20a3a3c: @ 20a3a3c :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x24
	mov     r10, r0
	bl      Function_20a283c
	bl      RTC_Init
	add     r0, sp, #0x14
	bl      RTC_GetDate
	cmp     r0, #0x0
	addne   sp, sp, #0x24
	movne   r0, #0x0
	ldmnefd sp!, {r4-r11,pc}
	add     r0, sp, #0x8
	bl      RTC_GetTime
	cmp     r0, #0x0
	addne   sp, sp, #0x24
	movne   r0, #0x0
	ldmnefd sp!, {r4-r11,pc}
	add     r0, sp, #0x14
	add     r1, sp, #0x8
	bl      RTC_ConvertDateTimeToSecond
	mov     r4, r0
	mov     r0, #0x0
	subs    r2, r4, r0
	sbcs    r2, r1, r0
	addlt   sp, sp, #0x24
	ldmltfd sp!, {r4-r11,pc}
	bl      Function_20c3808
	cmp     r0, #0x0
	beq     branch_20a3ab8
	ldr     r0, [pc, #0x150] @ [0x20a3c08] (=OS_GetTick)
	adds    r4, r4, r0
.arm
branch_20a3ab8: @ 20a3ab8 :arm
	add     r0, sp, #0x0
	bl      OS_GetMacAddress
	ldrb    r0, [sp, #0x1]
	ldr     r5, [pc, #0x140] @ [0x20a3c0c] (=0x5d588b65)
	ldr     r6, [pc, #0x140] @ [0x20a3c10] (=0x269ec3)
	ldrb    r1, [sp]
	mla     r9, r4, r5, r6
	mov     r0, r0, lsl #8
	orr     r1, r0, r1, lsl #16
	ldrb    r2, [sp, #0x2]
	ldr     r0, [pc, #0x12c] @ [0x20a3c14] (=0x9bf)
	ldrb    r7, [sp, #0x4]
	orr     r1, r2, r1
	cmp     r1, r0
	mov     r2, r9, lsr #16
	mov     r0, #250, 30 @ #0x3e8
	mul     r3, r2, r0
	mov     r2, r3, lsr #16
	movne   r1, #0x1
	ldrb    r0, [sp, #0x5]
	ldrb    r4, [sp, #0x3]
	mov     r3, r7, lsl #8
	moveq   r1, #0x0
	orr     r4, r3, r4, lsl #16
	strh    r2, [r10, #0x10]
	mov     r3, #0x0
	str     r3, [r10]
	str     r3, [r10, #0x4]
	ldrh    r2, [r10, #0x12]
	and     r7, r1, #0xff
	orr     r8, r0, r4
	str     r3, [r10, #0x8]
	cmp     r2, #0x0
	str     r3, [r10, #0xc]
	bne     branch_20a3ba8
	ldr     r0, [r10, #0x8]
	cmp     r3, r3
	cmpeq   r0, r3
	bne     branch_20a3bfc
	mov     r11, r3
	mov     r4, r3
.arm
branch_20a3b5c: @ 20a3b5c :arm
	mul     r0, r9, r5
	adds    r9, r0, r6
	bne     branch_20a3b74
.arm
branch_20a3b68: @ 20a3b68 :arm
	mul     r0, r9, r5
	adds    r9, r0, r6
	beq     branch_20a3b68
.arm
branch_20a3b74: @ 20a3b74 :arm
	strh    r9, [r10, #0x12]
	ldrh    r0, [r10, #0x12]
	mov     r1, r8
	mov     r2, r7
	mov     r3, #0x0
	bl      Function_20a38b8
	str     r0, [r10, #0x8]
	str     r1, [r10, #0xc]
	ldr     r0, [r10, #0x8]
	cmp     r1, r11
	cmpeq   r0, r4
	beq     branch_20a3b5c
	b       branch_20a3bfc
@ 0x20a3ba8

.arm
branch_20a3ba8: @ 20a3ba8 :arm
	ldr     r0, [r10, #0x8]
	cmp     r3, r3
	cmpeq   r0, r3
	bne     branch_20a3bfc
	mov     r6, r3
	mov     r5, r3
	mov     r4, r3
.arm
branch_20a3bc4: @ 20a3bc4 :arm
	ldrh    r0, [r10, #0x12]
	mov     r1, r8
	mov     r2, r7
	add     r0, r0, #0x1
	strh    r0, [r10, #0x12]
	ldrh    r0, [r10, #0x12]
	mov     r3, r6
	bl      Function_20a38b8
	str     r0, [r10, #0x8]
	str     r1, [r10, #0xc]
	ldr     r0, [r10, #0x8]
	cmp     r1, r5
	cmpeq   r0, r4
	beq     branch_20a3bc4
.arm
branch_20a3bfc: @ 20a3bfc :arm
	mov     r0, #0x1
	add     sp, sp, #0x24
	ldmfd   sp!, {r4-r11,pc}
@ 0x20a3c08

.word OS_GetTick @ 0x20a3c08
.word 0x5d588b65 @ 0x20a3c0c
.word 0x269ec3 @ 0x20a3c10
.word 0x9bf @ 0x20a3c14



.arm
.globl Function_20a3c18
Function_20a3c18: @ 20a3c18 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x14
	mov     r4, r0
	add     r0, sp, #0x0
	bl      Function_20a3a3c
	cmp     r0, #0x0
	addeq   sp, sp, #0x14
	moveq   r0, #0x0
	ldmeqfd sp!, {r3,r4,pc}
	add     r0, sp, #0x0
	mov     r1, r4
	bl      Function_20a2914
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	add     sp, sp, #0x14
	ldmfd   sp!, {r3,r4,pc}
@ 0x20a3c5c


.arm
.globl Function_20a3c5c
Function_20a3c5c: @ 20a3c5c :arm
	stmfd   sp!, {r4,r5,lr}
	sub     sp, sp, #0x14
	mov     r5, r0
	add     r0, sp, #0x0
	mov     r4, r1
	bl      Function_20a283c
	add     r12, r5, #0x8
	ldmia   r12, {r2,r3}
	stmia   r5, {r2,r3}
	add     r1, sp, #0x8
	ldmia   r1, {r2,r3}
	mov     r0, r5
	mov     r1, r4
	stmia   r12, {r2,r3}
	bl      Function_20a2914
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	add     sp, sp, #0x14
	ldmfd   sp!, {r4,r5,pc}
@ 0x20a3cac


.arm
.globl Function_20a3cac
Function_20a3cac: @ 20a3cac :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x24
	add     r2, sp, #0x0
	mov     r1, #0x0
	mov     r10, r0
	strb    r1, [r2]
	strb    r1, [r2, #0x1]
	strb    r1, [r2, #0x2]
	strb    r1, [r2, #0x3]
	strb    r1, [r2, #0x4]
	strb    r1, [r2, #0x5]
	bl      Function_20a283c
	bl      RTC_Init
	add     r0, sp, #0x14
	bl      RTC_GetDate
	cmp     r0, #0x0
	addne   sp, sp, #0x24
	movne   r0, #0x0
	ldmnefd sp!, {r4-r11,pc}
	add     r0, sp, #0x8
	bl      RTC_GetTime
	cmp     r0, #0x0
	addne   sp, sp, #0x24
	movne   r0, #0x0
	ldmnefd sp!, {r4-r11,pc}
	add     r0, sp, #0x14
	add     r1, sp, #0x8
	bl      RTC_ConvertDateTimeToSecond
	mov     r4, r0
	mov     r0, #0x0
	subs    r2, r4, r0
	sbcs    r2, r1, r0
	addlt   sp, sp, #0x24
	ldmltfd sp!, {r4-r11,pc}
	bl      Function_20c3808
	cmp     r0, #0x0
	beq     branch_20a3d48
	ldr     r0, [pc, #0xf4] @ [0x20a3e3c] (=OS_GetTick)
	adds    r4, r4, r0
branch_20a3d48: @ 20a3d48 :arm

	add     r0, sp, #0x0
	bl      OS_GetMacAddress
	ldrb    r0, [sp, #0x1]
	ldr     r5, [pc, #0xe4] @ [0x20a3e40] (=0x5d588b65)
	ldr     r6, [pc, #0xe4] @ [0x20a3e44] (=0x269ec3)
	ldrb    r1, [sp]
	mov     r0, r0, lsl #8
	mla     r9, r4, r5, r6
	orr     r1, r0, r1, lsl #16
	ldrb    r2, [sp, #0x2]
	ldr     r0, [pc, #0xd0] @ [0x20a3e48] (=0x9bf)
	ldrb    r7, [sp, #0x4]
	orr     r1, r2, r1
	cmp     r1, r0
	movne   r1, #0x1
	mov     r2, r9, lsr #16
	mov     r0, #250, 30 @ #0x3e8
	mul     r4, r2, r0
	mov     r2, r4, lsr #16
	ldrb    r0, [sp, #0x5]
	ldrb    r8, [sp, #0x3]
	mov     r4, r7, lsl #8
	moveq   r1, #0x0
	mov     r3, #0x0
	strh    r2, [r10, #0x10]
	str     r3, [r10, #0x8]
	str     r3, [r10, #0xc]
	orr     r4, r4, r8, lsl #16
	ldr     r2, [r10, #0x8]
	cmp     r3, #0x0
	cmpeq   r2, #0x0
	and     r7, r1, #0xff
	orr     r8, r0, r4
	bne     branch_20a3e30
	mov     r11, r3
	mov     r4, r3
.arm
branch_20a3dd8: @ 20a3dd8 :arm
	mla     r9, r5, r9, r6
	b       branch_20a3de4
@ 0x20a3de0

.arm
branch_20a3de0: @ 20a3de0 :arm
	mla     r9, r5, r9, r6
.arm
branch_20a3de4: @ 20a3de4 :arm
	cmp     r9, #0x0
	beq     branch_20a3de0
	ldrh    r2, [r10, #0x12]
	mov     r0, r9, lsl #16
	mov     r1, r0, lsr #16
	cmp     r2, r0, lsr #16
	beq     branch_20a3de0
	strh    r1, [r10, #0x12]
	ldrh    r0, [r10, #0x12]
	mov     r1, r8
	mov     r2, r7
	mov     r3, #0x0
	bl      Function_20a38b8
	str     r0, [r10, #0x8]
	str     r1, [r10, #0xc]
	ldr     r0, [r10, #0x8]
	cmp     r1, r11
	cmpeq   r0, r4
	beq     branch_20a3dd8
branch_20a3e30: @ 20a3e30 :arm
	mov     r0, #0x1
	add     sp, sp, #0x24
	ldmfd   sp!, {r4-r11,pc}
@ 0x20a3e3c

.word OS_GetTick @ =0x20c3880, 0x20a3e3c
.word 0x5d588b65 @ 0x20a3e40
.word 0x269ec3 @ 0x20a3e44
.word 0x9bf @ 0x20a3e48



.arm
Function_20a3e4c: @ 20a3e4c :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x14
	mov     r4, r0
	add     r0, sp, #0x0
	bl      Function_20a283c
	add     r0, sp, #0x0
	ldmia   r0, {r2,r3}
	stmia   r4, {r2,r3}
	add     r1, sp, #0x8
	add     r0, r4, #0x8
	ldmia   r1, {r2,r3}
	stmia   r0, {r2,r3}
	ldr     r0, [sp, #0x4]
	ldr     r1, [sp]
	cmp     r0, #0x0
	mov     r0, #0x0
	cmpeq   r1, #0x0
	movne   r0, #0x1
	str     r0, [r4, #0x10]
	add     sp, sp, #0x14
	ldmfd   sp!, {r3,r4,pc}
@ 0x20a3ea0

.arm
Function_20a3ea0: @ 20a3ea0 :arm
	stmfd   sp!, {lr}
	sub     sp, sp, #0x14
	add     r0, sp, #0x0
	bl      Function_20a283c
	ldr     r0, [sp, #0xc]
	ldr     r1, [sp, #0x8]
	cmp     r0, #0x0
	cmpeq   r1, #0x0
	mov     r0, #0x0
	bne     branch_20a3ee4
	ldr     r1, [sp, #0x4]
	ldr     r2, [sp]
	cmp     r1, r0
	cmpeq   r2, r0
	addeq   sp, sp, #0x14
	moveq   r0, #0x1
	ldmeqfd sp!, {pc}
.arm
branch_20a3ee4: @ 20a3ee4 :arm
	mov     r0, #0x0
	add     sp, sp, #0x14
	ldmfd   sp!, {pc}
@ 0x20a3ef0

.arm
Function_20a3ef0: @ 20a3ef0 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldr     r0, [pc, #0x50] @ [0x20a3f50] (=Unknown_2000bc4)
	mov     r5, #0x0
	bl      Function_2000b9c_Dummy
	mov     r0, r6
	bl      Function_20a3404
	mov     r4, r0
	bl      Function_20a3ea0
	cmp     r0, #0x0
	beq     branch_20a3f28
	mov     r0, r6
	bl      Function_20a3c18
	mov     r5, #0x1
.arm
branch_20a3f28: @ 20a3f28 :arm
	cmp     r4, #0x0
	bge     branch_20a3f40
	cmp     r5, #0x0
	movne   r0, #0x2
	moveq   r0, #0x3
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a3f40

.arm
branch_20a3f40: @ 20a3f40 :arm
	cmp     r5, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a3f50

.word Unknown_2000bc4 @ 0x20a3f50



.arm
Function_20a3f54: @ 20a3f54 :arm
	mvn     r12, r3
	tst     r1, r12
	movne   r0, #0x0
	bxne    lr
	mvn     r3, r3, lsl r2
	ldr     r12, [r0]
	and     r3, r12, r3
	orr     r1, r3, r1, lsl r2
	str     r1, [r0]
	mov     r0, #0x1
	bx      lr
@ 0x20a3f80


.arm
Function_20a3f80: @ 20a3f80 :arm
	ldr     r2, [r0]
	ldr     r1, [pc, #0x10] @ [0x20a3f9c] (=0x7ff)
	ldr     r0, [r0, #0x4]
	and     r1, r2, r1
	orr     r1, r1, #0x0
	orr     r0, r0, #0x0
	bx      lr
@ 0x20a3f9c

.word 0x7ff @ 0x20a3f9c



.arm
Function_20a3fa0: @ 20a3fa0 :arm
	ldr     r0, [r0, #0x8]
	bx      lr
@ 0x20a3fa8


.arm
Function_20a3fa8: @ 20a3fa8 :arm
	ldr     r1, [r0, #0x8]
	ldr     r0, [r0, #0x4]
	orr     r1, r1, #0x0
	orr     r0, r0, #0x0
	bx      lr
@ 0x20a3fbc


.arm
Function_20a3fbc: @ 20a3fbc :arm
	ldr     r0, [r0, #0x4]
	bx      lr
@ 0x20a3fc4


.arm
Function_20a3fc4: @ 20a3fc4 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r3, [pc, #0x18] @ [0x20a3fe8] (=0x7ff)
	mov     r4, r1
	mov     r1, r2
	mov     r2, #0x0
	mov     r5, r0
	bl      Function_20a3f54
	str     r4, [r5, #0x4]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a3fe8

.word 0x7ff @ 0x20a3fe8



.arm
.globl Function_20a3fec
Function_20a3fec: @ 20a3fec :arm
	str     r1, [r0, #0x8]
	bx      lr
@ 0x20a3ff4


.arm
Function_20a3ff4: @ 20a3ff4 :arm
	stmib   r0, {r1,r2}
	bx      lr
@ 0x20a3ffc


.arm
Function_20a3ffc: @ 20a3ffc :arm
	str     r1, [r0, #0x4]
	bx      lr
@ 0x20a4004


.arm
Function_20a4004: @ 20a4004 :arm
	ldr     r1, [r0]
	ldr     r0, [pc, #0x4] @ [0x20a4014] (=0x1fffff)
	and     r0, r0, r1, lsr #11
	bx      lr
@ 0x20a4014

.word 0x1fffff @ 0x20a4014



.arm
Function_20a4018: @ 20a4018 :arm
	stmfd   sp!, {r3,lr}
	bl      Function_20a4004
	and     r0, r0, #0x3
	ldmfd   sp!, {r3,pc}
@ 0x20a4028


.arm
.globl Function_20a4028
Function_20a4028: @ 20a4028 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20a4018
	cmp     r0, #0x3
	bne     branch_20a4058
	mov     r0, r4
	bl      Function_20a4004
	and     r0, r0, #0x4
	cmp     r0, #0x4
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r4,pc}

branch_20a4058: @ 20a4058 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4,pc}
@ 0x20a4060

.arm
.globl Function_20a4060
Function_20a4060: @ 20a4060 :arm
	ldr     r12, [pc, #0x0] @ [0x20a4068] (=Function_20a4018)
	bx      r12
@ 0x20a4068

.word Function_20a4018 @ =0x20a4018, 0x20a4068



.arm
Function_20a406c: @ 20a406c :arm
	ldr     r12, [pc, #0x8] @ [0x20a407c] (=Function_20a3f54)
	ldr     r3, [pc, #0x8] @ [0x20a4080] (=0x1fffff)
	mov     r2, #0xb
	bx      r12
@ 0x20a407c

.word Function_20a3f54 @ 0x20a407c
.word 0x1fffff @ 0x20a4080



.arm
Function_20a4084: @ 20a4084 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	bl      Function_20a4004
	bic     r1, r0, #0x3
	mov     r0, r5
	orr     r1, r1, r4
	bl      Function_20a406c
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a40a8


.arm
.globl Function_20a40a8
Function_20a40a8: @ 20a40a8 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20a4018
	cmp     r0, #0x3
	ldmnefd sp!, {r4,pc}
	mov     r0, r4
	bl      Function_20a4004
	orr     r1, r0, #0x4
	mov     r0, r4
	bl      Function_20a406c
	ldmfd   sp!, {r4,pc}
@ 0x20a40d4


.arm
Function_20a40d4: @ 20a40d4 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #66, 30 @ #0x108
	mov     r4, r0
	str     r1, [sp, #0x4]
	add     r0, sp, #0x8
	mov     r1, #0x7
	str     r4, [sp]
	bl      Function_20d30a8
	add     r0, sp, #0x8
	add     r1, sp, #0x0
	mov     r2, #0x8
	bl      Function_20d32ac
	and     r0, r0, #0x7f
	orr     r1, r0, #0x0
	orr     r0, r4, #0x0
	add     sp, sp, #66, 30 @ #0x108
	ldmfd   sp!, {r4,pc}
@ 0x20a4118


.arm
.globl Function_20a4118
Function_20a4118: @ 20a4118 :arm
	ldr     r12, [pc, #0x10] @ [0x20a4130] (=0x20a4134)
	mov     r3, r0
	mov     r0, r1
	mov     r1, r2
	ldr     r2, [r3, #0x24]
	bx      r12
@ 0x20a4130

.word Function_20a4134 @ 0x20a4130



.arm
Function_20a4134: @ 20a4134 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #66, 30 @ #0x108
	mov     r4, r1
	and     r1, r4, #0x0
	cmp     r1, #0x0
	and     r3, r0, #2, 2 @ #0x80000000
	cmpeq   r3, #0x0
	mov     r1, #0x0
	addne   sp, sp, #66, 30 @ #0x108
	movne   r0, r1
	ldmnefd sp!, {r4,pc}
	str     r0, [sp]
	add     r0, sp, #0x8
	mov     r1, #0x7
	str     r2, [sp, #0x4]
	bl      Function_20d30a8
	add     r0, sp, #0x8
	add     r1, sp, #0x0
	mov     r2, #0x8
	bl      Function_20d32ac
	and     r1, r0, #0x7f
	mov     r0, r1, asr #31
	cmp     r0, #0x0
	cmpeq   r1, r4
	moveq   r0, #0x1
	movne   r0, #0x0
	add     sp, sp, #66, 30 @ #0x108
	ldmfd   sp!, {r4,pc}
@ 0x20a41a4


.arm
Function_20a41a4: @ 20a41a4 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20a4134
	cmp     r0, #0x0
	mov     r0, #0x0
	subne   r0, r0, #0x1
	andne   r0, r4, r0
	ldmfd   sp!, {r4,pc}
@ 0x20a41c4


.arm
Function_20a41c4: @ 20a41c4 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     lr, [pc, #0x5c] @ [0x20a422c] (=0x66666667)
	add     r4, r2, #0x4
	smull   r12, r2, lr, r4
	mov     r12, r4, lsr #31
	add     r2, r12, r2, asr #1
	cmp     r2, #0x0
	ldr     r7, [pc, #0x48] @ [0x20a4230] (=Unknown_2100db8)
	mov     r6, #0x0
	ble     branch_20a4220
	add     r4, r3, r2
	sub     r4, r4, #0x1
	mov     r12, #0x1f
branch_20a41f8: @ 20a41f8 :arm
	and     r5, r0, r12
	ldrsb   r5, [r7, r5]
	mov     r0, r0, lsr #5
	mov     lr, r1, lsr #5
	strb    r5, [r4, -r6]
	add     r6, r6, #0x1
	orr     r0, r0, r1, lsl #27
	mov     r1, lr
	cmp     r6, r2
	blt     branch_20a41f8
branch_20a4220: @ 20a4220 :arm
	mov     r0, #0x0
	strb    r0, [r3, r2]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20a422c

.word 0x66666667 @ 0x20a422c
.word Unknown_2100db8 @ 0x20a4230



.arm
.globl Function_20a4234
Function_20a4234: @ 20a4234 :arm
	stmfd   sp!, {r4-r6,lr}
	sub     sp, sp, #0x40
	mov     r6, r0
	mov     r4, r1
	mov     r5, r2
	bl      Function_20a3f80
	add     r3, sp, #0x29
	mov     r2, #0x2b
	bl      Function_20a41c4
	mov     r0, r6
	bl      Function_20a3fa0
	mov     r1, #0x0
	mov     r2, #0x20
	add     r3, sp, #0x14
	bl      Function_20a41c4
	mov     r1, r4, lsr #24
	and     r1, r1, #0xff
	str     r1, [sp]
	mov     r1, r4, lsr #16
	and     r1, r1, #0xff
	str     r1, [sp, #0x4]
	mov     r1, r4, lsr #8
	and     r1, r1, #0xff
	str     r1, [sp, #0x8]
	and     r1, r4, #0xff
	str     r1, [sp, #0xc]
	add     r2, sp, #0x14
	str     r2, [sp, #0x10]
	ldr     r2, [pc, #0x14] @ [0x20a42c0] (=Unknown_2100ddc)
	mov     r0, r5
	mov     r1, #0x15
	add     r3, sp, #0x29
	bl      OS_SNPrintf
	add     sp, sp, #0x40
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a42c0

.word Unknown_2100ddc @ 0x20a42c0



.arm
Function_20a42c4: @ 20a42c4 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #1, 22 @ #0x400
	mov     r4, r1
	mov     r1, #0x0
	mov     r2, #0x40
	mov     r5, r0
	bl      MI_CpuFill8
	mov     r0, #0x40
	str     r0, [r5]
	mov     r0, #0x0
	str     r0, [r5, #0x1c]
	add     r0, r5, #0x4
	str     r4, [r5, #0x24]
	bl      Function_20a4340
	add     r0, r5, #0x10
	mov     r1, #0x0
	bl      Function_20a4084
	ldr     r1, [pc, #0x2c] @ [0x20a433c] (=0xedb88320)
	add     r0, sp, #0x0
	bl      Function_20d3230
	add     r0, sp, #0x0
	mov     r1, r5
	mov     r2, #0x3c
	bl      Function_20d3328
	str     r0, [r5, #0x3c]
	ldr     r0, [r5, #0x20]
	orr     r0, r0, #0x1
	str     r0, [r5, #0x20]
	add     sp, sp, #1, 22 @ #0x400
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a433c

.word 0xedb88320 @ 0x20a433c



.arm
.globl Function_20a4340
Function_20a4340: @ 20a4340 :arm
	stmfd   sp!, {r3-r6,lr}
	sub     sp, sp, #0x34
	mov     r6, r0
	add     r0, sp, #0x0
	bl      OS_GetLowEntropyData
	mov     r3, #0x1
	add     r2, sp, #0x0
branch_20a435c: @ 20a435c :arm
	add     r0, r2, r3, lsl #2
	ldr     r1, [r2, r3, lsl #0x2]
	ldr     r0, [r0, #-0x4]
	eor     r0, r1, r0
	str     r0, [r2, r3, lsl #0x2]
	add     r3, r3, #0x1
	cmp     r3, #0x8
	blo     branch_20a435c
	add     r0, sp, #0x20
	ldr     r5, [sp, #0x1c]
	mov     r4, #0x0
	bl      Function_20a3e4c
	ldr     r0, [sp, #0x30]
	cmp     r0, #0x0
	beq     branch_20a43ac
	ldr     r1, [sp, #0x20]
	ldr     r2, [sp, #0x24]
	mov     r0, r6
	bl      Function_20a3fc4
	b       branch_20a43bc

branch_20a43ac: @ 20a43ac :arm
	ldr     r1, [sp, #0x28]
	ldr     r2, [sp, #0x2c]
	mov     r0, r6
	bl      Function_20a3fc4
branch_20a43bc: @ 20a43bc :arm
	ldr     r0, [pc, #0x34] @ [0x20a43f8] (=0x6c078965)
	ldr     r1, [pc, #0x34] @ [0x20a43fc] (=0x5d588b65)
	umull   r3, r2, r5, r0
	mla     r2, r5, r1, r2
	ldr     r1, [pc, #0x2c] @ [0x20a4400] (=0x269ec3)
	mla     r2, r4, r0, r2
	adds    r0, r3, r1
	mov     r0, r6
	adc     r1, r2, #0x0
	bl      Function_20a3fec
	mov     r0, r6
	mov     r1, #0x1
	bl      Function_20a4084
	add     sp, sp, #0x34
	ldmfd   sp!, {r3-r6,pc}
@ 0x20a43f8

.word 0x6c078965 @ 0x20a43f8
.word 0x5d588b65 @ 0x20a43fc
.word 0x269ec3 @ 0x20a4400



.arm
.globl Function_20a4404
Function_20a4404: @ 20a4404 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x14
	mov     r4, r0
	add     r0, sp, #0x0
	bl      Function_20a3e4c
	ldr     r0, [sp, #0x10]
	cmp     r0, #0x0
	mov     r0, r4
	beq     branch_20a444c
	bl      Function_20a3f80
	ldr     r2, [sp, #0x4]
	ldr     r3, [sp]
	cmp     r2, r1
	cmpeq   r3, r0
	moveq   r0, #0x1
	add     sp, sp, #0x14
	movne   r0, #0x0
	ldmfd   sp!, {r3,r4,pc}

branch_20a444c: @ 20a444c :arm
	bl      Function_20a3f80
	ldr     r2, [sp, #0xc]
	ldr     r3, [sp, #0x8]
	cmp     r2, r1
	cmpeq   r3, r0
	moveq   r0, #0x1
	movne   r0, #0x0
	add     sp, sp, #0x14
	ldmfd   sp!, {r3,r4,pc}
@ 0x20a4470


.arm
.globl Function_20a4470
Function_20a4470: @ 20a4470 :arm
	stmfd   sp!, {r3,lr}
	bl      Function_20a4018
	cmp     r0, #0x1
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20a4488


.arm
.globl Function_20a4488
Function_20a4488: @ 20a4488 :arm
	ldr     r12, [pc, #0x4] @ [0x20a4494] (=Function_20a4470)
	add     r0, r0, #0x10
	bx      r12
@ 0x20a4494

.word Function_20a4470 @ 0x20a4494



.arm
Function_20a4498: @ 20a4498 :arm
	stmfd   sp!, {r3,lr}
	bl      Function_20a4018
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20a44b0


.arm
.globl Function_20a44b0
Function_20a44b0: @ 20a44b0 :arm
	ldr     r12, [pc, #0x0] @ [0x20a44b8] (=0x20a4498)
	bx      r12
@ 0x20a44b8

.word Function_20a4498 @ =0x20a4498, 0x20a44b8



.arm
Function_20a44bc: @ 20a44bc :arm
	ldr     r12, [pc, #0x0] @ [0x20a44c4] (=0x20a42c4)
	bx      r12
@ 0x20a44c4

.word Function_20a42c4 @ 0x20a44c4



.arm
.globl Function_20a44c8
Function_20a44c8: @ 20a44c8 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #1, 22 @ #0x400
	ldr     r1, [pc, #0x30] @ [0x20a4508] (=0xedb88320)
	mov     r4, r0
	add     r0, sp, #0x0
	bl      Function_20d3230
	add     r0, sp, #0x0
	mov     r1, r4
	mov     r2, #0x3c
	bl      Function_20d3328
	ldr     r1, [r4, #0x3c]
	cmp     r0, r1
	moveq   r0, #0x1
	movne   r0, #0x0
	add     sp, sp, #1, 22 @ #0x400
	ldmfd   sp!, {r4,pc}
@ 0x20a4508

.word 0xedb88320 @ 0x20a4508


.arm
.globl Function_20a450c
Function_20a450c: @ 20a450c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	add     r0, r4, #0x10
	bl      Function_20a4470
	cmp     r0, #0x0
	beq     branch_20a4534
	ldr     r0, [r4, #0x1c]
	cmp     r0, #0x0
	movgt   r0, #0x1
	ldmgtfd sp!, {r4,pc}
branch_20a4534: @ 20a4534 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4,pc}
@ 0x20a453c


.arm
.globl Function_20a453c
Function_20a453c: @ 20a453c :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x14
	mov     r4, r0
	add     r0, r4, #0x10
	bl      Function_20a4018
	cmp     r0, #0x0
	addeq   sp, sp, #0x14
	moveq   r0, #0x1
	ldmeqfd sp!, {r3,r4,pc}
	add     r0, sp, #0x0
	bl      Function_20a3e4c
	ldr     r0, [sp, #0x10]
	cmp     r0, #0x0
	addeq   sp, sp, #0x14
	moveq   r0, #0x0
	ldmeqfd sp!, {r3,r4,pc}
	add     r0, r4, #0x10
	bl      Function_20a3f80
	ldr     r2, [sp, #0x4]
	ldr     r3, [sp]
	cmp     r2, r1
	cmpeq   r3, r0
	moveq   r0, #0x1
	movne   r0, #0x0
	add     sp, sp, #0x14
	ldmfd   sp!, {r3,r4,pc}
@ 0x20a45a4


.arm
.globl Function_20a45a4
Function_20a45a4: @ 20a45a4 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #1, 22 @ #0x400
	mov     r4, r0
	add     r3, r4, #0x10
	mov     r12, r2
	ldmia   r1, {r0-r2}
	stmia   r3, {r0-r2}
	ldr     r1, [pc, #0x30] @ [0x20a45f8] (=0xedb88320)
	add     r0, sp, #0x0
	str     r12, [r4, #0x1c]
	bl      Function_20d3230
	add     r0, sp, #0x0
	mov     r1, r4
	mov     r2, #0x3c
	bl      Function_20d3328
	str     r0, [r4, #0x3c]
	ldr     r0, [r4, #0x20]
	orr     r0, r0, #0x1
	str     r0, [r4, #0x20]
	add     sp, sp, #1, 22 @ #0x400
	ldmfd   sp!, {r4,pc}
@ 0x20a45f8

.word 0xedb88320 @ 0x20a45f8



.arm
.globl Function_20a45fc
Function_20a45fc: @ 20a45fc :arm
	ldr     r12, [pc, #0x0] @ [0x20a4604] (=Function_20a4608)
	bx      r12
@ 0x20a4604

.word Function_20a4608 @ 0x20a4604



.arm
Function_20a4608: @ 20a4608 :arm
	ldr     r0, [r0, #0x20]
	and     r0, r0, #0x1
	cmp     r0, #0x1
	moveq   r0, #0x1
	movne   r0, #0x0
	bx      lr
@ 0x20a4620


.arm
.globl Function_20a4620
Function_20a4620: @ 20a4620 :arm
	ldr     r12, [pc, #0x0] @ [0x20a4628] (=Function_20a462c)
	bx      r12
@ 0x20a4628

.word Function_20a462c @ 0x20a4628



.arm
Function_20a462c: @ 20a462c :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #1, 22 @ #0x400
	mov     r4, r0
	ldr     r1, [r4, #0x20]
	add     r0, sp, #0x0
	bic     r2, r1, #0x1
	ldr     r1, [pc, #0x20] @ [0x20a466c] (=0xedb88320)
	str     r2, [r4, #0x20]
	bl      Function_20d3230
	add     r0, sp, #0x0
	mov     r1, r4
	mov     r2, #0x3c
	bl      Function_20d3328
	str     r0, [r4, #0x3c]
	add     sp, sp, #1, 22 @ #0x400
	ldmfd   sp!, {r4,pc}
@ 0x20a466c

.word 0xedb88320 @ 0x20a466c



.arm
.globl Function_20a4670
Function_20a4670: @ 20a4670 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20a4018
	cmp     r0, #0x2
	movne   r0, #0x0
	movne   r1, r0
	ldmnefd sp!, {r4,pc}

	mov     r0, r4
	bl      Function_20a3fa8
	ldmfd   sp!, {r4,pc}
@ 0x20a4698


.arm
.globl Function_20a4698
Function_20a4698: @ 20a4698 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r4, r1
	mov     r6, r0
	mov     r0, r4
	bl      Function_20a4018
	cmp     r0, #0x1
	beq     branch_20a470c
	cmp     r0, #0x2
	beq     branch_20a46c8
	cmp     r0, #0x3
	beq     branch_20a4700
	b       branch_20a4714
@ 0x20a46c8

.arm
branch_20a46c8: @ 20a46c8 :arm
	mov     r0, r4
	bl      Function_20a3fa8
	ldr     r2, [r6, #0x24]
	mov     r4, r0
	mov     r5, r1
	bl      Function_20a4134
	cmp     r0, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4-r6,pc}
	ldr     r2, [r6, #0x24]
	mov     r0, r4
	mov     r1, r5
	bl      Function_20a41a4
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a4700

.arm
branch_20a4700: @ 20a4700 :arm
	mov     r0, r4
	bl      Function_20a3fbc
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a470c

.arm
branch_20a470c: @ 20a470c :arm
	mvn     r0, #0x0
	ldmfd   sp!, {r4-r6,pc}

branch_20a4714: @ 20a4714 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a471c


.arm
.globl Function_20a471c
Function_20a471c: @ 20a471c :arm
	stmfd   sp!, {r3,lr}
	mov     r3, r0
	ldr     r0, [r3, #0x1c]
	mov     r2, #0x0
	mov     r1, r2
	cmp     r0, #0x0
	beq     branch_20a4744
	ldr     r1, [r3, #0x24]
	bl      Function_20a40d4
	mov     r2, r0
branch_20a4744: @ 20a4744 :arm
	mov     r0, r2
	ldmfd   sp!, {r3,pc}
@ 0x20a474c


.arm
.globl Function_20a474c
Function_20a474c: @ 20a474c :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r5, r1
	mov     r4, r2
	mov     r6, r0
	mov     r1, #0x0
	mov     r2, #0xc
	bl      MI_CpuFill8
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      Function_20a3ff4
	mov     r0, r6
	mov     r1, #0x2
	bl      Function_20a4084
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a4788


.arm
.globl Function_20a4788
Function_20a4788: @ 20a4788 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r1
	mov     r5, r0
	mov     r0, r4
	mov     r1, #0x0
	mov     r2, #0xc
	bl      MI_CpuFill8
	mov     r0, r5
	bl      Function_20a4488
	cmp     r0, #0x0
	addeq   r0, r5, #0x4
	ldmeqia r0, {r0-r2}
	stmeqia r4, {r0-r2}
	ldmeqfd sp!, {r3-r5,pc}
	ldr     r1, [r5, #0x1c]
	mov     r0, r4
	bl      Function_20a3ffc
	mov     r0, r4
	mov     r1, #0x3
	bl      Function_20a4084
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a47dc


.arm
.globl Function_20a47dc
Function_20a47dc: @ 20a47dc :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r1
	mov     r5, r0
	mov     r1, #0x0
	mov     r2, #0xc
	bl      MI_CpuFill8
	mov     r0, r5
	mov     r1, r4
	bl      Function_20a3ffc
	mov     r0, r5
	mov     r1, #0x3
	bl      Function_20a4084
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a4810


.arm
.globl Function_20a4810
Function_20a4810: @ 20a4810 :arm
	ldr     r12, [pc, #0xc] @ [0x20a4824] (=0x20a4234)
	mov     r3, r0
	mov     r0, r1
	ldr     r1, [r3, #0x24]
	bx      r12
@ 0x20a4824

.word Function_20a4234 @ =0x20a4234, 0x20a4824



.arm
Function_20a4828: @ 20a4828 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r4, r1
	mov     r7, r0
	bl      Function_20a4018
	mov     r5, r0
	mov     r0, r4
	bl      Function_20a4018
	cmp     r5, r0
	movne   r0, #0x0
	ldmnefd sp!, {r3-r7,pc}
	cmp     r5, #0x3
	bne     branch_20a487c
	mov     r0, r7
	bl      Function_20a3fbc
	mov     r5, r0
	mov     r0, r4
	bl      Function_20a3fbc
	cmp     r5, r0
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r3-r7,pc}

branch_20a487c: @ 20a487c :arm
	cmp     r5, #0x1
	bne     branch_20a48d0
	mov     r0, r7
	bl      Function_20a3f80
	mov     r5, r0
	mov     r6, r1
	mov     r0, r4
	bl      Function_20a3f80
	cmp     r6, r1
	cmpeq   r5, r0
	bne     branch_20a48c8
	mov     r0, r7
	bl      Function_20a3fa0
	mov     r5, r0
	mov     r0, r4
	bl      Function_20a3fa0
	cmp     r5, r0
	moveq   r0, #0x1
	ldmeqfd sp!, {r3-r7,pc}
branch_20a48c8: @ 20a48c8 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r7,pc}

branch_20a48d0: @ 20a48d0 :arm
	cmp     r5, #0x2
	bne     branch_20a4904
	mov     r0, r7
	bl      Function_20a3fa8
	mov     r5, r0
	mov     r6, r1
	mov     r0, r4
	bl      Function_20a3fa8
	cmp     r6, r1
	cmpeq   r5, r0
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r3-r7,pc}

branch_20a4904: @ 20a4904 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r7,pc}
@ 0x20a490c


.arm
.globl Function_20a490c
Function_20a490c: @ 20a490c :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r3, #0x0
	str     r3, [r0]
	cmp     r2, #0x10
	str     r3, [r0, #0x4]
	movhi   r2, #0x10
	add     r0, r0, #0x8
branch_20a4928: @ 20a4928 :arm
	str     r3, [r0, r3, lsl #0x2]
	add     r3, r3, #0x1
	cmp     r3, #1, 24 @ #0x100
	blt     branch_20a4928
	mov     r5, #0x0
	mov     r6, r5
	mov     lr, r5
	mov     r12, r5
.arm
branch_20a4948: @ 20a4948 :arm
	ldrb    r3, [r1, r6]
	ldr     r4, [r0, lr, lsl #0x2]
	add     r6, r6, #0x1
	add     r3, r4, r3
	add     r3, r5, r3
	and     r5, r3, #0xff
	ldr     r3, [r0, r5, lsl #0x2]
	cmp     r6, r2
	str     r3, [r0, lr, lsl #0x2]
	add     lr, lr, #0x1
	moveq   r6, r12
	str     r4, [r0, r5, lsl #0x2]
	cmp     lr, #1, 24 @ #0x100
	blt     branch_20a4948
	mov     r2, #0x0
.arm
branch_20a4984: @ 20a4984 :arm
	ldr     r1, [r0, r2, lsl #0x2]
	mov     r1, r1, lsl #24
	str     r1, [r0, r2, lsl #0x2]
	add     r2, r2, #0x1
	cmp     r2, #1, 24 @ #0x100
	blt     branch_20a4984
	ldmfd   sp!, {r4-r6,lr}
	bx      lr
@ 0x20a49a4

.arm
.globl Function_20a49a4
Function_20a49a4: @ 20a49a4 :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0x4
	mov     r3, #0x0
	strb    r3, [r0]
	cmp     r2, #0x10
	strb    r3, [r0, #0x1]
	movhi   r2, #0x10
	add     r0, r0, #0x4
.arm
branch_20a49c4: @ 20a49c4 :arm
	strb    r3, [r0, r3]
	add     r3, r3, #0x1
	cmp     r3, #1, 24 @ #0x100
	blt     branch_20a49c4
	mov     r6, #0x0
	mov     r7, r6
	mov     r4, r6
	mov     r3, r6
	and     r12, r2, #0xff
.arm
branch_20a49e8: @ 20a49e8 :arm
	ldrb    r5, [r0, r4]
	ldrb    lr, [r1, r7]
	add     r2, r7, #0x1
	and     r7, r2, #0xff
	add     r2, r5, lr
	add     r2, r6, r2
	and     r6, r2, #0xff
	ldrb    r2, [r0, r6]
	add     lr, r0, r4
	add     r4, r4, #0x1
	strb    r2, [lr]
	cmp     r7, r12
	moveq   r7, r3
	cmp     r4, #1, 24 @ #0x100
	strb    r5, [r0, r6]
	blt     branch_20a49e8
	add     sp, sp, #0x4
	ldmfd   sp!, {r4-r7,lr}
	bx      lr
@ 0x20a4a34


.arm
.globl Function_20a4a34
Function_20a4a34: @ 20a4a34 :arm
	stmfd   sp!, {r4-r9,lr}
	ldr     r7, [r0]
	ldr     r6, [r0, #0x4]
	add     r0, r0, #0x8
	mov     lr, #1, 8 @ #0x1000000
	add     r7, r7, lr
	subs    r2, r2, #0x8
	ldr     r9, [r0, r7, lsr #0x16]
	bmi     branch_20a4bc0
.arm
branch_20a4a58: @ 20a4a58 :arm
	add     r6, r6, r9
	ldr     r8, [r0, r6, lsr #0x16]
	ldrb    r5, [r1], #0x1
	str     r8, [r0, r7, lsr #0x16]
	str     r9, [r0, r6, lsr #0x16]
	add     r4, r9, r8
	add     r7, r7, lr
	ldr     r4, [r0, r4, lsr #0x16]
	ldr     r9, [r0, r7, lsr #0x16]
	eor     r5, r5, r4, lsr #24
	strb    r5, [r3], #0x1
	add     r6, r6, r9
	ldr     r8, [r0, r6, lsr #0x16]
	ldrb    r5, [r1], #0x1
	str     r8, [r0, r7, lsr #0x16]
	str     r9, [r0, r6, lsr #0x16]
	add     r4, r9, r8
	add     r7, r7, lr
	ldr     r4, [r0, r4, lsr #0x16]
	ldr     r9, [r0, r7, lsr #0x16]
	eor     r5, r5, r4, lsr #24
	strb    r5, [r3], #0x1
	add     r6, r6, r9
	ldr     r8, [r0, r6, lsr #0x16]
	ldrb    r5, [r1], #0x1
	str     r8, [r0, r7, lsr #0x16]
	str     r9, [r0, r6, lsr #0x16]
	add     r4, r9, r8
	add     r7, r7, lr
	ldr     r4, [r0, r4, lsr #0x16]
	ldr     r9, [r0, r7, lsr #0x16]
	eor     r5, r5, r4, lsr #24
	strb    r5, [r3], #0x1
	add     r6, r6, r9
	ldr     r8, [r0, r6, lsr #0x16]
	ldrb    r5, [r1], #0x1
	str     r8, [r0, r7, lsr #0x16]
	str     r9, [r0, r6, lsr #0x16]
	add     r4, r9, r8
	add     r7, r7, lr
	ldr     r4, [r0, r4, lsr #0x16]
	ldr     r9, [r0, r7, lsr #0x16]
	eor     r5, r5, r4, lsr #24
	strb    r5, [r3], #0x1
	add     r6, r6, r9
	ldr     r8, [r0, r6, lsr #0x16]
	ldrb    r5, [r1], #0x1
	str     r8, [r0, r7, lsr #0x16]
	str     r9, [r0, r6, lsr #0x16]
	add     r4, r9, r8
	add     r7, r7, lr
	ldr     r4, [r0, r4, lsr #0x16]
	ldr     r9, [r0, r7, lsr #0x16]
	eor     r5, r5, r4, lsr #24
	strb    r5, [r3], #0x1
	add     r6, r6, r9
	ldr     r8, [r0, r6, lsr #0x16]
	ldrb    r5, [r1], #0x1
	str     r8, [r0, r7, lsr #0x16]
	str     r9, [r0, r6, lsr #0x16]
	add     r4, r9, r8
	add     r7, r7, lr
	ldr     r4, [r0, r4, lsr #0x16]
	ldr     r9, [r0, r7, lsr #0x16]
	eor     r5, r5, r4, lsr #24
	strb    r5, [r3], #0x1
	add     r6, r6, r9
	ldr     r8, [r0, r6, lsr #0x16]
	ldrb    r5, [r1], #0x1
	str     r8, [r0, r7, lsr #0x16]
	str     r9, [r0, r6, lsr #0x16]
	add     r4, r9, r8
	add     r7, r7, lr
	ldr     r4, [r0, r4, lsr #0x16]
	ldr     r9, [r0, r7, lsr #0x16]
	eor     r5, r5, r4, lsr #24
	strb    r5, [r3], #0x1
	add     r6, r6, r9
	subs    r2, r2, #0x8
	ldr     r8, [r0, r6, lsr #0x16]
	ldrb    r5, [r1], #0x1
	str     r8, [r0, r7, lsr #0x16]
	str     r9, [r0, r6, lsr #0x16]
	add     r4, r9, r8
	add     r7, r7, lr
	ldr     r4, [r0, r4, lsr #0x16]
	ldr     r9, [r0, r7, lsr #0x16]
	eor     r5, r5, r4, lsr #24
	strb    r5, [r3], #0x1
	bpl     branch_20a4a58
.arm
branch_20a4bc0: @ 20a4bc0 :arm
	adds    r2, r2, #0x8
	ble     branch_20a4bfc
branch_20a4bc8: @ 20a4bc8 :arm
	add     r6, r6, r9
	subs    r2, r2, #0x1
	ldr     r8, [r0, r6, lsr #0x16]
	ldrb    r5, [r1], #0x1
	str     r8, [r0, r7, lsr #0x16]
	str     r9, [r0, r6, lsr #0x16]
	add     r4, r9, r8
	add     r7, r7, lr
	ldr     r4, [r0, r4, lsr #0x16]
	ldr     r9, [r0, r7, lsr #0x16]
	eor     r5, r5, r4, lsr #24
	strb    r5, [r3], #0x1
	bgt     branch_20a4bc8
branch_20a4bfc: @ 20a4bfc :arm
	sub     r7, r7, lr
	and     r7, r7, #255, 8 @ #0xff000000
	str     r6, [r0, #-0x4]
	str     r7, [r0, #-0x8]
	ldmfd   sp!, {r4-r9,pc}
@ 0x20a4c10


.arm
Function_20a4c10: @ 20a4c10 :arm
	mov     r2, #0x0
	str     r2, [r0]
	str     r2, [r0, #0x4]
	strh    r2, [r0, #0x8]
	strh    r1, [r0, #0xa]
	bx      lr
@ 0x20a4c28

.arm
Function_20a4c28: @ 20a4c28 :arm
	ldrh    r3, [r0, #0xa]
	mov     r2, #0x0
	add     r12, r1, r3
	str     r2, [r12, #0x4]
	str     r2, [r1, r3]
	str     r1, [r0]
	str     r1, [r0, #0x4]
	ldrh    r1, [r0, #0x8]
	add     r1, r1, #0x1
	strh    r1, [r0, #0x8]
	bx      lr
@ 0x20a4c54

.arm
Function_20a4c54: @ 20a4c54 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [r0]
	cmp     r2, #0x0
	bne     branch_20a4c6c
	bl      Function_20a4c28
	ldmfd   sp!, {r3,pc}
@ 0x20a4c6c

.arm
branch_20a4c6c: @ 20a4c6c :arm
	ldrh    r12, [r0, #0xa]
	ldr     r3, [r0, #0x4]
	mov     r2, #0x0
	str     r3, [r1, r12]
	add     r3, r1, r12
	str     r2, [r3, #0x4]
	ldrh    r2, [r0, #0xa]
	ldr     r3, [r0, #0x4]
	add     r2, r3, r2
	str     r1, [r2, #0x4]
	str     r1, [r0, #0x4]
	ldrh    r1, [r0, #0x8]
	add     r1, r1, #0x1
	strh    r1, [r0, #0x8]
	ldmfd   sp!, {r3,pc}
@ 0x20a4ca8


.arm
Function_20a4ca8: @ 20a4ca8 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [r0]
	cmp     r2, #0x0
	bne     branch_20a4cc0
	bl      Function_20a4c28
	ldmfd   sp!, {r3,pc}

branch_20a4cc0: @ 20a4cc0 :arm
	ldrh    r3, [r0, #0xa]
	mov     r2, #0x0
	str     r2, [r1, r3]
	ldr     r2, [r0]
	add     r3, r1, r3
	str     r2, [r3, #0x4]
	ldrh    r2, [r0, #0xa]
	ldr     r3, [r0]
	str     r1, [r3, r2]
	str     r1, [r0]
	ldrh    r1, [r0, #0x8]
	add     r1, r1, #0x1
	strh    r1, [r0, #0x8]
	ldmfd   sp!, {r3,pc}
@ 0x20a4cf8

.arm
Function_20a4cf8: @ 20a4cf8 :arm
	stmfd   sp!, {r3,lr}
	cmp     r1, #0x0
	bne     branch_20a4d10
	mov     r1, r2
	bl      Function_20a4c54
	ldmfd   sp!, {r3,pc}
@ 0x20a4d10

.arm
branch_20a4d10: @ 20a4d10 :arm
	ldr     r3, [r0]
	cmp     r1, r3
	bne     branch_20a4d28
	mov     r1, r2
	bl      Function_20a4ca8
	ldmfd   sp!, {r3,pc}
@ 0x20a4d28

.arm
branch_20a4d28: @ 20a4d28 :arm
	ldrh    lr, [r0, #0xa]
	ldr     r3, [r1, lr]
	add     r12, r2, lr
	str     r3, [r2, lr]
	str     r1, [r12, #0x4]
	add     r3, r3, lr
	str     r2, [r3, #0x4]
	ldrh    r3, [r0, #0xa]
	str     r2, [r1, r3]
	ldrh    r1, [r0, #0x8]
	add     r1, r1, #0x1
	strh    r1, [r0, #0x8]
	ldmfd   sp!, {r3,pc}
@ 0x20a4d5c

.arm
Function_20a4d5c: @ 20a4d5c :arm
	stmfd   sp!, {r3,lr}
	ldrh    r12, [r0, #0xa]
	ldr     r3, [r1, r12]
	add     lr, r1, r12
	cmp     r3, #0x0
	ldreq   r1, [lr, #0x4]
	streq   r1, [r0]
	ldrne   r2, [lr, #0x4]
	addne   r1, r3, r12
	strne   r2, [r1, #0x4]
	ldr     r3, [lr, #0x4]
	cmp     r3, #0x0
	ldreq   r1, [lr]
	streq   r1, [r0, #0x4]
	ldrneh  r1, [r0, #0xa]
	ldrne   r2, [lr]
	strne   r2, [r3, r1]
	mov     r1, #0x0
	str     r1, [lr]
	str     r1, [lr, #0x4]
	ldrh    r1, [r0, #0x8]
	sub     r1, r1, #0x1
	strh    r1, [r0, #0x8]
	ldmfd   sp!, {r3,pc}
@ 0x20a4dbc

.arm
Function_20a4dbc: @ 20a4dbc :arm
	cmp     r1, #0x0
	ldreq   r0, [r0]
	ldrneh  r0, [r0, #0xa]
	addne   r0, r1, r0
	ldrne   r0, [r0, #0x4]
	bx      lr
@ 0x20a4dd4

.arm
Function_20a4dd4: @ 20a4dd4 :arm
	cmp     r1, #0x0
	ldreq   r0, [r0, #0x4]
	ldrneh  r0, [r0, #0xa]
	ldrne   r0, [r1, r0]
	bx      lr
@ 0x20a4de8

.arm
Function_20a4de8: @ 20a4de8 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r5, r1
	mov     r1, #0x0
	mov     r6, r0
	bl      Function_20a4dbc
	movs    r4, r0
	beq     branch_20a4e48
.arm
branch_20a4e04: @ 20a4e04 :arm
	ldr     r0, [r4, #0x18]
	cmp     r0, r5
	bhi     branch_20a4e34
	ldr     r0, [r4, #0x1c]
	cmp     r5, r0
	bhs     branch_20a4e34
	mov     r1, r5
	add     r0, r4, #0xc
	bl      Function_20a4de8
	cmp     r0, #0x0
	moveq   r0, r4
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a4e34

.arm
branch_20a4e34: @ 20a4e34 :arm
	mov     r0, r6
	mov     r1, r4
	bl      Function_20a4dbc
	movs    r4, r0
	bne     branch_20a4e04
.arm
branch_20a4e48: @ 20a4e48 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a4e50

.arm
Function_20a4e50: @ 20a4e50 :arm
	stmfd   sp!, {r4,lr}
	ldr     r4, [pc, #0x18] @ [0x20a4e74] (=RAM_21c3aa4)
	mov     r1, r0
	mov     r0, r4
	bl      Function_20a4de8
	cmp     r0, #0x0
	addne   r4, r0, #0xc
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20a4e74

.word RAM_21c3aa4 @ 0x20a4e74



.arm
Function_20a4e78: @ 20a4e78 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldrh    r0, [sp, #0x8]
	str     r1, [r4]
	mov     r12, #0x0
	str     r2, [r4, #0x18]
	bic     r1, r12, #0xff
	and     r0, r0, #0xff
	orr     r2, r1, r0
	str     r3, [r4, #0x1c]
	add     r0, r4, #0xc
	mov     r1, #0x4
	str     r2, [r4, #0x20]
	bl      Function_20a4c10
	ldr     r0, [pc, #0x34] @ [0x20a4eec] (=RAM_21c3aa0)
	ldr     r0, [r0]
	cmp     r0, #0x0
	bne     branch_20a4ed8
	ldr     r0, [pc, #0x28] @ [0x20a4ef0] (=RAM_21c3aa4)
	mov     r1, #0x4
	bl      Function_20a4c10
	ldr     r0, [pc, #0x18] @ [0x20a4eec] (=RAM_21c3aa0)
	mov     r1, #0x1
	str     r1, [r0]
.arm
branch_20a4ed8: @ 20a4ed8 :arm
	mov     r0, r4
	bl      Function_20a4e50
	mov     r1, r4
	bl      Function_20a4c54
	ldmfd   sp!, {r4,pc}
@ 0x20a4eec

.word RAM_21c3aa0 @ 0x20a4eec
.word RAM_21c3aa4 @ 0x20a4ef0



.arm
Function_20a4ef4: @ 20a4ef4 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20a4e50
	mov     r1, r4
	bl      Function_20a4d5c
	ldmfd   sp!, {r4,pc}
@ 0x20a4f0c

.arm
Function_20a4f0c: @ 20a4f0c :arm
	ldrh    r2, [r1, #0x2]
	add     r3, r1, #0x10
	mov     r2, r2, asr #8
	and     r2, r2, #0x7f
	mov     r2, r2, lsl #16
	sub     r2, r1, r2, lsr #16
	str     r2, [r0]
	ldr     r1, [r1, #0x4]
	add     r1, r1, r3
	str     r1, [r0, #0x4]
	bx      lr
@ 0x20a4f38

.arm
Function_20a4f38: @ 20a4f38 :arm
	ldr     r2, [r1, #0x8]
	ldr     r1, [r1, #0xc]
	cmp     r2, #0x0
	strne   r1, [r2, #0xc]
	streq   r1, [r0]
	cmp     r1, #0x0
	strne   r2, [r1, #0x8]
	streq   r2, [r0, #0x4]
	mov     r0, r2
	bx      lr
@ 0x20a4f60

.arm
Function_20a4f60: @ 20a4f60 :arm
	str     r2, [r1, #0x8]
	cmp     r2, #0x0
	ldrne   r3, [r2, #0xc]
	strne   r1, [r2, #0xc]
	ldreq   r3, [r0]
	streq   r1, [r0]
	str     r3, [r1, #0xc]
	cmp     r3, #0x0
	strne   r1, [r3, #0x8]
	streq   r1, [r0, #0x4]
	mov     r0, r1
	bx      lr
@ 0x20a4f90

.arm
Function_20a4f90: @ 20a4f90 :arm
	ldr     r3, [r0]
	mov     r2, #0x0
	strh    r1, [r3]
	strh    r2, [r3, #0x2]
	ldr     r1, [r0, #0x4]
	add     r0, r3, #0x10
	sub     r0, r1, r0
	stmib   r3, {r0,r2}
	mov     r0, r3
	str     r2, [r3, #0xc]
	bx      lr
@ 0x20a4fbc

.arm
Function_20a4fbc: @ 20a4fbc :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0xc
	mov     r3, r1
	mov     r4, r0
	str     r2, [sp]
	ldr     r1, [pc, #0x50] @ [0x20a5028] (=0x45585048)
	add     r2, r4, #0x38
	bl      Function_20a4e78
	mov     r0, #0x0
	strh    r0, [r4, #0x34]
	bic     r0, r0, #0x1
	strh    r0, [r4, #0x36]
	ldr     r1, [r4, #0x18]
	add     r0, sp, #0x4
	str     r1, [sp, #0x4]
	ldr     r2, [r4, #0x1c]
	ldr     r1, [pc, #0x28] @ [0x20a502c] (=0x4652)
	str     r2, [sp, #0x8]
	bl      Function_20a4f90
	str     r0, [r4, #0x24]
	str     r0, [r4, #0x28]
	mov     r1, #0x0
	str     r1, [r4, #0x2c]
	mov     r0, r4
	str     r1, [r4, #0x30]
	add     sp, sp, #0xc
	ldmfd   sp!, {r3,r4,pc}
@ 0x20a5028

.word 0x45585048 @ 0x20a5028
.word 0x4652 @ 0x20a502c



.arm
Function_20a5030: @ 20a5030 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x18
	mov     r7, r0
	add     r0, sp, #0x10
	mov     r8, r1
	mov     r6, r2
	mov     r4, r3
	bl      Function_20a4f0c
	ldr     r3, [sp, #0x14]
	sub     r5, r6, #0x10
	add     r2, r4, r6
	mov     r0, r7
	mov     r1, r8
	str     r5, [sp, #0x14]
	str     r3, [sp, #0xc]
	str     r2, [sp, #0x8]
	bl      Function_20a4f38
	ldr     r2, [sp, #0x10]
	ldr     r1, [sp, #0x14]
	mov     r4, r0
	sub     r0, r1, r2
	cmp     r0, #0x14
	strcc   r2, [sp, #0x14]
	blo     branch_20a50b0
	ldr     r1, [pc, #0x110] @ [0x20a51a8] (=0x4652)
	add     r0, sp, #0x10
	bl      Function_20a4f90
	mov     r1, r0
	mov     r0, r7
	mov     r2, r4
	bl      Function_20a4f60
	mov     r4, r0
branch_20a50b0: @ 20a50b0 :arm
	ldr     r1, [sp, #0xc]
	ldr     r0, [sp, #0x8]
	sub     r0, r1, r0
	cmp     r0, #0x14
	strcc   r1, [sp, #0x8]
	blo     branch_20a50e4
	ldr     r1, [pc, #0xd8] @ [0x20a51a8] (=0x4652)
	add     r0, sp, #0x8
	bl      Function_20a4f90
	mov     r1, r0
	mov     r0, r7
	mov     r2, r4
	bl      Function_20a4f60
branch_20a50e4: @ 20a50e4 :arm
	ldr     r0, [r7, #-0x4]
	ldr     r1, [sp, #0x14]
	ldr     r2, [sp, #0x8]
	and     r0, r0, #0xff
	tst     r0, #0x1
	sub     r2, r2, r1
	beq     branch_20a5108
	mov     r0, #0x0
	bl      MIi_CpuClear32
branch_20a5108: @ 20a5108 :arm

	ldr     r2, [sp, #0x8]
	ldr     r1, [pc, #0x98] @ [0x20a51ac] (=0x5544)
	add     r0, sp, #0x0
	str     r5, [sp]
	str     r2, [sp, #0x4]
	bl      Function_20a4f90
	mov     r1, r0
	ldrh    r3, [r1, #0x2]
	ldrh    r2, [sp, #0x30]
	add     r0, r7, #0x8
	bic     r3, r3, #2, 18 @ #0x8000
	strh    r3, [r1, #0x2]
	ldrh    r3, [r1, #0x2]
	mov     r2, r2, lsl #31
	orr     r2, r3, r2, lsr #16
	strh    r2, [r1, #0x2]
	ldrh    r2, [r1, #0x2]
	ldr     r3, [sp, #0x14]
	bic     r2, r2, #127, 24 @ #0x7f00
	strh    r2, [r1, #0x2]
	sub     r2, r1, r3
	mov     r2, r2, lsl #16
	mov     r2, r2, lsr #16
	ldrh    r3, [r1, #0x2]
	mov     r2, r2, lsl #25
	orr     r2, r3, r2, lsr #17
	strh    r2, [r1, #0x2]
	ldrh    r2, [r1, #0x2]
	ldrh    r3, [r7, #0x10]
	bic     r2, r2, #0xff
	strh    r2, [r1, #0x2]
	ldrh    r2, [r1, #0x2]
	and     r3, r3, #0xff
	orr     r2, r2, r3
	strh    r2, [r1, #0x2]
	ldr     r2, [r7, #0xc]
	bl      Function_20a4f60
	mov     r0, r6
	add     sp, sp, #0x18
	ldmfd   sp!, {r4-r8,pc}
@ 0x20a51a8

.word 0x4652 @ 0x20a51a8
.word 0x5544 @ 0x20a51ac


/* called by subfunctions of malloc
Input:
r1: size

Return:
r0: Ptr to Memory
*/
.arm
Function_20a51b0: @ 20a51b0 :arm
	stmfd   sp!, {r3-r9,lr}
	ldrh    r4, [r0, #0x36]
	mov     r3, r1
	ldr     r12, [r0, #0x24]
	and     r1, r4, #0x1
	mov     r1, r1, lsl #16
	movs    r1, r1, lsr #16
	mov     r1, #0x0
	moveq   r6, #0x1
	movne   r6, #0x0
	mov     r4, r1
	cmp     r12, #0x0
	sub     lr, r1, #0x1
	beq     branch_20a5240

	sub     r2, r2, #0x1
	mvn     r5, r2
branch_20a51f0: @ 20a51f0 :arm
	add     r8, r12, #0x10
	add     r7, r2, r8
	and     r9, r5, r7
	sub     r7, r9, r8
	ldr     r8, [r12, #0x4]
	add     r7, r3, r7
	cmp     r8, r7
	blo     branch_20a5234

	cmp     lr, r8
	bls     branch_20a5234

	mov     r1, r12
	mov     lr, r8
	mov     r4, r9
	cmp     r6, #0x0
	bne     branch_20a5240

	cmp     r8, r3
	beq     branch_20a5240

branch_20a5234: @ 20a5234 :arm
	ldr     r12, [r12, #0xc]
	cmp     r12, #0x0
	bne     branch_20a51f0

branch_20a5240: @ 20a5240 :arm
	cmp     r1, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r9,pc}

	mov     r5, #0x0
	mov     r2, r4
	add     r0, r0, #0x24
	str     r5, [sp]
	bl      Function_20a5030
	ldmfd   sp!, {r3-r9,pc}
@ 0x20a5264


.arm
Function_20a5264: @ 20a5264 :arm
	stmfd   sp!, {r3-r9,lr}
	ldrh    r4, [r0, #0x36]
	mov     r3, r1
	ldr     r12, [r0, #0x28]
	and     r1, r4, #0x1
	mov     r1, r1, lsl #16
	movs    r1, r1, lsr #16
	mov     r1, #0x0
	moveq   r5, #0x1
	movne   r5, #0x0
	mov     r4, r1
	cmp     r12, #0x0
	sub     lr, r1, #0x1
	beq     branch_20a52f0
	sub     r2, r2, #0x1
	mvn     r2, r2
branch_20a52a4: @ 20a52a4 :arm
	ldr     r8, [r12, #0x4]
	add     r9, r12, #0x10
	add     r6, r8, r9
	sub     r6, r6, r3
	and     r7, r2, r6
	subs    r6, r7, r9
	bmi     branch_20a52e4
	cmp     lr, r8
	bls     branch_20a52e4
	mov     r1, r12
	mov     lr, r8
	mov     r4, r7
	cmp     r5, #0x0
	bne     branch_20a52f0
	cmp     r8, r3
	beq     branch_20a52f0
branch_20a52e4: @ 20a52e4 :arm
	ldr     r12, [r12, #0x8]
	cmp     r12, #0x0
	bne     branch_20a52a4
branch_20a52f0: @ 20a52f0 :arm
	cmp     r1, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r9,pc}
	mov     r5, #0x1
	mov     r2, r4
	add     r0, r0, #0x24
	str     r5, [sp]
	bl      Function_20a5030
	ldmfd   sp!, {r3-r9,pc}
@ 0x20a5314


.arm
Function_20a5314: @ 20a5314 :arm
	stmfd   sp!, {r4-r6,lr}
	sub     sp, sp, #0x8
	mov     r5, r1
	ldr     r2, [r5]
	ldr     r1, [r5, #0x4]
	mov     r6, r0
	str     r2, [sp]
	str     r1, [sp, #0x4]
	ldr     r1, [r6]
	mov     r4, #0x0
	cmp     r1, #0x0
	beq     branch_20a5388
	ldr     r0, [r5]
branch_20a5348: @ 20a5348 :arm
	cmp     r1, r0
	movcc   r4, r1
	blo     branch_20a537c
	ldr     r0, [r5, #0x4]
	cmp     r1, r0
	bne     branch_20a5388
	ldr     r2, [r1, #0x4]
	add     r0, r1, #0x10
	add     r2, r2, r0
	mov     r0, r6
	str     r2, [sp, #0x4]
	bl      Function_20a4f38
	b       branch_20a5388

branch_20a537c: @ 20a537c :arm
	ldr     r1, [r1, #0xc]
	cmp     r1, #0x0
	bne     branch_20a5348
branch_20a5388: @ 20a5388 :arm
	cmp     r4, #0x0
	beq     branch_20a53bc
	ldr     r2, [r4, #0x4]
	add     r1, r4, #0x10
	ldr     r0, [r5]
	add     r1, r2, r1
	cmp     r1, r0
	bne     branch_20a53bc
	mov     r0, r6
	mov     r1, r4
	str     r4, [sp]
	bl      Function_20a4f38
	mov     r4, r0
branch_20a53bc: @ 20a53bc :arm
	ldr     r1, [sp, #0x4]
	ldr     r0, [sp]
	sub     r0, r1, r0
	cmp     r0, #0x10
	addcc   sp, sp, #0x8
	movcc   r0, #0x0
	ldmccfd sp!, {r4-r6,pc}
	ldr     r1, [pc, #0x20] @ [0x20a5400] (=0x4652)
	add     r0, sp, #0x0
	bl      Function_20a4f90
	mov     r1, r0
	mov     r0, r6
	mov     r2, r4
	bl      Function_20a4f60
	mov     r0, #0x1
	add     sp, sp, #0x8
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a5400

.word 0x4652 @ 0x20a5400



.arm
.globl Function_20a5404
Function_20a5404: @ 20a5404 :arm
	stmfd   sp!, {r3,lr}
	add     r1, r1, r0
	add     r0, r0, #0x3
	bic     r1, r1, #0x3
	bic     r0, r0, #0x3
	cmp     r0, r1
	bhi     branch_20a542c
	sub     r3, r1, r0
	cmp     r3, #0x4c
	bhs     branch_20a5434
branch_20a542c: @ 20a542c :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3,pc}

branch_20a5434: @ 20a5434 :arm
	bl      Function_20a4fbc
	ldmfd   sp!, {r3,pc}
@ 0x20a543c

.arm
.globl Function_20a543c
Function_20a543c: @ 20a543c :arm
	ldr     r12, [pc, #0x0] @ [0x20a5444] (=Function_20a4ef4)
	bx      r12
@ 0x20a5444

.word Function_20a4ef4 @ 0x20a5444



/* called by subfunctions of malloc
Input:
r1: size

Return:
r0: Ptr to Memory
*/
.arm
.globl Function_20a5448
Function_20a5448: @ 20a5448 :arm
	stmfd   sp!, {r3,lr}
	cmp     r1, #0x0
	moveq   r1, #0x1
	add     r1, r1, #0x3
	cmp     r2, #0x0
	bic     r1, r1, #0x3        @ align to multiple of 4
	blt     branch_20a546c
	bl      Function_20a51b0
	ldmfd   sp!, {r3,pc}

branch_20a546c: @ 20a546c :arm
	rsb     r2, r2, #0x0
	bl      Function_20a5264
	ldmfd   sp!, {r3,pc}
@ 0x20a5478


.arm
Function_20a5478: @ 20a5478 :arm
	stmfd   sp!, {r3-r9,lr}
	sub     sp, sp, #0x10
	mov     r4, r1
	mov     r9, r2
	sub     r8, r4, #0x10
	add     r1, r9, #0x3
	ldr     r7, [r8, #0x4]
	bic     r9, r1, #0x3
	cmp     r9, r7
	mov     r5, r0
	addeq   sp, sp, #0x10
	moveq   r0, r9
	ldmeqfd sp!, {r3-r9,pc}

	bls     branch_20a5598

	ldr     r6, [r5, #0x24]
	add     r0, r8, #0x10
	cmp     r6, #0x0
	add     r0, r7, r0
	beq     branch_20a54d4

branch_20a54c4: @ 20a54c4 :arm
	cmp     r6, r0
	ldrne   r6, [r6, #0xc]
	cmpne   r6, #0x0
	bne     branch_20a54c4

branch_20a54d4: @ 20a54d4 :arm
	cmp     r6, #0x0
	beq     branch_20a54f0

	ldr     r0, [r6, #0x4]
	add     r1, r7, #0x10
	add     r0, r1, r0
	cmp     r9, r0
	bls     branch_20a54fc

branch_20a54f0: @ 20a54f0 :arm
	add     sp, sp, #0x10
	mov     r0, #0x0
	ldmfd   sp!, {r3-r9,pc}

branch_20a54fc: @ 20a54fc :arm
	add     r0, sp, #0x8
	mov     r1, r6
	bl      Function_20a4f0c
	mov     r1, r6
	add     r0, r5, #0x24
	bl      Function_20a4f38
	ldr     r2, [sp, #0xc]
	add     r3, r9, r4
	ldr     r6, [sp, #0x8]
	sub     r1, r2, r3
	str     r3, [sp, #0x8]
	cmp     r1, #0x10
	strcc   r2, [sp, #0x8]
	mov     r7, r0
	ldr     r0, [sp, #0x8]
	sub     r0, r0, r4
	str     r0, [r8, #0x4]
	ldr     r1, [sp, #0xc]
	ldr     r0, [sp, #0x8]
	sub     r0, r1, r0
	cmp     r0, #0x10
	blo     branch_20a5570
	ldr     r1, [pc, #0x78] @ [0x20a55d4] (=0x4652)
	add     r0, sp, #0x8
	bl      Function_20a4f90
	mov     r1, r0
	mov     r2, r7
	add     r0, r5, #0x24
	bl      Function_20a4f60
branch_20a5570: @ 20a5570 :arm

	ldr     r0, [r5, #0x20]
	ldr     r1, [sp, #0x8]
	and     r0, r0, #0xff
	tst     r0, #0x1
	sub     r2, r1, r6
	beq     branch_20a55c8

	mov     r1, r6
	mov     r0, #0x0
	bl      MIi_CpuClear32
	b       branch_20a55c8

branch_20a5598: @ 20a5598 :arm
	add     r0, r9, r4
	str     r0, [sp]
	ldr     r1, [r8, #0x4]
	add     r0, r8, #0x10
	add     r0, r1, r0
	str     r0, [sp, #0x4]
	add     r1, sp, #0x0
	add     r0, r5, #0x24
	str     r9, [r8, #0x4]
	bl      Function_20a5314
	cmp     r0, #0x0
	streq   r7, [r8, #0x4]
branch_20a55c8: @ 20a55c8 :arm
	ldr     r0, [r8, #0x4]
	add     sp, sp, #0x10
	ldmfd   sp!, {r3-r9,pc}
@ 0x20a55d4

.word 0x4652 @ 0x20a55d4



.arm
.globl Function_20a55d8
Function_20a55d8: @ 20a55d8 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x8
	sub     r4, r1, #0x10
	mov     r5, r0
	add     r0, sp, #0x0
	mov     r1, r4
	bl      Function_20a4f0c
	mov     r1, r4
	add     r0, r5, #0x2c
	bl      Function_20a4f38
	add     r1, sp, #0x0
	add     r0, r5, #0x24
	bl      Function_20a5314
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a5614


.arm
.globl Function_20a5614
Function_20a5614: @ 20a5614 :arm
	ldr     r2, [r0, #0x24]
	mov     r0, #0x0
	cmp     r2, #0x0
	bxeq    lr
branch_20a5624: @ 20a5624 :arm
	ldr     r1, [r2, #0x4]
	ldr     r2, [r2, #0xc]
	add     r0, r0, r1
	cmp     r2, #0x0
	bne     branch_20a5624
	bx      lr
@ 0x20a563c


.arm
.globl Function_20a563c
Function_20a563c: @ 20a563c :arm
	ldrh    r2, [r0, #0x34]
	strh    r1, [r0, #0x34]
	mov     r0, r2
	bx      lr
@ 0x20a564c


.arm
Function_20a564c_LoadSub0xc: @ 20a564c :arm
	ldr     r0, [r0, #-0xc]
	bx      lr
@ 0x20a5654


.arm
.globl Function_20a5654
Function_20a5654: @ 20a5654 :arm
	ldrh    r0, [r0, #-0xe]
	and     r0, r0, #0xff
	bx      lr
@ 0x20a5660


.arm
Function_20a5660: @ 20a5660 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	mov     r3, r1
	mov     r4, r0
	str     r2, [sp]
	ldr     r1, [pc, #0x28] @ [0x20a56a4] (=0x46524d48)
	add     r2, r4, #0x30
	bl      Function_20a4e78
	ldr     r0, [r4, #0x18]
	mov     r1, #0x0
	str     r0, [r4, #0x24]
	ldr     r2, [r4, #0x1c]
	mov     r0, r4
	str     r2, [r4, #0x28]
	str     r1, [r4, #0x2c]
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,pc}
@ 0x20a56a4

.word 0x46524d48 @ 0x20a56a4



.arm
Function_20a56a8: @ 20a56a8 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r4, r0
	ldr     r3, [r4]
	sub     r0, r2, #0x1
	mvn     r2, r0
	add     r0, r0, r3
	and     r5, r2, r0
	ldr     r0, [r4, #0x4]
	add     r6, r1, r5
	cmp     r6, r0
	movhi   r0, #0x0
	ldmhifd sp!, {r4-r6,pc}
	ldr     r0, [r4, #-0x4]
	sub     r2, r6, r3
	and     r0, r0, #0xff
	tst     r0, #0x1
	beq     branch_20a56f8
	mov     r1, r3
	mov     r0, #0x0
	bl      MIi_CpuClear32
branch_20a56f8: @ 20a56f8 :arm
	mov     r0, r5
	str     r6, [r4]
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a5704


.arm
Function_20a5704: @ 20a5704 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	ldr     r3, [r4, #0x4]
	sub     r0, r2, #0x1
	mvn     r2, r0
	sub     r1, r3, r1
	ldr     r0, [r4]
	and     r5, r2, r1
	cmp     r5, r0
	movcc   r0, #0x0
	ldmccfd sp!, {r3-r5,pc}
	ldr     r0, [r4, #-0x4]
	sub     r2, r3, r5
	and     r0, r0, #0xff
	tst     r0, #0x1
	beq     branch_20a5750
	mov     r1, r5
	mov     r0, #0x0
	bl      MIi_CpuClear32
branch_20a5750: @ 20a5750 :arm
	mov     r0, r5
	str     r5, [r4, #0x4]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a575c


.arm
Function_20a575c: @ 20a575c :arm
	ldr     r2, [r0, #0x18]
	mov     r1, #0x0
	str     r2, [r0, #0x24]
	str     r1, [r0, #0x2c]
	bx      lr
@ 0x20a5770


.arm
Function_20a5770: @ 20a5770 :arm
	ldr     r2, [r0, #0x2c]
	cmp     r2, #0x0
	beq     branch_20a5790
branch_20a577c: @ 20a577c :arm
	ldr     r1, [r0, #0x1c]
	str     r1, [r2, #0x8]
	ldr     r2, [r2, #0xc]
	cmp     r2, #0x0
	bne     branch_20a577c
branch_20a5790: @ 20a5790 :arm
	ldr     r1, [r0, #0x1c]
	str     r1, [r0, #0x28]
	bx      lr
@ 0x20a579c


.arm
Function_20a579c: @ 20a579c :arm
	stmfd   sp!, {r3,lr}
	add     r1, r1, r0
	add     r0, r0, #0x3
	bic     r1, r1, #0x3
	bic     r0, r0, #0x3
	cmp     r0, r1
	bhi     branch_20a57c4
	sub     r3, r1, r0
	cmp     r3, #0x30
	bhs     branch_20a57cc
branch_20a57c4: @ 20a57c4 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3,pc}

branch_20a57cc: @ 20a57cc :arm
	bl      Function_20a5660
	ldmfd   sp!, {r3,pc}
@ 0x20a57d4


.arm
Function_20a57d4: @ 20a57d4 :arm
	ldr     r12, [pc, #0x0] @ [0x20a57dc] (=Function_20a4ef4)
	bx      r12
@ 0x20a57dc

.word Function_20a4ef4 @ 0x20a57dc



.arm
Function_20a57e0: @ 20a57e0 :arm
	stmfd   sp!, {r3,lr}
	cmp     r1, #0x0
	moveq   r1, #0x1
	add     r1, r1, #0x3
	cmp     r2, #0x0
	bic     r1, r1, #0x3
	add     r0, r0, #0x24
	blt     branch_20a5808
	bl      Function_20a56a8
	ldmfd   sp!, {r3,pc}

branch_20a5808: @ 20a5808 :arm
	rsb     r2, r2, #0x0
	bl      Function_20a5704
	ldmfd   sp!, {r3,pc}
@ 0x20a5814


.arm
Function_20a5814: @ 20a5814 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r1
	mov     r5, r0
	tst     r4, #0x1
	beq     branch_20a582c
	bl      Function_20a575c
branch_20a582c: @ 20a582c :arm
	tst     r4, #0x2
	ldmeqfd sp!, {r3-r5,pc}
	mov     r0, r5
	bl      Function_20a5770
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a5840


.arm
Function_20a5840: @ 20a5840 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldr     r4, [r6, #0x24]
	mov     r5, r1
	add     r0, r6, #0x24
	mov     r1, #0x10
	mov     r2, #0x4
	bl      Function_20a56a8
	cmp     r0, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4-r6,pc}
	str     r5, [r0]
	str     r4, [r0, #0x4]
	ldr     r1, [r6, #0x28]
	str     r1, [r0, #0x8]
	ldr     r1, [r6, #0x2c]
	str     r1, [r0, #0xc]
	str     r0, [r6, #0x2c]
	mov     r0, #0x1
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a5890


.arm
Function_20a5890: @ 20a5890 :arm
	ldr     r3, [r0, #0x2c]
	cmp     r1, #0x0
	cmpne   r3, #0x0
	beq     branch_20a58b4
branch_20a58a0: @ 20a58a0 :arm
	ldr     r2, [r3]
	cmp     r2, r1
	ldrne   r3, [r3, #0xc]
	cmpne   r3, #0x0
	bne     branch_20a58a0
branch_20a58b4: @ 20a58b4 :arm
	cmp     r3, #0x0
	moveq   r0, #0x0
	bxeq    lr
	ldr     r1, [r3, #0x4]
	str     r1, [r0, #0x24]
	ldr     r1, [r3, #0x8]
	str     r1, [r0, #0x28]
	ldr     r1, [r3, #0xc]
	str     r1, [r0, #0x2c]
	mov     r0, #0x1
	bx      lr
@ 0x20a58e0


.arm
Function_20a58e0: @ 20a58e0 :arm
	ldr     r2, [r0]
	cmp     r2, #0x0
	ldrne   r1, [r2]
	strne   r1, [r0]
	mov     r0, r2
	bx      lr
@ 0x20a58f8


.arm
Function_20a58f8: @ 20a58f8 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	add     r0, r5, #0x24
	bl      Function_20a58e0
	movs    r4, r0
	beq     branch_20a5930
	ldr     r0, [r5, #0x20]
	ldr     r2, [r5, #0x28]
	and     r0, r0, #0xff
	tst     r0, #0x1
	beq     branch_20a5930
	mov     r1, r4
	mov     r0, #0x0
	bl      MIi_CpuClear32
branch_20a5930: @ 20a5930 :arm
	mov     r0, r4
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a5938


.arm
Function_20a5938: @ 20a5938 :arm
	ldr     r2, [r0, #0x24]
	str     r2, [r1]
	str     r1, [r0, #0x24]
	bx      lr
@ 0x20a5948


.arm
Function_20a5948: @ 20a5948 :arm
	ldr     r12, =Function_20a5448
	mov     r2, r0
	ldmib   r2, {r0,r2}
	bx      r12
@ 0x20a5958

.pool



.arm
Function_20a595c: @ 20a595c :arm
	ldr     r12, =Function_20a55d8
	ldr     r0, [r0, #0x4]
	bx      r12
@ 0x20a5968

.pool



.arm
Function_20a596c: @ 20a596c :arm
	ldr     r12, =Function_20a57e0
	mov     r2, r0
	ldmib   r2, {r0,r2}
	bx      r12
@ 0x20a597c

.pool



.arm
Function_20a5980: @ 20a5980 :arm
	bx      lr
@ 0x20a5984


.arm
Function_20a5984: @ 20a5984 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [r0, #0x4]
	ldr     r2, [r0, #0x28]
	cmp     r1, r2
	movhi   r0, #0x0
	ldmhifd sp!, {r3,pc}
	bl      Function_20a58f8
	ldmfd   sp!, {r3,pc}
@ 0x20a59a4


.arm
Function_20a59a4: @ 20a59a4 :arm
	ldr     r12, [pc, #0x4] @ [0x20a59b0] (=Function_20a5938)
	ldr     r0, [r0, #0x4]
	bx      r12
@ 0x20a59b0

.word Function_20a5938 @ 0x20a59b0



.arm
Function_20a59b4: @ 20a59b4 :arm
	ldr     r12, [pc, #0x10] @ [0x20a59cc] (=OS_AllocFromHeap)
	mov     r3, r0
	mov     r2, r1
	ldr     r0, [r3, #0x8]
	ldr     r1, [r3, #0x4]
	bx      r12
@ 0x20a59cc

.word OS_AllocFromHeap @ 0x20a59cc



.arm
Function_20a59d0: @ 20a59d0 :arm
	ldr     r12, [pc, #0x10] @ [0x20a59e8] (=OS_FreeToHeap)
	mov     r3, r0
	mov     r2, r1
	ldr     r0, [r3, #0x8]
	ldr     r1, [r3, #0x4]
	bx      r12
@ 0x20a59e8

.word OS_FreeToHeap @ 0x20a59e8



.arm
Function_20a59ec: @ 20a59ec :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [r0]
	ldr     r2, [r2]
	blx     r2
	ldmfd   sp!, {r3,pc}
@ 0x20a5a00

.arm
Function_20a5a00: @ 20a5a00 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [r0]
	ldr     r2, [r2, #0x4]
	blx     r2
	ldmfd   sp!, {r3,pc}
@ 0x20a5a14


.arm
Function_20a5a14: @ 20a5a14 :arm
	ldr     r12, [pc, #0xc] @ [0x20a5a28] (=0x20f9560)
	mov     r3, #0x0
	str     r12, [r0]
	stmib   r0, {r1-r3}
	bx      lr
@ 0x20a5a28

.word JumpTable_20f9560 @ 0x20a5a28



.arm
Function_20a5a2c: @ 20a5a2c :arm
	mov     r0, #0x0
	bx      lr
@ 0x20a5a34


.arm
Function_20a5a34: @ 20a5a34 :arm
	mvn     r0, #0x0
	bx      lr
@ 0x20a5a3c


.arm
Function_20a5a3c: @ 20a5a3c :arm
	mov     r0, #0x0
	bx      lr
@ 0x20a5a44


.arm
Function_20a5a44: @ 20a5a44 :arm
	mvn     r0, #0x0
	bx      lr
@ 0x20a5a4c


.arm
Function_20a5a4c: @ 20a5a4c :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r5, [pc, #0x34] @ [0x20a5a8c] (=Unknown_2100e18)
	mov     r12, #0x18
	mla     r6, r0, r12, r5
	ldr     lr, [sp, #0x10]
	ldr     r0, [pc, #0x28] @ [0x20a5a90] (=Unknown_2100dfc)
	mla     r4, r1, r12, r5
	str     r6, [r0, #0x8]
	mla     r1, r2, r12, r5
	str     r4, [r0, #0xc]
	mla     r2, r3, r12, r5
	str     r1, [r0, #0x10]
	mla     r1, lr, r12, r5
	str     r2, [r0, #0x14]
	str     r1, [r0, #0x18]
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a5a8c

.word Unknown_2100e18 @ 0x20a5a8c
.word Unknown_2100dfc @ 0x20a5a90



.arm
.globl Function_20a5a94
Function_20a5a94: @ 20a5a94 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	cmp     r5, #0x2
	mov     r12, #0x1
	mov     r0, #0x4
	mov     r1, #0x3
	bhi     branch_20a5ac8
	mov     r2, #0x2
	mov     r3, #0x0
	str     r12, [sp]
	bl      Function_20a5a4c
	b       branch_20a5ad8

branch_20a5ac8: @ 20a5ac8 :arm
	mov     r2, #0x0
	mov     r3, #0x2
	str     r12, [sp]
	bl      Function_20a5a4c
branch_20a5ad8: @ 20a5ad8 :arm
	ldr     r0, [pc, #0x28] @ [0x20a5b08] (=RAM_21c3ab0)
	strh    r5, [r0]
	bl      Function_20a5b1c
	cmp     r4, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	ldr     r3, [pc, #0x18] @ [0x20a5b0c] (=Function_20a5b90)
	ldr     r1, [pc, #0x18] @ [0x20a5b10] (=Unknown_2100dec)
	ldr     r2, [pc, #0x18] @ [0x20a5b14] (=Function_20a5d00)
	ldr     r0, [pc, #0x18] @ [0x20a5b18] (=Unknown_2100df0)
	str     r3, [r1]
	str     r2, [r0]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a5b08

.word RAM_21c3ab0 @ 0x20a5b08
.word Function_20a5b90 @ 0x20a5b0c
.word Unknown_2100dec @ 0x20a5b10
.word Function_20a5d00 @ 0x20a5b14
.word Unknown_2100df0 @ 0x20a5b18



.arm
.globl Function_20a5b1c
Function_20a5b1c: @ 20a5b1c :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r0, [pc, #0x60] @ [0x20a5b88] (=RAM_21c3ab0)
	mov     r5, #0x0
	ldrh    r7, [r0]
	ldr     r6, [pc, #0x58] @ [0x20a5b8c] (=Unknown_2100e18)
	mov     lr, r5
	cmp     r7, #0x1
	addhi   r7, r7, #0x1
	mov     r4, #0x1
	mov     r1, r5
	mov     r0, #2, 16 @ #0x20000
	mov     r3, r5
	mov     r2, #1, 16 @ #0x10000
branch_20a5b50: @ 20a5b50 :arm
	cmp     r5, r7
	strlt   r4, [r6, #0x8]
	strge   lr, [r6, #0x8]
	ldr     r12, [r6, #0xc]
	add     r5, r5, #0x1
	cmp     r12, #0x0
	strne   r3, [r6]
	strne   r2, [r6, #0x4]
	streq   r1, [r6]
	streq   r0, [r6, #0x4]
	cmp     r5, #0x5
	add     r6, r6, #0x18
	blt     branch_20a5b50
	ldmfd   sp!, {r3-r7,pc}
@ 0x20a5b88

.word RAM_21c3ab0 @ 0x20a5b88
.word Unknown_2100e18 @ 0x20a5b8c



.arm
Function_20a5b90: @ 20a5b90 :arm
	stmfd   sp!, {r3-r9,lr}
	cmp     r0, #0x0
	moveq   r3, #0x10
	addne   r0, r0, #0xf
	bicne   r3, r0, #0xf
	ldr     r0, [pc, #0x140] @ [0x20a5cec] (=0x7fff0)
	cmp     r3, r0
	movcs   r0, #0x0
	ldmcsfd sp!, {r3-r9,pc}
	cmp     r1, #0x0
	beq     branch_20a5c74
	mov     r4, #0x0
	ldr     r8, [pc, #0x128] @ [0x20a5cf0] (=Unknown_2100e48)
	ldr     r9, [pc, #0x128] @ [0x20a5cf4] (=Unknown_2100e30)
	ldr     r0, [pc, #0x128] @ [0x20a5cf8] (=Unknown_2100dfc)
	mov     r7, r4
branch_20a5bd0: @ 20a5bd0 :arm
	ldr     lr, [r0, r4, lsl #0x2]
	ldr     r5, [lr, #0x8]
	cmp     r5, #0x0
	beq     branch_20a5c60
	ldmia   lr, {r5,r6}
	sub     r5, r6, r5
	cmp     r5, r3
	blo     branch_20a5c60
	ldrh    r5, [lr, #0x10]
	cmp     r5, #0x0
	beq     branch_20a5c08
	cmp     r5, #0x3
	beq     branch_20a5c10
	b       branch_20a5c18

branch_20a5c08: @ 20a5c08 :arm
	mov     r12, r9
	b       branch_20a5c1c

branch_20a5c10: @ 20a5c10 :arm
	mov     r12, r8
	b       branch_20a5c1c

branch_20a5c18: @ 20a5c18 :arm
	mov     r12, r7
branch_20a5c1c: @ 20a5c1c :arm
	ldr     r5, [r12, #0x8]
	cmp     r5, #0x0
	beq     branch_20a5c60
	ldmia   r12, {r5,r6}
	sub     r5, r6, r5
	cmp     r5, r3, lsr #1
	blo     branch_20a5c60
	ldr     r4, [lr]
	mov     r0, #0x1
	add     r2, r4, r3
	str     r2, [lr]
	ldr     r2, [r12]
	add     r2, r2, r3, lsr #1
	str     r2, [r12]
	ldr     r2, [lr, #0x14]
	add     r2, r4, r2
	b       branch_20a5cc8

branch_20a5c60: @ 20a5c60 :arm
	add     r4, r4, #0x1
	cmp     r4, #0x2
	blt     branch_20a5bd0
	mov     r0, #0x0
	b       branch_20a5cc8

branch_20a5c74: @ 20a5c74 :arm
	ldr     lr, [pc, #0x80] @ [0x20a5cfc] (=Unknown_2100e04)
	mov     r5, #0x0
branch_20a5c7c: @ 20a5c7c :arm
	ldr     r12, [lr, r5, lsl #0x2]
	ldr     r0, [r12, #0x8]
	cmp     r0, #0x0
	beq     branch_20a5cb8
	ldmia   r12, {r0,r4}
	sub     r0, r4, r0
	cmp     r0, r3
	blo     branch_20a5cb8
	ldr     r2, [r12, #0x4]
	mov     r0, #0x1
	sub     r4, r2, r3
	str     r4, [r12, #0x4]
	ldr     r2, [r12, #0x14]
	add     r2, r4, r2
	b       branch_20a5cc8

branch_20a5cb8: @ 20a5cb8 :arm
	add     r5, r5, #0x1
	cmp     r5, #0x5
	blt     branch_20a5c7c
	mov     r0, #0x0
branch_20a5cc8: @ 20a5cc8 :arm
	cmp     r0, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r9,pc}
	mov     r0, r2, lsl #13
	mov     r2, r3, lsr #4
	mov     r0, r0, lsr #16
	orr     r0, r0, r2, lsl #16
	orr     r0, r0, r1, lsl #31
	ldmfd   sp!, {r3-r9,pc}
@ 0x20a5cec

.word 0x7fff0 @ 0x20a5cec
.word Unknown_2100e48 @ 0x20a5cf0
.word Unknown_2100e30 @ 0x20a5cf4
.word Unknown_2100dfc @ 0x20a5cf8
.word Unknown_2100e04 @ 0x20a5cfc



.arm
Function_20a5d00: @ 20a5d00 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20a5d08


.arm
Function_20a5d08: @ 20a5d08 :arm
	stmfd   sp!, {r3,lr}
	mov     r3, #0x0
	ldr     r12, [pc, #0x2c] @ [0x20a5d44] (=Unknown_2100e18)
	mov     lr, r3
branch_20a5d18: @ 20a5d18 :arm
	ldr     r1, [r12]
	add     r3, r3, #0x1
	str     r1, [r0, lr, lsl #0x2]
	ldr     r2, [r12, #0x4]
	add     r1, r0, lr, lsl #2
	str     r2, [r1, #0x4]
	cmp     r3, #0x5
	add     r12, r12, #0x18
	add     lr, lr, #0x2
	blt     branch_20a5d18
	ldmfd   sp!, {r3,pc}
@ 0x20a5d44

.word Unknown_2100e18 @ 0x20a5d44



.arm
.globl Function_20a5d48
Function_20a5d48: @ 20a5d48 :arm
	stmfd   sp!, {r3,lr}
	mov     r3, #0x0
	ldr     lr, [pc, #0x2c] @ [0x20a5d84] (=Unknown_2100e18)
	mov     r12, r3
branch_20a5d58: @ 20a5d58 :arm
	ldr     r2, [r0, r12, lsl #0x2]
	add     r1, r0, r12, lsl #2
	str     r2, [lr]
	ldr     r1, [r1, #0x4]
	add     r3, r3, #0x1
	str     r1, [lr, #0x4]
	cmp     r3, #0x5
	add     r12, r12, #0x2
	add     lr, lr, #0x18
	blt     branch_20a5d58
	ldmfd   sp!, {r3,pc}
@ 0x20a5d84

.word Unknown_2100e18 @ 0x20a5d84



.arm
.globl Function_20a5d88
Function_20a5d88: @ 20a5d88 :arm
	stmfd   sp!, {r4,lr}
	ldr     r2, [pc, #0x2c] @ [0x20a5dc0] (=RAM_21c3ab4)
	mov     r4, r1
	str     r0, [r2, #0x8]
	bl      Function_20a5f50
	cmp     r4, #0x0
	ldmeqfd sp!, {r4,pc}
	ldr     r3, [pc, #0x18] @ [0x20a5dc4] (=Function_20a5dd4)
	ldr     r1, [pc, #0x18] @ [0x20a5dc8] (=Unknown_2100df4)
	ldr     r2, [pc, #0x18] @ [0x20a5dcc] (=Function_20a5f10)
	ldr     r0, [pc, #0x18] @ [0x20a5dd0] (=Unknown_2100df8)
	str     r3, [r1]
	str     r2, [r0]
	ldmfd   sp!, {r4,pc}
@ 0x20a5dc0

.word RAM_21c3ab4 @ 0x20a5dc0
.word Function_20a5dd4 @ 0x20a5dc4
.word Unknown_2100df4 @ 0x20a5dc8
.word Function_20a5f10 @ 0x20a5dcc
.word Unknown_2100df8 @ 0x20a5dd0



.arm
Function_20a5dd4: @ 20a5dd4 :arm
	stmfd   sp!, {r4,lr}
	cmp     r0, #0x0
	moveq   r0, #0x8
	addne   r0, r0, #0x7
	ldr     r12, [pc, #0x11c] @ [0x20a5f08] (=0x7fff8)
	bicne   r0, r0, #0x7
	cmp     r0, r12
	mov     r3, #0x0
	movcs   r0, #0x0
	ldmcsfd sp!, {r4,pc}
	cmp     r2, #0x1
	bne     branch_20a5e80
	ldr     r2, [pc, #0x100] @ [0x20a5f0c] (=RAM_21c3ab4)
	cmp     r1, #0x0
	ldr     lr, [r2]
	andeq   r2, lr, #0xf
	rsbeq   r2, r2, #0x10
	andeq   r4, r2, #0xf
	beq     branch_20a5e2c
	and     r2, lr, #0x7
	rsb     r2, r2, #0x8
	and     r4, r2, #0x7
branch_20a5e2c: @ 20a5e2c :arm
	ldr     r2, [pc, #0xd8] @ [0x20a5f0c] (=RAM_21c3ab4)
	add     r12, r0, r4
	ldr     r2, [r2, #0x4]
	sub     r2, r2, lr
	cmp     r2, r12
	blo     branch_20a5e78
	cmp     r1, #0x0
	add     r1, lr, r12
	beq     branch_20a5e5c
	cmp     r1, #1, 16 @ #0x10000
	movhi   lr, #0x0
	bhi     branch_20a5ee8
branch_20a5e5c: @ 20a5e5c :arm
	ldr     r1, [pc, #0xa8] @ [0x20a5f0c] (=RAM_21c3ab4)
	add     r3, lr, r4
	ldr     r2, [r1]
	mov     lr, #0x1
	add     r2, r2, r12
	str     r2, [r1]
	b       branch_20a5ee8

branch_20a5e78: @ 20a5e78 :arm
	mov     lr, #0x0
	b       branch_20a5ee8

branch_20a5e80: @ 20a5e80 :arm
	ldr     r2, [pc, #0x84] @ [0x20a5f0c] (=RAM_21c3ab4)
	ldr     lr, [r2, #0x4]
	cmp     lr, r0
	blo     branch_20a5ee4
	sub     r2, lr, r0
	cmp     r1, #0x0
	andne   r4, r2, #0x7
	andeq   r4, r2, #0xf
	ldr     r2, [pc, #0x64] @ [0x20a5f0c] (=RAM_21c3ab4)
	add     r12, r0, r4
	ldr     r2, [r2]
	sub     r2, lr, r2
	cmp     r2, r12
	blo     branch_20a5ee4
	cmp     r1, #0x0
	beq     branch_20a5ecc
	cmp     lr, #1, 16 @ #0x10000
	movhi   lr, #0x0
	bhi     branch_20a5ee8
branch_20a5ecc: @ 20a5ecc :arm
	ldr     r1, [pc, #0x38] @ [0x20a5f0c] (=RAM_21c3ab4)
	mov     lr, #0x1
	ldr     r2, [r1, #0x4]
	sub     r3, r2, r12
	str     r3, [r1, #0x4]
	b       branch_20a5ee8

branch_20a5ee4: @ 20a5ee4 :arm
	mov     lr, #0x0
branch_20a5ee8: @ 20a5ee8 :arm
	cmp     lr, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4,pc}
	mov     r1, r3, lsl #13
	mov     r2, r0, lsr #3
	mov     r0, r1, lsr #16
	orr     r0, r0, r2, lsl #16
	ldmfd   sp!, {r4,pc}
@ 0x20a5f08

.word 0x7fff8 @ 0x20a5f08
.word RAM_21c3ab4 @ 0x20a5f0c



.arm
Function_20a5f10: @ 20a5f10 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20a5f18


.arm
Function_20a5f18: @ 20a5f18 :arm
	ldr     r1, [pc, #0x10] @ [0x20a5f30] (=RAM_21c3ab4)
	ldr     r2, [r1]
	str     r2, [r0]
	ldr     r1, [r1, #0x4]
	str     r1, [r0, #0x4]
	bx      lr
@ 0x20a5f30

.word RAM_21c3ab4 @ 0x20a5f30



.arm
.globl Function_20a5f34
Function_20a5f34: @ 20a5f34 :arm
	ldr     r2, [r0]
	ldr     r1, [pc, #0xc] @ [0x20a5f4c] (=RAM_21c3ab4)
	str     r2, [r1]
	ldr     r0, [r0, #0x4]
	str     r0, [r1, #0x4]
	bx      lr
@ 0x20a5f4c

.word RAM_21c3ab4 @ 0x20a5f4c



.arm
.globl Function_20a5f50
Function_20a5f50: @ 20a5f50 :arm
	ldr     r0, [pc, #0x10] @ [0x20a5f68] (=RAM_21c3ab4)
	mov     r1, #0x0
	str     r1, [r0]
	ldr     r1, [r0, #0x8]
	str     r1, [r0, #0x4]
	bx      lr
@ 0x20a5f68

.word RAM_21c3ab4 @ 0x20a5f68



.arm
Function_20a5f6c: @ 20a5f6c :arm
	stmfd   sp!, {r3,lr}
	mov     r2, r0
	add     r0, r1, #0x1
	ldr     r1, [r2, #0x4]
	bl      _u32_div_f
	mov     r0, r1, lsl #16
	mov     r0, r0, lsr #16
	ldmfd   sp!, {r3,pc}
@ 0x20a5f8c


.arm
Function_20a5f8c: @ 20a5f8c :arm
	ldrh    r1, [r0, #0xc]
	ldr     r0, [r0, #0x4]
	cmp     r1, r0
	moveq   r0, #0x1
	movne   r0, #0x0
	bx      lr
@ 0x20a5fa4


.arm
Function_20a5fa4: @ 20a5fa4 :arm
	ldrh    r0, [r0, #0xc]
	cmp     r0, #0x0
	moveq   r0, #0x1
	movne   r0, #0x0
	bx      lr
@ 0x20a5fb8


.arm
LoadTex: @ 20a5fb8 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	mov     r4, r2
	bl      GX_BeginLoadTex
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      GX_LoadTex
	bl      GX_EndLoadTex
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a5fe4


.arm
Function_20a5fe4: @ 20a5fe4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	mov     r4, r2
	bl      GX_BeginLoadTexPltt
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      GX_LoadTexPltt
	bl      GX_EndLoadTexPltt
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a6010


.arm
Function_20a6010: @ 20a6010 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r2
	bl      GX_BeginLoadClearImage
	mov     r0, r5
	mov     r1, r4
	bl      GX_LoadClearImageColor
	bl      Function_20c1164
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a6034


.arm
Function_20a6034: @ 20a6034 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r2
	bl      GX_BeginLoadClearImage
	mov     r0, r5
	mov     r1, r4
	bl      GX_LoadClearImageDepth
	bl      Function_20c1164
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a6058


.arm
Call_GX_LoadBG0Char: @ 20a6058 :arm
	ldr     r12, [pc, #0x0] @ [0x20a6060] (=GX_LoadBG0Char)
	bx      r12
@ 0x20a6060

.word GX_LoadBG0Char @ =0x20c066c, 0x20a6060



.arm
Call_GX_LoadBG1Char: @ 20a6064 :arm
	ldr     r12, [pc, #0x0] @ [0x20a606c] (=GX_LoadBG1Char)
	bx      r12
@ 0x20a606c

.word GX_LoadBG1Char @ 0x20a606c



.arm
Call_GX_LoadBG2Char: @ 20a6070 :arm
	ldr     r12, [pc, #0x0] @ [0x20a6078] (=GX_LoadBG2Char)
	bx      r12
@ 0x20a6078

.word GX_LoadBG2Char @ 0x20a6078



.arm
Call_GX_LoadBG3Char: @ 20a607c :arm
	ldr     r12, [pc, #0x0] @ [0x20a6084] (=GX_LoadBG3Char)
	bx      r12
@ 0x20a6084

.word GX_LoadBG3Char @ 0x20a6084



.arm
Call_GX_LoadBG0Scr: @ 20a6088 :arm
	ldr     r12, [pc, #0x0] @ [0x20a6090] (=GX_LoadBG0Scr)
	bx      r12
@ 0x20a6090

.word GX_LoadBG0Scr @ =0x20c036c, 0x20a6090



.arm
Call_GX_LoadBG1Scr: @ 20a6094 :arm
	ldr     r12, [pc, #0x0] @ [0x20a609c] (=GX_LoadBG1Scr)
	bx      r12
@ 0x20a609c

.word GX_LoadBG1Scr @ 0x20a609c



.arm
Call_GX_LoadBG2Scr: @ 20a60a0 :arm
	ldr     r12, [pc, #0x0] @ [0x20a60a8] (=GX_LoadBG2Scr)
	bx      r12
@ 0x20a60a8

.word GX_LoadBG2Scr @ 0x20a60a8



.arm
Call_GX_LoadBG3Scr: @ 20a60ac :arm
	ldr     r12, [pc, #0x0] @ [0x20a60b4] (=GX_LoadBG3Scr)
	bx      r12
@ 0x20a60b4

.word GX_LoadBG3Scr @ 0x20a60b4



.arm
Call2_GX_LoadBG2Scr: @ 20a60b8 :arm
	ldr     r12, [pc, #0x0] @ [0x20a60c0] (=GX_LoadBG2Scr)
	bx      r12
@ 0x20a60c0

.word GX_LoadBG2Scr @ 0x20a60c0



.arm
Call2_GX_LoadBG3Scr: @ 20a60c4 :arm
	ldr     r12, [pc, #0x0] @ [0x20a60cc] (=GX_LoadBG3Scr)
	bx      r12
@ 0x20a60cc

.word GX_LoadBG3Scr @ 0x20a60cc



.arm
Call_GX_LoadOBJPltt: @ 20a60d0 :arm
	ldr     r12, [pc, #0x0] @ [0x20a60d8] (=GX_LoadOBJPltt)
	bx      r12
@ 0x20a60d8

.word GX_LoadOBJPltt @ =GX_LoadOBJPltt, 0x20a60d8



.arm
Call_GX_LoadBGPltt: @ 20a60dc :arm
	ldr     r12, [pc, #0x0] @ [0x20a60e4] (=GX_LoadBGPltt)
	bx      r12
@ 0x20a60e4

.word GX_LoadBGPltt @ =GX_LoadBGPltt, 0x20a60e4



.arm
Function_20a60e8: @ 20a60e8 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	mov     r4, r2
	bl      GX_BeginLoadOBJExtPltt
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      GX_LoadOBJExtPltt
	bl      GX_EndLoadOBJExtPltt
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a6114

.arm
Function_20a6114: @ 20a6114 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	mov     r4, r2
	bl      GX_BeginLoadBGExtPltt
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      GX_LoadBGExtPltt
	bl      GX_EndLoadBGExtPltt
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a6140


.arm
Call_GX_LoadOAM: @ 20a6140 :arm
	ldr     r12, [pc, #0x0] @ [0x20a6148] (=GX_LoadOAM)
	bx      r12
@ 0x20a6148

.word GX_LoadOAM @ 0x20a6148



.arm
Call_GX_LoadOBJ: @ 20a614c :arm
	ldr     r12, [pc, #0x0] @ [0x20a6154] (=GX_LoadOBJ)
	bx      r12
@ 0x20a6154

.word GX_LoadOBJ @ =GX_LoadOBJ, 0x20a6154



.arm
Call_GXS_LoadBG0Char: @ 20a6158 :arm
	ldr     r12, [pc, #0x0] @ [0x20a6160] (=GXS_LoadBG0Char)
	bx      r12
@ 0x20a6160

.word GXS_LoadBG0Char @ 0x20a6160



.arm
Call_GXS_LoadBG1Char: @ 20a6164 :arm
	ldr     r12, [pc, #0x0] @ [0x20a616c] (=GXS_LoadBG1Char)
	bx      r12
@ 0x20a616c

.word GXS_LoadBG1Char @ 0x20a616c



.arm
Call_GXS_LoadBG2Char: @ 20a6170 :arm
	ldr     r12, [pc, #0x0] @ [0x20a6178] (=GXS_LoadBG2Char)
	bx      r12
@ 0x20a6178

.word GXS_LoadBG2Char @ 0x20a6178



.arm
Call_GXS_LoadBG3Char: @ 20a617c :arm
	ldr     r12, [pc, #0x0] @ [0x20a6184] (=GXS_LoadBG3Char)
	bx      r12
@ 0x20a6184

.word GXS_LoadBG3Char @ 0x20a6184



.arm
Call_GXS_LoadBG0Scr: @ 20a6188 :arm
	ldr     r12, [pc, #0x0] @ [0x20a6190] (=GXS_LoadBG0Scr)
	bx      r12
@ 0x20a6190

.word GXS_LoadBG0Scr @ 0x20a6190



.arm
Call_GXS_LoadBG1Scr: @ 20a6194 :arm
	ldr     r12, [pc, #0x0] @ [0x20a619c] (=GXS_LoadBG1Scr)
	bx      r12
@ 0x20a619c

.word GXS_LoadBG1Scr @ 0x20a619c



.arm
Call_GXS_LoadBG2Scr: @ 20a61a0 :arm
	ldr     r12, [pc, #0x0] @ [0x20a61a8] (=GXS_LoadBG2Scr)
	bx      r12
@ 0x20a61a8

.word GXS_LoadBG2Scr @ 0x20a61a8



.arm
Call_GXS_LoadBG3Scr: @ 20a61ac :arm
	ldr     r12, [pc, #0x0] @ [0x20a61b4] (=GXS_LoadBG3Scr)
	bx      r12
@ 0x20a61b4

.word GXS_LoadBG3Scr @ 0x20a61b4



.arm
Call2_GXS_LoadBG2Scr: @ 20a61b8 :arm
	ldr     r12, [pc, #0x0] @ [0x20a61c0] (=GXS_LoadBG2Scr)
	bx      r12
@ 0x20a61c0

.word GXS_LoadBG2Scr @ 0x20a61c0



.arm
Call2_GXS_LoadBG3Scr: @ 20a61c4 :arm
	ldr     r12, [pc, #0x0] @ [0x20a61cc] (=GXS_LoadBG3Scr)
	bx      r12
@ 0x20a61cc

.word GXS_LoadBG3Scr @ 0x20a61cc



.arm
Call_GXS_LoadOBJPltt: @ 20a61d0 :arm
	ldr     r12, [pc, #0x0] @ [0x20a61d8] (=GXS_LoadOBJPltt)
	bx      r12
@ 0x20a61d8

.word GXS_LoadOBJPltt @ =GXS_LoadOBJPltt, 0x20a61d8



.arm
Call_GXS_LoadBGPltt: @ 20a61dc :arm
	ldr     r12, [pc, #0x0] @ [0x20a61e4] (=GXS_LoadBGPltt)
	bx      r12
@ 0x20a61e4

.word GXS_LoadBGPltt @ =GXS_LoadBGPltt, 0x20a61e4



.arm
Function_20a61e8: @ 20a61e8 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	mov     r4, r2
	bl      GXS_BeginLoadOBJExtPltt
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      GXS_LoadOBJExtPltt
	bl      GXS_EndLoadOBJExtPltt
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a6214

.arm
Function_20a6214: @ 20a6214 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	mov     r4, r2
	bl      GXS_BeginLoadBGExtPltt
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	bl      GXS_LoadBGExtPltt
	bl      GXS_EndLoadBGExtPltt
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a6240

.arm
Call_GXS_LoadOAM: @ 20a6240 :arm
	ldr     r12, [pc, #0x0] @ [0x20a6248] (=GXS_LoadOAM)
	bx      r12
@ 0x20a6248

.word GXS_LoadOAM @ 0x20a6248



.arm
Call_GXS_LoadOBJ: @ 20a624c :arm
	ldr     r12, [pc, #0x0] @ [0x20a6254] (=GXS_LoadOBJ)
	bx      r12
@ 0x20a6254

.word GXS_LoadOBJ @ =GXS_LoadOBJ, 0x20a6254



.arm
Function_20a6258: @ 20a6258 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	ldr     r3, [r5]
	ldr     r2, [pc, #0x18] @ [0x20a6284] (=JumpTable_20f9570)
	ldr     r0, [r5, #0x4]
	ldr     r1, [r5, #0xc]
	ldr     r4, [r2, r3, lsl #0x2]
	bl      DC_FlushRange
	ldmib   r5, {r0-r2}
	blx     r4
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a6284

.word JumpTable_20f9570 @ 0x20a6284



.arm
Function_20a6288: @ 20a6288 :arm
	mov     r1, #0x0
	strh    r1, [r0, #0xa]
	strh    r1, [r0, #0x8]
	strh    r1, [r0, #0xc]
	str     r1, [r0, #0x10]
	bx      lr
@ 0x20a62a0


.arm
Function_20a62a0: @ 20a62a0 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20a5f8c
	cmp     r0, #0x0
	movne   r0, #0x0
	ldmnefd sp!, {r4,pc}
	ldrh    r1, [r4, #0xa]
	mov     r0, r4
	bl      Function_20a5f6c
	strh    r0, [r4, #0xa]
	ldrh    r1, [r4, #0xc]
	mov     r0, #0x1
	add     r1, r1, #0x1
	strh    r1, [r4, #0xc]
	ldmfd   sp!, {r4,pc}
@ 0x20a62dc


.arm
Function_20a62dc: @ 20a62dc :arm
	ldrh    r1, [r0, #0x8]
	ldr     r0, [r0]
	add     r0, r0, r1, lsl #4
	bx      lr
@ 0x20a62ec


.arm
Function_20a62ec: @ 20a62ec :arm
	ldrh    r1, [r0, #0xa]
	ldr     r0, [r0]
	add     r0, r0, r1, lsl #4
	bx      lr
@ 0x20a62fc

.arm
Function_20a62fc: @ 20a62fc :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20a5fa4
	cmp     r0, #0x0
	movne   r0, #0x0
	ldmnefd sp!, {r4,pc}
	ldrh    r1, [r4, #0x8]
	mov     r0, r4
	bl      Function_20a5f6c
	strh    r0, [r4, #0x8]
	ldrh    r1, [r4, #0xc]
	mov     r0, #0x1
	sub     r1, r1, #0x1
	strh    r1, [r4, #0xc]
	ldmfd   sp!, {r4,pc}
@ 0x20a6338


.arm
Function_20a6338: @ 20a6338 :arm
	ldr     r2, [pc, #0x10] @ [0x20a6350] (=RAM_21c3ac0)
	ldr     r12, [pc, #0x10] @ [0x20a6354] (=Function_20a6288)
	str     r0, [r2]
	ldr     r0, [pc, #0xc] @ [0x20a6358] (=RAM_21c3ac0)
	str     r1, [r2, #0x4]
	bx      r12
@ 0x20a6350

.word RAM_21c3ac0 @ 0x20a6350
.word Function_20a6288 @ 0x20a6354
.word RAM_21c3ac0 @ 0x20a6358



.arm
.globl Function_20a635c
Function_20a635c: @ 20a635c :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r4, [pc, #0x50] @ [0x20a63b8] (=RAM_21c3ac0)
	mov     r0, r4
	bl      Function_20a62dc
	mov     r5, r0
	mov     r0, r4
	bl      Function_20a62fc
	cmp     r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
branch_20a6380: @ 20a6380 :arm
	mov     r0, r5
	bl      Function_20a6258
	ldr     r2, [r4, #0x10]
	ldr     r1, [r5, #0xc]
	mov     r0, r4
	sub     r1, r2, r1
	str     r1, [r4, #0x10]
	bl      Function_20a62dc
	mov     r5, r0
	mov     r0, r4
	bl      Function_20a62fc
	cmp     r0, #0x0
	bne     branch_20a6380
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a63b8

.word RAM_21c3ac0 @ 0x20a63b8



.arm
Function_20a63bc: @ 20a63bc :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r5, [pc, #0x58] @ [0x20a6420] (=RAM_21c3ac0)
	mov     r9, r0
	mov     r0, r5
	mov     r8, r1
	mov     r7, r2
	mov     r6, r3
	bl      Function_20a5f8c
	cmp     r0, #0x0
	movne   r0, #0x0
	ldmnefd sp!, {r3-r9,pc}
	mov     r0, r5
	bl      Function_20a62ec
	mov     r4, r0
	str     r9, [r4]
	stmib   r4, {r7,r8}
	mov     r0, r5
	str     r6, [r4, #0xc]
	bl      Function_20a62a0
	ldr     r2, [r5, #0x10]
	ldr     r1, [r4, #0xc]
	mov     r0, #0x1
	add     r1, r2, r1
	str     r1, [r5, #0x10]
	ldmfd   sp!, {r3-r9,pc}
@ 0x20a6420

.word RAM_21c3ac0 @ 0x20a6420



.arm
Function_20a6424: @ 20a6424 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r3, [r0]
	mov     lr, #0x0
	cmp     r3, #0x0
	beq     branch_20a6500
	mov     r8, lr
	mov     r4, lr
branch_20a6440: @ 20a6440 :arm
	ldr     r6, [r3]
	ldr     r5, [r2, #0x4]
	ldr     r12, [r3, #0xc]
	cmp     r6, r5
	bne     branch_20a649c
	ldr     r5, [r3, #0x4]
	orr     lr, lr, #0x1
	add     r5, r6, r5
	str     r5, [r2, #0x4]
	ldr     r6, [r3, #0x8]
	ldr     r5, [r3, #0xc]
	cmp     r6, #0x0
	strne   r5, [r6, #0xc]
	streq   r5, [r0]
	cmp     r5, #0x0
	strne   r6, [r5, #0x8]
	ldr     r5, [r1]
	cmp     r5, #0x0
	strne   r3, [r5, #0x8]
	ldr     r5, [r1]
	str     r5, [r3, #0xc]
	str     r8, [r3, #0x8]
	str     r3, [r1]
branch_20a649c: @ 20a649c :arm
	ldr     r7, [r3]
	ldr     r5, [r3, #0x4]
	ldr     r6, [r2]
	add     r5, r7, r5
	cmp     r6, r5
	bne     branch_20a64f4
	str     r7, [r2]
	ldr     r6, [r3, #0x8]
	ldr     r5, [r3, #0xc]
	cmp     r6, #0x0
	strne   r5, [r6, #0xc]
	streq   r5, [r0]
	cmp     r5, #0x0
	strne   r6, [r5, #0x8]
	ldr     r5, [r1]
	orr     lr, lr, #0x1
	cmp     r5, #0x0
	strne   r3, [r5, #0x8]
	ldr     r5, [r1]
	str     r5, [r3, #0xc]
	str     r4, [r3, #0x8]
	str     r3, [r1]
branch_20a64f4: @ 20a64f4 :arm
	mov     r3, r12
	cmp     r12, #0x0
	bne     branch_20a6440
branch_20a6500: @ 20a6500 :arm
	mov     r0, lr
	ldmfd   sp!, {r4-r8,pc}
@ 0x20a6508


.arm
Function_20a6508: @ 20a6508 :arm
	mov     r1, #0x0
	str     r1, [r0]
	bx      lr
@ 0x20a6514


.arm
Function_20a6514: @ 20a6514 :arm
	stmfd   sp!, {r4,lr}
	subs    lr, r1, #0x1
	mov     r2, #0x0
	beq     branch_20a654c
	mov     r4, r0
branch_20a6528: @ 20a6528 :arm
	add     r3, r2, #0x1
	add     r2, r0, r2, lsl #4
	add     r12, r0, r3, lsl #4
	str     r12, [r2, #0xc]
	str     r4, [r2, #0x18]
	mov     r2, r3
	cmp     r3, lr
	add     r4, r4, #0x10
	blo     branch_20a6528
branch_20a654c: @ 20a654c :arm
	mov     r2, #0x0
	str     r2, [r0, #0x8]
	add     r1, r0, r1, lsl #4
	str     r2, [r1, #-0x4]
	ldmfd   sp!, {r4,pc}
@ 0x20a6560


.arm
Function_20a6560: @ 20a6560 :arm
	stmfd   sp!, {r3,lr}
	ldr     lr, [r1]
	cmp     lr, #0x0
	ldrne   r12, [lr, #0xc]
	strne   r12, [r1]
	cmp     lr, #0x0
	beq     branch_20a65b4
	stmia   lr, {r2,r3}
	mov     r1, #0x0
	str     r1, [lr, #0x8]
	str     r1, [lr, #0xc]
	ldr     r1, [r0]
	cmp     r1, #0x0
	strne   lr, [r1, #0x8]
	ldr     r2, [r0]
	mov     r1, #0x0
	str     r2, [lr, #0xc]
	str     r1, [lr, #0x8]
	str     lr, [r0]
	mov     r0, #0x1
	ldmfd   sp!, {r3,pc}

branch_20a65b4: @ 20a65b4 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20a65bc


.arm
Function_20a65bc: @ 20a65bc :arm
	stmfd   sp!, {r3,lr}
	mov     r12, #0x0
	str     r12, [sp]
	bl      Function_20a65d0
	ldmfd   sp!, {r3,pc}
@ 0x20a65d0


.arm
Function_20a65d0: @ 20a65d0 :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r7, [r0]
	ldr     r9, [sp, #0x28]
	cmp     r7, #0x0
	mov     r6, #0x0
	beq     branch_20a6638
	sub     r12, r9, #0x1
	mvn     r8, r12
	mov     r11, r6
.arm
branch_20a65f4: @ 20a65f4 :arm
	cmp     r9, #0x1
	ldrls   lr, [r7]
	movls   r5, r11
	movls   r4, r3
	bls     branch_20a661c
	ldr     r5, [r7]
	add     r4, r5, r12
	and     lr, r8, r4
	sub     r5, lr, r5
	add     r4, r3, r5
.arm
branch_20a661c: @ 20a661c :arm
	ldr     r10, [r7, #0x4]
	cmp     r10, r4
	movcs   r6, r7
	bhs     branch_20a6638
	ldr     r7, [r7, #0xc]
	cmp     r7, #0x0
	bne     branch_20a65f4
.arm
branch_20a6638: @ 20a6638 :arm
	cmp     r6, #0x0
	beq     branch_20a6704
	cmp     r5, #0x0
	beq     branch_20a6698
	ldr     r8, [r1]
	cmp     r8, #0x0
	ldrne   r3, [r8, #0xc]
	strne   r3, [r1]
	cmp     r8, #0x0
	beq     branch_20a6704
	ldr     r7, [r6]
	mov     r3, #0x0
	str     r7, [r8]
	str     r5, [r8, #0x4]
	str     r3, [r8, #0x8]
	str     r3, [r8, #0xc]
	ldr     r3, [r0]
	cmp     r3, #0x0
	strne   r8, [r3, #0x8]
	ldr     r5, [r0]
	mov     r3, #0x0
	str     r5, [r8, #0xc]
	str     r3, [r8, #0x8]
	str     r8, [r0]
.arm
branch_20a6698: @ 20a6698 :arm
	ldr     r3, [r6, #0x4]
	sub     r3, r3, r4
	str     r3, [r6, #0x4]
	ldr     r3, [r6]
	add     r3, r3, r4
	str     r3, [r6]
	ldr     r3, [r6, #0x4]
	cmp     r3, #0x0
	bne     branch_20a66f8
	ldr     r4, [r6, #0x8]
	ldr     r3, [r6, #0xc]
	cmp     r4, #0x0
	strne   r3, [r4, #0xc]
	streq   r3, [r0]
	cmp     r3, #0x0
	strne   r4, [r3, #0x8]
	ldr     r0, [r1]
	cmp     r0, #0x0
	strne   r6, [r0, #0x8]
	ldr     r3, [r1]
	mov     r0, #0x0
	str     r3, [r6, #0xc]
	str     r0, [r6, #0x8]
	str     r6, [r1]
.arm
branch_20a66f8: @ 20a66f8 :arm
	str     lr, [r2]
	mov     r0, #0x1
	ldmfd   sp!, {r3-r11,pc}
@ 0x20a6704

.arm
branch_20a6704: @ 20a6704 :arm
	mov     r0, #0x0
	str     r0, [r2]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20a6710


.arm
Function_20a6710: @ 20a6710 :arm
	stmfd   sp!, {r3-r7,lr}
	sub     sp, sp, #0x8
	mov     r7, r0
	ldr     r5, [r7]
	mov     r6, r1
	cmp     r5, #0x0
	addeq   sp, sp, #0x8
	ldmeqfd sp!, {r3-r7,pc}
	add     r4, sp, #0x0
.arm
branch_20a6734: @ 20a6734 :arm
	ldr     r1, [r5]
	mov     r0, r7
	str     r1, [sp]
	ldr     r3, [r5]
	ldr     r2, [r5, #0x4]
	mov     r1, r6
	add     r3, r3, r2
	mov     r2, r4
	str     r3, [sp, #0x4]
	bl      Function_20a6424
	cmp     r0, #0x0
	ldreq   r5, [r5, #0xc]
	beq     branch_20a6784
	ldr     r0, [sp]
	str     r0, [r5]
	ldr     r1, [sp, #0x4]
	ldr     r0, [sp]
	sub     r0, r1, r0
	str     r0, [r5, #0x4]
	ldr     r5, [r7]
.arm
branch_20a6784: @ 20a6784 :arm
	cmp     r5, #0x0
	bne     branch_20a6734
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r7,pc}
@ 0x20a6794


.arm
Function_20a6794: @ 20a6794 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x8
	add     r3, r2, r3
	str     r2, [sp]
	add     r2, sp, #0x0
	mov     r5, r1
	str     r3, [sp, #0x4]
	mov     r4, r0
	bl      Function_20a6424
	ldr     r3, [r5]
	cmp     r3, #0x0
	ldrne   r0, [r3, #0xc]
	strne   r0, [r5]
	cmp     r3, #0x0
	addeq   sp, sp, #0x8
	mov     r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	ldr     r1, [sp]
	str     r1, [r3]
	ldr     r2, [sp, #0x4]
	ldr     r1, [sp]
	sub     r1, r2, r1
	str     r1, [r3, #0x4]
	str     r0, [r3, #0x8]
	str     r0, [r3, #0xc]
	ldr     r0, [r4]
	cmp     r0, #0x0
	strne   r3, [r0, #0x8]
	ldr     r1, [r4]
	mov     r0, #0x0
	str     r1, [r3, #0xc]
	str     r0, [r3, #0x8]
	str     r3, [r4]
	mov     r0, #0x1
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a6824


.arm
Function_20a6824: @ 20a6824 :arm
	mov     r0, r0, lsl #4
	bx      lr
@ 0x20a682c

.arm
Function_20a682c: @ 20a682c :arm
	stmfd   sp!, {r3,lr}
	ldr     r12, [pc, #0x38] @ [0x20a6870] (=RAM_21c3ad4)
	str     r0, [r12, #0xc]
	str     r1, [r12, #0x10]
	str     r2, [r12, #0x14]
	str     r3, [r12, #0x18]
	bl      Function_20a6988
	ldr     r0, [sp, #0x8]
	cmp     r0, #0x0
	ldmeqfd sp!, {r3,pc}
	ldr     r3, [pc, #0x18] @ [0x20a6874] (=Function_20a6884)
	ldr     r1, [pc, #0x18] @ [0x20a6878] (=Unknown_2100dec)
	ldr     r2, [pc, #0x18] @ [0x20a687c] (=Function_20a6914)
	ldr     r0, [pc, #0x18] @ [0x20a6880] (=Unknown_2100df0)
	str     r3, [r1]
	str     r2, [r0]
	ldmfd   sp!, {r3,pc}
@ 0x20a6870

.word RAM_21c3ad4 @ 0x20a6870
.word Function_20a6884 @ 0x20a6874
.word Unknown_2100dec @ 0x20a6878
.word Function_20a6914 @ 0x20a687c
.word Unknown_2100df0 @ 0x20a6880



.arm
Function_20a6884: @ 20a6884 :arm
	stmfd   sp!, {r3-r5,lr}
	cmp     r0, #0x0
	moveq   r5, #0x10
	addne   r0, r0, #0xf
	bicne   r5, r0, #0xf
	ldr     r0, [pc, #0x64] @ [0x20a6904] (=0x7fff0)
	mov     r4, r1
	cmp     r5, r0
	movcs   r0, #0x0
	ldmcsfd sp!, {r3-r5,pc}
	cmp     r4, #0x0
	add     r2, sp, #0x0
	beq     branch_20a68cc
	ldr     r0, [pc, #0x48] @ [0x20a6908] (=RAM_21c3ad8)
	ldr     r1, [pc, #0x48] @ [0x20a690c] (=RAM_21c3adc)
	mov     r3, r5
	bl      Function_20a65bc
	b       branch_20a68dc
@ 0x20a68cc

.arm
branch_20a68cc: @ 20a68cc :arm
	ldr     r0, [pc, #0x3c] @ [0x20a6910] (=RAM_21c3ad4)
	ldr     r1, [pc, #0x34] @ [0x20a690c] (=RAM_21c3adc)
	mov     r3, r5
	bl      Function_20a65bc
.arm
branch_20a68dc: @ 20a68dc :arm
	cmp     r0, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	ldr     r0, [sp]
	mov     r1, r5, lsr #4
	mov     r0, r0, lsl #13
	mov     r0, r0, lsr #16
	orr     r0, r0, r1, lsl #16
	orr     r0, r0, r4, lsl #31
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a6904

.word 0x7fff0 @ 0x20a6904
.word RAM_21c3ad8 @ 0x20a6908
.word RAM_21c3adc @ 0x20a690c
.word RAM_21c3ad4 @ 0x20a6910
.arm
Function_20a6914: @ 20a6914 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x58] @ [0x20a6978] (=0x7fff0000)
	mov     r2, r0, lsl #16
	and     r1, r0, r1
	mov     r1, r1, lsr #16
	and     r0, r0, #2, 2 @ #0x80000000
	mov     r2, r2, lsr #13
	movs    r3, r1, lsl #4
	mov     r0, r0, lsr #31
	beq     branch_20a6970
	cmp     r0, #0x0
	beq     branch_20a6954
	ldr     r0, [pc, #0x30] @ [0x20a697c] (=RAM_21c3ad8)
	ldr     r1, [pc, #0x30] @ [0x20a6980] (=RAM_21c3adc)
	bl      Function_20a6794
	b       branch_20a6960
@ 0x20a6954

.arm
branch_20a6954: @ 20a6954 :arm
	ldr     r0, [pc, #0x28] @ [0x20a6984] (=RAM_21c3ad4)
	ldr     r1, [pc, #0x20] @ [0x20a6980] (=RAM_21c3adc)
	bl      Function_20a6794
.arm
branch_20a6960: @ 20a6960 :arm
	cmp     r0, #0x0
	movne   r0, #0x0
	moveq   r0, #0x1
	ldmfd   sp!, {r3,pc}

branch_20a6970: @ 20a6970 :arm
	mov     r0, #0x2
	ldmfd   sp!, {r3,pc}
@ 0x20a6978

.word 0x7fff0000 @ 0x20a6978
.word RAM_21c3ad8 @ 0x20a697c
.word RAM_21c3adc @ 0x20a6980
.word RAM_21c3ad4 @ 0x20a6984



.arm
.globl Function_20a6988
Function_20a6988: @ 20a6988 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #0x30
	ldr     lr, [pc, #0x1d8] @ [0x20a6b70] (=Unknown_20f9600)
	add     r4, sp, #0x0
	ldmia   lr!, {r0-r3}
	mov     r12, r4
	stmia   r4!, {r0-r3}
	ldmia   lr!, {r0-r3}
	stmia   r4!, {r0-r3}
	ldmia   lr, {r0-r3}
	stmia   r4, {r0-r3}
	ldr     r0, [pc, #0x1b8] @ [0x20a6b74] (=RAM_21c3ad4)
	mov     r3, #0x0
	ldr     r2, [r0, #0x10]
	ldr     r1, [r0, #0xc]
	add     r0, r2, r2, lsr #1
	mov     r4, r2, lsr #1
	sub     r1, r1, r0
branch_20a69d0: @ 20a69d0 :arm
	cmp     r3, #0x0
	cmpne   r3, #0x2
	bne     branch_20a6a10
	ldr     lr, [r12]
	cmp     lr, #0x0
	cmpne   r2, #0x0
	beq     branch_20a6a10
	ldr     r0, [r12, #0x8]
	cmp     lr, r2
	movhi   lr, r2
	add     r0, r0, lr
	str     r0, [r12, #0x8]
	ldr     r0, [r12]
	sub     r2, r2, lr
	sub     r0, r0, lr
	str     r0, [r12]
.arm
branch_20a6a10: @ 20a6a10 :arm
	add     r3, r3, #0x1
	cmp     r3, #0x4
	add     r12, r12, #0xc
	blo     branch_20a69d0
	ldr     r0, [sp, #0xc]
	add     r2, sp, #0x0
	sub     r0, r0, r4
	str     r0, [sp, #0xc]
	mov     r3, #0x0
.arm
branch_20a6a34: @ 20a6a34 :arm
	ldr     r12, [r2]
	cmp     r12, #0x0
	cmpne   r1, #0x0
	beq     branch_20a6a68
	ldr     r0, [r2, #0x4]
	cmp     r12, r1
	movhi   r12, r1
	add     r0, r0, r12
	str     r0, [r2, #0x4]
	ldr     r0, [r2]
	sub     r1, r1, r12
	sub     r0, r0, r12
	str     r0, [r2]
.arm
branch_20a6a68: @ 20a6a68 :arm
	add     r3, r3, #0x1
	cmp     r3, #0x4
	add     r2, r2, #0xc
	blo     branch_20a6a34
	ldr     r0, [pc, #0xf8] @ [0x20a6b78] (=RAM_21c3ad4)
	bl      Function_20a6508
	ldr     r0, [pc, #0xf4] @ [0x20a6b7c] (=RAM_21c3ad8)
	bl      Function_20a6508
	ldr     r0, [pc, #0xe4] @ [0x20a6b74] (=RAM_21c3ad4)
	ldr     r1, [r0, #0x18]
	ldr     r0, [r0, #0x14]
	mov     r1, r1, lsr #4
	bl      Function_20a6514
	ldr     r3, [sp, #0x8]
	ldr     r1, [pc, #0xcc] @ [0x20a6b74] (=RAM_21c3ad4)
	cmp     r3, #0x0
	str     r0, [r1, #0x8]
	beq     branch_20a6ac0
	ldr     r0, [pc, #0xc4] @ [0x20a6b7c] (=RAM_21c3ad8)
	ldr     r1, [pc, #0xc4] @ [0x20a6b80] (=RAM_21c3adc)
	mov     r2, #0x0
	bl      Function_20a6560
.arm
branch_20a6ac0: @ 20a6ac0 :arm
	ldr     r3, [sp, #0x4]
	ldr     r2, [sp, #0x8]
	cmp     r3, #0x0
	beq     branch_20a6adc
	ldr     r0, [pc, #0xa0] @ [0x20a6b78] (=RAM_21c3ad4)
	ldr     r1, [pc, #0xa4] @ [0x20a6b80] (=RAM_21c3adc)
	bl      Function_20a6560
.arm
branch_20a6adc: @ 20a6adc :arm
	ldr     r3, [sp, #0x20]
	cmp     r3, #0x0
	beq     branch_20a6af8
	ldr     r0, [pc, #0x8c] @ [0x20a6b7c] (=RAM_21c3ad8)
	ldr     r1, [pc, #0x8c] @ [0x20a6b80] (=RAM_21c3adc)
	mov     r2, #1, 14 @ #0x40000
	bl      Function_20a6560
.arm
branch_20a6af8: @ 20a6af8 :arm
	ldr     r3, [sp, #0x1c]
	ldr     r2, [sp, #0x20]
	cmp     r3, #0x0
	beq     branch_20a6b18
	ldr     r0, [pc, #0x68] @ [0x20a6b78] (=RAM_21c3ad4)
	ldr     r1, [pc, #0x6c] @ [0x20a6b80] (=RAM_21c3adc)
	add     r2, r2, #1, 14 @ #0x40000
	bl      Function_20a6560
.arm
branch_20a6b18: @ 20a6b18 :arm
	ldr     r3, [sp, #0x28]
	cmp     r3, #0x0
	beq     branch_20a6b34
	ldr     r0, [pc, #0x4c] @ [0x20a6b78] (=RAM_21c3ad4)
	ldr     r1, [pc, #0x50] @ [0x20a6b80] (=RAM_21c3adc)
	mov     r2, #6, 16 @ #0x60000
	bl      Function_20a6560
.arm
branch_20a6b34: @ 20a6b34 :arm
	ldr     r3, [sp, #0x10]
	cmp     r3, #0x0
	beq     branch_20a6b50
	ldr     r0, [pc, #0x30] @ [0x20a6b78] (=RAM_21c3ad4)
	ldr     r1, [pc, #0x34] @ [0x20a6b80] (=RAM_21c3adc)
	add     r2, r4, #2, 16 @ #0x20000
	bl      Function_20a6560
.arm
branch_20a6b50: @ 20a6b50 :arm
	ldr     r0, [pc, #0x20] @ [0x20a6b78] (=RAM_21c3ad4)
	ldr     r1, [pc, #0x24] @ [0x20a6b80] (=RAM_21c3adc)
	bl      Function_20a6710
	ldr     r0, [pc, #0x18] @ [0x20a6b7c] (=RAM_21c3ad8)
	ldr     r1, [pc, #0x18] @ [0x20a6b80] (=RAM_21c3adc)
	bl      Function_20a6710
	add     sp, sp, #0x30
	ldmfd   sp!, {r4,pc}
@ 0x20a6b70

.word Unknown_20f9600 @ 0x20a6b70
.word RAM_21c3ad4 @ 0x20a6b74
.word RAM_21c3ad4 @ 0x20a6b78
.word RAM_21c3ad8 @ 0x20a6b7c
.word RAM_21c3adc @ 0x20a6b80



.arm
Function_20a6b84: @ 20a6b84 :arm
	mov     r0, r0, lsl #4
	bx      lr
@ 0x20a6b8c


.arm
Function_20a6b8c: @ 20a6b8c :arm
	stmfd   sp!, {r4,lr}
	ldr     r12, [pc, #0x34] @ [0x20a6bcc] (=RAM_21c3af0)
	mov     r4, r3
	str     r0, [r12, #0x8]
	str     r1, [r12, #0xc]
	str     r2, [r12, #0x10]
	bl      Function_20a6cf0
	cmp     r4, #0x0
	ldmeqfd sp!, {r4,pc}
	ldr     r3, [pc, #0x18] @ [0x20a6bd0] (=Function_20a6be0)
	ldr     r1, [pc, #0x18] @ [0x20a6bd4] (=Unknown_2100df4)
	ldr     r2, [pc, #0x18] @ [0x20a6bd8] (=Function_20a6cac)
	ldr     r0, [pc, #0x18] @ [0x20a6bdc] (=Unknown_2100df8)
	str     r3, [r1]
	str     r2, [r0]
	ldmfd   sp!, {r4,pc}
@ 0x20a6bcc

.word RAM_21c3af0 @ 0x20a6bcc
.word Function_20a6be0 @ 0x20a6bd0
.word Unknown_2100df4 @ 0x20a6bd4
.word Function_20a6cac @ 0x20a6bd8
.word Unknown_2100df8 @ 0x20a6bdc



.arm
Function_20a6be0: @ 20a6be0 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #0x8
	cmp     r0, #0x0
	moveq   r4, #0x8
	addne   r0, r0, #0x7
	bicne   r4, r0, #0x7
	ldr     r0, [pc, #0xa0] @ [0x20a6ca0] (=0x7fff8)
	cmp     r4, r0
	addcs   sp, sp, #0x8
	movcs   r0, #0x0
	ldmcsfd sp!, {r4,pc}
	cmp     r1, #0x0
	add     r2, sp, #0x4
	beq     branch_20a6c5c
	mov     r12, #0x8
	ldr     r0, [pc, #0x80] @ [0x20a6ca4] (=RAM_21c3af0)
	ldr     r1, [pc, #0x80] @ [0x20a6ca8] (=RAM_21c3af4)
	mov     r3, r4
	str     r12, [sp]
	bl      Function_20a65d0
	ldr     r2, [sp, #0x4]
	add     r1, r2, r4
	cmp     r1, #1, 16 @ #0x10000
	bls     branch_20a6c74
	ldr     r0, [pc, #0x5c] @ [0x20a6ca4] (=RAM_21c3af0)
	ldr     r1, [pc, #0x5c] @ [0x20a6ca8] (=RAM_21c3af4)
	mov     r3, r4
	bl      Function_20a6794
	add     sp, sp, #0x8
	mov     r0, #0x0
	ldmfd   sp!, {r4,pc}
@ 0x20a6c5c

.arm
branch_20a6c5c: @ 20a6c5c :arm
	ldr     r0, [pc, #0x40] @ [0x20a6ca4] (=RAM_21c3af0)
	mov     r12, #0x10
	ldr     r1, [pc, #0x3c] @ [0x20a6ca8] (=RAM_21c3af4)
	mov     r3, r4
	str     r12, [sp]
	bl      Function_20a65d0
.arm
branch_20a6c74: @ 20a6c74 :arm
	cmp     r0, #0x0
	addeq   sp, sp, #0x8
	moveq   r0, #0x0
	ldmeqfd sp!, {r4,pc}
	ldr     r0, [sp, #0x4]
	mov     r1, r4, lsr #3
	mov     r0, r0, lsl #13
	mov     r0, r0, lsr #16
	orr     r0, r0, r1, lsl #16
	add     sp, sp, #0x8
	ldmfd   sp!, {r4,pc}
@ 0x20a6ca0

.word 0x7fff8 @ 0x20a6ca0
.word RAM_21c3af0 @ 0x20a6ca4
.word RAM_21c3af4 @ 0x20a6ca8



.arm
Function_20a6cac: @ 20a6cac :arm
	stmfd   sp!, {r3,lr}
	mov     r1, #1, 16 @ #0x10000
	rsb     r1, r1, #0x0
	and     r1, r0, r1
	mov     r2, r0, lsl #16
	mov     r3, r1, lsr #16
	ldr     r0, [pc, #0x1c] @ [0x20a6ce8] (=RAM_21c3af0)
	ldr     r1, [pc, #0x1c] @ [0x20a6cec] (=RAM_21c3af4)
	mov     r2, r2, lsr #13
	mov     r3, r3, lsl #3
	bl      Function_20a6794
	cmp     r0, #0x0
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20a6ce8

.word RAM_21c3af0 @ 0x20a6ce8
.word RAM_21c3af4 @ 0x20a6cec



.arm
.globl Function_20a6cf0
Function_20a6cf0: @ 20a6cf0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x44] @ [0x20a6d40] (=RAM_21c3af0)
	ldr     r1, [r0, #0x10]
	ldr     r0, [r0, #0xc]
	mov     r1, r1, lsr #4
	bl      Function_20a6514
	ldr     r1, [pc, #0x30] @ [0x20a6d40] (=RAM_21c3af0)
	str     r0, [r1, #0x4]
	ldr     r0, [pc, #0x2c] @ [0x20a6d44] (=RAM_21c3af0)
	bl      Function_20a6508
	ldr     r1, [pc, #0x20] @ [0x20a6d40] (=RAM_21c3af0)
	ldr     r0, [pc, #0x20] @ [0x20a6d44] (=RAM_21c3af0)
	ldr     r3, [r1, #0x8]
	ldr     r1, [pc, #0x1c] @ [0x20a6d48] (=RAM_21c3af4)
	mov     r2, #0x0
	bl      Function_20a6560
	ldr     r0, [pc, #0xc] @ [0x20a6d44] (=RAM_21c3af0)
	ldr     r1, [pc, #0xc] @ [0x20a6d48] (=RAM_21c3af4)
	bl      Function_20a6710
	ldmfd   sp!, {r3,pc}
@ 0x20a6d40

.word RAM_21c3af0 @ 0x20a6d40
.word RAM_21c3af0 @ 0x20a6d44
.word RAM_21c3af4 @ 0x20a6d48



.arm
Function_20a6d4c: @ 20a6d4c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r1
	ldr     r1, [pc, #0x28] @ [0x20a6d84] (=0x41424e4b)
	bl      Function_20a727c
	movs    r4, r0
	moveq   r0, #0x0
	streq   r0, [r5]
	ldmeqfd sp!, {r3-r5,pc}
	add     r0, r4, #0x8
	bl      Function_20a6da0
	add     r0, r4, #0x8
	str     r0, [r5]
	mov     r0, #0x1
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a6d84

.word 0x41424e4b @ 0x20a6d84



.arm
Function_20a6d88: @ 20a6d88 :arm
	ldr     r12, [pc, #0x0] @ [0x20a6d90] (=Function_20a6d4c)
	bx      r12
@ 0x20a6d90

.word Function_20a6d4c @ 0x20a6d90



.arm
.globl Function_20a6d94
Function_20a6d94: @ 20a6d94 :arm
	ldr     r12, [pc, #0x0] @ [0x20a6d9c] (=Function_20a6d4c)
	bx      r12
@ 0x20a6d9c

.word Function_20a6d4c @ 0x20a6d9c



.arm
Function_20a6da0: @ 20a6da0 :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r1, [r0, #0x4]
	mov     r12, #0x0
	add     r1, r1, r0
	str     r1, [r0, #0x4]
	ldr     r1, [r0, #0x8]
	add     r1, r1, r0
	str     r1, [r0, #0x8]
	ldr     r1, [r0, #0xc]
	add     r6, r1, r0
	str     r6, [r0, #0xc]
	ldrh    r1, [r0]
	ldmib   r0, {r4,r5}
	cmp     r1, #0x0
	bls     branch_20a6e44
	mov     r1, r12
.arm
branch_20a6de0: @ 20a6de0 :arm
	add     r2, r4, r12, lsl #4
	ldr     r7, [r2, #0xc]
	mov     r3, r12, lsl #4
	add     r7, r5, r7
	str     r7, [r2, #0xc]
	ldrh    r7, [r4, r3]
	mov     lr, r1
	cmp     r7, #0x0
	bls     branch_20a6e2c
.arm
branch_20a6e04: @ 20a6e04 :arm
	ldr     r9, [r2, #0xc]
	add     r7, lr, #0x1
	ldr     r8, [r9, lr, lsl #0x3]
	mov     r7, r7, lsl #16
	add     r8, r6, r8
	str     r8, [r9, lr, lsl #0x3]
	ldrh    r8, [r4, r3]
	mov     lr, r7, lsr #16
	cmp     r8, r7, lsr #16
	bhi     branch_20a6e04
.arm
branch_20a6e2c: @ 20a6e2c :arm
	ldrh    r3, [r0]
	add     r2, r12, #0x1
	mov     r2, r2, lsl #16
	cmp     r3, r2, lsr #16
	mov     r12, r2, lsr #16
	bhi     branch_20a6de0
.arm
branch_20a6e44: @ 20a6e44 :arm
	ldr     r1, [r0, #0x14]
	cmp     r1, #0x0
	ldmeqfd sp!, {r3-r9,pc}
	add     r2, r1, r0
	str     r2, [r0, #0x14]
	add     r4, r2, #0x8
	ldr     r1, [r4, #0x4]
	mov     r0, #0x0
	add     r1, r1, r4
	str     r1, [r4, #0x4]
	ldrh    r1, [r2, #0x8]
	cmp     r1, #0x0
	ldmlsfd sp!, {r3-r9,pc}
	mov     r3, r0
	mov     r7, r0
.arm
branch_20a6e80: @ 20a6e80 :arm
	ldr     r6, [r4, #0x4]
	mov     r1, r7
	add     r2, r6, r3
	ldr     r5, [r2, #0x4]
	add     r5, r5, r4
	str     r5, [r2, #0x4]
	ldr     r5, [r2, #0x8]
	add     r5, r5, r4
	str     r5, [r2, #0x8]
	ldrh    r5, [r6, r3]
	cmp     r5, #0x0
	bls     branch_20a6ed8
	mov     r8, r7
.arm
branch_20a6eb4: @ 20a6eb4 :arm
	ldr     r6, [r2, #0x8]
	add     r1, r1, #0x1
	ldr     r5, [r6, r8]
	add     r5, r5, r4
	str     r5, [r6, r8]
	ldrh    r5, [r2]
	add     r8, r8, #0x4
	cmp     r1, r5
	blo     branch_20a6eb4
.arm
branch_20a6ed8: @ 20a6ed8 :arm
	ldrh    r1, [r4]
	add     r0, r0, #0x1
	add     r3, r3, #0xc
	cmp     r0, r1
	blo     branch_20a6e80
	ldmfd   sp!, {r3-r9,pc}
@ 0x20a6ef0


.arm
.globl Function_20a6ef0
Function_20a6ef0: @ 20a6ef0 :arm
	ldrh    r2, [r0]
	cmp     r2, r1
	ldrhi   r0, [r0, #0x4]
	addhi   r0, r0, r1, lsl #4
	movls   r0, #0x0
	bx      lr
@ 0x20a6f08


.arm
Function_20a6f08: @ 20a6f08 :arm
	ldrh    r1, [r0, #0x2]
	tst     r1, #0x1
	ldrh    r1, [r0]
	ldrne   r0, [r0, #0x4]
	addne   r0, r0, r1, lsl #4
	ldreq   r0, [r0, #0x4]
	addeq   r0, r0, r1, lsl #3
	bx      lr
@ 0x20a6f28


.arm
Function_20a6f28: @ 20a6f28 :arm
	ldr     r12, [pc, #0x4] @ [0x20a6f34] (=Function_20a72c4)
	add     r0, r0, #0x8
	bx      r12
@ 0x20a6f34

.word Function_20a72c4 @ 0x20a6f34



.arm
.globl Function_20a6f38
Function_20a6f38: @ 20a6f38 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r1
	ldr     r1, [pc, #0x28] @ [0x20a6f70] (=0x4345424b)
	bl      Function_20a727c
	movs    r4, r0
	moveq   r0, #0x0
	streq   r0, [r5]
	ldmeqfd sp!, {r3-r5,pc}

	add     r0, r4, #0x8
	bl      Function_20a6f9c
	add     r0, r4, #0x8
	str     r0, [r5]
	mov     r0, #0x1
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a6f70

.word 0x4345424b @ 0x20a6f70



.arm
Function_20a6f74: @ 20a6f74 :arm
	ldrh    r2, [r0]
	cmp     r1, r2
	movcs   r0, #0x0
	bxcs    lr
	ldrh    r2, [r0, #0x2]
	ldr     r0, [r0, #0x4]
	tst     r2, #0x1
	addne   r0, r0, r1, lsl #4
	addeq   r0, r0, r1, lsl #3
	bx      lr
@ 0x20a6f9c


.arm
Function_20a6f9c: @ 20a6f9c :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r5, r0
	ldr     r1, [r5, #0x4]
	add     r1, r1, r5
	str     r1, [r5, #0x4]
	bl      Function_20a6f08
	ldrh    r1, [r5]
	mov     r4, r0
	mov     r6, #0x0
	cmp     r1, #0x0
	bls     branch_20a6ff8
branch_20a6fc8: @ 20a6fc8 :arm
	mov     r0, r5
	mov     r1, r6
	bl      Function_20a6f74
	ldr     r2, [r0, #0x4]
	add     r1, r6, #0x1
	add     r2, r2, r4
	str     r2, [r0, #0x4]
	mov     r0, r1, lsl #16
	ldrh    r1, [r5]
	mov     r6, r0, lsr #16
	cmp     r1, r0, lsr #16
	bhi     branch_20a6fc8
branch_20a6ff8: @ 20a6ff8 :arm
	ldr     r0, [r5, #0xc]
	cmp     r0, #0x0
	beq     branch_20a701c
	add     r1, r0, r5
	str     r1, [r5, #0xc]
	ldr     r0, [r1, #0x4]
	add     r0, r0, r1
	str     r0, [r1, #0x4]
	str     r1, [r5, #0xc]
branch_20a701c: @ 20a701c :arm
	ldr     r0, [r5, #0x14]
	cmp     r0, #0x0
	ldmeqfd sp!, {r4-r6,pc}
	add     r0, r0, r5
	str     r0, [r5, #0x14]
	bl      Function_20a6f28
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a7038


.arm
Function_20a7038: @ 20a7038 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r1
	ldr     r1, [pc, #0x28] @ [0x20a7070] (=0x4d43424b)
	bl      Function_20a727c
	movs    r4, r0
	moveq   r0, #0x0
	streq   r0, [r5]
	ldmeqfd sp!, {r3-r5,pc}
	add     r0, r4, #0x8
	bl      Function_20a7084
	add     r0, r4, #0x8
	str     r0, [r5]
	mov     r0, #0x1
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a7070

.word 0x4d43424b @ 0x20a7070



.arm
Function_20a7074: @ 20a7074 :arm
	ldr     r12, [pc, #0x4] @ [0x20a7080] (=0x20a72c4)
	add     r0, r0, #0x8
	bx      r12
@ 0x20a7080

.word Function_20a72c4 @ 0x20a7080



.arm
Function_20a7084: @ 20a7084 :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [r0, #0x4]
	mov     lr, #0x0
	add     r1, r1, r0
	str     r1, [r0, #0x4]
	ldr     r1, [r0, #0x8]
	add     r1, r1, r0
	str     r1, [r0, #0x8]
	ldrh    r1, [r0]
	ldr     r4, [r0, #0x4]
	cmp     r1, #0x0
	bls     branch_20a70e0
branch_20a70b4: @ 20a70b4 :arm
	add     r3, r4, lr, lsl #3
	ldr     r12, [r0, #0x8]
	ldr     r2, [r3, #0x4]
	add     r1, lr, #0x1
	add     r2, r12, r2
	str     r2, [r3, #0x4]
	ldrh    r2, [r0]
	mov     r1, r1, lsl #16
	mov     lr, r1, lsr #16
	cmp     r2, r1, lsr #16
	bhi     branch_20a70b4
branch_20a70e0: @ 20a70e0 :arm
	ldr     r1, [r0, #0x10]
	cmp     r1, #0x0
	ldmeqfd sp!, {r4,pc}
	add     r1, r1, r0
	str     r1, [r0, #0x10]
	mov     r0, r1
	bl      Function_20a7074
	ldmfd   sp!, {r4,pc}
@ 0x20a7100


.arm
Function_20a7100: @ 20a7100 :arm
	ldrh    r2, [r0]
	cmp     r1, r2
	ldrcc   r0, [r0, #0x4]
	addcc   r0, r0, r1, lsl #3
	movcs   r0, #0x0
	bx      lr
@ 0x20a7118


.arm
.globl Function_20a7118
Function_20a7118: @ 20a7118 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r1
	ldr     r1, =CHAR_MagicConstant
	bl      Function_20a727c
	movs    r4, r0
	moveq   r0, #0x0
	streq   r0, [r5]
	ldmeqfd sp!, {r3-r5,pc}

	add     r0, r4, #0x8
	bl      Function_20a7154
	add     r0, r4, #0x8
	str     r0, [r5]
	mov     r0, #0x1
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a7150

.align 2
.pool



.arm
Function_20a7154: @ 20a7154 :arm
	ldr     r1, [r0, #0x14]
	add     r1, r1, r0
	str     r1, [r0, #0x14]
	bx      lr
@ 0x20a7164


/* Input:
*/
.arm
.globl Function_20a7164
Function_20a7164: @ 20a7164 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r1
	ldr     r1, =CHAR_MagicConstant
	bl      Function_20a727c
	movs    r4, r0
	moveq   r0, #0x0
	streq   r0, [r5]
	ldmeqfd sp!, {r3-r5,pc}

	add     r0, r4, #0x8
	bl      Function_20a71a0
	add     r0, r4, #0x8
	str     r0, [r5]
	mov     r0, #0x1
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a719c

.align 2
.pool



.arm
Function_20a71a0: @ 20a71a0 :arm
	ldr     r1, [r0, #0x14]
	add     r1, r1, r0
	str     r1, [r0, #0x14]
	bx      lr
@ 0x20a71b0

.arm
.globl Function_20a71b0
Function_20a71b0: @ 20a71b0 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r1
	ldr     r1, [pc, #0x28] @ [0x20a71e8] (=0x504c5454)
	bl      Function_20a727c
	movs    r4, r0
	moveq   r0, #0x0
	streq   r0, [r5]
	ldmeqfd sp!, {r3-r5,pc}
	add     r0, r4, #0x8
	bl      Function_20a7238
	add     r0, r4, #0x8
	str     r0, [r5]
	mov     r0, #0x1
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a71e8

.word 0x504c5454 @ 0x20a71e8



.arm
.globl Function_20a71ec
Function_20a71ec: @ 20a71ec :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r1
	ldr     r1, [pc, #0x28] @ [0x20a7224] (=0x50434d50)
	bl      Function_20a727c
	movs    r4, r0
	moveq   r0, #0x0
	streq   r0, [r5]
	ldmeqfd sp!, {r3-r5,pc}

	add     r0, r4, #0x8
	bl      Function_20a7228
	add     r0, r4, #0x8
	str     r0, [r5]
	mov     r0, #0x1
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a7224

.word 0x50434d50 @ 0x20a7224



.arm
Function_20a7228: @ 20a7228 :arm
	ldr     r1, [r0, #0x4]
	add     r1, r1, r0
	str     r1, [r0, #0x4]
	bx      lr
@ 0x20a7238


.arm
Function_20a7238: @ 20a7238 :arm
	ldr     r1, [r0, #0xc]
	add     r1, r1, r0
	str     r1, [r0, #0xc]
	bx      lr
@ 0x20a7248


.arm
.globl Function_20a7248
Function_20a7248: @ 20a7248 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r1
	ldr     r1, =SCRN_MagicConstant
	bl      Function_20a727c
	cmp     r0, #0x0
	moveq   r0, #0x0
	streq   r0, [r4]
	ldmeqfd sp!, {r4,pc}

	add     r0, r0, #0x8
	str     r0, [r4]
	mov     r0, #0x1
	ldmfd   sp!, {r4,pc}
@ 0x20a7278

.align 2
.pool



.arm
Function_20a727c: @ 20a727c :arm
	ldrh    r2, [r0, #0xc]
	ldrh    r12, [r0, #0xe]
	mov     r3, #0x0
	add     r0, r0, r2
	cmp     r12, #0x0
	bls     branch_20a72bc

branch_20a7294: @ 20a7294 :arm
	ldr     r2, [r0]
	cmp     r2, r1
	bxeq    lr

	add     r2, r3, #0x1
	mov     r2, r2, lsl #16
	ldr     r3, [r0, #0x4]
	cmp     r12, r2, lsr #16
	add     r0, r0, r3
	mov     r3, r2, lsr #16
	bhi     branch_20a7294

branch_20a72bc: @ 20a72bc :arm
	mov     r0, #0x0
	bx      lr
@ 0x20a72c4


.arm
Function_20a72c4: @ 20a72c4 :arm
	ldr     r1, [r0, #0x4]
	mov     r12, #0x0
	add     r1, r1, r0
	str     r1, [r0, #0x4]
	ldrh    r1, [r0]
	cmp     r1, #0x0
	bxls    lr
branch_20a72e0: @ 20a72e0 :arm
	ldr     r3, [r0, #0x4]
	add     r1, r12, #0x1
	ldr     r2, [r3, r12, lsl #0x2]
	mov     r1, r1, lsl #16
	add     r2, r0, r2
	str     r2, [r3, r12, lsl #0x2]
	ldrh    r2, [r0]
	mov     r12, r1, lsr #16
	cmp     r2, r1, lsr #16
	bhi     branch_20a72e0

	bx      lr
@ 0x20a730c


arm_func_start DrawTexturedQuad
DrawTexturedQuad: @ 20a730c :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r12, r3, lsl #8

	mov     r0, r0, lsl #8
	ldr     r3, =GFX_BEGIN
	mov     r4, r12, asr #16
	mov     r0, r0, asr #16
	mov     lr, r4, lsl #16
	mov     r4, r0, lsl #16
	mov     r0, r1, lsl #8
	mov     r12, #0x1
	mov     r0, r0, asr #16
	mov     r5, r0, lsl #16
	mov     r0, #0x10000000
	mov     r1, r2, lsl #8
	mov     r1, r1, asr #16
	mov     r2, r1, lsl #16
	mov     r7, lr, lsr #16
	mov     r1, r4, lsr #16
	mov     r5, r5, lsr #16
	mov     r2, r2, lsr #16
	str     r12, [r3] @ GFX_BEGIN

	orr     r4, r1, r7, lsl #16
	sub     r6, r3, #GFX_BEGIN - GFX_TEX_COORD
	str     r4, [r6] @ GFX_TEX_COORD
	sub     lr, r3, #GFX_BEGIN - GFX_VERTEX16
	str     r0, [lr] @ GFX_VERTEX16
	mov     r12, #0x0
	str     r12, [lr] @ GFX_VERTEX16

	orr     r4, r5, r7, lsl #16
	str     r4, [r6] @ GFX_TEX_COORD
	add     r0, r0, #0x1000
	str     r0, [lr] @ GFX_VERTEX16
	str     r12, [lr] @ GFX_VERTEX16

	orr     r0, r5, r2, lsl #16
	str     r0, [r6] @ GFX_TEX_COORD
	mov     r0, #0x1000
	str     r0, [lr] @ GFX_VERTEX16
	str     r12, [lr] @ GFX_VERTEX16

	orr     r0, r1, r2, lsl #16
	str     r0, [r6] @ GFX_TEX_COORD
	str     r12, [lr] @ GFX_VERTEX16
	str     r12, [lr] @ GFX_VERTEX16
	str     r12, [r3, #(GFX_END - GFX_BEGIN)]

	ldmfd   sp!, {r3-r7,pc}
@ 0x20a73bc

.align 2
.pool
arm_func_end DrawTexturedQuad



.arm
.globl Function_20a73c0
Function_20a73c0: @ 20a73c0 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x38
	ldr     r2, [pc, #0xa0] @ [0x20a7470] (=0xbfff0000)
	ldr     r1, [pc, #0xa0] @ [0x20a7474] (=GFX_VIEWPORT)
	mov     r0, r2, lsl #6
	str     r2, [r1]
	str     r0, [sp]
	mov     r1, #0x400000
	str     r1, [sp, #0x4]
	mov     r0, #0x0
	str     r1, [sp, #0x8]
	mov     r1, #0x1
	str     r1, [sp, #0xc]
	mov     r2, r0
	mov     r1, #0xc0000
	mov     r3, #0x100000
	str     r0, [sp, #0x10]
	bl      G3i_OrthoW_
	ldr     r1, [pc, #0x68] @ [0x20a7478] (=MATRIX_STORE)
	mov     r5, #0x0
	ldr     r0, [pc, #0x64] @ [0x20a747c] (=Unknown_20f9640)
	str     r5, [r1]
	add     r4, sp, #0x2c
	ldr     r12, [pc, #0x5c] @ [0x20a7480] (=Unknown_20f964c)
	add     lr, sp, #0x20
	ldmia   r0, {r0-r2}
	stmia   lr, {r0-r2}
	add     r3, sp, #0x14
	ldmia   r12, {r0-r2}
	stmia   r3, {r0-r2}
	mov     r2, r3
	str     r5, [r4]
	str     r5, [r4, #0x4]
	str     r5, [r4, #0x8]
	mov     r0, r4
	mov     r1, lr
	mov     r3, #0x1
	str     r5, [sp]
	bl      G3i_LookAt_
	ldr     r0, [pc, #0x20] @ [0x20a7484] (=MATRIX_CONTROL)
	mov     r1, #0x1
	str     r1, [r0]
	add     sp, sp, #0x38
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a7470

.word 0xbfff0000 @ 0x20a7470
.word GFX_VIEWPORT @ 0x20a7474
.word MATRIX_STORE @ 0x20a7478
.word Unknown_20f9640 @ 0x20a747c
.word Unknown_20f964c @ 0x20a7480
.word MATRIX_CONTROL @ 0x20a7484



arm_func_start DrawTranslatedScaledTexturedQuad
DrawTranslatedScaledTexturedQuad: @ 20a7488 :arm
	stmfd   sp!, {r4,lr}

	ldr     lr, =MATRIX_TRANSLATE
	mov     r0, r0, lsl #12
	str     r0, [lr] @ MATRIX_TRANSLATE
	mov     r4, r1, lsl #12
	ldr     r12, [sp, #0x8]
	str     r4, [lr] @ MATRIX_TRANSLATE
	mov     r4, r2, lsl #12
	ldr     r0, [sp, #0xc]
	ldr     r1, [sp, #0x14]
	ldr     r2, [sp, #0x10]
	str     r4, [lr] @ MATRIX_TRANSLATE

	mov     r4, r3, lsl #12
	ldr     r3, [sp, #0x18]
	mov     r12, r12, lsl #12
	str     r4, [lr, #-0x4]! @ MATRIX_SCALE - MATRIX_TRANSLATE
	str     r12, [lr] @ MATRIX_SCALE
	mov     r12, #0x1000
	mov     r0, r0, lsl #12
	mov     r1, r1, lsl #12
	mov     r2, r2, lsl #12
	mov     r3, r3, lsl #12
	str     r12, [lr] @ MATRIX_SCALE
	bl      DrawTexturedQuad

	ldmfd   sp!, {r4,pc}
@ 0x20a74ec

.align 2
.pool
arm_func_end DrawTranslatedScaledTexturedQuad



.arm
Function_20a74f0: @ 20a74f0 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r0, [r4, #0x18]
	cmp     r0, #0x0
	ldreq   r0, [r4, #0x1c]
	ldreq   r0, [r0, #0x8]
	cmp     r0, #0x3
	cmpne   r0, #0x4
	bne     branch_20a758c
	ldr     r0, [r4, #0x8]
	eor     r0, r0, #0x1
	str     r0, [r4, #0x8]
	ldr     r1, [r4, #0x1c]
	ldr     r2, [r4]
	ldrh    r0, [r1, #0x2]
	ldr     r1, [r1, #0xc]
	add     r0, r1, r0, lsl #3
	sub     r0, r0, #0x8
	cmp     r2, r0
	bhi     branch_20a75d4
	ldr     r0, [r4, #0x20]
	cmp     r0, #0x1
	bne     branch_20a755c
	ldr     r0, [r4, #0x24]
	ldr     r1, [r4, #0x10]
	ldr     r2, [r4, #0x28]
	blx     r2
.arm
branch_20a755c: @ 20a755c :arm
	ldr     r0, [r4, #0x18]
	cmp     r0, #0x0
	ldreq   r0, [r4, #0x1c]
	ldreq   r0, [r0, #0x8]
	cmp     r0, #0x2
	cmpne   r0, #0x4
	movne   r0, #0x0
	strne   r0, [r4, #0xc]
	bne     branch_20a75d4
	mov     r0, r4
	bl      Function_20a788c
	b       branch_20a75d4
@ 0x20a758c

.arm
branch_20a758c: @ 20a758c :arm
	ldr     r0, [r4, #0x20]
	cmp     r0, #0x1
	bne     branch_20a75a8
	ldr     r0, [r4, #0x24]
	ldr     r1, [r4, #0x10]
	ldr     r2, [r4, #0x28]
	blx     r2
.arm
branch_20a75a8: @ 20a75a8 :arm
	ldr     r0, [r4, #0x18]
	cmp     r0, #0x0
	ldreq   r0, [r4, #0x1c]
	ldreq   r0, [r0, #0x8]
	cmp     r0, #0x2
	cmpne   r0, #0x4
	movne   r0, #0x0
	strne   r0, [r4, #0xc]
	bne     branch_20a75d4
	mov     r0, r4
	bl      Function_20a788c
.arm
branch_20a75d4: @ 20a75d4 :arm
	ldr     r1, [r4, #0x1c]
	ldr     r2, [r4]
	ldrh    r0, [r1]
	ldr     r1, [r1, #0xc]
	add     r0, r1, r0, lsl #3
	sub     r0, r0, #0x8
	cmp     r2, r0
	strhi   r0, [r4]
	ldmhifd sp!, {r4,pc}
	cmp     r2, r1
	strcc   r1, [r4]
	ldmfd   sp!, {r4,pc}
@ 0x20a7604


.arm
Function_20a7604: @ 20a7604 :arm
	ldr     r3, [r0, #0x1c]
	ldrh    r2, [r3]
	cmp     r1, r2
	bhs     branch_20a7634
	ldr     r2, [r3, #0xc]
	add     r2, r2, r1, lsl #3
	str     r2, [r0]
	ldrh    r1, [r2, #0x4]
	cmp     r1, #0x0
	strne   r2, [r0, #0x4]
	mov     r0, #0x1
	bx      lr

branch_20a7634: @ 20a7634 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20a763c


.arm
Function_20a763c: @ 20a763c :arm
	ldr     r0, [r0, #0x4]
	ldr     r0, [r0]
	bx      lr
@ 0x20a7648


.arm
Function_20a7648: @ 20a7648 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r0
	ldr     r0, [r10, #0xc]
	mov     r9, #0x0
	cmp     r0, #0x1
	movne   r0, r9
	ldmnefd sp!, {r3-r11,pc}
	ldr     r0, [r10, #0x14]
	smull   r2, r1, r0, r1
	adds    r0, r2, #2, 22 @ #0x800
	adc     r1, r1, r9
	mov     r0, r0, lsr #12
	orr     r0, r0, r1, lsl #20
	bl      Function_20d4070
	mov     r4, #0x1
	ldr     r1, [r10, #0x10]
	mov     r11, r9
	add     r0, r1, r0
	str     r0, [r10, #0x10]
	mov     r8, r4
	mov     r7, r9
	mov     r5, r9
	mov     r6, r4
	b       branch_20a77c4

branch_20a76a8: @ 20a76a8 :arm
	ldr     r0, [r10]
	ldr     r1, [r10, #0x10]
	ldrh    r0, [r0, #0x4]
	mov     r9, r8
	sub     r0, r1, r0, lsl #12
	str     r0, [r10, #0x10]
	ldr     r0, [r10, #0x14]
	cmp     r0, #0x0
	movgt   r1, r8
	ldr     r0, [r10, #0x8]
	movle   r1, r7
	teq     r1, r0
	ldr     r0, [r10]
	addne   r0, r0, #0x8
	subeq   r0, r0, #0x8
	str     r0, [r10]
	ldr     r1, [r10, #0x14]
	ldr     r0, [r10]
	cmp     r1, #0x0
	movgt   r2, r6
	ldr     r1, [r10, #0x8]
	movle   r2, r5
	teq     r2, r1
	ldr     r1, [r10, #0x1c]
	ldr     r2, [r1, #0xc]
	beq     branch_20a7728
	ldrh    r1, [r1]
	add     r1, r2, r1, lsl #3
	cmp     r0, r1
	movcs   r0, r4
	movcc   r0, r11
	b       branch_20a7740

branch_20a7728: @ 20a7728 :arm
	ldrh    r1, [r1, #0x2]
	add     r1, r2, r1, lsl #3
	sub     r1, r1, #0x8
	cmp     r0, r1
	movls   r0, #0x1
	movhi   r0, #0x0
branch_20a7740: @ 20a7740 :arm
	cmp     r0, #0x0
	beq     branch_20a7750
	mov     r0, r10
	bl      Function_20a74f0
branch_20a7750: @ 20a7750 :arm
	ldr     r1, [r10]
	ldrh    r0, [r1, #0x4]
	cmp     r0, #0x0
	strne   r1, [r10, #0x4]
	ldr     r0, [r10, #0x20]
	cmp     r0, #0x0
	beq     branch_20a77c4
	ldr     r0, [r10, #0x1c]
	ldr     r2, [r10, #0x20]
	ldr     r0, [r0, #0xc]
	cmp     r2, #0x2
	ldr     r1, [r10]
	sub     r0, r1, r0
	mov     r0, r0, lsl #13
	mov     r1, r0, lsr #16
	beq     branch_20a779c
	cmp     r2, #0x3
	beq     branch_20a77b8
	b       branch_20a77c4

branch_20a779c: @ 20a779c :arm
	ldrh    r0, [r10, #0x2c]
	cmp     r1, r0
	bne     branch_20a77c4
	ldr     r0, [r10, #0x24]
	ldr     r2, [r10, #0x28]
	blx     r2
	b       branch_20a77c4

branch_20a77b8: @ 20a77b8 :arm
	ldr     r0, [r10, #0x24]
	ldr     r2, [r10, #0x28]
	blx     r2
branch_20a77c4: @ 20a77c4 :arm
	ldr     r0, [r10, #0xc]
	cmp     r0, #0x0
	beq     branch_20a77e8
	ldr     r0, [r10]
	ldr     r1, [r10, #0x10]
	ldrh    r0, [r0, #0x4]
	cmp     r1, r0, lsl #12
	movge   r0, #0x1
	bge     branch_20a77ec
branch_20a77e8: @ 20a77e8 :arm
	mov     r0, #0x0
branch_20a77ec: @ 20a77ec :arm
	cmp     r0, #0x0
	bne     branch_20a76a8
	mov     r0, r9
	ldmfd   sp!, {r3-r11,pc}
@ 0x20a77fc


.arm
Function_20a77fc: @ 20a77fc :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20a7604
	cmp     r0, #0x0
	movne   r1, #0x0
	strne   r1, [r4, #0x10]
	ldmfd   sp!, {r4,pc}
@ 0x20a7818


.arm
Function_20a7818: @ 20a7818 :arm
	ldr     r1, [r0, #0x1c]
	ldr     r2, [r0]
	ldr     r0, [r1, #0xc]
	sub     r0, r2, r0
	mov     r0, r0, lsl #13
	mov     r0, r0, lsr #16
	bx      lr
@ 0x20a7834


.arm
Function_20a7834: @ 20a7834 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	add     r0, r4, #0x20
	bl      Function_20a7874
	mov     r1, #0x0
	str     r1, [r4]
	str     r1, [r4, #0x4]
	str     r1, [r4, #0x8]
	mov     r0, #0x1
	str     r0, [r4, #0xc]
	str     r1, [r4, #0x10]
	mov     r0, #1, 20 @ #0x1000
	str     r0, [r4, #0x14]
	str     r1, [r4, #0x18]
	str     r1, [r4, #0x1c]
	ldmfd   sp!, {r4,pc}
@ 0x20a7874


.arm
Function_20a7874: @ 20a7874 :arm
	mov     r1, #0x0
	str     r1, [r0]
	str     r1, [r0, #0x4]
	str     r1, [r0, #0x8]
	strh    r1, [r0, #0xc]
	bx      lr
@ 0x20a788c


.arm
Function_20a788c: @ 20a788c :arm
	ldr     r1, [r0, #0x14]
	cmp     r1, #0x0
	movgt   r2, #0x1
	ldr     r1, [r0, #0x8]
	movle   r2, #0x0
	teq     r2, r1
	ldr     r2, [r0, #0x1c]
	beq     branch_20a78bc
	ldrh    r1, [r2, #0x2]
	ldr     r2, [r2, #0xc]
	add     r1, r2, r1, lsl #3
	b       branch_20a78cc

branch_20a78bc: @ 20a78bc :arm
	ldrh    r1, [r2]
	ldr     r2, [r2, #0xc]
	add     r1, r2, r1, lsl #3
	sub     r1, r1, #0x8
branch_20a78cc: @ 20a78cc :arm
	str     r1, [r0]
	ldr     r2, [r0]
	ldr     r12, [pc, #0xc] @ [0x20a78e8] (=Function_20a7648)
	mov     r1, #0x0
	str     r2, [r0, #0x4]
	str     r1, [r0, #0x10]
	bx      r12
@ 0x20a78e8

.word Function_20a7648 @ =0x20a7648, 0x20a78e8



.arm
Function_20a78ec: @ 20a78ec :arm
	ldr     r12, [pc, #0x4] @ [0x20a78f8] (=Function_20a788c)
	str     r1, [r0, #0x1c]
	bx      r12
@ 0x20a78f8

.word Function_20a788c @ 0x20a78f8



.arm
Function_20a78fc: @ 20a78fc :arm
	ldr     r1, [r0, #0x18]
	cmp     r1, #0x0
	ldreq   r0, [r0, #0x1c]
	ldreq   r1, [r0, #0x8]
	cmp     r1, #0x2
	cmpne   r1, #0x4
	moveq   r0, #0x1
	movne   r0, #0x0
	bx      lr
@ 0x20a7920


.arm
Function_20a7920: @ 20a7920 :arm
	ldr     r12, [pc, #0x8] @ [0x20a7930] (=MIi_CpuCopy16)
	add     r1, r1, #1, 22 @ #0x400
	add     r1, r1, #7, 8 @ #0x7000000
	bx      r12
@ 0x20a7930

.word MIi_CpuCopy16 @ =MIi_CpuCopy16, 0x20a7930



.arm
Function_20a7934: @ 20a7934 :arm
	ldr     r12, [pc, #0x4] @ [0x20a7940] (=MIi_CpuCopy16)
	add     r1, r1, #7, 8 @ #0x7000000
	bx      r12
@ 0x20a7940

.word MIi_CpuCopy16 @ =MIi_CpuCopy16, 0x20a7940



.arm
.globl Function_20a7944
Function_20a7944: @ 20a7944 :arm
	stmfd   sp!, {r3,lr}

	ldr     r1, [pc, #0x8c] @ [0x20a79dc] (=RAM_21c3c08)
	mov     r0, #0xc0
	mov     r2, #0x400
	bl      MIi_CpuClear16

	ldr     r1, [pc, #0x80] @ [0x20a79e0] (=RAM_21c4148)
	mov     r0, #0xc0
	mov     r2, #0x400
	bl      MIi_CpuClear16

	ldr     r1, [pc, #0x74] @ [0x20a79e4] (=RAM_21c4688)
	mov     r0, #0xc0
	mov     r2, #0x400
	bl      MIi_CpuClear16

	ldr     r0, [pc, #0x68] @ [0x20a79e8] (=0xffff)
	ldr     r1, [pc, #0x68] @ [0x20a79ec] (=RAM_21c3b08)
	mov     r2, #0x100
	bl      MIi_CpuClear16

	ldr     r0, [pc, #0x58] @ [0x20a79e8] (=0xffff)
	ldr     r1, [pc, #0x5c] @ [0x20a79f0] (=RAM_21c4048)
	mov     r2, #0x100
	bl      MIi_CpuClear16

	ldr     r0, [pc, #0x48] @ [0x20a79e8] (=0xffff)
	ldr     r1, [pc, #0x50] @ [0x20a79f4] (=RAM_21c4588)
	mov     r2, #0x100
	bl      MIi_CpuClear16

	ldr     r0, [pc, #0x38] @ [0x20a79e8] (=0xffff)
	ldr     r1, [pc, #0x44] @ [0x20a79f8] (=RAM_21c4008)
	mov     r2, #0x40
	bl      MIi_CpuClear16

	ldr     r0, [pc, #0x28] @ [0x20a79e8] (=0xffff)
	ldr     r1, [pc, #0x38] @ [0x20a79fc] (=RAM_21c4548)
	mov     r2, #0x40
	bl      MIi_CpuClear16

	ldr     r0, [pc, #0x18] @ [0x20a79e8] (=0xffff)
	ldr     r1, [pc, #0x2c] @ [0x20a7a00] (=RAM_21c4a88)
	mov     r2, #0x40
	bl      MIi_CpuClear16

	ldmfd   sp!, {r3,pc}
@ 0x20a79dc

.word RAM_21c3c08 @ 0x20a79dc
.word RAM_21c4148 @ 0x20a79e0
.word RAM_21c4688 @ 0x20a79e4
.word 0xffff @ 0x20a79e8
.word RAM_21c3b08 @ 0x20a79ec
.word RAM_21c4048 @ 0x20a79f0
.word RAM_21c4588 @ 0x20a79f4
.word RAM_21c4008 @ 0x20a79f8
.word RAM_21c4548 @ 0x20a79fc
.word RAM_21c4a88 @ 0x20a7a00



.arm
Function_20a7a04: @ 20a7a04 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r5, [sp, #0x1c]
	ldr     r6, [pc, #0x160] @ [0x20a7b74] (=RAM_21c3b08)
	mov     r4, #21, 26 @ #0x540
	mla     r4, r5, r4, r6
	mov     r12, r1
	sub     r1, r2, #0x1
	add     r1, r12, r1
	mov     r1, r1, lsl #16
	mov     r2, r1, lsr #16
	add     lr, r4, r12, lsl #1
	add     r7, r4, r2, lsl #1
	mov     r6, r0
	mov     r5, r3
	cmp     lr, r7
	bhi     branch_20a7a64
	ldr     r0, [pc, #0x12c] @ [0x20a7b78] (=0xffff)
branch_20a7a48: @ 20a7a48 :arm
	ldrh    r1, [lr]
	cmp     r1, r0
	movne   r0, #0x0
	bne     branch_20a7a68
	add     lr, lr, #0x2
	cmp     lr, r7
	bls     branch_20a7a48
branch_20a7a64: @ 20a7a64 :arm
	mov     r0, #0x1
branch_20a7a68: @ 20a7a68 :arm
	cmp     r0, #0x0
	beq     branch_20a7aac
	ldr     r0, [pc, #0x104] @ [0x20a7b7c] (=RAM_21c3b04)
	sub     r1, r2, r12
	ldrh    r7, [r0]
	add     r3, r1, #0x1
	add     r1, r4, r12, lsl #1
	add     lr, r7, #0x1
	strh    lr, [r0]
	strh    r7, [r6, #0x10]
	strh    r12, [r6, #0x4]
	strh    r2, [r6, #0x6]
	strh    r12, [r6, #0x8]
	ldrh    r0, [r6, #0x10]
	mov     r2, r3, lsl #1
	bl      MIi_CpuClear16
	b       branch_20a7ab4

branch_20a7aac: @ 20a7aac :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r7,pc}

branch_20a7ab4: @ 20a7ab4 :arm
	ldrh    r0, [sp, #0x18]
	add     r3, r4, #5, 24 @ #0x500
	cmp     r0, #0x0
	bne     branch_20a7ae0
	mov     r0, #0x20
	strh    r0, [r6, #0xa]
	mov     r0, #0x0
	strh    r0, [r6, #0xc]
	ldrh    r0, [r6, #0xa]
	strh    r0, [r6, #0xe]
	b       branch_20a7b5c

branch_20a7ae0: @ 20a7ae0 :arm
	sub     r0, r0, #0x1
	add     r0, r5, r0
	mov     r0, r0, lsl #16
	mov     r2, r0, lsr #16
	add     r7, r3, r5, lsl #1
	add     r4, r3, r2, lsl #1
	cmp     r7, r4
	bhi     branch_20a7b20
	ldr     r0, [pc, #0x70] @ [0x20a7b78] (=0xffff)
branch_20a7b04: @ 20a7b04 :arm
	ldrh    r1, [r7]
	cmp     r1, r0
	movne   r0, #0x0
	bne     branch_20a7b24
	add     r7, r7, #0x2
	cmp     r7, r4
	bls     branch_20a7b04
branch_20a7b20: @ 20a7b20 :arm
	mov     r0, #0x1
branch_20a7b24: @ 20a7b24 :arm
	cmp     r0, #0x0
	beq     branch_20a7b54
	strh    r5, [r6, #0xa]
	strh    r2, [r6, #0xc]
	strh    r5, [r6, #0xe]
	sub     r0, r2, r5
	add     r2, r0, #0x1
	ldrh    r0, [r6, #0x10]
	add     r1, r3, r5, lsl #1
	mov     r2, r2, lsl #1
	bl      MIi_CpuClear16
	b       branch_20a7b5c

branch_20a7b54: @ 20a7b54 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r7,pc}

branch_20a7b5c: @ 20a7b5c :arm
	mov     r1, #0x0
	ldr     r0, [sp, #0x1c]
	str     r1, [r6, #0x14]
	str     r0, [r6]
	mov     r0, #0x1
	ldmfd   sp!, {r3-r7,pc}
@ 0x20a7b74

.word RAM_21c3b08 @ 0x20a7b74
.word 0xffff @ 0x20a7b78
.word RAM_21c3b04 @ 0x20a7b7c



.arm
.globl Function_20a7b80
Function_20a7b80: @ 20a7b80 :arm
	stmfd   sp!, {r3-r5,lr}
	ldrh    r12, [r0, #0x6]
	ldrh    r5, [r0, #0x8]
	mov     r4, #0x0
	add     r3, r12, #0x1
	cmp     r5, r3
	bgt     branch_20a7ba8
	ldrh    r3, [r0, #0x4]
	cmp     r3, r12
	movls   r4, #0x1
branch_20a7ba8: @ 20a7ba8 :arm
	cmp     r4, #0x0
	moveq   r3, #0x0
	beq     branch_20a7bc4
	sub     r3, r12, r5
	add     r3, r3, #0x1
	mov     r3, r3, lsl #16
	mov     r3, r3, lsr #16
branch_20a7bc4: @ 20a7bc4 :arm
	cmp     r3, r2
	movcs   r3, #0x1
	movcc   r3, #0x0
	cmp     r3, #0x0
	beq     branch_20a7c44
	ldr     lr, [r0]
	ldr     r12, [pc, #0x68] @ [0x20a7c4c] (=RAM_21c3b08)
	mov     r3, #21, 26 @ #0x540
	mla     r12, lr, r3, r12
	ldrh    r3, [r0, #0x8]
	add     r12, r12, #1, 24 @ #0x100
	cmp     r2, #0x0
	add     r5, r12, r3, lsl #3
	mov     r4, #0x0
	ble     branch_20a7c3c
branch_20a7c00: @ 20a7c00 :arm
	ldrh    lr, [r1]
	mov     r3, r4, lsl #3
	add     r12, r5, r4, lsl #3
	strh    lr, [r5, r3]
	ldrh    r3, [r1, #0x2]
	add     r4, r4, #0x1
	cmp     r4, r2
	strh    r3, [r12, #0x2]
	ldrh    r3, [r1, #0x4]
	add     r1, r1, #0x8
	strh    r3, [r12, #0x4]
	ldrh    r3, [r0, #0x8]
	add     r3, r3, #0x1
	strh    r3, [r0, #0x8]
	blt     branch_20a7c00
branch_20a7c3c: @ 20a7c3c :arm
	mov     r0, #0x1
	ldmfd   sp!, {r3-r5,pc}

branch_20a7c44: @ 20a7c44 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a7c4c

.word RAM_21c3b08 @ 0x20a7c4c



.arm
Function_20a7c50: @ 20a7c50 :arm
	stmfd   sp!, {r4,lr}
	ldrh    lr, [r0, #0x6]
	ldrh    r12, [r0, #0x8]
	mov     r4, #0x0
	add     r3, lr, #0x1
	cmp     r12, r3
	bgt     branch_20a7c78
	ldrh    r3, [r0, #0x4]
	cmp     r3, lr
	movls   r4, #0x1
branch_20a7c78: @ 20a7c78 :arm
	cmp     r4, #0x0
	moveq   r3, #0x0
	beq     branch_20a7c94
	sub     r3, lr, r12
	add     r3, r3, #0x1
	mov     r3, r3, lsl #16
	mov     r3, r3, lsr #16
branch_20a7c94: @ 20a7c94 :arm
	cmp     r3, #0x1
	movcs   r3, #0x1
	movcc   r3, #0x0
	cmp     r3, #0x0
	beq     branch_20a7d24
	ldr     r4, [r0]
	ldr     r12, [pc, #0x78] @ [0x20a7d2c] (=RAM_21c3b08)
	mov     r3, #21, 26 @ #0x540
	mla     r12, r4, r3, r12
	ldrh    r3, [r0, #0x8]
	add     r4, r12, #0x100
	ldrh    r12, [r1]
	mov     lr, r3, lsl #3
	add     r3, r4, r3, lsl #3
	strh    r12, [r4, lr]
	ldrh    lr, [r1, #0x2]
	ldr     r12, [pc, #0x54] @ [0x20a7d30] (=0xfffe)
	strh    lr, [r3, #0x2]
	ldrh    r1, [r1, #0x4]
	cmp     r2, r12
	strh    r1, [r3, #0x4]
	beq     branch_20a7d10
	ldr     r1, [r3]
	mov     r12, r1, lsl #22
	mov     r12, r12, lsr #30
	tst     r12, #0x1
	beq     branch_20a7d10
	bic     r12, r1, #62, 8 @ #0x3e000000
	mov     r1, r2, lsl #27
	orr     r1, r12, r1, lsr #2
	str     r1, [r3]
branch_20a7d10: @ 20a7d10 :arm
	ldrh    r1, [r0, #0x8]
	add     r1, r1, #0x1
	strh    r1, [r0, #0x8]
	mov     r0, #0x1
	ldmfd   sp!, {r4,pc}

branch_20a7d24: @ 20a7d24 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4,pc}
@ 0x20a7d2c

.word RAM_21c3b08 @ 0x20a7d2c
.word 0xfffe @ 0x20a7d30



.arm
.globl Function_20a7d34
Function_20a7d34: @ 20a7d34 :arm
	stmfd   sp!, {r3,lr}
	ldrh    lr, [r0, #0xc]
	ldrh    r12, [r0, #0xe]
	mov     r3, #0x0
	add     r2, lr, #0x1
	cmp     r12, r2
	bgt     branch_20a7d5c
	ldrh    r2, [r0, #0xa]
	cmp     r2, lr
	movls   r3, #0x1
branch_20a7d5c: @ 20a7d5c :arm
	cmp     r3, #0x0
	moveq   r2, #0x0
	beq     branch_20a7d78
	sub     r2, lr, r12
	add     r2, r2, #0x1
	mov     r2, r2, lsl #16
	mov     r2, r2, lsr #16
branch_20a7d78: @ 20a7d78 :arm
	cmp     r2, #0x1
	movcs   r2, #0x1
	movcc   r2, #0x0
	cmp     r2, #0x0
	ldreq   r0, [pc, #0x60] @ [0x20a7df0] (=0xfffe)
	ldmeqfd sp!, {r3,pc}
	ldr     lr, [r0]
	ldr     r3, [pc, #0x58] @ [0x20a7df4] (=RAM_21c3b08)
	mov     r2, #21, 26 @ #0x540
	mla     r12, lr, r2, r3
	ldr     r3, [r1]
	ldrh    r2, [r0, #0xe]
	add     r12, r12, #1, 24 @ #0x100
	mov     r3, r3, asr #4
	add     r12, r12, r2, lsl #5
	strh    r3, [r12, #0x6]
	ldr     r3, [r1, #0x4]
	mov     r3, r3, asr #4
	strh    r3, [r12, #0xe]
	ldr     r3, [r1, #0x8]
	mov     r3, r3, asr #4
	strh    r3, [r12, #0x16]
	ldr     r1, [r1, #0xc]
	mov     r1, r1, asr #4
	strh    r1, [r12, #0x1e]
	ldrh    r1, [r0, #0xe]
	add     r1, r1, #0x1
	strh    r1, [r0, #0xe]
	mov     r0, r2
	ldmfd   sp!, {r3,pc}
@ 0x20a7df0

.word 0xfffe @ 0x20a7df0
.word RAM_21c3b08 @ 0x20a7df4



.arm
Function_20a7df8: @ 20a7df8 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r7, r0
	ldr     r0, [r7, #0x14]
	cmp     r0, #0x0
	beq     branch_20a7e8c
	ldr     r6, [r7]
	ldr     r1, [pc, #0x1dc] @ [0x20a7ff4] (=RAM_21c3b08)
	mov     r0, #21, 26 @ #0x540
	mla     r1, r6, r0, r1
	ldrh    r3, [r7, #0x4]
	ldrh    r0, [r7, #0x6]
	add     r5, r1, #1, 24 @ #0x100
	mov     r4, r3, lsl #3
	sub     r0, r0, r3
	add     r0, r0, #0x1
	mov     r0, r0, lsl #19
	mov     r8, r0, lsr #16
	mov     r2, r4, lsl #16
	mov     r1, r8
	add     r0, r5, r3, lsl #3
	mov     r7, r2, lsr #16
	bl      DC_FlushRange
	cmp     r6, #0x0
	beq     branch_20a7e64
	cmp     r6, #0x1
	beq     branch_20a7e78
	ldmfd   sp!, {r3-r11,pc}

branch_20a7e64: @ 20a7e64 :arm
	mov     r1, r7
	mov     r2, r8
	add     r0, r5, r4
	bl      GX_LoadOAM
	ldmfd   sp!, {r3-r11,pc}

branch_20a7e78: @ 20a7e78 :arm
	mov     r1, r7
	mov     r2, r8
	add     r0, r5, r4
	bl      GXS_LoadOAM
	ldmfd   sp!, {r3-r11,pc}

branch_20a7e8c: @ 20a7e8c :arm
	ldr     r0, [r7]
	ldr     r2, [pc, #0x15c] @ [0x20a7ff4] (=RAM_21c3b08)
	mov     r1, #21, 26 @ #0x540
	mla     r2, r0, r1, r2
	ldrh    r5, [r7, #0x4]
	ldrh    r1, [r7, #0x6]
	ldr     r3, [pc, #0x14c] @ [0x20a7ff8] (=Unknown_2100e90)
	add     r4, r2, #1, 24 @ #0x100
	sub     r1, r1, r5
	add     r1, r1, #0x1
	mov     r1, r1, lsl #16
	mov     r2, r5, lsl #19
	add     r6, r4, r5, lsl #3
	movs    r5, r1, lsr #16
	mov     r4, r2, lsr #16
	ldr     r9, [r3, r0, lsl #0x2]
	mov     r10, #0x0
	beq     branch_20a7f0c
	mov     r8, #0x6
branch_20a7ed8: @ 20a7ed8 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r8
	blx     r9
	add     r2, r4, #0x8
	add     r0, r10, #0x1
	mov     r1, r0, lsl #16
	mov     r0, r2, lsl #16
	cmp     r5, r1, lsr #16
	mov     r4, r0, lsr #16
	add     r6, r6, #0x8
	mov     r10, r1, lsr #16
	bhi     branch_20a7ed8
branch_20a7f0c: @ 20a7f0c :arm
	ldrh    r2, [r7, #0xc]
	ldrh    r1, [r7, #0xe]
	mov     r3, #0x0
	add     r0, r2, #0x1
	cmp     r1, r0
	bgt     branch_20a7f30
	ldrh    r0, [r7, #0xa]
	cmp     r0, r2
	movls   r3, #0x1
branch_20a7f30: @ 20a7f30 :arm
	cmp     r3, #0x0
	ldmeqfd sp!, {r3-r11,pc}
	ldr     r0, [r7]
	ldr     r2, [pc, #0xb0] @ [0x20a7ff4] (=RAM_21c3b08)
	mov     r1, #21, 26 @ #0x540
	mla     r2, r0, r1, r2
	ldr     r3, [pc, #0xa8] @ [0x20a7ff8] (=Unknown_2100e90)
	ldrh    r5, [r7, #0xa]
	ldrh    r1, [r7, #0xc]
	add     r4, r2, #1, 24 @ #0x100
	mov     r2, r5, lsl #21
	sub     r1, r1, r5
	add     r1, r1, #0x1
	mov     r1, r1, lsl #16
	ldr     r6, [r3, r0, lsl #0x2]
	add     r10, r4, r5, lsl #5
	movs    r9, r1, lsr #16
	mov     r8, r2, lsr #16
	mov     r7, #0x0
	ldmeqfd sp!, {r3-r11,pc}
	mov     r5, #0x2
	mov     r4, r5
	mov     r11, r5
branch_20a7f8c: @ 20a7f8c :arm
	mov     r2, r5
	add     r0, r10, #0x6
	add     r1, r8, #0x6
	blx     r6
	mov     r2, r4
	add     r0, r10, #0xe
	add     r1, r8, #0xe
	blx     r6
	add     r0, r10, #0x16
	add     r1, r8, #0x16
	mov     r2, r11
	blx     r6
	add     r0, r10, #0x1e
	add     r1, r8, #0x1e
	mov     r2, #0x2
	blx     r6
	add     r0, r8, #0x20
	mov     r0, r0, lsl #16
	mov     r8, r0, lsr #16
	add     r0, r7, #0x1
	mov     r0, r0, lsl #16
	add     r10, r10, #0x20
	cmp     r9, r0, lsr #16
	mov     r7, r0, lsr #16
	bhi     branch_20a7f8c
	ldmfd   sp!, {r3-r11,pc}
@ 0x20a7ff4

.word RAM_21c3b08 @ 0x20a7ff4
.word Unknown_2100e90 @ 0x20a7ff8



.arm
.globl Function_20a7ffc
Function_20a7ffc: @ 20a7ffc :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r5, r0
	ldr     r0, [r5, #0x14]
	cmp     r0, #0x0
	beq     branch_20a80b4
	ldrh    r3, [r5, #0x6]
	ldrh    r1, [r5, #0x8]
	mov     r2, #0x0
	add     r0, r3, #0x1
	cmp     r1, r0
	bgt     branch_20a8034
	ldrh    r0, [r5, #0x4]
	cmp     r0, r3
	movls   r2, #0x1
branch_20a8034: @ 20a8034 :arm
	cmp     r2, #0x0
	moveq   r4, #0x0
	beq     branch_20a8054
	ldrh    r0, [r5, #0x4]
	sub     r0, r3, r0
	add     r0, r0, #0x1
	mov     r0, r0, lsl #16
	mov     r4, r0, lsr #13
branch_20a8054: @ 20a8054 :arm
	ldr     r2, [r5]
	ldr     r1, =RAM_21c3b08
	mov     r0, #21, 26 @ #0x540
	mla     r1, r2, r0, r1
	add     r2, r1, #1, 24 @ #0x100
	ldrh    r0, [r5, #0x4]
	mov     r1, r4
	add     r6, r2, r0, lsl #3
	mov     r0, r6
	bl      DC_InvalidateRange
	ldr     r0, =Unknown_2101148
	mvn     r1, #0x0
	ldr     r0, [r0]
	cmp     r0, r1
	mov     r1, r6
	beq     branch_20a80a4
	mov     r3, r4
	mov     r2, #0xc0
	bl      MI_DmaFill32
	b       branch_20a8108

branch_20a80a4: @ 20a80a4 :arm
	mov     r2, r4
	mov     r0, #0xc0
	bl      MIi_CpuClear32
	b       branch_20a8108

branch_20a80b4: @ 20a80b4 :arm
	ldr     r2, [r5]
	ldr     r1, =RAM_21c3b08
	mov     r0, #21, 26 @ #0x540
	mla     r1, r2, r0, r1
	ldrh    r2, [r5, #0x4]
	ldrh    r0, [r5, #0x6]
	add     r1, r1, #1, 24 @ #0x100
	add     r3, r1, r2, lsl #3
	sub     r0, r0, r2
	add     r0, r0, #0x1
	mov     r0, r0, lsl #16
	movs    r2, r0, lsr #16
	mov     r0, #0x0
	beq     branch_20a8108
	mov     r1, #0xc0
branch_20a80f0: @ 20a80f0 :arm
	add     r0, r0, #0x1
	mov     r0, r0, lsl #16
	cmp     r2, r0, lsr #16
	strh    r1, [r3], #0x8
	mov     r0, r0, lsr #16
	bhi     branch_20a80f0

branch_20a8108: @ 20a8108 :arm
	ldrh    r0, [r5, #0x4]
	strh    r0, [r5, #0x8]
	ldrh    r0, [r5, #0xa]
	strh    r0, [r5, #0xe]
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a811c

.align 2
.pool



.arm
Function_20a8124: @ 20a8124 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20a7df8
	mov     r0, r4
	bl      Function_20a7ffc
	ldmfd   sp!, {r4,pc}
@ 0x20a813c


.arm
.globl Function_20a813c
Function_20a813c: @ 20a813c :arm
	ldrh    r12, [r0, #0x6]
	ldrh    r3, [r0, #0x8]
	mov     r2, #0x0
	add     r1, r12, #0x1
	cmp     r3, r1
	bgt     branch_20a8160
	ldrh    r0, [r0, #0x4]
	cmp     r0, r12
	movls   r2, #0x1
branch_20a8160: @ 20a8160 :arm
	cmp     r2, #0x0
	moveq   r0, #0x0
	bxeq    lr
	sub     r0, r12, r3
	add     r0, r0, #0x1
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bx      lr
@ 0x20a8180


.arm
Function_20a8180: @ 20a8180 :arm
	mov     r1, r1, lsl #1
	ldrh    r0, [r0, r1]
	bx      lr
@ 0x20a818c


.arm
.globl Function_20a818c
Function_20a818c: @ 20a818c :arm
	mov     r2, #0x0
	mvn     r1, #0x0
branch_20a8194: @ 20a8194 :arm
	str     r1, [r0, r2, lsl #0x2]
	add     r2, r2, #0x1
	cmp     r2, #0x3
	blt     branch_20a8194

	bx      lr
@ 0x20a81a8


/* Input:
r0: GraphicData3
r1: 0: Tex, 1: OBJMain, 2: OBJSub
r2: Destination
*/
.arm
.globl Function_20a81a8
Function_20a81a8: @ 20a81a8 :arm
	str     r2, [r0, r1, lsl #0x2]
	bx      lr
@ 0x20a81b0


.arm
.globl Function_20a81b0
Function_20a81b0: @ 20a81b0 :arm
	ldr     r0, [r0, r1, lsl #0x2]
	bx      lr
@ 0x20a81b8


.arm
Function_20a81b8: @ 20a81b8 :arm
	ldr     r1, [r0, r1, lsl #0x2]
	mvn     r0, #0x0
	cmp     r1, r0
	movne   r0, #0x1
	moveq   r0, #0x0
	bx      lr
@ 0x20a81d0


.arm
.globl Function_20a81d0
Function_20a81d0: @ 20a81d0 :arm
	mov     r3, #0x0
	mvn     r2, #0x0
branch_20a81d8: @ 20a81d8 :arm
	add     r1, r0, r3, lsl #2
	add     r3, r3, #0x1
	str     r2, [r1, #0x8]
	cmp     r3, #0x3
	blt     branch_20a81d8

	bx      lr
@ 0x20a81f0


.arm
Function_20a81f0: @ 20a81f0 :arm
	add     r0, r0, r1, lsl #2
	str     r2, [r0, #0x8]
	bx      lr
@ 0x20a81fc


.arm
.globl Function_20a81fc
Function_20a81fc: @ 20a81fc :arm
	add     r0, r0, r1, lsl #2
	ldr     r0, [r0, #0x8]
	bx      lr
@ 0x20a8208


.arm
Function_20a8208: @ 20a8208 :arm
	add     r0, r0, r1, lsl #2
	ldr     r1, [r0, #0x8]
	mvn     r0, #0x0
	cmp     r1, r0
	movne   r0, #0x1
	moveq   r0, #0x0
	bx      lr
@ 0x20a8224


/* Input:
r0: Ptr to GraphicData2
r1: Destination
r2: 0: Tex, 1: OBJMain, 2: OBJSub
r2: GraphicData4_4_1 and GraphicData4_4_2
r3: Ptr to GraphicData3
*/
.arm
.globl Function_20a8224_LoadTexOBJ
Function_20a8224_LoadTexOBJ: @ 20a8224 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	movs    r5, r2
	mov     r6, r1
	mov     r4, r3

	ldr     r0, [r7, #GraphicData2_8]
	beq     branch_20a8288
	cmp     r5, #0x1
	beq     branch_20a8254
	cmp     r5, #0x2
	beq     branch_20a8270
	b       branch_20a8288

branch_20a8254: @ 20a8254 :arm
	mov     r3, #REG_DISPCNT
	ldr     r2, [r3]
	ldr     r1, =0xffcfffef
	and     r1, r2, r1
	orr     r0, r1, r0
	str     r0, [r3]
	b       branch_20a8288

branch_20a8270: @ 20a8270 :arm
	ldr     r3, =REG_DISPCNT_SUB
	ldr     r1, =0xffcfffef
	ldr     r2, [r3]
	and     r1, r2, r1
	orr     r0, r1, r0
	str     r0, [r3]

branch_20a8288: @ 20a8288 :arm
	ldr     r0, [r7, #GraphicData2_Source]
	ldr     r1, [r7, #GraphicData2_Size]
	bl      DC_FlushRange

	cmp     r5, #0x0
	beq     branch_20a82b0
	cmp     r5, #0x1
	beq     branch_20a82cc
	cmp     r5, #0x2
	beq     branch_20a82e0
	b       branch_20a82f0

branch_20a82b0: @ 20a82b0 :arm
	bl      GX_BeginLoadTex
	ldr     r0, [r7, #GraphicData2_Source]
	ldr     r2, [r7, #GraphicData2_Size]
	mov     r1, r6
	bl      GX_LoadTex
	bl      GX_EndLoadTex
	b       branch_20a82f0

branch_20a82cc: @ 20a82cc :arm
	ldr     r0, [r7, #GraphicData2_Source]
	ldr     r2, [r7, #GraphicData2_Size]
	mov     r1, r6
	bl      GX_LoadOBJ
	b       branch_20a82f0

branch_20a82e0: @ 20a82e0 :arm
	ldr     r0, [r7, #GraphicData2_Source]
	ldr     r2, [r7, #GraphicData2_Size]
	mov     r1, r6
	bl      GXS_LoadOBJ

branch_20a82f0: @ 20a82f0 :arm
	ldr     r0, [r7, #GraphicData2_8]
	cmp     r0, #0x0
	ldrh    r0, [r7, #GraphicData2_2]
	bne     branch_20a8408
	cmp     r0, #0x10
	bgt     branch_20a833c
	bge     branch_20a8368
	cmp     r0, #0x8
	addls   pc, pc, r0, lsl #2
	b       branch_20a8378
	b       branch_20a8378
	b       branch_20a8348
	b       branch_20a8350
	b       branch_20a8378
	b       branch_20a8358
	b       branch_20a8378
	b       branch_20a8378
	b       branch_20a8378
	b       branch_20a8360

branch_20a833c: @ 20a833c :arm
	cmp     r0, #0x20
	beq     branch_20a8370
	b       branch_20a8378

branch_20a8348: @ 20a8348 :arm
	mov     r0, #0x0
	b       branch_20a837c

branch_20a8350: @ 20a8350 :arm
	mov     r0, #0x1
	b       branch_20a837c

branch_20a8358: @ 20a8358 :arm
	mov     r0, #0x2
	b       branch_20a837c

branch_20a8360: @ 20a8360 :arm
	mov     r0, #0x3
	b       branch_20a837c

branch_20a8368: @ 20a8368 :arm
	mov     r0, #0x4
	b       branch_20a837c

branch_20a8370: @ 20a8370 :arm
	mov     r0, #0x5
	b       branch_20a837c

branch_20a8378: @ 20a8378 :arm
	mov     r0, #0x0
branch_20a837c: @ 20a837c :arm
	str     r0, [r4, #GraphicData3_c]
	ldrh    r0, [r7, #GraphicData2_0]
	cmp     r0, #0x10
	bgt     branch_20a83c0
	bge     branch_20a83ec

	cmp     r0, #0x8
	addls   pc, pc, r0, lsl #2
	b       branch_20a83fc
	b       branch_20a83fc
	b       branch_20a83cc
	b       branch_20a83d4
	b       branch_20a83fc
	b       branch_20a83dc
	b       branch_20a83fc
	b       branch_20a83fc
	b       branch_20a83fc
	b       branch_20a83e4

branch_20a83c0: @ 20a83c0 :arm
	cmp     r0, #0x20
	beq     branch_20a83f4
	b       branch_20a83fc

branch_20a83cc: @ 20a83cc :arm
	mov     r0, #0x0
	b       branch_20a8400

branch_20a83d4: @ 20a83d4 :arm
	mov     r0, #0x1
	b       branch_20a8400

branch_20a83dc: @ 20a83dc :arm
	mov     r0, #0x2
	b       branch_20a8400

branch_20a83e4: @ 20a83e4 :arm
	mov     r0, #0x3
	b       branch_20a8400

branch_20a83ec: @ 20a83ec :arm
	mov     r0, #0x4
	b       branch_20a8400

branch_20a83f4: @ 20a83f4 :arm
	mov     r0, #0x5
	b       branch_20a8400

branch_20a83fc: @ 20a83fc :arm
	mov     r0, #0x0
branch_20a8400: @ 20a8400 :arm
	str     r0, [r4, #GraphicData3_10]
	b       branch_20a8414

branch_20a8408: @ 20a8408 :arm
	str     r0, [r4, #GraphicData3_c]
	ldrh    r0, [r7, #GraphicData2_0]
	str     r0, [r4, #GraphicData3_10]
branch_20a8414: @ 20a8414 :arm
	ldr     r1, [r7, #GraphicData2_4]
	mov     r0, #0x0
	str     r1, [r4, #GraphicData3_14]
	str     r0, [r4, #GraphicData3_18]
	mov     r0, #0x1
	str     r0, [r4, #GraphicData3_1c]
	ldr     r3, [r7, #GraphicData2_8]
	mov     r0, r4
	mov     r1, r5
	mov     r2, r6
	str     r3, [r4, #GraphicData3_20]
	bl      Function_20a81a8

	ldmfd   sp!, {r3-r7,pc}
@ 0x20a8448

.align 2
.pool



/* Input:
r0: Ptr to GraphicData2
r1: Destination
r2: 0: Tex, 1: OBJMain, 2: OBJSub
r3: Ptr to GraphicData3
*/
.arm
Function_20a8450_LoadTexOBJ: @ 20a8450 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	movs    r5, r2
	mov     r6, r1
	mov     r4, r3
	ldr     r0, [r7, #GraphicData2_8]
	beq     branch_20a84b4

	cmp     r5, #0x1
	beq     branch_20a8480_dispcnt
	cmp     r5, #0x2
	beq     branch_20a849c_dispcnt_sub
	b       branch_20a84b4

branch_20a8480_dispcnt: @ 20a8480 :arm
	mov     r3, #REG_DISPCNT
	ldr     r2, [r3]
	ldr     r1, =0xffcfffef
	and     r1, r2, r1
	orr     r0, r1, r0
	str     r0, [r3]
	b       branch_20a84b4

branch_20a849c_dispcnt_sub: @ 20a849c :arm
	ldr     r3, =REG_DISPCNT_SUB
	ldr     r1, =0xffcfffef
	ldr     r2, [r3]
	and     r1, r2, r1
	orr     r0, r1, r0
	str     r0, [r3]

branch_20a84b4: @ 20a84b4 :arm
	ldr     r0, [r7, #GraphicData2_Source]
	ldr     r1, [r7, #GraphicData2_Size]
	bl      DC_FlushRange

	cmp     r5, #0x0
	beq     branch_20a84dc_loadtex
	cmp     r5, #0x1
	beq     branch_20a84f8_loadobj
	cmp     r5, #0x2
	beq     branch_20a850c_loadobjsub
	b       branch_20a851c

branch_20a84dc_loadtex: @ 20a84dc :arm
	bl      GX_BeginLoadTex
	ldr     r0, [r7, #GraphicData2_Source]
	ldr     r2, [r7, #GraphicData2_Size]
	mov     r1, r6
	bl      GX_LoadTex
	bl      GX_EndLoadTex
	b       branch_20a851c

branch_20a84f8_loadobj: @ 20a84f8 :arm todo
	ldr     r0, [r7, #GraphicData2_Source]
	ldr     r2, [r7, #GraphicData2_Size]
	mov     r1, r6
	bl      GX_LoadOBJ
	b       branch_20a851c

branch_20a850c_loadobjsub: @ 20a850c :arm
	ldr     r0, [r7, #GraphicData2_Source]
	ldr     r2, [r7, #GraphicData2_Size]
	mov     r1, r6                  @ Destination
	bl      GXS_LoadOBJ

branch_20a851c: @ 20a851c :arm
	ldr     r0, [r7, #GraphicData2_8]
	cmp     r0, #0x0
	ldrh    r0, [r7, #GraphicData2_2]
	bne     branch_20a8634

	cmp     r0, #0x10
	bgt     branch_20a8568
	bge     branch_20a8594

	cmp     r0, #0x8
	addls   pc, pc, r0, lsl #2
	b       branch_20a85a4
	b       branch_20a85a4
	b       branch_20a8574
	b       branch_20a857c
	b       branch_20a85a4
	b       branch_20a8584
	b       branch_20a85a4
	b       branch_20a85a4
	b       branch_20a85a4
	b       branch_20a858c

branch_20a8568: @ 20a8568 :arm
	cmp     r0, #0x20
	beq     branch_20a859c
	b       branch_20a85a4

branch_20a8574: @ 20a8574 :arm
	mov     r0, #0x0
	b       branch_20a85a8

branch_20a857c: @ 20a857c :arm
	mov     r0, #0x1
	b       branch_20a85a8

branch_20a8584: @ 20a8584 :arm
	mov     r0, #0x2
	b       branch_20a85a8

branch_20a858c: @ 20a858c :arm
	mov     r0, #0x3
	b       branch_20a85a8

branch_20a8594: @ 20a8594 :arm
	mov     r0, #0x4
	b       branch_20a85a8

branch_20a859c: @ 20a859c :arm
	mov     r0, #0x5
	b       branch_20a85a8

branch_20a85a4: @ 20a85a4 :arm
	mov     r0, #0x0
branch_20a85a8: @ 20a85a8 :arm
	str     r0, [r4, #GraphicData3_c]
	ldrh    r0, [r7, #GraphicData2_0]
	cmp     r0, #0x10
	bgt     branch_20a85ec
	bge     branch_20a8618

	cmp     r0, #0x8
	addls   pc, pc, r0, lsl #2
	b       branch_20a8628
	b       branch_20a8628
	b       branch_20a85f8
	b       branch_20a8600
	b       branch_20a8628
	b       branch_20a8608
	b       branch_20a8628
	b       branch_20a8628
	b       branch_20a8628
	b       branch_20a8610

branch_20a85ec: @ 20a85ec :arm
	cmp     r0, #0x20
	beq     branch_20a8620
	b       branch_20a8628

branch_20a85f8: @ 20a85f8 :arm
	mov     r0, #0x0
	b       branch_20a862c

branch_20a8600: @ 20a8600 :arm
	mov     r0, #0x1
	b       branch_20a862c

branch_20a8608: @ 20a8608 :arm
	mov     r0, #0x2
	b       branch_20a862c

branch_20a8610: @ 20a8610 :arm
	mov     r0, #0x3
	b       branch_20a862c

branch_20a8618: @ 20a8618 :arm
	mov     r0, #0x4
	b       branch_20a862c

branch_20a8620: @ 20a8620 :arm
	mov     r0, #0x5
	b       branch_20a862c

branch_20a8628: @ 20a8628 :arm
	mov     r0, #0x0
branch_20a862c: @ 20a862c :arm
	str     r0, [r4, #GraphicData3_10]
	b       branch_20a8640

branch_20a8634: @ 20a8634 :arm
	str     r0, [r4, #GraphicData3_c]
	ldrh    r0, [r7, #GraphicData2_0]
	str     r0, [r4, #GraphicData3_10]
branch_20a8640: @ 20a8640 :arm
	ldr     r1, [r7, #GraphicData2_4]
	mov     r0, #0x0
	str     r1, [r4, #GraphicData3_14]
	str     r0, [r4, #GraphicData3_18]
	mov     r0, #0x1
	str     r0, [r4, #GraphicData3_1c]
	ldr     r3, [r7, #GraphicData2_8]
	mov     r0, r4
	mov     r1, r5
	mov     r2, r6
	str     r3, [r4, #GraphicData3_20]
	bl      Function_20a81a8

	ldmfd   sp!, {r3-r7,pc}
@ 0x20a8674

.align 2
.pool



/* Input:
r0: Ptr to GraphicData2
r1: Destination
r2: 0: Tex, 1: OBJMain, 2: OBJSub
r3: Ptr to GraphicData3
*/
.arm
Function_20a867c: @ 20a867c :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r6, r1
	ldr     r0, [r7, #GraphicData2_Source]
	ldr     r1, [r7, #GraphicData2_Size]
	mov     r5, r2
	mov     r4, r3
	bl      DC_FlushRange

	cmp     r5, #0x0
	ldr     r0, [r7, #GraphicData2_8]
	beq     branch_20a86f0
	cmp     r5, #0x1
	beq     branch_20a86bc
	cmp     r5, #0x2
	beq     branch_20a86d8
	b       branch_20a86f0

branch_20a86bc: @ 20a86bc :arm
	mov     r3, #REG_DISPCNT
	ldr     r2, [r3]
	ldr     r1, =0xffcfffef
	and     r1, r2, r1
	orr     r0, r1, r0
	str     r0, [r3]
	b       branch_20a86f0

branch_20a86d8: @ 20a86d8 :arm
	ldr     r3, =REG_DISPCNT_SUB
	ldr     r1, =0xffcfffef
	ldr     r2, [r3]
	and     r1, r2, r1
	orr     r0, r1, r0
	str     r0, [r3]
branch_20a86f0: @ 20a86f0 :arm
	ldr     r0, [r7, #GraphicData2_8]
	cmp     r0, #0x0
	ldrh    r0, [r7, #GraphicData2_2]
	bne     branch_20a8808
	cmp     r0, #0x10
	bgt     branch_20a873c
	bge     branch_20a8768
	cmp     r0, #0x8
	addls   pc, pc, r0, lsl #2
	b       branch_20a8778
	b       branch_20a8778
	b       branch_20a8748
	b       branch_20a8750
	b       branch_20a8778
	b       branch_20a8758
	b       branch_20a8778
	b       branch_20a8778
	b       branch_20a8778
	b       branch_20a8760

branch_20a873c: @ 20a873c :arm
	cmp     r0, #0x20
	beq     branch_20a8770
	b       branch_20a8778

branch_20a8748: @ 20a8748 :arm
	mov     r0, #0x0
	b       branch_20a877c

branch_20a8750: @ 20a8750 :arm
	mov     r0, #0x1
	b       branch_20a877c

branch_20a8758: @ 20a8758 :arm
	mov     r0, #0x2
	b       branch_20a877c

branch_20a8760: @ 20a8760 :arm
	mov     r0, #0x3
	b       branch_20a877c

branch_20a8768: @ 20a8768 :arm
	mov     r0, #0x4
	b       branch_20a877c

branch_20a8770: @ 20a8770 :arm
	mov     r0, #0x5
	b       branch_20a877c

branch_20a8778: @ 20a8778 :arm
	mov     r0, #0x0
branch_20a877c: @ 20a877c :arm
	str     r0, [r4, #GraphicData3_c]
	ldrh    r0, [r7, #GraphicData2_0]
	cmp     r0, #0x10
	bgt     branch_20a87c0
	bge     branch_20a87ec
	cmp     r0, #0x8
	addls   pc, pc, r0, lsl #2
	b       branch_20a87fc
	b       branch_20a87fc
	b       branch_20a87cc
	b       branch_20a87d4
	b       branch_20a87fc
	b       branch_20a87dc
	b       branch_20a87fc
	b       branch_20a87fc
	b       branch_20a87fc
	b       branch_20a87e4

branch_20a87c0: @ 20a87c0 :arm
	cmp     r0, #0x20
	beq     branch_20a87f4
	b       branch_20a87fc

branch_20a87cc: @ 20a87cc :arm
	mov     r0, #0x0
	b       branch_20a8800

branch_20a87d4: @ 20a87d4 :arm
	mov     r0, #0x1
	b       branch_20a8800

branch_20a87dc: @ 20a87dc :arm
	mov     r0, #0x2
	b       branch_20a8800

branch_20a87e4: @ 20a87e4 :arm
	mov     r0, #0x3
	b       branch_20a8800

branch_20a87ec: @ 20a87ec :arm
	mov     r0, #0x4
	b       branch_20a8800

branch_20a87f4: @ 20a87f4 :arm
	mov     r0, #0x5
	b       branch_20a8800

branch_20a87fc: @ 20a87fc :arm
	mov     r0, #0x0
branch_20a8800: @ 20a8800 :arm
	str     r0, [r4, #GraphicData3_10]
	b       branch_20a8814

branch_20a8808: @ 20a8808 :arm
	str     r0, [r4, #GraphicData3_c]
	ldrh    r0, [r7, #GraphicData2_0]
	str     r0, [r4, #GraphicData3_10]
branch_20a8814: @ 20a8814 :arm
	ldr     r1, [r7, #GraphicData2_4]
	mov     r0, #0x0
	str     r1, [r4, #GraphicData3_14]
	str     r0, [r4, #GraphicData3_18]
	mov     r0, #0x1
	str     r0, [r4, #GraphicData3_1c]
	ldr     r3, [r7, #GraphicData2_8]
	mov     r0, r4
	mov     r1, r5
	mov     r2, r6
	str     r3, [r4, #GraphicData3_20]
	bl      Function_20a81a8

	ldmfd   sp!, {r3-r7,pc}
@ 0x20a8848

.align 2
.pool



.arm
.globl Function_20a8850
Function_20a8850: @ 20a8850 :arm
	stmfd   sp!, {r3-r9,lr}
	mov     r9, r0
	ldr     r4, [r9, #0xc]
	ldr     r5, [r9, #0x8]
	mov     r8, r1
	mov     r7, r2
	mov     r0, r4
	mov     r1, r5
	mov     r6, r3
	bl      DC_FlushRange
	cmp     r7, #0x0
	beq     branch_20a890c
	cmp     r7, #0x1
	beq     branch_20a8894
	cmp     r7, #0x2
	beq     branch_20a88d0
	b       branch_20a8924
@ 0x20a8894

.arm
branch_20a8894: @ 20a8894 :arm
	ldr     r0, [r9, #0x4]
	cmp     r0, #0x0
	beq     branch_20a88bc
	bl      GX_BeginLoadOBJExtPltt
	mov     r0, r4
	mov     r1, r8
	mov     r2, r5
	bl      GX_LoadOBJExtPltt
	bl      GX_EndLoadOBJExtPltt
	b       branch_20a8924
@ 0x20a88bc

.arm
branch_20a88bc: @ 20a88bc :arm
	mov     r0, r4
	mov     r1, r8
	mov     r2, r5
	bl      GX_LoadOBJPltt
	b       branch_20a8924
@ 0x20a88d0

.arm
branch_20a88d0: @ 20a88d0 :arm
	ldr     r0, [r9, #0x4]
	cmp     r0, #0x0
	beq     branch_20a88f8
	bl      GXS_BeginLoadOBJExtPltt
	mov     r0, r4
	mov     r1, r8
	mov     r2, r5
	bl      GXS_LoadOBJExtPltt
	bl      GXS_EndLoadOBJExtPltt
	b       branch_20a8924
@ 0x20a88f8

.arm
branch_20a88f8: @ 20a88f8 :arm
	mov     r0, r4
	mov     r1, r8
	mov     r2, r5
	bl      GXS_LoadOBJPltt
	b       branch_20a8924
@ 0x20a890c

.arm
branch_20a890c: @ 20a890c :arm
	bl      GX_BeginLoadTexPltt
	mov     r0, r4
	mov     r1, r8
	mov     r2, r5
	bl      GX_LoadTexPltt
	bl      GX_EndLoadTexPltt
.arm
branch_20a8924: @ 20a8924 :arm
	ldr     r1, [r9]
	mov     r0, r6
	str     r1, [r6]
	ldr     r3, [r9, #0x4]
	mov     r1, r7
	mov     r2, r8
	str     r3, [r6, #0x4]
	bl      Function_20a81f0
	ldmfd   sp!, {r3-r9,pc}
@ 0x20a8948


.arm
.globl Function_20a8948
Function_20a8948: @ 20a8948 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x8
	mov     r10, r0
	ldr     r0, [r10]
	str     r1, [sp]
	cmp     r0, #0x3
	ldr     r0, [sp, #0x30]
	moveq   r8, #0x20
	str     r0, [sp, #0x30]
	ldr     r0, [sp]
	mov     r9, r2
	ldrh    r0, [r0]
	mov     r11, r3
	movne   r8, #2, 24 @ #0x200
	str     r0, [sp, #0x4]
	mov     r7, #0x0
	movs    r0, r0
	beq     branch_20a8a7c
.arm
branch_20a8990: @ 20a8990 :arm
	ldr     r0, [sp]
	ldr     r5, [r10, #0xc]
	ldr     r1, [r0, #0x4]
	mov     r0, r7, lsl #1
	ldrh    r0, [r1, r0]
	mul     r4, r8, r7
	mul     r6, r8, r0
	ldr     r1, [r10, #0x8]
	mov     r0, r5
	bl      DC_FlushRange
	cmp     r11, #0x0
	beq     branch_20a8a4c
	cmp     r11, #0x1
	beq     branch_20a89d4
	cmp     r11, #0x2
	beq     branch_20a8a10
	b       branch_20a8a64
@ 0x20a89d4

.arm
branch_20a89d4: @ 20a89d4 :arm
	ldr     r0, [r10, #0x4]
	cmp     r0, #0x0
	beq     branch_20a89fc
	bl      GX_BeginLoadOBJExtPltt
	add     r0, r5, r4
	mov     r2, r8
	add     r1, r9, r6
	bl      GX_LoadOBJExtPltt
	bl      GX_EndLoadOBJExtPltt
	b       branch_20a8a64
@ 0x20a89fc

.arm
branch_20a89fc: @ 20a89fc :arm
	mov     r2, r8
	add     r0, r5, r4
	add     r1, r9, r6
	bl      GX_LoadOBJPltt
	b       branch_20a8a64
@ 0x20a8a10

.arm
branch_20a8a10: @ 20a8a10 :arm
	ldr     r0, [r10, #0x4]
	cmp     r0, #0x0
	beq     branch_20a8a38
	bl      GXS_BeginLoadOBJExtPltt
	add     r0, r5, r4
	mov     r2, r8
	add     r1, r9, r6
	bl      GXS_LoadOBJExtPltt
	bl      GXS_EndLoadOBJExtPltt
	b       branch_20a8a64
@ 0x20a8a38

.arm
branch_20a8a38: @ 20a8a38 :arm
	mov     r2, r8
	add     r0, r5, r4
	add     r1, r9, r6
	bl      GXS_LoadOBJPltt
	b       branch_20a8a64
@ 0x20a8a4c

.arm
branch_20a8a4c: @ 20a8a4c :arm
	bl      GX_BeginLoadTexPltt
	add     r0, r5, r4
	mov     r2, r8
	add     r1, r9, r6
	bl      GX_LoadTexPltt
	bl      GX_EndLoadTexPltt
.arm
branch_20a8a64: @ 20a8a64 :arm
	add     r0, r7, #0x1
	mov     r1, r0, lsl #16
	ldr     r0, [sp, #0x4]
	mov     r7, r1, lsr #16
	cmp     r0, r1, lsr #16
	bhi     branch_20a8990
.arm
branch_20a8a7c: @ 20a8a7c :arm
	ldr     r0, [sp, #0x30]
	ldr     r2, [r10]
	mov     r1, r0
	str     r2, [r1]
	ldr     r4, [r10, #0x4]
	mov     r3, r0
	mov     r1, r11
	mov     r2, r9
	str     r4, [r3, #0x4]
	bl      Function_20a81f0
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r11,pc}
@ 0x20a8aac


.arm
Function_20a8aac: @ 20a8aac :arm
	mov     r2, #0x0
	mvn     r1, #0x0
branch_20a8ab4: @ 20a8ab4 :arm
	str     r1, [r0, r2, lsl #0x2]
	add     r2, r2, #0x1
	cmp     r2, #0x3
	blt     branch_20a8ab4
	bx      lr
@ 0x20a8ac8


.arm
Function_20a8ac8: @ 20a8ac8 :arm
	str     r2, [r0, r1, lsl #0x2]
	bx      lr
@ 0x20a8ad0


.arm
Function_20a8ad0: @ 20a8ad0 :arm
	ldr     r0, [r0, r1, lsl #0x2]
	bx      lr
@ 0x20a8ad8


.arm
Function_20a8ad8: @ 20a8ad8 :arm
	ldr     r3, [r0]
	cmp     r3, #0x1
	bxne    lr
	ldrh    r3, [r0, #0x12]
	orr     r3, r3, #0x8
	strh    r3, [r0, #0x12]
	strh    r1, [r0, #0xc]
	strh    r2, [r0, #0xe]
	bx      lr
@ 0x20a8afc

.arm
Function_20a8afc: @ 20a8afc :arm
	ldr     r2, [r0]
	cmp     r2, #0x1
	bxne    lr
	ldrh    r2, [r0, #0x12]
	orr     r2, r2, #0x4
	strh    r2, [r0, #0x12]
	strh    r1, [r0, #0x10]
	bx      lr
@ 0x20a8b1c

.arm
Function_20a8b1c: @ 20a8b1c :arm
	ldr     r3, [r0]
	cmp     r3, #0x1
	bxne    lr
	ldrh    r3, [r0, #0x12]
	orr     r3, r3, #0x2
	strh    r3, [r0, #0x12]
	stmib   r0, {r1,r2}
	bx      lr
@ 0x20a8b3c

.arm
Function_20a8b3c: @ 20a8b3c :arm
	ldr     r12, [pc, #0x4] @ [0x20a8b48] (=Function_20a8b4c)
	str     r1, [r0]
	bx      r12
@ 0x20a8b48

.word Function_20a8b4c @ 0x20a8b48



.arm
Function_20a8b4c: @ 20a8b4c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	add     r1, r4, #0x4
	mov     r0, #0x0
	mov     r2, #0x18
	bl      MIi_CpuClear16
	mov     r0, #1, 20 @ #0x1000
	str     r0, [r4, #0x4]
	str     r0, [r4, #0x8]
	ldmfd   sp!, {r4,pc}
@ 0x20a8b74

.arm
Function_20a8b74: @ 20a8b74 :arm
	mov     r2, #0x0
	str     r2, [r0]
	str     r1, [r0, #0x4]
	mov     r1, #0x1
	str     r1, [r0, #0x8]
	ldr     r12, [pc, #0x4] @ [0x20a8b94] (=Function_20a8b3c)
	add     r0, r0, #0xc
	bx      r12
@ 0x20a8b94

.word Function_20a8b3c @ =0x20a8b3c, 0x20a8b94



.arm
Function_20a8b98: @ 20a8b98 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r4, r0
	ldr     r1, [r4, #0x4]
	ldrh    r1, [r1, #0x4]
	cmp     r1, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	bl      Function_20a763c
	mov     r0, r4
	bl      Function_20a763c
	mov     r5, r0
	ldr     r6, [r4, #0x34]
	ldrh    r1, [r5]
	mov     r0, r6
	bl      Function_20a6f74
	str     r0, [r4, #0x30]
	ldr     r1, [r4, #0x1c]
	add     r0, r4, #0x3c
	ldr     r2, [r1, #0x4]
	mov     r1, #0x1
	and     r7, r2, #0xff
	bl      Function_20a8b3c
	cmp     r7, #0x0
	beq     branch_20a8c38
	cmp     r7, #0x2
	bne     branch_20a8c10
	ldrsh   r1, [r5, #0x4]
	ldrsh   r2, [r5, #0x6]
	add     r0, r4, #0x3c
	bl      Function_20a8ad8
	b       branch_20a8c38
@ 0x20a8c10

.arm
branch_20a8c10: @ 20a8c10 :arm
	add     r0, r4, #0x3c
	ldmib   r5, {r1,r2}
	bl      Function_20a8b1c
	ldrh    r1, [r5, #0x2]
	add     r0, r4, #0x3c
	bl      Function_20a8afc
	ldrsh   r1, [r5, #0xc]
	ldrsh   r2, [r5, #0xe]
	add     r0, r4, #0x3c
	bl      Function_20a8ad8
.arm
branch_20a8c38: @ 20a8c38 :arm
	ldr     r2, [r6, #0xc]
	cmp     r2, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	cmp     r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	ldr     r1, [r4, #0x38]
	mvn     r0, #0x0
	cmp     r1, r0
	movne   r0, #0x1
	moveq   r0, #0x0
	cmp     r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	ldrh    r1, [r5]
	ldr     r2, [r2, #0x4]
	ldr     r0, [r4, #0x38]
	add     r3, r2, r1, lsl #3
	ldmia   r3, {r1,r2}
	bl      Function_20ab3a8
	ldmfd   sp!, {r3-r7,pc}
@ 0x20a8c88


.arm
.globl Function_20a8c88
Function_20a8c88: @ 20a8c88 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	str     r2, [r5, #0x34]
	mvn     r2, #0x0
	add     r0, r5, #0x3c
	mov     r1, #0x1
	str     r2, [r5, #0x38]
	bl      Function_20a8b3c
	mov     r0, r5
	bl      Function_20a7834
	mov     r0, r5
	mov     r1, r4
	bl      Function_20a8d48
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a8cc4


.arm
Function_20a8cc4: @ 20a8cc4 :arm
	stmfd   sp!, {r3-r7,lr}
	sub     sp, sp, #0x10
	mov     r4, r2
	ldr     r2, [r4, #0xc]
	mov     r5, r1
	ldr     r1, [r2]
	ldr     r2, [sp, #0x34]
	str     r1, [sp]
	ldr     r1, [sp, #0x38]
	str     r2, [sp, #0x4]
	mov     r6, r3
	mov     r7, r0
	ldr     r12, [sp, #0x3c]
	str     r1, [sp, #0x8]
	ldr     r1, [sp, #0x28]
	ldr     r2, [sp, #0x2c]
	ldr     r3, [sp, #0x30]
	mov     r0, r6
	str     r12, [sp, #0xc]
	bl      Function_20ab17c
	str     r6, [r7, #0x38]
	str     r4, [r7, #0x34]
	add     r0, r7, #0x3c
	mov     r1, #0x1
	str     r6, [r7, #0x38]
	bl      Function_20a8b3c
	mov     r0, r7
	bl      Function_20a7834
	mov     r0, r7
	mov     r1, r5
	bl      Function_20a8d48
	add     sp, sp, #0x10
	ldmfd   sp!, {r3-r7,pc}
@ 0x20a8d48

.arm
Function_20a8d48: @ 20a8d48 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20a78ec
	mov     r0, r4
	bl      Function_20a8b98
	ldmfd   sp!, {r4,pc}
@ 0x20a8d60


.arm
.globl Function_20a8d60
Function_20a8d60: @ 20a8d60 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20a7648
	cmp     r0, #0x0
	ldmeqfd sp!, {r4,pc}

	mov     r0, r4
	bl      Function_20a8b98
	ldmfd   sp!, {r4,pc}
@ 0x20a8d80


.arm
Function_20a8d80: @ 20a8d80 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20a77fc
	cmp     r0, #0x0
	ldmeqfd sp!, {r4,pc}

	mov     r0, r4
	bl      Function_20a8b98
	ldmfd   sp!, {r4,pc}
@ 0x20a8da0


.arm
.globl Function_20a8da0
Function_20a8da0: @ 20a8da0 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x20
	ldrh    r5, [r2]
	ldr     r4, [sp, #0x50]
	ldr     r9, [sp, #0x48]
	str     r4, [sp, #0x50]
	cmp     r1, r5
	movcs   r1, r5
	mov     r4, #0x0
	cmp     r1, #0x0
	str     r4, [sp]
	bls     branch_20a90e0

	ldrh    r4, [sp, #0x4c]
	str     r4, [sp, #0x4]
branch_20a8dd8: @ 20a8dd8 :arm
	ldr     r5, [sp]
	ldr     r4, [sp]
	add     r8, r0, r5, lsl #3
	mov     r6, r5
	mov     r5, #0x6
	mul     r5, r6, r5
	ldr     r7, [r2, #0x4]
	mov     r4, r4, lsl #3
	add     r6, r7, r5
	ldrh    r5, [r7, r5]
	cmp     r3, #0x0
	cmpeq   r9, #0x0
	strh    r5, [r0, r4]
	ldrh    r4, [r6, #0x2]
	strh    r4, [r8, #0x2]
	ldrh    r4, [r6, #0x4]
	strh    r4, [r8, #0x4]
	beq     branch_20a90c4
	ldr     r5, [r8]
	ldr     r4, [pc, #0x2c0] @ [0x20a90ec] (=0x1ff0000)
	and     r4, r5, r4
	mov     r4, r4, lsr #16
	mov     r4, r4, lsl #16
	mov     r4, r4, asr #16
	cmp     r4, #0xff
	orrgt   r4, r4, #255, 24 @ #0xff00
	movgt   r4, r4, lsl #16
	movgt   r4, r4, asr #16
	mov     r4, r4, lsl #12
	str     r4, [sp, #0x18]
	ldr     r4, [r8]
	and     r4, r4, #0xff
	cmp     r4, #0x7f
	orrgt   r4, r4, #255, 24 @ #0xff00
	movgt   r4, r4, lsl #16
	movgt   r4, r4, asr #16
	mov     r4, r4, lsl #12
	str     r4, [sp, #0x1c]
	cmp     r3, #0x0
	beq     branch_20a9064
	ldr     r6, [r8]
	and     r5, r6, #3, 24 @ #0x300
	cmp     r5, #1, 24 @ #0x100
	cmpne   r5, #3, 24 @ #0x300
	andne   r4, r6, #3, 4 @ #0x30000000
	orrne   r5, r5, r4
	cmp     r5, #3, 24 @ #0x300
	bne     branch_20a8ee4
	ldr     r4, [pc, #0x250] @ [0x20a90f0] (=0xc000c000)
	ldr     r7, [pc, #0x250] @ [0x20a90f4] (=0x20f9670)
	and     r5, r6, r4
	and     r4, r5, #3, 18 @ #0xc000
	mov     r6, r4, asr #14
	and     r4, r5, #3, 2 @ #0xc0000000
	mov     r4, r4, lsr #30
	mov     r4, r4, lsl #1
	add     r7, r7, r6, lsl #3
	ldrh    r10, [r4, r7]
	ldr     r7, [pc, #0x230] @ [0x20a90f8] (=0x20f9658)
	ldr     r5, [sp, #0x18]
	add     r6, r7, r6, lsl #3
	add     r5, r5, r10, lsl #11
	str     r5, [sp, #0x18]
	ldrh    r4, [r4, r6]
	ldr     r5, [sp, #0x1c]
	add     r4, r5, r4, lsl #11
	str     r4, [sp, #0x1c]
.arm
branch_20a8ee4: @ 20a8ee4 :arm
	ldr     r10, [r3, #0x8]
	ldr     r11, [sp, #0x1c]
	ldr     r4, [sp, #0x50]
	smull   r12, r11, r10, r11
	cmp     r4, #0x0
	movne   r5, #3, 24 @ #0x300
	moveq   r5, #1, 24 @ #0x100
	cmp     r5, #3, 24 @ #0x300
	moveq   r6, #0x1
	add     r4, sp, #0x18
	movne   r6, #0x0
	cmp     r4, r4
	addeq   r4, sp, #0x10
	adds    r10, r12, #1, 20 @ #0x1000
	adc     r12, r11, #0x0
	ldr     r7, [r3]
	ldr     r11, [sp, #0x18]
	smlal   r10, r12, r7, r11
	mov     r7, r10, lsr #12
	orr     r7, r7, r12, lsl #20
	str     r7, [r4]
	ldr     r10, [r3, #0xc]
	ldr     r11, [sp, #0x1c]
	ldr     r7, [r3, #0x4]
	smull   r12, r11, r10, r11
	adds    r12, r12, #1, 20 @ #0x1000
	adc     r10, r11, #0x0
	add     r11, sp, #0x10
	cmp     r4, r11
	ldr     r11, [sp, #0x18]
	smlal   r12, r10, r7, r11
	mov     r7, r12, lsr #12
	orr     r7, r7, r10, lsl #20
	str     r7, [r4, #0x4]
	bne     branch_20a8f80
	ldr     r7, [sp, #0x10]
	ldr     r4, [sp, #0x14]
	str     r7, [sp, #0x18]
	str     r4, [sp, #0x1c]
.arm
branch_20a8f80: @ 20a8f80 :arm
	cmp     r5, #1, 24 @ #0x100
	cmpne   r5, #3, 24 @ #0x300
	ldr     r7, [r8]
	ldr     r4, [pc, #0x168] @ [0x20a90fc] (=0xc1fffcff)
	beq     branch_20a8fa0
	and     r4, r7, r4
	orr     r4, r4, r5
	b       branch_20a8fb0
@ 0x20a8fa0

.arm
branch_20a8fa0: @ 20a8fa0 :arm
	and     r4, r7, r4
	orr     r5, r4, r5
	ldr     r4, [sp, #0x4]
	orr     r4, r5, r4, lsl #25
.arm
branch_20a8fb0: @ 20a8fb0 :arm
	str     r4, [r8]
	cmp     r6, #0x0
	ldr     r6, [r8]
	ldr     r5, [pc, #0x12c] @ [0x20a90f0] (=0xc000c000)
	ldr     r11, [r3]
	and     r7, r6, r5
	and     r5, r7, #3, 18 @ #0xc000
	mov     r6, r5, asr #14
	and     r5, r7, #3, 2 @ #0xc0000000
	ldr     r7, [pc, #0x118] @ [0x20a90f4] (=0x20f9670)
	mov     r5, r5, lsr #30
	mov     r5, r5, lsl #1
	add     r7, r7, r6, lsl #3
	ldrh    r10, [r5, r7]
	ldr     r7, [pc, #0x108] @ [0x20a90f8] (=Unknown_20f9658)
	ldr     r4, [sp, #0x18]
	add     r6, r7, r6, lsl #3
	mov     r7, r10, asr #1
	ldrh    r6, [r5, r6]
	mov     r5, r7, lsl #12
	rsb     r12, r5, #0x0
	mov     r6, r6, asr #1
	mla     r12, r11, r7, r12
	ldr     r10, [r3, #0x8]
	mov     lr, r6, lsl #12
	mla     r11, r10, r6, r12
	add     r4, r4, r11
	str     r4, [sp, #0x18]
	ldr     r10, [r3, #0x4]
	rsb     r11, lr, #0x0
	str     r10, [sp, #0xc]
	ldr     r10, [r3, #0xc]
	ldr     r12, [sp, #0x1c]
	str     r10, [sp, #0x8]
	ldr     r10, [sp, #0xc]
	mla     r7, r10, r7, r11
	ldr     r10, [sp, #0x8]
	mla     r6, r10, r6, r7
	add     r6, r12, r6
	str     r6, [sp, #0x1c]
	beq     branch_20a9064
	sub     r5, r4, r5
	sub     r4, r6, lr
	str     r5, [sp, #0x18]
	str     r4, [sp, #0x1c]
.arm
branch_20a9064: @ 20a9064 :arm
	cmp     r9, #0x0
	beq     branch_20a908c
	ldr     r6, [sp, #0x18]
	ldr     r4, [r9]
	ldr     r5, [sp, #0x1c]
	add     r4, r6, r4
	str     r4, [sp, #0x18]
	ldr     r4, [r9, #0x4]
	add     r4, r5, r4
	str     r4, [sp, #0x1c]
.arm
branch_20a908c: @ 20a908c :arm
	ldr     r6, [r8]
	ldr     r5, [pc, #0x68] @ [0x20a9100] (=0xfe00ff00)
	ldr     r4, [sp, #0x18]
	and     r6, r6, r5
	ldr     r5, [sp, #0x1c]
	add     r4, r4, #2, 22 @ #0x800
	add     r5, r5, #2, 22 @ #0x800
	mov     r5, r5, asr #12
	mov     r4, r4, asr #12
	and     r5, r5, #0xff
	mov     r4, r4, lsl #23
	orr     r5, r6, r5
	orr     r4, r5, r4, lsr #7
	str     r4, [r8]
branch_20a90c4: @ 20a90c4 :arm
	ldr     r4, [sp]
	add     r4, r4, #0x1
	mov     r4, r4, lsl #16
	cmp     r1, r4, lsr #16
	mov     r4, r4, lsr #16
	str     r4, [sp]
	bhi     branch_20a8dd8
branch_20a90e0: @ 20a90e0 :arm
	mov     r0, r1
	add     sp, sp, #0x20
	ldmfd   sp!, {r3-r11,pc}
@ 0x20a90ec

.word 0x1ff0000 @ 0x20a90ec
.word 0xc000c000 @ 0x20a90f0
.word Unknown_20f9670 @ 0x20a90f4
.word Unknown_20f9658 @ 0x20a90f8
.word 0xc1fffcff @ 0x20a90fc
.word 0xfe00ff00 @ 0x20a9100



.arm
Function_20a9104: @ 20a9104 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r1
	str     r0, [sp]
	str     r10, [r0]
	ldr     r0, [r0, #0x8]
	mov     r9, r2
	cmp     r0, #0x1
	bne     branch_20a926c
	ldrh    r1, [r10, #0x2]
	ldr     r0, [sp]
	mov     r4, #0x0
	ldr     r5, [r0, #0xc]
	cmp     r1, #0x0
	bls     branch_20a9164
	mov     r3, r4
	mov     r0, #0x5c
.arm
branch_20a9144: @ 20a9144 :arm
	mla     r1, r4, r0, r5
	str     r3, [r1, #0x58]
	ldrh    r2, [r10, #0x2]
	add     r1, r4, #0x1
	mov     r1, r1, lsl #16
	cmp     r2, r1, lsr #16
	mov     r4, r1, lsr #16
	bhi     branch_20a9144
.arm
branch_20a9164: @ 20a9164 :arm
	ldrh    r0, [r10]
	mov     r8, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r3-r11,pc}
.arm
branch_20a9174: @ 20a9174 :arm
	ldr     r0, [r10, #0x4]
	mov     r1, #0x5c
	add     r6, r0, r8, lsl #3
	ldrh    r0, [r6, #0x6]
	and     r0, r0, #255, 24 @ #0xff00
	mov     r0, r0, lsl #8
	mov     r0, r0, lsr #16
	mla     r7, r0, r1, r5
	ldr     r0, [r7, #0x58]
	cmp     r0, #0x0
	bne     branch_20a9250
	ldr     r0, [sp]
	ldrh    r1, [r6]
	ldr     r0, [r0, #0x4]
	bl      Function_20a6ef0
	mov     r4, r0
	mov     r0, r7
	mov     r1, r4
	bl      Function_20a8d48
	mov     r0, #0x1
	str     r0, [r7, #0xc]
	ldrh    r0, [r6, #0x6]
	and     r0, r0, #0xf
	cmp     r0, #0x1
	bne     branch_20a9248
	ldrh    r3, [r4]
	mov     r6, #0x0
	mov     r1, r6
	cmp     r3, #0x0
	bls     branch_20a9208
	ldr     r2, [r4, #0xc]
.arm
branch_20a91f0: @ 20a91f0 :arm
	add     r0, r2, r1, lsl #3
	ldrh    r0, [r0, #0x4]
	add     r1, r1, #0x1
	cmp     r1, r3
	add     r6, r6, r0
	blo     branch_20a91f0
.arm
branch_20a9208: @ 20a9208 :arm
	mov     r0, r7
	bl      Function_20a78fc
	cmp     r0, #0x0
	beq     branch_20a9234
	mov     r0, r9
	mov     r1, r6
	bl      _u32_div_f
	mov     r0, r7
	mov     r1, r1, lsl #12
	bl      Function_20a8d60
	b       branch_20a9248
@ 0x20a9234

.arm
branch_20a9234: @ 20a9234 :arm
	cmp     r9, r6
	movcc   r6, r9
	mov     r0, r7
	mov     r1, r6, lsl #12
	bl      Function_20a8d60
.arm
branch_20a9248: @ 20a9248 :arm
	mov     r0, #0x1
	str     r0, [r7, #0x58]
.arm
branch_20a9250: @ 20a9250 :arm
	ldrh    r1, [r10]
	add     r0, r8, #0x1
	mov     r0, r0, lsl #16
	cmp     r1, r0, lsr #16
	mov     r8, r0, lsr #16
	bhi     branch_20a9174
	ldmfd   sp!, {r3-r11,pc}
@ 0x20a926c

.arm
branch_20a926c: @ 20a926c :arm
	ldr     r0, [sp]
	ldrh    r1, [r10]
	ldr     r11, [r0, #0xc]
	mov     r7, #0x0
	cmp     r1, #0x0
	ldmlsfd sp!, {r3-r11,pc}
.arm
branch_20a9284: @ 20a9284 :arm
	mov     r0, #0x28
	mul     r2, r7, r0
	ldr     r3, [r10, #0x4]
	mov     r0, r7, lsl #3
	ldrh    r1, [r3, r0]
	ldr     r0, [sp]
	ldr     r6, [r11, r2]
	ldr     r0, [r0, #0x4]
	add     r5, r3, r7, lsl #3
	bl      Function_20a6ef0
	mov     r4, r0
	mov     r0, r6
	mov     r1, r4
	bl      Function_20a8d48
	mov     r0, #0x1
	str     r0, [r6, #0xc]
	ldrh    r0, [r5, #0x6]
	and     r0, r0, #0xf
	cmp     r0, #0x1
	bne     branch_20a9344
	ldrh    r3, [r4]
	mov     r8, #0x0
	mov     r1, r8
	cmp     r3, #0x0
	bls     branch_20a9304
	ldr     r2, [r4, #0xc]
.arm
branch_20a92ec: @ 20a92ec :arm
	add     r0, r2, r1, lsl #3
	ldrh    r0, [r0, #0x4]
	add     r1, r1, #0x1
	cmp     r1, r3
	add     r8, r8, r0
	blo     branch_20a92ec
.arm
branch_20a9304: @ 20a9304 :arm
	mov     r0, r6
	bl      Function_20a78fc
	cmp     r0, #0x0
	beq     branch_20a9330
	mov     r0, r9
	mov     r1, r8
	bl      _u32_div_f
	mov     r0, r6
	mov     r1, r1, lsl #12
	bl      Function_20a8d60
	b       branch_20a9344
@ 0x20a9330

.arm
branch_20a9330: @ 20a9330 :arm
	cmp     r9, r8
	movcc   r8, r9
	mov     r0, r6
	mov     r1, r8, lsl #12
	bl      Function_20a8d60
.arm
branch_20a9344: @ 20a9344 :arm
	mov     r0, #0x28
	mla     r3, r7, r0, r11
	mov     r0, #0x1
	str     r0, [r3, #0x8]
	ldrsh   r1, [r5, #0x2]
	ldrsh   r2, [r5, #0x4]
	add     r0, r3, #0xc
	bl      Function_20a8ad8
	add     r0, r7, #0x1
	mov     r0, r0, lsl #16
	ldrh    r1, [r10]
	mov     r7, r0, lsr #16
	cmp     r1, r0, lsr #16
	bhi     branch_20a9284
	ldmfd   sp!, {r3-r11,pc}
@ 0x20a9380

.arm
Function_20a9380: @ 20a9380 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r4, r0
	bl      Function_20a78ec
	mov     r0, #0x0
	strh    r0, [r4, #0x30]
	ldr     r0, [r4, #0x4]
	ldrh    r0, [r0, #0x4]
	cmp     r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	mov     r0, r4
	bl      Function_20a763c
	mov     r5, r0
	ldrh    r1, [r5]
	ldr     r0, [r4, #0x44]
	bl      Function_20a7100
	ldr     r1, [r4, #0x1c]
	mov     r7, r0
	ldr     r1, [r1, #0x4]
	add     r0, r4, #0x48
	and     r6, r1, #0xff
	mov     r1, #0x1
	bl      Function_20a8b3c
	cmp     r6, #0x0
	beq     branch_20a9424
	cmp     r6, #0x2
	bne     branch_20a93fc
	ldrsh   r1, [r5, #0x4]
	ldrsh   r2, [r5, #0x6]
	add     r0, r4, #0x48
	bl      Function_20a8ad8
	b       branch_20a9424
@ 0x20a93fc

.arm
branch_20a93fc: @ 20a93fc :arm
	add     r0, r4, #0x48
	ldmib   r5, {r1,r2}
	bl      Function_20a8b1c
	ldrh    r1, [r5, #0x2]
	add     r0, r4, #0x48
	bl      Function_20a8afc
	ldrsh   r1, [r5, #0xc]
	ldrsh   r2, [r5, #0xe]
	add     r0, r4, #0x48
	bl      Function_20a8ad8
.arm
branch_20a9424: @ 20a9424 :arm
	ldrh    r2, [r4, #0x30]
	mov     r1, r7
	add     r0, r4, #0x34
	bl      Function_20a9104
	ldmfd   sp!, {r3-r7,pc}
@ 0x20a9438

.arm
Function_20a9438: @ 20a9438 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r4, r0
	ldrh    r0, [r4]
	mov     r5, #0x0
	mov     r6, r5
	cmp     r0, #0x0
	bls     branch_20a9484
.arm
branch_20a9454: @ 20a9454 :arm
	mov     r0, r4
	mov     r1, r6
	bl      Function_20a7100
	ldrh    r0, [r0]
	ldrh    r1, [r4]
	cmp     r0, r5
	movhi   r5, r0
	add     r0, r6, #0x1
	mov     r0, r0, lsl #16
	cmp     r1, r0, lsr #16
	mov     r6, r0, lsr #16
	bhi     branch_20a9454
.arm
branch_20a9484: @ 20a9484 :arm
	mov     r0, r5
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a948c

.arm
Function_20a948c: @ 20a948c :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r7, r0
	ldr     r0, [r7, #0x8]
	mov     r6, r1
	cmp     r0, #0x1
	ldr     r0, [r7]
	mov     r4, #0x0
	ldr     r5, [r7, #0xc]
	bne     branch_20a94ec
	ldrh    r0, [r0, #0x2]
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r8,pc}
	mov     r8, #0x5c
.arm
branch_20a94c0: @ 20a94c0 :arm
	mla     r0, r4, r8, r5
	mov     r1, r6
	bl      Function_20a8d60
	ldr     r1, [r7]
	add     r0, r4, #0x1
	mov     r0, r0, lsl #16
	ldrh    r1, [r1, #0x2]
	mov     r4, r0, lsr #16
	cmp     r1, r0, lsr #16
	bhi     branch_20a94c0
	ldmfd   sp!, {r4-r8,pc}
@ 0x20a94ec

.arm
branch_20a94ec: @ 20a94ec :arm
	ldrh    r0, [r0]
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r8,pc}
	mov     r8, #0x28
.arm
branch_20a94fc: @ 20a94fc :arm
	mul     r0, r4, r8
	ldr     r0, [r5, r0]
	mov     r1, r6
	bl      Function_20a8d60
	ldr     r1, [r7]
	add     r0, r4, #0x1
	mov     r0, r0, lsl #16
	ldrh    r1, [r1]
	mov     r4, r0, lsr #16
	cmp     r1, r0, lsr #16
	bhi     branch_20a94fc
	ldmfd   sp!, {r4-r8,pc}
@ 0x20a952c

.arm
Function_20a952c: @ 20a952c :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r4, r0
	ldr     r2, [r4]
	mov     r6, r1
	ldrh    r5, [r2, #0x4]
	bl      Function_20a7648
	cmp     r0, #0x0
	beq     branch_20a95fc
	ldrh    r0, [r4, #0x30]
	add     r0, r0, r5
	strh    r0, [r4, #0x30]
	ldr     r0, [r4, #0x4]
	ldrh    r0, [r0, #0x4]
	cmp     r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	mov     r0, r4
	bl      Function_20a763c
	mov     r5, r0
	ldrh    r1, [r5]
	ldr     r0, [r4, #0x44]
	bl      Function_20a7100
	ldr     r1, [r4, #0x1c]
	mov     r7, r0
	ldr     r1, [r1, #0x4]
	add     r0, r4, #0x48
	and     r6, r1, #0xff
	mov     r1, #0x1
	bl      Function_20a8b3c
	cmp     r6, #0x0
	beq     branch_20a95e8
	cmp     r6, #0x2
	bne     branch_20a95c0
	ldrsh   r1, [r5, #0x4]
	ldrsh   r2, [r5, #0x6]
	add     r0, r4, #0x48
	bl      Function_20a8ad8
	b       branch_20a95e8
@ 0x20a95c0

.arm
branch_20a95c0: @ 20a95c0 :arm
	add     r0, r4, #0x48
	ldmib   r5, {r1,r2}
	bl      Function_20a8b1c
	ldrh    r1, [r5, #0x2]
	add     r0, r4, #0x48
	bl      Function_20a8afc
	ldrsh   r1, [r5, #0xc]
	ldrsh   r2, [r5, #0xe]
	add     r0, r4, #0x48
	bl      Function_20a8ad8
.arm
branch_20a95e8: @ 20a95e8 :arm
	ldrh    r2, [r4, #0x30]
	mov     r1, r7
	add     r0, r4, #0x34
	bl      Function_20a9104
	ldmfd   sp!, {r3-r7,pc}
@ 0x20a95fc

.arm
branch_20a95fc: @ 20a95fc :arm
	mov     r1, r6
	add     r0, r4, #0x34
	bl      Function_20a948c
	ldmfd   sp!, {r3-r7,pc}
@ 0x20a960c


.arm
Function_20a960c: @ 20a960c :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r4, r0
	bl      Function_20a77fc
	cmp     r0, #0x0
	ldrne   r0, [r4, #0x4]
	ldrneh  r0, [r0, #0x4]
	cmpne   r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	mov     r0, r4
	bl      Function_20a763c
	mov     r5, r0
	ldrh    r1, [r5]
	ldr     r0, [r4, #0x44]
	bl      Function_20a7100
	ldr     r1, [r4, #0x1c]
	mov     r7, r0
	ldr     r1, [r1, #0x4]
	add     r0, r4, #0x48
	and     r6, r1, #0xff
	mov     r1, #0x1
	bl      Function_20a8b3c
	cmp     r6, #0x0
	beq     branch_20a96ac
	cmp     r6, #0x2
	bne     branch_20a9684
	ldrsh   r1, [r5, #0x4]
	ldrsh   r2, [r5, #0x6]
	add     r0, r4, #0x48
	bl      Function_20a8ad8
	b       branch_20a96ac

branch_20a9684: @ 20a9684 :arm
	add     r0, r4, #0x48
	ldmib   r5, {r1,r2}
	bl      Function_20a8b1c
	ldrh    r1, [r5, #0x2]
	add     r0, r4, #0x48
	bl      Function_20a8afc
	ldrsh   r1, [r5, #0xc]
	ldrsh   r2, [r5, #0xe]
	add     r0, r4, #0x48
	bl      Function_20a8ad8
branch_20a96ac: @ 20a96ac :arm
	ldrh    r2, [r4, #0x30]
	mov     r1, r7
	add     r0, r4, #0x34
	bl      Function_20a9104
	ldmfd   sp!, {r3-r7,pc}
@ 0x20a96c0


.arm
Function_20a96c0: @ 20a96c0 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r5, #0x0
	str     r5, [r0, #0x3c]
	ldr     r7, [sp, #0x28]
	str     r5, [r0, #0x34]
	mov     r10, r1
	str     r7, [r0, #0x38]
	str     r0, [sp]
	movs    r8, r3
	mov     r9, r2
	str     r10, [r0, #0x40]
	ldr     r11, [sp, #0x2c]
	beq     branch_20a9744
.arm
branch_20a96f4: @ 20a96f4 :arm
	mov     r0, #0x28
	mul     r4, r5, r0
	mov     r1, #0x1
	add     r0, r10, r4
	bl      Function_20a8b74
	mov     r0, #0x58
	mla     r6, r5, r0, r9
	mov     r0, r7
	mov     r1, #0x0
	str     r6, [r10, r4]
	bl      Function_20a6ef0
	mov     r1, r0
	mov     r0, r6
	mov     r2, r11
	bl      Function_20a8c88
	add     r0, r5, #0x1
	mov     r0, r0, lsl #16
	cmp     r8, r0, lsr #16
	mov     r5, r0, lsr #16
	bhi     branch_20a96f4
.arm
branch_20a9744: @ 20a9744 :arm
	ldr     r0, [sp]
	bl      Function_20a7834
	ldr     r0, [sp]
	ldr     r3, [sp, #0x30]
	ldr     r2, [sp]
	add     r0, r0, #0x48
	mov     r1, #0x1
	str     r3, [r2, #0x44]
	bl      Function_20a8b3c
	ldr     r0, [sp]
	mov     r1, #0x0
	strh    r1, [r0, #0x30]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20a9778


.arm
Function_20a9778: @ 20a9778 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x7c] @ [0x20a9800] (=RAM_21c4ac8)
	ldr     r12, [r0, #0xc]
	ldr     r1, [r0, #0x4]
	mov     r0, #0x18
	mul     r3, r12, r0
	cmp     r1, #0x0
	beq     branch_20a97b0
	ldr     r1, [pc, #0x64] @ [0x20a9804] (=RAM_21c4c68)
	mov     r2, #0x0
	ldr     r0, [pc, #0x60] @ [0x20a9808] (=RAM_21c4c6c)
	str     r2, [r1, r3]
	str     r2, [r0, r3]
	b       branch_20a97f0

branch_20a97b0: @ 20a97b0 :arm
	ldr     r1, [pc, #0x54] @ [0x20a980c] (=RAM_21c4c58)
	mov     r2, #1, 20 @ #0x1000
	str     r2, [r1, r3]
	add     r4, r1, r3
	mov     r1, #0x0
	str     r1, [r4, #0x4]
	ldr     r0, [pc, #0x40] @ [0x20a9810] (=RAM_21c4f58)
	str     r1, [r4, #0x8]
	str     r2, [r4, #0xc]
	str     r1, [r4, #0x10]
	add     lr, r0, r3
	str     r1, [r4, #0x14]
	ldmia   r4!, {r0-r3}
	stmia   lr!, {r0-r3}
	ldmia   r4, {r0,r1}
	stmia   lr, {r0,r1}
branch_20a97f0: @ 20a97f0 :arm
	ldr     r0, [pc, #0x1c] @ [0x20a9814] (=RAM_21c4ad8)
	mov     r1, #0x0
	str     r1, [r0, r12, lsl #0x2]
	ldmfd   sp!, {r4,pc}
@ 0x20a9800

.word RAM_21c4ac8 @ 0x20a9800
.word RAM_21c4c68 @ 0x20a9804
.word RAM_21c4c6c @ 0x20a9808
.word RAM_21c4c58 @ 0x20a980c
.word RAM_21c4f58 @ 0x20a9810
.word RAM_21c4ad8 @ 0x20a9814



.arm
Function_20a9818: @ 20a9818 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0x118] @ [0x20a993c] (=RAM_21c4ac8)
	ldr     r1, [pc, #0x118] @ [0x20a9940] (=RAM_21c4b58)
	ldr     r0, [r0, #0xc]
	mov     r2, #0x1
	mov     r0, r0, lsl #16
	add     r3, r1, r0, lsr #13
	ldrh    r0, [r3, #0x4]
	cmp     r0, #0x1
	cmpne   r0, #0x2
	movne   r2, #0x0
	cmp     r2, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	ldr     r0, [pc, #0xe8] @ [0x20a993c] (=RAM_21c4ac8)
	ldrh    r4, [r3, #0x2]
	ldrh    r5, [r0]
	mov     r2, #0x10
	cmp     r5, #0x1f
	addcc   r1, r5, #0x1
	strcch  r1, [r0]
	ldr     r0, [pc, #0xd4] @ [0x20a9944] (=RAM_21c5258)
	strh    r5, [r3]
	add     r0, r0, r5, lsl #5
	add     r1, r0, #0x10
	mvn     r0, #0x0
	bl      MIi_CpuClearFast
	ldr     r0, [pc, #0xb4] @ [0x20a993c] (=RAM_21c4ac8)
	ldr     r1, [r0, #0x4]
	ldr     r12, [r0, #0xc]
	cmp     r1, #0x0
	ldreq   r1, [pc, #0xb0] @ [0x20a9948] (=RAM_21c4f58)
	mov     r0, #0x18
	mlaeq   r1, r12, r0, r1
	beq     branch_20a98c4
	mul     r3, r12, r0
	ldr     r1, [pc, #0xa0] @ [0x20a994c] (=RAM_21c4c68)
	ldr     r0, [pc, #0xa0] @ [0x20a9950] (=Unknown_2100ea4)
	ldr     r2, [r1, r3]
	ldr     r1, [pc, #0x9c] @ [0x20a9954] (=RAM_21c4c6c)
	str     r2, [r0, #0x18]
	ldr     r2, [r1, r3]
	ldr     r1, [pc, #0x94] @ [0x20a9958] (=Unknown_2100eac)
	str     r2, [r0, #0x1c]
branch_20a98c4: @ 20a98c4 :arm
	mov     r2, r12, lsl #16
	ldr     r0, [pc, #0x70] @ [0x20a9940] (=RAM_21c4b58)
	mov     r2, r2, lsr #13
	ldrh    r12, [r0, r2]
	ldr     lr, [pc, #0x68] @ [0x20a9944] (=RAM_21c5258)
	ldr     r3, [r1]
	ldr     r2, [pc, #0x58] @ [0x20a993c] (=RAM_21c4ac8)
	str     r3, [lr, r12, lsl #0x5]
	ldr     r3, [r1, #0x4]
	add     r12, lr, r12, lsl #5
	str     r3, [r12, #0x4]
	ldr     r3, [r1, #0x8]
	ldr     r2, [r2, #0xc]
	str     r3, [r12, #0x8]
	ldr     r3, [r1, #0xc]
	mov     r1, r2, lsl #16
	str     r3, [r12, #0xc]
	movs    lr, r1, lsr #16
	ldmmifd sp!, {r3-r5,pc}
	mov     r1, #0x3
.arm
branch_20a9914: @ 20a9914 :arm
	add     r3, r0, lr, lsl #3
	ldrh    r2, [r3, #0x2]
	mov     r12, lr, lsl #3
	cmp     r4, r2
	ldmnefd sp!, {r3-r5,pc}
	strh    r1, [r3, #0x4]
	strh    r5, [r0, r12]
	subs    lr, lr, #0x1
	bpl     branch_20a9914
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a993c

.word RAM_21c4ac8 @ 0x20a993c
.word RAM_21c4b58 @ 0x20a9940
.word RAM_21c5258 @ 0x20a9944
.word RAM_21c4f58 @ 0x20a9948
.word RAM_21c4c68 @ 0x20a994c
.word Unknown_2100ea4 @ 0x20a9950
.word RAM_21c4c6c @ 0x20a9954
.word Unknown_2100eac @ 0x20a9958




.arm
Function_20a995c: @ 20a995c :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [pc, #0xf0] @ [0x20a9a58] (=RAM_21c4ac8)
	mov     r6, r0
	ldr     r0, [r2, #0x8]
	mov     r5, r1
	ldr     r4, [r0, #0x74]
	ldr     r0, [r4, #0x34]
	cmp     r0, #0x0
	beq     branch_20a99ec
	ldr     r0, [r2, #0x4]
	cmp     r0, #0x0
	ldreq   r2, [r2, #0xc]
	ldreq   r1, [pc, #0xc8] @ [0x20a9a5c] (=RAM_21c4c58)
	mov     r0, #0x18
	mlaeq   r1, r2, r0, r1
	beq     branch_20a99c4
	ldr     r1, [r2, #0xc]
	mul     r3, r1, r0
	ldr     r1, [pc, #0xb4] @ [0x20a9a60] (=RAM_21c4c68)
	ldr     r0, [pc, #0xb4] @ [0x20a9a64] (=Unknown_2100ea4)
	ldr     r2, [r1, r3]
	ldr     r1, [pc, #0xb0] @ [0x20a9a68] (=RAM_21c4c6c)
	str     r2, [r0, #0x18]
	ldr     r2, [r1, r3]
	ldr     r1, [pc, #0xa8] @ [0x20a9a6c] (=Unknown_2100eac)
	str     r2, [r0, #0x1c]
branch_20a99c4: @ 20a99c4 :arm
	ldr     r3, [r4, #0x34]
	mov     r0, r5
	mov     r2, r4
	blx     r3
	cmp     r0, #0x0
	moveq   r0, #0x0
	streq   r0, [r6, #0x30]
	ldmeqfd sp!, {r4-r6,pc}
	mov     r0, #0x1
	str     r0, [r6, #0x30]
branch_20a99ec: @ 20a99ec :arm
	ldr     r0, [r4, #0x38]
	cmp     r0, #0x0
	ldmeqfd sp!, {r4-r6,pc}
	ldr     r0, [pc, #0x58] @ [0x20a9a58] (=RAM_21c4ac8)
	ldr     r1, [r0, #0x4]
	cmp     r1, #0x0
	ldr     r1, [r0, #0xc]
	ldreq   r2, [pc, #0x4c] @ [0x20a9a5c] (=RAM_21c4c58)
	mov     r0, #0x18
	mlaeq   r3, r1, r0, r2
	beq     branch_20a9a3c
	mul     r3, r1, r0
	ldr     r1, [pc, #0x3c] @ [0x20a9a60] (=RAM_21c4c68)
	ldr     r0, [pc, #0x3c] @ [0x20a9a64] (=Unknown_2100ea4)
	ldr     r2, [r1, r3]
	ldr     r1, [pc, #0x38] @ [0x20a9a68] (=RAM_21c4c6c)
	str     r2, [r0, #0x18]
	ldr     r1, [r1, r3]
	ldr     r3, [pc, #0x30] @ [0x20a9a6c] (=Unknown_2100eac)
	str     r1, [r0, #0x1c]
branch_20a9a3c: @ 20a9a3c :arm
	ldr     r0, [pc, #0x14] @ [0x20a9a58] (=RAM_21c4ac8)
	ldr     r6, [r4, #0x38]
	ldr     r0, [r0, #0x8]
	mov     r1, r4
	mov     r2, r5
	blx     r6
	ldmfd   sp!, {r4-r6,pc}
@ 0x20a9a58

.word RAM_21c4ac8 @ 0x20a9a58
.word RAM_21c4c58 @ 0x20a9a5c
.word RAM_21c4c68 @ 0x20a9a60
.word Unknown_2100ea4 @ 0x20a9a64
.word RAM_21c4c6c @ 0x20a9a68
.word Unknown_2100eac @ 0x20a9a6c



.arm
Function_20a9a70: @ 20a9a70 :arm
	stmfd   sp!, {r4,lr}
	ldr     r3, [pc, #0x60] @ [0x20a9adc] (=RAM_21c4ac8)
	mov     r2, r1
	ldr     r0, [r3, #0x8]
	ldr     r1, [r0, #0x74]
	ldr     r4, [r1, #0x3c]
	cmp     r4, #0x0
	ldmeqfd sp!, {r4,pc}
	ldr     r4, [r3, #0x4]
	ldr     r12, [r3, #0xc]
	cmp     r4, #0x0
	ldreq   lr, [pc, #0x3c] @ [0x20a9ae0] (=RAM_21c4c58)
	mov     r3, #0x18
	mlaeq   r3, r12, r3, lr
	beq     branch_20a9ad0
	mul     r4, r12, r3
	ldr     r3, [pc, #0x2c] @ [0x20a9ae4] (=RAM_21c4c68)
	ldr     r12, [pc, #0x2c] @ [0x20a9ae8] (=Unknown_2100ea4)
	ldr     lr, [r3, r4]
	ldr     r3, [pc, #0x28] @ [0x20a9aec] (=RAM_21c4c6c)
	str     lr, [r12, #0x18]
	ldr     lr, [r3, r4]
	ldr     r3, [pc, #0x20] @ [0x20a9af0] (=Unknown_2100eac)
	str     lr, [r12, #0x1c]
branch_20a9ad0: @ 20a9ad0 :arm
	ldr     r12, [r1, #0x3c]
	blx     r12
	ldmfd   sp!, {r4,pc}
@ 0x20a9adc

.word RAM_21c4ac8 @ 0x20a9adc
.word RAM_21c4c58 @ 0x20a9ae0
.word RAM_21c4c68 @ 0x20a9ae4
.word Unknown_2100ea4 @ 0x20a9ae8
.word RAM_21c4c6c @ 0x20a9aec
.word Unknown_2100eac @ 0x20a9af0



.arm
Function_20a9af4: @ 20a9af4 :arm
	stmfd   sp!, {r3-r6,lr}
	sub     sp, sp, #0x4
	ldr     r3, [pc, #0x1c4] @ [0x20a9cc8] (=RAM_21c4ac8)
	mov     r6, r0
	ldr     r0, [r3, #0x8]
	mov     r5, r1
	mov     r4, r2
	bl      Function_20ab02c
	cmp     r0, #0x0
	beq     branch_20a9b44
	ldrh    r1, [r6, #0x3c]
	and     r1, r1, #15, 20 @ #0xf000
	mov     r1, r1, lsl #4
	mov     r1, r1, lsr #16
	bl      Function_20a8180
	ldr     r1, [r6, #0x3c]
	mov     r0, r0, lsl #28
	bic     r1, r1, #15, 20 @ #0xf000
	orr     r0, r1, r0, lsr #16
	str     r0, [r6, #0x3c]
branch_20a9b44: @ 20a9b44 :arm
	ldr     r0, [pc, #0x17c] @ [0x20a9cc8] (=RAM_21c4ac8)
	ldr     r1, [r0, #0x8]
	ldr     r0, [r1, #0x84]
	cmp     r0, #0x0
	beq     branch_20a9c50
	ldr     r0, [r1, #0x84]
	tst     r0, #0x1
	beq     branch_20a9b7c
	ldrh    r0, [r1, #0x88]
	ldr     r1, [r6, #0x3c]
	bic     r1, r1, #3, 22 @ #0xc00
	mov     r0, r0, lsl #30
	orr     r0, r1, r0, lsr #20
	str     r0, [r6, #0x3c]
branch_20a9b7c: @ 20a9b7c :arm
	ldr     r0, [pc, #0x144] @ [0x20a9cc8] (=RAM_21c4ac8)
	ldr     r1, [r0, #0x8]
	ldr     r0, [r1, #0x84]
	tst     r0, #0x2
	beq     branch_20a9ba8
	ldrh    r0, [r1, #0x8a]
	ldr     r1, [r6, #0x3c]
	bic     r1, r1, #15, 20 @ #0xf000
	mov     r0, r0, lsl #28
	orr     r0, r1, r0, lsr #16
	str     r0, [r6, #0x3c]
branch_20a9ba8: @ 20a9ba8 :arm
	ldr     r0, [pc, #0x118] @ [0x20a9cc8] (=RAM_21c4ac8)
	ldr     r1, [r0, #0x8]
	ldr     r0, [r1, #0x84]
	tst     r0, #0x10
	beq     branch_20a9bdc
	ldr     r2, [r6, #0x3c]
	ldrh    r0, [r1, #0x94]
	mov     r1, r2, lsl #16
	bic     r2, r2, #15, 20 @ #0xf000
	add     r0, r0, r1, lsr #28
	mov     r0, r0, lsl #28
	orr     r0, r2, r0, lsr #16
	str     r0, [r6, #0x3c]
branch_20a9bdc: @ 20a9bdc :arm
	ldr     r0, [pc, #0xe4] @ [0x20a9cc8] (=RAM_21c4ac8)
	ldr     r1, [r0, #0x8]
	ldr     r0, [r1, #0x84]
	tst     r0, #0x4
	beq     branch_20a9c0c
	ldr     r0, [r1, #0x90]
	cmp     r0, #0x0
	ldr     r0, [r6, #0x38]
	orrne   r0, r0, #1, 20 @ #0x1000
	strne   r0, [r6, #0x38]
	biceq   r0, r0, #1, 20 @ #0x1000
	streq   r0, [r6, #0x38]
branch_20a9c0c: @ 20a9c0c :arm
	ldr     r0, [pc, #0xb4] @ [0x20a9cc8] (=RAM_21c4ac8)
	ldr     r1, [r0, #0x8]
	ldr     r0, [r1, #0x84]
	tst     r0, #0x8
	beq     branch_20a9c50
	ldr     r0, [r6, #0x38]
	ldrh    r2, [r6, #0x3c]
	ldr     r1, [r1, #0x8c]
	bic     r0, r0, #3, 22 @ #0xc00
	orr     r0, r0, r1, lsl #10
	str     r0, [r6, #0x38]
	ldrh    r0, [r6, #0x3c]
	and     r1, r2, #15, 20 @ #0xf000
	mov     r1, r1, asr #12
	bic     r0, r0, #15, 20 @ #0xf000
	orr     r0, r0, r1, lsl #12
	strh    r0, [r6, #0x3c]
branch_20a9c50: @ 20a9c50 :arm
	ldr     r2, [pc, #0x70] @ [0x20a9cc8] (=RAM_21c4ac8)
	ldr     r0, [r2, #0x8]
	ldr     r1, [r0, #0x74]
	ldr     r3, [r1, #0x40]
	cmp     r3, #0x0
	addeq   sp, sp, #0x4
	ldmeqfd sp!, {r3-r6,pc}
	ldr     r3, [r2, #0x4]
	cmp     r3, #0x0
	ldr     r3, [r2, #0xc]
	ldreq   r6, [pc, #0x4c] @ [0x20a9ccc] (=RAM_21c4c58)
	mov     r2, #0x18
	mlaeq   r6, r3, r2, r6
	beq     branch_20a9cac
	mul     r12, r3, r2
	ldr     r3, [pc, #0x3c] @ [0x20a9cd0] (=RAM_21c4c68)
	ldr     r2, [pc, #0x3c] @ [0x20a9cd4] (=Unknown_2100ea4)
	ldr     r6, [r3, r12]
	ldr     r3, [pc, #0x38] @ [0x20a9cd8] (=RAM_21c4c6c)
	str     r6, [r2, #0x18]
	ldr     r3, [r3, r12]
	ldr     r6, [pc, #0x30] @ [0x20a9cdc] (=Unknown_2100eac)
	str     r3, [r2, #0x1c]
branch_20a9cac: @ 20a9cac :arm
	str     r6, [sp]
	ldr     r6, [r1, #0x40]
	mov     r2, r5
	mov     r3, r4
	blx     r6
	add     sp, sp, #0x4
	ldmfd   sp!, {r3-r6,pc}
@ 0x20a9cc8

.word RAM_21c4ac8 @ 0x20a9cc8
.word RAM_21c4c58 @ 0x20a9ccc
.word RAM_21c4c68 @ 0x20a9cd0
.word Unknown_2100ea4 @ 0x20a9cd4
.word RAM_21c4c6c @ 0x20a9cd8
.word Unknown_2100eac @ 0x20a9cdc



.arm
Function_20a9ce0: @ 20a9ce0 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     lr, [pc, #0x70] @ [0x20a9d5c] (=RAM_21c4ac8)
	mov     r12, r1
	ldr     r0, [lr, #0x8]
	mov     r3, r2
	ldr     r1, [r0, #0x74]
	ldr     r2, [r1, #0x44]
	cmp     r2, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	ldr     r2, [lr, #0x4]
	cmp     r2, #0x0
	ldreq   lr, [lr, #0xc]
	ldreq   r4, [pc, #0x48] @ [0x20a9d60] (=RAM_21c4c58)
	mov     r2, #0x18
	mlaeq   r5, lr, r2, r4
	beq     branch_20a9d48
	ldr     r4, [lr, #0xc]
	mul     r5, r4, r2
	ldr     r4, [pc, #0x34] @ [0x20a9d64] (=RAM_21c4c68)
	ldr     r2, [pc, #0x34] @ [0x20a9d68] (=Unknown_2100ea4)
	ldr     lr, [r4, r5]
	ldr     r4, [pc, #0x30] @ [0x20a9d6c] (=RAM_21c4c6c)
	str     lr, [r2, #0x18]
	ldr     r4, [r4, r5]
	ldr     r5, [pc, #0x28] @ [0x20a9d70] (=Unknown_2100eac)
	str     r4, [r2, #0x1c]
branch_20a9d48: @ 20a9d48 :arm
	str     r5, [sp]
	ldr     lr, [r1, #0x44]
	mov     r2, r12
	blx     lr
	ldmfd   sp!, {r3-r5,pc}
@ 0x20a9d5c

.word RAM_21c4ac8 @ 0x20a9d5c
.word RAM_21c4c58 @ 0x20a9d60
.word RAM_21c4c68 @ 0x20a9d64
.word Unknown_2100ea4 @ 0x20a9d68
.word RAM_21c4c6c @ 0x20a9d6c
.word Unknown_2100eac @ 0x20a9d70



.arm
Function_20a9d74: @ 20a9d74 :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r7, [pc, #0x410] @ [0x20aa190] (=RAM_21c4ac8)
	mov     r4, r0
	ldr     r11, [r7, #0x8]
	ldr     r0, [r11, #0x7c]
	ldr     r9, [r11, #0x70]
	tst     r0, #0x2
	beq     branch_20a9f64
	ldr     r0, [r9, #0x14]
	cmp     r0, #0x0
	beq     branch_20a9ed4
	ldr     r0, [r7, #0x4]
	mov     r1, #0x0
	cmp     r0, #0x0
	bne     branch_20a9dc8
	ldr     r2, [pc, #0x3dc] @ [0x20aa194] (=Unknown_2100ea4)
	ldr     r0, [pc, #0x3dc] @ [0x20aa198] (=0xfffe)
	ldrh    r2, [r2]
	cmp     r2, r0
	movne   r0, #0x1
	bne     branch_20a9dcc
branch_20a9dc8: @ 20a9dc8 :arm
	mov     r0, #0x0
branch_20a9dcc: @ 20a9dcc :arm
	cmp     r0, #0x0
	beq     branch_20a9e58
	ldr     r0, [pc, #0x3b4] @ [0x20aa190] (=RAM_21c4ac8)
	ldr     r0, [r0, #0xf94]
	cmp     r0, #0x0
	beq     branch_20a9e34
	ldr     r0, [pc, #0x3b0] @ [0x20aa19c] (=RAM_21c55c8)
	ldr     r1, [pc, #0x3b0] @ [0x20aa1a0] (=RAM_21c565c)
	ldrh    r0, [r0, #0x90]
	ldr     r1, [r1, r0, lsl #0x2]
	cmp     r1, #0x0
	bne     branch_20a9e58
	bl      Function_20a9818
	ldr     r0, [pc, #0x388] @ [0x20aa190] (=RAM_21c4ac8)
	ldr     r2, [pc, #0x398] @ [0x20aa1a4] (=RAM_21c4b58)
	ldr     r0, [r0, #0xc]
	ldr     r1, [pc, #0x388] @ [0x20aa19c] (=RAM_21c55c8)
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #13
	ldrh    r3, [r2, r0]
	ldr     r5, [pc, #0x384] @ [0x20aa1a8] (=RAM_21c5258)
	ldrh    r2, [r1, #0x90]
	ldr     r0, [pc, #0x374] @ [0x20aa1a0] (=RAM_21c565c)
	add     r1, r5, r3, lsl #5
	str     r1, [r0, r2, lsl #0x2]
	b       branch_20a9e58

branch_20a9e34: @ 20a9e34 :arm
	bl      Function_20a9818
	ldr     r0, [pc, #0x350] @ [0x20aa190] (=RAM_21c4ac8)
	ldr     r1, [pc, #0x360] @ [0x20aa1a4] (=RAM_21c4b58)
	ldr     r0, [r0, #0xc]
	ldr     r2, [pc, #0x35c] @ [0x20aa1a8] (=RAM_21c5258)
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #13
	ldrh    r0, [r1, r0]
	add     r1, r2, r0, lsl #5
branch_20a9e58: @ 20a9e58 :arm
	ldr     r0, [pc, #0x330] @ [0x20aa190] (=RAM_21c4ac8)
	ldr     r2, [r0, #0x4]
	cmp     r2, #0x0
	ldr     r2, [r0, #0xc]
	ldreq   r3, [pc, #0x33c] @ [0x20aa1ac] (=RAM_21c4c58)
	mov     r0, #0x18
	mlaeq   r0, r2, r0, r3
	beq     branch_20a9e9c
	mul     r5, r2, r0
	ldr     r0, [pc, #0x32c] @ [0x20aa1b0] (=RAM_21c4c68)
	ldr     r2, [pc, #0x30c] @ [0x20aa194] (=Unknown_2100ea4)
	ldr     r3, [r0, r5]
	ldr     r0, [pc, #0x324] @ [0x20aa1b4] (=RAM_21c4c6c)
	str     r3, [r2, #0x18]
	ldr     r3, [r0, r5]
	ldr     r0, [pc, #0x31c] @ [0x20aa1b8] (=Unknown_2100eac)
	str     r3, [r2, #0x1c]
branch_20a9e9c: @ 20a9e9c :arm
	bl      Function_20ac41c
	ldr     r1, [pc, #0x2ec] @ [0x20aa194] (=Unknown_2100ea4)
	mvn     r0, #0x0
	ldr     r1, [r1, #0x4]
	cmp     r1, r0
	movne   r0, #0x1
	moveq   r0, #0x0
	cmp     r0, #0x0
	mov     r0, r4
	beq     branch_20a9ecc
	bl      Function_20ac6bc
	ldmfd   sp!, {r3-r11,pc}

branch_20a9ecc: @ 20a9ecc :arm
	bl      Function_20ac608
	ldmfd   sp!, {r3-r11,pc}

branch_20a9ed4: @ 20a9ed4 :arm
	ldr     r2, [r7, #0xc]
	ldr     r1, [pc, #0x2dc] @ [0x20aa1bc] (=RAM_21c4ad8)
	mov     r0, r11
	ldr     r1, [r1, r2, lsl #0x2]
	bl      Function_20ac434
	mov     r0, r7
	ldr     r1, [r0, #0x4]
	cmp     r1, #0x0
	ldr     r1, [r0, #0xc]
	ldreq   r2, [pc, #0x2ac] @ [0x20aa1ac] (=RAM_21c4c58)
	mov     r0, #0x18
	mlaeq   r0, r1, r0, r2
	beq     branch_20a9f2c
	mul     r3, r1, r0
	ldr     r0, [pc, #0x29c] @ [0x20aa1b0] (=RAM_21c4c68)
	ldr     r1, [pc, #0x27c] @ [0x20aa194] (=Unknown_2100ea4)
	ldr     r2, [r0, r3]
	ldr     r0, [pc, #0x294] @ [0x20aa1b4] (=RAM_21c4c6c)
	str     r2, [r1, #0x18]
	ldr     r2, [r0, r3]
	ldr     r0, [pc, #0x28c] @ [0x20aa1b8] (=Unknown_2100eac)
	str     r2, [r1, #0x1c]
branch_20a9f2c: @ 20a9f2c :arm
	bl      Function_20ac3b4
	ldr     r1, [pc, #0x25c] @ [0x20aa194] (=Unknown_2100ea4)
	mvn     r0, #0x0
	ldr     r1, [r1, #0x4]
	cmp     r1, r0
	movne   r0, #0x1
	moveq   r0, #0x0
	cmp     r0, #0x0
	mov     r0, r4
	beq     branch_20a9f5c
	bl      Function_20ac6bc
	ldmfd   sp!, {r3-r11,pc}

branch_20a9f5c: @ 20a9f5c :arm
	bl      Function_20ac608
	ldmfd   sp!, {r3-r11,pc}

branch_20a9f64: @ 20a9f64 :arm
	cmp     r9, #0x0
	ldmeqfd sp!, {r3-r11,pc}
	ldr     r8, [pc, #0x238] @ [0x20aa1ac] (=RAM_21c4c58)
	ldr     r6, [pc, #0x21c] @ [0x20aa194] (=Unknown_2100ea4)
	mvn     r5, #0x0
branch_20a9f78: @ 20a9f78 :arm
	ldr     r0, [r9, #0x10]
	cmp     r0, #0x0
	beq     branch_20aa180
	ldr     r0, [r9, #0x14]
	ldr     r10, [r7, #0x8]
	cmp     r0, #0x0
	mov     r1, r9
	beq     branch_20aa0e4
	str     r9, [r10, #0x74]
	mov     r0, r10
	bl      Function_20ac43c
	ldr     r1, [r9, #0x28]
	ldr     r2, [r9, #0x2c]
	mov     r0, r10
	bl      Function_20ac3a0
	mov     r0, r10
	bl      Function_20ac498
	ldr     r0, [r7, #0x4]
	mov     r1, #0x0
	cmp     r0, #0x0
	bne     branch_20a9fe0
	ldrh    r2, [r6]
	ldr     r0, [pc, #0x1c0] @ [0x20aa198] (=0xfffe)
	cmp     r2, r0
	movne   r0, #0x1
	bne     branch_20a9fe4
branch_20a9fe0: @ 20a9fe0 :arm
	mov     r0, #0x0
branch_20a9fe4: @ 20a9fe4 :arm
	cmp     r0, #0x0
	beq     branch_20aa06c
	ldr     r0, [r7, #0xf94]
	cmp     r0, #0x0
	beq     branch_20aa04c
	ldr     r0, [pc, #0x19c] @ [0x20aa19c] (=RAM_21c55c8)
	ldrh    r1, [r0, #0x90]
	ldr     r0, [pc, #0x1b8] @ [0x20aa1c0] (=RAM_21c5658)
	add     r0, r0, r1, lsl #2
	ldr     r1, [r0, #0x4]
	cmp     r1, #0x0
	bne     branch_20aa06c
	bl      Function_20a9818
	ldr     r0, [pc, #0x17c] @ [0x20aa19c] (=RAM_21c55c8)
	ldr     r2, [r7, #0xc]
	ldrh    r1, [r0, #0x90]
	mov     r0, r2, lsl #16
	mov     r2, r0, lsr #13
	ldr     r0, [pc, #0x170] @ [0x20aa1a4] (=RAM_21c4b58)
	ldrh    r3, [r0, r2]
	ldr     r0, [pc, #0x184] @ [0x20aa1c0] (=RAM_21c5658)
	add     r2, r0, r1, lsl #2
	ldr     r0, [pc, #0x164] @ [0x20aa1a8] (=RAM_21c5258)
	add     r1, r0, r3, lsl #5
	str     r1, [r2, #0x4]
	b       branch_20aa06c

branch_20aa04c: @ 20aa04c :arm
	bl      Function_20a9818
	ldr     r0, [r7, #0xc]
	mov     r0, r0, lsl #16
	mov     r1, r0, lsr #13
	ldr     r0, [pc, #0x140] @ [0x20aa1a4] (=RAM_21c4b58)
	ldrh    r1, [r0, r1]
	ldr     r0, [pc, #0x13c] @ [0x20aa1a8] (=RAM_21c5258)
	add     r1, r0, r1, lsl #5
branch_20aa06c: @ 20aa06c :arm
	ldr     r0, [r7, #0x4]
	cmp     r0, #0x0
	ldreq   r2, [r7, #0xc]
	moveq   r0, #0x18
	mlaeq   r0, r2, r0, r8
	beq     branch_20aa0a4
	ldr     r3, [r7, #0xc]
	mov     r2, #0x18
	mla     r10, r3, r2, r8
	ldr     r2, [r10, #0x10]
	ldr     r0, [pc, #0x11c] @ [0x20aa1b8] (=Unknown_2100eac)
	str     r2, [r6, #0x18]
	ldr     r2, [r10, #0x14]
	str     r2, [r6, #0x1c]
branch_20aa0a4: @ 20aa0a4 :arm
	bl      Function_20ac41c
	ldr     r1, [r6, #0x4]
	cmp     r1, r5
	movne   r0, #0x1
	moveq   r0, #0x0
	cmp     r0, #0x0
	mov     r0, r4
	beq     branch_20aa0cc
	bl      Function_20ac6bc
	b       branch_20aa0d0

branch_20aa0cc: @ 20aa0cc :arm
	bl      Function_20ac608
branch_20aa0d0: @ 20aa0d0 :arm
	ldr     r1, [r7, #0x8]
	mov     r0, #0x0
	str     r0, [r1, #0x74]
	bl      Function_20ac5a4
	b       branch_20aa180

branch_20aa0e4: @ 20aa0e4 :arm
	mov     r0, r10
	str     r9, [r10, #0x74]
	bl      Function_20ac43c
	mov     r0, r10
	bl      Function_20ac498
	ldr     r2, [r7, #0xc]
	ldr     r1, [pc, #0xb8] @ [0x20aa1bc] (=RAM_21c4ad8)
	mov     r0, r11
	ldr     r1, [r1, r2, lsl #0x2]
	bl      Function_20ac434
	ldr     r0, [r7, #0x4]
	cmp     r0, #0x0
	ldreq   r1, [r7, #0xc]
	moveq   r0, #0x18
	mlaeq   r0, r1, r0, r8
	beq     branch_20aa144
	ldr     r2, [r7, #0xc]
	mov     r1, #0x18
	mla     r3, r2, r1, r8
	ldr     r1, [r3, #0x10]
	ldr     r0, [pc, #0x7c] @ [0x20aa1b8] (=Unknown_2100eac)
	str     r1, [r6, #0x18]
	ldr     r1, [r3, #0x14]
	str     r1, [r6, #0x1c]
branch_20aa144: @ 20aa144 :arm
	bl      Function_20ac3b4
	ldr     r1, [r6, #0x4]
	cmp     r1, r5
	movne   r0, #0x1
	moveq   r0, #0x0
	cmp     r0, #0x0
	mov     r0, r4
	beq     branch_20aa16c
	bl      Function_20ac6bc
	b       branch_20aa170

branch_20aa16c: @ 20aa16c :arm
	bl      Function_20ac608
branch_20aa170: @ 20aa170 :arm
	ldr     r1, [r7, #0x8]
	mov     r0, #0x0
	str     r0, [r1, #0x74]
	bl      Function_20ac5a4
branch_20aa180: @ 20aa180 :arm
	ldr     r9, [r9, #0x30]
	cmp     r9, #0x0
	bne     branch_20a9f78
	ldmfd   sp!, {r3-r11,pc}
@ 0x20aa190

.word RAM_21c4ac8 @ 0x20aa190
.word Unknown_2100ea4 @ 0x20aa194
.word 0xfffe @ 0x20aa198
.word RAM_21c55c8 @ 0x20aa19c
.word RAM_21c565c @ 0x20aa1a0
.word RAM_21c4b58 @ 0x20aa1a4
.word RAM_21c5258 @ 0x20aa1a8
.word RAM_21c4c58 @ 0x20aa1ac
.word RAM_21c4c68 @ 0x20aa1b0
.word RAM_21c4c6c @ 0x20aa1b4
.word Unknown_2100eac @ 0x20aa1b8
.word RAM_21c4ad8 @ 0x20aa1bc
.word RAM_21c5658 @ 0x20aa1c0



.arm
Function_20aa1c4: @ 20aa1c4 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r5, r0
	ldrh    r0, [r5, #0x4e]
	ldr     r4, [r5, #0x30]
	cmp     r0, #0x0
	bne     branch_20aa224
	ldr     r2, [r5, #0x38]
	mvn     r0, #0x0
	cmp     r2, r0
	movne   r0, #0x1
	moveq   r0, #0x0
	cmp     r0, #0x0
	beq     branch_20aa218
	ldr     r1, [pc, #0x114] @ [0x20aa314] (=Unknown_2100ea4)
	mov     r0, r4
	str     r2, [r1, #0x4]
	bl      Function_20a9d74
	ldr     r0, [pc, #0x104] @ [0x20aa314] (=Unknown_2100ea4)
	mvn     r1, #0x0
	str     r1, [r0, #0x4]
	ldmfd   sp!, {r3-r7,pc}

branch_20aa218: @ 20aa218 :arm
	mov     r0, r4
	bl      Function_20a9d74
	ldmfd   sp!, {r3-r7,pc}

branch_20aa224: @ 20aa224 :arm
	bl      Function_20aaa48
	ldrh    r0, [r5, #0x4e]
	tst     r0, #0x8
	beq     branch_20aa274
	ldr     r0, [pc, #0xdc] @ [0x20aa318] (=RAM_21c4ac8)
	ldrsh   r7, [r5, #0x4a]
	ldr     r0, [r0, #0x8]
	ldrsh   r6, [r5, #0x48]
	bl      Function_20ac444
	cmp     r0, #0x0
	ldr     r0, [pc, #0xc4] @ [0x20aa318] (=RAM_21c4ac8)
	rsbne   r6, r6, #0x0
	ldr     r0, [r0, #0x8]
	bl      Function_20ac458
	cmp     r0, #0x0
	rsbne   r7, r7, #0x0
	mov     r0, r6, lsl #12
	mov     r1, r7, lsl #12
	mov     r2, #0x0
	bl      Function_20aacbc
branch_20aa274: @ 20aa274 :arm
	ldrh    r0, [r5, #0x4e]
	tst     r0, #0x4
	beq     branch_20aa2a8
	ldrh    r0, [r5, #0x4c]
	ldr     r2, [pc, #0x90] @ [0x20aa31c] (=Unknown_20f983c)
	mov     r0, r0, asr #4
	mov     r1, r0, lsl #1
	add     r0, r1, #0x1
	mov     r3, r1, lsl #1
	mov     r1, r0, lsl #1
	ldrsh   r0, [r2, r3]
	ldrsh   r1, [r2, r1]
	bl      Function_20aaf0c
branch_20aa2a8: @ 20aa2a8 :arm
	ldrh    r0, [r5, #0x4e]
	tst     r0, #0x2
	beq     branch_20aa2c4
	ldr     r0, [r5, #0x40]
	ldr     r1, [r5, #0x44]
	mov     r2, #1, 20 @ #0x1000
	bl      Function_20aadb8
branch_20aa2c4: @ 20aa2c4 :arm
	ldr     r2, [r5, #0x38]
	mvn     r0, #0x0
	cmp     r2, r0
	movne   r0, #0x1
	moveq   r0, #0x0
	cmp     r0, #0x0
	beq     branch_20aa300
	ldr     r1, [pc, #0x2c] @ [0x20aa314] (=Unknown_2100ea4)
	mov     r0, r4
	str     r2, [r1, #0x4]
	bl      Function_20a9d74
	ldr     r0, [pc, #0x1c] @ [0x20aa314] (=Unknown_2100ea4)
	mvn     r1, #0x0
	str     r1, [r0, #0x4]
	b       branch_20aa308

branch_20aa300: @ 20aa300 :arm
	mov     r0, r4
	bl      Function_20a9d74
branch_20aa308: @ 20aa308 :arm
	mov     r0, #0x1
	bl      Function_20aac6c
	ldmfd   sp!, {r3-r7,pc}
@ 0x20aa314

.word Unknown_2100ea4 @ 0x20aa314
.word RAM_21c4ac8 @ 0x20aa318
.word Unknown_20f983c @ 0x20aa31c



.arm
Function_20aa320: @ 20aa320 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r5, r0
	ldr     r0, [r5, #0x8]
	cmp     r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	ldr     r4, [r5]
	bl      Function_20aaa48
	ldrh    r0, [r5, #0x1e]
	tst     r0, #0x8
	beq     branch_20aa388
	ldr     r0, [pc, #0x9c] @ [0x20aa3ec] (=RAM_21c4ac8)
	ldrsh   r7, [r5, #0x1a]
	ldr     r0, [r0, #0x8]
	ldrsh   r6, [r5, #0x18]
	bl      Function_20ac444
	cmp     r0, #0x0
	ldr     r0, [pc, #0x84] @ [0x20aa3ec] (=RAM_21c4ac8)
	rsbne   r6, r6, #0x0
	ldr     r0, [r0, #0x8]
	bl      Function_20ac458
	cmp     r0, #0x0
	rsbne   r7, r7, #0x0
	mov     r0, r6, lsl #12
	mov     r1, r7, lsl #12
	mov     r2, #0x0
	bl      Function_20aacbc
branch_20aa388: @ 20aa388 :arm
	ldrh    r0, [r5, #0x1e]
	tst     r0, #0x4
	beq     branch_20aa3bc
	ldrh    r0, [r5, #0x1c]
	ldr     r2, [pc, #0x50] @ [0x20aa3f0] (=Unknown_20f983c)
	mov     r0, r0, asr #4
	mov     r1, r0, lsl #1
	add     r0, r1, #0x1
	mov     r3, r1, lsl #1
	mov     r1, r0, lsl #1
	ldrsh   r0, [r2, r3]
	ldrsh   r1, [r2, r1]
	bl      Function_20aaf0c
branch_20aa3bc: @ 20aa3bc :arm
	ldrh    r0, [r5, #0x1e]
	tst     r0, #0x2
	beq     branch_20aa3d8
	ldr     r0, [r5, #0x10]
	ldr     r1, [r5, #0x14]
	mov     r2, #1, 20 @ #0x1000
	bl      Function_20aadb8
branch_20aa3d8: @ 20aa3d8 :arm
	mov     r0, r4
	bl      Function_20aa1c4
	mov     r0, #0x1
	bl      Function_20aac6c
	ldmfd   sp!, {r3-r7,pc}
@ 0x20aa3ec

.word RAM_21c4ac8 @ 0x20aa3ec
.word Unknown_20f983c @ 0x20aa3f0



.arm
Function_20aa3f4: @ 20aa3f4 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r4, r0
	bl      Function_20ac354
	mov     r6, #0x0
	str     r6, [r4, #0x70]
	str     r6, [r4, #0x74]
	str     r6, [r4, #0x78]
	str     r6, [r4, #0x7c]
	str     r6, [r4, #0x80]
	str     r6, [r4, #0x84]
	strh    r6, [r4, #0x88]
	strh    r6, [r4, #0x8a]
	str     r6, [r4, #0x8c]
	str     r6, [r4, #0x90]
	strh    r6, [r4, #0x94]
	ldr     r1, [pc, #0x64] @ [0x20aa49c] (=RAM_21c4ac8)
	ldr     r2, [pc, #0x64] @ [0x20aa4a0] (=0xfffe)
	ldr     r0, [pc, #0x64] @ [0x20aa4a4] (=Unknown_2100ea4)
	ldr     r7, [pc, #0x64] @ [0x20aa4a8] (=RAM_21c5258)
	str     r6, [r1, #0xc]
	strh    r2, [r0]
	mvn     r5, #0x0
	mov     r4, #0x10
branch_20aa450: @ 20aa450 :arm
	mov     r0, r5
	mov     r2, r4
	add     r1, r7, #0x10
	bl      MIi_CpuClearFast
	add     r6, r6, #0x1
	cmp     r6, #0x20
	add     r7, r7, #0x20
	blt     branch_20aa450

	ldr     r3, [pc, #0x24] @ [0x20aa49c] (=RAM_21c4ac8)
	mov     r0, #0x0
	strh    r0, [r3]

	ldr     r1, [pc, #0x28] @ [0x20aa4ac] (=RAM_21c4b58)
	mov     r2, #0x100
	strh    r0, [r3, #0x2]
	bl      MIi_CpuClearFast

	ldr     r0, [pc, #0x8] @ [0x20aa49c] (=RAM_21c4ac8)
	mov     r1, #0x0
	str     r1, [r0, #0x4]

	ldmfd   sp!, {r3-r7,pc}
@ 0x20aa49c

.word RAM_21c4ac8 @ 0x20aa49c
.word 0xfffe @ 0x20aa4a0
.word Unknown_2100ea4 @ 0x20aa4a4
.word RAM_21c5258 @ 0x20aa4a8
.word RAM_21c4b58 @ 0x20aa4ac



.arm
Function_20aa4b0: @ 20aa4b0 :arm
	ldr     r2, [r0, #0x70]
	str     r2, [r1, #0x30]
	str     r1, [r0, #0x70]
	bx      lr
@ 0x20aa4c0


.arm
Function_20aa4c0: @ 20aa4c0 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r1, r4
	mov     r0, #0x0
	mov     r2, #0x48
	bl      MIi_CpuClear16
	mov     r0, #0x1
	str     r0, [r4, #0x10]
	mov     r0, #0x3
	ldr     r1, [pc, #0x20] @ [0x20aa50c] (=Function_20a995c)
	str     r0, [r4, #0x14]
	ldr     r0, [pc, #0x1c] @ [0x20aa510] (=Function_20a9a70)
	str     r1, [r4, #0x18]
	ldr     r1, [pc, #0x18] @ [0x20aa514] (=Function_20a9af4)
	str     r0, [r4, #0x1c]
	ldr     r0, [pc, #0x14] @ [0x20aa518] (=Function_20a9ce0)
	str     r1, [r4, #0x20]
	str     r0, [r4, #0x24]
	ldmfd   sp!, {r4,pc}
@ 0x20aa50c

.word Function_20a995c @ 0x20aa50c
.word Function_20a9a70 @ 0x20aa510
.word Function_20a9af4 @ 0x20aa514
.word Function_20a9ce0 @ 0x20aa518



.arm
Function_20aa51c: @ 20aa51c :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r5, [pc, #0x84] @ [0x20aa5ac] (=RAM_21c4ac8)
	mov     r4, #0x0
	str     r0, [r5, #0x8]
	ldr     r1, [pc, #0x7c] @ [0x20aa5b0] (=0xfffe)
	ldr     r0, [pc, #0x7c] @ [0x20aa5b4] (=Unknown_2100ea4)
	str     r4, [r5, #0xc]
	strh    r1, [r0]
	ldrh    r0, [r5]
	cmp     r0, #0x0
	ble     branch_20aa578
	ldr     r8, [pc, #0x68] @ [0x20aa5b8] (=RAM_21c5258)
	mvn     r7, #0x0
	mov     r6, #0x10
branch_20aa554: @ 20aa554 :arm
	mov     r0, r7
	mov     r2, r6
	add     r1, r8, #0x10
	bl      MIi_CpuClearFast
	ldrh    r0, [r5]
	add     r4, r4, #0x1
	add     r8, r8, #0x20
	cmp     r4, r0
	blt     branch_20aa554
branch_20aa578: @ 20aa578 :arm
	ldr     r3, [pc, #0x2c] @ [0x20aa5ac] (=RAM_21c4ac8)
	mov     r0, #0x0
	strh    r0, [r3]
	ldr     r1, [pc, #0x30] @ [0x20aa5bc] (=RAM_21c4b58)
	mov     r2, #1, 24 @ #0x100
	strh    r0, [r3, #0x2]
	bl      MIi_CpuClearFast
	ldr     r0, [pc, #0x24] @ [0x20aa5c0] (=MATRIX_PUSH)
	mov     r1, #0x0
	str     r1, [r0]
	str     r1, [r0, #0x10]
	bl      Function_20a9778
	ldmfd   sp!, {r4-r8,pc}
@ 0x20aa5ac

.word RAM_21c4ac8 @ 0x20aa5ac
.word 0xfffe @ 0x20aa5b0
.word Unknown_2100ea4 @ 0x20aa5b4
.word RAM_21c5258 @ 0x20aa5b8
.word RAM_21c4b58 @ 0x20aa5bc
.word MATRIX_PUSH @ 0x20aa5c0



.arm
Function_20aa5c4: @ 20aa5c4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x58] @ [0x20aa628] (=MATRIX_POP)
	mov     r2, #0x1
	ldr     r0, [pc, #0x54] @ [0x20aa62c] (=RAM_21c4ac8)
	str     r2, [r1]
	ldr     r3, [r0, #0x8]
	ldr     r2, [r3, #0x7c]
	cmp     r2, #0x0
	beq     branch_20aa618
	tst     r2, #0x1
	movne   r1, #0x0
	strne   r1, [r0, #0x4]
	tst     r2, #0x2
	beq     branch_20aa608
	mov     r0, #0x0
	str     r0, [r3, #0x74]
	bl      Function_20ac5a4
branch_20aa608: @ 20aa608 :arm
	ldr     r0, [pc, #0x1c] @ [0x20aa62c] (=RAM_21c4ac8)
	mov     r1, #0x0
	ldr     r0, [r0, #0x8]
	str     r1, [r0, #0x7c]
branch_20aa618: @ 20aa618 :arm
	ldr     r0, [pc, #0xc] @ [0x20aa62c] (=RAM_21c4ac8)
	mov     r1, #0x0
	str     r1, [r0, #0x8]
	ldmfd   sp!, {r3,pc}
@ 0x20aa628

.word MATRIX_POP @ 0x20aa628
.word RAM_21c4ac8 @ 0x20aa62c



.arm
Function_20aa630: @ 20aa630 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0x58] @ [0x20aa694] (=RAM_21c4ac8)
	mov     r5, r0
	ldr     r1, [r1, #0x8]
	ldr     r1, [r1, #0x80]
	cmp     r1, #0x0
	beq     branch_20aa68c
	bl      Function_20ab70c
	mov     r4, r0
	mov     r0, #0x1
	bl      Function_20ab6d8
	ldr     r0, [pc, #0x30] @ [0x20aa694] (=RAM_21c4ac8)
	ldr     r0, [r0, #0x8]
	ldr     r0, [r0, #0x80]
	bl      Function_20ab6fc
	mov     r0, r5
	bl      Function_20aa1c4
	mov     r0, #0x0
	bl      Function_20ab6d8
	mov     r0, r4
	bl      Function_20ab6fc
	bl      Function_20ab6e8
	ldmfd   sp!, {r3-r5,pc}

branch_20aa68c: @ 20aa68c :arm
	bl      Function_20aa1c4
	ldmfd   sp!, {r3-r5,pc}
@ 0x20aa694

.word RAM_21c4ac8 @ 0x20aa694



.arm
Function_20aa698: @ 20aa698 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r5, r0
	ldr     r0, [r5, #0x8]
	cmp     r0, #0x1
	bne     branch_20aa894
	ldr     r0, [r5]
	mov     r2, #0x0
	ldrh    r0, [r0, #0x2]
	cmp     r0, #0x0
	bls     branch_20aa6ec
	ldr     r3, [pc, #0x298] @ [0x20aa960] (=RAM_21c5658)
	mov     r4, r2
.arm
branch_20aa6c8: @ 20aa6c8 :arm
	add     r0, r3, r2, lsl #2
	str     r4, [r0, #0x4]
	ldr     r0, [r5]
	add     r2, r2, #0x1
	ldrh    r1, [r0, #0x2]
	mov     r0, r2, lsl #16
	mov     r2, r0, lsr #16
	cmp     r1, r0, lsr #16
	bhi     branch_20aa6c8
branch_20aa6ec: @ 20aa6ec :arm
	ldr     r6, [pc, #0x270] @ [0x20aa964] (=RAM_21c4ac8)
	mov     r0, #0x1
	str     r0, [r6, #0xf94]
	ldr     r0, [r6, #0x8]
	mov     r10, #0x0
	ldr     r0, [r0, #0x80]
	cmp     r0, #0x0
	beq     branch_20aa7e4
	bl      Function_20ab70c
	str     r0, [sp]
	mov     r0, #0x1
	bl      Function_20ab6d8
	mov     r0, r6
	ldr     r0, [r0, #0x8]
	ldr     r0, [r0, #0x80]
	bl      Function_20ab6fc
	ldr     r2, [r5]
	ldrh    r0, [r2]
	cmp     r0, #0x0
	bls     branch_20aa7cc
	ldr     r11, [pc, #0x224] @ [0x20aa968] (=RAM_21c55c8)
.arm
branch_20aa740: @ 20aa740 :arm
	ldr     r0, [r2, #0x4]
	ldr     r8, [r5, #0xc]
	add     r7, r0, r10, lsl #3
	ldrh    r0, [r7, #0x6]
	and     r0, r0, #255, 24 @ #0xff00
	mov     r0, r0, lsl #8
	mov     r9, r0, lsr #16
	strh    r9, [r11, #0x90]
	bl      Function_20aaa48
	ldrsh   r4, [r7, #0x4]
	ldr     r0, [r6, #0x8]
	ldrsh   r7, [r7, #0x2]
	bl      Function_20ac444
	cmp     r0, #0x0
	ldr     r0, [r6, #0x8]
	rsbne   r7, r7, #0x0
	bl      Function_20ac458
	cmp     r0, #0x0
	rsbne   r4, r4, #0x0
	mov     r2, #0x0
	mov     r0, r7, lsl #12
	mov     r1, r4, lsl #12
	bl      Function_20aacbc
	mov     r0, #0x5c
	mla     r0, r9, r0, r8
	bl      Function_20aa1c4
	mov     r0, #0x1
	bl      Function_20aac6c
	ldr     r2, [r5]
	add     r0, r10, #0x1
	mov     r0, r0, lsl #16
	ldrh    r1, [r2]
	mov     r10, r0, lsr #16
	cmp     r1, r0, lsr #16
	bhi     branch_20aa740
.arm
branch_20aa7cc: @ 20aa7cc :arm
	mov     r0, #0x0
	bl      Function_20ab6d8
	ldr     r0, [sp]
	bl      Function_20ab6fc
	bl      Function_20ab6e8
	b       branch_20aa884
@ 0x20aa7e4

.arm
branch_20aa7e4: @ 20aa7e4 :arm
	ldr     r2, [r5]
	ldrh    r0, [r2]
	cmp     r0, #0x0
	bls     branch_20aa884
	ldr     r11, [pc, #0x16c] @ [0x20aa968] (=RAM_21c55c8)
.arm
branch_20aa7f8: @ 20aa7f8 :arm
	ldr     r0, [r2, #0x4]
	ldr     r8, [r5, #0xc]
	add     r7, r0, r10, lsl #3
	ldrh    r0, [r7, #0x6]
	and     r0, r0, #255, 24 @ #0xff00
	mov     r0, r0, lsl #8
	mov     r9, r0, lsr #16
	strh    r9, [r11, #0x90]
	bl      Function_20aaa48
	ldrsh   r4, [r7, #0x4]
	ldr     r0, [r6, #0x8]
	ldrsh   r7, [r7, #0x2]
	bl      Function_20ac444
	cmp     r0, #0x0
	ldr     r0, [r6, #0x8]
	rsbne   r7, r7, #0x0
	bl      Function_20ac458
	cmp     r0, #0x0
	rsbne   r4, r4, #0x0
	mov     r2, #0x0
	mov     r0, r7, lsl #12
	mov     r1, r4, lsl #12
	bl      Function_20aacbc
	mov     r0, #0x5c
	mla     r0, r9, r0, r8
	bl      Function_20aa1c4
	mov     r0, #0x1
	bl      Function_20aac6c
	ldr     r2, [r5]
	add     r0, r10, #0x1
	mov     r0, r0, lsl #16
	ldrh    r1, [r2]
	mov     r10, r0, lsr #16
	cmp     r1, r0, lsr #16
	bhi     branch_20aa7f8
.arm
branch_20aa884: @ 20aa884 :arm
	ldr     r0, [pc, #0xd8] @ [0x20aa964] (=RAM_21c4ac8)
	mov     r1, #0x0
	str     r1, [r0, #0xf94]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20aa894

.arm
branch_20aa894: @ 20aa894 :arm
	ldr     r0, [pc, #0xc8] @ [0x20aa964] (=RAM_21c4ac8)
	ldr     r4, [r5, #0xc]
	ldr     r0, [r0, #0x8]
	ldr     r0, [r0, #0x80]
	cmp     r0, #0x0
	beq     branch_20aa920
	bl      Function_20ab70c
	mov     r6, r0
	mov     r0, #0x1
	bl      Function_20ab6d8
	ldr     r0, [pc, #0xa0] @ [0x20aa964] (=RAM_21c4ac8)
	ldr     r0, [r0, #0x8]
	ldr     r0, [r0, #0x80]
	bl      Function_20ab6fc
	ldr     r0, [r5]
	mov     r7, #0x0
	ldrh    r0, [r0]
	cmp     r0, #0x0
	bls     branch_20aa908
	mov     r8, #0x28
.arm
branch_20aa8e4: @ 20aa8e4 :arm
	mla     r0, r7, r8, r4
	bl      Function_20aa320
	ldr     r1, [r5]
	add     r0, r7, #0x1
	mov     r0, r0, lsl #16
	ldrh    r1, [r1]
	mov     r7, r0, lsr #16
	cmp     r1, r0, lsr #16
	bhi     branch_20aa8e4
.arm
branch_20aa908: @ 20aa908 :arm
	mov     r0, #0x0
	bl      Function_20ab6d8
	mov     r0, r6
	bl      Function_20ab6fc
	bl      Function_20ab6e8
	ldmfd   sp!, {r3-r11,pc}
@ 0x20aa920

.arm
branch_20aa920: @ 20aa920 :arm
	ldr     r0, [r5]
	mov     r6, #0x0
	ldrh    r0, [r0]
	cmp     r0, #0x0
	ldmlsfd sp!, {r3-r11,pc}
	mov     r7, #0x28
.arm
branch_20aa938: @ 20aa938 :arm
	mla     r0, r6, r7, r4
	bl      Function_20aa320
	ldr     r1, [r5]
	add     r0, r6, #0x1
	mov     r0, r0, lsl #16
	ldrh    r1, [r1]
	mov     r6, r0, lsr #16
	cmp     r1, r0, lsr #16
	bhi     branch_20aa938
	ldmfd   sp!, {r3-r11,pc}
@ 0x20aa960

.word RAM_21c5658 @ 0x20aa960
.word RAM_21c4ac8 @ 0x20aa964
.word RAM_21c55c8 @ 0x20aa968



.arm
Function_20aa96c: @ 20aa96c :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r4, r0
	ldrh    r0, [r4, #0x5a]
	cmp     r0, #0x0
	bne     branch_20aa98c
	add     r0, r4, #0x34
	bl      Function_20aa698
	ldmfd   sp!, {r4-r6,pc}
@ 0x20aa98c

.arm
branch_20aa98c: @ 20aa98c :arm
	bl      Function_20aaa48
	ldrh    r0, [r4, #0x5a]
	tst     r0, #0x8
	beq     branch_20aa9dc
	ldr     r0, [pc, #0x9c] @ [0x20aaa40] (=RAM_21c4ac8)
	ldrsh   r6, [r4, #0x56]
	ldr     r0, [r0, #0x8]
	ldrsh   r5, [r4, #0x54]
	bl      Function_20ac444
	cmp     r0, #0x0
	ldr     r0, [pc, #0x84] @ [0x20aaa40] (=RAM_21c4ac8)
	rsbne   r5, r5, #0x0
	ldr     r0, [r0, #0x8]
	bl      Function_20ac458
	cmp     r0, #0x0
	rsbne   r6, r6, #0x0
	mov     r0, r5, lsl #12
	mov     r1, r6, lsl #12
	mov     r2, #0x0
	bl      Function_20aacbc
branch_20aa9dc: @ 20aa9dc :arm
	ldrh    r0, [r4, #0x5a]
	tst     r0, #0x4
	beq     branch_20aaa10
	ldrh    r0, [r4, #0x58]
	ldr     r2, [pc, #0x50] @ [0x20aaa44] (=Unknown_20f983c)
	mov     r0, r0, asr #4
	mov     r1, r0, lsl #1
	add     r0, r1, #0x1
	mov     r3, r1, lsl #1
	mov     r1, r0, lsl #1
	ldrsh   r0, [r2, r3]
	ldrsh   r1, [r2, r1]
	bl      Function_20aaf0c
branch_20aaa10: @ 20aaa10 :arm
	ldrh    r0, [r4, #0x5a]
	tst     r0, #0x2
	beq     branch_20aaa2c
	ldr     r0, [r4, #0x4c]
	ldr     r1, [r4, #0x50]
	mov     r2, #1, 20 @ #0x1000
	bl      Function_20aadb8
branch_20aaa2c: @ 20aaa2c :arm
	add     r0, r4, #0x34
	bl      Function_20aa698
	mov     r0, #0x1
	bl      Function_20aac6c
	ldmfd   sp!, {r4-r6,pc}
@ 0x20aaa40

.word RAM_21c4ac8 @ 0x20aaa40
.word Unknown_20f983c @ 0x20aaa44



.arm
Function_20aaa48: @ 20aaa48 :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r0, [pc, #0x1f8] @ [0x20aac4c] (=RAM_21c4ac8)
	ldr     r1, [r0, #0x8]
	ldr     r1, [r1, #0x7c]
	tst     r1, #0x1
	bne     branch_20aab88
	ldr     r1, [r0, #0xc]
	mov     r0, r1, lsl #16
	add     r6, r1, #0x1
	cmp     r6, #0x20
	mov     r5, r0, lsr #16
	movlt   r0, #0x1
	movge   r0, #0x0
	cmp     r0, #0x0
	beq     branch_20aab28
	ldr     r0, [pc, #0x1c0] @ [0x20aac4c] (=RAM_21c4ac8)
	ldr     r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_20aaacc
	ldr     r3, [r0, #0xc]
	mov     r0, #0x18
	mul     r8, r3, r0
	ldr     r4, [pc, #0x1a8] @ [0x20aac50] (=RAM_21c4c68)
	ldr     r1, [pc, #0x1a8] @ [0x20aac54] (=RAM_21c4ad8)
	mul     r7, r6, r0
	ldr     r2, [r4, r8]
	ldr     r0, [r1, r3, lsl #0x2]
	ldr     r3, [pc, #0x19c] @ [0x20aac58] (=RAM_21c4c6c)
	str     r2, [r4, r7]
	ldr     r2, [r3, r8]
	str     r0, [r1, r6, lsl #0x2]
	str     r2, [r3, r7]
	b       branch_20aab20

branch_20aaacc: @ 20aaacc :arm
	ldr     r4, [r0, #0xc]
	mov     r0, #0x18
	mul     lr, r4, r0
	ldr     r1, [pc, #0x17c] @ [0x20aac5c] (=RAM_21c4c58)
	mul     r12, r6, r0
	ldr     r8, [pc, #0x178] @ [0x20aac60] (=RAM_21c4f58)
	add     r10, r1, lr
	ldr     r7, [pc, #0x164] @ [0x20aac54] (=RAM_21c4ad8)
	add     r9, r1, r12
	ldmia   r10!, {r0-r3}
	stmia   r9!, {r0-r3}
	ldmia   r10, {r0,r1}
	stmia   r9, {r0,r1}
	add     r9, r8, lr
	ldr     r4, [r7, r4, lsl #0x2]
	add     r8, r8, r12
	ldmia   r9!, {r0-r3}
	stmia   r8!, {r0-r3}
	str     r4, [r7, r6, lsl #0x2]
	ldmia   r9, {r0,r1}
	stmia   r8, {r0,r1}
.arm
branch_20aab20: @ 20aab20 :arm
	ldr     r0, [pc, #0x124] @ [0x20aac4c] (=RAM_21c4ac8)
	str     r6, [r0, #0xc]
.arm
branch_20aab28: @ 20aab28 :arm
	ldr     r0, [pc, #0x11c] @ [0x20aac4c] (=RAM_21c4ac8)
	ldr     r2, [pc, #0x130] @ [0x20aac64] (=RAM_21c4b58)
	ldr     r0, [r0, #0xc]
	mov     r6, r5, lsl #3
	mov     r0, r0, lsl #16
	add     r4, r2, r5, lsl #3
	mov     r3, r0, lsr #16
	mov     r5, r3, lsl #3
	ldrh    r1, [r2, r6]
	ldrh    r0, [r4, #0x2]
	add     r3, r2, r3, lsl #3
	strh    r1, [r2, r5]
	strh    r0, [r3, #0x2]
	ldrh    r2, [r4, #0x4]
	ldrh    r0, [r4, #0x6]
	ldr     r1, [pc, #0xfc] @ [0x20aac68] (=RAM_21c4b5c)
	strh    r2, [r3, #0x4]
	strh    r0, [r3, #0x6]
	ldrh    r0, [r1, r6]
	cmp     r0, #0x1
	moveq   r0, #0x2
	streqh  r0, [r1, r5]
	strneh  r0, [r1, r5]
	ldmfd   sp!, {r4-r10,pc}
@ 0x20aab88

.arm
branch_20aab88: @ 20aab88 :arm
	ldr     r0, [r0, #0xc]
	add     r4, r0, #0x1
	cmp     r4, #0x20
	movlt   r0, #0x1
	movge   r0, #0x0
	cmp     r0, #0x0
	ldmeqfd sp!, {r4-r10,pc}
	ldr     r0, [pc, #0xa0] @ [0x20aac4c] (=RAM_21c4ac8)
	ldr     r1, [r0, #0x4]
	cmp     r1, #0x0
	beq     branch_20aabec
	ldr     r3, [r0, #0xc]
	mov     r0, #0x18
	mul     r7, r3, r0
	ldr     r5, [pc, #0x88] @ [0x20aac50] (=RAM_21c4c68)
	ldr     r1, [pc, #0x88] @ [0x20aac54] (=RAM_21c4ad8)
	mul     r6, r4, r0
	ldr     r2, [r5, r7]
	ldr     r0, [r1, r3, lsl #0x2]
	ldr     r3, [pc, #0x7c] @ [0x20aac58] (=RAM_21c4c6c)
	str     r2, [r5, r6]
	ldr     r2, [r3, r7]
	str     r0, [r1, r4, lsl #0x2]
	str     r2, [r3, r6]
	b       branch_20aac40

branch_20aabec: @ 20aabec :arm
	ldr     r9, [r0, #0xc]
	mov     r0, #0x18
	mul     lr, r9, r0
	ldr     r1, [pc, #0x5c] @ [0x20aac5c] (=RAM_21c4c58)
	mul     r8, r4, r0
	ldr     r12, [pc, #0x58] @ [0x20aac60] (=RAM_21c4f58)
	add     r5, r1, lr
	ldr     r6, [pc, #0x44] @ [0x20aac54] (=RAM_21c4ad8)
	add     r7, r1, r8
	ldmia   r5!, {r0-r3}
	stmia   r7!, {r0-r3}
	ldmia   r5, {r0,r1}
	ldr     r5, [r6, r9, lsl #0x2]
	add     lr, r12, lr
	stmia   r7, {r0,r1}
	add     r12, r12, r8
	ldmia   lr!, {r0-r3}
	stmia   r12!, {r0-r3}
	ldmia   lr, {r0,r1}
	stmia   r12, {r0,r1}
	str     r5, [r6, r4, lsl #0x2]
branch_20aac40: @ 20aac40 :arm
	ldr     r0, [pc, #0x4] @ [0x20aac4c] (=RAM_21c4ac8)
	str     r4, [r0, #0xc]
	ldmfd   sp!, {r4-r10,pc}
@ 0x20aac4c

.word RAM_21c4ac8 @ 0x20aac4c
.word RAM_21c4c68 @ 0x20aac50
.word RAM_21c4ad8 @ 0x20aac54
.word RAM_21c4c6c @ 0x20aac58
.word RAM_21c4c58 @ 0x20aac5c
.word RAM_21c4f58 @ 0x20aac60
.word RAM_21c4b58 @ 0x20aac64
.word RAM_21c4b5c @ 0x20aac68



.arm
Function_20aac6c: @ 20aac6c :arm
	ldr     r0, [pc, #0x3c] @ [0x20aacb0] (=RAM_21c4ac8)
	ldr     r0, [r0, #0xc]
	cmp     r0, #0x0
	movle   r0, #0x1
	movgt   r0, #0x0
	cmp     r0, #0x0
	bxne    lr
	ldr     r1, [pc, #0x20] @ [0x20aacb0] (=RAM_21c4ac8)
	ldr     r0, [pc, #0x20] @ [0x20aacb4] (=Unknown_2100ea4)
	ldr     r3, [r1, #0xc]
	ldrh    r2, [r0]
	sub     r3, r3, #0x1
	str     r3, [r1, #0xc]
	cmp     r2, r3
	ldrgt   r1, [pc, #0xc] @ [0x20aacb8] (=0xfffe)
	strgth  r1, [r0]
	bx      lr
@ 0x20aacb0

.word RAM_21c4ac8 @ 0x20aacb0
.word Unknown_2100ea4 @ 0x20aacb4
.word 0xfffe @ 0x20aacb8



.arm
Function_20aacbc: @ 20aacbc :arm
	stmfd   sp!, {r4-r6,lr}
	sub     sp, sp, #0x18
	ldr     r3, [pc, #0xd4] @ [0x20aada0] (=RAM_21c4ac8)
	mov     r4, r2
	ldr     r2, [r3, #0x4]
	cmp     r2, #0x0
	beq     branch_20aad1c
	ldr     r2, [r3, #0xc]
	mov     r3, #0x18
	mul     r6, r2, r3
	ldr     r5, [pc, #0xb8] @ [0x20aada4] (=RAM_21c4c68)
	ldr     r3, [pc, #0xb8] @ [0x20aada8] (=RAM_21c4ad8)
	ldr     r12, [r5, r6]
	ldr     lr, [pc, #0xb4] @ [0x20aadac] (=RAM_21c4c6c)
	add     r0, r12, r0
	str     r0, [r5, r6]
	ldr     r0, [r3, r2, lsl #0x2]
	ldr     r12, [lr, r6]
	add     r0, r0, r4
	add     r1, r12, r1
	str     r0, [r3, r2, lsl #0x2]
	add     sp, sp, #0x18
	str     r1, [lr, r6]
	ldmfd   sp!, {r4-r6,pc}
@ 0x20aad1c

.arm
branch_20aad1c: @ 20aad1c :arm
	mov     r12, #1, 20 @ #0x1000
	mov     r2, #0x0
	str     r0, [sp, #0x10]
	str     r12, [sp]
	str     r2, [sp, #0x4]
	str     r2, [sp, #0x8]
	str     r12, [sp, #0xc]
	str     r1, [sp, #0x14]
	ldr     r1, [r3, #0xc]
	mov     r0, #0x18
	mul     r3, r1, r0
	ldr     r2, [pc, #0x60] @ [0x20aadb0] (=RAM_21c4c58)
	add     r0, sp, #0x0
	add     r1, r2, r3
	add     r2, r2, r3
	bl      Function_20ab040
	ldr     r1, [pc, #0x3c] @ [0x20aada0] (=RAM_21c4ac8)
	mov     r0, #0x18
	ldr     r1, [r1, #0xc]
	ldr     r2, [pc, #0x44] @ [0x20aadb4] (=RAM_21c4f58)
	mul     r3, r1, r0
	add     r1, r2, r3
	add     r0, sp, #0x0
	add     r2, r2, r3
	bl      Function_20ab040
	ldr     r0, [pc, #0x18] @ [0x20aada0] (=RAM_21c4ac8)
	ldr     r2, [pc, #0x1c] @ [0x20aada8] (=RAM_21c4ad8)
	ldr     r1, [r0, #0xc]
	ldr     r0, [r2, r1, lsl #0x2]
	add     r0, r0, r4
	str     r0, [r2, r1, lsl #0x2]
	add     sp, sp, #0x18
	ldmfd   sp!, {r4-r6,pc}
@ 0x20aada0

.word RAM_21c4ac8 @ 0x20aada0
.word RAM_21c4c68 @ 0x20aada4
.word RAM_21c4ad8 @ 0x20aada8
.word RAM_21c4c6c @ 0x20aadac
.word RAM_21c4c58 @ 0x20aadb0
.word RAM_21c4f58 @ 0x20aadb4



.arm
Function_20aadb8: @ 20aadb8 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x18
	ldr     r2, [pc, #0x12c] @ [0x20aaef4] (=RAM_21c4ac8)
	mov     lr, #0x0
	ldr     r3, [r2, #0xc]
	mov     r2, #0x18
	mul     r12, r3, r2
	mov     r5, r0
	mov     r4, r1
	ldr     r2, [pc, #0x114] @ [0x20aaef8] (=RAM_21c4c58)
	add     r0, sp, #0x0
	add     r1, r2, r12
	add     r2, r2, r12
	str     r5, [sp]
	str     lr, [sp, #0x4]
	str     lr, [sp, #0x8]
	str     r4, [sp, #0xc]
	str     lr, [sp, #0x10]
	str     lr, [sp, #0x14]
	bl      Function_20ab040
	mov     r0, r5
	bl      FX_Inv
	mov     r1, #0x0
	str     r0, [sp]
	mov     r0, r4
	str     r1, [sp, #0x4]
	str     r1, [sp, #0x8]
	bl      FX_Inv
	mov     r12, #0x0
	ldr     r1, [pc, #0xc0] @ [0x20aaef4] (=RAM_21c4ac8)
	str     r0, [sp, #0xc]
	ldr     r1, [r1, #0xc]
	mov     r0, #0x18
	mul     r3, r1, r0
	ldr     r2, [pc, #0xb4] @ [0x20aaefc] (=RAM_21c4f58)
	add     r0, sp, #0x0
	add     r1, r2, r3
	add     r2, r2, r3
	str     r12, [sp, #0x10]
	str     r12, [sp, #0x14]
	bl      Function_20ab040
	ldr     r0, [pc, #0x90] @ [0x20aaef4] (=RAM_21c4ac8)
	ldr     r0, [r0, #0x4]
	cmp     r0, #0x0
	bne     branch_20aae84
	ldr     r1, [pc, #0x8c] @ [0x20aaf00] (=Unknown_2100ea4)
	ldr     r0, [pc, #0x8c] @ [0x20aaf04] (=0xfffe)
	ldrh    r1, [r1]
	cmp     r1, r0
	movne   r0, #0x1
	bne     branch_20aae88
.arm
branch_20aae84: @ 20aae84 :arm
	mov     r0, #0x0
.arm
branch_20aae88: @ 20aae88 :arm
	cmp     r0, #0x0
	bne     branch_20aaea0
	ldr     r1, [pc, #0x5c] @ [0x20aaef4] (=RAM_21c4ac8)
	ldr     r0, [pc, #0x64] @ [0x20aaf00] (=Unknown_2100ea4)
	ldr     r1, [r1, #0xc]
	strh    r1, [r0]
.arm
branch_20aaea0: @ 20aaea0 :arm
	ldr     r1, [pc, #0x4c] @ [0x20aaef4] (=RAM_21c4ac8)
	ldr     r2, [pc, #0x5c] @ [0x20aaf08] (=RAM_21c4b58)
	ldr     r0, [r1, #0xc]
	mov     r0, r0, lsl #16
	add     r12, r2, r0, lsr #13
	ldrh    r0, [r12, #0x4]
	cmp     r0, #0x3
	addls   pc, pc, r0, lsl #2
	b       branch_20aaeec
	b       branch_20aaed4
	b       branch_20aaeec
	b       branch_20aaed4
	b       branch_20aaed4
@ 0x20aaed4

.arm
branch_20aaed4: @ 20aaed4 :arm
	ldrh    r3, [r1, #0x2]
	mov     r0, #0x1
	add     r2, r3, #0x1
	strh    r2, [r1, #0x2]
	strh    r3, [r12, #0x2]
	strh    r0, [r12, #0x4]
branch_20aaeec: @ 20aaeec :arm
	add     sp, sp, #0x18
	ldmfd   sp!, {r3-r5,pc}
@ 0x20aaef4

.word RAM_21c4ac8 @ 0x20aaef4
.word RAM_21c4c58 @ 0x20aaef8
.word RAM_21c4f58 @ 0x20aaefc
.word Unknown_2100ea4 @ 0x20aaf00
.word 0xfffe @ 0x20aaf04
.word RAM_21c4b58 @ 0x20aaf08



.arm
Function_20aaf0c: @ 20aaf0c :arm
	stmfd   sp!, {r3,lr}
	sub     sp, sp, #0x18
	ldr     r2, [pc, #0xf8] @ [0x20ab014] (=RAM_21c4ac8)
	mov     lr, #0x0
	ldr     r3, [r2, #0xc]
	mov     r2, #0x18
	mul     r12, r3, r2
	rsb     r3, r0, #0x0
	str     r0, [sp, #0x4]
	ldr     r2, [pc, #0xe0] @ [0x20ab018] (=RAM_21c4c58)
	add     r0, sp, #0x0
	str     r1, [sp]
	str     r1, [sp, #0xc]
	add     r1, r2, r12
	add     r2, r2, r12
	str     r3, [sp, #0x8]
	str     lr, [sp, #0x10]
	str     lr, [sp, #0x14]
	bl      Function_20ab040
	ldr     r1, [pc, #0xb4] @ [0x20ab014] (=RAM_21c4ac8)
	mov     r0, #0x18
	ldr     r1, [r1, #0xc]
	ldr     r2, [pc, #0xb0] @ [0x20ab01c] (=RAM_21c4f58)
	mul     r3, r1, r0
	add     r1, r2, r3
	add     r0, sp, #0x0
	add     r2, r2, r3
	bl      Function_20ab040
	ldr     r0, [pc, #0x90] @ [0x20ab014] (=RAM_21c4ac8)
	ldr     r0, [r0, #0x4]
	cmp     r0, #0x0
	bne     branch_20aafa4
	ldr     r1, [pc, #0x8c] @ [0x20ab020] (=Unknown_2100ea4)
	ldr     r0, [pc, #0x8c] @ [0x20ab024] (=0xfffe)
	ldrh    r1, [r1]
	cmp     r1, r0
	movne   r0, #0x1
	bne     branch_20aafa8
.arm
branch_20aafa4: @ 20aafa4 :arm
	mov     r0, #0x0
.arm
branch_20aafa8: @ 20aafa8 :arm
	cmp     r0, #0x0
	bne     branch_20aafc0
	ldr     r1, [pc, #0x5c] @ [0x20ab014] (=RAM_21c4ac8)
	ldr     r0, [pc, #0x64] @ [0x20ab020] (=Unknown_2100ea4)
	ldr     r1, [r1, #0xc]
	strh    r1, [r0]
.arm
branch_20aafc0: @ 20aafc0 :arm
	ldr     r1, [pc, #0x4c] @ [0x20ab014] (=RAM_21c4ac8)
	ldr     r2, [pc, #0x5c] @ [0x20ab028] (=RAM_21c4b58)
	ldr     r0, [r1, #0xc]
	mov     r0, r0, lsl #16
	add     r12, r2, r0, lsr #13
	ldrh    r0, [r12, #0x4]
	cmp     r0, #0x3
	addls   pc, pc, r0, lsl #2
	b       branch_20ab00c
	b       branch_20aaff4
	b       branch_20ab00c
	b       branch_20aaff4
	b       branch_20aaff4
@ 0x20aaff4

.arm
branch_20aaff4: @ 20aaff4 :arm
	ldrh    r3, [r1, #0x2]
	mov     r0, #0x1
	add     r2, r3, #0x1
	strh    r2, [r1, #0x2]
	strh    r3, [r12, #0x2]
	strh    r0, [r12, #0x4]
branch_20ab00c: @ 20ab00c :arm
	add     sp, sp, #0x18
	ldmfd   sp!, {r3,pc}
@ 0x20ab014

.word RAM_21c4ac8 @ 0x20ab014
.word RAM_21c4c58 @ 0x20ab018
.word RAM_21c4f58 @ 0x20ab01c
.word Unknown_2100ea4 @ 0x20ab020
.word 0xfffe @ 0x20ab024
.word RAM_21c4b58 @ 0x20ab028



.arm
Function_20ab02c: @ 20ab02c :arm
	ldr     r0, [r0, #0x78]
	bx      lr
@ 0x20ab034


.arm
Function_20ab034: @ 20ab034 :arm
	ldr     r12, [pc, #0x0] @ [0x20ab03c] (=Function_20ac394)
	bx      r12
@ 0x20ab03c

.word Function_20ac394 @ 0x20ab03c



.arm
Function_20ab040: @ 20ab040 :arm
	stmfd   sp!, {r3-r7,lr}
	sub     sp, sp, #0x18
	ldr     r4, [r0, #0x4]
	ldr     r3, [r1, #0x8]
	mov     r12, r2
	smull   r6, r5, r4, r3
	ldr     r4, [r0]
	ldr     r3, [r1]
	cmp     r12, r1
	smlal   r6, r5, r4, r3
	mov     r3, r6, lsr #12
	addeq   r2, sp, #0x0
	orr     r3, r3, r5, lsl #20
	str     r3, [r2]
	ldr     r4, [r0, #0x4]
	ldr     r3, [r1, #0xc]
	ldr     r5, [r0]
	smull   r7, r6, r4, r3
	ldr     r3, [r1, #0x4]
	add     lr, sp, #0x0
	smlal   r7, r6, r5, r3
	mov     r3, r7, lsr #12
	orr     r3, r3, r6, lsl #20
	str     r3, [r2, #0x4]
	ldr     r4, [r0, #0xc]
	ldr     r3, [r1, #0x8]
	ldr     r5, [r0, #0x8]
	smull   r7, r6, r4, r3
	ldr     r3, [r1]
	cmp     r2, lr
	smlal   r7, r6, r5, r3
	mov     r3, r7, lsr #12
	orr     r3, r3, r6, lsl #20
	str     r3, [r2, #0x8]
	ldr     r4, [r0, #0xc]
	ldr     r3, [r1, #0xc]
	ldr     r5, [r0, #0x8]
	smull   r7, r6, r4, r3
	ldr     r3, [r1, #0x4]
	addne   sp, sp, #0x18
	smlal   r7, r6, r5, r3
	mov     r3, r7, lsr #12
	orr     r3, r3, r6, lsl #20
	str     r3, [r2, #0xc]
	ldr     r4, [r0, #0x14]
	ldr     r3, [r1, #0x8]
	ldr     r5, [r0, #0x10]
	smull   r7, r6, r4, r3
	ldr     r3, [r1]
	ldr     r4, [r1, #0x10]
	smlal   r7, r6, r5, r3
	mov     r3, r7, lsr #12
	orr     r3, r3, r6, lsl #20
	add     r3, r4, r3
	str     r3, [r2, #0x10]
	ldr     r4, [r0, #0x14]
	ldr     r3, [r1, #0xc]
	ldr     r5, [r0, #0x10]
	ldr     r0, [r1, #0x4]
	smull   r6, r3, r4, r3
	smlal   r6, r3, r5, r0
	mov     r0, r6, lsr #12
	ldr     r1, [r1, #0x14]
	orr     r0, r0, r3, lsl #20
	add     r0, r1, r0
	str     r0, [r2, #0x14]
	ldmnefd sp!, {r3-r7,pc}
	ldmia   lr!, {r0-r3}
	stmia   r12!, {r0-r3}
	ldmia   lr, {r0,r1}
	stmia   r12, {r0,r1}
	add     sp, sp, #0x18
	ldmfd   sp!, {r3-r7,pc}
@ 0x20ab164

.arm
Function_20ab164: @ 20ab164 :arm
	ldr     r2, [pc, #0xc] @ [0x20ab178] (=RAM_21c5a60)
	mov     r1, #0x30
	ldr     r2, [r2, #0x8]
	mla     r0, r1, r0, r2
	bx      lr
@ 0x20ab178

.word RAM_21c5a60 @ 0x20ab178
.arm
Function_20ab17c: @ 20ab17c :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r12, [pc, #0x94] @ [0x20ab21c] (=RAM_21c5a60)
	mov     r4, #0x30
	ldr     r12, [r12, #0x8]
	mov     r7, r1
	mla     r4, r0, r4, r12
	mov     r0, r4
	mov     r6, r2
	mov     r5, r3
	bl      Function_20a8aac
	mvn     r0, #0x0
	cmp     r7, r0
	beq     branch_20ab1c0
	mov     r0, r4
	mov     r2, r7
	mov     r1, #0x0
	bl      Function_20a8ac8
.arm
branch_20ab1c0: @ 20ab1c0 :arm
	mvn     r0, #0x0
	cmp     r6, r0
	beq     branch_20ab1dc
	mov     r0, r4
	mov     r2, r6
	mov     r1, #0x1
	bl      Function_20a8ac8
.arm
branch_20ab1dc: @ 20ab1dc :arm
	mvn     r0, #0x0
	cmp     r5, r0
	beq     branch_20ab1f8
	mov     r0, r4
	mov     r2, r5
	mov     r1, #0x2
	bl      Function_20a8ac8
.arm
branch_20ab1f8: @ 20ab1f8 :arm
	ldr     r1, [sp, #0x18]
	ldr     r0, [sp, #0x1c]
	str     r1, [r4, #0xc]
	ldr     r1, [sp, #0x20]
	str     r0, [r4, #0x10]
	ldr     r0, [sp, #0x24]
	str     r1, [r4, #0x14]
	str     r0, [r4, #0x18]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20ab21c

.word RAM_21c5a60 @ 0x20ab21c



.arm
Function_20ab220: @ 20ab220 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r3, [pc, #0x54] @ [0x20ab280] (=RAM_21c5a60)
	movs    r6, r1
	mov     r7, r0
	mov     r5, #0x0
	stmia   r3, {r2,r6,r7}
	ldmeqfd sp!, {r3-r7,pc}
	mov     r4, r5
.arm
branch_20ab240: @ 20ab240 :arm
	mov     r0, r7
	bl      Function_20a8aac
	str     r4, [r7, #0xc]
	str     r4, [r7, #0x10]
	str     r4, [r7, #0x14]
	str     r4, [r7, #0x18]
	str     r4, [r7, #0x1c]
	str     r4, [r7, #0x20]
	str     r4, [r7, #0x24]
	str     r4, [r7, #0x28]
	add     r5, r5, #0x1
	str     r4, [r7, #0x2c]
	cmp     r5, r6
	add     r7, r7, #0x30
	blo     branch_20ab240
	ldmfd   sp!, {r3-r7,pc}
@ 0x20ab280

.word RAM_21c5a60 @ 0x20ab280



.arm
Function_20ab284: @ 20ab284 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x8
	ldr     r1, [pc, #0x10c] @ [0x20ab3a0] (=RAM_21c5a60)
	mov     r0, #0x0
	str     r0, [sp, #0x4]
	ldr     r0, [r1, #0x4]
	cmp     r0, #0x0
	addls   sp, sp, #0x8
	ldmlsfd sp!, {r3-r11,pc}
	ldr     r0, [sp, #0x4]
	str     r0, [sp]
branch_20ab2b0: @ 20ab2b0 :arm
	ldr     r4, [pc, #0xe8] @ [0x20ab3a0] (=RAM_21c5a60)
	ldr     r0, [sp]
	ldr     r1, [r4, #0x8]
	add     r8, r1, r0
	ldr     r0, [r8, #0x1c]
	cmp     r0, #0x0
	beq     branch_20ab36c
	mov     r7, #0x0
	cmp     r7, #0x3
	bge     branch_20ab364
	ldr     r5, [pc, #0xc4] @ [0x20ab3a4] (=Unknown_20f9688)
	mov     r11, r7
	mov     r6, #0x1
branch_20ab2e4: @ 20ab2e4 :arm
	ldr     r0, [r8, #0x24]
	mov     r1, r11
	tst     r0, r6, lsl r7
	beq     branch_20ab300
	ldr     r0, [r8, #0x20]
	tst     r0, r6, lsl r7
	movne   r1, r6
branch_20ab300: @ 20ab300 :arm
	cmp     r1, #0x0
	beq     branch_20ab358
	cmp     r7, #0x0
	ldreq   r10, [r8, #0x14]
	ldr     r9, [r5, r7, lsl #0x2]
	mov     r0, r8
	mov     r1, r7
	ldrne   r10, [r8, #0x10]
	bl      Function_20a8ad0
	ldr     r2, [r8, #0x28]
	mov     r1, r0
	mov     r0, r9
	ldr     r3, [r8, #0x2c]
	ldr     r9, [r4]
	add     r2, r10, r2
	blx     r9
	cmp     r0, #0x0
	beq     branch_20ab358
	mvn     r0, r6, lsl r7
	ldr     r1, [r8, #0x24]
	and     r0, r1, r0
	str     r0, [r8, #0x24]
.arm
branch_20ab358: @ 20ab358 :arm
	add     r7, r7, #0x1
	cmp     r7, #0x3
	blt     branch_20ab2e4
.arm
branch_20ab364: @ 20ab364 :arm
	mov     r0, #0x0
	str     r0, [r8, #0x20]
.arm
branch_20ab36c: @ 20ab36c :arm
	ldr     r0, [sp, #0x4]
	ldr     r1, [pc, #0x28] @ [0x20ab3a0] (=RAM_21c5a60)
	add     r0, r0, #0x1
	str     r0, [sp, #0x4]
	ldr     r0, [sp]
	ldr     r1, [r1, #0x4]
	add     r0, r0, #0x30
	str     r0, [sp]
	ldr     r0, [sp, #0x4]
	cmp     r0, r1
	blo     branch_20ab2b0
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r11,pc}
@ 0x20ab3a0

.word RAM_21c5a60 @ 0x20ab3a0
.word Unknown_20f9688 @ 0x20ab3a4



.arm
Function_20ab3a8: @ 20ab3a8 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r1
	mov     r4, r2
	bl      Function_20ab164
	mvn     r1, #0x0
	str     r1, [r0, #0x24]
	str     r5, [r0, #0x28]
	str     r4, [r0, #0x2c]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20ab3cc

.arm
Function_20ab3cc: @ 20ab3cc :arm
	ldr     r1, [pc, #0x4c] @ [0x20ab420] (=RAM_21c5a60)
	mov     r0, #0x0
	ldr     r3, [r1, #0x4]
	cmp     r3, #0x0
	bls     branch_20ab418
	ldr     r12, [r1, #0x8]
	mov     r2, r12
.arm
branch_20ab3e8: @ 20ab3e8 :arm
	ldr     r1, [r2, #0x1c]
	cmp     r1, #0x1
	beq     branch_20ab408
	mov     r1, #0x30
	mla     r1, r0, r1, r12
	mov     r2, #0x1
	str     r2, [r1, #0x1c]
	bx      lr
@ 0x20ab408

.arm
branch_20ab408: @ 20ab408 :arm
	add     r0, r0, #0x1
	cmp     r0, r3
	add     r2, r2, #0x30
	blo     branch_20ab3e8
.arm
branch_20ab418: @ 20ab418 :arm
	mvn     r0, #0x0
	bx      lr
@ 0x20ab420

.word RAM_21c5a60 @ 0x20ab420



.arm
Function_20ab424: @ 20ab424 :arm
	stmfd   sp!, {r4,lr}
	ldr     r2, [pc, #0x3c] @ [0x20ab46c] (=RAM_21c5a60)
	mov     r1, #0x30
	ldr     r2, [r2, #0x8]
	mla     r4, r0, r1, r2
	mov     r0, r4
	bl      Function_20a8aac
	mov     r0, #0x0
	str     r0, [r4, #0xc]
	str     r0, [r4, #0x10]
	str     r0, [r4, #0x14]
	str     r0, [r4, #0x18]
	str     r0, [r4, #0x1c]
	str     r0, [r4, #0x20]
	str     r0, [r4, #0x24]
	str     r0, [r4, #0x28]
	str     r0, [r4, #0x2c]
	ldmfd   sp!, {r4,pc}
@ 0x20ab46c

.word RAM_21c5a60 @ 0x20ab46c



.arm
Function_20ab470: @ 20ab470 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x8
	mov     r6, r0
	ldr     r0, [pc, #0x22c] @ [0x20ab6b0] (=0xc000c000)
	ldmia   r6, {r4,r5}
	and     r0, r4, r0
	and     r4, r0, #3, 2 @ #0xc0000000
	mov     lr, r4, lsr #30
	and     r0, r0, #3, 18 @ #0xc000
	mov     r5, r5, lsl #22
	mov     r12, r0, asr #14
	mov     r5, r5, lsr #22
	ldr     r4, [pc, #0x20c] @ [0x20ab6b4] (=0x20f9670)
	mov     r7, r5, lsl #16
	ldr     r0, [pc, #0x208] @ [0x20ab6b8] (=0x20f9658)
	add     r5, r4, r12, lsl #3
	mov     r8, lr, lsl #1
	add     r4, r0, r12, lsl #3
	ldrh    r5, [r8, r5]
	ldr     r0, [sp, #0x20]
	ldrh    r4, [r8, r4]
	str     r5, [r0, #0x10]
	mov     r5, r1
	str     r4, [r0, #0x14]
	ldr     r8, [r5, #0x14]
	mov     r4, r3
	cmp     r8, #0x0
	mov     r1, r7, lsr #16
	bne     branch_20ab550
	ldr     r3, [r5, #0x8]
	ldr     r7, [r5]
	mov     r3, r3, lsl #26
	orr     r2, r3, r2, lsr #3
	orr     r2, r2, #1, 2 @ #0x40000000
	orr     r2, r2, r7, lsl #20
	ldr     r3, [r5, #0x4]
	ldr     r7, [r5, #0x10]
	orr     r3, r2, r3, lsl #23
	ldr     r2, [pc, #0x1ac] @ [0x20ab6bc] (=GFX_TEX_FORMAT)
	orr     r3, r3, r7, lsl #29
	str     r3, [r2]
	ldr     r2, [r5, #0x8]
	ldr     r3, [r5]
	cmp     r2, #0x4
	ldr     r2, [pc, #0x198] @ [0x20ab6c0] (=0x20f96a4)
	moveq   r1, r1, lsl #15
	ldr     r2, [r2, r3, lsl #0x2]
	moveq   r1, r1, lsr #16
	sub     r2, r2, #0x1
	and     r2, r1, r2
	mov     r2, r2, lsl #15
	str     r2, [r0]
	ldr     r2, [r5]
	mov     r1, r1, asr r2
	mov     r1, r1, lsl #15
	b       branch_20ab5b8
@ 0x20ab550

.arm
branch_20ab550: @ 20ab550 :arm
	and     r3, r8, #7, 12 @ #0x700000
	mov     r3, r3, asr #20
	add     r7, r3, #0x5
	mov     r3, r12, lsl #16
	add     r12, r2, r1, lsl r7
	mov     r1, lr, lsl #16
	mov     r8, r3, lsr #16
	ldr     r7, [pc, #0x150] @ [0x20ab6c4] (=0x20f96c4)
	ldr     lr, [r5, #0x8]
	mov     r3, r12, lsr #3
	orr     r12, r3, lr, lsl #26
	ldr     r2, [pc, #0x144] @ [0x20ab6c8] (=0x20f96f4)
	mov     lr, r1, lsr #16
	add     r1, r2, r8, lsl #4
	add     r3, r7, r8, lsl #4
	ldr     r2, [r3, lr, lsl #0x2]
	orr     r3, r12, #1, 2 @ #0x40000000
	orr     r2, r3, r2, lsl #20
	ldr     r1, [r1, lr, lsl #0x2]
	ldr     r3, [r5, #0x10]
	orr     r2, r2, r1, lsl #23
	ldr     r1, [pc, #0x110] @ [0x20ab6bc] (=GFX_TEX_FORMAT)
	orr     r2, r2, r3, lsl #29
	str     r2, [r1]
	mov     r1, #0x0
	str     r1, [r0]
.arm
branch_20ab5b8: @ 20ab5b8 :arm
	str     r1, [r0, #0x4]
	ldr     r2, [r0]
	ldr     r1, [r0, #0x10]
	add     r1, r2, r1, lsl #12
	str     r1, [r0, #0x8]
	ldr     r2, [r0, #0x4]
	ldr     r1, [r0, #0x14]
	add     r1, r2, r1, lsl #12
	str     r1, [r0, #0xc]
	ldr     r1, [r6]
	mov     r2, r1, lsl #2
	mov     r1, r1, lsl #3
	mov     r12, r2, lsr #31
	movs    r3, r1, lsr #31
	beq     branch_20ab604
	ldr     r2, [r0]
	ldr     r1, [r0, #0x8]
	str     r1, [r0]
	str     r2, [r0, #0x8]
.arm
branch_20ab604: @ 20ab604 :arm
	cmp     r12, #0x0
	beq     branch_20ab61c
	ldr     r2, [r0, #0x4]
	ldr     r1, [r0, #0xc]
	str     r1, [r0, #0x4]
	str     r2, [r0, #0xc]
.arm
branch_20ab61c: @ 20ab61c :arm
	ldr     r1, [pc, #0xa8] @ [0x20ab6cc] (=RAM_21c5a6c)
	ldr     r7, [r1]
	cmp     r7, #0x0
	beq     branch_20ab644
	str     r3, [sp]
	add     r1, r0, #0x4
	add     r2, r0, #0x8
	add     r3, r0, #0xc
	str     r12, [sp, #0x4]
	blx     r7
.arm
branch_20ab644: @ 20ab644 :arm
	ldr     r0, [r6, #0x4]
	ldr     r1, [r6]
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #28
	mov     r3, r1, lsl #18
	ldr     r1, [r5, #0xc]
	mov     r0, r0, lsl #16
	ldr     r2, [pc, #0x68] @ [0x20ab6d0] (=0x20f969c)
	mov     r3, r3, lsr #31
	cmp     r1, #0x0
	mov     r0, r0, lsr #16
	ldr     r1, [r2, r3, lsl #0x2]
	movne   r0, r0, lsl #9
	bne     branch_20ab688
	cmp     r1, #0x4
	moveq   r0, #0x0
	movne   r0, r0, lsl #5
.arm
branch_20ab688: @ 20ab688 :arm
	cmp     r1, #0x2
	moveq   r2, #0x1
	movne   r2, #0x0
	add     r1, r4, r0
	rsb     r0, r2, #0x4
	mov     r1, r1, lsr r0
	ldr     r0, [pc, #0x2c] @ [0x20ab6d4] (=GFX_PAL_FORMAT)
	str     r1, [r0]
	add     sp, sp, #0x8
	ldmfd   sp!, {r4-r8,pc}
@ 0x20ab6b0

.word 0xc000c000 @ 0x20ab6b0
.word Unknown_20f9670 @ 0x20ab6b4
.word Unknown_20f9658 @ 0x20ab6b8
.word GFX_TEX_FORMAT @ 0x20ab6bc
.word Unknown_20f96a4 @ 0x20ab6c0
.word Unknown_20f96c4 @ 0x20ab6c4
.word Unknown_20f96f4 @ 0x20ab6c8
.word RAM_21c5a6c @ 0x20ab6cc
.word Unknown_20f969c @ 0x20ab6d0
.word GFX_PAL_FORMAT @ 0x20ab6d4



.arm
Function_20ab6d8: @ 20ab6d8 :arm
	ldr     r1, [pc, #0x4] @ [0x20ab6e4] (=RAM_21c5a6c)
	str     r0, [r1, #0x8]
	bx      lr
@ 0x20ab6e4

.word RAM_21c5a6c @ 0x20ab6e4



.arm
Function_20ab6e8: @ 20ab6e8 :arm
	ldr     r0, [pc, #0x8] @ [0x20ab6f8] (=RAM_21c5a6c)
	mov     r1, #0x0
	str     r1, [r0, #0x4]
	bx      lr
@ 0x20ab6f8

.word RAM_21c5a6c @ 0x20ab6f8



.arm
Function_20ab6fc: @ 20ab6fc :arm
	ldr     r1, [pc, #0x4] @ [0x20ab708] (=Unknown_2100ec4)
	str     r0, [r1]
	bx      lr
@ 0x20ab708

.word Unknown_2100ec4 @ 0x20ab708



.arm
Function_20ab70c: @ 20ab70c :arm
	ldr     r0, [pc, #0x4] @ [0x20ab718] (=Unknown_2100ec4)
	ldr     r0, [r0]
	bx      lr
@ 0x20ab718

.word Unknown_2100ec4 @ 0x20ab718



.arm
Function_20ab71c: @ 20ab71c :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0x1c
	add     r12, sp, #0x4
	mov     r5, r1
	mov     r4, r2
	mov     r7, r3
	mov     r6, r0
	ldr     r1, [sp, #0x30]
	ldr     r2, [sp, #0x34]
	ldr     r3, [sp, #0x38]
	mov     r0, r7
	str     r12, [sp]
	bl      Function_20ab470
	ldr     r2, [r7]
	and     r1, r2, #3, 24 @ #0x300
	cmp     r1, #1, 24 @ #0x100
	cmpne   r1, #3, 24 @ #0x300
	andne   r0, r2, #3, 4 @ #0x30000000
	orrne   r1, r1, r0
	cmp     r1, #3, 24 @ #0x300
	bne     branch_20ab7e0
	ldr     r0, [pc, #0x1d8] @ [0x20ab950] (=0xc000c000)
	ldr     r3, [pc, #0x1d8] @ [0x20ab954] (=0x20f9670)
	and     r2, r2, r0
	and     r0, r2, #3, 2 @ #0xc0000000
	and     r2, r2, #3, 18 @ #0xc000
	mov     r12, r2, asr #14
	mov     lr, r0, lsr #30
	ldr     r1, [pc, #0x1c4] @ [0x20ab958] (=RAM_21c5a6c)
	ldr     r2, [pc, #0x1c4] @ [0x20ab95c] (=0x20f9658)
	ldr     r0, [r1, #0x8]
	mov     lr, lr, lsl #1
	cmp     r0, #0x0
	ldrne   r0, [r1, #0x4]
	add     r3, r3, r12, lsl #3
	add     r2, r2, r12, lsl #3
	ldrh    r12, [lr, r3]
	ldrh    r3, [lr, r2]
	addne   r4, r0, r4, lsl #12
	add     r2, r6, r12, asr #1
	add     r0, r5, r3, asr #1
	ldr     r1, [pc, #0x198] @ [0x20ab960] (=MATRIX_TRANSLATE)
	mov     r2, r2, lsl #12
	str     r2, [r1]
	mov     r0, r0, lsl #12
	moveq   r4, r4, lsl #12
	str     r0, [r1]
	str     r4, [r1]
	b       branch_20ab810
@ 0x20ab7e0

.arm
branch_20ab7e0: @ 20ab7e0 :arm
	ldr     r0, [pc, #0x170] @ [0x20ab958] (=RAM_21c5a6c)
	ldr     r1, [r0, #0x8]
	cmp     r1, #0x0
	ldrne   r0, [r0, #0x4]
	ldr     r1, [pc, #0x168] @ [0x20ab960] (=MATRIX_TRANSLATE)
	addne   r2, r0, r4, lsl #12
	mov     r0, r6, lsl #12
	str     r0, [r1]
	mov     r0, r5, lsl #12
	moveq   r2, r4, lsl #12
	str     r0, [r1]
	str     r2, [r1]
.arm
branch_20ab810: @ 20ab810 :arm
	ldr     r0, [sp, #0x14]
	ldr     r2, [sp, #0x18]
	ldr     r1, [pc, #0x144] @ [0x20ab964] (=MATRIX_SCALE)
	mov     r0, r0, lsl #12
	str     r0, [r1]
	mov     r0, r2, lsl #12
	str     r0, [r1]
	mov     r0, #1, 20 @ #0x1000
	str     r0, [r1]
	mov     r0, #0x1
	str     r0, [r1, #0x94]
	ldr     r0, [sp, #0x10]
	ldr     r3, [sp, #0x4]
	mov     r0, r0, lsl #8
	mov     r2, r0, asr #16
	mov     r0, r3, lsl #8
	mov     r2, r2, lsl #16
	mov     r4, r0, asr #16
	mov     r3, r2, lsr #16
	mov     r2, r4, lsl #16
	mov     r3, r3, lsl #16
	orr     r2, r3, r2, lsr #16
	mov     r0, #1, 16 @ #0x10000
	str     r2, [r1, #0x1c]
	str     r0, [r1, #0x24]
	ldr     r2, [sp, #0x10]
	ldr     r4, [sp, #0xc]
	mov     r2, r2, lsl #8
	mov     r3, r2, asr #16
	mov     r2, r4, lsl #8
	mov     r3, r3, lsl #16
	mov     r2, r2, asr #16
	mov     r3, r3, lsr #16
	mov     r2, r2, lsl #16
	mov     r3, r3, lsl #16
	orr     r2, r3, r2, lsr #16
	str     r2, [r1, #0x1c]
	add     r0, r0, #0x40
	str     r0, [r1, #0x24]
	ldr     r0, [sp, #0x8]
	ldr     r3, [sp, #0xc]
	mov     r0, r0, lsl #8
	mov     r2, r0, asr #16
	mov     r0, r3, lsl #8
	mov     r2, r2, lsl #16
	mov     r0, r0, asr #16
	mov     r2, r2, lsr #16
	mov     r0, r0, lsl #16
	mov     r2, r2, lsl #16
	orr     r0, r2, r0, lsr #16
	str     r0, [r1, #0x1c]
	mov     r0, #0x40
	str     r0, [r1, #0x24]
	ldr     r0, [sp, #0x8]
	ldr     r3, [sp, #0x4]
	mov     r0, r0, lsl #8
	mov     r2, r0, asr #16
	mov     r0, r3, lsl #8
	mov     r2, r2, lsl #16
	mov     r0, r0, asr #16
	mov     r2, r2, lsr #16
	mov     r0, r0, lsl #16
	mov     r2, r2, lsl #16
	orr     r0, r2, r0, lsr #16
	str     r0, [r1, #0x1c]
	mov     r0, #0x0
	str     r0, [r1, #0x24]
	ldr     r2, [pc, #0x34] @ [0x20ab958] (=RAM_21c5a6c)
	str     r0, [r1, #0x98]
	ldr     r0, [r2, #0x8]
	cmp     r0, #0x0
	addeq   sp, sp, #0x1c
	ldmeqfd sp!, {r4-r7,pc}
	ldr     r0, [pc, #0x2c] @ [0x20ab968] (=Unknown_2100ec4)
	ldr     r1, [r2, #0x4]
	ldr     r0, [r0]
	add     r0, r1, r0
	str     r0, [r2, #0x4]
	add     sp, sp, #0x1c
	ldmfd   sp!, {r4-r7,pc}
@ 0x20ab950

.word 0xc000c000 @ 0x20ab950
.word Unknown_20f9670 @ 0x20ab954
.word RAM_21c5a6c @ 0x20ab958
.word Unknown_20f9658 @ 0x20ab95c
.word MATRIX_TRANSLATE @ 0x20ab960
.word MATRIX_SCALE @ 0x20ab964
.word Unknown_2100ec4 @ 0x20ab968



.arm
Function_20ab96c: @ 20ab96c :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x10
	ldr     r4, [r1]
	ldr     r3, [pc, #0x290] @ [0x20abc10] (=0x1ff0000)
	and     r3, r4, r3
	mov     r3, r3, lsr #16
	mov     r3, r3, lsl #16
	mov     r3, r3, asr #16
	cmp     r3, #0xff
	orrgt   r3, r3, #255, 24 @ #0xff00
	movgt   r3, r3, lsl #16
	movgt   r3, r3, asr #16
	mov     r3, r3, lsl #12
	str     r3, [sp, #0x8]
	ldr     r3, [r1]
	and     r3, r3, #0xff
	cmp     r3, #0x7f
	orrgt   r3, r3, #255, 24 @ #0xff00
	movgt   r3, r3, lsl #16
	movgt   r3, r3, asr #16
	mov     r3, r3, lsl #12
	str     r3, [sp, #0xc]
	ldr     r5, [r1]
	and     r4, r5, #3, 24 @ #0x300
	cmp     r4, #1, 24 @ #0x100
	cmpne   r4, #3, 24 @ #0x300
	andne   r3, r5, #3, 4 @ #0x30000000
	orrne   r4, r4, r3
	cmp     r4, #3, 24 @ #0x300
	bne     branch_20aba30
	ldr     r3, [pc, #0x228] @ [0x20abc14] (=0xc000c000)
	ldr     r4, [pc, #0x228] @ [0x20abc18] (=0x20f9670)
	and     r3, r5, r3
	and     r5, r3, #3, 2 @ #0xc0000000
	and     r3, r3, #3, 18 @ #0xc000
	mov     r6, r5, lsr #30
	mov     r5, r3, asr #14
	ldr     r3, [pc, #0x214] @ [0x20abc1c] (=0x20f9658)
	mov     r6, r6, lsl #1
	add     r4, r4, r5, lsl #3
	add     r3, r3, r5, lsl #3
	ldrh    r5, [r6, r4]
	ldr     r7, [sp, #0x8]
	ldrh    r3, [r6, r3]
	ldr     r4, [sp, #0xc]
	add     r5, r7, r5, lsl #11
	add     r3, r4, r3, lsl #11
	str     r5, [sp, #0x8]
	str     r3, [sp, #0xc]
.arm
branch_20aba30: @ 20aba30 :arm
	ldr     r6, [r0, #0x8]
	ldr     r4, [sp, #0xc]
	add     r3, sp, #0x8
	smull   r4, r7, r6, r4
	cmp     r3, r3
	addeq   r3, sp, #0x0
	adds    r8, r4, #1, 20 @ #0x1000
	ldr     r5, [r0]
	ldr     r4, [sp, #0x8]
	adc     r6, r7, #0x0
	smlal   r8, r6, r5, r4
	mov     r4, r8, lsr #12
	orr     r4, r4, r6, lsl #20
	str     r4, [r3]
	ldr     r6, [r0, #0xc]
	ldr     r4, [sp, #0xc]
	ldr     r5, [r0, #0x4]
	smull   r4, r7, r6, r4
	adds    r8, r4, #1, 20 @ #0x1000
	ldr     r4, [sp, #0x8]
	adc     r6, r7, #0x0
	smlal   r8, r6, r5, r4
	mov     r5, r8, lsr #12
	add     r4, sp, #0x0
	orr     r5, r5, r6, lsl #20
	str     r5, [r3, #0x4]
	cmp     r3, r4
	bne     branch_20abab0
	ldr     r4, [sp]
	ldr     r3, [sp, #0x4]
	str     r4, [sp, #0x8]
	str     r3, [sp, #0xc]
.arm
branch_20abab0: @ 20abab0 :arm
	ldr     r3, [pc, #0x168] @ [0x20abc20] (=RAM_21c5a88)
	ldr     r3, [r3]
	ldr     r3, [r3, #0x4]
	cmp     r3, #0x0
	beq     branch_20abaf8
	cmp     r3, #0x2
	moveq   r5, #3, 24 @ #0x300
	movne   r5, #1, 24 @ #0x100
	ldr     r4, [r1]
	ldr     r3, [pc, #0x148] @ [0x20abc24] (=0xc1fffcff)
	cmp     r5, #1, 24 @ #0x100
	andeq   r3, r4, r3
	orreq   r3, r3, r5
	streq   r3, [r1]
	beq     branch_20abaf8
	and     r3, r4, r3
	orr     r3, r3, r5
	str     r3, [r1]
.arm
branch_20abaf8: @ 20abaf8 :arm
	ldr     r6, [r1]
	ldr     r5, [pc, #0x114] @ [0x20abc18] (=0x20f9670)
	and     r4, r6, #3, 24 @ #0x300
	cmp     r4, #1, 24 @ #0x100
	cmpne   r4, #3, 24 @ #0x300
	andne   r3, r6, #3, 4 @ #0x30000000
	orrne   r4, r4, r3
	ldr     r3, [pc, #0xf8] @ [0x20abc14] (=0xc000c000)
	ldr     r8, [pc, #0xfc] @ [0x20abc1c] (=0x20f9658)
	and     r3, r6, r3
	and     r6, r3, #3, 2 @ #0xc0000000
	and     r3, r3, #3, 18 @ #0xc000
	mov     lr, r3, asr #14
	mov     r6, r6, lsr #30
	mov     r3, r6, lsl #1
	add     r5, r5, lr, lsl #3
	ldrh    r5, [r3, r5]
	add     lr, r8, lr, lsl #3
	ldrh    r3, [r3, lr]
	mov     r12, r5, asr #1
	mov     r5, r12, lsl #12
	ldr     r6, [r0]
	rsb     r7, r5, #0x0
	mla     r7, r6, r12, r7
	ldr     r6, [r0, #0x8]
	mov     r3, r3, asr #1
	mla     r7, r6, r3, r7
	ldr     lr, [sp, #0x8]
	cmp     r4, #3, 24 @ #0x300
	add     r6, lr, r7
	str     r6, [sp, #0x8]
	mov     lr, r3, lsl #12
	ldr     r6, [r0, #0x4]
	rsb     r7, lr, #0x0
	mla     r7, r6, r12, r7
	ldr     r0, [r0, #0xc]
	ldr     r6, [sp, #0xc]
	mla     r3, r0, r3, r7
	add     r0, r6, r3
	str     r0, [sp, #0xc]
	moveq   r0, #0x1
	movne   r0, #0x0
	cmp     r0, #0x0
	beq     branch_20abbc0
	ldr     r3, [sp, #0x8]
	ldr     r0, [sp, #0xc]
	sub     r3, r3, r5
	sub     r0, r0, lr
	str     r3, [sp, #0x8]
	str     r0, [sp, #0xc]
.arm
branch_20abbc0: @ 20abbc0 :arm
	ldr     r4, [sp, #0x8]
	ldr     r0, [r2]
	ldr     r3, [sp, #0xc]
	add     r4, r4, r0
	str     r4, [sp, #0x8]
	ldr     r0, [r2, #0x4]
	mov     r4, r4, asr #12
	add     r0, r3, r0
	str     r0, [sp, #0xc]
	mov     r2, r0, asr #12
	ldr     r3, [r1]
	ldr     r0, [pc, #0x34] @ [0x20abc28] (=0xfe00ff00)
	and     r2, r2, #0xff
	and     r0, r3, r0
	mov     r3, r4, lsl #23
	orr     r0, r0, r2
	orr     r0, r0, r3, lsr #7
	str     r0, [r1]
	add     sp, sp, #0x10
	ldmfd   sp!, {r4-r8,pc}
@ 0x20abc10

.word 0x1ff0000 @ 0x20abc10
.word 0xc000c000 @ 0x20abc14
.word Unknown_20f9670 @ 0x20abc18
.word Unknown_20f9658 @ 0x20abc1c
.word RAM_21c5a88 @ 0x20abc20
.word 0xc1fffcff @ 0x20abc24
.word 0xfe00ff00 @ 0x20abc28



.arm
Function_20abc2c: @ 20abc2c :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x40
	ldr     r2, [pc, #0x3f0] @ [0x20ac02c] (=RAM_21c5a88)
	mov     r6, r0
	ldr     r4, [r2]
	ldr     r0, [pc, #0x3e4] @ [0x20ac02c] (=RAM_21c5a88)
	ldr     r5, [r4, #0x2c]
	mov     r11, r1
	cmp     r5, #0x0
	ldreq   r5, [pc, #0x3d8] @ [0x20ac030] (=0x20f972c)
	ldr     r2, [r0]
	ldr     r3, [r5, #0x10]
	str     r3, [sp, #0x18]
	ldr     r1, [r5, #0x14]
	str     r1, [sp, #0x1c]
	ldr     r0, [r6]
	sub     r0, r3, r0
	str     r0, [sp, #0x18]
	ldr     r0, [r6, #0x4]
	sub     r0, r1, r0
	str     r0, [sp, #0x1c]
	ldr     r1, [r2, #0x24]
	ldr     r0, [r2, #0x10]
	cmp     r1, #0x0
	str     r0, [sp, #0xc]
	bne     branch_20abca8
	ldr     r0, [r2, #0x28]
	cmp     r0, #0x0
	movne   r0, #0x1
	strne   r0, [sp]
	bne     branch_20abcb0
.arm
branch_20abca8: @ 20abca8 :arm
	mov     r0, #0x0
	str     r0, [sp]
.arm
branch_20abcb0: @ 20abcb0 :arm
	ldrh    r0, [r11]
	mov     r8, #0x0
	cmp     r0, #0x0
	addls   sp, sp, #0x40
	ldmlsfd sp!, {r3-r11,pc}
	mov     r0, #1, 22 @ #0x400
	str     r0, [sp, #0x10]
	ldr     r0, [pc, #0x360] @ [0x20ac034] (=0xfffe)
	ldr     r7, [pc, #0x354] @ [0x20ac02c] (=RAM_21c5a88)
	add     r0, r0, #0x1
	str     r0, [sp, #0x14]
	ldr     r0, [sp, #0x10]
	rsb     r0, r0, #0x0
	str     r0, [sp, #0x10]
.arm
branch_20abce8: @ 20abce8 :arm
	mov     r0, #0x6
	mul     r1, r8, r0
	ldr     r2, [r7]
	mov     r0, #0x1
	str     r0, [r2, #0x30]
	ldr     r0, [r11, #0x4]
	add     r2, r0, r1
	ldrh    r0, [r0, r1]
	strh    r0, [r4, #0x38]
	ldrh    r0, [r2, #0x2]
	strh    r0, [r4, #0x3a]
	ldrh    r0, [r2, #0x4]
	strh    r0, [r4, #0x3c]
	ldr     r3, [r6, #0x20]
	cmp     r3, #0x0
	beq     branch_20abd38
	ldr     r0, [r7]
	mov     r1, r11
	mov     r2, r8
	blx     r3
.arm
branch_20abd38: @ 20abd38 :arm
	ldr     r0, [r7]
	ldr     r0, [r0, #0x30]
	cmp     r0, #0x0
	beq     branch_20ac00c
	ldr     r0, [sp]
	ldr     r1, [r4, #0x3c]
	cmp     r0, #0x0
	ldr     r0, [sp, #0x10]
	and     r2, r1, r0
	ldr     r0, [sp, #0xc]
	mov     r1, r1, lsl #22
	add     r1, r0, r1, lsr #22
	ldr     r0, [sp, #0x10]
	and     r0, r1, r0, lsr #22
	orr     r0, r2, r0
	str     r0, [r4, #0x3c]
	beq     branch_20abe7c
	ldr     r0, [r4, #0x38]
	ldr     lr, [r7]
	mov     r1, r0, lsl #2
	mov     r0, r0, lsl #3
	mov     r1, r1, lsr #31
	mov     r0, r0, lsr #31
	orr     r10, r0, r1, lsl #1
	ldr     r9, [lr, #0x28]
	ldr     r1, [r6, #0x14]
	add     r0, r9, r10, lsl #2
	add     r0, r0, r1, lsl #1
	ldrh    r1, [r0, #0xe]
	ldr     r0, [sp, #0x14]
	str     r1, [sp, #0x8]
	cmp     r1, r0
	bne     branch_20abe48
	cmp     r10, #0x0
	bne     branch_20abdd8
	ldr     r1, [lr, #0x20]
	mov     r0, r9
	blx     r1
	str     r0, [sp, #0x8]
	b       branch_20abe34
@ 0x20abdd8

.arm
branch_20abdd8: @ 20abdd8 :arm
	add     r12, sp, #0x20
	ldmia   r9, {r0-r3}
	stmia   r12, {r0-r3}
	tst     r10, #0x1
	beq     branch_20abe04
	ldr     r1, [sp, #0x20]
	ldr     r0, [sp, #0x24]
	rsb     r1, r1, #0x0
	str     r1, [sp, #0x20]
	rsb     r0, r0, #0x0
	str     r0, [sp, #0x24]
.arm
branch_20abe04: @ 20abe04 :arm
	tst     r10, #0x2
	beq     branch_20abe24
	ldr     r1, [sp, #0x28]
	ldr     r0, [sp, #0x2c]
	rsb     r1, r1, #0x0
	str     r1, [sp, #0x28]
	rsb     r0, r0, #0x0
	str     r0, [sp, #0x2c]
.arm
branch_20abe24: @ 20abe24 :arm
	ldr     r1, [lr, #0x20]
	add     r0, sp, #0x20
	blx     r1
	str     r0, [sp, #0x8]
.arm
branch_20abe34: @ 20abe34 :arm
	ldr     r1, [r6, #0x14]
	add     r0, r9, r10, lsl #2
	add     r1, r0, r1, lsl #1
	ldr     r0, [sp, #0x8]
	strh    r0, [r1, #0xe]
.arm
branch_20abe48: @ 20abe48 :arm
	ldr     r1, [r5]
	add     r0, sp, #0x30
	str     r1, [sp, #0x30]
	ldr     r2, [r5, #0x4]
	add     r1, r4, #0x38
	str     r2, [sp, #0x34]
	ldr     r3, [r5, #0x8]
	add     r2, sp, #0x18
	str     r3, [sp, #0x38]
	ldr     r3, [r5, #0xc]
	str     r3, [sp, #0x3c]
	bl      Function_20ab96c
	b       branch_20abfcc
@ 0x20abe7c

.arm
branch_20abe7c: @ 20abe7c :arm
	ldr     r0, [pc, #0x1b0] @ [0x20ac034] (=0xfffe)
	str     r0, [sp, #0x8]
	ldr     r0, [r7]
	ldr     r1, [r0, #0x24]
	cmp     r1, #0x0
	beq     branch_20abf84
	ldr     r2, [r4, #0x38]
	ldr     r1, [pc, #0x198] @ [0x20ac038] (=0xc000c000)
	mov     r10, r2, lsl #3
	and     r9, r2, r1
	bl      Function_20ac444
	eor     r0, r0, r10, lsr #31
	ldr     r1, [r4, #0x38]
	str     r0, [sp, #0x4]
	ldr     r0, [r7]
	mov     r10, r1, lsl #2
	bl      Function_20ac458
	eor     r2, r0, r10, lsr #31
	ldr     r0, [r4, #0x38]
	bic     r1, r0, #1, 4 @ #0x10000000
	ldr     r0, [sp, #0x4]
	orr     r0, r1, r0, lsl #28
	bic     r0, r0, #2, 4 @ #0x20000000
	orr     r0, r0, r2, lsl #29
	str     r0, [r4, #0x38]
	ldr     r0, [r7]
	bl      Function_20ac444
	cmp     r0, #0x0
	beq     branch_20abf34
	and     r1, r9, #3, 18 @ #0xc000
	mov     r2, r1, asr #14
	ldr     r1, [pc, #0x13c] @ [0x20ac03c] (=0x20f9670)
	and     r3, r9, #3, 2 @ #0xc0000000
	mov     r3, r3, lsr #30
	add     r2, r1, r2, lsl #3
	mov     r3, r3, lsl #1
	ldr     r0, [r4, #0x38]
	ldr     r1, [pc, #0x128] @ [0x20ac040] (=0xfe00ffff)
	ldrh    r2, [r3, r2]
	and     r1, r0, r1
	mov     r0, r0, lsl #7
	add     r0, r2, r0, lsr #23
	rsb     r0, r0, #0x0
	mov     r0, r0, lsl #23
	orr     r0, r1, r0, lsr #7
	str     r0, [r4, #0x38]
.arm
branch_20abf34: @ 20abf34 :arm
	ldr     r0, [r7]
	bl      Function_20ac458
	cmp     r0, #0x0
	beq     branch_20abf84
	and     r1, r9, #3, 18 @ #0xc000
	mov     r3, r1, asr #14
	and     r1, r9, #3, 2 @ #0xc0000000
	mov     r1, r1, lsr #30
	mov     r2, r1, lsl #1
	ldr     r1, [pc, #0xe4] @ [0x20ac044] (=0x20f9658)
	ldr     r0, [r4, #0x38]
	add     r1, r1, r3, lsl #3
	ldrh    r1, [r2, r1]
	bic     r2, r0, #0xff
	mov     r0, r0, lsl #24
	add     r0, r1, r0, lsr #24
	rsb     r0, r0, #0x0
	and     r0, r0, #0xff
	orr     r0, r2, r0
	str     r0, [r4, #0x38]
.arm
branch_20abf84: @ 20abf84 :arm
	ldr     r2, [r4, #0x38]
	ldr     r0, [pc, #0xb0] @ [0x20ac040] (=0xfe00ffff)
	ldr     r1, [sp, #0x18]
	and     r3, r2, r0
	mov     r2, r2, lsl #7
	mov     r0, r1, asr #12
	add     r0, r0, r2, lsr #23
	mov     r0, r0, lsl #23
	orr     r0, r3, r0, lsr #7
	str     r0, [r4, #0x38]
	bic     r2, r0, #0xff
	mov     r1, r0, lsl #24
	ldr     r0, [sp, #0x1c]
	mov     r0, r0, asr #12
	add     r0, r0, r1, lsr #24
	and     r0, r0, #0xff
	orr     r0, r2, r0
	str     r0, [r4, #0x38]
.arm
branch_20abfcc: @ 20abfcc :arm
	ldr     r3, [r7]
	ldr     r1, [sp, #0x8]
	ldr     r3, [r3, #0x1c]
	add     r0, r4, #0x38
	mov     r2, #0x0
	blx     r3
	cmp     r0, #0x1
	addne   sp, sp, #0x40
	ldmnefd sp!, {r3-r11,pc}
	ldr     r3, [r6, #0x24]
	cmp     r3, #0x0
	beq     branch_20ac00c
	ldr     r0, [r7]
	mov     r1, r11
	mov     r2, r8
	blx     r3
.arm
branch_20ac00c: @ 20ac00c :arm
	add     r0, r8, #0x1
	mov     r0, r0, lsl #16
	mov     r8, r0, lsr #16
	ldrh    r1, [r11]
	cmp     r1, r0, lsr #16
	bhi     branch_20abce8
	add     sp, sp, #0x40
	ldmfd   sp!, {r3-r11,pc}
@ 0x20ac02c

.word RAM_21c5a88 @ 0x20ac02c
.word Unknown_20f972c @ 0x20ac030
.word 0xfffe @ 0x20ac034
.word 0xc000c000 @ 0x20ac038
.word Unknown_20f9670 @ 0x20ac03c
.word 0xfe00ffff @ 0x20ac040
.word Unknown_20f9658 @ 0x20ac044



.arm
Function_20ac048: @ 20ac048 :arm
	stmfd   sp!, {r3-r8,lr}
	sub     sp, sp, #0xc
	ldr     r1, [pc, #0x224] @ [0x20ac27c] (=RAM_21c5a88)
	mov     r7, r0
	ldr     r0, [r1]
	add     r0, r0, #0x40
	bl      G3_LoadMtx43
	ldr     r0, [pc, #0x210] @ [0x20ac27c] (=RAM_21c5a88)
	ldr     r0, [r0]
	ldr     r1, [r0, #0x24]
	cmp     r1, #0x0
	beq     branch_20ac20c
	ldr     r2, [r7]
	ldr     r1, [pc, #0x1fc] @ [0x20ac280] (=0xc000c000)
	and     r4, r2, r1
	bl      Function_20ac444
	cmp     r0, #0x0
	ldr     r0, [r7]
	beq     branch_20ac0d8
	mov     r0, r0, lsl #7
	mov     r3, r0, lsr #23
	and     r2, r4, #3, 18 @ #0xc000
	and     r1, r4, #3, 2 @ #0xc0000000
	mov     r1, r1, lsr #30
	ldr     r0, [pc, #0x1d4] @ [0x20ac284] (=0x20f9670)
	mov     r2, r2, asr #14
	mov     r1, r1, lsl #1
	add     r0, r0, r2, lsl #3
	cmp     r3, #0xff
	ldrh    r1, [r1, r0]
	orrgt   r0, r3, #255, 24 @ #0xff00
	movgt   r0, r0, lsl #16
	movgt   r3, r0, asr #16
	add     r0, r3, r1
	rsb     r0, r0, #0x0
	b       branch_20ac0f0
@ 0x20ac0d8

.arm
branch_20ac0d8: @ 20ac0d8 :arm
	mov     r0, r0, lsl #7
	mov     r0, r0, lsr #23
	cmp     r0, #0xff
	orrgt   r0, r0, #255, 24 @ #0xff00
	movgt   r0, r0, lsl #16
	movgt   r0, r0, asr #16
.arm
branch_20ac0f0: @ 20ac0f0 :arm
	mov     r0, r0, lsl #16
	mov     r1, r0, lsr #16
	ldr     r0, [pc, #0x17c] @ [0x20ac27c] (=RAM_21c5a88)
	mov     r1, r1, lsl #16
	ldr     r0, [r0]
	mov     r5, r1, asr #16
	bl      Function_20ac458
	cmp     r0, #0x0
	ldr     r0, [r7]
	beq     branch_20ac15c
	mov     r0, r0, lsl #24
	mov     r3, r0, lsr #24
	and     r2, r4, #3, 18 @ #0xc000
	and     r1, r4, #3, 2 @ #0xc0000000
	mov     r1, r1, lsr #30
	ldr     r0, [pc, #0x154] @ [0x20ac288] (=0x20f9658)
	mov     r2, r2, asr #14
	mov     r1, r1, lsl #1
	add     r0, r0, r2, lsl #3
	cmp     r3, #0x7f
	ldrh    r1, [r1, r0]
	orrgt   r0, r3, #255, 24 @ #0xff00
	movgt   r0, r0, lsl #16
	movgt   r3, r0, asr #16
	add     r0, r3, r1
	rsb     r0, r0, #0x0
	b       branch_20ac174
@ 0x20ac15c

.arm
branch_20ac15c: @ 20ac15c :arm
	mov     r0, r0, lsl #24
	mov     r0, r0, lsr #24
	cmp     r0, #0x7f
	orrgt   r0, r0, #255, 24 @ #0xff00
	movgt   r0, r0, lsl #16
	movgt   r0, r0, asr #16
.arm
branch_20ac174: @ 20ac174 :arm
	mov     r0, r0, lsl #16
	mov     r4, r0, lsr #16
	ldr     r0, [pc, #0xf8] @ [0x20ac27c] (=RAM_21c5a88)
	ldr     r1, [r7]
	ldr     r0, [r0]
	mov     r6, r1, lsl #3
	bl      Function_20ac444
	ldr     r2, [r7]
	ldr     r1, [pc, #0xe0] @ [0x20ac27c] (=RAM_21c5a88)
	eor     r6, r0, r6, lsr #31
	ldr     r0, [r1]
	mov     r8, r2, lsl #2
	bl      Function_20ac458
	ldr     r1, [r7]
	eor     r3, r0, r8, lsr #31
	bic     r2, r1, #1, 4 @ #0x10000000
	orr     r2, r2, r6, lsl #28
	bic     r2, r2, #2, 4 @ #0x20000000
	mov     r1, r4, lsl #16
	orr     r3, r2, r3, lsl #29
	str     r2, [r7]
	str     r3, [r7]
	ldr     r2, [pc, #0xa8] @ [0x20ac27c] (=RAM_21c5a88)
	mov     r0, r5
	ldr     r5, [r2]
	mov     r1, r1, asr #16
	ldr     r4, [r5, #0x8]
	mov     r3, r7
	add     r4, r4, #0xc
	str     r4, [sp]
	ldr     r4, [r5, #0x14]
	mvn     r2, #0x0
	str     r4, [sp, #0x4]
	ldr     r4, [r5, #0x18]
	str     r4, [sp, #0x8]
	bl      Function_20ab71c
	add     sp, sp, #0xc
	ldmfd   sp!, {r3-r8,pc}
@ 0x20ac20c

.arm
branch_20ac20c: @ 20ac20c :arm
	ldr     r2, [pc, #0x68] @ [0x20ac27c] (=RAM_21c5a88)
	ldr     r0, [r7]
	ldr     r5, [r2]
	mov     r0, r0, lsl #7
	ldr     r1, [r7]
	ldr     r4, [r5, #0x8]
	mov     r0, r0, lsr #23
	cmp     r0, #0xff
	orrgt   r0, r0, #255, 24 @ #0xff00
	mov     r1, r1, lsl #24
	add     r4, r4, #0xc
	movgt   r0, r0, lsl #16
	str     r4, [sp]
	ldr     r4, [r5, #0x14]
	mov     r1, r1, lsr #24
	movgt   r0, r0, asr #16
	cmp     r1, #0x7f
	orrgt   r1, r1, #255, 24 @ #0xff00
	movgt   r1, r1, lsl #16
	str     r4, [sp, #0x4]
	ldr     r4, [r5, #0x18]
	movgt   r1, r1, asr #16
	mov     r3, r7
	mvn     r2, #0x0
	str     r4, [sp, #0x8]
	bl      Function_20ab71c
	add     sp, sp, #0xc
	ldmfd   sp!, {r3-r8,pc}
@ 0x20ac27c

.word RAM_21c5a88 @ 0x20ac27c
.word 0xc000c000 @ 0x20ac280
.word Unknown_20f9670 @ 0x20ac284
.word Unknown_20f9658 @ 0x20ac288



.arm
Function_20ac28c: @ 20ac28c :arm
	stmfd   sp!, {r4-r10,lr}
	mov     r9, r1
	ldr     r5, [pc, #0xb4] @ [0x20ac350] (=RAM_21c5a88)
	ldrh    r1, [r9]
	ldr     r7, [r5]
	mov     r10, r0
	mov     r8, #0x0
	cmp     r1, #0x0
	ldmlsfd sp!, {r4-r10,pc}
	mov     r6, #0x1
	mov     r4, #0x6
.arm
branch_20ac2b8: @ 20ac2b8 :arm
	mul     r1, r8, r4
	ldr     r0, [r5]
	str     r6, [r0, #0x30]
	ldr     r2, [r9, #0x4]
	ldrh    r0, [r2, r1]
	add     r1, r2, r1
	strh    r0, [r7, #0x38]
	ldrh    r0, [r1, #0x2]
	strh    r0, [r7, #0x3a]
	ldrh    r0, [r1, #0x4]
	strh    r0, [r7, #0x3c]
	ldr     r3, [r10, #0x20]
	cmp     r3, #0x0
	beq     branch_20ac300
	ldr     r0, [r5]
	mov     r1, r9
	mov     r2, r8
	blx     r3
.arm
branch_20ac300: @ 20ac300 :arm
	ldr     r0, [r5]
	ldr     r0, [r0, #0x30]
	cmp     r0, #0x0
	beq     branch_20ac318
	add     r0, r7, #0x38
	bl      Function_20ac048
.arm
branch_20ac318: @ 20ac318 :arm
	ldr     r3, [r10, #0x24]
	cmp     r3, #0x0
	beq     branch_20ac334
	ldr     r0, [r5]
	mov     r1, r9
	mov     r2, r8
	blx     r3
.arm
branch_20ac334: @ 20ac334 :arm
	ldrh    r1, [r9]
	add     r0, r8, #0x1
	mov     r0, r0, lsl #16
	cmp     r1, r0, lsr #16
	mov     r8, r0, lsr #16
	bhi     branch_20ac2b8
	ldmfd   sp!, {r4-r10,pc}
@ 0x20ac350

.word RAM_21c5a88 @ 0x20ac350



.arm
Function_20ac354: @ 20ac354 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r1, r4
	mov     r0, #0x0
	mov     r2, #0x70
	bl      MIi_CpuClear16
	mov     r1, #0x0
	str     r1, [r4]
	mov     r0, #0x2
	stmib   r4, {r0,r1}
	str     r1, [r4, #0xc]
	str     r1, [r4, #0x24]
	mov     r0, #0x1
	str     r0, [r4, #0x30]
	str     r1, [r4, #0x28]
	ldmfd   sp!, {r4,pc}
@ 0x20ac394

.arm
Function_20ac394: @ 20ac394 :arm
	str     r1, [r0, #0x8]
	str     r2, [r0, #0xc]
	bx      lr
@ 0x20ac3a0

.arm
Function_20ac3a0: @ 20ac3a0 :arm
	str     r1, [r0, #0x1c]
	str     r2, [r0, #0x20]
	bx      lr
@ 0x20ac3ac


.arm
Function_20ac3ac: @ 20ac3ac :arm
	str     r1, [r0, #0x4]
	bx      lr
@ 0x20ac3b4


.arm
Function_20ac3b4: @ 20ac3b4 :arm
	ldr     r1, [pc, #0x5c] @ [0x20ac418] (=RAM_21c5a88)
	mov     r3, #0x0
	ldr     r12, [r1]
	mov     r1, #1, 20 @ #0x1000
	str     r0, [r12, #0x2c]
	ldr     r2, [r0]
	str     r2, [r12, #0x40]
	ldr     r2, [r0, #0x4]
	str     r2, [r12, #0x44]
	str     r3, [r12, #0x48]
	ldr     r2, [r0, #0x8]
	str     r2, [r12, #0x4c]
	ldr     r2, [r0, #0xc]
	str     r2, [r12, #0x50]
	str     r3, [r12, #0x54]
	str     r3, [r12, #0x58]
	str     r3, [r12, #0x5c]
	str     r1, [r12, #0x60]
	ldr     r1, [r0, #0x10]
	str     r1, [r12, #0x64]
	ldr     r0, [r0, #0x14]
	str     r0, [r12, #0x68]
	ldr     r0, [r12, #0x34]
	str     r0, [r12, #0x6c]
	bx      lr
@ 0x20ac418

.word RAM_21c5a88 @ 0x20ac418



.arm
Function_20ac41c: @ 20ac41c :arm
	ldr     r2, [pc, #0xc] @ [0x20ac430] (=RAM_21c5a88)
	ldr     r2, [r2]
	str     r0, [r2, #0x2c]
	str     r1, [r2, #0x28]
	bx      lr
@ 0x20ac430

.word RAM_21c5a88 @ 0x20ac430



.arm
Function_20ac434: @ 20ac434 :arm
	str     r1, [r0, #0x34]
	bx      lr
@ 0x20ac43c


.arm
Function_20ac43c: @ 20ac43c :arm
	str     r1, [r0]
	bx      lr
@ 0x20ac444


.arm
Function_20ac444: @ 20ac444 :arm
	ldr     r0, [r0, #0x24]
	tst     r0, #0x1
	movne   r0, #0x1
	moveq   r0, #0x0
	bx      lr
@ 0x20ac458


.arm
Function_20ac458: @ 20ac458 :arm
	ldr     r0, [r0, #0x24]
	tst     r0, #0x2
	movne   r0, #0x1
	moveq   r0, #0x0
	bx      lr
@ 0x20ac46c


.arm
Function_20ac46c: @ 20ac46c :arm
	cmp     r1, #0x0
	ldr     r1, [r0, #0x24]
	orrne   r1, r1, #0x1
	biceq   r1, r1, #0x1
	str     r1, [r0, #0x24]
	ldr     r1, [r0, #0x24]
	cmp     r2, #0x0
	orrne   r1, r1, #0x2
	biceq   r1, r1, #0x2
	str     r1, [r0, #0x24]
	bx      lr
@ 0x20ac498


.arm
Function_20ac498: @ 20ac498 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r2, [pc, #0xf8] @ [0x20ac59c] (=RAM_21c5a88)
	mov     r4, r0
	str     r4, [r2]
	ldr     r0, [r4]
	ldr     r5, [r0, #0x14]
	cmp     r5, #0x0
	bne     branch_20ac550
	ldr     lr, [pc, #0xe0] @ [0x20ac5a0] (=MATRIX_CONTROL)
	mov     r1, #0x0
	str     r1, [lr]
	str     r1, [lr, #0x4]
	ldr     r12, [r4]
	mov     r0, #0x1
	ldmia   r12, {r3,r12}
	rsb     r3, r3, #0x0
	str     r3, [lr, #0x30]
	rsb     r3, r12, #0x0
	str     r3, [lr, #0x30]
	str     r1, [lr, #0x30]
	str     r0, [lr]
	ldr     r0, [r2]
	ldr     r5, [r0, #0x8]
	mov     r0, r5
	bl      Function_20a81b8
	cmp     r0, #0x0
	moveq   r0, #0x0
	beq     branch_20ac514
	mov     r0, r5
	mov     r1, #0x0
	bl      Function_20a81b0
branch_20ac514: @ 20ac514 :arm
	ldr     r1, [pc, #0x80] @ [0x20ac59c] (=RAM_21c5a88)
	str     r0, [r4, #0x14]
	ldr     r0, [r1]
	mov     r1, #0x0
	ldr     r5, [r0, #0xc]
	mov     r0, r5
	bl      Function_20a8208
	cmp     r0, #0x0
	moveq   r0, #0x0
	beq     branch_20ac548
	mov     r0, r5
	mov     r1, #0x0
	bl      Function_20a81fc
branch_20ac548: @ 20ac548 :arm
	str     r0, [r4, #0x18]
	ldmfd   sp!, {r3-r5,pc}

branch_20ac550: @ 20ac550 :arm
	ldr     r4, [r4, #0x8]
	mov     r1, r5
	mov     r0, r4
	bl      Function_20a81b8
	cmp     r0, #0x0
	moveq   r1, #0x0
	beq     branch_20ac58c
	mov     r0, r4
	mov     r1, r5
	bl      Function_20a81b0
	ldr     r1, [r4, #0x20]
	and     r1, r1, #7, 12 @ #0x700000
	mov     r1, r1, asr #20
	add     r1, r1, #0x5
	mov     r1, r0, lsr r1
branch_20ac58c: @ 20ac58c :arm
	ldr     r0, [pc, #0x8] @ [0x20ac59c] (=RAM_21c5a88)
	ldr     r0, [r0]
	str     r1, [r0, #0x10]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20ac59c

.word RAM_21c5a88 @ 0x20ac59c
.word MATRIX_CONTROL @ 0x20ac5a0



.arm
Function_20ac5a4: @ 20ac5a4 :arm
	ldr     r0, [pc, #0x54] @ [0x20ac600] (=RAM_21c5a88)
	ldr     r3, [r0]
	ldr     r1, [r3]
	ldr     r1, [r1, #0x14]
	cmp     r1, #0x0
	bne     branch_20ac5d8
	ldr     r1, [pc, #0x40] @ [0x20ac604] (=MATRIX_CONTROL)
	mov     r0, #0x0
	str     r0, [r1]
	mov     r0, #0x1
	str     r0, [r1, #0x8]
	str     r0, [r1]
	b       branch_20ac5f0
@ 0x20ac5d8

.arm
branch_20ac5d8: @ 20ac5d8 :arm
	mov     r2, #0x0
	str     r2, [r3, #0x10]
	ldr     r1, [r0]
	str     r2, [r1, #0x2c]
	ldr     r0, [r0]
	str     r2, [r0, #0x28]
.arm
branch_20ac5f0: @ 20ac5f0 :arm
	ldr     r0, [pc, #0x8] @ [0x20ac600] (=RAM_21c5a88)
	mov     r1, #0x0
	str     r1, [r0]
	bx      lr
@ 0x20ac600

.word RAM_21c5a88 @ 0x20ac600
.word MATRIX_CONTROL @ 0x20ac604



.arm
Function_20ac608: @ 20ac608 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r1, [pc, #0xa4] @ [0x20ac6b8] (=RAM_21c5a88)
	mov     r5, r0
	ldr     r2, [r1]
	ldr     r4, [r2]
	ldr     r0, [r4, #0x10]
	cmp     r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	mov     r0, #0x1
	str     r0, [r2, #0x30]
	ldr     r2, [r4, #0x18]
	cmp     r2, #0x0
	beq     branch_20ac648
	ldr     r0, [r1]
	mov     r1, r5
	blx     r2
branch_20ac648: @ 20ac648 :arm
	ldr     r0, [pc, #0x68] @ [0x20ac6b8] (=RAM_21c5a88)
	ldr     r0, [r0]
	ldr     r0, [r0, #0x30]
	cmp     r0, #0x0
	beq     branch_20ac698
	ldr     r0, [r4, #0x14]
	cmp     r0, #0x3
	addls   pc, pc, r0, lsl #2
	b       branch_20ac698
	b       branch_20ac67c
	b       branch_20ac68c
	b       branch_20ac68c
	b       branch_20ac698
@ 0x20ac67c

.arm
branch_20ac67c: @ 20ac67c :arm
	mov     r0, r4
	mov     r1, r5
	bl      Function_20ac28c
	b       branch_20ac698
@ 0x20ac68c

.arm
branch_20ac68c: @ 20ac68c :arm
	mov     r0, r4
	mov     r1, r5
	bl      Function_20abc2c
.arm
branch_20ac698: @ 20ac698 :arm
	ldr     r2, [r4, #0x1c]
	cmp     r2, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	ldr     r0, [pc, #0xc] @ [0x20ac6b8] (=RAM_21c5a88)
	mov     r1, r5
	ldr     r0, [r0]
	blx     r2
	ldmfd   sp!, {r3-r5,pc}
@ 0x20ac6b8

.word RAM_21c5a88 @ 0x20ac6b8



.arm
Function_20ac6bc: @ 20ac6bc :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [pc, #0xd8] @ [0x20ac7a0] (=RAM_21c5a88)
	mov     r6, r0
	ldr     r3, [r2]
	mov     r4, r1
	ldr     r5, [r3]
	ldr     r0, [r5, #0x10]
	cmp     r0, #0x0
	ldmeqfd sp!, {r4-r6,pc}
	mov     r0, #0x1
	str     r0, [r3, #0x30]
	ldr     r3, [r5, #0x18]
	cmp     r3, #0x0
	beq     branch_20ac700
	ldr     r0, [r2]
	mov     r1, r6
	blx     r3
.arm
branch_20ac700: @ 20ac700 :arm
	ldr     r0, [pc, #0x98] @ [0x20ac7a0] (=RAM_21c5a88)
	ldr     r0, [r0]
	ldr     r0, [r0, #0x30]
	cmp     r0, #0x0
	beq     branch_20ac780
	mvn     r0, #0x0
	cmp     r4, r0
	beq     branch_20ac744
	mov     r0, r4
	ldr     r4, [r5, #0x14]
	bl      Function_20ab164
	mov     r3, #0x1
	mvn     r1, r3, lsl r4
	ldr     r2, [r0, #0x20]
	and     r1, r2, r1
	orr     r1, r1, r3, lsl r4
	str     r1, [r0, #0x20]
branch_20ac744: @ 20ac744 :arm
	ldr     r0, [r5, #0x14]
	cmp     r0, #0x3
	addls   pc, pc, r0, lsl #2
	b       branch_20ac780
	b       branch_20ac764
	b       branch_20ac774
	b       branch_20ac774
	b       branch_20ac780

branch_20ac764: @ 20ac764 :arm
	mov     r0, r5
	mov     r1, r6
	bl      Function_20ac28c
	b       branch_20ac780

branch_20ac774: @ 20ac774 :arm
	mov     r0, r5
	mov     r1, r6
	bl      Function_20abc2c
branch_20ac780: @ 20ac780 :arm
	ldr     r2, [r5, #0x1c]
	cmp     r2, #0x0
	ldmeqfd sp!, {r4-r6,pc}
	ldr     r0, [pc, #0xc] @ [0x20ac7a0] (=RAM_21c5a88)
	mov     r1, r6
	ldr     r0, [r0]
	blx     r2
	ldmfd   sp!, {r4-r6,pc}
@ 0x20ac7a0

.word RAM_21c5a88 @ 0x20ac7a0



.arm
Function_20ac7a4: @ 20ac7a4 :arm
	stmfd   sp!, {r3,lr}
	ldrh    r3, [r0, #0x4]
	ldr     r2, [pc, #0xb4] @ [0x20ac868] (=0xffff)
	cmp     r3, #0x0
	beq     branch_20ac7cc
	cmp     r3, #0x1
	beq     branch_20ac7e8
	cmp     r3, #0x2
	beq     branch_20ac7fc
	b       branch_20ac860
@ 0x20ac7cc

.arm
branch_20ac7cc: @ 20ac7cc :arm
	ldrh    r2, [r0]
	ldrh    r3, [r0, #0xc]
	sub     r0, r1, r2
	add     r0, r3, r0
	mov     r0, r0, lsl #16
	mov     r2, r0, lsr #16
	b       branch_20ac860
@ 0x20ac7e8

.arm
branch_20ac7e8: @ 20ac7e8 :arm
	ldrh    r2, [r0]
	sub     r1, r1, r2
	add     r0, r0, r1, lsl #1
	ldrh    r2, [r0, #0xc]
	b       branch_20ac860
@ 0x20ac7fc

.arm
branch_20ac7fc: @ 20ac7fc :arm
	ldrh    r3, [r0, #0xc]
	add     r12, r0, #0xe
	sub     r0, r3, #0x1
	add     lr, r12, r0, lsl #2
	cmp     r12, lr
	bhi     branch_20ac860
.arm
branch_20ac814: @ 20ac814 :arm
	sub     r3, lr, r12
	mov     r0, r3, asr #1
	add     r0, r3, r0, lsr #30
	mov     r0, r0, asr #2
	add     r0, r0, r0, lsr #31
	mov     r3, r0, asr #1
	mov     r0, r3, lsl #2
	ldrh    r0, [r12, r0]
	add     r3, r12, r3, lsl #2
	cmp     r0, r1
	addcc   r12, r3, #0x4
	blo     branch_20ac858
	cmp     r1, r0
	subcc   lr, r3, #0x4
	blo     branch_20ac858
	ldrh    r2, [r3, #0x2]
	b       branch_20ac860

branch_20ac858: @ 20ac858 :arm
	cmp     r12, lr
	bls     branch_20ac814
branch_20ac860: @ 20ac860 :arm
	mov     r0, r2
	ldmfd   sp!, {r3,pc}
@ 0x20ac868

.word 0xffff @ 0x20ac868



.arm
.globl Function_20ac86c
Function_20ac86c: @ 20ac86c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, r1
	mov     r1, r4
	bl      Function_20ae1ec
	ldr     r0, [pc, #0x4] @ [0x20ac88c] (=Function_20ae47c)
	str     r0, [r4, #0x4]
	ldmfd   sp!, {r4,pc}
@ 0x20ac88c

.word Function_20ae47c @ 0x20ac88c



.arm
.globl Function_20ac890
Function_20ac890: @ 20ac890 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [r0]
	ldr     r0, [r0, #0x10]
	cmp     r0, #0x0
	beq     branch_20ac8cc

branch_20ac8a4: @ 20ac8a4 :arm
	ldrh    r2, [r0]
	cmp     r2, r1
	ldrlsh  r2, [r0, #0x2]
	cmpls   r1, r2
	bhi     branch_20ac8c0
	bl      Function_20ac7a4
	ldmfd   sp!, {r3,pc}
@ 0x20ac8c0

.arm
branch_20ac8c0: @ 20ac8c0 :arm
	ldr     r0, [r0, #0x8]
	cmp     r0, #0x0
	bne     branch_20ac8a4

branch_20ac8cc: @ 20ac8cc :arm
	ldr     r0, [pc, #0x0] @ [0x20ac8d4] (=0xffff)
	ldmfd   sp!, {r3,pc}
@ 0x20ac8d4

.word 0xffff @ 0x20ac8d4



.arm
.globl Function_20ac8d8
Function_20ac8d8: @ 20ac8d8 :arm
	ldr     r12, [r0]
	ldr     r3, [r12, #0xc]
	cmp     r3, #0x0
	beq     branch_20ac91c

branch_20ac8e8: @ 20ac8e8 :arm
	ldrh    r2, [r3]
	cmp     r2, r1
	ldrlsh  r0, [r3, #0x2]
	cmpls   r1, r0
	bhi     branch_20ac910
	sub     r0, r1, r2
	add     r1, r3, #0x8
	add     r0, r0, r0, lsl #1
	add     r0, r1, r0
	bx      lr
@ 0x20ac910

.arm
branch_20ac910: @ 20ac910 :arm
	ldr     r3, [r3, #0x4]
	cmp     r3, #0x0
	bne     branch_20ac8e8
.arm
branch_20ac91c: @ 20ac91c :arm
	add     r0, r12, #0x4
	bx      lr
@ 0x20ac924

.arm
Function_20ac924: @ 20ac924 :arm
	stmfd   sp!, {r3-r10,lr}
	sub     sp, sp, #0x4
	mov     r8, r0
	str     r2, [sp]
	ldr     r5, [r8, #0x4]
	add     r0, sp, #0x0
	mov     r7, r1
	mov     r6, r3
	mov     r4, #0x0
	blx     r5
	movs    r1, r0
	beq     branch_20ac9a0
	ldr     r9, [pc, #0x70] @ [0x20ac9cc] (=0xffff)
	add     r10, sp, #0x0
.arm
branch_20ac95c: @ 20ac95c :arm
	cmp     r1, #0xa
	beq     branch_20ac9a0
	mov     r0, r8
	bl      Function_20ac890
	mov     r1, r0
	cmp     r1, r9
	ldreq   r0, [r8]
	ldreqh  r1, [r0, #0x2]
	mov     r0, r8
	bl      Function_20ac8d8
	ldrsb   r1, [r0, #0x2]
	mov     r0, r10
	add     r1, r7, r1
	add     r4, r4, r1
	blx     r5
	movs    r1, r0
	bne     branch_20ac95c
.arm
branch_20ac9a0: @ 20ac9a0 :arm
	cmp     r6, #0x0
	beq     branch_20ac9b8
	cmp     r1, #0xa
	ldreq   r0, [sp]
	movne   r0, #0x0
	str     r0, [r6]
.arm
branch_20ac9b8: @ 20ac9b8 :arm
	cmp     r4, #0x0
	subgt   r4, r4, r7
	mov     r0, r4
	add     sp, sp, #0x4
	ldmfd   sp!, {r3-r10,pc}
@ 0x20ac9cc

.word 0xffff @ 0x20ac9cc
.arm
Function_20ac9d0: @ 20ac9d0 :arm
	stmfd   sp!, {r3-r8,lr}
	sub     sp, sp, #0xc
	add     r4, sp, #0x0
	mov     r3, #0x0
	mov     r8, r0
	str     r2, [sp, #0x8]
	str     r3, [r4]
	str     r3, [r4, #0x4]
	ldr     r7, [r8, #0x4]
	add     r0, sp, #0x8
	mov     r4, r1
	mov     r6, #0x1
	blx     r7
	cmp     r0, #0x0
	beq     branch_20aca28
	add     r5, sp, #0x8
.arm
branch_20aca10: @ 20aca10 :arm
	cmp     r0, #0xa
	mov     r0, r5
	addeq   r6, r6, #0x1
	blx     r7
	cmp     r0, #0x0
	bne     branch_20aca10
.arm
branch_20aca28: @ 20aca28 :arm
	ldr     r0, [r8]
	ldrsb   r0, [r0, #0x1]
	add     r0, r4, r0
	mul     r0, r6, r0
	sub     r0, r0, r4
	add     sp, sp, #0xc
	ldmfd   sp!, {r3-r8,pc}
@ 0x20aca44

.arm
Function_20aca44: @ 20aca44 :arm
	stmfd   sp!, {r3-r9,lr}
	sub     sp, sp, #0x8
	mov     r6, r2
	ldr     r2, [sp, #0x28]
	add     r9, sp, #0x0
	mov     r4, #0x0
	mov     r8, r0
	mov     r7, r1
	mov     r5, r3
	str     r4, [r9]
	str     r4, [r9, #0x4]
	cmp     r2, #0x0
	mov     r4, #0x1
	beq     branch_20acaac
	add     r9, sp, #0x28
.arm
branch_20aca80: @ 20aca80 :arm
	mov     r0, r7
	mov     r1, r6
	mov     r3, r9
	bl      Function_20ac924
	ldr     r1, [sp]
	ldr     r2, [sp, #0x28]
	cmp     r0, r1
	strgt   r0, [sp]
	add     r4, r4, #0x1
	cmp     r2, #0x0
	bne     branch_20aca80
.arm
branch_20acaac: @ 20acaac :arm
	ldr     r0, [r7]
	sub     r2, r4, #0x1
	ldrsb   r1, [r0, #0x1]
	ldr     r0, [sp]
	add     r1, r5, r1
	mul     r1, r2, r1
	sub     r1, r1, r5
	str     r1, [sp, #0x4]
	stmia   r8, {r0,r1}
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r9,pc}
@ 0x20acad8

.arm
Function_20acad8: @ 20acad8 :arm
	stmfd   sp!, {r4-r10,lr}
	mov     r10, #0x3
	ldr     r7, [sp, #0x20]
	ldr     r6, [sp, #0x24]
	ldr     r8, [pc, #0xdc] @ [0x20acbcc] (=Unknown_20f9774)
	mov     r5, #0x0
	mov     r9, r10
	mvn     r4, #0x0
.arm
branch_20acaf8: @ 20acaf8 :arm
	and     r12, r3, r4, lsl r6
	cmp     r12, r1
	and     lr, r2, r4, lsl r7
	bhi     branch_20acb3c
	mla     r5, r2, r12, r5
	cmp     lr, r0
	bhi     branch_20acb2c
	sub     r3, r3, r12
	mla     r5, lr, r3, r5
	sub     r0, r0, lr
	sub     r1, r1, r12
	sub     r2, r2, lr
	b       branch_20acb84
@ 0x20acb2c

.arm
branch_20acb2c: @ 20acb2c :arm
	mov     r2, lr
	sub     r1, r1, r12
	sub     r3, r3, r12
	b       branch_20acb84
@ 0x20acb3c

.arm
branch_20acb3c: @ 20acb3c :arm
	cmp     lr, r0
	mvn     r3, r4, lsl r6
	bhi     branch_20acb5c
	mla     r5, lr, r12, r5
	mov     r3, r12
	sub     r0, r0, lr
	sub     r2, r2, lr
	b       branch_20acb84
@ 0x20acb5c

.arm
branch_20acb5c: @ 20acb5c :arm
	and     r2, r1, r4, lsl r6
	mla     r5, lr, r2, r5
	and     r2, r0, r4, lsl r7
	mvn     r4, r4, lsl r7
	add     r2, r5, r2, lsl r6
	and     r1, r1, r3
	add     r1, r2, r1, lsl r7
	and     r0, r0, r4
	add     r0, r1, r0
	ldmfd   sp!, {r4-r10,pc}
@ 0x20acb84

.arm
branch_20acb84: @ 20acb84 :arm
	cmp     r2, #0x8
	movge   r6, r10
	movlt   r6, r2
	clzlt   r6, r6
	rsblt   r6, r6, #0x1f
	cmp     r3, #0x8
	movge   r7, r9
	movlt   r7, r3
	clzlt   r7, r7
	rsblt   r7, r7, #0x1f
	add     r7, r8, r7, lsl #3
	add     r12, r7, r6, lsl #1
	ldrb    r7, [r7, r6, lsl #0x1]
	ldrb    r6, [r12, #0x1]
	str     r7, [sp, #0x20]
	str     r6, [sp, #0x24]
	b       branch_20acaf8
@ 0x20acbc8


.arm
Function_20acbc8: @ 20acbc8 :arm
	ldmfd   sp!, {r4-r10,pc}
@ 0x20acbcc

.word Unknown_20f9774 @ 0x20acbcc



.arm
Function_20acbd0: @ 20acbd0 :arm
	ldrb    r3, [r0, #0x1]
	ldr     r2, [pc, #0xc] @ [0x20acbe8] (=Unknown_20f9794)
	ldrb    r1, [r0]
	add     r0, r2, r3, lsl #4
	ldr     r0, [r0, r1, lsl #0x2]
	bx      lr
@ 0x20acbe8

.word Unknown_20f9794 @ 0x20acbe8



.arm
Function_20acbec: @ 20acbec :arm
	stmfd   sp!, {r3-r5,lr}
	cmp     r3, #0x8
	ldreq   r4, [sp, #0x10]
	mov     r12, r0
	ldr     r0, [sp, #0x14]
	cmpeq   r4, #0x8
	bne     branch_20acc1c
	ldr     r2, [sp, #0x18]
	mov     r1, r12
	mov     r2, r2, lsl #3
	bl      MIi_CpuClearFast
	ldmfd   sp!, {r3-r5,pc}
@ 0x20acc1c

.arm
branch_20acc1c: @ 20acc1c :arm
	ldr     r4, [sp, #0x18]
	cmp     r4, #0x4
	bne     branch_20acc7c
	mov     r5, r1, lsl #2
	add     r4, r5, r3, lsl #2
	mvn     r3, #0x0
	rsb     r4, r4, #0x20
	mov     r3, r3, lsr r5
	add     r1, r4, r1, lsl #2
	mov     r3, r3, lsl r1
	ldr     r1, [sp, #0x10]
	add     r2, r12, r2, lsl #2
	add     r5, r2, r1, lsl #2
	and     r1, r0, r3, lsr r4
	mvn     r3, r3, lsr r4
	cmp     r2, r5
	ldmcsfd sp!, {r3-r5,pc}
.arm
branch_20acc60: @ 20acc60 :arm
	ldr     r0, [r2]
	and     r0, r0, r3
	orr     r0, r1, r0
	str     r0, [r2], #0x4
	cmp     r2, r5
	blo     branch_20acc60
	ldmfd   sp!, {r3-r5,pc}
@ 0x20acc7c

.arm
branch_20acc7c: @ 20acc7c :arm
	mov     r1, r1, lsl #3
	mvn     r4, #0x0
	add     r3, r1, r3, lsl #3
	rsb     r3, r3, #0x40
	mov     r5, r4, lsr r1
	cmp     r3, #0x20
	movcc   r5, r5, lsl r1
	blo     branch_20accac
	sub     lr, r3, #0x20
	add     r4, r1, lr
	mov     r4, r5, lsl r4
	mov     r5, r4, lsr lr
.arm
branch_20accac: @ 20accac :arm
	mvn     lr, #0x0
	mov     r4, lr, lsl r3
	cmp     r1, #0x20
	movcc   r3, r4, lsr r3
	blo     branch_20accd0
	sub     lr, r1, #0x20
	add     r1, lr, r3
	mov     r1, r4, lsr r1
	mov     r3, r1, lsl lr
.arm
branch_20accd0: @ 20accd0 :arm
	ldr     r1, [sp, #0x10]
	add     r4, r12, r2, lsl #3
	add     r12, r4, r1, lsl #3
	and     r1, r0, r5
	and     r2, r0, r3
	mvn     r5, r5
	mvn     r3, r3
	cmp     r4, r12
	ldmcsfd sp!, {r3-r5,pc}
.arm
branch_20accf4: @ 20accf4 :arm
	ldr     r0, [r4]
	and     r0, r0, r5
	orr     r0, r1, r0
	str     r0, [r4]
	ldr     r0, [r4, #0x4]
	and     r0, r0, r3
	orr     r0, r2, r0
	str     r0, [r4, #0x4]
	add     r4, r4, #0x8
	cmp     r4, r12
	blo     branch_20accf4
	ldmfd   sp!, {r3-r5,pc}
@ 0x20acd24

.arm
Function_20acd24: @ 20acd24 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x28
	ldr     r5, [r0, #0x8]
	ldr     r4, [r0, #0xc]
	cmp     r5, #0x0
	strge   r5, [sp]
	movlt   r1, #0x0
	strlt   r1, [sp]
	ldr     r1, [r0, #0x10]
	cmp     r4, #0x0
	add     r10, r5, r1
	ldr     r1, [r0, #0x14]
	movge   r2, r4
	movlt   r2, #0x0
	cmp     r10, #0x8
	add     r3, r4, r1
	movge   r10, #0x8
	cmp     r3, #0x8
	movge   r3, #0x8
	cmp     r4, #0x0
	movgt   r4, #0x0
	cmp     r5, #0x0
	ldr     r7, [r0, #0x20]
	movgt   r5, #0x0
	rsb     r1, r4, #0x0
	mul     r6, r10, r7
	ldr     r8, [r0, #0x1c]
	rsb     r4, r5, #0x0
	mul     r9, r8, r4
	ldr     r4, [r0, #0x18]
	mov     r10, r6
	str     r4, [sp, #0x10]
	ldr     r4, [sp]
	cmp     r7, #0x4
	mul     r5, r4, r7
	ldr     r4, [sp, #0x10]
	str     r5, [sp]
	mla     r4, r1, r4, r9
	ldr     r1, [r0, #0x4]
	str     r1, [sp, #0x14]
	ldr     r1, [r0]
	bne     branch_20ace94
	ldr     r7, [r0, #0x24]
	add     r0, r1, r2, lsl #2
	str     r0, [sp, #0xc]
	add     r0, r1, r3, lsl #2
	ldr     r1, [sp, #0xc]
	str     r0, [sp, #0x8]
	cmp     r1, r0
	addcs   sp, sp, #0x28
	ldmcsfd sp!, {r3-r11,pc}
	mov     r11, #0xf
	add     r5, sp, #0x20
.arm
branch_20acdf8: @ 20acdf8 :arm
	ldr     r0, [sp, #0xc]
	mov     r1, r4, lsr #31
	ldr     r9, [r0]
	ldr     r0, [sp, #0x14]
	rsb     r2, r1, r4, lsl #29
	add     r0, r0, r4, lsr #3
	str     r0, [sp, #0x20]
	mov     r0, #0x0
	strb    r0, [sp, #0x24]
	strb    r0, [sp, #0x25]
	mov     r0, r5
	add     r1, r1, r2, ror #29
	bl      Function_20ae41c
	ldr     r6, [sp]
	mov     r0, r6
	cmp     r0, r10
	bhs     branch_20ace6c
.arm
branch_20ace3c: @ 20ace3c :arm
	mov     r0, r5
	mov     r1, r8
	bl      Function_20ae41c
	cmp     r0, #0x0
	beq     branch_20ace60
	add     r0, r7, r0
	mvn     r1, r11, lsl r6
	and     r1, r9, r1
	orr     r9, r1, r0, lsl r6
.arm
branch_20ace60: @ 20ace60 :arm
	add     r6, r6, #0x4
	cmp     r6, r10
	blo     branch_20ace3c
.arm
branch_20ace6c: @ 20ace6c :arm
	ldr     r1, [sp, #0xc]
	ldr     r0, [sp, #0x8]
	str     r9, [r1], #0x4
	cmp     r1, r0
	ldr     r0, [sp, #0x10]
	str     r1, [sp, #0xc]
	add     r4, r4, r0
	blo     branch_20acdf8
	add     sp, sp, #0x28
	ldmfd   sp!, {r3-r11,pc}
@ 0x20ace94

.arm
branch_20ace94: @ 20ace94 :arm
	ldr     r5, [r0, #0x24]
	add     r0, r1, r3, lsl #3
	add     r11, r1, r2, lsl #3
	str     r0, [sp, #0x4]
	cmp     r11, r0
	addcs   sp, sp, #0x28
	ldmcsfd sp!, {r3-r11,pc}
.arm
branch_20aceb0: @ 20aceb0 :arm
	mov     r1, r4, lsr #31
	rsb     r0, r1, r4, lsl #29
	add     r1, r1, r0, ror #29
	ldr     r0, [sp, #0x14]
	ldmia   r11, {r6,r7}
	mov     r2, #0x0
	add     r0, r0, r4, lsr #3
	str     r0, [sp, #0x18]
	add     r0, sp, #0x18
	strb    r2, [sp, #0x1c]
	strb    r2, [sp, #0x1d]
	bl      Function_20ae41c
	ldr     r9, [sp]
	mov     r0, r9
	cmp     r0, r10
	bhs     branch_20acf40
.arm
branch_20acef0: @ 20acef0 :arm
	add     r0, sp, #0x18
	mov     r1, r8
	bl      Function_20ae41c
	cmp     r0, #0x0
	beq     branch_20acf34
	add     r1, r5, r0
	cmp     r9, #0x20
	mov     r0, #0xff
	bhs     branch_20acf24
	mvn     r0, r0, lsl r9
	and     r0, r6, r0
	orr     r6, r0, r1, lsl r9
	b       branch_20acf34
@ 0x20acf24

.arm
branch_20acf24: @ 20acf24 :arm
	sub     r2, r9, #0x20
	mvn     r0, r0, lsl r2
	and     r0, r7, r0
	orr     r7, r0, r1, lsl r2
.arm
branch_20acf34: @ 20acf34 :arm
	add     r9, r9, #0x8
	cmp     r9, r10
	blo     branch_20acef0
.arm
branch_20acf40: @ 20acf40 :arm
	ldr     r0, [sp, #0x4]
	stmia   r11, {r6,r7}
	add     r11, r11, #0x8
	cmp     r11, r0
	ldr     r0, [sp, #0x10]
	add     r4, r4, r0
	blo     branch_20aceb0
	add     sp, sp, #0x28
	ldmfd   sp!, {r3-r11,pc}
@ 0x20acf64

.arm
Function_20acf64: @ 20acf64 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x2c
	ldr     r4, [sp, #0x54]
	ldrb    r6, [r0, #0xc]
	str     r4, [sp, #0x54]
	ldr     r4, [r4]
	ldr     r5, [r1]
	mov     r7, r6, lsl #6
	ldrb    r4, [r4, #0x1]
	mov     r6, r7, asr #2
	add     r6, r7, r6, lsr #29
	cmp     r4, #0x0
	ldr     r5, [r5, #0x8]
	mov     r10, r2
	mov     r9, r3
	mov     r8, r6, asr #3
	addeq   sp, sp, #0x2c
	ldmib   r0, {r11,r12}
	ldr     lr, [r0]
	ldrb    r2, [r5, #0x1]
	ldmeqfd sp!, {r4-r11,pc}
	adds    r7, r10, r4
	addmi   sp, sp, #0x2c
	ldmmifd sp!, {r4-r11,pc}
	adds    r3, r9, r2
	addmi   sp, sp, #0x2c
	ldmmifd sp!, {r4-r11,pc}
	cmp     r10, #0x0
	movle   r5, #0x0
	movgt   r5, r10, lsr #3
	cmp     r9, #0x0
	movle   r6, #0x0
	add     r7, r7, #0x7
	movgt   r6, r9, lsr #3
	cmp     r11, r7, lsr #3
	mov     r7, r7, lsr #3
	add     r3, r3, #0x7
	movls   r7, r11
	mov     r11, r3, lsr #3
	cmp     r12, r3, lsr #3
	movls   r11, r12
	subs    r3, r7, r5
	sub     r11, r11, r6
	addmi   sp, sp, #0x2c
	ldmmifd sp!, {r4-r11,pc}
	cmp     r11, #0x0
	addlt   sp, sp, #0x2c
	ldmltfd sp!, {r4-r11,pc}
	ldr     r7, [r0, #0x10]
	cmp     r10, #0x0
	mla     r6, r7, r6, r5
	sub     r5, r7, r3
	mul     r5, r8, r5
	str     r5, [sp]
	ldr     r5, [sp, #0x54]
	mla     r7, r8, r6, lr
	ldr     r12, [r5, #0x4]
	ldr     r6, [sp, #0x50]
	str     r12, [sp, #0x8]
	sub     r5, r6, #0x1
	str     r4, [sp, #0x14]
	str     r5, [sp, #0x28]
	str     r2, [sp, #0x18]
	ldr     r2, [r1]
	andge   r10, r10, #0x7
	ldr     r2, [r2, #0x8]
	cmp     r9, #0x0
	ldrb    r2, [r2, #0x6]
	andge   r9, r9, #0x7
	sub     r11, r9, r11, lsl #3
	str     r2, [sp, #0x20]
	ldrb    r0, [r0, #0xc]
	cmp     r9, r11
	sub     r6, r10, r3, lsl #3
	str     r0, [sp, #0x24]
	ldr     r0, [r1]
	ldr     r0, [r0, #0x8]
	ldrb    r0, [r0]
	smulbb  r0, r2, r0
	str     r0, [sp, #0x1c]
	addle   sp, sp, #0x2c
	ldmlefd sp!, {r4-r11,pc}
	add     r4, sp, #0x4
.arm
branch_20ad0b0: @ 20ad0b0 :arm
	mov     r5, r10
	str     r9, [sp, #0x10]
	cmp     r10, r6
	ble     branch_20ad0e0
.arm
branch_20ad0c0: @ 20ad0c0 :arm
	mov     r0, r4
	str     r7, [sp, #0x4]
	str     r5, [sp, #0xc]
	bl      Function_20acd24
	sub     r5, r5, #0x8
	cmp     r5, r6
	add     r7, r7, r8
	bgt     branch_20ad0c0
.arm
branch_20ad0e0: @ 20ad0e0 :arm
	ldr     r0, [sp]
	sub     r9, r9, #0x8
	cmp     r9, r11
	add     r7, r7, r0
	bgt     branch_20ad0b0
	add     sp, sp, #0x2c
	ldmfd   sp!, {r4-r11,pc}
@ 0x20ad0fc

.arm
Function_20ad0fc: @ 20ad0fc :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x4c
	ldr     r6, [sp, #0x74]
	ldrb    r5, [r0, #0xc]
	ldr     r4, [r6]
	ldr     r7, [r1]
	mov     r8, r5, lsl #6
	ldrb    r4, [r4, #0x1]
	mov     r5, r8, asr #2
	add     r5, r8, r5, lsr #29
	ldr     r7, [r7, #0x8]
	str     r2, [sp, #0x8]
	str     r3, [sp, #0xc]
	cmp     r4, #0x0
	mov     r9, r5, asr #3
	addeq   sp, sp, #0x4c
	ldmib   r0, {r3,r5}
	ldrb    r2, [r7, #0x1]
	ldmeqfd sp!, {r4-r11,pc}
	ldr     r7, [sp, #0x8]
	adds    r7, r7, r4
	addmi   sp, sp, #0x4c
	ldmmifd sp!, {r4-r11,pc}
	ldr     r8, [sp, #0xc]
	adds    r8, r8, r2
	addmi   sp, sp, #0x4c
	ldmmifd sp!, {r4-r11,pc}
	ldr     r10, [sp, #0x8]
	add     r7, r7, #0x7
	cmp     r10, #0x0
	movle   r10, #0x0
	strle   r10, [sp, #0x10]
	movgt   r10, r10, lsr #3
	strgt   r10, [sp, #0x10]
	ldr     r10, [sp, #0xc]
	cmp     r10, #0x0
	movle   r10, #0x0
	movgt   r10, r10, lsr #3
	cmp     r3, r7, lsr #3
	mov     r7, r7, lsr #3
	movls   r7, r3
	add     r3, r8, #0x7
	cmp     r5, r3, lsr #3
	mov     r8, r3, lsr #3
	ldr     r3, [sp, #0x10]
	movls   r8, r5
	subs    r5, r7, r3
	sub     r7, r8, r10
	addmi   sp, sp, #0x4c
	ldmmifd sp!, {r4-r11,pc}
	cmp     r7, #0x0
	addlt   sp, sp, #0x4c
	ldmltfd sp!, {r4-r11,pc}
	ldr     r3, [sp, #0x8]
	ldr     r11, [r0]
	cmp     r3, #0x0
	andge   r3, r3, #0x7
	strge   r3, [sp, #0x8]
	ldr     r3, [sp, #0xc]
	ldr     r8, [sp, #0x8]
	ldr     r6, [r6, #0x4]
	cmp     r3, #0x0
	andge   r3, r3, #0x7
	strge   r3, [sp, #0xc]
	ldr     r3, [sp, #0x70]
	sub     r5, r8, r5, lsl #3
	ldr     r8, [sp, #0xc]
	sub     r3, r3, #0x1
	str     r3, [sp, #0x48]
	sub     r7, r8, r7, lsl #3
	str     r2, [sp, #0x38]
	str     r6, [sp, #0x28]
	str     r4, [sp, #0x34]
	ldr     r4, [r1]
	mov     r3, r8
	mov     r2, r7
	cmp     r3, r2
	ldr     r2, [r4, #0x8]
	str     r7, [sp, #0x1c]
	ldrb    r3, [r2, #0x6]
	str     r3, [sp, #0x40]
	ldrb    r2, [r0, #0xc]
	str     r2, [sp, #0x44]
	ldr     r1, [r1]
	ldr     r1, [r1, #0x8]
	ldrb    r1, [r1]
	smulbb  r1, r3, r1
	str     r1, [sp, #0x3c]
	ldr     r3, [r0, #0x10]
	ldr     r1, [r0, #0x4]
	ldr     r0, [r0, #0x8]
	str     r1, [sp, #0x14]
	mov     r2, r3, lsl #24
	mov     r1, r3, lsl #16
	str     r3, [sp, #0x20]
	str     r0, [sp, #0x18]
	mov     r8, r2, lsr #24
	mov     r7, r1, lsr #24
	addle   sp, sp, #0x4c
	ldmlefd sp!, {r4-r11,pc}
.arm
branch_20ad28c: @ 20ad28c :arm
	ldr     r0, [sp, #0xc]
	ldr     r6, [sp, #0x10]
	str     r0, [sp, #0x30]
	ldr     r0, [sp, #0x8]
	cmp     r0, r5
	mov     r4, r0
	ble     branch_20ad2e8
.arm
branch_20ad2a8: @ 20ad2a8 :arm
	ldr     r2, [sp, #0x14]
	str     r8, [sp]
	ldr     r3, [sp, #0x18]
	mov     r0, r6
	mov     r1, r10
	str     r7, [sp, #0x4]
	bl      Function_20acad8
	mla     r1, r0, r9, r11
	add     r0, sp, #0x24
	str     r4, [sp, #0x2c]
	str     r1, [sp, #0x24]
	bl      Function_20acd24
	sub     r4, r4, #0x8
	add     r6, r6, #0x1
	cmp     r4, r5
	bgt     branch_20ad2a8
.arm
branch_20ad2e8: @ 20ad2e8 :arm
	ldr     r0, [sp, #0xc]
	add     r10, r10, #0x1
	sub     r1, r0, #0x8
	ldr     r0, [sp, #0x1c]
	str     r1, [sp, #0xc]
	cmp     r1, r0
	bgt     branch_20ad28c
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4-r11,pc}
@ 0x20ad30c

.arm
Function_20ad30c: @ 20ad30c :arm
	stmfd   sp!, {r3,lr}
	mov     r3, r0
	ldrb    r2, [r3, #0xc]
	ldr     r12, [r3, #0x4]
	cmp     r2, #0x4
	orreq   r0, r1, r1, lsl #4
	orreq   r0, r0, r0, lsl #8
	orrne   r0, r1, r1, lsl #8
	orr     r1, r0, r0, lsl #16
	ldr     r0, [r3, #0x8]
	mov     r2, r2, lsl #6
	mul     lr, r12, r0
	mov     r0, r2, asr #2
	add     r0, r2, r0, lsr #29
	mov     r2, r0, asr #3
	mov     r0, r1
	mul     r2, lr, r2
	ldr     r1, [r3]
	bl      MIi_CpuClearFast
	ldmfd   sp!, {r3,pc}
@ 0x20ad35c

.arm
Function_20ad35c: @ 20ad35c :arm
	stmfd   sp!, {r3-r9,lr}
	mov     r7, r0
	ldrb    r2, [r7, #0xc]
	mov     r6, r1
	ldr     r9, [r7]
	cmp     r2, #0x4
	orreq   r0, r6, r6, lsl #4
	orreq   r0, r0, r0, lsl #8
	orrne   r0, r6, r6, lsl #8
	mov     r1, r2, lsl #6
	orr     r6, r0, r0, lsl #16
	mov     r0, r1, asr #2
	add     r0, r1, r0, lsr #29
	mov     r3, r0, asr #3
	ldr     r2, [r7, #0x10]
	ldr     r1, [r7, #0x4]
	ldr     r0, [r7, #0x8]
	mul     r5, r3, r2
	mul     r4, r3, r1
	mov     r8, #0x0
	cmp     r0, #0x0
	ldmlefd sp!, {r3-r9,pc}
.arm
branch_20ad3b4: @ 20ad3b4 :arm
	mov     r0, r6
	mov     r1, r9
	mov     r2, r4
	bl      MIi_CpuClearFast
	ldr     r0, [r7, #0x8]
	add     r8, r8, #0x1
	cmp     r8, r0
	add     r9, r9, r5
	blt     branch_20ad3b4
	ldmfd   sp!, {r3-r9,pc}
@ 0x20ad3dc

.arm
Function_20ad3dc: @ 20ad3dc :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x30
	ldr     r4, [sp, #0x58]
	mov     r9, r2
	ldrb    r11, [r0, #0xc]
	mov     r10, r1
	add     r1, r9, r4
	str     r1, [sp, #0x28]
	ldr     r2, [sp, #0x5c]
	mov     r1, r3
	add     r1, r1, r2
	cmp     r11, #0x4
	str     r1, [sp, #0x24]
	orreq   r1, r10, r10, lsl #4
	orreq   r1, r1, r1, lsl #8
	orrne   r1, r10, r10, lsl #8
	str     r3, [sp, #0xc]
	orr     r10, r1, r1, lsl #16
	ldr     r1, [sp, #0xc]
	mov     r6, r11, lsl #6
	bic     r1, r1, #0x7
	mov     r4, r6, asr #2
	mov     r2, r1, asr #2
	str     r1, [sp, #0x2c]
	add     r1, r1, r2, lsr #29
	ldr     r2, [r0, #0x10]
	mov     r3, r1, asr #3
	mul     r1, r3, r2
	bic     r3, r9, #0x7
	mov     r5, r3, asr #2
	add     r4, r6, r4, lsr #29
	str     r3, [sp, #0x18]
	add     r5, r3, r5, lsr #29
	mov     r3, r4, asr #3
	str     r3, [sp, #0x14]
	add     r4, r1, r5, asr #3
	ldr     r3, [sp, #0x24]
	ldr     r5, [r0]
	ldr     r1, [sp, #0x14]
	ldr     r0, [sp, #0x28]
	mla     r4, r1, r4, r5
	add     r3, r3, #0x7
	bic     r1, r3, #0x7
	str     r1, [sp, #0x20]
	ldr     r1, [sp, #0x14]
	add     r0, r0, #0x7
	mul     r1, r2, r1
	str     r1, [sp, #0x10]
	ldr     r2, [sp, #0x2c]
	ldr     r1, [sp, #0x20]
	str     r4, [sp, #0x1c]
	cmp     r2, r1
	bic     r6, r0, #0x7
	addge   sp, sp, #0x30
	ldmgefd sp!, {r3-r11,pc}
.arm
branch_20ad4b8: @ 20ad4b8 :arm
	ldr     r1, [sp, #0x2c]
	ldr     r0, [sp, #0xc]
	cmp     r1, r0
	movge   r8, #0x0
	bge     branch_20ad4d8
	mov     r1, r0
	ldr     r0, [sp, #0x2c]
	sub     r8, r1, r0
.arm
branch_20ad4d8: @ 20ad4d8 :arm
	ldr     r1, [sp, #0x24]
	ldr     r0, [sp, #0x2c]
	ldr     r7, [sp, #0x1c]
	sub     r0, r1, r0
	cmp     r0, #0x8
	movgt   r0, #0x8
	sub     r5, r0, r8
	ldr     r0, [sp, #0x18]
	cmp     r0, r6
	mov     r4, r0
	bge     branch_20ad548
.arm
branch_20ad504: @ 20ad504 :arm
	ldr     r0, [sp, #0x28]
	cmp     r4, r9
	sublt   r1, r9, r4
	sub     r0, r0, r4
	movge   r1, #0x0
	cmp     r0, #0x8
	movgt   r0, #0x8
	sub     r3, r0, r1
	mov     r0, r7
	mov     r2, r8
	stmea   sp, {r5,r10,r11}
	bl      Function_20acbec
	ldr     r0, [sp, #0x14]
	add     r4, r4, #0x8
	add     r7, r7, r0
	cmp     r4, r6
	blt     branch_20ad504
.arm
branch_20ad548: @ 20ad548 :arm
	ldr     r1, [sp, #0x1c]
	ldr     r0, [sp, #0x10]
	add     r0, r1, r0
	str     r0, [sp, #0x1c]
	ldr     r0, [sp, #0x2c]
	add     r1, r0, #0x8
	ldr     r0, [sp, #0x20]
	str     r1, [sp, #0x2c]
	cmp     r1, r0
	blt     branch_20ad4b8
	add     sp, sp, #0x30
	ldmfd   sp!, {r3-r11,pc}
@ 0x20ad578

.arm
Function_20ad578: @ 20ad578 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x48
	ldrb    r4, [r0, #0xc]
	mov     r10, r2
	mov     r11, r1
	str     r4, [sp, #0x10]
	ldr     r1, [sp, #0x10]
	ldr     r4, [sp, #0x70]
	cmp     r1, #0x4
	add     r1, r10, r4
	str     r1, [sp, #0x3c]
	ldr     r2, [sp, #0x74]
	mov     r1, r3
	add     r1, r1, r2
	bic     r2, r10, #0x7
	str     r1, [sp, #0x38]
	str     r3, [sp, #0xc]
	str     r2, [sp, #0x28]
	ldr     r2, [sp, #0xc]
	orreq   r1, r11, r11, lsl #4
	bic     r2, r2, #0x7
	str     r2, [sp, #0x40]
	ldr     r2, [sp, #0x10]
	orreq   r1, r1, r1, lsl #8
	mov     r5, r2, lsl #6
	ldr     r2, [sp, #0x38]
	mov     r3, r5, asr #2
	add     r6, r2, #0x7
	ldr     r2, [sp, #0x28]
	add     r3, r5, r3, lsr #29
	mov     r4, r2, asr #2
	ldr     r2, [sp, #0x40]
	orrne   r1, r11, r11, lsl #8
	mov     r5, r2, asr #2
	bic     r2, r6, #0x7
	str     r2, [sp, #0x34]
	mov     r2, r3, asr #3
	str     r2, [sp, #0x14]
	ldr     r2, [sp, #0x28]
	orr     r11, r1, r1, lsl #16
	add     r2, r2, r4, lsr #29
	mov     r2, r2, asr #3
	str     r2, [sp, #0x2c]
	ldr     r2, [sp, #0x40]
	ldr     r1, [r0, #0x10]
	add     r2, r2, r5, lsr #29
	mov     r8, r2, asr #3
	ldr     r3, [sp, #0x40]
	ldr     r2, [sp, #0x34]
	str     r1, [sp, #0x44]
	cmp     r3, r2
	ldr     r2, [sp, #0x3c]
	add     r2, r2, #0x7
	bic     r7, r2, #0x7
	ldr     r2, [r0, #0x4]
	str     r2, [sp, #0x18]
	ldr     r2, [r0, #0x8]
	ldr     r0, [r0]
	str     r2, [sp, #0x1c]
	str     r0, [sp, #0x30]
	mov     r0, r1, lsl #24
	mov     r0, r0, lsr #24
	str     r0, [sp, #0x20]
	mov     r0, r1, lsl #16
	mov     r0, r0, lsr #24
	str     r0, [sp, #0x24]
	addge   sp, sp, #0x48
	ldmgefd sp!, {r3-r11,pc}
.arm
branch_20ad688: @ 20ad688 :arm
	ldr     r1, [sp, #0x40]
	ldr     r0, [sp, #0xc]
	cmp     r1, r0
	movge   r9, #0x0
	bge     branch_20ad6a8
	mov     r1, r0
	ldr     r0, [sp, #0x40]
	sub     r9, r1, r0
.arm
branch_20ad6a8: @ 20ad6a8 :arm
	ldr     r1, [sp, #0x38]
	ldr     r0, [sp, #0x40]
	ldr     r6, [sp, #0x2c]
	sub     r0, r1, r0
	cmp     r0, #0x8
	movgt   r0, #0x8
	sub     r5, r0, r9
	ldr     r0, [sp, #0x28]
	cmp     r0, r7
	mov     r4, r0
	bge     branch_20ad748
.arm
branch_20ad6d4: @ 20ad6d4 :arm
	ldr     r0, [sp, #0x20]
	ldr     r2, [sp, #0x18]
	str     r0, [sp]
	ldr     r0, [sp, #0x24]
	ldr     r3, [sp, #0x1c]
	str     r0, [sp, #0x4]
	mov     r0, r6
	mov     r1, r8
	bl      Function_20acad8
	ldr     r2, [sp, #0x3c]
	cmp     r4, r10
	sublt   r1, r10, r4
	sub     r2, r2, r4
	movge   r1, #0x0
	cmp     r2, #0x8
	movgt   r2, #0x8
	stmea   sp, {r5,r11}
	sub     r3, r2, r1
	ldr     r2, [sp, #0x10]
	ldr     r12, [sp, #0x14]
	str     r2, [sp, #0x8]
	ldr     r2, [sp, #0x30]
	mla     r0, r12, r0, r2
	mov     r2, r9
	bl      Function_20acbec
	add     r4, r4, #0x8
	add     r6, r6, #0x1
	cmp     r4, r7
	blt     branch_20ad6d4
.arm
branch_20ad748: @ 20ad748 :arm
	ldr     r0, [sp, #0x40]
	add     r8, r8, #0x1
	add     r1, r0, #0x8
	ldr     r0, [sp, #0x34]
	str     r1, [sp, #0x40]
	cmp     r1, r0
	blt     branch_20ad688
	add     sp, sp, #0x48
	ldmfd   sp!, {r3-r11,pc}
@ 0x20ad76c

.arm
Function_20ad76c: @ 20ad76c :arm
	str     r2, [r0, #0x4]
	ldr     r2, [sp]
	str     r3, [r0, #0x8]
	strb    r2, [r0, #0xc]
	ldr     r2, [sp, #0x4]
	str     r1, [r0]
	ldr     r1, [sp, #0x8]
	str     r2, [r0, #0x14]
	str     r1, [r0, #0x10]
	bx      lr
@ 0x20ad794


.arm
.globl Function_20ad794
Function_20ad794: @ 20ad794 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x10
	mov     r7, r1
	ldrh    r1, [sp, #0x2c]
	mov     r8, r0
	mov     r0, r7
	mov     r6, r2
	mov     r5, r3
	bl      Function_20ac890
	ldr     r1, [pc, #0xf4] @ [0x20ad8b4] (=0xffff)
	mov     r4, r0
	cmp     r4, r1
	ldreq   r0, [r7]
	ldreqh  r4, [r0, #0x2]
	mov     r0, r7
	mov     r1, r4
	bl      Function_20ac8d8
	str     r0, [sp, #0x8]
	ldr     r1, [r7]
	ldr     r2, [r1, #0x8]
	ldrh    r1, [r2, #0x2]
	add     r2, r2, #0x8
	mla     r1, r4, r1, r2
	str     r1, [sp, #0xc]
	ldr     r1, [r7]
	ldr     r3, [r1, #0x8]
	ldrb    r1, [r3, #0x7]
	cmp     r1, #0x7
	addls   pc, pc, r1, lsl #2
	b       branch_20ad878
	b       branch_20ad82c
	b       branch_20ad838
	b       branch_20ad838
	b       branch_20ad84c
	b       branch_20ad84c
	b       branch_20ad868
	b       branch_20ad868
	b       branch_20ad82c

branch_20ad82c: @ 20ad82c :arm
	ldrsb   r0, [r0]
	add     r6, r6, r0
	b       branch_20ad878

branch_20ad838: @ 20ad838 :arm
	ldrb    r1, [r3]
	ldrsb   r0, [r0]
	sub     r6, r6, r1
	add     r5, r5, r0
	b       branch_20ad878
@ 0x20ad84c

.arm
branch_20ad84c: @ 20ad84c :arm
	ldrsb   r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r0, [r3, #0x1]
	add     r1, r2, r1
	sub     r6, r6, r1
	sub     r5, r5, r0
	b       branch_20ad878
@ 0x20ad868

.arm
branch_20ad868: @ 20ad868 :arm
	ldrsb   r1, [r0]
	ldrb    r0, [r3, #0x1]
	add     r0, r1, r0
	sub     r5, r5, r0
.arm
branch_20ad878: @ 20ad878 :arm
	ldr     r1, [sp, #0x28]
	add     r0, sp, #0x8
	str     r1, [sp]
	str     r0, [sp, #0x4]
	ldr     r1, [r8, #0x14]
	mov     r0, r8
	ldr     r4, [r1]
	mov     r1, r7
	mov     r2, r6
	mov     r3, r5
	blx     r4
	ldr     r0, [sp, #0x8]
	ldrsb   r0, [r0, #0x2]
	add     sp, sp, #0x10
	ldmfd   sp!, {r4-r8,pc}
@ 0x20ad8b4

.word 0xffff @ 0x20ad8b4



.arm
.globl Function_20ad8b8
Function_20ad8b8: @ 20ad8b8 :arm
	stmfd   sp!, {lr}
	sub     sp, sp, #0xc
	ldr     lr, [sp, #0x10]
	ldr     r12, [pc, #0x14] @ [0x20ad8e0] (=0x20f975c)
	str     lr, [sp]
	str     r12, [sp, #0x4]
	str     r2, [sp, #0x8]
	bl      Function_20ad76c
	add     sp, sp, #0xc
	ldmfd   sp!, {pc}
@ 0x20ad8e0

.word Unknown_20f975c @ 0x20ad8e0



.arm
.globl Function_20ad8e4
Function_20ad8e4: @ 20ad8e4 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x10
	cmp     r2, #0x8
	movlt   r4, r2
	movge   r12, #0x3
	clzlt   r4, r4
	rsblt   r12, r4, #0x1f
	cmp     r3, #0x8
	movlt   r4, r3
	movge   r5, #0x3
	clzlt   r4, r4
	rsblt   r5, r4, #0x1f
	ldr     r4, [pc, #0x48] @ [0x20ad964] (=0x20f9774)
	ldr     lr, [sp, #0xc]
	add     r5, r4, r5, lsl #3
	add     r4, r5, r12, lsl #1
	ldrb    r12, [r5, r12, lsl #0x1]
	bic     r5, lr, #0xff
	ldrb    r4, [r4, #0x1]
	ldr     lr, [sp, #0x20]
	orr     r5, r5, r12
	str     lr, [sp]
	ldr     r12, [pc, #0x24] @ [0x20ad968] (=0x20f9768)
	bic     lr, r5, #255, 24 @ #0xff00
	mov     r4, r4, lsl #24
	orr     r4, lr, r4, lsr #16
	str     r12, [sp, #0x4]
	str     r4, [sp, #0xc]
	str     r4, [sp, #0x8]
	bl      Function_20ad76c
	add     sp, sp, #0x10
	ldmfd   sp!, {r3-r5,pc}
@ 0x20ad964

.word Unknown_20f9774 @ 0x20ad964
.word Unknown_20f9768 @ 0x20ad968



.arm
.globl Function_20ad96c
Function_20ad96c: @ 20ad96c :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x8
	ldr     r5, [sp, #0x24]
	ldr     lr, [sp, #0x20]
	cmp     r5, #0x20
	ldr     r12, [sp, #0x28]
	bgt     branch_20ad9a8
	mla     r4, r5, lr, r3
	ldr     lr, [sp, #0x2c]
	mov     r3, r5
	add     r0, r0, r4, lsl #1
	stmea   sp, {r12,lr}
	bl      Function_20ada1c
	add     sp, sp, #0x8
	ldmfd   sp!, {r4-r8,pc}
@ 0x20ad9a8

.arm
branch_20ad9a8: @ 20ad9a8 :arm
	add     r6, lr, r2
	ldr     r4, [sp, #0x2c]
	cmp     lr, r6
	add     r5, r3, r1
	addge   sp, sp, #0x8
	mov     r1, r4, lsl #28
	ldmgefd sp!, {r4-r8,pc}
.arm
branch_20ad9c4: @ 20ad9c4 :arm
	cmp     lr, #0x20
	movlt   r2, lr
	addge   r2, lr, #0x20
	mov     r7, r3
	cmp     r3, r5
	add     r8, r0, r2, lsl #6
	bge     branch_20ada08
.arm
branch_20ad9e0: @ 20ad9e0 :arm
	cmp     r7, #0x20
	movlt   r2, r7
	addge   r2, r7, #62, 28 @ #0x3e0
	orr     r4, r12, r1, lsr #16
	mov     r2, r2, lsl #1
	add     r7, r7, #0x1
	strh    r4, [r8, r2]
	cmp     r7, r5
	add     r12, r12, #0x1
	blt     branch_20ad9e0
.arm
branch_20ada08: @ 20ada08 :arm
	add     lr, lr, #0x1
	cmp     lr, r6
	blt     branch_20ad9c4
	add     sp, sp, #0x8
	ldmfd   sp!, {r4-r8,pc}
@ 0x20ada1c

.arm
Function_20ada1c: @ 20ada1c :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r4, [sp, #0x1c]
	ldr     r8, [sp, #0x18]
	mov     r6, #0x0
	cmp     r2, #0x0
	mov     r12, r4, lsl #28
	ldmlefd sp!, {r4-r8,pc}
	mov     r4, r6
.arm
branch_20ada3c: @ 20ada3c :arm
	mov     r7, r0
	mov     r5, r4
	cmp     r1, #0x0
	ble     branch_20ada64
.arm
branch_20ada4c: @ 20ada4c :arm
	orr     lr, r8, r12, lsr #16
	add     r5, r5, #0x1
	cmp     r5, r1
	add     r8, r8, #0x1
	strh    lr, [r7], #0x2
	blt     branch_20ada4c

branch_20ada64: @ 20ada64 :arm
	add     r6, r6, #0x1
	cmp     r6, r2
	add     r0, r0, r3, lsl #1
	blt     branch_20ada3c
	ldmfd   sp!, {r4-r8,pc}
@ 0x20ada78


.arm
.globl Function_20ada78
Function_20ada78: @ 20ada78 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r3, r0, lsr #3
	mov     r5, r1, lsr #3
	mov     r2, #0x0
	mla     lr, r3, r5, r2
	and     r4, r0, #0x2
	and     r2, r0, #0x1
	add     r2, r2, r4, lsr #1
	and     r0, r0, #0x4
	mov     r12, r2, lsl #1
	add     r12, r12, r0, lsr #2
	mla     r12, r5, r12, lr
	and     r4, r1, #0x2
	and     lr, r1, #0x1
	add     r4, lr, r4, lsr #1
	and     lr, r1, #0x4
	mov     r1, r4, lsl #1
	add     r1, r1, lr, lsr #2
	mla     r12, r3, r1, r12
	add     r1, r2, r0, lsr #2
	add     r0, r4, lr, lsr #2
	mla     r0, r1, r0, r12
	ldmfd   sp!, {r3-r5,pc}
@ 0x20adad4


.arm
.globl Function_20adad4
Function_20adad4: @ 20adad4 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x38
	mov     r7, r0
	mov     r0, r1
	cmp     r0, #0x8
	ldr     r0, [sp, #0x60]
	str     r1, [sp, #0x10]
	str     r0, [sp, #0x60]
	str     r2, [sp, #0x14]
	ldrlt   r0, [sp, #0x10]
	str     r3, [sp, #0x34]
	ldr     r6, [sp, #0x64]
	ldr     r5, [sp, #0x68]
	ldr     r4, [sp, #0x6c]
	movge   r2, #0x3
	clzlt   r0, r0
	rsblt   r2, r0, #0x1f
	ldr     r0, [sp, #0x14]
	cmp     r0, #0x8
	ldrlt   r0, [sp, #0x14]
	movge   r1, #0x3
	clzlt   r0, r0
	rsblt   r1, r0, #0x1f
	ldr     r0, [pc, #0x288] @ [0x20addc0] (=0x20f9774)
	mvn     r3, #0x0
	add     r1, r0, r1, lsl #3
	add     r0, r1, r2, lsl #1
	ldrb    r11, [r1, r2, lsl #0x1]
	ldrb    r1, [r0, #0x1]
	ldr     r2, [sp, #0x14]
	cmp     r6, #0x0
	str     r1, [sp, #0x30]
	ldr     r1, [sp, #0x10]
	and     r1, r1, r3, lsl r11
	str     r1, [sp, #0x2c]
	ldr     r1, [sp, #0x30]
	and     r1, r2, r3, lsl r1
	str     r1, [sp, #0x28]
	moveq   r1, #0x1
	streq   r1, [sp, #0x18]
	movne   r1, #0x2
	strne   r1, [sp, #0x18]
	mov     r1, #0x0
	str     r1, [sp, #0x24]
	bl      Function_20acbd0
	ldr     r1, [sp, #0x10]
	ldr     r2, [sp, #0x14]
	mov     r9, r1, asr r11
	ldr     r1, [sp, #0x30]
	mov     r1, r2, asr r1
	str     r1, [sp, #0x20]
	ldr     r1, [sp, #0x18]
	mov     r2, r1, lsl r11
	ldr     r1, [sp, #0x30]
	mov     r8, r2, lsl r1
	mov     r1, #0x0
	str     r1, [sp, #0x1c]
	b       branch_20adc54
@ 0x20adbbc

.arm
branch_20adbbc: @ 20adbbc :arm
	ldr     r2, [sp, #0x1c]
	ldr     r1, [sp, #0x30]
	mov     r10, #0x0
	mov     r2, r2, lsl r1
	ldr     r1, [sp, #0x60]
	add     r1, r1, r2, lsl #3
	mov     r2, #1, 22 @ #0x400
	and     r3, r1, #0xff
	rsb     r2, r2, #0x0
	b       branch_20adc40
@ 0x20adbe4

.arm
branch_20adbe4: @ 20adbe4 :arm
	mov     r12, r10, lsl r11
	ldr     r1, [sp, #0x34]
	add     r10, r10, #0x1
	add     r1, r1, r12, lsl #3
	mov     lr, r1, lsl #23
	ldr     r12, [r7]
	ldr     r1, [pc, #0x1c0] @ [0x20addc4] (=0xfe00ff00)
	and     r1, r12, r1
	orr     r1, r1, r3
	orr     r12, r1, lr, lsr #7
	ldr     r1, [pc, #0x1b4] @ [0x20addc8] (=0x3fff3fff)
	and     r1, r12, r1
	orr     r1, r1, r0
	str     r1, [r7]
	ldrh    r1, [r7, #0x4]
	and     r1, r1, r2
	orr     r1, r1, r5
	strh    r1, [r7, #0x4]
	ldr     r1, [r7]
	add     r5, r5, r8, asr r4
	bic     r1, r1, #2, 20 @ #0x2000
	orr     r1, r1, r6, lsl #13
	str     r1, [r7], #0x8
.arm
branch_20adc40: @ 20adc40 :arm
	cmp     r10, r9
	blt     branch_20adbe4
	ldr     r1, [sp, #0x1c]
	add     r1, r1, #0x1
	str     r1, [sp, #0x1c]
.arm
branch_20adc54: @ 20adc54 :arm
	ldr     r2, [sp, #0x1c]
	ldr     r1, [sp, #0x20]
	cmp     r2, r1
	blt     branch_20adbbc
	ldr     r0, [sp, #0x24]
	mla     r0, r9, r1, r0
	str     r0, [sp, #0x24]
	ldr     r1, [sp, #0x2c]
	ldr     r0, [sp, #0x10]
	cmp     r1, r0
	bhs     branch_20adcdc
	ldr     r0, [sp, #0x60]
	ldr     r1, [sp, #0x10]
	stmea   sp, {r0,r6}
	ldr     r0, [sp, #0x2c]
	ldr     r2, [sp, #0x2c]
	sub     r8, r1, r0
	ldr     r1, [sp, #0x34]
	str     r5, [sp, #0x8]
	add     r3, r1, r2, lsl #3
	ldr     r2, [sp, #0x28]
	mov     r0, r7
	mov     r1, r8
	str     r4, [sp, #0xc]
	bl      Function_20adad4
	ldr     r1, [sp, #0x18]
	add     r7, r7, r0, lsl #3
	mul     r2, r1, r8
	ldr     r1, [sp, #0x28]
	mul     r2, r1, r2
	ldr     r1, [sp, #0x24]
	add     r5, r5, r2, lsr r4
	add     r0, r1, r0
	str     r0, [sp, #0x24]
branch_20adcdc: @ 20adcdc :arm
	ldr     r1, [sp, #0x28]
	ldr     r0, [sp, #0x14]
	cmp     r1, r0
	bhs     branch_20add48
	ldr     r1, [sp, #0x60]
	ldr     r0, [sp, #0x28]
	ldr     r3, [sp, #0x34]
	add     r0, r1, r0, lsl #3
	stmea   sp, {r0,r6}
	str     r5, [sp, #0x8]
	ldr     r1, [sp, #0x14]
	ldr     r0, [sp, #0x28]
	str     r4, [sp, #0xc]
	sub     r8, r1, r0
	ldr     r1, [sp, #0x2c]
	mov     r0, r7
	mov     r2, r8
	bl      Function_20adad4
	ldr     r2, [sp, #0x18]
	ldr     r1, [sp, #0x2c]
	add     r7, r7, r0, lsl #3
	mul     r1, r2, r1
	mul     r1, r8, r1
	add     r5, r5, r1, lsr r4
	ldr     r1, [sp, #0x24]
	add     r0, r1, r0
	str     r0, [sp, #0x24]
branch_20add48: @ 20add48 :arm
	ldr     r1, [sp, #0x2c]
	ldr     r0, [sp, #0x10]
	cmp     r1, r0
	ldrcc   r1, [sp, #0x28]
	ldrcc   r0, [sp, #0x14]
	cmpcc   r1, r0
	bhs     branch_20addb4
	ldr     r1, [sp, #0x60]
	ldr     r0, [sp, #0x28]
	ldr     r2, [sp, #0x10]
	add     r0, r1, r0, lsl #3
	stmea   sp, {r0,r6}
	str     r5, [sp, #0x8]
	ldr     r1, [sp, #0x2c]
	ldr     r3, [sp, #0x14]
	sub     r1, r2, r1
	ldr     r2, [sp, #0x28]
	ldr     r5, [sp, #0x2c]
	sub     r2, r3, r2
	ldr     r3, [sp, #0x34]
	mov     r0, r7
	add     r3, r3, r5, lsl #3
	str     r4, [sp, #0xc]
	bl      Function_20adad4
	ldr     r1, [sp, #0x24]
	add     r0, r1, r0
	str     r0, [sp, #0x24]
branch_20addb4: @ 20addb4 :arm
	ldr     r0, [sp, #0x24]
	add     sp, sp, #0x38
	ldmfd   sp!, {r3-r11,pc}
@ 0x20addc0

.word Unknown_20f9774 @ 0x20addc0
.word 0xfe00ff00 @ 0x20addc4
.word 0x3fff3fff @ 0x20addc8



.arm
Function_20addcc: @ 20addcc :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x10
	mov     r11, r0
	ldr     r4, [r11, #0x8]
	ldr     r5, [r11, #0x4]
	ldr     r6, [sp, #0x38]
	add     r0, sp, #0xc
	str     r6, [sp, #0xc]
	ldr     r6, [r5, #0x4]
	mov     r10, r1
	mov     r9, r2
	str     r3, [sp, #0x8]
	ldrsb   r8, [sp, #0x41]
	blx     r6
	cmp     r0, #0x0
	beq     branch_20ade54
	ldrsb   r7, [sp, #0x40]
branch_20ade10: @ 20ade10 :arm
	cmp     r0, #0xa
	beq     branch_20ade54
	ldr     r1, [sp, #0x8]
	mov     r2, r10
	str     r1, [sp]
	str     r0, [sp, #0x4]
	ldr     r0, [r11]
	mov     r1, r5
	mov     r3, r9
	bl      Function_20ad794
	add     r0, r4, r0
	mla     r10, r0, r7, r10
	mla     r9, r0, r8, r9
	add     r0, sp, #0xc
	blx     r6
	cmp     r0, #0x0
	bne     branch_20ade10
branch_20ade54: @ 20ade54 :arm
	ldr     r1, [sp, #0x3c]
	cmp     r1, #0x0
	addeq   sp, sp, #0x10
	ldmeqfd sp!, {r3-r11,pc}
	cmp     r0, #0xa
	ldreq   r1, [sp, #0xc]
	ldr     r0, [sp, #0x3c]
	movne   r1, #0x0
	str     r1, [r0]
	add     sp, sp, #0x10
	ldmfd   sp!, {r3-r11,pc}
@ 0x20ade80


.arm
Function_20ade80: @ 20ade80 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x34
	mov     r10, r0
	ldr     r0, [r10, #0x4]
	ldr     r4, [sp, #0x60]
	ldr     r0, [r0]
	ldrsb   r8, [sp, #0x65]
	ldrsb   r0, [r0, #0x1]
	ldr     r5, [r10, #0xc]
	ldrsb   r9, [sp, #0x64]
	add     r5, r5, r0
	rsb     r0, r8, #0x0
	mul     r0, r5, r0
	str     r0, [sp, #0x20]
	mul     r0, r5, r9
	str     r0, [sp, #0x1c]
	ldr     r0, [sp, #0x58]
	str     r1, [sp, #0xc]
	str     r2, [sp, #0x10]
	mov     r11, r3
	str     r4, [sp, #0x30]
	cmp     r4, #0x0
	str     r0, [sp, #0x58]
	addeq   sp, sp, #0x34
	ldmeqfd sp!, {r4-r11,pc}
	ldr     r2, [sp, #0x5c]
	mov     r6, #0x0
	and     r0, r2, #2, 22 @ #0x800
	add     r1, r11, #0x1
	str     r0, [sp, #0x18]
	add     r0, r1, r1, lsr #31
	str     r0, [sp, #0x2c]
	and     r0, r2, #1, 22 @ #0x400
	str     r0, [sp, #0x14]
	ldrb    r0, [sp, #0x64]
	mov     r7, r6
	str     r0, [sp, #0x24]
	ldrb    r0, [sp, #0x65]
	str     r0, [sp, #0x28]
branch_20adf1c: @ 20adf1c :arm
	ldr     r0, [sp, #0x18]
	cmp     r0, #0x0
	ldr     r0, [sp, #0xc]
	add     r4, r0, r6
	ldr     r0, [sp, #0x10]
	add     r5, r0, r7
	beq     branch_20adf58
	ldr     r2, [sp, #0x30]
	mov     r3, #0x0
	ldmib   r10, {r0,r1}
	bl      Function_20ac924
	sub     r0, r11, r0
	mla     r4, r0, r9, r4
	mla     r5, r0, r8, r5
	b       branch_20adf90

branch_20adf58: @ 20adf58 :arm
	ldr     r0, [sp, #0x14]
	cmp     r0, #0x0
	beq     branch_20adf90
	ldr     r2, [sp, #0x30]
	mov     r3, #0x0
	ldmib   r10, {r0,r1}
	bl      Function_20ac924
	add     r0, r0, #0x1
	add     r0, r0, r0, lsr #31
	mov     r1, r0, asr #1
	ldr     r0, [sp, #0x2c]
	rsb     r0, r1, r0, asr #1
	mla     r4, r0, r9, r4
	mla     r5, r0, r8, r5
branch_20adf90: @ 20adf90 :arm
	ldr     r3, [sp, #0x30]
	mov     r1, r4
	str     r3, [sp]
	add     r3, sp, #0x30
	str     r3, [sp, #0x4]
	ldr     r3, [sp, #0x24]
	mov     r2, r5
	strb    r3, [sp, #0x8]
	ldr     r3, [sp, #0x28]
	mov     r0, r10
	strb    r3, [sp, #0x9]
	ldr     r3, [sp, #0x58]
	bl      Function_20addcc
	ldr     r0, [sp, #0x20]
	add     r6, r6, r0
	ldr     r0, [sp, #0x1c]
	add     r7, r7, r0
	ldr     r0, [sp, #0x30]
	cmp     r0, #0x0
	bne     branch_20adf1c
	add     sp, sp, #0x34
	ldmfd   sp!, {r4-r11,pc}
@ 0x20adfe8


.arm
.globl Function_20adfe8
Function_20adfe8: @ 20adfe8 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x28
	ldr     r4, [sp, #0x44]
	mov     r8, r0
	str     r4, [sp]
	add     r0, sp, #0x18
	mov     r7, r1
	mov     r6, r2
	mov     r5, r3
	ldmib   r8, {r1-r3}
	ldr     r4, [sp, #0x40]
	bl      Function_20aca44
	ldr     r2, [sp, #0x18]
	ldr     r0, [sp, #0x1c]
	str     r2, [sp, #0x10]
	str     r0, [sp, #0x14]
	str     r2, [sp, #0x20]
	str     r0, [sp, #0x24]
	tst     r4, #0x10
	beq     branch_20ae05c
	add     r0, r2, #0x1
	rsb     r0, r0, #0x0
	add     r0, r0, r0, lsr #31
	ldrsb   r1, [sp, #0x48]
	mov     r2, r0, asr #1
	ldrsb   r0, [sp, #0x49]
	mla     r7, r2, r1, r7
	mla     r6, r2, r0, r6
	b       branch_20ae078

branch_20ae05c: @ 20ae05c :arm
	tst     r4, #0x20
	beq     branch_20ae078
	ldrsb   r1, [sp, #0x48]
	ldrsb   r0, [sp, #0x49]
	rsb     r2, r2, #0x0
	mla     r7, r2, r1, r7
	mla     r6, r2, r0, r6
branch_20ae078: @ 20ae078 :arm
	tst     r4, #0x2
	beq     branch_20ae0ac
	ldr     r0, [sp, #0x24]
	ldrsb   r2, [sp, #0x49]
	add     r0, r0, #0x1
	rsb     r0, r0, #0x0
	add     r0, r0, r0, lsr #31
	ldrsb   r1, [sp, #0x48]
	mov     r3, r0, asr #1
	rsb     r0, r2, #0x0
	mla     r7, r3, r0, r7
	mla     r6, r3, r1, r6
	b       branch_20ae0d0

branch_20ae0ac: @ 20ae0ac :arm
	tst     r4, #0x4
	beq     branch_20ae0d0
	ldrsb   r1, [sp, #0x49]
	ldr     r2, [sp, #0x24]
	ldrsb   r0, [sp, #0x48]
	rsb     r2, r2, #0x0
	rsb     r1, r1, #0x0
	mla     r7, r2, r1, r7
	mla     r6, r2, r0, r6
branch_20ae0d0: @ 20ae0d0 :arm
	str     r5, [sp]
	ldr     r1, [sp, #0x44]
	str     r4, [sp, #0x4]
	ldrb    r0, [sp, #0x48]
	str     r1, [sp, #0x8]
	ldrb    r4, [sp, #0x49]
	strb    r0, [sp, #0xc]
	ldr     r3, [sp, #0x20]
	mov     r0, r8
	mov     r1, r7
	mov     r2, r6
	strb    r4, [sp, #0xd]
	bl      Function_20ade80
	add     sp, sp, #0x28
	ldmfd   sp!, {r4-r8,pc}
@ 0x20ae10c


.arm
.globl Function_20ae10c
Function_20ae10c: @ 20ae10c :arm
	stmfd   sp!, {r3-r7,lr}
	sub     sp, sp, #0x10
	ldr     r12, [sp, #0x30]
	mov     r7, r0
	mov     r6, r1
	mov     r5, r2
	mov     r4, r3
	tst     r12, #1, 24 @ #0x100
	beq     branch_20ae160
	ldr     r0, [r7, #0x4]
	ldr     r1, [r7, #0xc]
	ldr     r2, [sp, #0x34]
	bl      Function_20ac9d0
	ldrsb   r2, [sp, #0x39]
	ldr     r3, [sp, #0x28]
	ldrsb   r1, [sp, #0x38]
	sub     r3, r3, r0
	rsb     r0, r2, #0x0
	mla     r6, r3, r0, r6
	mla     r5, r3, r1, r5
	b       branch_20ae1a8

branch_20ae160: @ 20ae160 :arm
	tst     r12, #0x80
	beq     branch_20ae1a8
	ldr     r0, [r7, #0x4]
	ldr     r1, [r7, #0xc]
	ldr     r2, [sp, #0x34]
	bl      Function_20ac9d0
	ldr     r1, [sp, #0x28]
	add     r0, r0, #0x1
	ldrsb   r3, [sp, #0x39]
	add     r12, r1, #0x1
	add     r1, r0, r0, lsr #31
	ldrsb   r2, [sp, #0x38]
	add     r0, r12, r12, lsr #31
	mov     r1, r1, asr #1
	rsb     r1, r1, r0, asr #1
	rsb     r0, r3, #0x0
	mla     r6, r1, r0, r6
	mla     r5, r1, r2, r5
branch_20ae1a8: @ 20ae1a8 :arm
	ldr     r1, [sp, #0x2c]
	ldr     r0, [sp, #0x30]
	str     r1, [sp]
	ldr     r1, [sp, #0x34]
	str     r0, [sp, #0x4]
	ldrb    r0, [sp, #0x38]
	str     r1, [sp, #0x8]
	ldrb    r12, [sp, #0x39]
	strb    r0, [sp, #0xc]
	mov     r0, r7
	mov     r1, r6
	mov     r2, r5
	mov     r3, r4
	strb    r12, [sp, #0xd]
	bl      Function_20ade80
	add     sp, sp, #0x10
	ldmfd   sp!, {r3-r7,pc}
@ 0x20ae1ec


.arm
Function_20ae1ec: @ 20ae1ec :arm
	stmfd   sp!, {r4-r6,lr}
	movs    r6, r0
	mov     r5, r1
	mov     r4, #0x0
	beq     branch_20ae264
	cmp     r6, #0x0
	beq     branch_20ae21c
	ldr     r1, [r6]
	ldr     r0, [pc, #0x120] @ [0x20ae334] (=0x4e465452)
	cmp     r1, r0
	moveq   r0, #0x1
	beq     branch_20ae220
branch_20ae21c: @ 20ae21c :arm
	mov     r0, #0x0
branch_20ae220: @ 20ae220 :arm
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	cmp     r0, #0x0
	beq     branch_20ae268
	cmp     r6, #0x0
	beq     branch_20ae250
	ldrh    r1, [r6, #0x6]
	ldr     r0, [pc, #0xf0] @ [0x20ae338] (=0x101)
	cmp     r1, r0
	movcs   r0, #0x1
	bhs     branch_20ae254
branch_20ae250: @ 20ae250 :arm
	mov     r0, #0x0
branch_20ae254: @ 20ae254 :arm
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	b       branch_20ae268

branch_20ae264: @ 20ae264 :arm
	mov     r0, r4
branch_20ae268: @ 20ae268 :arm
	cmp     r0, #0x0
	bne     branch_20ae2e8
	cmp     r6, #0x0
	beq     branch_20ae2d4
	beq     branch_20ae290
	ldr     r1, [r6]
	ldr     r0, [pc, #0xac] @ [0x20ae334] (=0x4e465452)
	cmp     r1, r0
	moveq   r0, #0x1
	beq     branch_20ae294
branch_20ae290: @ 20ae290 :arm
	mov     r0, #0x0
branch_20ae294: @ 20ae294 :arm
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	cmp     r0, #0x0
	beq     branch_20ae2d8
	cmp     r6, #0x0
	beq     branch_20ae2c0
	ldrh    r0, [r6, #0x6]
	cmp     r0, #1, 24 @ #0x100
	movcs   r0, #0x1
	bhs     branch_20ae2c4
branch_20ae2c0: @ 20ae2c0 :arm
	mov     r0, #0x0
branch_20ae2c4: @ 20ae2c4 :arm
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	b       branch_20ae2d8

branch_20ae2d4: @ 20ae2d4 :arm
	mov     r0, #0x0
branch_20ae2d8: @ 20ae2d8 :arm
	cmp     r0, #0x0
	bne     branch_20ae2e4
	bl      OS_Panic
branch_20ae2e4: @ 20ae2e4 :arm
	mov     r4, #0x1
branch_20ae2e8: @ 20ae2e8 :arm
	mov     r0, r6
	bl      Function_20ae340
	ldr     r1, [pc, #0x44] @ [0x20ae33c] (=0x46494e46)
	mov     r0, r6
	bl      Function_20a727c
	cmp     r0, #0x0
	moveq   r0, #0x0
	streq   r0, [r5]
	ldmeqfd sp!, {r4-r6,pc}
	add     r0, r0, #0x8
	str     r0, [r5]
	cmp     r4, #0x0
	beq     branch_20ae32c
	ldr     r0, [r5]
	mov     r1, #0x0
	ldr     r0, [r0, #0x8]
	strb    r1, [r0, #0x7]
branch_20ae32c: @ 20ae32c :arm
	mov     r0, #0x1
	ldmfd   sp!, {r4-r6,pc}
@ 0x20ae334

.word 0x4e465452 @ 0x20ae334
.word 0x101 @ 0x20ae338
.word 0x46494e46 @ 0x20ae33c



.arm
Function_20ae340: @ 20ae340 :arm
	stmfd   sp!, {r4-r6,lr}
	ldrh    r1, [r0, #0xc]
	ldrh    r3, [r0, #0xe]
	mov     r2, #0x0
	add     r1, r0, r1
	cmp     r3, #0x0
	ldmlefd sp!, {r4-r6,pc}
	ldr     r3, [pc, #0xa8] @ [0x20ae40c] (=0x46494e46)
	ldr     r12, [pc, #0xa8] @ [0x20ae410] (=0x43574448)
	ldr     r4, [pc, #0xa8] @ [0x20ae414] (=0x434d4150)
	ldr     lr, [pc, #0xa8] @ [0x20ae418] (=0x43474c50)
branch_20ae36c: @ 20ae36c :arm
	ldr     r5, [r1]
	cmp     r5, r4
	bhi     branch_20ae384
	bhs     branch_20ae3e0
	cmp     r5, lr
	b       branch_20ae3f0

branch_20ae384: @ 20ae384 :arm
	cmp     r5, r12
	bhi     branch_20ae394
	beq     branch_20ae3cc
	b       branch_20ae3f0

branch_20ae394: @ 20ae394 :arm
	cmp     r5, r3
	bne     branch_20ae3f0
	ldr     r5, [r1, #0x10]
	add     r5, r5, r0
	str     r5, [r1, #0x10]
	ldr     r5, [r1, #0x14]
	cmp     r5, #0x0
	addne   r5, r5, r0
	strne   r5, [r1, #0x14]
	ldr     r5, [r1, #0x18]
	cmp     r5, #0x0
	addne   r5, r5, r0
	strne   r5, [r1, #0x18]
	b       branch_20ae3f0

branch_20ae3cc: @ 20ae3cc :arm
	ldr     r5, [r1, #0xc]
	cmp     r5, #0x0
	addne   r5, r5, r0
	strne   r5, [r1, #0xc]
	b       branch_20ae3f0

branch_20ae3e0: @ 20ae3e0 :arm
	ldr     r5, [r1, #0x10]
	cmp     r5, #0x0
	addne   r5, r5, r0
	strne   r5, [r1, #0x10]
branch_20ae3f0: @ 20ae3f0 :arm
	ldrh    r5, [r0, #0xe]
	ldr     r6, [r1, #0x4]
	add     r2, r2, #0x1
	cmp     r2, r5
	add     r1, r1, r6
	blt     branch_20ae36c
	ldmfd   sp!, {r4-r6,pc}
@ 0x20ae40c

.word 0x46494e46 @ 0x20ae40c
.word 0x43574448 @ 0x20ae410
.word 0x434d4150 @ 0x20ae414
.word 0x43474c50 @ 0x20ae418



.arm
Function_20ae41c: @ 20ae41c :arm
	stmfd   sp!, {r4-r6,lr}
	ldrsb   r3, [r0, #0x4]
	ldrb    r4, [r0, #0x5]
	mov     r5, r1
	cmp     r3, r5
	subge   r1, r3, r5
	movge   r2, r4, lsr r1
	strgeb  r1, [r0, #0x4]
	bge     branch_20ae46c
	ldr     r2, [r0]
	sub     r6, r5, r3
	add     r1, r2, #0x1
	str     r1, [r0]
	ldrb    r3, [r2]
	mov     r1, r6
	mov     r2, #0x8
	strb    r3, [r0, #0x5]
	strb    r2, [r0, #0x4]
	bl      Function_20ae41c
	orr     r2, r0, r4, lsl r6
branch_20ae46c: @ 20ae46c :arm
	rsb     r0, r5, #0x8
	mov     r1, #0xff
	and     r0, r2, r1, asr r0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20ae47c


.arm
Function_20ae47c: @ 20ae47c :arm
	ldr     r1, [r0]
	ldrh    r2, [r1], #0x2
	str     r1, [r0]
	mov     r0, r2
	bx      lr
@ 0x20ae490


.arm
Function_20ae490: @ 20ae490 :arm
	cmp     r0, #0x0
	cmpne   r1, #0x0
	moveq   r0, #0x0
	bxeq    lr
	ldrb    r0, [r0]
	cmp     r0, #0x4a
	beq     branch_20ae4d4
	cmp     r0, #0x4d
	beq     branch_20ae4c0
	cmp     r0, #0x56
	beq     branch_20ae4d4
	b       branch_20ae4e8
@ 0x20ae4c0

.arm
branch_20ae4c0: @ 20ae4c0 :arm
	ldrb    r0, [r1, #0x18]
	mov     r0, r0, lsl #1
	add     r0, r0, #0x1c
	bic     r0, r0, #0x3
	bx      lr

branch_20ae4d4: @ 20ae4d4 :arm
	ldrb    r0, [r1, #0x17]
	mov     r0, r0, lsl #1
	add     r0, r0, #0x1c
	bic     r0, r0, #0x3
	bx      lr

branch_20ae4e8: @ 20ae4e8 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20ae4f0


.arm
.globl Function_20ae4f0
Function_20ae4f0: @ 20ae4f0 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r12, #0x0
	str     r12, [r0]
	str     r1, [r0, #0x8]
	str     r12, [r0, #0x10]
	mov     r4, #0x7f
	strb    r4, [r0, #0x18]
	mov     r4, #1, 20 @ #0x1000
	str     r4, [r0, #0x4]
	str     r3, [r0, #0x14]
	strb    r12, [r0, #0x19]
	ldr     r3, [pc, #0x60] @ [0x20ae584] (=Unknown_2100ec8)
	str     r12, [r0, #0xc]
	ldr     r7, [r3]
	cmp     r7, #0x0
	ldmlsfd sp!, {r3-r7,pc}
	ldrb    r6, [r1]
	ldr     r4, [pc, #0x4c] @ [0x20ae588] (=Unknown_2100eec)
branch_20ae538: @ 20ae538 :arm
	ldrb    r3, [r4, r12, lsl #0x3]
	mov     r5, r12, lsl #3
	cmp     r6, r3
	bne     branch_20ae574
	add     r3, r4, r5
	ldrh    lr, [r1, #0x2]
	ldrh    r3, [r3, #0x2]
	cmp     lr, r3
	bne     branch_20ae574
	ldr     r3, [pc, #0x28] @ [0x20ae58c] (=Unknown_2100ef0)
	ldr     r3, [r3, r5]
	cmp     r3, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	blx     r3
	ldmfd   sp!, {r3-r7,pc}

branch_20ae574: @ 20ae574 :arm
	add     r12, r12, #0x1
	cmp     r12, r7
	blo     branch_20ae538
	ldmfd   sp!, {r3-r7,pc}
@ 0x20ae584

.word Unknown_2100ec8 @ 0x20ae584
.word Unknown_2100eec @ 0x20ae588
.word Unknown_2100ef0 @ 0x20ae58c



.arm
.globl Function_20ae590
Function_20ae590: @ 20ae590 :arm
	cmp     r1, #0x0
	bxlt    lr
	ldrb    r2, [r0, #0x19]
	cmp     r1, r2
	bxge    lr
	add     r2, r0, r1, lsl #1
	ldrh    r2, [r2, #0x1a]
	mov     r3, r1, lsl #1
	tst     r2, #1, 24 @ #0x100
	bxeq    lr
	add     r1, r0, #0x1a
	ldrh    r0, [r1, r3]
	bic     r0, r0, #2, 24 @ #0x200
	strh    r0, [r1, r3]
	bx      lr
@ 0x20ae5cc


.arm
.globl Function_20ae5cc
Function_20ae5cc: @ 20ae5cc :arm
	cmp     r1, #0x0
	bxlt    lr
	ldrb    r2, [r0, #0x19]
	cmp     r1, r2
	bxge    lr
	add     r2, r0, r1, lsl #1
	ldrh    r2, [r2, #0x1a]
	mov     r3, r1, lsl #1
	tst     r2, #1, 24 @ #0x100
	bxeq    lr
	add     r1, r0, #0x1a
	ldrh    r0, [r1, r3]
	orr     r0, r0, #2, 24 @ #0x200
	strh    r0, [r1, r3]
	bx      lr
@ 0x20ae608


.arm
.globl Function_20ae608
Function_20ae608: @ 20ae608 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	mov     r1, r5
	mov     r0, #0x0
	mov     r2, #0x54
	bl      MIi_CpuClear32
	ldr     r0, [pc, #0x24] @ [0x20ae650] (=Unknown_2100ee8)
	ldr     r1, [pc, #0x24] @ [0x20ae654] (=Unknown_2100ee4)
	ldr     r2, [r0]
	ldr     r0, [pc, #0x20] @ [0x20ae658] (=Unknown_2100ee0)
	str     r2, [r5, #0xc]
	ldr     r1, [r1]
	str     r1, [r5, #0x14]
	ldr     r0, [r0]
	str     r0, [r5, #0x1c]
	str     r4, [r5, #0x4]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20ae650

.word Unknown_2100ee8 @ 0x20ae650
.word Unknown_2100ee4 @ 0x20ae654
.word Unknown_2100ee0 @ 0x20ae658



.arm
Function_20ae65c: @ 20ae65c :arm
	ldr     r12, [r0]
	cmp     r12, #0x0
	streq   r1, [r0]
	bxeq    lr
	ldr     r2, [r12, #0x10]
	cmp     r2, #0x0
	bne     branch_20ae6bc
	ldrb    r3, [r12, #0x18]
	ldrb    r2, [r1, #0x18]
	cmp     r3, r2
	bls     branch_20ae6b4
	ldr     r2, [r1, #0x10]
	mov     r3, r1
	cmp     r2, #0x0
	beq     branch_20ae6a8
.arm
branch_20ae698: @ 20ae698 :arm
	ldr     r3, [r3, #0x10]
	ldr     r2, [r3, #0x10]
	cmp     r2, #0x0
	bne     branch_20ae698
.arm
branch_20ae6a8: @ 20ae6a8 :arm
	str     r12, [r3, #0x10]
	str     r1, [r0]
	bx      lr
@ 0x20ae6b4

.arm
branch_20ae6b4: @ 20ae6b4 :arm
	str     r1, [r12, #0x10]
	bx      lr
@ 0x20ae6bc

.arm
branch_20ae6bc: @ 20ae6bc :arm
	beq     branch_20ae70c
	ldrb    r3, [r1, #0x18]
.arm
branch_20ae6c4: @ 20ae6c4 :arm
	ldrb    r0, [r2, #0x18]
	cmp     r0, r3
	blo     branch_20ae6fc
	ldr     r0, [r1, #0x10]
	mov     r3, r1
	cmp     r0, #0x0
	beq     branch_20ae6f0
.arm
branch_20ae6e0: @ 20ae6e0 :arm
	ldr     r3, [r3, #0x10]
	ldr     r0, [r3, #0x10]
	cmp     r0, #0x0
	bne     branch_20ae6e0
.arm
branch_20ae6f0: @ 20ae6f0 :arm
	str     r1, [r12, #0x10]
	str     r2, [r3, #0x10]
	bx      lr
@ 0x20ae6fc

.arm
branch_20ae6fc: @ 20ae6fc :arm
	mov     r12, r2
	ldr     r2, [r2, #0x10]
	cmp     r2, #0x0
	bne     branch_20ae6c4
.arm
branch_20ae70c: @ 20ae70c :arm
	str     r1, [r12, #0x10]
	bx      lr
@ 0x20ae714

.arm
Function_20ae714: @ 20ae714 :arm
	stmfd   sp!, {r3-r5,lr}
	cmp     r1, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	mov     r3, #0x1
	mov     r4, #0x0
.arm
branch_20ae728: @ 20ae728 :arm
	ldrb    r2, [r1, #0x19]
	mov     r5, r4
	cmp     r2, #0x0
	ble     branch_20ae76c
.arm
branch_20ae738: @ 20ae738 :arm
	add     r2, r1, r5, lsl #1
	ldrh    r2, [r2, #0x1a]
	tst     r2, #1, 24 @ #0x100
	beq     branch_20ae75c
	mov     lr, r5, asr #5
	ldr     r12, [r0, lr, lsl #0x2]
	and     r2, r5, #0x1f
	orr     r2, r12, r3, lsl r2
	str     r2, [r0, lr, lsl #0x2]
.arm
branch_20ae75c: @ 20ae75c :arm
	ldrb    r2, [r1, #0x19]
	add     r5, r5, #0x1
	cmp     r5, r2
	blt     branch_20ae738
.arm
branch_20ae76c: @ 20ae76c :arm
	ldr     r1, [r1, #0x10]
	cmp     r1, #0x0
	bne     branch_20ae728
	ldmfd   sp!, {r3-r5,pc}
@ 0x20ae77c


.arm
.globl Function_20ae77c
Function_20ae77c: @ 20ae77c :arm
	stmfd   sp!, {r3-r5,lr}
	movs    r4, r1
	mov     r5, r0
	ldrne   r0, [r4, #0x8]
	cmpne   r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	ldrb    r0, [r0]
	cmp     r0, #0x4a
	beq     branch_20ae7cc
	cmp     r0, #0x4d
	beq     branch_20ae7b4
	cmp     r0, #0x56
	beq     branch_20ae7e4
	ldmfd   sp!, {r3-r5,pc}
@ 0x20ae7b4

.arm
branch_20ae7b4: @ 20ae7b4 :arm
	add     r0, r5, #0x3c
	bl      Function_20ae714
	mov     r1, r4
	add     r0, r5, #0x8
	bl      Function_20ae65c
	ldmfd   sp!, {r3-r5,pc}
@ 0x20ae7cc

.arm
branch_20ae7cc: @ 20ae7cc :arm
	add     r0, r5, #0x44
	bl      Function_20ae714
	mov     r1, r4
	add     r0, r5, #0x10
	bl      Function_20ae65c
	ldmfd   sp!, {r3-r5,pc}
@ 0x20ae7e4

.arm
branch_20ae7e4: @ 20ae7e4 :arm
	add     r0, r5, #0x4c
	bl      Function_20ae714
	mov     r1, r4
	add     r0, r5, #0x18
	bl      Function_20ae65c
	ldmfd   sp!, {r3-r5,pc}
@ 0x20ae7fc


.arm
Function_20ae7fc: @ 20ae7fc :arm
	ldr     r3, [r0]
	cmp     r3, #0x0
	moveq   r0, #0x0
	bxeq    lr
	cmp     r3, r1
	bne     branch_20ae82c
	ldr     r3, [r3, #0x10]
	mov     r2, #0x0
	str     r3, [r0]
	str     r2, [r1, #0x10]
	mov     r0, #0x1
	bx      lr

branch_20ae82c: @ 20ae82c :arm
	ldr     r2, [r3, #0x10]
	cmp     r2, #0x0
	beq     branch_20ae868
branch_20ae838: @ 20ae838 :arm
	cmp     r2, r1
	bne     branch_20ae858
	ldr     r1, [r2, #0x10]
	mov     r0, #0x0
	str     r1, [r3, #0x10]
	str     r0, [r2, #0x10]
	mov     r0, #0x1
	bx      lr

branch_20ae858: @ 20ae858 :arm
	mov     r3, r2
	ldr     r2, [r2, #0x10]
	cmp     r2, #0x0
	bne     branch_20ae838
branch_20ae868: @ 20ae868 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20ae870


.arm
.globl Function_20ae870
Function_20ae870: @ 20ae870 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	add     r0, r5, #0x8
	mov     r4, r1
	bl      Function_20ae7fc
	cmp     r0, #0x0
	bne     branch_20ae8b4
	mov     r1, r4
	add     r0, r5, #0x10
	bl      Function_20ae7fc
	cmp     r0, #0x0
	bne     branch_20ae8b4
	mov     r1, r4
	add     r0, r5, #0x18
	bl      Function_20ae7fc
	cmp     r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
branch_20ae8b4: @ 20ae8b4 :arm
	ldr     r0, [r5]
	orr     r0, r0, #0x10
	str     r0, [r5]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20ae8c4


.arm
.globl Function_20ae8c4
Function_20ae8c4: @ 20ae8c4 :arm
	cmp     r0, #0x0
	ldrneh  r0, [r0, #0xc]
	movne   r0, r0, lsl #3
	moveq   r0, #0x0
	bx      lr
@ 0x20ae8d8


.arm
Function_20ae8d8: @ 20ae8d8 :arm
	cmp     r0, #0x0
	ldrneh  r0, [r0, #0x1c]
	movne   r0, r0, lsl #3
	moveq   r0, #0x0
	bx      lr
@ 0x20ae8ec


.arm
.globl Function_20ae8ec
Function_20ae8ec: @ 20ae8ec :arm
	cmp     r1, #0x0
	strne   r1, [r0, #0x8]
	cmp     r2, #0x0
	strne   r2, [r0, #0x18]
	bx      lr
@ 0x20ae900


.arm
.globl Function_20ae900
Function_20ae900: @ 20ae900 :arm
	stmfd   sp!, {r3-r9,lr}
	movs    r8, r1
	mov     r9, r0
	beq     branch_20ae914
	bl      GX_BeginLoadTex
branch_20ae914: @ 20ae914 :arm

	ldrh    r0, [r9, #0xc]
	movs    r2, r0, lsl #3
	beq     branch_20ae944
	ldr     r0, [r9, #0x8]
	ldr     r3, [r9, #0x14]
	mov     r1, r0, lsl #16
	add     r0, r9, r3
	mov     r1, r1, lsr #13
	bl      GX_LoadTex
	ldrh    r0, [r9, #0x10]
	orr     r0, r0, #0x1
	strh    r0, [r9, #0x10]
branch_20ae944: @ 20ae944 :arm
	ldrh    r0, [r9, #0x1c]
	movs    r6, r0, lsl #3
	beq     branch_20ae9a4
	ldr     r1, [r9, #0x18]
	ldr     r0, [r9, #0x24]
	mov     r4, r1, lsl #16
	mov     r7, r4, lsr #13
	mov     r1, r7
	mov     r2, r6
	add     r0, r9, r0
	ldr     r5, [r9, #0x28]
	bl      GX_LoadTex
	ldr     r0, [pc, #0x38] @ [0x20ae9b4] (=0x1ffff)
	and     r1, r7, #0x40000
	and     r0, r0, r4, lsr #13
	mov     r0, r0, lsr #1
	add     r2, r0, #0x20000
	add     r0, r9, r5
	add     r1, r2, r1, lsr #2
	mov     r2, r6, lsr #1
	bl      GX_LoadTex
	ldrh    r0, [r9, #0x20]
	orr     r0, r0, #0x1
	strh    r0, [r9, #0x20]
branch_20ae9a4: @ 20ae9a4 :arm
	cmp     r8, #0x0
	ldmeqfd sp!, {r3-r9,pc}

	bl      GX_EndLoadTex
	ldmfd   sp!, {r3-r9,pc}
@ 0x20ae9b4

.word 0x1ffff @ 0x20ae9b4



.arm
.globl Function_20ae9b8
Function_20ae9b8: @ 20ae9b8 :arm
	cmp     r1, #0x0
	beq     branch_20ae9dc
	ldrh    r12, [r0, #0x10]
	mov     r3, #0x0
	bic     r12, r12, #0x1
	strh    r12, [r0, #0x10]
	ldr     r12, [r0, #0x8]
	str     r12, [r1]
	str     r3, [r0, #0x8]
.arm
branch_20ae9dc: @ 20ae9dc :arm
	cmp     r2, #0x0
	bxeq    lr
	ldrh    r3, [r0, #0x20]
	mov     r1, #0x0
	bic     r3, r3, #0x1
	strh    r3, [r0, #0x20]
	ldr     r3, [r0, #0x18]
	str     r3, [r2]
	str     r1, [r0, #0x18]
	bx      lr
@ 0x20aea04


.arm
.globl Function_20aea04
Function_20aea04: @ 20aea04 :arm
	cmp     r0, #0x0
	ldrneh  r0, [r0, #0x30]
	movne   r0, r0, lsl #3
	moveq   r0, #0x0
	bx      lr
@ 0x20aea18


.arm
.globl Function_20aea18
Function_20aea18: @ 20aea18 :arm
	str     r1, [r0, #0x2c]
	bx      lr
@ 0x20aea20


.arm
.globl Function_20aea20
Function_20aea20: @ 20aea20 :arm
	stmfd   sp!, {r3-r5,lr}
	movs    r5, r1
	mov     r4, r0
	beq     branch_20aea34
	bl      GX_BeginLoadTexPltt
branch_20aea34: @ 20aea34 :arm
	ldr     r0, [r4, #0x2c]
	ldrh    r2, [r4, #0x30]
	mov     r1, r0, lsl #16
	ldr     r3, [r4, #0x38]
	mov     r1, r1, lsr #13
	add     r0, r4, r3
	mov     r2, r2, lsl #3
	bl      GX_LoadTexPltt
	ldrh    r0, [r4, #0x32]
	cmp     r5, #0x0
	orr     r0, r0, #0x1
	strh    r0, [r4, #0x32]
	ldmeqfd sp!, {r3-r5,pc}
	bl      GX_EndLoadTexPltt
	ldmfd   sp!, {r3-r5,pc}
@ 0x20aea70


.arm
.globl Function_20aea70
Function_20aea70: @ 20aea70 :arm
	ldrh    r2, [r0, #0x32]
	mov     r1, #0x0
	bic     r2, r2, #0x1
	strh    r2, [r0, #0x32]
	ldr     r2, [r0, #0x2c]
	str     r1, [r0, #0x2c]
	mov     r0, r2
	bx      lr
@ 0x20aea90


/* Input:
r0: Model + ?
*/
.arm
Function_20aea90: @ 20aea90 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r9, r1
	mov     r8, r3
	ldr     r1, [r8]
	mov     r10, r0
	and     r0, r1, #0x1c000000
	ldrh    r3, [r9]
	cmp     r0, #0x14000000
	mov     r5, #0x0
	add     r0, r10, r3
	str     r0, [sp]
	ldrne   r0, [r2, #0x8]
	ldreq   r0, [r2, #0x18]
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bic     r11, r0, #0xe0000000
	ldrb    r0, [r9, #0x2]
	cmp     r0, #0x0
	bls     branch_20aebac

	add     r4, r10, #0x4
branch_20aeae0: @ 20aeae0 :arm
	ldr     r0, [sp]
	cmp     r10, #0x0
	ldrb    r2, [r0, r5]
	beq     branch_20aeb30

	cmp     r4, #0x0
	beq     branch_20aeb1c

	ldrb    r0, [r10, #0x5]
	cmp     r2, r0
	bhs     branch_20aeb1c

	ldrh    r0, [r10, #0xa]
	add     r1, r4, r0
	add     r1, r1, #0x4
	ldrh    r0, [r4, r0]
	mla     r1, r0, r2, r1
	b       branch_20aeb20

branch_20aeb1c: @ 20aeb1c :arm
	mov     r1, #0x0
branch_20aeb20: @ 20aeb20 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r7, r10, r0
	bne     branch_20aeb34

branch_20aeb30: @ 20aeb30 :arm
	mov     r7, #0x0
branch_20aeb34: @ 20aeb34 :arm
	ldr     r0, [r8]
	ldr     r1, [r7, #0x14]
	add     r0, r0, r11
	orr     r0, r1, r0
	str     r0, [r7, #0x14]
	ldr     r3, [r8, #0x4]
	ldr     r0, =0x7ff
	ldrh    r1, [r7, #0x20]
	and     r2, r3, r0
	and     r0, r3, r0, lsl #11
	mov     r6, r0, lsr #11
	cmp     r2, r1
	moveq   r0, #0x1000
	beq     branch_20aeb78
	mov     r0, r2, lsl #12
	mov     r1, r1, lsl #12
	bl      FX_Div
branch_20aeb78: @ 20aeb78 :arm

	str     r0, [r7, #0x24]
	ldrh    r1, [r7, #0x22]
	cmp     r6, r1
	moveq   r0, #0x1000
	beq     branch_20aeb98
	mov     r0, r6, lsl #12
	mov     r1, r1, lsl #12
	bl      FX_Div
branch_20aeb98: @ 20aeb98 :arm

	str     r0, [r7, #0x28]
	ldrb    r0, [r9, #0x2]
	add     r5, r5, #0x1
	cmp     r5, r0
	blo     branch_20aeae0

branch_20aebac: @ 20aebac :arm
	ldrb    r0, [r9, #0x3]
	orr     r0, r0, #0x1
	strb    r0, [r9, #0x3]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20aebbc

.pool



.arm
Function_20aebc0: @ 20aebc0 :arm
	stmfd   sp!, {r3-r9,lr}
	ldrh    r3, [r1]
	ldrb    r2, [r1, #0x2]
	mov     lr, #0x0
	add     r12, r0, r3
	cmp     r2, #0x0
	bls     branch_20aec64
	ldr     r4, [pc, #0x90] @ [0x20aec74] (=0xc00f0000)
	add     r2, r0, #0x4
	mov     r7, lr
	mov     r6, lr
	mov     r5, #1, 20 @ #0x1000
.arm
branch_20aebf0: @ 20aebf0 :arm
	cmp     r0, #0x0
	ldrb    r3, [r12, lr]
	beq     branch_20aec3c
	cmp     r2, #0x0
	beq     branch_20aec28
	ldrb    r8, [r0, #0x5]
	cmp     r3, r8
	bhs     branch_20aec28
	ldrh    r9, [r0, #0xa]
	ldrh    r8, [r2, r9]
	add     r9, r2, r9
	add     r9, r9, #0x4
	mla     r3, r8, r3, r9
	b       branch_20aec2c
@ 0x20aec28

.arm
branch_20aec28: @ 20aec28 :arm
	mov     r3, r7
.arm
branch_20aec2c: @ 20aec2c :arm
	cmp     r3, #0x0
	ldrne   r3, [r3]
	addne   r8, r0, r3
	bne     branch_20aec40
.arm
branch_20aec3c: @ 20aec3c :arm
	mov     r8, r6
.arm
branch_20aec40: @ 20aec40 :arm
	ldr     r3, [r8, #0x14]
	add     lr, lr, #0x1
	and     r3, r3, r4
	str     r3, [r8, #0x14]
	str     r5, [r8, #0x24]
	str     r5, [r8, #0x28]
	ldrb    r3, [r1, #0x2]
	cmp     lr, r3
	blo     branch_20aebf0
.arm
branch_20aec64: @ 20aec64 :arm
	ldrb    r0, [r1, #0x3]
	bic     r0, r0, #0x1
	strb    r0, [r1, #0x3]
	ldmfd   sp!, {r3-r9,pc}
@ 0x20aec74

.word 0xc00f0000 @ 0x20aec74



/* Input:
r0: Ptr to Model?
r1: ?
*/
.arm
Function_20aec78: @ 20aec78 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r1
	cmp     r0, #0x0
	ldrne   r1, [r0, #0x8]
	mov     r7, #0x1
	cmpne   r1, #0x0
	addne   r8, r0, r1      @ Model + ?
	moveq   r8, #0x0
	ldrh    r0, [r8]
	mov     r6, #0x0
	add     r5, r8, r0
	ldrb    r0, [r5, #0x1]
	cmp     r0, #0x0
	bls     branch_20aed70

	mov     r9, r6
	mov     r4, r6
	mov     r11, r6
branch_20aecbc: @ 20aecbc :arm
	cmp     r5, #0x0
	beq     branch_20aece8

	ldrb    r0, [r5, #0x1]
	cmp     r6, r0
	bhs     branch_20aece8

	ldrh    r0, [r5, #0x6]
	add     r1, r5, r0
	ldrh    r0, [r1, #0x2]
	add     r0, r1, r0
	add     r1, r0, r9
	b       branch_20aecec

branch_20aece8: @ 20aece8 :arm
	mov     r1, r4
branch_20aecec: @ 20aecec :arm
	cmp     r10, #0x0
	moveq   r3, r11
	beq     branch_20aed04
	add     r0, r10, #0x3c
	bl      Function_20b38e4
	mov     r3, r0
branch_20aed04: @ 20aed04 :arm

	cmp     r3, #0x0
	beq     branch_20aed58

	cmp     r5, #0x0
	beq     branch_20aed38

	ldrb    r0, [r5, #0x1]
	cmp     r6, r0
	bhs     branch_20aed38

	ldrh    r1, [r5, #0x6]
	ldrh    r0, [r5, r1]
	add     r1, r5, r1
	add     r1, r1, #0x4
	mla     r1, r0, r6, r1
	b       branch_20aed3c

branch_20aed38: @ 20aed38 :arm
	mov     r1, #0x0
branch_20aed3c: @ 20aed3c :arm
	ldrb    r0, [r1, #0x3]
	tst     r0, #0x1
	bne     branch_20aed5c

	mov     r0, r8
	mov     r2, r10
	bl      Function_20aea90
	b       branch_20aed5c

branch_20aed58: @ 20aed58 :arm
	mov     r7, #0x0
branch_20aed5c: @ 20aed5c :arm
	ldrb    r0, [r5, #0x1]
	add     r6, r6, #0x1
	add     r9, r9, #0x10
	cmp     r6, r0
	blo     branch_20aecbc

branch_20aed70: @ 20aed70 :arm
	mov     r0, r7
	ldmfd   sp!, {r3-r11,pc}
@ 0x20aed78


.arm
.globl Function_20aed78
Function_20aed78: @ 20aed78 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r12, r1
	cmp     r0, #0x0
	ldrne   r1, [r0, #0x8]
	cmpne   r1, #0x0
	addne   r0, r0, r1
	moveq   r0, #0x0
	ldrh    r1, [r0]
	cmp     r12, #0x0
	add     r1, r0, r1
	beq     branch_20aedd8
	adds    r5, r12, #0x3c
	beq     branch_20aedd0
	ldrb    r4, [r12, #0x3d]
	cmp     r3, r4
	bhs     branch_20aedd0
	ldrh    lr, [r12, #0x42]
	ldrh    r4, [r5, lr]
	add     lr, r5, lr
	add     lr, lr, #0x4
	mla     r3, r4, r3, lr
	b       branch_20aeddc

branch_20aedd0: @ 20aedd0 :arm
	mov     r3, #0x0
	b       branch_20aeddc

branch_20aedd8: @ 20aedd8 :arm
	mov     r3, #0x0
branch_20aeddc: @ 20aeddc :arm
	cmp     r1, #0x0
	beq     branch_20aee08
	ldrb    r4, [r1, #0x1]
	cmp     r2, r4
	bhs     branch_20aee08
	ldrh    r4, [r1, #0x6]
	ldrh    lr, [r1, r4]
	add     r1, r1, r4
	add     r1, r1, #0x4
	mla     r1, lr, r2, r1
	b       branch_20aee0c

branch_20aee08: @ 20aee08 :arm
	mov     r1, #0x0
branch_20aee0c: @ 20aee0c :arm
	cmp     r1, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	mov     r2, r12
	bl      Function_20aea90
	mov     r0, #0x1
	ldmfd   sp!, {r3-r5,pc}
@ 0x20aee28


.arm
.globl Function_20aee28
Function_20aee28: @ 20aee28 :arm
	stmfd   sp!, {r3-r7,lr}
	cmp     r0, #0x0
	ldrne   r1, [r0, #0x8]
	mov     r5, #0x0
	cmpne   r1, #0x0
	addne   r6, r0, r1
	moveq   r6, #0x0
	ldrh    r0, [r6]
	add     r4, r6, r0
	ldrb    r0, [r4, #0x1]
	cmp     r0, #0x0
	ldmlsfd sp!, {r3-r7,pc}
	mov     r7, r5
.arm
branch_20aee5c: @ 20aee5c :arm
	cmp     r4, #0x0
	beq     branch_20aee88
	ldrb    r0, [r4, #0x1]
	cmp     r5, r0
	bhs     branch_20aee88
	ldrh    r1, [r4, #0x6]
	ldrh    r0, [r4, r1]
	add     r1, r4, r1
	add     r1, r1, #0x4
	mla     r1, r0, r5, r1
	b       branch_20aee8c
@ 0x20aee88

.arm
branch_20aee88: @ 20aee88 :arm
	mov     r1, r7
.arm
branch_20aee8c: @ 20aee8c :arm
	ldrb    r0, [r1, #0x3]
	tst     r0, #0x1
	beq     branch_20aeea0
	mov     r0, r6
	bl      Function_20aebc0
.arm
branch_20aeea0: @ 20aeea0 :arm
	ldrb    r0, [r4, #0x1]
	add     r5, r5, #0x1
	cmp     r5, r0
	blo     branch_20aee5c
	ldmfd   sp!, {r3-r7,pc}
@ 0x20aeeb4


.arm
Function_20aeeb4: @ 20aeeb4 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r2, [r2, #0x2c]
	ldrh    r5, [r1]
	mov     r2, r2, lsl #16
	mov     r2, r2, lsr #16
	ldrh    r4, [r3, #0x2]
	bic     r2, r2, #0xe0000000
	mov     r2, r2, lsl #16
	tst     r4, #0x1
	add     r12, r0, r5
	mov     r5, r2, lsr #16
	ldrh    r4, [r3]
	bne     branch_20aeef8
	mov     r2, r4, lsl #15
	mov     r3, r5, lsl #15
	mov     r4, r2, lsr #16
	mov     r5, r3, lsr #16
branch_20aeef8: @ 20aeef8 :arm
	ldrb    r2, [r1, #0x2]
	mov     r3, #0x0
	cmp     r2, #0x0
	bls     branch_20aef84
	add     r2, r4, r5
	mov     lr, r2, lsl #16
	add     r2, r0, #0x4
	mov     r4, lr, lsr #16
	mov     r6, r3
	mov     r5, r3
branch_20aef20: @ 20aef20 :arm
	cmp     r0, #0x0
	ldrb    r8, [r12, r3]
	beq     branch_20aef6c
	cmp     r2, #0x0
	beq     branch_20aef58
	ldrb    r7, [r0, #0x5]
	cmp     r8, r7
	bhs     branch_20aef58
	ldrh    r7, [r0, #0xa]
	ldrh    lr, [r2, r7]
	add     r7, r2, r7
	add     r7, r7, #0x4
	mla     r7, lr, r8, r7
	b       branch_20aef5c

branch_20aef58: @ 20aef58 :arm
	mov     r7, r6
branch_20aef5c: @ 20aef5c :arm
	cmp     r7, #0x0
	ldrne   lr, [r7]
	addne   r7, r0, lr
	bne     branch_20aef70
branch_20aef6c: @ 20aef6c :arm
	mov     r7, r5
branch_20aef70: @ 20aef70 :arm
	strh    r4, [r7, #0x1c]
	ldrb    lr, [r1, #0x2]
	add     r3, r3, #0x1
	cmp     r3, lr
	blo     branch_20aef20
branch_20aef84: @ 20aef84 :arm
	ldrb    r0, [r1, #0x3]
	orr     r0, r0, #0x1
	strb    r0, [r1, #0x3]
	ldmfd   sp!, {r4-r8,pc}
@ 0x20aef94


/* Input:
r0: Ptr to Model?
r1: ?
*/
.arm
Function_20aef94: @ 20aef94 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r1
	cmp     r0, #0x0
	ldrne   r1, [r0, #0x8]
	mov     r7, #0x1
	cmpne   r1, #0x0
	addne   r8, r0, r1
	moveq   r8, #0x0
	ldrh    r0, [r8, #0x2]
	mov     r6, #0x0
	add     r5, r8, r0
	ldrb    r0, [r5, #0x1]
	cmp     r0, #0x0
	bls     branch_20af094

	mov     r9, r6
	mov     r4, r6
	mov     r11, r6
branch_20aefd8: @ 20aefd8 :arm
	cmp     r5, #0x0
	beq     branch_20af004

	ldrb    r0, [r5, #0x1]
	cmp     r6, r0
	bhs     branch_20af004

	ldrh    r0, [r5, #0x6]
	add     r1, r5, r0
	ldrh    r0, [r1, #0x2]
	add     r0, r1, r0
	add     r1, r0, r9
	b       branch_20af008

branch_20af004: @ 20af004 :arm
	mov     r1, r4
branch_20af008: @ 20af008 :arm
	cmp     r10, #0x0
	ldrneh  r0, [r10, #0x34]
	cmpne   r0, #0x0
	moveq   r3, r11
	beq     branch_20af028
	add     r0, r10, r0
	bl      Function_20b38e4
	mov     r3, r0
branch_20af028: @ 20af028 :arm

	cmp     r3, #0x0
	beq     branch_20af07c

	cmp     r5, #0x0
	beq     branch_20af05c

	ldrb    r0, [r5, #0x1]
	cmp     r6, r0
	bhs     branch_20af05c

	ldrh    r1, [r5, #0x6]
	ldrh    r0, [r5, r1]
	add     r1, r5, r1
	add     r1, r1, #0x4
	mla     r1, r0, r6, r1
	b       branch_20af060

branch_20af05c: @ 20af05c :arm
	mov     r1, #0x0
branch_20af060: @ 20af060 :arm
	ldrb    r0, [r1, #0x3]
	tst     r0, #0x1
	bne     branch_20af080

	mov     r0, r8
	mov     r2, r10
	bl      Function_20aeeb4
	b       branch_20af080

branch_20af07c: @ 20af07c :arm
	mov     r7, #0x0
branch_20af080: @ 20af080 :arm
	ldrb    r0, [r5, #0x1]
	add     r6, r6, #0x1
	add     r9, r9, #0x10
	cmp     r6, r0
	blo     branch_20aefd8
branch_20af094: @ 20af094 :arm
	mov     r0, r7
	ldmfd   sp!, {r3-r11,pc}
@ 0x20af09c


.arm
.globl Function_20af09c
Function_20af09c: @ 20af09c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r12, r1
	cmp     r0, #0x0
	ldrne   r1, [r0, #0x8]
	cmpne   r1, #0x0
	addne   r0, r0, r1
	moveq   r0, #0x0
	ldrh    r1, [r0, #0x2]
	cmp     r12, #0x0
	ldrneh  r4, [r12, #0x34]
	add     r1, r0, r1
	cmpne   r4, #0x0
	beq     branch_20af104
	adds    r5, r12, r4
	beq     branch_20af0fc
	ldrb    r4, [r5, #0x1]
	cmp     r3, r4
	bhs     branch_20af0fc
	ldrh    lr, [r5, #0x6]
	ldrh    r4, [r5, lr]
	add     lr, r5, lr
	add     lr, lr, #0x4
	mla     r3, r4, r3, lr
	b       branch_20af108

branch_20af0fc: @ 20af0fc :arm
	mov     r3, #0x0
	b       branch_20af108

branch_20af104: @ 20af104 :arm
	mov     r3, #0x0
branch_20af108: @ 20af108 :arm
	cmp     r1, #0x0
	beq     branch_20af134
	ldrb    r4, [r1, #0x1]
	cmp     r2, r4
	bhs     branch_20af134
	ldrh    r4, [r1, #0x6]
	ldrh    lr, [r1, r4]
	add     r1, r1, r4
	add     r1, r1, #0x4
	mla     r1, lr, r2, r1
	b       branch_20af138

branch_20af134: @ 20af134 :arm
	mov     r1, #0x0
branch_20af138: @ 20af138 :arm
	cmp     r1, #0x0
	beq     branch_20af15c
	ldrb    r2, [r1, #0x3]
	tst     r2, #0x1
	bne     branch_20af15c
	mov     r2, r12
	bl      Function_20aeeb4
	mov     r0, #0x1
	ldmfd   sp!, {r3-r5,pc}

branch_20af15c: @ 20af15c :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20af164


.arm
.globl Function_20af164
Function_20af164: @ 20af164 :arm
	cmp     r0, #0x0
	ldrne   r1, [r0, #0x8]
	mov     r12, #0x0
	cmpne   r1, #0x0
	addne   r1, r0, r1
	moveq   r1, #0x0
	ldrh    r0, [r1, #0x2]
	add     r3, r1, r0
	ldrb    r0, [r3, #0x1]
	cmp     r0, #0x0
	bxls    lr
	mov     r1, r12
branch_20af194: @ 20af194 :arm
	cmp     r3, #0x0
	beq     branch_20af1c0
	ldrb    r0, [r3, #0x1]
	cmp     r12, r0
	bhs     branch_20af1c0
	ldrh    r2, [r3, #0x6]
	ldrh    r0, [r3, r2]
	add     r2, r3, r2
	add     r2, r2, #0x4
	mla     r2, r0, r12, r2
	b       branch_20af1c4

branch_20af1c0: @ 20af1c0 :arm
	mov     r2, r1
branch_20af1c4: @ 20af1c4 :arm
	ldrb    r0, [r2, #0x3]
	add     r12, r12, #0x1
	tst     r0, #0x1
	bicne   r0, r0, #0x1
	strneb  r0, [r2, #0x3]
	ldrb    r0, [r3, #0x1]
	cmp     r12, r0
	blo     branch_20af194
	bx      lr
@ 0x20af1e8


/* Input:
r0: Ptr to DataPart of File (BMD0)
*/
arm_func_start Function_20af1e8
Function_20af1e8: @ 20af1e8 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r0
	ldrb    r0, [r10, #MDL_HeaderSize+G3DResDict_Num]
	mov     r9, r1
	mov     r7, #0x1
	cmp     r0, #0x0
	mov     r6, #0x0
	bls     branch_20af290

	add     r5, r10, #MDL_HeaderSize
	mov     r4, r6
	mov     r11, r6
branch_20af214_loop: @ 20af214 :arm
	cmp     r10, #0x0
	beq     branch_20af25c

	cmp     r5, #0x0
	beq     branch_20af248

	ldrb    r0, [r10, #MDL_HeaderSize+G3DResDict_Num]
	cmp     r6, r0
	bhs     branch_20af248

	ldrh    r1, [r10, #MDL_HeaderSize+G3DResDict_RefOffsets]
	ldrh    r0, [r5, r1]            @ sizeunit
	add     r1, r5, r1
	add     r1, r1, #0x4
	mla     r1, r0, r6, r1
	b       branch_20af24c

branch_20af248: @ 20af248 :arm
	mov     r1, r4
branch_20af24c: @ 20af24c :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]                @ Load offset of Model
	addne   r8, r10, r0             @ Ptr to Model?
	bne     branch_20af260

branch_20af25c: @ 20af25c :arm
	mov     r8, r11
branch_20af260: @ 20af260 :arm
	mov     r0, r8                  @ Ptr to Model?
	mov     r1, r9
	bl      Function_20aec78
	and     r7, r7, r0

	mov     r0, r8                  @ Ptr to Model?
	mov     r1, r9
	bl      Function_20aef94

	ldrb    r1, [r10, #MDL_HeaderSize+G3DResDict_Num]
	add     r6, r6, #0x1
	and     r7, r7, r0
	cmp     r6, r1
	blo     branch_20af214_loop

branch_20af290: @ 20af290 :arm
	mov     r0, r7
	ldmfd   sp!, {r3-r11,pc}
arm_func_end Function_20af1e8


.arm
.globl Function_20af298
Function_20af298: @ 20af298 :arm
	stmfd   sp!, {r3-r9,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x9]
	mov     r5, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r3-r9,pc}

	add     r4, r6, #0x8
	mov     r8, r5
	mov     r7, r5
branch_20af2bc: @ 20af2bc :arm
	cmp     r6, #0x0
	beq     branch_20af304
	cmp     r4, #0x0
	beq     branch_20af2f0
	ldrb    r0, [r6, #0x9]
	cmp     r5, r0
	bhs     branch_20af2f0
	ldrh    r1, [r6, #0xe]
	ldrh    r0, [r4, r1]
	add     r1, r4, r1
	add     r1, r1, #0x4
	mla     r1, r0, r5, r1
	b       branch_20af2f4

branch_20af2f0: @ 20af2f0 :arm
	mov     r1, r8
branch_20af2f4: @ 20af2f4 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r9, r6, r0
	bne     branch_20af308
branch_20af304: @ 20af304 :arm
	mov     r9, r7
branch_20af308: @ 20af308 :arm
	mov     r0, r9
	bl      Function_20aee28
	mov     r0, r9
	bl      Function_20af164
	ldrb    r0, [r6, #0x9]
	add     r5, r5, #0x1
	cmp     r5, r0
	blo     branch_20af2bc
	ldmfd   sp!, {r3-r9,pc}
@ 0x20af32c


.arm
Function_20af32c: @ 20af32c :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x108] @ [0x20af440] (=0x17101610)
	ldr     r1, [pc, #0x108] @ [0x20af444] (=RAM_21c5a8c)
	mov     r0, #0x0
	str     r2, [r1]
	str     r0, [r1, #0x4]
	mov     r2, #0x2
	ldr     r0, [pc, #0xf8] @ [0x20af448] (=0x32323232)
	str     r2, [r1, #0x48]
	ldr     r2, [pc, #0xf4] @ [0x20af44c] (=0x60293130)
	str     r0, [r1, #0x7c]
	ldr     r0, [pc, #0xf0] @ [0x20af450] (=0x33333333)
	str     r2, [r1, #0x90]
	ldr     r2, [pc, #0xec] @ [0x20af454] (=0x2a1b19)
	str     r0, [r1, #0xa4]
	ldr     r0, [pc, #0xe8] @ [0x20af458] (=RAM_21c5ad8)
	str     r2, [r1, #0xb8]
	bl      MTX_Identity43_
	ldr     r0, [pc, #0xe0] @ [0x20af45c] (=RAM_21c5a94)
	bl      MTX_Identity44_
	ldr     r12, [pc, #0xdc] @ [0x20af460] (=0x40000200)
	ldr     r3, [pc, #0xdc] @ [0x20af464] (=0xc0080000)
	ldr     r2, [pc, #0xdc] @ [0x20af468] (=0x2d8b62d8)
	ldr     r1, [pc, #0xb4] @ [0x20af444] (=RAM_21c5a8c)
	sub     r0, r12, #7, 2 @ #0xc0000001
	str     r2, [r1, #0x80]
	str     r12, [r1, #0x84]
	str     r0, [r1, #0x88]
	ldr     r2, [pc, #0xc8] @ [0x20af46c] (=0x4210c210)
	str     r3, [r1, #0x8c]
	str     r2, [r1, #0x94]
	ldr     r0, [pc, #0xc0] @ [0x20af470] (=0x1f008f)
	str     r2, [r1, #0x98]
	str     r0, [r1, #0x9c]
	sub     r2, r3, #9, 16 @ #0x90000
	ldr     r0, [pc, #0xb4] @ [0x20af474] (=0x7fff)
	str     r2, [r1, #0xa0]
	str     r0, [r1, #0xa8]
	mov     r2, #125, 2 @ #0x4000001f
	ldr     r0, [pc, #0xa8] @ [0x20af478] (=0x800003e0)
	str     r2, [r1, #0xac]
	str     r0, [r1, #0xb0]
	rsb     r0, r12, #126, 24 @ #0x7e00
	str     r0, [r1, #0xb4]
	mov     r2, #0x0
	str     r2, [r1, #0xe0]
	str     r2, [r1, #0xe4]
	ldr     r0, [pc, #0x8c] @ [0x20af47c] (=RAM_21c5b48)
	str     r2, [r1, #0xe8]
	bl      MTX_Identity33_
	mov     r1, #0x0
	ldr     r0, [pc, #0x44] @ [0x20af444] (=RAM_21c5a8c)
	mov     r2, #1, 20 @ #0x1000
	str     r2, [r0, #0xec]
	str     r2, [r0, #0xf0]
	str     r2, [r0, #0xf4]
	str     r1, [r0, #0xf8]
	str     r1, [r0, #0xfc]
	str     r1, [r0, #0x248]
	str     r1, [r0, #0x244]
	str     r1, [r0, #0x240]
	str     r1, [r0, #0x254]
	str     r1, [r0, #0x24c]
	str     r2, [r0, #0x250]
	str     r1, [r0, #0x25c]
	str     r1, [r0, #0x258]
	sub     r1, r1, #1, 20 @ #0x1000
	str     r1, [r0, #0x260]
	ldmfd   sp!, {r3,pc}
@ 0x20af440

.word 0x17101610 @ 0x20af440
.word RAM_21c5a8c @ 0x20af444
.word 0x32323232 @ 0x20af448
.word 0x60293130 @ 0x20af44c
.word 0x33333333 @ 0x20af450
.word 0x2a1b19 @ 0x20af454
.word RAM_21c5ad8 @ 0x20af458
.word RAM_21c5a94 @ 0x20af45c
.word 0x40000200 @ 0x20af460
.word 0xc0080000 @ 0x20af464
.word 0x2d8b62d8 @ 0x20af468
.word 0x4210c210 @ 0x20af46c
.word 0x1f008f @ 0x20af470
.word 0x7fff @ 0x20af474
.word 0x800003e0 @ 0x20af478
.word RAM_21c5b48 @ 0x20af47c



.arm
.globl Function_20af480
Function_20af480: @ 20af480 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x28] @ [0x20af4b4] (=RAM_21c5a8c)
	ldr     r1, [pc, #0x28] @ [0x20af4b8] (=RAM_21c5a8c)
	ldr     r0, [r0]
	add     r1, r1, #0x4
	mov     r2, #0x3e
	bl      Function_20b275c
	ldr     r0, [pc, #0x10] @ [0x20af4b4] (=RAM_21c5a8c)
	ldr     r1, [r0, #0xfc]
	bic     r1, r1, #0x1
	bic     r1, r1, #0x2
	str     r1, [r0, #0xfc]
	ldmfd   sp!, {r3,pc}
@ 0x20af4b4

.word RAM_21c5a8c @ 0x20af4b4
.word RAM_21c5a8c @ 0x20af4b8



.arm
.globl Function_20af4bc
Function_20af4bc: @ 20af4bc :arm
	cmp     r0, #0x0
	bxeq    lr
	ldr     r3, [pc, #0x18] @ [0x20af4e4] (=RAM_21c5b6c)
	ldmia   r0, {r0-r2}
	stmia   r3, {r0-r2}
	ldr     r0, [pc, #0x10] @ [0x20af4e8] (=RAM_21c5a8c)
	ldr     r1, [r0, #0xfc]
	bic     r1, r1, #0xa4
	str     r1, [r0, #0xfc]
	bx      lr
@ 0x20af4e4

.word RAM_21c5b6c @ 0x20af4e4
.word RAM_21c5a8c @ 0x20af4e8



.arm
.globl Function_20af4ec
Function_20af4ec: @ 20af4ec :arm
	cmp     r0, #0x0
	bxeq    lr
	ldr     r3, [pc, #0x18] @ [0x20af514] (=RAM_21c5b78)
	ldmia   r0, {r0-r2}
	stmia   r3, {r0-r2}
	ldr     r0, [pc, #0x10] @ [0x20af518] (=RAM_21c5a8c)
	ldr     r1, [r0, #0xfc]
	bic     r1, r1, #0xa4
	str     r1, [r0, #0xfc]
	bx      lr
@ 0x20af514

.word RAM_21c5b78 @ 0x20af514
.word RAM_21c5a8c @ 0x20af518



.arm
.globl Function_20af51c
Function_20af51c: @ 20af51c :arm
	stmfd   sp!, {r3,lr}
	ldr     r12, [pc, #0x28] @ [0x20af550] (=0x3ff)
	mov     r2, r2, asr #3
	mov     lr, r3, asr #3
	and     r3, r12, r1, asr #3
	mov     r1, r2, lsl #22
	mov     r2, lr, lsl #22
	orr     r1, r3, r1, lsr #12
	orr     r2, r1, r2, lsr #2
	ldr     r1, [pc, #0xc] @ [0x20af554] (=RAM_21c5b0c)
	orr     r2, r2, r0, lsl #30
	str     r2, [r1, r0, lsl #0x2]
	ldmfd   sp!, {r3,pc}
@ 0x20af550

.word 0x3ff @ 0x20af550
.word RAM_21c5b0c @ 0x20af554



.arm
.globl Function_20af558
Function_20af558: @ 20af558 :arm
	ldr     r2, [pc, #0x8] @ [0x20af568] (=RAM_21c5b34)
	orr     r1, r1, r0, lsl #30
	str     r1, [r2, r0, lsl #0x2]
	bx      lr
@ 0x20af568

.word RAM_21c5b34 @ 0x20af568



.arm
.globl Function_20af56c
Function_20af56c: @ 20af56c :arm
	cmp     r2, #0x0
	movne   r2, #0x1
	orr     r1, r0, r1, lsl #16
	moveq   r2, #0x0
	ldr     r0, [pc, #0x8] @ [0x20af58c] (=RAM_21c5a8c)
	orr     r1, r1, r2, lsl #15
	str     r1, [r0, #0x94]
	bx      lr
@ 0x20af58c

.word RAM_21c5a8c @ 0x20af58c



.arm
.globl Function_20af590
Function_20af590: @ 20af590 :arm
	cmp     r2, #0x0
	movne   r2, #0x1
	orr     r1, r0, r1, lsl #16
	moveq   r2, #0x0
	ldr     r0, [pc, #0x8] @ [0x20af5b0] (=RAM_21c5a8c)
	orr     r1, r1, r2, lsl #15
	str     r1, [r0, #0x98]
	bx      lr
@ 0x20af5b0

.word RAM_21c5a8c @ 0x20af5b0



.arm
.globl Function_20af5b4
Function_20af5b4: @ 20af5b4 :arm
	orr     r0, r0, r1, lsl #4
	ldr     r1, [sp, #0x4]
	orr     r0, r0, r2, lsl #6
	orr     r0, r1, r0
	ldr     r2, [sp]
	orr     r1, r0, r3, lsl #24
	ldr     r0, [pc, #0x8] @ [0x20af5dc] (=RAM_21c5a8c)
	orr     r1, r1, r2, lsl #16
	str     r1, [r0, #0x9c]
	bx      lr
@ 0x20af5dc

.word RAM_21c5a8c @ 0x20af5dc



.arm
.globl Function_20af5e0
Function_20af5e0: @ 20af5e0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x2c] @ [0x20af618] (=RAM_21c5a8c)
	ldr     r0, [r0, #0xfc]
	tst     r0, #0x8
	bne     branch_20af610

	ldr     r0, [pc, #0x20] @ [0x20af61c] (=RAM_21c5ad8)
	ldr     r1, [pc, #0x20] @ [0x20af620] (=RAM_21c5b8c)
	bl      MTX_Inverse43
	ldr     r0, [pc, #0x10] @ [0x20af618] (=RAM_21c5a8c)
	ldr     r1, [r0, #0xfc]
	orr     r1, r1, #0x8
	str     r1, [r0, #0xfc]

branch_20af610: @ 20af610 :arm
	ldr     r0, [pc, #0x8] @ [0x20af620] (=RAM_21c5b8c)
	ldmfd   sp!, {r3,pc}
@ 0x20af618

.word RAM_21c5a8c @ 0x20af618
.word RAM_21c5ad8 @ 0x20af61c
.word RAM_21c5b8c @ 0x20af620



.arm
Function_20af624: @ 20af624 :arm
	stmfd   sp!, {r3,lr}

	ldr     r0, [pc, #0x38] @ [0x20af668] (=RAM_21c5b48)
	ldr     r1, [pc, #0x38] @ [0x20af66c] (=RAM_21c5ad8)
	ldr     r2, [pc, #0x38] @ [0x20af670] (=RAM_21c5bbc)
	bl      MTX_Concat43

	ldr     r3, [pc, #0x34] @ [0x20af674] (=RAM_21c5a8c)
	ldr     r0, [pc, #0x2c] @ [0x20af670] (=RAM_21c5bbc)
	ldr     r2, [r3, #0xf4]
	mov     r1, r0
	str     r2, [sp]
	ldr     r2, [r3, #0xec]
	ldr     r3, [r3, #0xf0]
	bl      MTX_ScaleApply43

	ldr     r0, [pc, #0x10] @ [0x20af670] (=RAM_21c5bbc)
	ldr     r1, [pc, #0x14] @ [0x20af678] (=RAM_21c5bec)
	bl      MTX_Inverse43

	ldmfd   sp!, {r3,pc}
@ 0x20af668

.word RAM_21c5b48 @ 0x20af668
.word RAM_21c5ad8 @ 0x20af66c
.word RAM_21c5bbc @ 0x20af670
.word RAM_21c5a8c @ 0x20af674
.word RAM_21c5bec @ 0x20af678



.arm
Function_20af67c: @ 20af67c :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x24] @ [0x20af6ac] (=RAM_21c5a8c)
	ldr     r0, [r0, #0xfc]
	tst     r0, #0x80
	bne     branch_20af6a4
	bl      Function_20af624
	ldr     r0, [pc, #0x10] @ [0x20af6ac] (=RAM_21c5a8c)
	ldr     r1, [r0, #0xfc]
	orr     r1, r1, #0x80
	str     r1, [r0, #0xfc]
branch_20af6a4: @ 20af6a4 :arm
	ldr     r0, [pc, #0x4] @ [0x20af6b0] (=RAM_21c5bbc)
	ldmfd   sp!, {r3,pc}
@ 0x20af6ac

.word RAM_21c5a8c @ 0x20af6ac
.word RAM_21c5bbc @ 0x20af6b0



.arm
Function_20af6b4: @ 20af6b4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x24] @ [0x20af6e4] (=RAM_21c5a8c)
	ldr     r0, [r0, #0xfc]
	tst     r0, #0x80
	bne     branch_20af6dc
	bl      Function_20af624
	ldr     r0, [pc, #0x10] @ [0x20af6e4] (=RAM_21c5a8c)
	ldr     r1, [r0, #0xfc]
	orr     r1, r1, #0x80
	str     r1, [r0, #0xfc]
.arm
branch_20af6dc: @ 20af6dc :arm
	ldr     r0, [pc, #0x4] @ [0x20af6e8] (=RAM_21c5bec)
	ldmfd   sp!, {r3,pc}
@ 0x20af6e4

.word RAM_21c5a8c @ 0x20af6e4
.word RAM_21c5bec @ 0x20af6e8



.arm
Function_20af6ec: @ 20af6ec :arm
	cmp     r0, #0x0
	beq     branch_20af704
	ldr     r12, [pc, #0x60] @ [0x20af75c] (=RAM_21c5a8c)
	ldr     r12, [r12, #0xa0]
	and     r12, r12, #0xff
	str     r12, [r0]
.arm
branch_20af704: @ 20af704 :arm
	cmp     r1, #0x0
	beq     branch_20af720
	ldr     r0, [pc, #0x48] @ [0x20af75c] (=RAM_21c5a8c)
	ldr     r0, [r0, #0xa0]
	mov     r0, r0, lsr #8
	and     r0, r0, #0xff
	str     r0, [r1]
.arm
branch_20af720: @ 20af720 :arm
	cmp     r2, #0x0
	beq     branch_20af73c
	ldr     r0, [pc, #0x2c] @ [0x20af75c] (=RAM_21c5a8c)
	ldr     r0, [r0, #0xa0]
	mov     r0, r0, lsr #16
	and     r0, r0, #0xff
	str     r0, [r2]
.arm
branch_20af73c: @ 20af73c :arm
	cmp     r3, #0x0
	bxeq    lr
	ldr     r0, [pc, #0x10] @ [0x20af75c] (=RAM_21c5a8c)
	ldr     r0, [r0, #0xa0]
	mov     r0, r0, lsr #24
	and     r0, r0, #0xff
	str     r0, [r3]
	bx      lr
@ 0x20af75c

.word RAM_21c5a8c @ 0x20af75c



.arm
Function_20af760: @ 20af760 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r6, r0
	movs    r5, r1
	mov     r4, r2
	mov     r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	mov     r7, #0x1
.arm
branch_20af77c: @ 20af77c :arm
	ldrb    r1, [r5, #0x19]
	cmp     r4, r1
	bhs     branch_20af7bc
	add     r1, r5, r4, lsl #1
	ldrh    r2, [r1, #0x1a]
	and     r1, r2, #3, 24 @ #0x300
	cmp     r1, #1, 24 @ #0x100
	bne     branch_20af7bc
	ldr     r3, [r5, #0xc]
	cmp     r3, #0x0
	beq     branch_20af7bc
	mov     r0, r6
	mov     r1, r5
	and     r2, r2, #0xff
	blx     r3
	mov     r0, r7
.arm
branch_20af7bc: @ 20af7bc :arm
	ldr     r5, [r5, #0x10]
	cmp     r5, #0x0
	bne     branch_20af77c
	ldmfd   sp!, {r3-r7,pc}
@ 0x20af7cc

.arm
Function_20af7cc: @ 20af7cc :arm
	cmp     r3, #0x0
	beq     branch_20af7fc
	ldr     r1, [r0]
	add     r1, r1, r2
	str     r1, [r0]
	ldr     r1, [r0, #0x4]
	add     r1, r1, r2
	str     r1, [r0, #0x4]
	ldr     r1, [r0, #0x8]
	add     r1, r1, r2
	str     r1, [r0, #0x8]
	bx      lr
@ 0x20af7fc

.arm
branch_20af7fc: @ 20af7fc :arm
	ldr     r3, [r1]
	ldr     r12, [r0]
	mul     r3, r2, r3
	add     r3, r12, r3, asr #12
	str     r3, [r0]
	ldr     r3, [r1, #0x4]
	ldr     r12, [r0, #0x4]
	mul     r3, r2, r3
	add     r3, r12, r3, asr #12
	str     r3, [r0, #0x4]
	ldr     r1, [r1, #0x8]
	ldr     r3, [r0, #0x8]
	mul     r1, r2, r1
	add     r1, r3, r1, asr #12
	str     r1, [r0, #0x8]
	bx      lr
@ 0x20af83c

.arm
Function_20af83c: @ 20af83c :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x70
	movs    r9, r1
	mov     r10, r0
	mov     r8, r2
	addeq   sp, sp, #0x70
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r11,pc}
	ldr     r2, [r9, #0x10]
	cmp     r2, #0x0
	bne     branch_20af8c8
	ldrb    r2, [r9, #0x19]
	cmp     r8, r2
	bhs     branch_20af8bc
	add     r2, r9, r8, lsl #1
	ldrh    r4, [r2, #0x1a]
	and     r2, r4, #3, 24 @ #0x300
	cmp     r2, #1, 24 @ #0x100
	bne     branch_20af8b0
	ldr     r3, [r9, #0xc]
	cmp     r3, #0x0
	addeq   sp, sp, #0x70
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r11,pc}
	and     r2, r4, #0xff
	blx     r3
	add     sp, sp, #0x70
	mov     r0, #0x1
	ldmfd   sp!, {r3-r11,pc}
@ 0x20af8b0

.arm
branch_20af8b0: @ 20af8b0 :arm
	add     sp, sp, #0x70
	mov     r0, #0x0
	ldmfd   sp!, {r3-r11,pc}
@ 0x20af8bc

.arm
branch_20af8bc: @ 20af8bc :arm
	add     sp, sp, #0x70
	mov     r0, #0x0
	ldmfd   sp!, {r3-r11,pc}
@ 0x20af8c8

.arm
branch_20af8c8: @ 20af8c8 :arm
	mov     r5, #0x0
	mov     r3, r5
	mov     r6, r5
	mov     r2, r9
.arm
branch_20af8d8: @ 20af8d8 :arm
	ldrb    r0, [r2, #0x19]
	cmp     r8, r0
	bhs     branch_20af918
	add     r0, r2, r8, lsl #1
	ldrh    r0, [r0, #0x1a]
	and     r0, r0, #3, 24 @ #0x300
	cmp     r0, #1, 24 @ #0x100
	bne     branch_20af918
	ldr     r0, [r2, #0x4]
	cmp     r0, #1, 20 @ #0x1000
	addgt   r5, r5, #1, 20 @ #0x1000
	bgt     branch_20af910
	cmp     r0, #0x0
	addgt   r5, r5, r0
.arm
branch_20af910: @ 20af910 :arm
	mov     r1, r2
	add     r3, r3, #0x1
.arm
branch_20af918: @ 20af918 :arm
	ldr     r2, [r2, #0x10]
	cmp     r2, #0x0
	bne     branch_20af8d8
	cmp     r5, #0x0
	addeq   sp, sp, #0x70
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r11,pc}
	cmp     r3, #0x1
	bne     branch_20af970
	ldr     r3, [r1, #0xc]
	add     r0, r1, r8, lsl #1
	cmp     r3, #0x0
	ldrh    r2, [r0, #0x1a]
	addeq   sp, sp, #0x70
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r11,pc}
	mov     r0, r10
	and     r2, r2, #0xff
	blx     r3
	add     sp, sp, #0x70
	mov     r0, #0x1
	ldmfd   sp!, {r3-r11,pc}
@ 0x20af970

.arm
branch_20af970: @ 20af970 :arm
	mov     r1, r10
	mov     r0, #0x0
	mov     r2, #0x58
	bl      MIi_CpuClearFast
	mvn     r0, #0x0
	str     r0, [r10]
	add     r11, sp, #0x40
	add     r4, sp, #0x18
.arm
branch_20af990: @ 20af990 :arm
	ldrb    r0, [r9, #0x19]
	cmp     r8, r0
	bhs     branch_20afb74
	add     r0, r9, r8, lsl #1
	ldrh    r1, [r0, #0x1a]
	and     r0, r1, #3, 24 @ #0x300
	cmp     r0, #1, 24 @ #0x100
	bne     branch_20afb74
	ldr     r0, [r9, #0x4]
	cmp     r0, #0x0
	ble     branch_20afb74
	ldr     r3, [r9, #0xc]
	cmp     r3, #0x0
	beq     branch_20afb74
	and     r2, r1, #0xff
	mov     r0, r4
	mov     r1, r9
	blx     r3
	cmp     r6, #0x0
	bne     branch_20afa00
	mov     r0, r11
	add     r1, sp, #0xc
	mov     r2, #0xc
	bl      MI_CpuCopy32
	add     r0, sp, #0x58
	add     r1, sp, #0x0
	mov     r2, #0xc
	bl      MI_CpuCopy32
.arm
branch_20afa00: @ 20afa00 :arm
	cmp     r5, #1, 20 @ #0x1000
	ldreq   r7, [r9, #0x4]
	beq     branch_20afa1c
	ldr     r0, [r9, #0x4]
	mov     r1, r5
	bl      FX_Div
	mov     r7, r0
.arm
branch_20afa1c: @ 20afa1c :arm
	ldr     r3, [sp, #0x18]
	add     r0, r10, #0x4
	add     r1, sp, #0x1c
	mov     r2, r7
	and     r3, r3, #0x1
	bl      Function_20af7cc
	ldr     r3, [sp, #0x18]
	add     r0, r10, #0x10
	add     r1, sp, #0x28
	mov     r2, r7
	and     r3, r3, #0x8
	bl      Function_20af7cc
	ldr     r3, [sp, #0x18]
	add     r0, r10, #0x1c
	add     r1, sp, #0x34
	mov     r2, r7
	and     r3, r3, #0x10
	bl      Function_20af7cc
	ldr     r0, [sp, #0x18]
	tst     r0, #0x4
	bne     branch_20afac4
	ldr     r2, [r10, #0x4c]
	ldr     r0, [sp, #0x64]
	smull   r1, r0, r7, r0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	add     r0, r2, r1
	str     r0, [r10, #0x4c]
	ldr     r2, [r10, #0x50]
	ldr     r0, [sp, #0x68]
	smull   r1, r0, r7, r0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	add     r0, r2, r1
	str     r0, [r10, #0x50]
	ldr     r2, [r10, #0x54]
	ldr     r0, [sp, #0x6c]
	smull   r1, r0, r7, r0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	add     r0, r2, r1
	str     r0, [r10, #0x54]
.arm
branch_20afac4: @ 20afac4 :arm
	ldr     r0, [sp, #0x18]
	tst     r0, #0x2
	bne     branch_20afb4c
	ldr     r1, [r10, #0x28]
	ldr     r0, [sp, #0x40]
	mul     r0, r7, r0
	add     r0, r1, r0, asr #12
	str     r0, [r10, #0x28]
	ldr     r1, [r10, #0x2c]
	ldr     r0, [sp, #0x44]
	mul     r0, r7, r0
	add     r0, r1, r0, asr #12
	str     r0, [r10, #0x2c]
	ldr     r1, [r10, #0x30]
	ldr     r0, [sp, #0x48]
	mul     r0, r7, r0
	add     r0, r1, r0, asr #12
	str     r0, [r10, #0x30]
	ldr     r1, [r10, #0x34]
	ldr     r0, [sp, #0x4c]
	mul     r0, r7, r0
	add     r0, r1, r0, asr #12
	str     r0, [r10, #0x34]
	ldr     r1, [r10, #0x38]
	ldr     r0, [sp, #0x50]
	mul     r0, r7, r0
	add     r0, r1, r0, asr #12
	str     r0, [r10, #0x38]
	ldr     r1, [r10, #0x3c]
	ldr     r0, [sp, #0x54]
	mul     r0, r7, r0
	add     r0, r1, r0, asr #12
	str     r0, [r10, #0x3c]
	b       branch_20afb64
@ 0x20afb4c

.arm
branch_20afb4c: @ 20afb4c :arm
	ldr     r0, [r10, #0x28]
	add     r0, r0, r7
	str     r0, [r10, #0x28]
	ldr     r0, [r10, #0x38]
	add     r0, r0, r7
	str     r0, [r10, #0x38]
.arm
branch_20afb64: @ 20afb64 :arm
	ldr     r1, [r10]
	ldr     r0, [sp, #0x18]
	and     r0, r1, r0
	str     r0, [r10]
.arm
branch_20afb74: @ 20afb74 :arm
	ldr     r9, [r9, #0x10]
	add     r6, r6, #0x1
	cmp     r9, #0x0
	bne     branch_20af990
	add     r0, r10, #0x28
	add     r1, r10, #0x34
	add     r2, r10, #0x40
	bl      VEC_CrossProduct
	ldr     r0, [r10, #0x28]
	cmp     r0, #0x0
	ldreq   r0, [r10, #0x2c]
	cmpeq   r0, #0x0
	ldreq   r0, [r10, #0x30]
	cmpeq   r0, #0x0
	bne     branch_20afbc4
	add     r0, sp, #0xc
	add     r1, r10, #0x28
	mov     r2, #0xc
	bl      MI_CpuCopy32
	b       branch_20afbd0
@ 0x20afbc4

.arm
branch_20afbc4: @ 20afbc4 :arm
	add     r0, r10, #0x28
	mov     r1, r0
	bl      VEC_Normalize
.arm
branch_20afbd0: @ 20afbd0 :arm
	ldr     r0, [r10, #0x40]
	cmp     r0, #0x0
	ldreq   r0, [r10, #0x44]
	cmpeq   r0, #0x0
	ldreq   r0, [r10, #0x48]
	cmpeq   r0, #0x0
	bne     branch_20afc00
	add     r0, sp, #0x0
	add     r1, r10, #0x40
	mov     r2, #0xc
	bl      MI_CpuCopy32
	b       branch_20afc0c
@ 0x20afc00

.arm
branch_20afc00: @ 20afc00 :arm
	add     r0, r10, #0x40
	mov     r1, r0
	bl      VEC_Normalize
.arm
branch_20afc0c: @ 20afc0c :arm
	add     r0, r10, #0x40
	add     r1, r10, #0x28
	add     r2, r10, #0x34
	bl      VEC_CrossProduct
	mov     r0, #0x1
	add     sp, sp, #0x70
	ldmfd   sp!, {r3-r11,pc}
@ 0x20afc28

.arm
Function_20afc28: @ 20afc28 :arm
	stmfd   sp!, {r3-r8,lr}
	sub     sp, sp, #0x4
	mov     r7, r0
	mov     r0, #0x0
	mov     r6, r1
	mov     r5, r2
	str     r0, [r7]
	add     r4, sp, #0x0
	mov     r8, #0x1
.arm
branch_20afc4c: @ 20afc4c :arm
	ldrb    r1, [r6, #0x19]
	cmp     r5, r1
	bhs     branch_20afc9c
	add     r1, r6, r5, lsl #1
	ldrh    r2, [r1, #0x1a]
	and     r1, r2, #3, 24 @ #0x300
	cmp     r1, #1, 24 @ #0x100
	bne     branch_20afc9c
	ldr     r3, [r6, #0xc]
	cmp     r3, #0x0
	beq     branch_20afc9c
	mov     r0, r4
	mov     r1, r6
	and     r2, r2, #0xff
	blx     r3
	ldr     r2, [r7]
	ldr     r1, [sp]
	mov     r0, r8
	orr     r1, r2, r1
	str     r1, [r7]
branch_20afc9c: @ 20afc9c :arm
	ldr     r6, [r6, #0x10]
	cmp     r6, #0x0
	bne     branch_20afc4c
	add     sp, sp, #0x4
	ldmfd   sp!, {r3-r8,pc}
@ 0x20afcb0


.arm
Function_20afcb0: @ 20afcb0 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r5, [pc, #0x38] @ [0x20afcf4] (=JumpTable_2101064)
	mov     r4, r0
branch_20afcbc: @ 20afcbc :arm
	ldr     r1, [r4, #0x8]
	mov     r0, r4
	bic     r1, r1, #0x40
	str     r1, [r4, #0x8]
	ldr     r1, [r4]
	ldrb    r3, [r1]
	and     r1, r3, #0x1f
	ldr     r2, [r5, r1, lsl #0x2]
	and     r1, r3, #0xe0
	blx     r2
Function_20afce4: @ 20afce4 :arm
	ldr     r0, [r4, #0x8]
	tst     r0, #0x20
	beq     branch_20afcbc
	ldmfd   sp!, {r3-r5,pc}
@ 0x20afcf4

.word JumpTable_2101064 @ 0x20afcf4



.arm
Function_20afcf8: @ 20afcf8 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	mov     r1, r5
	mov     r0, #0x0
	mov     r2, #98, 30 @ #0x188
	bl      MIi_CpuClearFast
	mov     r0, #0x1
	str     r0, [r5, #0xc4]
	str     r0, [r5, #0x8]
	ldr     r0, [r4, #0x30]
	ldr     r2, [pc, #0x15c] @ [0x20afe88] (=Unknown_2100f48)
	cmp     r0, #0x0
	ldreq   r1, [r4, #0x4]
	ldreq   r0, [r1, #0x4]
	addeq   r0, r1, r0
	str     r0, [r5]
	str     r4, [r5, #0x4]
	ldr     r0, [r4, #0x4]
	cmp     r0, #0x0
	addne   r0, r0, #0x40
	moveq   r0, #0x0
	str     r0, [r5, #0xd4]
	ldr     r1, [r4, #0x4]
	cmp     r1, #0x0
	ldrne   r0, [r1, #0x8]
	cmpne   r0, #0x0
	addne   r0, r1, r0
	moveq   r0, #0x0
	str     r0, [r5, #0xd8]
	ldr     r1, [r4, #0x4]
	cmp     r1, #0x0
	ldrne   r0, [r1, #0xc]
	cmpne   r0, #0x0
	addne   r0, r1, r0
	moveq   r0, #0x0
	str     r0, [r5, #0xdc]
	ldr     r0, [r4, #0x4]
	ldr     r1, [pc, #0xf4] @ [0x20afe8c] (=Unknown_2100f3c)
	ldrb    r3, [r0, #0x15]
	ldr     r0, [pc, #0xf0] @ [0x20afe90] (=Unknown_2100f54)
	ldr     r2, [r2, r3, lsl #0x2]
	str     r2, [r5, #0xe8]
	ldr     r2, [r4, #0x4]
	ldrb    r2, [r2, #0x15]
	ldr     r1, [r1, r2, lsl #0x2]
	str     r1, [r5, #0xec]
	ldr     r1, [r4, #0x4]
	ldrb    r1, [r1, #0x16]
	ldr     r0, [r0, r1, lsl #0x2]
	str     r0, [r5, #0xf0]
	ldr     r0, [r4, #0x4]
	ldr     r0, [r0, #0x1c]
	str     r0, [r5, #0xe0]
	ldr     r0, [r4, #0x4]
	ldr     r0, [r0, #0x20]
	str     r0, [r5, #0xe4]
	ldr     r1, [r4, #0x20]
	cmp     r1, #0x0
	beq     branch_20afe0c
	ldrb    r0, [r4, #0x24]
	cmp     r0, #0x20
	bhs     branch_20afe0c
	add     r0, r5, r0, lsl #2
	str     r1, [r0, #0xc]
	ldrb    r0, [r4, #0x24]
	ldrb    r1, [r4, #0x25]
	add     r0, r5, r0
	strb    r1, [r0, #0x8c]
.arm
branch_20afe0c: @ 20afe0c :arm
	ldr     r0, [r4]
	tst     r0, #0x1
	ldrne   r0, [r5, #0x8]
	orrne   r0, r0, #0x80
	strne   r0, [r5, #0x8]
	ldr     r0, [r4]
	tst     r0, #0x2
	ldrne   r0, [r5, #0x8]
	orrne   r0, r0, #1, 24 @ #0x100
	strne   r0, [r5, #0x8]
	ldr     r0, [r4]
	tst     r0, #0x4
	ldrne   r0, [r5, #0x8]
	orrne   r0, r0, #2, 24 @ #0x200
	strne   r0, [r5, #0x8]
	ldr     r0, [r4]
	tst     r0, #0x8
	ldrne   r0, [r5, #0x8]
	orrne   r0, r0, #1, 22 @ #0x400
	strne   r0, [r5, #0x8]
	ldr     r1, [r4, #0x28]
	cmp     r1, #0x0
	beq     branch_20afe70
	mov     r0, r5
	blx     r1
branch_20afe70: @ 20afe70 :arm
	mov     r0, r5
	bl      Function_20afcb0
	ldr     r0, [r4]
	bic     r0, r0, #0x1
	str     r0, [r4]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20afe88

.word Unknown_2100f48 @ 0x20afe88
.word Unknown_2100f3c @ 0x20afe8c
.word Unknown_2100f54 @ 0x20afe90



.arm
Function_20afe94: @ 20afe94 :arm
	stmfd   sp!, {r3-r5,lr}
	cmp     r1, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	mov     r3, #0x1
	mov     r4, #0x0
branch_20afea8: @ 20afea8 :arm
	ldrb    r2, [r1, #0x19]
	mov     r5, r4
	cmp     r2, #0x0
	ble     branch_20afeec
branch_20afeb8: @ 20afeb8 :arm
	add     r2, r1, r5, lsl #1
	ldrh    r2, [r2, #0x1a]
	tst     r2, #1, 24 @ #0x100
	beq     branch_20afedc
	mov     lr, r5, asr #5
	ldr     r12, [r0, lr, lsl #0x2]
	and     r2, r5, #0x1f
	orr     r2, r12, r3, lsl r2
	str     r2, [r0, lr, lsl #0x2]
branch_20afedc: @ 20afedc :arm
	ldrb    r2, [r1, #0x19]
	add     r5, r5, #0x1
	cmp     r5, r2
	blt     branch_20afeb8
branch_20afeec: @ 20afeec :arm
	ldr     r1, [r1, #0x10]
	cmp     r1, #0x0
	bne     branch_20afea8
	ldmfd   sp!, {r3-r5,pc}
@ 0x20afefc


.arm
.globl Function_20afefc
Function_20afefc: @ 20afefc :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #98, 30 @ #0x188
	mov     r4, r0
	ldr     r0, [r4]
	and     r0, r0, #0x10
	cmp     r0, #0x10
	bne     branch_20aff90
	add     r1, r4, #0x3c
	mov     r0, #0x0
	mov     r2, #0x8
	bl      MIi_CpuClear32
	add     r1, r4, #0x44
	mov     r0, #0x0
	mov     r2, #0x8
	bl      MIi_CpuClear32
	add     r1, r4, #0x4c
	mov     r0, #0x0
	mov     r2, #0x8
	bl      MIi_CpuClear32
	ldr     r1, [r4, #0x8]
	cmp     r1, #0x0
	beq     branch_20aff5c
	add     r0, r4, #0x3c
	bl      Function_20afe94
branch_20aff5c: @ 20aff5c :arm
	ldr     r1, [r4, #0x10]
	cmp     r1, #0x0
	beq     branch_20aff70
	add     r0, r4, #0x44
	bl      Function_20afe94
branch_20aff70: @ 20aff70 :arm
	ldr     r1, [r4, #0x18]
	cmp     r1, #0x0
	beq     branch_20aff84
	add     r0, r4, #0x4c
	bl      Function_20afe94
branch_20aff84: @ 20aff84 :arm
	ldr     r0, [r4]
	bic     r0, r0, #0x10
	str     r0, [r4]
branch_20aff90: @ 20aff90 :arm
	ldr     r2, [pc, #0x3c] @ [0x20affd4] (=RAM_21c5cf0)
	ldr     r0, [r2]
	cmp     r0, #0x0
	beq     branch_20affb0
	mov     r1, r4
	bl      Function_20afcf8
	add     sp, sp, #98, 30 @ #0x188
	ldmfd   sp!, {r4,pc}

branch_20affb0: @ 20affb0 :arm
	add     r0, sp, #0x0
	mov     r1, r4
	str     r0, [r2]
	bl      Function_20afcf8
	ldr     r0, [pc, #0xc] @ [0x20affd4] (=RAM_21c5cf0)
	mov     r1, #0x0
	str     r1, [r0]
	add     sp, sp, #98, 30 @ #0x188
	ldmfd   sp!, {r4,pc}
@ 0x20affd4

.word RAM_21c5cf0 @ 0x20affd4


.arm
Function_20affd8: @ 20affd8 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r1, [r4, #0xc]
	cmp     r1, #0x0
	beq     branch_20afff0
	blx     r1
.arm
branch_20afff0: @ 20afff0 :arm
	ldr     r0, [r4]
	add     r0, r0, #0x1
	str     r0, [r4]
	ldmfd   sp!, {r4,pc}
@ 0x20b0000

.arm
Function_20b0000: @ 20b0000 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r1, [r4, #0x10]
	cmp     r1, #0x0
	beq     branch_20b0018
	blx     r1
.arm
branch_20b0018: @ 20b0018 :arm
	ldr     r0, [r4, #0x8]
	orr     r0, r0, #0x20
	str     r0, [r4, #0x8]
	ldmfd   sp!, {r4,pc}
@ 0x20b0028

.arm
Function_20b0028: @ 20b0028 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldr     r0, [r6, #0x8]
	tst     r0, #2, 24 @ #0x200
	bne     branch_20b0194
	ldr     r1, [r6]
	add     r0, r6, #97, 30 @ #0x184
	ldrb    r4, [r1, #0x1]
	strb    r4, [r6, #0xac]
	ldr     r1, [r6, #0x8]
	orr     r1, r1, #0x4
	str     r1, [r6, #0x8]
	str     r0, [r6, #0xb8]
	ldr     r0, [r6, #0x14]
	cmp     r0, #0x0
	ldrneb  r5, [r6, #0x8e]
	moveq   r5, #0x0
	cmp     r5, #0x1
	bne     branch_20b00a8
	ldr     r1, [r6, #0x8]
	mov     r0, r6
	bic     r1, r1, #0x40
	str     r1, [r6, #0x8]
	ldr     r1, [r6, #0x14]
	blx     r1
	ldr     r0, [r6, #0x14]
	cmp     r0, #0x0
	ldrneb  r5, [r6, #0x8e]
	ldr     r0, [r6, #0x8]
	moveq   r5, #0x0
	and     r0, r0, #0x40
	b       branch_20b00ac
@ 0x20b00a8

.arm
branch_20b00a8: @ 20b00a8 :arm
	mov     r0, #0x0
.arm
branch_20b00ac: @ 20b00ac :arm
	cmp     r0, #0x0
	bne     branch_20b010c
	ldr     r12, [r6, #0x4]
	ldr     r1, [r12, #0x18]
	cmp     r1, #0x0
	beq     branch_20b00f8
	mov     r0, r4, lsr #5
	add     r0, r12, r0, lsl #2
	ldr     r0, [r0, #0x4c]
	and     r2, r4, #0x1f
	mov     r3, #0x1
	tst     r0, r3, lsl r2
	beq     branch_20b00f8
	ldr     r0, [r6, #0xb8]
	ldr     r3, [r12, #0x1c]
	mov     r2, r4
	blx     r3
	cmp     r0, #0x0
	bne     branch_20b010c
.arm
branch_20b00f8: @ 20b00f8 :arm
	ldr     r1, [r6]
	ldr     r0, [r6, #0xb8]
	ldrb    r1, [r1, #0x2]
	and     r1, r1, #0x1
	str     r1, [r0]
.arm
branch_20b010c: @ 20b010c :arm
	cmp     r5, #0x2
	bne     branch_20b0148
	ldr     r1, [r6, #0x8]
	mov     r0, r6
	bic     r1, r1, #0x40
	str     r1, [r6, #0x8]
	ldr     r1, [r6, #0x14]
	blx     r1
	ldr     r0, [r6, #0x14]
	cmp     r0, #0x0
	ldrneb  r5, [r6, #0x8e]
	ldr     r0, [r6, #0x8]
	moveq   r5, #0x0
	and     r0, r0, #0x40
	b       branch_20b014c
@ 0x20b0148

.arm
branch_20b0148: @ 20b0148 :arm
	mov     r0, #0x0
.arm
branch_20b014c: @ 20b014c :arm
	cmp     r0, #0x0
	bne     branch_20b0174
	ldr     r0, [r6, #0xb8]
	ldr     r0, [r0]
	cmp     r0, #0x0
	ldr     r0, [r6, #0x8]
	orrne   r0, r0, #0x1
	strne   r0, [r6, #0x8]
	biceq   r0, r0, #0x1
	streq   r0, [r6, #0x8]
.arm
branch_20b0174: @ 20b0174 :arm
	cmp     r5, #0x3
	bne     branch_20b0194
	ldr     r1, [r6, #0x8]
	mov     r0, r6
	bic     r1, r1, #0x40
	str     r1, [r6, #0x8]
	ldr     r1, [r6, #0x14]
	blx     r1
.arm
branch_20b0194: @ 20b0194 :arm
	ldr     r0, [r6]
	add     r0, r0, #0x3
	str     r0, [r6]
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b01a4

.arm
Function_20b01a4: @ 20b01a4 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	ldr     r0, [r4, #0x8]
	tst     r0, #2, 24 @ #0x200
	bne     branch_20b0260
	tst     r0, #0x1
	beq     branch_20b0260
	ldr     r0, [r4, #0x18]
	cmp     r0, #0x0
	ldrneb  r5, [r4, #0x8f]
	moveq   r5, #0x0
	cmp     r5, #0x1
	bne     branch_20b020c
	ldr     r1, [r4, #0x8]
	mov     r0, r4
	bic     r1, r1, #0x40
	str     r1, [r4, #0x8]
	ldr     r1, [r4, #0x18]
	blx     r1
	ldr     r0, [r4, #0x18]
	cmp     r0, #0x0
	ldrneb  r5, [r4, #0x8f]
	ldr     r0, [r4, #0x8]
	moveq   r5, #0x0
	and     r0, r0, #0x40
	b       branch_20b0210
@ 0x20b020c

.arm
branch_20b020c: @ 20b020c :arm
	mov     r0, #0x0
.arm
branch_20b0210: @ 20b0210 :arm
	cmp     r0, #0x0
	bne     branch_20b0240
	ldr     r0, [r4]
	ldrb    r0, [r0, #0x1]
	str     r0, [sp]
	ldr     r0, [r4, #0x8]
	tst     r0, #1, 24 @ #0x100
	bne     branch_20b0240
	add     r1, sp, #0x0
	mov     r0, #0x14
	mov     r2, #0x1
	bl      Function_20b275c
.arm
branch_20b0240: @ 20b0240 :arm
	cmp     r5, #0x3
	bne     branch_20b0260
	ldr     r1, [r4, #0x8]
	mov     r0, r4
	bic     r1, r1, #0x40
	str     r1, [r4, #0x8]
	ldr     r1, [r4, #0x18]
	blx     r1
.arm
branch_20b0260: @ 20b0260 :arm
	ldr     r0, [r4]
	add     r0, r0, #0x2
	str     r0, [r4]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b0270


.arm
Function_20b0270: @ 20b0270 :arm
	stmfd   sp!, {r3-r8,lr}
	sub     sp, sp, #0x1c
	mov     r7, r0
	mov     r5, r3
	strb    r5, [r7, #0xad]
	ldr     r3, [r7, #0x8]
	add     r0, r7, #0xf4
	orr     r3, r3, #0x8
	str     r3, [r7, #0x8]
	str     r0, [r7, #0xb0]
	ldr     r0, [r7, #0x1c]
	mov     r8, r1
	cmp     r0, #0x0
	ldrneb  r4, [r7, #0x90]
	mov     r6, r2
	moveq   r4, #0x0
	cmp     r4, #0x1
	bne     branch_20b02ec
	ldr     r1, [r7, #0x8]
	mov     r0, r7
	bic     r1, r1, #0x40
	str     r1, [r7, #0x8]
	ldr     r1, [r7, #0x1c]
	blx     r1
	ldr     r0, [r7, #0x1c]
	cmp     r0, #0x0
	ldrneb  r4, [r7, #0x90]
	ldr     r0, [r7, #0x8]
	moveq   r4, #0x0
	and     r0, r0, #0x40
	b       branch_20b02f0
@ 0x20b02ec

.arm
branch_20b02ec: @ 20b02ec :arm
	mov     r0, #0x0
.arm
branch_20b02f0: @ 20b02f0 :arm
	cmp     r0, #0x0
	bne     branch_20b05d0
	ldr     r0, [r7, #0x4]
	ldr     r0, [r0, #0x38]
	cmp     r0, #0x0
	beq     branch_20b031c
	ldr     r1, [r7, #0x8]
	tst     r1, #0x80
	moveq   r1, #0x38
	mlaeq   r8, r5, r1, r0
	beq     branch_20b05cc
.arm
branch_20b031c: @ 20b031c :arm
	cmp     r8, #0x20
	cmpne   r8, #0x40
	bne     branch_20b0364
	mov     r1, r5, lsr #5
	add     r1, r7, r1, lsl #2
	ldr     r1, [r1, #0xbc]
	and     r2, r5, #0x1f
	mov     r3, #0x1
	tst     r1, r3, lsl r2
	beq     branch_20b0364
	cmp     r0, #0x0
	movne   r1, #0x38
	mlane   r8, r5, r1, r0
	bne     branch_20b05cc
	ldr     r1, [pc, #0x388] @ [0x20b06e4] (=RAM_21c5cf4)
	mov     r0, #0x38
	mla     r8, r5, r0, r1
	b       branch_20b05cc

branch_20b0364: @ 20b0364 :arm
	cmp     r0, #0x0
	beq     branch_20b039c
	add     r8, r7, #0xbc
	mov     r3, r5, lsr #5
	ldr     r2, [r8, r3, lsl #0x2]
	and     r0, r5, #0x1f
	mov     r1, #0x1
	orr     r0, r2, r1, lsl r0
	str     r0, [r8, r3, lsl #0x2]
	ldr     r1, [r7, #0x4]
	mov     r0, #0x38
	ldr     r1, [r1, #0x38]
	mla     r8, r5, r0, r1
	b       branch_20b03d0
@ 0x20b039c

.arm
branch_20b039c: @ 20b039c :arm
	cmp     r8, #0x40
	addne   r8, r7, #0xf4
	bne     branch_20b03d0
	add     lr, r7, #0xbc
	mov     r12, r5, lsr #5
	ldr     r1, [pc, #0x32c] @ [0x20b06e4] (=RAM_21c5cf4)
	ldr     r8, [lr, r12, lsl #0x2]
	mov     r0, #0x38
	and     r2, r5, #0x1f
	mov     r3, #0x1
	orr     r2, r8, r3, lsl r2
	mla     r8, r5, r0, r1
	str     r2, [lr, r12, lsl #0x2]
.arm
branch_20b03d0: @ 20b03d0 :arm
	mov     r0, #0x0
	str     r0, [r8]
	ldr     r3, [r7, #0xd8]
	cmp     r3, #0x0
	beq     branch_20b0424
	adds    r2, r3, #0x4
	beq     branch_20b0410
	ldrb    r0, [r3, #0x5]
	cmp     r5, r0
	bhs     branch_20b0410
	ldrh    r1, [r3, #0xa]
	ldrh    r0, [r2, r1]
	add     r1, r2, r1
	add     r1, r1, #0x4
	mla     r1, r0, r5, r1
	b       branch_20b0414
@ 0x20b0410

.arm
branch_20b0410: @ 20b0410 :arm
	mov     r1, #0x0
.arm
branch_20b0414: @ 20b0414 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r0, r3, r0
	bne     branch_20b0428
.arm
branch_20b0424: @ 20b0424 :arm
	mov     r0, #0x0
.arm
branch_20b0428: @ 20b0428 :arm
	ldrh    r0, [r0, #0x1e]
	ldr     r1, [pc, #0x2b4] @ [0x20b06e8] (=RAM_21c5a8c)
	tst     r0, #0x20
	ldrne   r0, [r8]
	orrne   r0, r0, #0x20
	strne   r0, [r8]
	ldrh    r2, [r6, #0x1e]
	ldr     r0, [pc, #0x2a0] @ [0x20b06ec] (=0x20f97d4)
	ldr     r12, [r1, #0x94]
	mov     r2, r2, asr #6
	and     r2, r2, #0x7
	ldr     lr, [r0, r2, lsl #0x2]
	ldr     r2, [r6, #0x4]
	mvn     r3, lr
	and     r3, r12, r3
	and     r2, r2, lr
	orr     r2, r3, r2
	str     r2, [r8, #0x4]
	ldrh    r12, [r6, #0x1e]
	ldr     r3, [r1, #0x98]
	ldr     r2, [r6, #0x8]
	mov     r12, r12, asr #9
	and     r12, r12, #0x7
	ldr     r12, [r0, r12, lsl #0x2]
	mvn     r0, r12
	and     r3, r3, r0
	and     r0, r2, r12
	orr     r0, r3, r0
	str     r0, [r8, #0x8]
	ldr     r3, [r6, #0x10]
	ldr     r0, [r6, #0xc]
	ldr     r2, [r1, #0x9c]
	mvn     r1, r3
	and     r1, r2, r1
	and     r0, r0, r3
	orr     r0, r1, r0
	str     r0, [r8, #0xc]
	ldr     r0, [r6, #0x14]
	str     r0, [r8, #0x10]
	ldrh    r0, [r6, #0x1c]
	str     r0, [r8, #0x14]
	ldrh    r0, [r6, #0x1e]
	tst     r0, #0x1
	beq     branch_20b0564
	tst     r0, #0x2
	ldrne   r1, [r8]
	add     r0, r6, #0x2c
	orrne   r1, r1, #0x1
	strne   r1, [r8]
	bne     branch_20b0504
	ldr     r1, [r0]
	str     r1, [r8, #0x18]
	ldr     r1, [r0, #0x4]
	add     r0, r0, #0x8
	str     r1, [r8, #0x1c]
.arm
branch_20b0504: @ 20b0504 :arm
	ldrh    r1, [r6, #0x1e]
	tst     r1, #0x4
	ldrne   r1, [r8]
	orrne   r1, r1, #0x2
	strne   r1, [r8]
	bne     branch_20b0530
	ldrsh   r1, [r0]
	strh    r1, [r8, #0x20]
	ldrsh   r1, [r0, #0x2]
	add     r0, r0, #0x4
	strh    r1, [r8, #0x22]
.arm
branch_20b0530: @ 20b0530 :arm
	ldrh    r1, [r6, #0x1e]
	tst     r1, #0x8
	ldrne   r0, [r8]
	orrne   r0, r0, #0x4
	strne   r0, [r8]
	bne     branch_20b0558
	ldr     r1, [r0]
	str     r1, [r8, #0x24]
	ldr     r0, [r0, #0x4]
	str     r0, [r8, #0x28]
.arm
branch_20b0558: @ 20b0558 :arm
	ldr     r0, [r8]
	orr     r0, r0, #0x8
	str     r0, [r8]
.arm
branch_20b0564: @ 20b0564 :arm
	ldr     r12, [r7, #0x4]
	ldr     r1, [r12, #0x8]
	cmp     r1, #0x0
	beq     branch_20b05a0
	mov     r0, r5, lsr #5
	add     r0, r12, r0, lsl #2
	ldr     r0, [r0, #0x3c]
	and     r2, r5, #0x1f
	mov     r3, #0x1
	tst     r0, r3, lsl r2
	beq     branch_20b05a0
	ldr     r3, [r12, #0xc]
	mov     r0, r8
	mov     r2, r5
	blx     r3
.arm
branch_20b05a0: @ 20b05a0 :arm
	ldr     r0, [r8]
	tst     r0, #0x18
	beq     branch_20b05cc
	ldrh    r0, [r6, #0x20]
	strh    r0, [r8, #0x2c]
	ldrh    r0, [r6, #0x22]
	strh    r0, [r8, #0x2e]
	ldr     r0, [r6, #0x24]
	str     r0, [r8, #0x30]
	ldr     r0, [r6, #0x28]
	str     r0, [r8, #0x34]
.arm
branch_20b05cc: @ 20b05cc :arm
	str     r8, [r7, #0xb0]
.arm
branch_20b05d0: @ 20b05d0 :arm
	cmp     r4, #0x2
	bne     branch_20b060c
	ldr     r1, [r7, #0x8]
	mov     r0, r7
	bic     r1, r1, #0x40
	str     r1, [r7, #0x8]
	ldr     r1, [r7, #0x1c]
	blx     r1
	ldr     r0, [r7, #0x1c]
	cmp     r0, #0x0
	ldrneb  r4, [r7, #0x90]
	ldr     r0, [r7, #0x8]
	moveq   r4, #0x0
	and     r0, r0, #0x40
	b       branch_20b0610
@ 0x20b060c

.arm
branch_20b060c: @ 20b060c :arm
	mov     r0, #0x0
.arm
branch_20b0610: @ 20b0610 :arm
	cmp     r0, #0x0
	bne     branch_20b06b8
	ldr     r5, [r7, #0xb0]
	ldr     r1, [r5, #0xc]
	tst     r1, #31, 16 @ #0x1f0000
	beq     branch_20b06ac
	ldr     r0, [r5]
	tst     r0, #0x20
	bicne   r0, r1, #31, 16 @ #0x1f0000
	strne   r0, [r5, #0xc]
	ldr     r0, [r7, #0x8]
	bic     r0, r0, #0x2
	str     r0, [r7, #0x8]
	tst     r0, #1, 24 @ #0x100
	bne     branch_20b06b8
	ldr     r0, [pc, #0x9c] @ [0x20b06f0] (=0x293130)
	ldr     r3, [pc, #0x9c] @ [0x20b06f4] (=0x2b2a)
	str     r0, [sp]
	ldr     r2, [r5, #0x4]
	add     r1, sp, #0x4
	str     r2, [sp, #0x4]
	ldr     r6, [r5, #0x8]
	mov     r2, #0x6
	str     r6, [sp, #0x8]
	ldr     r6, [r5, #0xc]
	str     r6, [sp, #0xc]
	str     r3, [sp, #0x10]
	ldr     r3, [r5, #0x10]
	str     r3, [sp, #0x14]
	ldr     r3, [r5, #0x14]
	str     r3, [sp, #0x18]
	bl      Function_20b275c
	ldr     r0, [r5]
	tst     r0, #0x18
	beq     branch_20b06b8
	ldr     r1, [r7, #0xf0]
	mov     r0, r5
	blx     r1
	b       branch_20b06b8
@ 0x20b06ac

.arm
branch_20b06ac: @ 20b06ac :arm
	ldr     r0, [r7, #0x8]
	orr     r0, r0, #0x2
	str     r0, [r7, #0x8]
.arm
branch_20b06b8: @ 20b06b8 :arm
	cmp     r4, #0x3
	addne   sp, sp, #0x1c
	ldmnefd sp!, {r3-r8,pc}
	ldr     r1, [r7, #0x8]
	mov     r0, r7
	bic     r1, r1, #0x40
	str     r1, [r7, #0x8]
	ldr     r1, [r7, #0x1c]
	blx     r1
	add     sp, sp, #0x1c
	ldmfd   sp!, {r3-r8,pc}
@ 0x20b06e4

.word RAM_21c5cf4 @ 0x20b06e4
.word RAM_21c5a8c @ 0x20b06e8
.word Unknown_20f97d4 @ 0x20b06ec
.word 0x293130 @ 0x20b06f0
.word 0x2b2a @ 0x20b06f4



.arm
Function_20b06f8: @ 20b06f8 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r2, [r4, #0x8]
	tst     r2, #2, 24 @ #0x200
	bne     branch_20b0794
	ldr     r0, [r4]
	tst     r2, #0x1
	ldrb    r3, [r0, #0x1]
	bne     branch_20b0730
	tst     r2, #0x8
	beq     branch_20b0730
	ldrb    r0, [r4, #0xad]
	cmp     r3, r0
	beq     branch_20b0794
.arm
branch_20b0730: @ 20b0730 :arm
	ldr     lr, [r4, #0xd8]
	cmp     lr, #0x0
	beq     branch_20b077c
	adds    r12, lr, #0x4
	beq     branch_20b0768
	ldrb    r0, [lr, #0x5]
	cmp     r3, r0
	bhs     branch_20b0768
	ldrh    r2, [lr, #0xa]
	ldrh    r0, [r12, r2]
	add     r2, r12, r2
	add     r2, r2, #0x4
	mla     r2, r0, r3, r2
	b       branch_20b076c
@ 0x20b0768

.arm
branch_20b0768: @ 20b0768 :arm
	mov     r2, #0x0
.arm
branch_20b076c: @ 20b076c :arm
	cmp     r2, #0x0
	ldrne   r0, [r2]
	addne   r2, lr, r0
	bne     branch_20b0780
.arm
branch_20b077c: @ 20b077c :arm
	mov     r2, #0x0
.arm
branch_20b0780: @ 20b0780 :arm
	ldrh    lr, [r2]
	ldr     r12, [pc, #0x18] @ [0x20b07a4] (=Unknown_2100f74)
	mov     r0, r4
	ldr     r12, [r12, lr, lsl #0x2]
	blx     r12
.arm
branch_20b0794: @ 20b0794 :arm
	ldr     r0, [r4]
	add     r0, r0, #0x2
	str     r0, [r4]
	ldmfd   sp!, {r4,pc}
@ 0x20b07a4

.word Unknown_2100f74 @ 0x20b07a4



.arm
Function_20b07a8: @ 20b07a8 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r5, r0
	ldr     r0, [r5, #0x20]
	mov     r4, r2
	cmp     r0, #0x0
	ldrneb  r6, [r5, #0x91]
	moveq   r6, #0x0
	cmp     r6, #0x1
	bne     branch_20b0800
	ldr     r1, [r5, #0x8]
	mov     r0, r5
	bic     r1, r1, #0x40
	str     r1, [r5, #0x8]
	ldr     r1, [r5, #0x20]
	blx     r1
.arm
Function_20b07e4: @ 20b07e4 :arm
	ldr     r0, [r5, #0x20]
	cmp     r0, #0x0
	ldrneb  r6, [r5, #0x91]
	ldr     r0, [r5, #0x8]
	moveq   r6, #0x0
	and     r0, r0, #0x40
	b       branch_20b0804

branch_20b0800: @ 20b0800 :arm
	mov     r0, #0x0
branch_20b0804: @ 20b0804 :arm
	cmp     r0, #0x0
	bne     branch_20b0828
	ldr     r0, [r5, #0x8]
	tst     r0, #1, 24 @ #0x100
	bne     branch_20b0828
	ldr     r0, [r4, #0x8]
	ldr     r1, [r4, #0xc]
	add     r0, r4, r0
	bl      Function_20b26a8
.arm
branch_20b0828: @ 20b0828 :arm
	cmp     r6, #0x2
	bne     branch_20b0858
	ldr     r1, [r5, #0x8]
	mov     r0, r5
	bic     r1, r1, #0x40
	str     r1, [r5, #0x8]
	ldr     r1, [r5, #0x20]
	blx     r1
.arm
Startpoint_20b0848: @ 20b0848 :arm
	ldr     r0, [r5, #0x20]
	cmp     r0, #0x0
	ldrneb  r6, [r5, #0x91]
	moveq   r6, #0x0
.arm
branch_20b0858: @ 20b0858 :arm
	cmp     r6, #0x3
	ldmnefd sp!, {r4-r6,pc}
	ldr     r1, [r5, #0x8]
	mov     r0, r5
	bic     r1, r1, #0x40
	str     r1, [r5, #0x8]
	ldr     r1, [r5, #0x20]
	blx     r1
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b087c

.arm
Function_20b087c: @ 20b087c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r0, [r4, #0x8]
	tst     r0, #2, 24 @ #0x200
	bne     Startpoint_20b0908
	tst     r0, #0x1
	beq     Startpoint_20b0908
	tst     r0, #0x2
	bne     Startpoint_20b0908
	ldr     r0, [r4]
	ldr     r12, [r4, #0xdc]
	ldrb    r3, [r0, #0x1]
	cmp     r12, #0x0
	beq     branch_20b08f0
	beq     branch_20b08dc
	ldrb    r0, [r12, #0x1]
	cmp     r3, r0
	bhs     branch_20b08dc
	ldrh    r2, [r12, #0x6]
	ldrh    r0, [r12, r2]
	add     r2, r12, r2
	add     r2, r2, #0x4
	mla     r2, r0, r3, r2
	b       branch_20b08e0
@ 0x20b08dc

.arm
branch_20b08dc: @ 20b08dc :arm
	mov     r2, #0x0
.arm
branch_20b08e0: @ 20b08e0 :arm
	cmp     r2, #0x0
	ldrne   r0, [r2]
	addne   r2, r12, r0
	bne     branch_20b08f4
.arm
branch_20b08f0: @ 20b08f0 :arm
	mov     r2, #0x0
.arm
branch_20b08f4: @ 20b08f4 :arm
	ldrh    lr, [r2]
	ldr     r12, [pc, #0x18] @ [0x20b0918] (=Unknown_2100f84)
	mov     r0, r4
	ldr     r12, [r12, lr, lsl #0x2]
	blx     r12
.arm
Startpoint_20b0908: @ 20b0908 :arm
	ldr     r0, [r4]
	add     r0, r0, #0x2
	str     r0, [r4]
	ldmfd   sp!, {r4,pc}
@ 0x20b0918

.word Unknown_2100f84 @ 0x20b0918



.arm
Function_20b091c: @ 20b091c :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x14
	mov     r10, r0
	ldr     r0, [r10]
	mov     r9, r1
	ldrb    r6, [r0, #0x1]
	mov     r4, #0x4
	strb    r6, [r10, #0xae]
	ldr     r0, [r10, #0x8]
	orr     r0, r0, #0x10
	str     r0, [r10, #0x8]
	tst     r0, #1, 22 @ #0x400
	beq     branch_20b09a4
	cmp     r9, #0x40
	cmpne   r9, #0x60
	addeq   r4, r4, #0x1
	cmp     r9, #0x20
	cmpne   r9, #0x60
	bne     branch_20b0990
	tst     r0, #1, 24 @ #0x100
	add     r4, r4, #0x1
	bne     branch_20b0990
	ldr     r0, [r10]
	add     r1, sp, #0x10
	ldrb    r3, [r0, #0x4]
	mov     r0, #0x14
	mov     r2, #0x1
	str     r3, [sp, #0x10]
	bl      Function_20b275c
.arm
branch_20b0990: @ 20b0990 :arm
	ldr     r0, [r10]
	add     sp, sp, #0x14
	add     r0, r0, r4
	str     r0, [r10]
	ldmfd   sp!, {r4-r11,pc}
@ 0x20b09a4

.arm
branch_20b09a4: @ 20b09a4 :arm
	cmp     r9, #0x40
	cmpne   r9, #0x60
	bne     branch_20b09e8
	ldr     r0, [r10]
	cmp     r9, #0x40
	ldreqb  r0, [r0, #0x4]
	add     r4, r4, #0x1
	streq   r0, [sp, #0xc]
	ldrneb  r0, [r0, #0x5]
	strne   r0, [sp, #0xc]
	ldr     r0, [r10, #0x8]
	tst     r0, #1, 24 @ #0x100
	bne     branch_20b09e8
	add     r1, sp, #0xc
	mov     r0, #0x14
	mov     r2, #0x1
	bl      Function_20b275c
.arm
branch_20b09e8: @ 20b09e8 :arm
	add     r0, r10, #75, 30 @ #0x12c
	str     r0, [r10, #0xb4]
	ldr     r0, [r10, #0x24]
	cmp     r0, #0x0
	ldrneb  r8, [r10, #0x92]
	moveq   r8, #0x0
	cmp     r8, #0x1
	bne     branch_20b0a3c
	ldr     r1, [r10, #0x8]
	mov     r0, r10
	bic     r1, r1, #0x40
	str     r1, [r10, #0x8]
	ldr     r1, [r10, #0x24]
	blx     r1
	ldr     r0, [r10, #0x24]
	cmp     r0, #0x0
	ldrneb  r8, [r10, #0x92]
	ldr     r0, [r10, #0x8]
	moveq   r8, #0x0
	and     r0, r0, #0x40
	b       branch_20b0a40
@ 0x20b0a3c

.arm
branch_20b0a3c: @ 20b0a3c :arm
	mov     r0, #0x0
.arm
branch_20b0a40: @ 20b0a40 :arm
	cmp     r0, #0x0
	bne     branch_20b0c88
	ldr     r0, [r10, #0x4]
	ldr     r1, [r0, #0x34]
	cmp     r1, #0x0
	beq     branch_20b0a74
	mov     r0, #0x58
	mla     r5, r6, r0, r1
	ldr     r0, [r10, #0x8]
	tst     r0, #0x80
	moveq   r0, #0x1
	movne   r0, #0x0
	b       branch_20b0a7c
@ 0x20b0a74

.arm
branch_20b0a74: @ 20b0a74 :arm
	add     r5, r10, #75, 30 @ #0x12c
	mov     r0, #0x0
.arm
branch_20b0a7c: @ 20b0a7c :arm
	cmp     r0, #0x0
	bne     branch_20b0c84
	mov     r0, #0x0
	str     r0, [r5]
	ldr     r0, [r10, #0x4]
	ldr     r1, [r0, #0x10]
	cmp     r1, #0x0
	beq     branch_20b0ab4
	ldr     r3, [r0, #0x14]
	mov     r0, r5
	mov     r2, r6
	blx     r3
	cmp     r0, #0x0
	bne     branch_20b0c84
.arm
branch_20b0ab4: @ 20b0ab4 :arm
	ldr     r2, [r10, #0xd4]
	cmp     r2, #0x0
	beq     branch_20b0afc
	beq     branch_20b0ae8
	ldrb    r0, [r2, #0x1]
	cmp     r6, r0
	bhs     branch_20b0ae8
	ldrh    r1, [r2, #0x6]
	ldrh    r0, [r2, r1]
	add     r1, r2, r1
	add     r1, r1, #0x4
	mla     r1, r0, r6, r1
	b       branch_20b0aec
@ 0x20b0ae8

.arm
branch_20b0ae8: @ 20b0ae8 :arm
	mov     r1, #0x0
.arm
branch_20b0aec: @ 20b0aec :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r7, r2, r0
	bne     branch_20b0b00
.arm
branch_20b0afc: @ 20b0afc :arm
	mov     r7, #0x0
.arm
branch_20b0b00: @ 20b0b00 :arm
	ldrh    r0, [r7]
	add     r6, r7, #0x4
	tst     r0, #0x1
	beq     branch_20b0b20
	ldr     r0, [r5]
	orr     r0, r0, #0x4
	str     r0, [r5]
	b       branch_20b0b3c
@ 0x20b0b20

.arm
branch_20b0b20: @ 20b0b20 :arm
	ldr     r0, [r6]
	str     r0, [r5, #0x4c]
	ldr     r0, [r6, #0x4]
	str     r0, [r5, #0x50]
	ldr     r0, [r6, #0x8]
	add     r6, r6, #0xc
	str     r0, [r5, #0x54]
.arm
branch_20b0b3c: @ 20b0b3c :arm
	ldrh    r0, [r7]
	tst     r0, #0x2
	beq     branch_20b0b58
	ldr     r0, [r5]
	orr     r0, r0, #0x2
	str     r0, [r5]
	b       branch_20b0c6c
@ 0x20b0b58

.arm
branch_20b0b58: @ 20b0b58 :arm
	tst     r0, #0x8
	beq     branch_20b0c20
	and     r1, r0, #0xf0
	mov     r11, r1, asr #4
	ldrsh   r1, [r6]
	add     r0, r5, #0x28
	str     r1, [sp]
	ldrsh   r1, [r6, #0x2]
	str     r1, [sp, #0x4]
	blx     MI_Zero36B
	ldrh    r0, [r7]
	ldr     r2, [pc, #0x1e0] @ [0x20b0d6c] (=Unknown_20f97f4)
	ldr     r1, [pc, #0x1e0] @ [0x20b0d70] (=Unknown_20f97f4+1)
	tst     r0, #1, 24 @ #0x100
	mov     r0, #1, 20 @ #0x1000
	ldrb    r2, [r2, r11, lsl #0x2]
	ldrb    r1, [r1, r11, lsl #0x2]
	rsbne   r0, r0, #0x0
	add     r3, r5, r11, lsl #2
	str     r0, [r3, #0x28]
	ldr     r0, [sp]
	add     r2, r5, r2, lsl #2
	str     r0, [r2, #0x28]
	ldr     r0, [sp, #0x4]
	add     r1, r5, r1, lsl #2
	str     r0, [r1, #0x28]
	ldrh    r0, [r7]
	tst     r0, #2, 24 @ #0x200
	beq     branch_20b0bd8
	ldr     r0, [sp, #0x4]
	rsb     r0, r0, #0x0
	str     r0, [sp, #0x4]
branch_20b0bd8: @ 20b0bd8 :arm
	ldr     r0, [pc, #0x194] @ [0x20b0d74] (=Unknown_20f97f4+2)
	ldrb    r0, [r0, r11, lsl #0x2]
	add     r1, r5, r0, lsl #2
	ldr     r0, [sp, #0x4]
	str     r0, [r1, #0x28]
	ldrh    r0, [r7]
	tst     r0, #1, 22 @ #0x400
	beq     branch_20b0c04
	ldr     r0, [sp]
	rsb     r0, r0, #0x0
	str     r0, [sp]
branch_20b0c04: @ 20b0c04 :arm
	ldr     r0, [pc, #0x16c] @ [0x20b0d78] (=Unknown_20f97f4+3)
	add     r6, r6, #0x4
	ldrb    r0, [r0, r11, lsl #0x2]
	add     r1, r5, r0, lsl #2
	ldr     r0, [sp]
	str     r0, [r1, #0x28]
	b       branch_20b0c6c

branch_20b0c20: @ 20b0c20 :arm
	ldrsh   r0, [r7, #0x2]
	str     r0, [r5, #0x28]
	ldrsh   r0, [r6]
	str     r0, [r5, #0x2c]
	ldrsh   r0, [r6, #0x2]
	str     r0, [r5, #0x30]
	ldrsh   r0, [r6, #0x4]
	str     r0, [r5, #0x34]
	ldrsh   r0, [r6, #0x6]
	str     r0, [r5, #0x38]
	ldrsh   r0, [r6, #0x8]
	str     r0, [r5, #0x3c]
	ldrsh   r0, [r6, #0xa]
	str     r0, [r5, #0x40]
	ldrsh   r0, [r6, #0xc]
	str     r0, [r5, #0x44]
	ldrsh   r0, [r6, #0xe]
	add     r6, r6, #0x10
	str     r0, [r5, #0x48]
branch_20b0c6c: @ 20b0c6c :arm
	ldrh    r3, [r7]
	ldr     r2, [r10]
	ldr     r7, [r10, #0xe8]
	mov     r0, r5
	mov     r1, r6
	blx     r7
branch_20b0c84: @ 20b0c84 :arm
	str     r5, [r10, #0xb4]
branch_20b0c88: @ 20b0c88 :arm
	cmp     r8, #0x2
	bne     branch_20b0cc4
	ldr     r1, [r10, #0x8]
	mov     r0, r10
	bic     r1, r1, #0x40
	str     r1, [r10, #0x8]
	ldr     r1, [r10, #0x24]
	blx     r1
	ldr     r0, [r10, #0x24]
	cmp     r0, #0x0
	ldrneb  r8, [r10, #0x92]
	ldr     r0, [r10, #0x8]
	moveq   r8, #0x0
	and     r0, r0, #0x40
	b       branch_20b0cc8
@ 0x20b0cc4

.arm
branch_20b0cc4: @ 20b0cc4 :arm
	mov     r0, #0x0
.arm
branch_20b0cc8: @ 20b0cc8 :arm
	cmp     r0, #0x0
	bne     branch_20b0ce8
	ldr     r0, [r10, #0x8]
	tst     r0, #1, 24 @ #0x100
	bne     branch_20b0ce8
	ldr     r0, [r10, #0xb4]
	ldr     r1, [r10, #0xec]
	blx     r1
.arm
branch_20b0ce8: @ 20b0ce8 :arm
	mov     r0, #0x0
	str     r0, [r10, #0xb4]
	cmp     r8, #0x3
	bne     branch_20b0d18
	ldr     r1, [r10, #0x8]
	mov     r0, r10
	bic     r1, r1, #0x40
	str     r1, [r10, #0x8]
	ldr     r1, [r10, #0x24]
	blx     r1
	ldr     r0, [r10, #0x8]
	and     r0, r0, #0x40
.arm
branch_20b0d18: @ 20b0d18 :arm
	cmp     r9, #0x20
	cmpne   r9, #0x60
	bne     branch_20b0d58
	cmp     r0, #0x0
	add     r4, r4, #0x1
	bne     branch_20b0d58
	ldr     r0, [r10, #0x8]
	tst     r0, #1, 24 @ #0x100
	bne     branch_20b0d58
	ldr     r0, [r10]
	add     r1, sp, #0x8
	ldrb    r3, [r0, #0x4]
	mov     r0, #0x13
	mov     r2, #0x1
	str     r3, [sp, #0x8]
	bl      Function_20b275c
branch_20b0d58: @ 20b0d58 :arm
	ldr     r0, [r10]
	add     r0, r0, r4
	str     r0, [r10]
	add     sp, sp, #0x14
	ldmfd   sp!, {r4-r11,pc}
@ 0x20b0d6c

.word Unknown_20f97f4 @ 0x20b0d6c
.word Unknown_20f97f4+1 @ 0x20b0d70
.word Unknown_20f97f4+2 @ 0x20b0d74
.word Unknown_20f97f4+3 @ 0x20b0d78



.arm
Function_20b0d7c: @ 20b0d7c :arm
	stmfd   sp!, {r4-r10,lr}
	sub     sp, sp, #0xc8
	mov     r9, r0
	ldr     r0, [r9, #0x8]
	mov     r8, r1
	tst     r0, #0x200
	mov     r4, #0x2
	ldr     r5, [pc, #0x2b8] @ [0x20b1058] (=Unknown_2101004)
	ldr     r6, [pc, #0x2b8] @ [0x20b105c] (=Unknown_2101010)
	beq     branch_20b0dd0
	cmp     r8, #0x40
	cmpne   r8, #0x60
	addeq   r4, r4, #0x1
	cmp     r8, #0x20
	cmpne   r8, #0x60
	ldr     r0, [r9]
	addeq   r4, r4, #0x1
	add     r0, r0, r4
	add     sp, sp, #0xc8
	str     r0, [r9]
	ldmfd   sp!, {r4-r10,pc}

branch_20b0dd0: @ 20b0dd0 :arm
	cmp     r8, #0x40
	cmpne   r8, #0x60
	bne     branch_20b0e10
	tst     r0, #0x100
	add     r4, r4, #0x1
	bne     branch_20b0e10
	ldr     r0, [r9]
	cmp     r8, #0x40
	ldreqb  r0, [r0, #0x2]
	add     r1, sp, #0x4
	mov     r2, #0x1
	streq   r0, [sp, #0x4]
	ldrneb  r0, [r0, #0x3]
	strne   r0, [sp, #0x4]
	mov     r0, #0x14
	bl      Function_20b275c
branch_20b0e10: @ 20b0e10 :arm
	ldr     r0, [r9, #0x28]
	cmp     r0, #0x0
	ldrneb  r7, [r9, #0x93]
	moveq   r7, #0x0
	cmp     r7, #0x1
	bne     branch_20b0e5c
	ldr     r1, [r9, #0x8]
	mov     r0, r9
	bic     r1, r1, #0x40
	str     r1, [r9, #0x8]
	ldr     r1, [r9, #0x28]
	blx     r1
	ldr     r0, [r9, #0x28]
	cmp     r0, #0x0
	ldrneb  r7, [r9, #0x93]
	ldr     r0, [r9, #0x8]
	moveq   r7, #0x0
	and     r1, r0, #0x40
	b       branch_20b0e60

branch_20b0e5c: @ 20b0e5c :arm
	mov     r1, #0x0
branch_20b0e60: @ 20b0e60 :arm
	ldr     r0, [r9, #0x8]
	tst     r0, #1, 24 @ #0x100
	cmpeq   r1, #0x0
	bne     branch_20b0fd8
	bl      Function_20b2628
	ldr     r2, [pc, #0x1e4] @ [0x20b1060] (=0x151110) @ MTX_IDENTITY, MTX_PUSH, MTX_MODE
	ldr     r1, [pc, #0x1e4] @ [0x20b1064] (=GFX_FIFO)
	mov     r0, #0x0
	str     r2, [r1]
	str     r0, [r1]
	str     r0, [r1]
	add     r10, sp, #0x88
branch_20b0e90: @ 20b0e90 :arm
	mov     r0, r10
	bl      G3X_GetClipMtx
	cmp     r0, #0x0
	bne     branch_20b0e90
	ldr     r0, [pc, #0x1c0] @ [0x20b1068] (=RAM_21c5a8c)
	ldr     r0, [r0, #0xfc]
	tst     r0, #0x1
	beq     branch_20b0ed0
	bl      Function_20af67c
	add     r1, sp, #0x48
	bl      MTX_Copy43To44_
	add     r0, sp, #0x88
	add     r1, sp, #0x48
	mov     r2, r0
	bl      MTX_Concat44
	b       branch_20b0ef4

branch_20b0ed0: @ 20b0ed0 :arm
	tst     r0, #0x2
	beq     branch_20b0ef4
	ldr     r0, [pc, #0x18c] @ [0x20b106c] (=RAM_21c5ad8)
	add     r1, sp, #0x8
	bl      MTX_Copy43To44_
	add     r0, sp, #0x88
	add     r1, sp, #0x8
	mov     r2, r0
	bl      MTX_Concat44
branch_20b0ef4: @ 20b0ef4 :arm
	ldr     r3, [sp, #0xb8]
	ldr     r2, [sp, #0xbc]
	ldr     r1, [sp, #0xc0]
	add     r0, sp, #0x88
	str     r3, [r5]
	str     r2, [r5, #0x4]
	str     r1, [r5, #0x8]
	bl      VEC_Mag
	str     r0, [r6]
	add     r0, sp, #0x98
	bl      VEC_Mag
	str     r0, [r6, #0x4]
	add     r0, sp, #0xa8
	bl      VEC_Mag
	ldr     r1, [pc, #0x134] @ [0x20b1068] (=RAM_21c5a8c)
	str     r0, [r6, #0x8]
	ldr     r0, [r1, #0xfc]
	ldr     r1, [pc, #0x124] @ [0x20b1064] (=GFX_FIFO)
	tst     r0, #0x1
	beq     branch_20b0f84
	ldr     r3, [pc, #0x124] @ [0x20b1070] (=0x171012) @ MTX_LOAD_4x3, MTX_MODE, MTX_POP
	ldr     r0, [pc, #0x124] @ [0x20b1074] (=Unknown_2100fd8)
	mov     r2, #0x8
	str     r3, [r1]
	bl      MIi_CpuSend32
	bl      Function_20af6b4
	ldr     r1, [pc, #0x100] @ [0x20b1064] (=GFX_FIFO)
	mov     r2, #0x30
	bl      MIi_CpuSend32
	ldr     r2, [pc, #0x108] @ [0x20b1078] (=0x1b19)
	ldr     r1, [pc, #0xf0] @ [0x20b1064] (=GFX_FIFO)
	ldr     r0, [pc, #0x104] @ [0x20b107c] (=Unknown_2100fe0)
	str     r2, [r1]
	mov     r2, #0x3c
	bl      MIi_CpuSend32
	b       branch_20b0fd8

branch_20b0f84: @ 20b0f84 :arm
	tst     r0, #0x2
	beq     branch_20b0fcc
	ldr     r3, [pc, #0xdc] @ [0x20b1070] (=0x171012)
	ldr     r0, [pc, #0xdc] @ [0x20b1074] (=Unknown_2100fd8)
	mov     r2, #0x8
	str     r3, [r1]
	bl      MIi_CpuSend32
	bl      Function_20af5e0
	ldr     r1, [pc, #0xb8] @ [0x20b1064] (=GFX_FIFO)
	mov     r2, #0x30
	bl      MIi_CpuSend32
	ldr     r2, [pc, #0xc0] @ [0x20b1078] (=0x1b19)
	ldr     r1, [pc, #0xa8] @ [0x20b1064] (=GFX_FIFO)
	ldr     r0, [pc, #0xbc] @ [0x20b107c] (=Unknown_2100fe0)
	str     r2, [r1]
	mov     r2, #0x3c
	bl      MIi_CpuSend32
	b       branch_20b0fd8

branch_20b0fcc: @ 20b0fcc :arm
	ldr     r0, [pc, #0xac] @ [0x20b1080] (=Unknown_2100fd4)
	mov     r2, #0x48
	bl      MIi_CpuSend32
branch_20b0fd8: @ 20b0fd8 :arm
	cmp     r7, #0x3
	movne   r0, #0x0
	bne     branch_20b1004
	ldr     r1, [r9, #0x8]
	mov     r0, r9
	bic     r1, r1, #0x40
	str     r1, [r9, #0x8]
	ldr     r1, [r9, #0x28]
	blx     r1
	ldr     r0, [r9, #0x8]
	and     r0, r0, #0x40
branch_20b1004: @ 20b1004 :arm
	cmp     r8, #0x20
	cmpne   r8, #0x60
	bne     branch_20b1044
	cmp     r0, #0x0
	add     r4, r4, #0x1
	bne     branch_20b1044
	ldr     r0, [r9, #0x8]
	tst     r0, #1, 24 @ #0x100
	bne     branch_20b1044
	ldr     r0, [r9]
	add     r1, sp, #0x0
	ldrb    r3, [r0, #0x2]
	mov     r0, #0x13
	mov     r2, #0x1
	str     r3, [sp]
	bl      Function_20b275c
branch_20b1044: @ 20b1044 :arm
	ldr     r0, [r9]
	add     r0, r0, r4
	str     r0, [r9]
	add     sp, sp, #0xc8
	ldmfd   sp!, {r4-r10,pc}
@ 0x20b1058

.word Unknown_2101004 @ 0x20b1058
.word Unknown_2101010 @ 0x20b105c
.word 0x151110 @ 0x20b1060
.word GFX_FIFO @ 0x20b1064
.word RAM_21c5a8c @ 0x20b1068
.word RAM_21c5ad8 @ 0x20b106c
.word 0x171012 @ 0x20b1070
.word Unknown_2100fd8 @ 0x20b1074
.word 0x1b19 @ 0x20b1078
.word Unknown_2100fe0 @ 0x20b107c
.word Unknown_2100fd4 @ 0x20b1080



.arm
Function_20b1084: @ 20b1084 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0xc8
	mov     r10, r0
	ldr     r0, [r10, #0x8]
	mov     r9, r1
	tst     r0, #0x200
	mov     r5, #0x2
	ldr     r11, [pc, #0x314] @ [0x20b13bc] (=Unknown_210104c)
	ldr     r6, [pc, #0x314] @ [0x20b13c0] (=Unknown_2101058)
	ldr     r7, [pc, #0x314] @ [0x20b13c4] (=Unknown_2101028)
	beq     branch_20b10dc
	cmp     r9, #0x40
	cmpne   r9, #0x60
	addeq   r5, r5, #0x1
	cmp     r9, #0x20
	cmpne   r9, #0x60
	ldr     r0, [r10]
	addeq   r5, r5, #0x1
	add     r0, r0, r5
	add     sp, sp, #0xc8
	str     r0, [r10]
	ldmfd   sp!, {r3-r11,pc}

branch_20b10dc: @ 20b10dc :arm
	cmp     r9, #0x40
	cmpne   r9, #0x60
	bne     branch_20b111c
	tst     r0, #0x100
	add     r5, r5, #0x1
	bne     branch_20b111c
	ldr     r0, [r10]
	cmp     r9, #0x40
	ldreqb  r0, [r0, #0x2]
	add     r1, sp, #0x4
	mov     r2, #0x1
	streq   r0, [sp, #0x4]
	ldrneb  r0, [r0, #0x3]
	strne   r0, [sp, #0x4]
	mov     r0, #0x14
	bl      Function_20b275c
branch_20b111c: @ 20b111c :arm
	ldr     r0, [r10, #0x2c]
	cmp     r0, #0x0
	ldrneb  r8, [r10, #0x94]
	moveq   r8, #0x0
	cmp     r8, #0x1
	bne     branch_20b1168
	ldr     r1, [r10, #0x8]
	mov     r0, r10
	bic     r1, r1, #0x40
	str     r1, [r10, #0x8]
	ldr     r1, [r10, #0x2c]
	blx     r1
	ldr     r0, [r10, #0x2c]
	cmp     r0, #0x0
	ldrneb  r8, [r10, #0x94]
	ldr     r0, [r10, #0x8]
	moveq   r8, #0x0
	and     r1, r0, #0x40
	b       branch_20b116c

branch_20b1168: @ 20b1168 :arm
	mov     r1, #0x0
branch_20b116c: @ 20b116c :arm
	ldr     r0, [r10, #0x8]
	tst     r0, #1, 24 @ #0x100
	cmpeq   r1, #0x0
	bne     branch_20b133c
	bl      Function_20b2628
	ldr     r2, [pc, #0x240] @ [0x20b13c8] (=0x151110)
	ldr     r1, [pc, #0x240] @ [0x20b13cc] (=GFX_FIFO)
	mov     r0, #0x0
	str     r2, [r1]
	str     r0, [r1]
	str     r0, [r1]
	add     r4, sp, #0x88
branch_20b119c: @ 20b119c :arm
	mov     r0, r4
	bl      G3X_GetClipMtx
	cmp     r0, #0x0
	bne     branch_20b119c
	ldr     r0, [pc, #0x21c] @ [0x20b13d0] (=RAM_21c5a8c)
	ldr     r0, [r0, #0xfc]
	tst     r0, #0x1
	beq     branch_20b11dc
	bl      Function_20af67c
	add     r1, sp, #0x48
	bl      MTX_Copy43To44_
	add     r0, sp, #0x88
	add     r1, sp, #0x48
	mov     r2, r0
	bl      MTX_Concat44
	b       branch_20b1200

branch_20b11dc: @ 20b11dc :arm
	tst     r0, #0x2
	beq     branch_20b1200
	ldr     r0, [pc, #0x1e8] @ [0x20b13d4] (=RAM_21c5ad8)
	add     r1, sp, #0x8
	bl      MTX_Copy43To44_
	add     r0, sp, #0x88
	add     r1, sp, #0x8
	mov     r2, r0
	bl      MTX_Concat44
branch_20b1200: @ 20b1200 :arm
	ldr     r3, [sp, #0xb8]
	ldr     r2, [sp, #0xbc]
	ldr     r1, [sp, #0xc0]
	add     r0, sp, #0x88
	str     r3, [r11]
	str     r2, [r11, #0x4]
	str     r1, [r11, #0x8]
	bl      VEC_Mag
	str     r0, [r6]
	add     r0, sp, #0x98
	bl      VEC_Mag
	str     r0, [r6, #0x4]
	add     r0, sp, #0xa8
	bl      VEC_Mag
	ldr     r1, [sp, #0x9c]
	str     r0, [r6, #0x8]
	cmp     r1, #0x0
	ldreq   r0, [sp, #0xa0]
	cmpeq   r0, #0x0
	beq     branch_20b1274
	add     r0, sp, #0x98
	add     r1, r7, #0xc
	bl      VEC_Normalize
	ldr     r1, [r7, #0x14]
	ldr     r0, [r7, #0x10]
	rsb     r1, r1, #0x0
	str     r1, [r7, #0x1c]
	str     r0, [r7, #0x20]
	b       branch_20b1294

branch_20b1274: @ 20b1274 :arm
	add     r0, sp, #0xa8
	add     r1, r7, #0x18
	bl      VEC_Normalize
	ldr     r1, [r7, #0x1c]
	ldr     r0, [r7, #0x20]
	rsb     r1, r1, #0x0
	str     r1, [r7, #0x14]
	str     r0, [r7, #0x10]
branch_20b1294: @ 20b1294 :arm
	ldr     r0, [pc, #0x134] @ [0x20b13d0] (=RAM_21c5a8c)
	ldr     r1, [pc, #0x12c] @ [0x20b13cc] (=GFX_FIFO)
	ldr     r0, [r0, #0xfc]
	tst     r0, #0x1
	beq     branch_20b12e8
	ldr     r3, [pc, #0x128] @ [0x20b13d8] (=0x171012)
	ldr     r0, [pc, #0x128] @ [0x20b13dc] (=Unknown_2101020)
	mov     r2, #0x8
	str     r3, [r1]
	bl      MIi_CpuSend32
	bl      Function_20af6b4
	ldr     r1, [pc, #0x104] @ [0x20b13cc] (=GFX_FIFO)
	mov     r2, #0x30
	bl      MIi_CpuSend32
	ldr     r2, [pc, #0x10c] @ [0x20b13e0] (=0x1b19)
	ldr     r1, [pc, #0xf4] @ [0x20b13cc] (=GFX_FIFO)
	ldr     r0, [pc, #0xe8] @ [0x20b13c4] (=Unknown_2101028)
	str     r2, [r1]
	mov     r2, #0x3c
	bl      MIi_CpuSend32
	b       branch_20b133c

branch_20b12e8: @ 20b12e8 :arm
	tst     r0, #0x2
	beq     branch_20b1330
	ldr     r3, [pc, #0xe0] @ [0x20b13d8] (=0x171012)
	ldr     r0, [pc, #0xe0] @ [0x20b13dc] (=Unknown_2101020)
	mov     r2, #0x8
	str     r3, [r1]
	bl      MIi_CpuSend32
	bl      Function_20af5e0
	ldr     r1, [pc, #0xbc] @ [0x20b13cc] (=GFX_FIFO)
	mov     r2, #0x30
	bl      MIi_CpuSend32
	ldr     r2, [pc, #0xc4] @ [0x20b13e0] (=0x1b19) @ MTX_SCALE, MTX_MULT_4x3
	ldr     r1, [pc, #0xac] @ [0x20b13cc] (=GFX_FIFO)
	ldr     r0, [pc, #0xa0] @ [0x20b13c4] (=Unknown_2101028)
	str     r2, [r1]
	mov     r2, #0x3c
	bl      MIi_CpuSend32
	b       branch_20b133c

branch_20b1330: @ 20b1330 :arm
	ldr     r0, [pc, #0xac] @ [0x20b13e4] (=Unknown_210101c)
	mov     r2, #0x48
	bl      MIi_CpuSend32
branch_20b133c: @ 20b133c :arm
	cmp     r8, #0x3
	movne   r0, #0x0
	bne     branch_20b1368
	ldr     r1, [r10, #0x8]
	mov     r0, r10
	bic     r1, r1, #0x40
	str     r1, [r10, #0x8]
	ldr     r1, [r10, #0x2c]
	blx     r1
	ldr     r0, [r10, #0x8]
	and     r0, r0, #0x40
branch_20b1368: @ 20b1368 :arm
	cmp     r9, #0x20
	cmpne   r9, #0x60
	bne     branch_20b13a8
	cmp     r0, #0x0
	add     r5, r5, #0x1
	bne     branch_20b13a8
	ldr     r0, [r10, #0x8]
	tst     r0, #0x100
	bne     branch_20b13a8
	ldr     r0, [r10]
	add     r1, sp, #0x0
	ldrb    r3, [r0, #0x2]
	mov     r0, #0x13
	mov     r2, #0x1
	str     r3, [sp]
	bl      Function_20b275c
branch_20b13a8: @ 20b13a8 :arm
	ldr     r0, [r10]
	add     r0, r0, r5
	str     r0, [r10]
	add     sp, sp, #0xc8
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b13bc

.word Unknown_210104c @ 0x20b13bc
.word Unknown_2101058 @ 0x20b13c0
.word Unknown_2101028 @ 0x20b13c4
.word 0x151110 @ 0x20b13c8
.word GFX_FIFO @ 0x20b13cc
.word RAM_21c5a8c @ 0x20b13d0
.word RAM_21c5ad8 @ 0x20b13d4
.word 0x171012 @ 0x20b13d8
.word Unknown_2101020 @ 0x20b13dc
.word 0x1b19 @ 0x20b13e0
.word Unknown_210101c @ 0x20b13e4



.arm
Function_20b13e8: @ 20b13e8 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #65, 30 @ #0x104
	ldr     r1, [r0, #0x4]
	ldr     r6, [r0]
	ldr     r7, [r1, #0x4]
	ldrb    r2, [r6, #0x2]
	ldr     r3, [r7, #0x10]
	mov     r5, #0x0
	str     r0, [sp]
	str     r2, [sp, #0x10]
	add     r3, r7, r3
	add     r1, sp, #0xb0
	mov     r0, r5
	mov     r2, #0x54
	mov     r4, r5
	str     r3, [sp, #0x14]
	add     r6, r6, #0x3
	bl      MIi_CpuClearFast
	bl      Function_20b2628
	mov     r0, r5
	ldr     r1, [pc, #0x6f4] @ [0x20b1b34] (=MATRIX_CONTROL)
	str     r0, [sp, #0xc]
	str     r0, [r1]
	mov     r0, #0x1
	str     r0, [r1, #0xc]
	ldr     r0, [sp, #0xc]
	str     r0, [r1, #0x14]
	mov     r0, #0x2
	str     r0, [r1]
	ldr     r0, [sp, #0x10]
	cmp     r0, #0x0
	bls     branch_20b18d8
branch_20b1468: @ 20b1468 :arm
	ldrb    r11, [r6, #0x1]
	mov     r1, #0x64
	ldr     r0, [sp]
	smulbb  r1, r11, r1
	mov     r2, r11, lsr #5
	str     r1, [sp, #0x4]
	add     r0, r0, r2, lsl #2
	ldr     r3, [pc, #0x6ac] @ [0x20b1b38] (=RAM_21c70f4)
	ldr     r2, [sp, #0x4]
	ldr     r9, [r0, #0xcc]
	add     r7, r3, r2
	and     r1, r11, #0x1f
	mov     r2, #0x1
	ands    r3, r9, r2, lsl r1
	str     r3, [sp, #0x8]
	bne     branch_20b14d4
	ldr     r9, [r0, #0xcc]
	ldr     r3, [pc, #0x688] @ [0x20b1b3c] (=MATRIX_RESTORE)
	orr     r1, r9, r2, lsl r1
	str     r1, [r0, #0xcc]
	ldr     r0, [sp, #0x14]
	mov     r1, #0x54
	mla     r0, r11, r1, r0
	ldrb    r9, [r6]
	str     r9, [r3]
	str     r2, [r3, #-0x10]
	bl      G3_MultMtx43
branch_20b14d4: @ 20b14d4 :arm
	ldr     r0, [sp, #0xc]
	cmp     r0, #0x0
	beq     branch_20b16fc
	ldr     r0, [sp, #0xe0]
	ldmia   r8, {r9,lr}
	str     r0, [sp, #0x18]
	mov     r0, r9, asr #31
	str     r0, [sp, #0x20]
	ldr     r0, [sp, #0xe4]
	ldr     r12, [r8, #0x8]
	str     r0, [sp, #0x24]
	mov     r0, lr, asr #31
	str     r0, [sp, #0x28]
	ldr     r0, [sp, #0xe8]
	ldr     r3, [r8, #0xc]
	str     r0, [sp, #0x2c]
	ldr     r0, [sp, #0xec]
	ldr     r2, [r8, #0x10]
	str     r0, [sp, #0x34]
	mov     r0, r12, asr #31
	str     r0, [sp, #0x30]
	ldr     r0, [sp, #0xf0]
	ldr     r1, [r8, #0x14]
	str     r0, [sp, #0x3c]
	mov     r0, r3, asr #31
	str     r0, [sp, #0x38]
	ldr     r0, [sp, #0xf4]
	str     r0, [sp, #0x44]
	mov     r0, r2, asr #31
	str     r0, [sp, #0x40]
	ldr     r0, [sp, #0xf8]
	str     r0, [sp, #0x4c]
	mov     r0, r1, asr #31
	str     r0, [sp, #0x48]
	ldr     r0, [r8, #0x18]
	str     r0, [sp, #0x50]
	ldr     r0, [sp, #0xfc]
	str     r0, [sp, #0x58]
	ldr     r0, [sp, #0x50]
	mov     r0, r0, asr #31
	str     r0, [sp, #0x54]
	ldr     r0, [r8, #0x1c]
	str     r0, [sp, #0xa8]
	ldr     r0, [r8, #0x20]
	ldr     r8, [sp, #0xa8]
	mov     r8, r8, asr #31
	str     r8, [sp, #0x5c]
	ldr     r8, [sp, #0x100]
	str     r8, [sp, #0x60]
	mov     r8, r0, asr #31
	str     r8, [sp, #0x64]
	umull   r10, r8, r5, r9
	str     r10, [sp, #0x1c]
	ldr     r10, [sp, #0x20]
	mla     r8, r5, r10, r8
	mla     r8, r4, r9, r8
	ldr     r9, [sp, #0x1c]
	mov     r9, r9, lsr #12
	orr     r9, r9, r8, lsl #20
	ldr     r8, [sp, #0x18]
	adds    r8, r8, r9
	str     r8, [sp, #0xe0]
	umull   r10, r9, r5, lr
	ldr     r8, [sp, #0x28]
	mov     r10, r10, lsr #12
	mla     r9, r5, r8, r9
	mla     r9, r4, lr, r9
	ldr     r8, [sp, #0x24]
	orr     r10, r10, r9, lsl #20
	adds    r8, r8, r10
	str     r8, [sp, #0xe4]
	umull   r10, r9, r5, r12
	ldr     r8, [sp, #0x30]
	mov     r10, r10, lsr #12
	mla     r9, r5, r8, r9
	mla     r9, r4, r12, r9
	ldr     r8, [sp, #0x2c]
	orr     r10, r10, r9, lsl #20
	adds    r8, r8, r10
	str     r8, [sp, #0xe8]
	ldr     r8, [sp, #0x38]
	umull   r10, r9, r5, r3
	mla     r9, r5, r8, r9
	mla     r9, r4, r3, r9
	mov     r8, r10, lsr #12
	ldr     r3, [sp, #0x34]
	orr     r8, r8, r9, lsl #20
	adds    r3, r3, r8
	str     r3, [sp, #0xec]
	ldr     r3, [sp, #0x40]
	umull   r9, r8, r5, r2
	mla     r8, r5, r3, r8
	mla     r8, r4, r2, r8
	mov     r3, r9, lsr #12
	ldr     r2, [sp, #0x3c]
	orr     r3, r3, r8, lsl #20
	adds    r2, r2, r3
	str     r2, [sp, #0xf0]
	ldr     r2, [sp, #0x48]
	umull   r8, r3, r5, r1
	mla     r3, r5, r2, r3
	mla     r3, r4, r1, r3
	mov     r2, r8, lsr #12
	ldr     r1, [sp, #0x44]
	orr     r2, r2, r3, lsl #20
	adds    r1, r1, r2
	str     r1, [sp, #0xf4]
	ldr     r1, [sp, #0x50]
	umull   r3, r2, r5, r1
	ldr     r1, [sp, #0x54]
	mov     r3, r3, lsr #12
	mla     r2, r5, r1, r2
	ldr     r1, [sp, #0x50]
	mla     r2, r4, r1, r2
	ldr     r1, [sp, #0x4c]
	orr     r3, r3, r2, lsl #20
	adds    r1, r1, r3
	str     r1, [sp, #0xf8]
	ldr     r1, [sp, #0xa8]
	umull   r3, r2, r5, r1
	ldr     r1, [sp, #0x5c]
	mov     r3, r3, lsr #12
	mla     r2, r5, r1, r2
	ldr     r1, [sp, #0xa8]
	mla     r2, r4, r1, r2
	ldr     r1, [sp, #0x58]
	orr     r3, r3, r2, lsl #20
	adds    r1, r1, r3
	str     r1, [sp, #0xfc]
	ldr     r1, [sp, #0x64]
	umull   r3, r2, r5, r0
	mla     r2, r5, r1, r2
	mla     r2, r4, r0, r2
	mov     r1, r3, lsr #12
	ldr     r0, [sp, #0x60]
	orr     r1, r1, r2, lsl #20
	adds    r0, r0, r1
	str     r0, [sp, #0x100]
branch_20b16fc: @ 20b16fc :arm
	ldr     r0, [sp, #0x8]
	cmp     r0, #0x0
	bne     branch_20b1738
branch_20b1708: @ 20b1708 :arm
	mov     r0, r7
	bl      G3X_GetClipMtx
	cmp     r0, #0x0
	bne     branch_20b1708
	ldr     r0, [sp, #0x14]
	mov     r1, #0x54
	mla     r0, r11, r1, r0
	ldr     r1, [pc, #0x408] @ [0x20b1b34] (=MATRIX_CONTROL)
	mov     r2, #0x2
	add     r0, r0, #0x30
	str     r2, [r1]
	bl      G3_MultMtx33
branch_20b1738: @ 20b1738 :arm
	ldrb    r0, [r6, #0x2]
	ldr     r2, [r7]
	ldr     r1, [r7, #0x4]
	mov     r5, r0, lsl #4
	ldr     r0, [r7, #0x8]
	ldr     r4, [r7, #0x10]
	ldr     r3, [r7, #0x14]
	smull   r2, r8, r5, r2
	mov     r2, r2, lsr #12
	orr     r2, r2, r8, lsl #20
	smull   r1, r8, r5, r1
	mov     r1, r1, lsr #12
	orr     r1, r1, r8, lsl #20
	smull   r0, r8, r5, r0
	mov     r0, r0, lsr #12
	orr     r0, r0, r8, lsl #20
	smull   r8, r4, r5, r4
	mov     r9, r8, lsr #12
	orr     r9, r9, r4, lsl #20
	smull   r4, r3, r5, r3
	mov     r8, r4, lsr #12
	orr     r8, r8, r3, lsl #20
	mov     r4, r5, asr #31
	ldr     r10, [sp, #0xb0]
	ldr     r3, [sp, #0xb4]
	adds    r2, r10, r2
	adds    r1, r3, r1
	str     r2, [sp, #0xb0]
	str     r1, [sp, #0xb4]
	ldr     r2, [sp, #0xb8]
	ldr     r1, [sp, #0xbc]
	adds    r2, r2, r0
	adds    r0, r1, r9
	str     r2, [sp, #0xb8]
	str     r0, [sp, #0xbc]
	ldr     r0, [sp, #0xc0]
	ldr     r2, [sp, #0xc4]
	adds    r0, r0, r8
	str     r0, [sp, #0xc0]
	ldr     r0, [r7, #0x18]
	ldr     r3, [sp, #0xc8]
	smull   r1, r0, r5, r0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	adds    r0, r2, r1
	str     r0, [sp, #0xc4]
	ldr     r0, [r7, #0x20]
	ldr     r2, [sp, #0xcc]
	smull   r1, r0, r5, r0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	adds    r0, r3, r1
	str     r0, [sp, #0xc8]
	ldr     r0, [r7, #0x24]
	ldr     r3, [sp, #0xd0]
	smull   r1, r0, r5, r0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	adds    r0, r2, r1
	str     r0, [sp, #0xcc]
	ldr     r0, [r7, #0x28]
	ldr     r2, [sp, #0xd4]
	smull   r1, r0, r5, r0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	adds    r0, r3, r1
	str     r0, [sp, #0xd0]
	ldr     r0, [r7, #0x30]
	ldr     r3, [sp, #0xd8]
	smull   r1, r0, r5, r0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	adds    r0, r2, r1
	str     r0, [sp, #0xd4]
	ldr     r1, [r7, #0x34]
	ldr     r0, [r7, #0x38]
	smull   r2, r1, r5, r1
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	adds    r1, r3, r2
	str     r1, [sp, #0xd8]
	smull   r1, r0, r5, r0
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	ldr     r0, [sp, #0xdc]
	adds    r0, r0, r1
	str     r0, [sp, #0xdc]
	ldr     r1, [pc, #0x2a4] @ [0x20b1b40] (=RAM_21c7134)
	ldr     r0, [sp, #0x8]
	cmp     r0, #0x0
	add     r6, r6, #0x3
	ldr     r0, [sp, #0x4]
	add     r8, r1, r0
	bne     branch_20b18c0
branch_20b18b0: @ 20b18b0 :arm
	mov     r0, r8
	bl      G3X_GetVectorMtx
	cmp     r0, #0x0
	bne     branch_20b18b0
branch_20b18c0: @ 20b18c0 :arm
	ldr     r0, [sp, #0xc]
	add     r1, r0, #0x1
	ldr     r0, [sp, #0x10]
	str     r1, [sp, #0xc]
	cmp     r1, r0
	blo     branch_20b1468
branch_20b18d8: @ 20b18d8 :arm
	ldmia   r8, {r0,r11}
	ldr     r10, [r8, #0x8]
	ldr     r9, [r8, #0xc]
	ldr     r7, [r8, #0x10]
	ldr     r6, [r8, #0x14]
	ldr     r3, [r8, #0x18]
	ldr     r2, [r8, #0x1c]
	ldr     r1, [r8, #0x20]
	umull   r12, r8, r5, r0
	mov     lr, r12, lsr #12
	ldr     r12, [sp, #0xe0]
	str     r12, [sp, #0x68]
	mov     r12, r0, asr #31
	mla     r8, r5, r12, r8
	mla     r8, r4, r0, r8
	orr     lr, lr, r8, lsl #20
	umull   r12, r8, r5, r11
	ldr     r0, [sp, #0x68]
	str     r12, [sp, #0x6c]
	adds    r0, r0, lr
	str     r0, [sp, #0xe0]
	mov     r0, r11, asr #31
	str     r0, [sp, #0xac]
	ldr     r12, [sp, #0xac]
	ldr     r0, [sp, #0xe8]
	mla     r8, r5, r12, r8
	mla     r8, r4, r11, r8
	ldr     r11, [sp, #0x6c]
	str     r0, [sp, #0x70]
	mov     r11, r11, lsr #12
	mov     r0, r10, asr #31
	str     r0, [sp, #0x74]
	ldr     r0, [sp, #0xec]
	ldr     lr, [sp, #0xe4]
	orr     r11, r11, r8, lsl #20
	adds    r8, lr, r11
	str     r8, [sp, #0xe4]
	str     r0, [sp, #0x78]
	mov     r0, r9, asr #31
	str     r0, [sp, #0x7c]
	ldr     r0, [sp, #0xf0]
	ldr     r8, [sp, #0x74]
	umull   r12, r11, r5, r10
	mla     r11, r5, r8, r11
	mla     r11, r4, r10, r11
	mov     r10, r12, lsr #12
	str     r0, [sp, #0x80]
	mov     r0, r7, asr #31
	str     r0, [sp, #0x84]
	ldr     r0, [sp, #0xf4]
	ldr     r8, [sp, #0x70]
	orr     r10, r10, r11, lsl #20
	adds    r8, r8, r10
	str     r8, [sp, #0xe8]
	str     r0, [sp, #0x88]
	mov     r0, r6, asr #31
	str     r0, [sp, #0x8c]
	ldr     r0, [sp, #0xf8]
	ldr     r8, [sp, #0x7c]
	umull   r11, r10, r5, r9
	mla     r10, r5, r8, r10
	mla     r10, r4, r9, r10
	mov     r9, r11, lsr #12
	str     r0, [sp, #0x90]
	mov     r0, r3, asr #31
	str     r0, [sp, #0x94]
	ldr     r0, [sp, #0xfc]
	ldr     r8, [sp, #0x78]
	orr     r9, r9, r10, lsl #20
	adds    r8, r8, r9
	str     r8, [sp, #0xec]
	str     r0, [sp, #0x98]
	mov     r0, r2, asr #31
	str     r0, [sp, #0x9c]
	ldr     r0, [sp, #0x100]
	ldr     r8, [sp, #0x84]
	umull   r10, r9, r5, r7
	mla     r9, r5, r8, r9
	mla     r9, r4, r7, r9
	mov     r8, r10, lsr #12
	str     r0, [sp, #0xa0]
	mov     r0, r1, asr #31
	str     r0, [sp, #0xa4]
	ldr     r7, [sp, #0x80]
	orr     r8, r8, r9, lsl #20
	adds    r7, r7, r8
	str     r7, [sp, #0xf0]
	ldr     r7, [sp, #0x8c]
	umull   r9, r8, r5, r6
	mla     r8, r5, r7, r8
	mla     r8, r4, r6, r8
	mov     r7, r9, lsr #12
	ldr     r6, [sp, #0x88]
	orr     r7, r7, r8, lsl #20
	adds    r6, r6, r7
	str     r6, [sp, #0xf4]
	ldr     r6, [sp, #0x94]
	umull   r8, r7, r5, r3
	mla     r7, r5, r6, r7
	mla     r7, r4, r3, r7
	mov     r6, r8, lsr #12
	ldr     r3, [sp, #0x90]
	orr     r6, r6, r7, lsl #20
	adds    r3, r3, r6
	str     r3, [sp, #0xf8]
	ldr     r3, [sp, #0x9c]
	umull   r7, r6, r5, r2
	mla     r6, r5, r3, r6
	mla     r6, r4, r2, r6
	mov     r3, r7, lsr #12
	ldr     r2, [sp, #0x98]
	orr     r3, r3, r6, lsl #20
	adds    r2, r2, r3
	str     r2, [sp, #0xfc]
	ldr     r2, [sp, #0xa4]
	umull   r6, r3, r5, r1
	mla     r3, r5, r2, r3
	mla     r3, r4, r1, r3
	mov     r2, r6, lsr #12
	ldr     r1, [sp, #0xa0]
	orr     r2, r2, r3, lsl #20
	adds    r1, r1, r2
	add     r0, sp, #0xe0
	str     r1, [sp, #0x100]
	bl      G3_LoadMtx43
	ldr     r1, [pc, #0x60] @ [0x20b1b34] (=MATRIX_CONTROL)
	mov     r2, #0x1
	add     r0, sp, #0xb0
	str     r2, [r1]
	bl      G3_LoadMtx43
	ldr     r1, [pc, #0x4c] @ [0x20b1b34] (=MATRIX_CONTROL)
	mov     r2, #0x0
	mov     r0, #0x1
	str     r2, [r1]
	str     r0, [r1, #0x10]
	mov     r0, #0x2
	str     r0, [r1]
	ldr     r0, [sp]
	ldr     r0, [r0]
	ldrb    r0, [r0, #0x1]
	str     r0, [r1, #0xc]
	ldr     r0, [sp]
	ldr     r1, [r0]
	ldrb    r0, [r1, #0x2]
	add     r0, r0, #0x1
	add     r0, r0, r0, lsl #1
	add     r1, r1, r0
	ldr     r0, [sp]
	str     r1, [r0]
	add     sp, sp, #65, 30 @ #0x104
	ldmfd   sp!, {r4-r11,pc}
@ 0x20b1b34

.word MATRIX_CONTROL @ 0x20b1b34
.word RAM_21c70f4 @ 0x20b1b38
.word MATRIX_RESTORE @ 0x20b1b3c
.word RAM_21c7134 @ 0x20b1b40



.arm
Function_20b1b44: @ 20b1b44 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r5, r0
	ldr     r0, [r5, #0x34]
	cmp     r0, #0x0
	ldrneb  r4, [r5, #0x96]
	moveq   r4, #0x0
	cmp     r4, #0x1
	bne     branch_20b1b98
	ldr     r1, [r5, #0x8]
	mov     r0, r5
	bic     r1, r1, #0x40
	str     r1, [r5, #0x8]
	ldr     r1, [r5, #0x34]
	blx     r1
	ldr     r0, [r5, #0x34]
	cmp     r0, #0x0
	ldrneb  r4, [r5, #0x96]
	ldr     r0, [r5, #0x8]
	moveq   r4, #0x0
	and     r1, r0, #0x40
	b       branch_20b1b9c
@ 0x20b1b98

.arm
branch_20b1b98: @ 20b1b98 :arm
	mov     r1, #0x0
.arm
branch_20b1b9c: @ 20b1b9c :arm
	ldr     r0, [r5, #0x8]
	tst     r0, #1, 24 @ #0x100
	cmpeq   r1, #0x0
	bne     branch_20b1bf0
	ldr     r0, [r5]
	ldrb    r12, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    lr, [r0, #0x3]
	ldrb    r2, [r0, #0x5]
	ldrb    r1, [r0, #0x6]
	orr     r3, r12, r3, lsl #8
	ldrb    r6, [r0, #0x4]
	orr     r12, r3, lr, lsl #16
	ldrb    r3, [r0, #0x7]
	orr     r1, r2, r1, lsl #8
	orr     r6, r12, r6, lsl #24
	ldrb    r2, [r0, #0x8]
	orr     r1, r1, r3, lsl #16
	add     r0, r0, r6
	orr     r1, r1, r2, lsl #24
	bl      Function_20b26a8
.arm
branch_20b1bf0: @ 20b1bf0 :arm
	cmp     r4, #0x3
	bne     branch_20b1c10
	ldr     r1, [r5, #0x8]
	mov     r0, r5
	bic     r1, r1, #0x40
	str     r1, [r5, #0x8]
	ldr     r1, [r5, #0x34]
	blx     r1
.arm
branch_20b1c10: @ 20b1c10 :arm
	ldr     r0, [r5]
	add     r0, r0, #0x9
	str     r0, [r5]
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b1c20

.arm
Function_20b1c20: @ 20b1c20 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0xc
	mov     r4, r0
	ldr     r0, [r4, #0x8]
	tst     r0, #1, 24 @ #0x100
	bne     branch_20b1c7c
	tst     r0, #2, 24 @ #0x200
	bne     branch_20b1c7c
	cmp     r1, #0x0
	bne     branch_20b1c5c
	ldr     r0, [r4, #0xe0]
	str     r0, [sp, #0x8]
	str     r0, [sp, #0x4]
	str     r0, [sp]
	b       branch_20b1c6c
@ 0x20b1c5c

.arm
branch_20b1c5c: @ 20b1c5c :arm
	ldr     r0, [r4, #0xe4]
	str     r0, [sp, #0x8]
	str     r0, [sp, #0x4]
	str     r0, [sp]
.arm
branch_20b1c6c: @ 20b1c6c :arm
	add     r1, sp, #0x0
	mov     r0, #0x1b
	mov     r2, #0x3
	bl      Function_20b275c
.arm
branch_20b1c7c: @ 20b1c7c :arm
	ldr     r0, [r4]
	add     r0, r0, #0x1
	str     r0, [r4]
	add     sp, sp, #0xc
	ldmfd   sp!, {r3,r4,pc}
@ 0x20b1c90

.arm
Function_20b1c90: @ 20b1c90 :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0x44
	mov     r7, r0
	ldr     r0, [r7, #0x8]
	tst     r0, #2, 24 @ #0x200
	bne     branch_20b1fac
	tst     r0, #0x1
	beq     branch_20b1fac
	ldr     r2, [r7, #0xb0]
	ldr     r0, [r2, #0x10]
	and     r1, r0, #3, 2 @ #0xc0000000
	cmp     r1, #2, 2 @ #0x80000000
	beq     branch_20b1cfc
	bic     r0, r0, #3, 2 @ #0xc0000000
	str     r0, [r2, #0x10]
	ldr     r3, [r7, #0xb0]
	ldr     r0, [pc, #0x2e8] @ [0x20b1fc0] (=Unknown_2100f64)
	ldr     r2, [r3, #0x10]
	ldr     r1, [pc, #0x2e4] @ [0x20b1fc4] (=Unknown_2100f70)
	orr     r2, r2, #2, 2 @ #0x80000000
	str     r2, [r3, #0x10]
	ldr     r3, [r7, #0xb0]
	mov     r2, #0x1
	ldr     r3, [r3, #0x10]
	str     r3, [r0, #0xc]
	ldr     r0, [r0, #0x8]
	bl      Function_20b275c
.arm
branch_20b1cfc: @ 20b1cfc :arm
	mov     r0, #0x3
	str     r0, [sp, #0x10]
	add     r1, sp, #0x10
	mov     r0, #0x10
	mov     r2, #0x1
	bl      Function_20b275c
	ldr     r0, [r7, #0x3c]
	cmp     r0, #0x0
	ldrneb  r6, [r7, #0x98]
	moveq   r6, #0x0
	cmp     r6, #0x1
	bne     branch_20b1d60
	ldr     r1, [r7, #0x8]
	mov     r0, r7
	bic     r1, r1, #0x40
	str     r1, [r7, #0x8]
	ldr     r1, [r7, #0x3c]
	blx     r1
	ldr     r0, [r7, #0x3c]
	cmp     r0, #0x0
	ldrneb  r6, [r7, #0x98]
	ldr     r0, [r7, #0x8]
	moveq   r6, #0x0
	and     r0, r0, #0x40
	b       branch_20b1d64
@ 0x20b1d60

.arm
branch_20b1d60: @ 20b1d60 :arm
	mov     r0, #0x0
.arm
branch_20b1d64: @ 20b1d64 :arm
	cmp     r0, #0x0
	bne     branch_20b1ddc
	ldr     r0, [r7, #0xb0]
	add     r1, sp, #0x14
	ldrh    r5, [r0, #0x2e]
	ldrh    r4, [r0, #0x2c]
	mov     r3, #1, 16 @ #0x10000
	rsb     r0, r5, #0x0
	mov     r12, r0, lsl #15
	mov     lr, r4, lsl #15
	mov     r0, #0x1b
	mov     r2, #0x3
	str     lr, [sp, #0x14]
	str     r12, [sp, #0x18]
	str     r3, [sp, #0x1c]
	bl      Function_20b275c
	mov     r0, r5, lsl #19
	mov     r1, r0, asr #16
	mov     r0, r4, lsl #19
	mov     r1, r1, lsl #16
	mov     r0, r0, asr #16
	mov     r1, r1, lsr #16
	mov     r0, r0, lsl #16
	mov     r1, r1, lsl #16
	orr     r3, r1, r0, lsr #16
	add     r1, sp, #0xc
	mov     r0, #0x22
	mov     r2, #0x1
	str     r3, [sp, #0xc]
	bl      Function_20b275c
.arm
branch_20b1ddc: @ 20b1ddc :arm
	cmp     r6, #0x2
	bne     branch_20b1e18
	ldr     r1, [r7, #0x8]
	mov     r0, r7
	bic     r1, r1, #0x40
	str     r1, [r7, #0x8]
	ldr     r1, [r7, #0x3c]
	blx     r1
	ldr     r0, [r7, #0x3c]
	cmp     r0, #0x0
	ldrneb  r6, [r7, #0x98]
	ldr     r0, [r7, #0x8]
	moveq   r6, #0x0
	and     r0, r0, #0x40
	b       branch_20b1e1c
@ 0x20b1e18

.arm
branch_20b1e18: @ 20b1e18 :arm
	mov     r0, #0x0
.arm
branch_20b1e1c: @ 20b1e1c :arm
	cmp     r0, #0x0
	bne     branch_20b1eb0
	ldr     r0, [r7]
	ldr     r4, [r7, #0xd8]
	ldrb    r3, [r0, #0x1]
	cmp     r4, #0x0
	beq     branch_20b1e78
	adds    r2, r4, #0x4
	beq     branch_20b1e64
	ldrb    r0, [r4, #0x5]
	cmp     r3, r0
	bhs     branch_20b1e64
	ldrh    r1, [r4, #0xa]
	ldrh    r0, [r2, r1]
	add     r1, r2, r1
	add     r1, r1, #0x4
	mla     r1, r0, r3, r1
	b       branch_20b1e68
@ 0x20b1e64

.arm
branch_20b1e64: @ 20b1e64 :arm
	mov     r1, #0x0
.arm
branch_20b1e68: @ 20b1e68 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r0, r4, r0
	bne     branch_20b1e7c
.arm
branch_20b1e78: @ 20b1e78 :arm
	mov     r0, #0x0
.arm
branch_20b1e7c: @ 20b1e7c :arm
	ldrh    r2, [r0, #0x1e]
	tst     r2, #2, 20 @ #0x2000
	beq     branch_20b1eb0
	add     r1, r0, #0x2c
	tst     r2, #0x2
	addeq   r1, r1, #0x8
	tst     r2, #0x4
	addeq   r1, r1, #0x4
	tst     r2, #0x8
	addeq   r1, r1, #0x8
	mov     r0, #0x18
	mov     r2, #0x10
	bl      Function_20b275c
.arm
branch_20b1eb0: @ 20b1eb0 :arm
	cmp     r6, #0x3
	movne   r0, #0x0
	bne     branch_20b1edc
	ldr     r1, [r7, #0x8]
	mov     r0, r7
	bic     r1, r1, #0x40
	str     r1, [r7, #0x8]
	ldr     r1, [r7, #0x3c]
	blx     r1
	ldr     r0, [r7, #0x8]
	and     r0, r0, #0x40
.arm
branch_20b1edc: @ 20b1edc :arm
	cmp     r0, #0x0
	bne     branch_20b1f94
	mov     r3, #0x2
	add     r1, sp, #0x8
	mov     r0, #0x10
	mov     r2, #0x1
	str     r3, [sp, #0x8]
	bl      Function_20b275c
	add     r1, sp, #0x20
	mov     r0, #0x0
	bl      Function_20b2840
	mov     r3, #0x3
	add     r1, sp, #0x4
	mov     r0, #0x10
	mov     r2, #0x1
	str     r3, [sp, #0x4]
	bl      Function_20b275c
	ldr     r0, [pc, #0xa0] @ [0x20b1fc8] (=RAM_21c5a8c)
	mov     r2, #0x9
	ldr     r0, [r0, #0xfc]
	tst     r0, #0x1
	beq     branch_20b1f64
	ldr     r1, [pc, #0x90] @ [0x20b1fcc] (=RAM_21c5ad8)
	mov     r0, #0x1a
	bl      Function_20b275c
	ldr     r1, [pc, #0x88] @ [0x20b1fd0] (=RAM_21c5b48)
	mov     r0, #0x1a
	mov     r2, #0x9
	bl      Function_20b275c
	add     r1, sp, #0x20
	mov     r0, #0x1a
	mov     r2, #0x9
	bl      Function_20b275c
	b       branch_20b1f94
@ 0x20b1f64

.arm
branch_20b1f64: @ 20b1f64 :arm
	tst     r0, #0x2
	mov     r0, #0x1a
	beq     branch_20b1f8c
	ldr     r1, [pc, #0x54] @ [0x20b1fcc] (=RAM_21c5ad8)
	bl      Function_20b275c
	add     r1, sp, #0x20
	mov     r0, #0x1a
	mov     r2, #0x9
	bl      Function_20b275c
	b       branch_20b1f94
@ 0x20b1f8c

.arm
branch_20b1f8c: @ 20b1f8c :arm
	add     r1, sp, #0x20
	bl      Function_20b275c
.arm
branch_20b1f94: @ 20b1f94 :arm
	mov     r3, #0x2
	add     r1, sp, #0x0
	mov     r0, #0x10
	mov     r2, #0x1
	str     r3, [sp]
	bl      Function_20b275c
.arm
branch_20b1fac: @ 20b1fac :arm
	ldr     r0, [r7]
	add     r0, r0, #0x3
	str     r0, [r7]
	add     sp, sp, #0x44
	ldmfd   sp!, {r4-r7,pc}
@ 0x20b1fc0

.word Unknown_2100f64 @ 0x20b1fc0
.word Unknown_2100f70 @ 0x20b1fc4
.word RAM_21c5a8c @ 0x20b1fc8
.word RAM_21c5ad8 @ 0x20b1fcc
.word RAM_21c5b48 @ 0x20b1fd0



.arm
Function_20b1fd4: @ 20b1fd4 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x80
	mov     r5, r0
	ldr     r0, [r5, #0x8]
	tst     r0, #2, 24 @ #0x200
	bne     branch_20b2350
	tst     r0, #0x1
	beq     branch_20b2350
	add     r0, sp, #0x50
	mov     r1, #0x0
	bl      Function_20b2840
	mov     r0, #0x1e
	str     r0, [sp, #0xc]
	add     r1, sp, #0xc
	mov     r0, #0x13
	mov     r2, #0x1
	bl      Function_20b275c
	ldr     r2, [r5, #0xb0]
	ldr     r0, [r2, #0x10]
	and     r1, r0, #3, 2 @ #0xc0000000
	cmp     r1, #3, 2 @ #0xc0000000
	beq     branch_20b2064
	bic     r0, r0, #3, 2 @ #0xc0000000
	str     r0, [r2, #0x10]
	ldr     r3, [r5, #0xb0]
	ldr     r0, [pc, #0x324] @ [0x20b2364] (=Unknown_2100f64)
	ldr     r2, [r3, #0x10]
	ldr     r1, [pc, #0x320] @ [0x20b2368] (=Unknown_2100f68)
	orr     r2, r2, #3, 2 @ #0xc0000000
	str     r2, [r3, #0x10]
	ldr     r3, [r5, #0xb0]
	mov     r2, #0x1
	ldr     r3, [r3, #0x10]
	str     r3, [r0, #0x4]
	ldr     r0, [r0]
	bl      Function_20b275c
branch_20b2064: @ 20b2064 :arm
	ldr     r0, [r5, #0x40]
	cmp     r0, #0x0
	ldrneb  r4, [r5, #0x99]
	moveq   r4, #0x0
	cmp     r4, #0x1
	bne     branch_20b20b0
	ldr     r1, [r5, #0x8]
	mov     r0, r5
	bic     r1, r1, #0x40
	str     r1, [r5, #0x8]
	ldr     r1, [r5, #0x40]
	blx     r1
	ldr     r0, [r5, #0x40]
	cmp     r0, #0x0
	ldrneb  r4, [r5, #0x99]
	ldr     r0, [r5, #0x8]
	moveq   r4, #0x0
	and     r0, r0, #0x40
	b       branch_20b20b4
@ 0x20b20b0

.arm
branch_20b20b0: @ 20b20b0 :arm
	mov     r0, #0x0
.arm
branch_20b20b4: @ 20b20b4 :arm
	cmp     r0, #0x0
	bne     branch_20b20fc
	ldr     r0, [r5, #0xb0]
	ldr     r3, [pc, #0x29c] @ [0x20b2364] (=Unknown_2100f64)
	ldrh    r12, [r0, #0x2e]
	ldrh    r2, [r0, #0x2c]
	ldr     r1, [pc, #0x298] @ [0x20b236c] (=Unknown_2100f94)
	rsb     r0, r12, #0x0
	mov     r2, r2, lsl #15
	str     r2, [r3, #0x30]
	mov     r0, r0, lsl #15
	str     r0, [r3, #0x44]
	str     r2, [r3, #0x60]
	mov     r12, r12, lsl #15
	mov     r0, #0x16
	mov     r2, #0x10
	str     r12, [r3, #0x64]
	bl      Function_20b275c
.arm
branch_20b20fc: @ 20b20fc :arm
	cmp     r4, #0x2
	bne     branch_20b2138
	ldr     r1, [r5, #0x8]
	mov     r0, r5
	bic     r1, r1, #0x40
	str     r1, [r5, #0x8]
	ldr     r1, [r5, #0x40]
	blx     r1
	ldr     r0, [r5, #0x40]
	cmp     r0, #0x0
	ldrneb  r4, [r5, #0x99]
	ldr     r0, [r5, #0x8]
	moveq   r4, #0x0
	and     r0, r0, #0x40
	b       branch_20b213c
@ 0x20b2138

.arm
branch_20b2138: @ 20b2138 :arm
	mov     r0, #0x0
.arm
branch_20b213c: @ 20b213c :arm
	cmp     r0, #0x0
	bne     branch_20b21d0
	ldr     r0, [r5]
	ldr     r12, [r5, #0xd8]
	ldrb    r3, [r0, #0x1]
	cmp     r12, #0x0
	beq     branch_20b2198
	adds    r2, r12, #0x4
	beq     branch_20b2184
	ldrb    r0, [r12, #0x5]
	cmp     r3, r0
	bhs     branch_20b2184
	ldrh    r1, [r12, #0xa]
	ldrh    r0, [r2, r1]
	add     r1, r2, r1
	add     r1, r1, #0x4
	mla     r1, r0, r3, r1
	b       branch_20b2188
@ 0x20b2184

.arm
branch_20b2184: @ 20b2184 :arm
	mov     r1, #0x0
.arm
branch_20b2188: @ 20b2188 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r0, r12, r0
	bne     branch_20b219c
.arm
branch_20b2198: @ 20b2198 :arm
	mov     r0, #0x0
.arm
branch_20b219c: @ 20b219c :arm
	ldrh    r2, [r0, #0x1e]
	tst     r2, #2, 20 @ #0x2000
	beq     branch_20b21d0
	add     r1, r0, #0x2c
	tst     r2, #0x2
	addeq   r1, r1, #0x8
	tst     r2, #0x4
	addeq   r1, r1, #0x4
	tst     r2, #0x8
	addeq   r1, r1, #0x8
	mov     r0, #0x18
	mov     r2, #0x10
	bl      Function_20b275c
.arm
branch_20b21d0: @ 20b21d0 :arm
	cmp     r4, #0x3
	movne   r0, #0x0
	bne     branch_20b21fc
	ldr     r1, [r5, #0x8]
	mov     r0, r5
	bic     r1, r1, #0x40
	str     r1, [r5, #0x8]
	ldr     r1, [r5, #0x40]
	blx     r1
	ldr     r0, [r5, #0x8]
	and     r0, r0, #0x40
.arm
branch_20b21fc: @ 20b21fc :arm
	cmp     r0, #0x0
	bne     branch_20b2320
	ldr     r0, [pc, #0x164] @ [0x20b2370] (=RAM_21c5a8c)
	ldr     r0, [r0, #0xfc]
	tst     r0, #0x1
	beq     branch_20b2248
	ldr     r1, [pc, #0x158] @ [0x20b2374] (=RAM_21c5b6c)
	mov     r0, #0x1c
	mov     r2, #0x3
	bl      Function_20b275c
	ldr     r1, [pc, #0x14c] @ [0x20b2378] (=RAM_21c5b48)
	mov     r0, #0x1a
	mov     r2, #0x9
	bl      Function_20b275c
	add     r1, sp, #0x50
	mov     r0, #0x19
	mov     r2, #0xc
	bl      Function_20b275c
	b       branch_20b2288
@ 0x20b2248

.arm
branch_20b2248: @ 20b2248 :arm
	tst     r0, #0x2
	beq     branch_20b2264
	add     r1, sp, #0x50
	mov     r0, #0x19
	mov     r2, #0xc
	bl      Function_20b275c
	b       branch_20b2288
@ 0x20b2264

.arm
branch_20b2264: @ 20b2264 :arm
	bl      Function_20af5e0
	mov     r1, r0
	mov     r0, #0x19
	mov     r2, #0xc
	bl      Function_20b275c
	add     r1, sp, #0x50
	mov     r0, #0x19
	mov     r2, #0xc
	bl      Function_20b275c
.arm
branch_20b2288: @ 20b2288 :arm
	bl      Function_20b2628
	ldr     r0, [pc, #0xe8] @ [0x20b237c] (=MATRIX_CONTROL)
	mov     r1, #0x0
	str     r1, [r0]
	str     r1, [r0, #0x4]
	str     r1, [r0, #0x14]
	add     r4, sp, #0x10
.arm
branch_20b22a4: @ 20b22a4 :arm
	mov     r0, r4
	bl      G3X_GetClipMtx
	cmp     r0, #0x0
	bne     branch_20b22a4
	ldr     r2, [pc, #0xc4] @ [0x20b2380] (=MATRIX_POP)
	mov     r0, #0x1
	str     r0, [r2]
	mov     r0, #0x3
	str     r0, [r2, #-0x8]
	add     r1, sp, #0x10
	mov     r0, #0x16
	mov     r2, #0x10
	bl      Function_20b275c
	ldr     r0, [sp, #0x44]
	ldr     r1, [sp, #0x40]
	mov     r0, r0, asr #4
	mov     r0, r0, lsl #8
	mov     r2, r1, asr #4
	mov     r1, r0, asr #16
	mov     r0, r2, lsl #8
	mov     r1, r1, lsl #16
	mov     r0, r0, asr #16
	mov     r1, r1, lsr #16
	mov     r0, r0, lsl #16
	mov     r1, r1, lsl #16
	orr     r3, r1, r0, lsr #16
	add     r1, sp, #0x8
	mov     r0, #0x22
	mov     r2, #0x1
	str     r3, [sp, #0x8]
	bl      Function_20b275c
.arm
branch_20b2320: @ 20b2320 :arm
	mov     r3, #0x2
	add     r1, sp, #0x4
	mov     r0, #0x10
	mov     r2, #0x1
	str     r3, [sp, #0x4]
	bl      Function_20b275c
	mov     r3, #0x1e
	add     r1, sp, #0x0
	mov     r0, #0x14
	mov     r2, #0x1
	str     r3, [sp]
	bl      Function_20b275c
.arm
branch_20b2350: @ 20b2350 :arm
	ldr     r0, [r5]
	add     r0, r0, #0x3
	str     r0, [r5]
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b2364

.word Unknown_2100f64 @ 0x20b2364
.word Unknown_2100f68 @ 0x20b2368
.word Unknown_2100f94 @ 0x20b236c
.word RAM_21c5a8c @ 0x20b2370
.word RAM_21c5b6c @ 0x20b2374
.word RAM_21c5b48 @ 0x20b2378
.word MATRIX_CONTROL @ 0x20b237c
.word MATRIX_POP @ 0x20b2380



.arm
.globl Function_20b2384
Function_20b2384: @ 20b2384 :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0x6c
	mov     r6, r0
	ldr     r12, [r6, #0x1c]
	mov     r4, r1
	mov     r5, r2
	mov     r7, r3
	cmp     r12, #1, 20 @ #0x1000
	beq     branch_20b23c4
	add     r1, sp, #0xc
	mov     r0, #0x1b
	mov     r2, #0x3
	str     r12, [sp, #0xc]
	str     r12, [sp, #0x10]
	str     r12, [sp, #0x14]
	bl      Function_20b275c
.arm
branch_20b23c4: @ 20b23c4 :arm
	cmp     r7, #0x0
	beq     branch_20b2570
	ldrb    r0, [r6, #0x18]
	cmp     r4, r0
	bhs     branch_20b2570
	cmp     r6, #0x0
	ldrne   r0, [r6, #0x8]
	cmpne   r0, #0x0
	addne   r3, r6, r0
	moveq   r3, #0x0
	cmp     r3, #0x0
	beq     branch_20b2434
	adds    r2, r3, #0x4
	beq     branch_20b2420
	ldrb    r0, [r3, #0x5]
	cmp     r4, r0
	bhs     branch_20b2420
	ldrh    r1, [r3, #0xa]
	ldrh    r0, [r2, r1]
	add     r1, r2, r1
	add     r1, r1, #0x4
	mla     r1, r0, r4, r1
	b       branch_20b2424
@ 0x20b2420

.arm
branch_20b2420: @ 20b2420 :arm
	mov     r1, #0x0
.arm
branch_20b2424: @ 20b2424 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r4, r3, r0
	bne     branch_20b2438
.arm
branch_20b2434: @ 20b2434 :arm
	mov     r4, #0x0
.arm
branch_20b2438: @ 20b2438 :arm
	ldr     r0, [r4, #0xc]
	tst     r0, #31, 16 @ #0x1f0000
	addeq   sp, sp, #0x6c
	ldmeqfd sp!, {r4-r7,pc}
	ldr     r0, [pc, #0x1cc] @ [0x20b261c] (=0x293130)
	str     r0, [sp, #0x50]
	ldr     r0, [r4, #0x4]
	str     r0, [sp, #0x54]
	ldr     r0, [r4, #0x8]
	str     r0, [sp, #0x58]
	ldr     r1, [r4, #0xc]
	str     r1, [sp, #0x5c]
	ldrh    r0, [r4, #0x1e]
	tst     r0, #0x20
	bicne   r0, r1, #31, 16 @ #0x1f0000
	ldr     r1, [pc, #0x1a4] @ [0x20b2620] (=0x2b2a)
	strne   r0, [sp, #0x5c]
	str     r1, [sp, #0x60]
	ldr     r2, [r4, #0x14]
	ldr     r0, [sp, #0x50]
	str     r2, [sp, #0x64]
	ldrh    r3, [r4, #0x1c]
	add     r1, sp, #0x54
	mov     r2, #0x6
	str     r3, [sp, #0x68]
	bl      Function_20b275c
	ldrh    r0, [r4, #0x1e]
	tst     r0, #0x1
	beq     branch_20b2570
	mov     r2, #0x8
	str     r2, [sp, #0x18]
	ldrh    r1, [r4, #0x20]
	add     r0, r4, #0x2c
	strh    r1, [sp, #0x44]
	ldrh    r1, [r4, #0x22]
	strh    r1, [sp, #0x46]
	ldr     r1, [r4, #0x24]
	str     r1, [sp, #0x48]
	ldr     r1, [r4, #0x28]
	str     r1, [sp, #0x4c]
	ldrh    r1, [r4, #0x1e]
	tst     r1, #0x2
	orrne   r1, r2, #0x1
	strne   r1, [sp, #0x18]
	bne     branch_20b2500
	ldr     r1, [r0]
	str     r1, [sp, #0x30]
	ldr     r1, [r0, #0x4]
	add     r0, r0, #0x8
	str     r1, [sp, #0x34]
.arm
branch_20b2500: @ 20b2500 :arm
	ldrh    r1, [r4, #0x1e]
	tst     r1, #0x4
	ldrne   r1, [sp, #0x18]
	orrne   r1, r1, #0x2
	strne   r1, [sp, #0x18]
	bne     branch_20b252c
	ldrsh   r1, [r0]
	strh    r1, [sp, #0x38]
	ldrsh   r1, [r0, #0x2]
	add     r0, r0, #0x4
	strh    r1, [sp, #0x3a]
.arm
branch_20b252c: @ 20b252c :arm
	ldrh    r1, [r4, #0x1e]
	tst     r1, #0x8
	ldrne   r0, [sp, #0x18]
	orrne   r0, r0, #0x4
	strne   r0, [sp, #0x18]
	bne     branch_20b2554
	ldr     r1, [r0]
	str     r1, [sp, #0x3c]
	ldr     r0, [r0, #0x4]
	str     r0, [sp, #0x40]
branch_20b2554: @ 20b2554 :arm
	ldrb    r1, [r6, #0x16]
	ldr     r0, [pc, #0xc4] @ [0x20b2624] (=Unknown_2100f54)
	ldr     r1, [r0, r1, lsl #0x2]
	cmp     r1, #0x0
	beq     branch_20b2570
	add     r0, sp, #0x18
	blx     r1
branch_20b2570: @ 20b2570 :arm
	ldrb    r0, [r6, #0x19]
	cmp     r5, r0
	bhs     branch_20b25e8
	cmp     r6, #0x0
	ldrne   r0, [r6, #0xc]
	cmpne   r0, #0x0
	addne   r2, r6, r0
	moveq   r2, #0x0
	cmp     r2, #0x0
	beq     branch_20b25d4
	beq     branch_20b25c0
	ldrb    r0, [r2, #0x1]
	cmp     r5, r0
	bhs     branch_20b25c0
	ldrh    r1, [r2, #0x6]
	ldrh    r0, [r2, r1]
	add     r1, r2, r1
	add     r1, r1, #0x4
	mla     r1, r0, r5, r1
	b       branch_20b25c4
@ 0x20b25c0

.arm
branch_20b25c0: @ 20b25c0 :arm
	mov     r1, #0x0
.arm
branch_20b25c4: @ 20b25c4 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r2, r2, r0
	bne     branch_20b25d8
.arm
branch_20b25d4: @ 20b25d4 :arm
	mov     r2, #0x0
.arm
branch_20b25d8: @ 20b25d8 :arm
	ldr     r0, [r2, #0x8]
	ldr     r1, [r2, #0xc]
	add     r0, r2, r0
	bl      Function_20b26a8
.arm
branch_20b25e8: @ 20b25e8 :arm
	ldr     r3, [r6, #0x20]
	cmp     r3, #1, 20 @ #0x1000
	addeq   sp, sp, #0x6c
	ldmeqfd sp!, {r4-r7,pc}
	add     r1, sp, #0x0
	mov     r0, #0x1b
	mov     r2, #0x3
	str     r3, [sp]
	str     r3, [sp, #0x4]
	str     r3, [sp, #0x8]
	bl      Function_20b275c
	add     sp, sp, #0x6c
	ldmfd   sp!, {r4-r7,pc}
@ 0x20b261c

.word 0x293130 @ 0x20b261c
.word 0x2b2a @ 0x20b2620
.word Unknown_2100f54 @ 0x20b2624



.arm
.globl Function_20b2628
Function_20b2628: @ 20b2628 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, =RAM_21c89f4
	ldr     r0, [r0, #RAM_21c89f4_4]
	cmp     r0, #0x0
	beq     branch_20b2640
	bl      Function_20b2684
branch_20b2640: @ 20b2640 :arm

	ldr     r0, =RAM_21c89f4
	ldr     r0, [r0, #RAM_21c89f4_0]
	cmp     r0, #0x0
	ldrne   r2, [r0]
	cmpne   r2, #0x0
	ldmeqfd sp!, {r3,pc}

	ldr     r1, =GFX_FIFO
	add     r0, r0, #0x4
	mov     r2, r2, lsl #2
	bl      MIi_CpuSend32
	ldr     r0, =RAM_21c89f4
	mov     r1, #0x0
	ldr     r0, [r0, #RAM_21c89f4_0]
	str     r1, [r0]
	ldmfd   sp!, {r3,pc}
@ 0x20b267c

.pool



.arm
Function_20b2684: @ 20b2684 :arm
	ldr     r0, =RAM_21c89f4
branch_20b2688: @ 20b2688 :arm
	ldr     r1, [r0, #RAM_21c89f4_4]
	cmp     r1, #0x0
	bne     branch_20b2688

	bx      lr
@ 0x20b2698

.pool



.arm
Function_20b269c: @ 20b269c :arm
	mov     r1, #0x0
	str     r1, [r0]
	bx      lr
@ 0x20b26a8


.arm
Function_20b26a8: @ 20b26a8 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r1
	mov     r5, r0
	cmp     r4, #0x100
	blo     branch_20b26d0

	ldr     r1, =Unknown_2101148
	mvn     r0, #0x0
	ldr     r1, [r1]
	cmp     r1, r0
	bne     branch_20b26e8

branch_20b26d0: @ 20b26d0 :arm
	mov     r2, r4, lsr #2
	ldr     r0, [r5]
	add     r1, r5, #0x4
	sub     r2, r2, #0x1
	bl      Function_20b275c
	ldmfd   sp!, {r3-r5,pc}

branch_20b26e8: @ 20b26e8 :arm
	bl      Function_20b2628
	ldr     r0, =RAM_21c89f4
	mov     r1, #0x1
	str     r1, [r0, #RAM_21c89f4_4]
	ldr     r0, [r0, #RAM_21c89f4_8]
	cmp     r0, #0x0
	beq     branch_20b2728

	ldr     r1, =RAM_21c89f8
	ldr     r0, =Unknown_2101148
	str     r1, [sp]
	ldr     r0, [r0]
	ldr     r3, =Function_20b269c
	mov     r1, r5
	mov     r2, r4
	bl      MI_SendGXCommandAsyncFast
	ldmfd   sp!, {r3-r5,pc}

branch_20b2728: @ 20b2728 :arm
	ldr     r1, =RAM_21c89f8
	ldr     r0, =Unknown_2101148
	str     r1, [sp]
	ldr     r0, [r0]
	ldr     r3, =Function_20b269c
	mov     r1, r5
	mov     r2, r4
	bl      MI_SendGXCommandAsync
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b274c

.pool



.arm
.globl Function_20b275c
Function_20b275c: @ 20b275c :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r3, =RAM_21c89f4
	mov     r6, r0
	ldr     r12, [r3, #RAM_21c89f4_0]
	mov     r5, r1
	mov     r4, r2
	cmp     r12, #0x0
	beq     branch_20b2810

	ldr     r0, [r3, #RAM_21c89f4_4]
	cmp     r0, #0x0
	beq     branch_20b27e4

	ldr     r2, [r12]
	add     r0, r2, #0x1
	add     r1, r0, r4
	cmp     r1, #0xc0
	bhi     branch_20b27e4

	str     r0, [r12]
	ldr     r0, [r3, #RAM_21c89f4_0]
	cmp     r4, #0x0
	add     r0, r0, r2, lsl #2
	str     r6, [r0, #0x4]
	ldmeqfd sp!, {r4-r6,pc}

	ldr     r2, [r3, #RAM_21c89f4_0]
	mov     r0, r5
	ldr     r1, [r2], #0x4
	add     r1, r2, r1, lsl #2
	mov     r2, r4, lsl #2
	bl      MIi_CpuCopyFast
	ldr     r0, =RAM_21c89f4
	ldr     r1, [r0, #RAM_21c89f4_0]
	ldr     r0, [r1]
	add     r0, r0, r4
	str     r0, [r1]
	ldmfd   sp!, {r4-r6,pc}

branch_20b27e4: @ 20b27e4 :arm
	ldr     r0, [r12]
	cmp     r0, #0x0
	beq     branch_20b27f8
	bl      Function_20b2628
	b       branch_20b2820

branch_20b27f8: @ 20b27f8 :arm
	ldr     r0, =RAM_21c89f4
	ldr     r0, [r0, #RAM_21c89f4_4]
	cmp     r0, #0x0
	beq     branch_20b2820
	bl      Function_20b2684
	b       branch_20b2820

branch_20b2810: @ 20b2810 :arm
	ldr     r0, [r3, #RAM_21c89f4_4]
	cmp     r0, #0x0
	beq     branch_20b2820
	bl      Function_20b2684
branch_20b2820: @ 20b2820 :arm

	ldr     r1, =GFX_FIFO
	mov     r0, r5
	mov     r2, r4, lsl #2
	str     r6, [r1]
	bl      MIi_CpuSend32
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b2838

.pool



.arm
Function_20b2840: @ 20b2840 :arm
	stmfd   sp!, {r4-r6,lr}
	sub     sp, sp, #0x40
	mov     r6, r0
	mov     r5, r1
	bl      Function_20b2628

	ldr     r0, =MATRIX_CONTROL
	mov     r1, #0x0
	str     r1, [r0]
	str     r1, [r0, #0x4]
	str     r1, [r0, #0x14]
	cmp     r6, #0x0
	beq     branch_20b2890

	add     r4, sp, #0x0
branch_20b2874: @ 20b2874 :arm
	mov     r0, r4
	bl      G3X_GetClipMtx
	cmp     r0, #0x0
	bne     branch_20b2874

	add     r0, sp, #0x0
	mov     r1, r6
	bl      MTX_Copy44To43_
branch_20b2890: @ 20b2890 :arm
	cmp     r5, #0x0
	beq     branch_20b28a8

branch_20b2898: @ 20b2898 :arm
	mov     r0, r5
	bl      G3X_GetVectorMtx
	cmp     r0, #0x0
	bne     branch_20b2898

branch_20b28a8: @ 20b28a8 :arm
	ldr     r1, =MATRIX_POP
	mov     r0, #0x1
	str     r0, [r1]
	mov     r0, #0x2
	str     r0, [r1, #-0x8]
	add     sp, sp, #0x40
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b28c4

.pool



.arm
.globl Function_20b28cc
Function_20b28cc: @ 20b28cc :arm
	stmfd   sp!, {r3,lr}
	bl      G3X_Init
	bl      Function_20af32c

	ldr     r1, =GFX_STATUS
	ldr     r0, [r1]
	bic     r0, r0, #0xc0000000
	orr     r0, r0, #0x80000000
	str     r0, [r1]

	ldmfd   sp!, {r3,pc}
@ 0x20b28f0

.pool



.arm
Function_20b28f4: @ 20b28f4 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r0
	ldr     r2, [r10]
	ldr     r1, =BVA0_MagicConstant
	cmp     r2, r1
	bhi     branch_20b2940
	bhs     branch_20b2b00

	sub     r0, r1, #0x900 @ BMA0_MagicConstant
	cmp     r2, r0
	bhi     branch_20b2930
	bhs     branch_20b2b00

	sub     r0, r1, #0x1300 @ BEA0_MagicConstant
	cmp     r2, r0
	beq     branch_20b2b00
	b       branch_20b2b08

branch_20b2930: @ 20b2930 :arm
	sub     r0, r1, #0x200 @ BTA0_MagicConstant
	cmp     r2, r0
	beq     branch_20b2b00
	b       branch_20b2b08

branch_20b2940: @ 20b2940 :arm
	ldr     r0, =BTP0_MagicConstant
	cmp     r2, r0
	bhi     branch_20b2960
	bhs     branch_20b2b00

	ldr     r0, =BMD0_MagicConstant
	cmp     r2, r0
	beq     branch_20b296c_bmd0
	b       branch_20b2b08

branch_20b2960: @ 20b2960 :arm
	add     r0, r0, #0x80000
	cmp     r2, r0
	bne     branch_20b2b08

branch_20b296c_bmd0: @ 20b296c :arm
	mov     r5, #0x1
	mov     r0, r10
	mov     r6, r5
	mov     r7, r5
	bl      Function_20b3c1c_GetTexOffsets
	movs    r4, r0
	beq     branch_20b2ad0

	bl      Function_20ae8c4
	mov     r9, r0
	mov     r0, r4
	bl      Function_20ae8d8
	mov     r8, r0
	mov     r0, r4
	bl      Function_20aea04
	str     r0, [sp]
	cmp     r9, #0x0
	beq     branch_20b29d4

	ldr     r0, =Unknown_2100dec
	mov     r1, #0x0
	ldr     r3, [r0] @ Function_20a5a2c
	mov     r0, r9
	mov     r2, r1
	blx     r3
	movs    r11, r0
	moveq   r5, #0x0
	b       branch_20b29d8

branch_20b29d4: @ 20b29d4 :arm
	mov     r11, #0x0
branch_20b29d8: @ 20b29d8 :arm
	cmp     r8, #0x0
	beq     branch_20b2a04

	ldr     r1, =Unknown_2100dec
	mov     r0, r8
	ldr     r3, [r1] @ Function_20a5a2c
	mov     r1, #0x1
	mov     r2, #0x0
	blx     r3
	movs    r8, r0
	moveq   r6, #0x0
	b       branch_20b2a08

branch_20b2a04: @ 20b2a04 :arm
	mov     r8, #0x0
branch_20b2a08: @ 20b2a08 :arm
	ldr     r0, [sp]
	cmp     r0, #0x0
	beq     branch_20b2a38

	ldr     r1, =Unknown_2100df4
	ldrh    r2, [r4, #0x20]
	ldr     r3, [r1] @ Function_20a5a3c
	and     r1, r2, #0x8000
	mov     r2, #0x0
	blx     r3
	movs    r9, r0
	moveq   r7, #0x0
	b       branch_20b2a3c

branch_20b2a38: @ 20b2a38 :arm
	mov     r9, #0x0
branch_20b2a3c: @ 20b2a3c :arm
	cmp     r5, #0x0
	cmpne   r6, #0x0
	cmpne   r7, #0x0
	bne     branch_20b2a9c

	cmp     r7, #0x0
	beq     branch_20b2a64
	ldr     r1, =Unknown_2100df8
	mov     r0, r9
	ldr     r1, [r1]
	blx     r1
branch_20b2a64: @ 20b2a64 :arm

	cmp     r6, #0x0
	beq     branch_20b2a7c
	ldr     r1, =Unknown_2100df0
	mov     r0, r8
	ldr     r1, [r1] @ Function_20a5a34
	blx     r1
branch_20b2a7c: @ 20b2a7c :arm

	cmp     r5, #0x0
	beq     branch_20b2a94
	ldr     r1, =Unknown_2100df0
	mov     r0, r11
	ldr     r1, [r1] @ Function_20a5a34
	blx     r1
branch_20b2a94: @ 20b2a94 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r11,pc}

branch_20b2a9c: @ 20b2a9c :arm
	mov     r0, r4
	mov     r1, r11
	mov     r2, r8
	bl      Function_20ae8ec

	mov     r0, r4
	mov     r1, r9
	bl      Function_20aea18

	mov     r0, r4
	mov     r1, #0x1
	bl      Function_20ae900

	mov     r0, r4
	mov     r1, #0x1
	bl      Function_20aea20
branch_20b2ad0: @ 20b2ad0 :arm
	ldr     r1, [r10]
	ldr     r0, =BMD0_MagicConstant
	cmp     r1, r0
	bne     branch_20b2af8

	mov     r0, r10
	bl      Function_20b3c0c_GetAdrOfDataPart
	cmp     r4, #0x0
	beq     branch_20b2af8

	mov     r1, r4
	bl      Function_20af1e8
branch_20b2af8: @ 20b2af8 :arm
	mov     r0, #0x1
	ldmfd   sp!, {r3-r11,pc}

branch_20b2b00: @ 20b2b00 :arm
	mov     r0, #0x1
	ldmfd   sp!, {r3-r11,pc}

branch_20b2b08: @ 20b2b08 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b2b10

.pool



.arm
.globl Function_20b2b2c
Function_20b2b2c: @ 20b2b2c :arm
	stmfd   sp!, {r4-r9,lr}
	sub     sp, sp, #0x1c
	mov     r5, r1
	mov     r4, r2
	ldr     r6, [pc, #0x168] @ [0x20b2cac] (=RAM_21c5a94)
	ldr     r1, [pc, #0x168] @ [0x20b2cb0] (=RAM_21c5ad8)
	add     r2, sp, #0x10
	bl      MTX_MultVec43
	ldr     r1, [sp, #0x14]
	ldr     r0, [r6, #0x1c]
	ldr     r2, [sp, #0x10]
	smull   r8, r7, r1, r0
	ldr     r0, [r6, #0xc]
	ldr     r3, [sp, #0x18]
	smlal   r8, r7, r2, r0
	ldr     r1, [r6, #0x2c]
	ldr     r0, [r6, #0x3c]
	smlal   r8, r7, r3, r1
	mov     r1, r8, lsr #12
	orr     r1, r1, r7, lsl #20
	add     r0, r1, r0
	bl      FX_InvAsync
	ldr     r2, [sp, #0x14]
	ldr     r1, [r6, #0x10]
	ldr     r0, [r6, #0x14]
	smull   r9, r8, r2, r1
	smull   lr, r12, r2, r0
	ldr     r1, [sp, #0x10]
	ldr     r3, [r6]
	ldr     r0, [sp, #0x18]
	smlal   r9, r8, r1, r3
	ldr     r7, [r6, #0x20]
	ldr     r2, [r6, #0x30]
	smlal   r9, r8, r0, r7
	mov     r3, r9, lsr #12
	orr     r3, r3, r8, lsl #20
	add     r7, r3, r2
	ldr     r3, [r6, #0x4]
	ldr     r8, [r6, #0x24]
	smlal   lr, r12, r1, r3
	smlal   lr, r12, r0, r8
	mov     r0, lr, lsr #12
	ldr     r2, [r6, #0x34]
	orr     r0, r0, r12, lsl #20
	add     r8, r0, r2
	bl      FX_GetDivResultFx64c
	umull   lr, r12, r0, r7
	mov     r2, r7, asr #31
	mla     r12, r0, r2, r12
	mla     r12, r1, r7, r12
	adds    lr, lr, #2, 2 @ #0x80000000
	adc     r2, r12, #0x0
	add     r2, r2, #1, 20 @ #0x1000
	add     r2, r2, r2, lsr #31
	mov     r7, r2, asr #1
	mov     r3, r8, asr #31
	umull   r12, r2, r0, r8
	mla     r2, r0, r3, r2
	mla     r2, r1, r8, r2
	adds    r0, r12, #2, 2 @ #0x80000000
	adc     r0, r2, #0x0
	add     r0, r0, #1, 20 @ #0x1000
	add     r0, r0, r0, lsr #31
	mov     r8, r0, asr #1
	cmp     r7, #0x0
	mov     r6, #0x0
	cmpge   r8, #0x0
	blt     branch_20b2c48
	cmp     r7, #1, 20 @ #0x1000
	cmple   r8, #1, 20 @ #0x1000
	ble     branch_20b2c4c
.arm
branch_20b2c48: @ 20b2c48 :arm
	mvn     r6, #0x0
.arm
branch_20b2c4c: @ 20b2c4c :arm
	add     r0, sp, #0xc
	add     r1, sp, #0x8
	add     r2, sp, #0x4
	add     r3, sp, #0x0
	bl      Function_20af6ec
	ldr     r2, [sp, #0xc]
	ldr     r0, [sp, #0x4]
	ldr     r12, [sp]
	sub     r0, r0, r2
	mul     r0, r7, r0
	add     r1, r0, #2, 22 @ #0x800
	ldr     r3, [sp, #0x8]
	add     r1, r2, r1, asr #12
	sub     r0, r12, r3
	mul     r0, r8, r0
	str     r1, [r5]
	ldr     r1, [sp, #0x8]
	add     r0, r0, #2, 22 @ #0x800
	rsb     r1, r1, #0xbf
	sub     r1, r1, r0, asr #12
	mov     r0, r6
	str     r1, [r4]
	add     sp, sp, #0x1c
	ldmfd   sp!, {r4-r9,pc}
@ 0x20b2cac

.word RAM_21c5a94 @ 0x20b2cac
.word RAM_21c5ad8 @ 0x20b2cb0



.arm
.globl Function_20b2cb4
Function_20b2cb4: @ 20b2cb4 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, r1
	mov     r1, r2
	bl      Function_20ae490
	mov     r1, r0
	mov     r0, r4
	bl      Function_20a59ec
	ldmfd   sp!, {r4,pc}
@ 0x20b2cd8


.arm
.globl Function_20b2cd8
Function_20b2cd8: @ 20b2cd8 :arm
	ldr     r12, [pc, #0x0] @ [0x20b2ce0] (=Function_20a5a00)
	bx      r12
@ 0x20b2ce0

.word Function_20a5a00 @ 0x20b2ce0



.arm
.globl Function_20b2ce4
Function_20b2ce4: @ 20b2ce4 :arm
	stmfd   sp!, {r4-r8,lr}
	cmp     r0, #0x0
	ldrne   r4, [r0, #0x8]
	ldrb    r3, [r0, #0x18]
	cmpne   r4, #0x0
	addne   lr, r0, r4
	moveq   lr, #0x0
	cmp     r3, #0x0
	mov     r12, #0x0
	ldmlsfd sp!, {r4-r8,pc}
	mvn     r4, r2
	add     r0, lr, #0x4
	mov     r7, r12
	mov     r6, r12
.arm
branch_20b2d1c: @ 20b2d1c :arm
	cmp     lr, #0x0
	beq     branch_20b2d64
	cmp     r0, #0x0
	beq     branch_20b2d50
	ldrb    r5, [lr, #0x5]
	cmp     r12, r5
	bhs     branch_20b2d50
	ldrh    r8, [lr, #0xa]
	ldrh    r5, [r0, r8]
	add     r8, r0, r8
	add     r8, r8, #0x4
	mla     r8, r5, r12, r8
	b       branch_20b2d54
@ 0x20b2d50

.arm
branch_20b2d50: @ 20b2d50 :arm
	mov     r8, r7
.arm
branch_20b2d54: @ 20b2d54 :arm
	cmp     r8, #0x0
	ldrne   r5, [r8]
	addne   r8, lr, r5
	bne     branch_20b2d68
.arm
branch_20b2d64: @ 20b2d64 :arm
	mov     r8, r6
.arm
branch_20b2d68: @ 20b2d68 :arm
	ldrh    r5, [r8, #0x1e]
	cmp     r1, #0x0
	add     r12, r12, #0x1
	orrne   r5, r5, r2
	andeq   r5, r5, r4
	strh    r5, [r8, #0x1e]
	cmp     r12, r3
	blo     branch_20b2d1c
	ldmfd   sp!, {r4-r8,pc}
@ 0x20b2d8c


.arm
.globl Function_20b2d8c
Function_20b2d8c: @ 20b2d8c :arm
	stmfd   sp!, {r4-r8,lr}
	cmp     r0, #0x0
	ldrne   r4, [r0, #0x8]
	ldrb    r3, [r0, #0x18]
	cmpne   r4, #0x0
	addne   lr, r0, r4
	moveq   lr, #0x0
	cmp     r3, #0x0
	mov     r12, #0x0
	ldmlsfd sp!, {r4-r8,pc}
	mvn     r4, r2
	add     r0, lr, #0x4
	mov     r7, r12
	mov     r6, r12
.arm
branch_20b2dc4: @ 20b2dc4 :arm
	cmp     lr, #0x0
	beq     branch_20b2e0c
	cmp     r0, #0x0
	beq     branch_20b2df8
	ldrb    r5, [lr, #0x5]
	cmp     r12, r5
	bhs     branch_20b2df8
	ldrh    r8, [lr, #0xa]
	ldrh    r5, [r0, r8]
	add     r8, r0, r8
	add     r8, r8, #0x4
	mla     r8, r5, r12, r8
	b       branch_20b2dfc
@ 0x20b2df8

.arm
branch_20b2df8: @ 20b2df8 :arm
	mov     r8, r7
.arm
branch_20b2dfc: @ 20b2dfc :arm
	cmp     r8, #0x0
	ldrne   r5, [r8]
	addne   r8, lr, r5
	bne     branch_20b2e10
.arm
branch_20b2e0c: @ 20b2e0c :arm
	mov     r8, r6
.arm
branch_20b2e10: @ 20b2e10 :arm
	ldr     r5, [r8, #0x10]
	cmp     r1, #0x0
	orrne   r5, r5, r2
	andeq   r5, r5, r4
	add     r12, r12, #0x1
	str     r5, [r8, #0x10]
	cmp     r12, r3
	blo     branch_20b2dc4
	ldmfd   sp!, {r4-r8,pc}
@ 0x20b2e34


.arm
Function_20b2e34: @ 20b2e34 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b2e94
	adds    r12, lr, #0x4
	beq     branch_20b2e80
	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b2e80
	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b2e84
@ 0x20b2e80

.arm
branch_20b2e80: @ 20b2e80 :arm
	mov     r1, #0x0
.arm
branch_20b2e84: @ 20b2e84 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r3, lr, r0
	bne     branch_20b2e98
.arm
branch_20b2e94: @ 20b2e94 :arm
	mov     r3, #0x0
.arm
branch_20b2e98: @ 20b2e98 :arm
	mov     r0, #2, 18 @ #0x8000
	ldr     r1, [r3, #0x4]
	rsb     r0, r0, #0x0
	and     r0, r1, r0
	orr     r0, r0, r2
	str     r0, [r3, #0x4]
	ldmfd   sp!, {r3,pc}
@ 0x20b2eb4

.arm
Function_20b2eb4: @ 20b2eb4 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b2f14
	adds    r12, lr, #0x4
	beq     branch_20b2f00
	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b2f00
	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b2f04
@ 0x20b2f00

.arm
branch_20b2f00: @ 20b2f00 :arm
	mov     r1, #0x0
.arm
branch_20b2f04: @ 20b2f04 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r3, lr, r0
	bne     branch_20b2f18
.arm
branch_20b2f14: @ 20b2f14 :arm
	mov     r3, #0x0
.arm
branch_20b2f18: @ 20b2f18 :arm
	ldr     r1, [r3, #0x4]
	ldr     r0, [pc, #0xc] @ [0x20b2f30] (=0x8000ffff)
	and     r0, r1, r0
	orr     r0, r0, r2, lsl #16
	str     r0, [r3, #0x4]
	ldmfd   sp!, {r3,pc}
@ 0x20b2f30

.word 0x8000ffff @ 0x20b2f30
.arm
Function_20b2f34: @ 20b2f34 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b2f94
	adds    r12, lr, #0x4
	beq     branch_20b2f80
	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b2f80
	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b2f84
@ 0x20b2f80

.arm
branch_20b2f80: @ 20b2f80 :arm
	mov     r1, #0x0
.arm
branch_20b2f84: @ 20b2f84 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r3, lr, r0
	bne     branch_20b2f98
.arm
branch_20b2f94: @ 20b2f94 :arm
	mov     r3, #0x0
.arm
branch_20b2f98: @ 20b2f98 :arm
	mov     r0, #2, 18 @ #0x8000
	ldr     r1, [r3, #0x8]
	rsb     r0, r0, #0x0
	and     r0, r1, r0
	orr     r0, r0, r2
	str     r0, [r3, #0x8]
	ldmfd   sp!, {r3,pc}
@ 0x20b2fb4

.arm
Function_20b2fb4: @ 20b2fb4 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b3014
	adds    r12, lr, #0x4
	beq     branch_20b3000
	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b3000
	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b3004
@ 0x20b3000

.arm
branch_20b3000: @ 20b3000 :arm
	mov     r1, #0x0
.arm
branch_20b3004: @ 20b3004 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r3, lr, r0
	bne     branch_20b3018
.arm
branch_20b3014: @ 20b3014 :arm
	mov     r3, #0x0
.arm
branch_20b3018: @ 20b3018 :arm
	ldr     r1, [r3, #0x8]
	ldr     r0, [pc, #0xc] @ [0x20b3030] (=0x8000ffff)
	and     r0, r1, r0
	orr     r0, r0, r2, lsl #16
	str     r0, [r3, #0x8]
	ldmfd   sp!, {r3,pc}
@ 0x20b3030

.word 0x8000ffff @ 0x20b3030
.arm
Function_20b3034: @ 20b3034 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b3094
	adds    r12, lr, #0x4
	beq     branch_20b3080
	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b3080
	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b3084
@ 0x20b3080

.arm
branch_20b3080: @ 20b3080 :arm
	mov     r1, #0x0
.arm
branch_20b3084: @ 20b3084 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r1, lr, r0
	bne     branch_20b3098
.arm
branch_20b3094: @ 20b3094 :arm
	mov     r1, #0x0
.arm
branch_20b3098: @ 20b3098 :arm
	ldr     r0, [r1, #0xc]
	bic     r0, r0, #0xf
	orr     r0, r0, r2
	str     r0, [r1, #0xc]
	ldmfd   sp!, {r3,pc}
@ 0x20b30ac

.arm
Function_20b30ac: @ 20b30ac :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b310c
	adds    r12, lr, #0x4
	beq     branch_20b30f8
	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b30f8
	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b30fc
@ 0x20b30f8

.arm
branch_20b30f8: @ 20b30f8 :arm
	mov     r1, #0x0
.arm
branch_20b30fc: @ 20b30fc :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r1, lr, r0
	bne     branch_20b3110
.arm
branch_20b310c: @ 20b310c :arm
	mov     r1, #0x0
.arm
branch_20b3110: @ 20b3110 :arm
	ldr     r0, [r1, #0xc]
	bic     r0, r0, #0x30
	orr     r0, r0, r2, lsl #4
	str     r0, [r1, #0xc]
	ldmfd   sp!, {r3,pc}
@ 0x20b3124

.arm
Function_20b3124: @ 20b3124 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b3184
	adds    r12, lr, #0x4
	beq     branch_20b3170
	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b3170
	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b3174
@ 0x20b3170

.arm
branch_20b3170: @ 20b3170 :arm
	mov     r1, #0x0
.arm
branch_20b3174: @ 20b3174 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r1, lr, r0
	bne     branch_20b3188
.arm
branch_20b3184: @ 20b3184 :arm
	mov     r1, #0x0
.arm
branch_20b3188: @ 20b3188 :arm
	ldr     r0, [r1, #0xc]
	bic     r0, r0, #0xc0
	orr     r0, r0, r2, lsl #6
	str     r0, [r1, #0xc]
	ldmfd   sp!, {r3,pc}
@ 0x20b319c

.arm
Function_20b319c: @ 20b319c :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b31fc
	adds    r12, lr, #0x4
	beq     branch_20b31e8
	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b31e8
	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b31ec
@ 0x20b31e8

.arm
branch_20b31e8: @ 20b31e8 :arm
	mov     r1, #0x0
.arm
branch_20b31ec: @ 20b31ec :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r1, lr, r0
	bne     branch_20b3200
.arm
branch_20b31fc: @ 20b31fc :arm
	mov     r1, #0x0
.arm
branch_20b3200: @ 20b3200 :arm
	ldr     r0, [r1, #0xc]
	bic     r0, r0, #63, 8 @ #0x3f000000
	orr     r0, r0, r2, lsl #24
	str     r0, [r1, #0xc]
	ldmfd   sp!, {r3,pc}
@ 0x20b3214


.arm
Function_20b3214: @ 20b3214 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b3274
	adds    r12, lr, #0x4
	beq     branch_20b3260
	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b3260
	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b3264
@ 0x20b3260

.arm
branch_20b3260: @ 20b3260 :arm
	mov     r1, #0x0
.arm
branch_20b3264: @ 20b3264 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r1, lr, r0
	bne     branch_20b3278
.arm
branch_20b3274: @ 20b3274 :arm
	mov     r1, #0x0
.arm
branch_20b3278: @ 20b3278 :arm
	ldr     r0, [r1, #0xc]
	bic     r0, r0, #31, 16 @ #0x1f0000
	orr     r0, r0, r2, lsl #16
	str     r0, [r1, #0xc]
	ldmfd   sp!, {r3,pc}
@ 0x20b328c

.arm
Function_20b328c: @ 20b328c :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b32ec
	adds    r12, lr, #0x4
	beq     branch_20b32d8
	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b32d8
	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b32dc
@ 0x20b32d8

.arm
branch_20b32d8: @ 20b32d8 :arm
	mov     r1, #0x0
.arm
branch_20b32dc: @ 20b32dc :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r1, lr, r0
	bne     branch_20b32f0
.arm
branch_20b32ec: @ 20b32ec :arm
	mov     r1, #0x0
.arm
branch_20b32f0: @ 20b32f0 :arm
	ldr     r0, [r1, #0xc]
	cmp     r2, #0x0
	orrne   r0, r0, #2, 18 @ #0x8000
	biceq   r0, r0, #2, 18 @ #0x8000
	str     r0, [r1, #0xc]
	ldmfd   sp!, {r3,pc}
@ 0x20b3308


.arm
Function_20b3308: @ 20b3308 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b3368
	adds    r12, lr, #0x4
	beq     branch_20b3354
	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b3354
	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b3358
@ 0x20b3354

.arm
branch_20b3354: @ 20b3354 :arm
	mov     r1, #0x0
.arm
branch_20b3358: @ 20b3358 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r1, lr, r0
	bne     branch_20b336c
.arm
branch_20b3368: @ 20b3368 :arm
	mov     r1, #0x0
.arm
branch_20b336c: @ 20b336c :arm
	ldr     r0, [r1, #0xc]
	cmp     r2, #0x0
	orrne   r0, r0, #1, 18 @ #0x4000
	biceq   r0, r0, #1, 18 @ #0x4000
	str     r0, [r1, #0xc]
	ldmfd   sp!, {r3,pc}
@ 0x20b3384

.arm
Function_20b3384: @ 20b3384 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b33e4
	adds    r12, lr, #0x4
	beq     branch_20b33d0
	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b33d0
	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b33d4
@ 0x20b33d0

.arm
branch_20b33d0: @ 20b33d0 :arm
	mov     r1, #0x0
.arm
branch_20b33d4: @ 20b33d4 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r1, lr, r0
	bne     branch_20b33e8
.arm
branch_20b33e4: @ 20b33e4 :arm
	mov     r1, #0x0
branch_20b33e8: @ 20b33e8 :arm
	ldr     r0, [r1, #0xc]
	cmp     r2, #0x0
	orrne   r0, r0, #2, 20 @ #0x2000
	biceq   r0, r0, #2, 20 @ #0x2000
	str     r0, [r1, #0xc]
	ldmfd   sp!, {r3,pc}
@ 0x20b3400


.arm
Function_20b3400: @ 20b3400 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b3460
	adds    r12, lr, #0x4
	beq     branch_20b344c
	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b344c
	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b3450

branch_20b344c: @ 20b344c :arm
	mov     r1, #0x0
branch_20b3450: @ 20b3450 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r1, lr, r0
	bne     branch_20b3464

branch_20b3460: @ 20b3460 :arm
	mov     r1, #0x0
branch_20b3464: @ 20b3464 :arm
	ldr     r0, [r1, #0xc]
	cmp     r2, #0x0
	orrne   r0, r0, #1, 20 @ #0x1000
	biceq   r0, r0, #1, 20 @ #0x1000
	str     r0, [r1, #0xc]
	ldmfd   sp!, {r3,pc}
@ 0x20b347c


.arm
Function_20b347c: @ 20b347c :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldrne   r3, [r0, #0x8]
	cmpne   r3, #0x0
	addne   lr, r0, r3
	moveq   lr, #0x0
	cmp     lr, #0x0
	beq     branch_20b34dc

	adds    r12, lr, #0x4
	beq     branch_20b34c8

	ldrb    r0, [lr, #0x5]
	cmp     r1, r0
	bhs     branch_20b34c8

	ldrh    r3, [lr, #0xa]
	ldrh    r0, [r12, r3]
	add     r3, r12, r3
	add     r3, r3, #0x4
	mla     r1, r0, r1, r3
	b       branch_20b34cc

branch_20b34c8: @ 20b34c8 :arm
	mov     r1, #0x0
branch_20b34cc: @ 20b34cc :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r1, lr, r0
	bne     branch_20b34e0

branch_20b34dc: @ 20b34dc :arm
	mov     r1, #0x0
branch_20b34e0: @ 20b34e0 :arm
	ldr     r0, [r1, #0xc]
	cmp     r2, #0x0
	orrne   r0, r0, #0x800
	biceq   r0, r0, #0x800
	str     r0, [r1, #0xc]
	ldmfd   sp!, {r3,pc}
@ 0x20b34f8


.arm
.globl Function_20b34f8
Function_20b34f8: @ 20b34f8 :arm
	cmp     r0, #0x0
	ldrne   r2, [r0, #0x8]
	cmpne   r2, #0x0
	addne   r12, r0, r2
	moveq   r12, #0x0
	cmp     r12, #0x0
	beq     branch_20b3554
	adds    r3, r12, #0x4
	beq     branch_20b3540
	ldrb    r0, [r12, #0x5]
	cmp     r1, r0
	bhs     branch_20b3540
	ldrh    r2, [r12, #0xa]
	ldrh    r0, [r3, r2]
	add     r2, r3, r2
	add     r2, r2, #0x4
	mla     r1, r0, r1, r2
	b       branch_20b3544

branch_20b3540: @ 20b3540 :arm
	mov     r1, #0x0
branch_20b3544: @ 20b3544 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r0, r12, r0
	bne     branch_20b3558

branch_20b3554: @ 20b3554 :arm
	mov     r0, #0x0
branch_20b3558: @ 20b3558 :arm
	ldr     r0, [r0, #0xc]
	and     r0, r0, #0xf
	bx      lr
@ 0x20b3564


.arm
.globl Function_20b3564
Function_20b3564: @ 20b3564 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}

branch_20b3580: @ 20b3580 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b2e34
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b3580

	ldmfd   sp!, {r4-r6,pc}
@ 0x20b35a4


.arm
.globl Function_20b35a4
Function_20b35a4: @ 20b35a4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}

branch_20b35c0: @ 20b35c0 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b2eb4
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b35c0

	ldmfd   sp!, {r4-r6,pc}
@ 0x20b35e4


.arm
.globl Function_20b35e4
Function_20b35e4: @ 20b35e4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}

branch_20b3600: @ 20b3600 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b2f34
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b3600

	ldmfd   sp!, {r4-r6,pc}
@ 0x20b3624


.arm
.globl Function_20b3624
Function_20b3624: @ 20b3624 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}

branch_20b3640: @ 20b3640 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b2fb4
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b3640

	ldmfd   sp!, {r4-r6,pc}
@ 0x20b3664


.arm
.globl Function_20b3664
Function_20b3664: @ 20b3664 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}

branch_20b3680: @ 20b3680 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b3034
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b3680

	ldmfd   sp!, {r4-r6,pc}
@ 0x20b36a4


.arm
.globl Function_20b36a4
Function_20b36a4: @ 20b36a4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}
branch_20b36c0: @ 20b36c0 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b30ac
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b36c0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b36e4


.arm
.globl Function_20b36e4
Function_20b36e4: @ 20b36e4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}
branch_20b3700: @ 20b3700 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b3124
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b3700
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b3724


.arm
.globl Function_20b3724
Function_20b3724: @ 20b3724 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}
branch_20b3740: @ 20b3740 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b319c
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b3740
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b3764


.arm
.globl Function_20b3764
Function_20b3764: @ 20b3764 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}
branch_20b3780: @ 20b3780 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b3214
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b3780
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b37a4


.arm
.globl Function_20b37a4
Function_20b37a4: @ 20b37a4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}
branch_20b37c0: @ 20b37c0 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b328c
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b37c0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b37e4


.arm
.globl Function_20b37e4
Function_20b37e4: @ 20b37e4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}
branch_20b3800: @ 20b3800 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b3308
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b3800
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b3824


.arm
.globl Function_20b3824
Function_20b3824: @ 20b3824 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}
branch_20b3840: @ 20b3840 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b3384
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b3840
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b3864


.arm
.globl Function_20b3864
Function_20b3864: @ 20b3864 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}
branch_20b3880: @ 20b3880 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b3400
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b3880
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b38a4


.arm
.globl Function_20b38a4
Function_20b38a4: @ 20b38a4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldrb    r0, [r6, #0x18]
	mov     r5, r1
	mov     r4, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r4-r6,pc}
branch_20b38c0: @ 20b38c0 :arm
	mov     r0, r6
	mov     r1, r4
	mov     r2, r5
	bl      Function_20b347c
	ldrb    r0, [r6, #0x18]
	add     r4, r4, #0x1
	cmp     r4, r0
	blo     branch_20b38c0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b38e4


.arm
Function_20b38e4: @ 20b38e4 :arm
	stmfd   sp!, {r4-r8,lr}
	cmp     r1, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4-r8,pc}
	ldrb    r5, [r0, #0x1]
	cmp     r5, #0x10
	bhs     branch_20b39b4
	ldmia   r1, {r2,r3,r12,lr}
	cmp     r5, #0x0
	mov     r1, #0x0
	bls     branch_20b3a9c
	mov     r4, r1
	mov     r7, r1
branch_20b3918: @ 20b3918 :arm
	cmp     r0, #0x0
	beq     branch_20b3944
	ldrb    r6, [r0, #0x1]
	cmp     r1, r6
	bhs     branch_20b3944
	ldrh    r6, [r0, #0x6]
	add     r8, r0, r6
	ldrh    r6, [r8, #0x2]
	add     r6, r8, r6
	add     r8, r6, r4
	b       branch_20b3948

branch_20b3944: @ 20b3944 :arm
	mov     r8, r7
branch_20b3948: @ 20b3948 :arm
	ldr     r6, [r8]
	cmp     r6, r2
	ldreq   r6, [r8, #0x4]
	cmpeq   r6, r3
	ldreq   r6, [r8, #0x8]
	cmpeq   r6, r12
	ldreq   r6, [r8, #0xc]
	cmpeq   r6, lr
	bne     branch_20b399c
	cmp     r0, #0x0
	beq     branch_20b3994
	cmp     r1, r5
	bhs     branch_20b3994
	ldrh    r3, [r0, #0x6]
	ldrh    r2, [r0, r3]
	add     r0, r0, r3
	add     r0, r0, #0x4
	mla     r0, r2, r1, r0
	ldmfd   sp!, {r4-r8,pc}

branch_20b3994: @ 20b3994 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4-r8,pc}

branch_20b399c: @ 20b399c :arm
	ldrb    r6, [r0, #0x1]
	add     r1, r1, #0x1
	add     r4, r4, #0x10
	cmp     r1, r6
	blo     branch_20b3918
	b       branch_20b3a9c

branch_20b39b4: @ 20b39b4 :arm
	add     r4, r0, #0x8
	ldrb    r3, [r4, #0x1]
	cmp     r3, #0x0
	beq     branch_20b3a9c
	ldrb    r7, [r4, r3, lsl #0x2]
	ldrb    r2, [r4]
	add     r6, r4, r3, lsl #2
	cmp     r2, r7
	bls     branch_20b3a08
branch_20b39d8: @ 20b39d8 :arm
	mov     r2, r7, asr #5
	ldr     r3, [r1, r2, lsl #0x2]
	and     r2, r7, #0x1f
	mov     r2, r3, lsr r2
	and     r2, r2, #0x1
	add     r2, r6, r2
	ldrb    r3, [r2, #0x1]
	ldrb    r2, [r6]
	ldrb    r7, [r4, r3, lsl #0x2]
	add     r6, r4, r3, lsl #2
	cmp     r2, r7
	bhi     branch_20b39d8
branch_20b3a08: @ 20b3a08 :arm
	cmp     r0, #0x0
	ldrb    r2, [r6, #0x3]
	beq     branch_20b3a34
	cmp     r2, r5
	bhs     branch_20b3a34
	ldrh    r3, [r0, #0x6]
	add     r4, r0, r3
	ldrh    r3, [r4, #0x2]
	add     r3, r4, r3
	add     r6, r3, r2, lsl #4
	b       branch_20b3a38

branch_20b3a34: @ 20b3a34 :arm
	mov     r6, #0x0
branch_20b3a38: @ 20b3a38 :arm
	ldr     r4, [r6]
	ldr     r3, [r1]
	cmp     r4, r3
	ldreq   r4, [r6, #0x4]
	ldreq   r3, [r1, #0x4]
	cmpeq   r4, r3
	ldreq   r4, [r6, #0x8]
	ldreq   r3, [r1, #0x8]
	cmpeq   r4, r3
	ldreq   r3, [r6, #0xc]
	ldreq   r1, [r1, #0xc]
	cmpeq   r3, r1
	bne     branch_20b3a9c
	cmp     r0, #0x0
	beq     branch_20b3a94
	cmp     r2, r5
	bhs     branch_20b3a94
	ldrh    r3, [r0, #0x6]
	ldrh    r1, [r0, r3]
	add     r0, r0, r3
	add     r0, r0, #0x4
	mla     r0, r1, r2, r0
	ldmfd   sp!, {r4-r8,pc}

branch_20b3a94: @ 20b3a94 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4-r8,pc}

branch_20b3a9c: @ 20b3a9c :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4-r8,pc}
@ 0x20b3aa4


.arm
.globl Function_20b3aa4
Function_20b3aa4: @ 20b3aa4 :arm
	stmfd   sp!, {r3-r7,lr}
	cmp     r1, #0x0
	mvneq   r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}

	ldrb    r2, [r0, #0x1]
	cmp     r2, #0x10
	bhs     branch_20b3b48

	cmp     r2, #0x0
	ldmia   r1, {r2,r3,r12,lr}
	mov     r1, #0x0
	bls     branch_20b3c04

	mov     r4, r1
	mov     r6, r1
branch_20b3ad8: @ 20b3ad8 :arm
	cmp     r0, #0x0
	beq     branch_20b3b04
	ldrb    r5, [r0, #0x1]
	cmp     r1, r5
	bhs     branch_20b3b04
	ldrh    r5, [r0, #0x6]
	add     r7, r0, r5
	ldrh    r5, [r7, #0x2]
	add     r5, r7, r5
	add     r7, r5, r4
	b       branch_20b3b08

branch_20b3b04: @ 20b3b04 :arm
	mov     r7, r6
branch_20b3b08: @ 20b3b08 :arm
	ldr     r5, [r7]
	cmp     r5, r2
	ldreq   r5, [r7, #0x4]
	cmpeq   r5, r3
	ldreq   r5, [r7, #0x8]
	cmpeq   r5, r12
	ldreq   r5, [r7, #0xc]
	cmpeq   r5, lr
	moveq   r0, r1
	ldmeqfd sp!, {r3-r7,pc}
	ldrb    r5, [r0, #0x1]
	add     r1, r1, #0x1
	add     r4, r4, #0x10
	cmp     r1, r5
	blo     branch_20b3ad8
	b       branch_20b3c04

branch_20b3b48: @ 20b3b48 :arm
	add     r5, r0, #0x8
	ldrb    r4, [r5, #0x1]
	cmp     r4, #0x0
	beq     branch_20b3c04
	ldrb    r7, [r5, r4, lsl #0x2]
	ldrb    r3, [r5]
	add     r6, r5, r4, lsl #2
	cmp     r3, r7
	bls     branch_20b3b9c

branch_20b3b6c: @ 20b3b6c :arm
	mov     r3, r7, asr #5
	ldr     r4, [r1, r3, lsl #0x2]
	and     r3, r7, #0x1f
	mov     r3, r4, lsr r3
	and     r3, r3, #0x1
	add     r3, r6, r3
	ldrb    r4, [r3, #0x1]
	ldrb    r3, [r6]
	ldrb    r7, [r5, r4, lsl #0x2]
	add     r6, r5, r4, lsl #2
	cmp     r3, r7
	bhi     branch_20b3b6c

branch_20b3b9c: @ 20b3b9c :arm
	cmp     r0, #0x0
	ldrb    r3, [r6, #0x3]
	beq     branch_20b3bc8
	cmp     r3, r2
	bhs     branch_20b3bc8
	ldrh    r2, [r0, #0x6]
	add     r2, r0, r2
	ldrh    r0, [r2, #0x2]
	add     r0, r2, r0
	add     r4, r0, r3, lsl #4
	b       branch_20b3bcc

branch_20b3bc8: @ 20b3bc8 :arm
	mov     r4, #0x0
branch_20b3bcc: @ 20b3bcc :arm
	ldr     r2, [r4]
	ldr     r0, [r1]
	cmp     r2, r0
	ldreq   r2, [r4, #0x4]
	ldreq   r0, [r1, #0x4]
	cmpeq   r2, r0
	ldreq   r2, [r4, #0x8]
	ldreq   r0, [r1, #0x8]
	cmpeq   r2, r0
	ldreq   r2, [r4, #0xc]
	ldreq   r0, [r1, #0xc]
	cmpeq   r2, r0
	moveq   r0, r3
	ldmeqfd sp!, {r3-r7,pc}

branch_20b3c04: @ 20b3c04 :arm
	mvn     r0, #0x0
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b3c0c


/* Input:
r0: Ptr to FileData

Return:
r0: Ptr to DataPart of File
*/
arm_func_start Function_20b3c0c_GetAdrOfDataPart
Function_20b3c0c_GetAdrOfDataPart: @ 20b3c0c :arm
	ldrh    r1, [r0, #FileHeader_HeaderSize]
	ldr     r1, [r0, r1]
	add     r0, r0, r1
	bx      lr
arm_func_end Function_20b3c0c_GetAdrOfDataPart


/* Input:
r0: Ptr to loaded data
*/
arm_func_start Function_20b3c1c_GetTexOffsets
Function_20b3c1c_GetTexOffsets: @ 20b3c1c :arm
	ldrh    r2, [r0, #FileHeader_HeaderSize]
	ldrh    r1, [r0, #FileHeader_NumBlocks]
	add     r3, r0, r2
	cmp     r1, #0x1
	bne     branch_20b3c4c

	ldr     r2, [r0, #FileHeader_Magic]
	ldr     r1, =BTX0_MagicConstant
	cmp     r2, r1
	ldreq   r1, [r3, #BTX0_TexOffsets]
	addeq   r0, r0, r1
	movne   r0, #0x0
	bx      lr

branch_20b3c4c: @ 20b3c4c :arm
	ldr     r1, [r3, #0x4]
	add     r0, r0, r1
	bx      lr
@ 0x20b3c58

.pool
arm_func_end Function_20b3c1c_GetTexOffsets



.arm
.globl Function_20b3c5c
Function_20b3c5c: @ 20b3c5c :arm
	cmp     r0, #0x0
	beq     branch_20b3cb0
	ldrh    r2, [r0, #0xc]
	ldr     r2, [r0, r2]
	add     r12, r0, r2
	adds    r3, r12, #0x8
	beq     branch_20b3c9c
	ldrb    r0, [r12, #0x9]
	cmp     r1, r0
	bhs     branch_20b3c9c
	ldrh    r2, [r12, #0xe]
	ldrh    r0, [r3, r2]
	add     r2, r3, r2
	add     r2, r2, #0x4
	mla     r1, r0, r1, r2
	b       branch_20b3ca0

branch_20b3c9c: @ 20b3c9c :arm
	mov     r1, #0x0
branch_20b3ca0: @ 20b3ca0 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r0, r12, r0
	bxne    lr

branch_20b3cb0: @ 20b3cb0 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20b3cb8


.arm
Function_20b3cb8: @ 20b3cb8 :arm
	cmp     r0, #0x0
	beq     branch_20b3cdc
	ldrb    r2, [r0, #0x6]
	cmp     r1, r2
	bhs     branch_20b3cdc
	ldrh    r2, [r0, #0x8]
	add     r0, r0, r2
	add     r0, r0, r1, lsl #4
	bx      lr

branch_20b3cdc: @ 20b3cdc :arm
	mov     r0, #0x0
	bx      lr
@ 0x20b3ce4


.arm
Function_20b3ce4: @ 20b3ce4 :arm
	cmp     r0, #0x0
	beq     branch_20b3d08
	ldrb    r2, [r0, #0x7]
	cmp     r1, r2
	bhs     branch_20b3d08
	ldrh    r2, [r0, #0xa]
	add     r0, r0, r2
	add     r0, r0, r1, lsl #4
	bx      lr

branch_20b3d08: @ 20b3d08 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20b3d10


.arm
Function_20b3d10: @ 20b3d10 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r2
	bl      Function_20b3d84
	ldrsh   r1, [r0, #0x4]
	ldrh    r3, [r0, #0x6]
	mul     r2, r1, r4
	add     r3, r5, r3
	mov     r2, r2, lsr #12
	b       branch_20b3d3c

branch_20b3d38: @ 20b3d38 :arm
	sub     r2, r2, #0x1
branch_20b3d3c: @ 20b3d3c :arm
	cmp     r2, #0x0
	beq     branch_20b3d54
	mov     r1, r2, lsl #2
	ldrh    r1, [r3, r1]
	cmp     r1, r4
	bhs     branch_20b3d38

branch_20b3d54: @ 20b3d54 :arm
	ldrh    r1, [r0]
	b       branch_20b3d60

branch_20b3d5c: @ 20b3d5c :arm
	add     r2, r2, #0x1
branch_20b3d60: @ 20b3d60 :arm
	add     r0, r2, #0x1
	cmp     r0, r1
	bhs     branch_20b3d7c
	add     r0, r3, r2, lsl #2
	ldrh    r0, [r0, #0x4]
	cmp     r0, r4
	bls     branch_20b3d5c

branch_20b3d7c: @ 20b3d7c :arm
	add     r0, r3, r2, lsl #2
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b3d84


.arm
Function_20b3d84: @ 20b3d84 :arm
	adds    r3, r0, #0xc
	beq     branch_20b3db0
	ldrb    r2, [r0, #0xd]
	cmp     r1, r2
	bhs     branch_20b3db0
	ldrh    r0, [r0, #0x12]
	ldrh    r2, [r3, r0]
	add     r0, r3, r0
	add     r0, r0, #0x4
	mla     r0, r2, r1, r0
	bx      lr

branch_20b3db0: @ 20b3db0 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20b3db8


.arm
Function_20b3db8: @ 20b3db8 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	ldr     r0, [pc, #0x64] @ [0x20b3e30] (=Unknown_2100ed0)
	str     r4, [r5, #0x8]
	ldr     r0, [r0]
	add     r1, r5, #0x1a
	str     r0, [r5, #0xc]
	ldrb    r2, [r2, #0x17]
	mov     r0, #0x0
	strb    r2, [r5, #0x19]
	mov     r2, r2, lsl #1
	bl      MIi_CpuClear16
	ldrh    r0, [r4, #0x6]
	add     r3, r4, #0x14
	mov     r2, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r3-r5,pc}

branch_20b3e00: @ 20b3e00 :arm
	mov     r0, r2, lsl #1
	ldrh    r1, [r3, r0]
	add     r0, r5, r2, lsl #1
	add     r2, r2, #0x1
	ldr     r1, [r4, r1]
	mov     r1, r1, lsr #24
	orr     r1, r1, #1, 24 @ #0x100
	strh    r1, [r0, #0x1a]
	ldrh    r0, [r4, #0x6]
	cmp     r2, r0
	blo     branch_20b3e00
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b3e30

.word Unknown_2100ed0 @ 0x20b3e30



.arm
Function_20b3e34: @ 20b3e34 :arm
	stmfd   sp!, {r3,lr}
	mov     r3, r0
	ldr     r0, [r1, #0x8]
	ldr     r12, [r1]
	ldrh    r1, [r0, #0x4]
	cmp     r12, r1, lsl #12
	mov     r1, r1, lsl #12
	subge   r12, r1, #0x1
	bge     branch_20b3e60
	cmp     r12, #0x0
	movlt   r12, #0x0
branch_20b3e60: @ 20b3e60 :arm

	mov     r1, r2
	mov     r2, r12
	bl      Function_20b4118
	ldmfd   sp!, {r3,pc}
@ 0x20b3e70


.arm
Function_20b3e70: @ 20b3e70 :arm
	ldr     r1, [pc, #0x8c] @ [0x20b3f04] (=RAM_21c5cf0)
	ldr     r2, [r1]
	ldr     r1, [r2]
	ldr     r12, [r2, #0xd4]
	ldrb    r3, [r1, #0x1]
	cmp     r12, #0x0
	beq     branch_20b3ec8
	beq     branch_20b3eb4
	ldrb    r1, [r12, #0x1]
	cmp     r3, r1
	bhs     branch_20b3eb4
	ldrh    r2, [r12, #0x6]
	ldrh    r1, [r12, r2]
	add     r2, r12, r2
	add     r2, r2, #0x4
	mla     r2, r1, r3, r2
	b       branch_20b3eb8

branch_20b3eb4: @ 20b3eb4 :arm
	mov     r2, #0x0
branch_20b3eb8: @ 20b3eb8 :arm
	cmp     r2, #0x0
	ldrne   r1, [r2]
	addne   r2, r12, r1
	bne     branch_20b3ecc

branch_20b3ec8: @ 20b3ec8 :arm
	mov     r2, #0x0
branch_20b3ecc: @ 20b3ecc :arm
	ldrh    r1, [r2]
	tst     r1, #0x1
	beq     branch_20b3ee8
	ldr     r1, [r0]
	orr     r1, r1, #0x4
	str     r1, [r0]
	bx      lr

branch_20b3ee8: @ 20b3ee8 :arm
	ldr     r1, [r2, #0x4]
	str     r1, [r0, #0x4c]
	ldr     r1, [r2, #0x8]
	str     r1, [r0, #0x50]
	ldr     r1, [r2, #0xc]
	str     r1, [r0, #0x54]
	bx      lr
@ 0x20b3f04

.word RAM_21c5cf0 @ 0x20b3f04



.arm
Function_20b3f08: @ 20b3f08 :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [pc, #0x80] @ [0x20b3f94] (=RAM_21c5cf0)
	ldr     r12, [r1]
	ldr     r2, [r12]
	ldr     r4, [r12, #0xd4]
	ldrb    lr, [r2, #0x1]
	cmp     r4, #0x0
	beq     branch_20b3f64
	beq     branch_20b3f50
	ldrb    r1, [r4, #0x1]
	cmp     lr, r1
	bhs     branch_20b3f50
	ldrh    r3, [r4, #0x6]
	ldrh    r1, [r4, r3]
	add     r3, r4, r3
	add     r3, r3, #0x4
	mla     r3, r1, lr, r3
	b       branch_20b3f54
@ 0x20b3f50

.arm
branch_20b3f50: @ 20b3f50 :arm
	mov     r3, #0x0
.arm
branch_20b3f54: @ 20b3f54 :arm
	cmp     r3, #0x0
	ldrne   r1, [r3]
	addne   r1, r4, r1
	bne     branch_20b3f68
.arm
branch_20b3f64: @ 20b3f64 :arm
	mov     r1, #0x0
.arm
branch_20b3f68: @ 20b3f68 :arm
	ldrh    r3, [r1], #0x4
	tst     r3, #0x1
	addeq   r1, r1, #0xc
	tst     r3, #0x2
	bne     branch_20b3f88
	tst     r3, #0x8
	addne   r1, r1, #0x4
	addeq   r1, r1, #0x10
.arm
branch_20b3f88: @ 20b3f88 :arm
	ldr     r12, [r12, #0xe8]
	blx     r12
	ldmfd   sp!, {r4,pc}
@ 0x20b3f94

.word RAM_21c5cf0 @ 0x20b3f94
.arm
Function_20b3f98: @ 20b3f98 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r1, [pc, #0x160] @ [0x20b4104] (=RAM_21c5cf0)
	mov     r8, r0
	ldr     r1, [r1]
	ldr     r0, [r1]
	ldr     r3, [r1, #0xd4]
	ldrb    r2, [r0, #0x1]
	cmp     r3, #0x0
	beq     branch_20b3ff8
	beq     branch_20b3fe4
	ldrb    r0, [r3, #0x1]
	cmp     r2, r0
	bhs     branch_20b3fe4
	ldrh    r1, [r3, #0x6]
	ldrh    r0, [r3, r1]
	add     r1, r3, r1
	add     r1, r1, #0x4
	mla     r1, r0, r2, r1
	b       branch_20b3fe8
@ 0x20b3fe4

.arm
branch_20b3fe4: @ 20b3fe4 :arm
	mov     r1, #0x0
.arm
branch_20b3fe8: @ 20b3fe8 :arm
	cmp     r1, #0x0
	ldrne   r0, [r1]
	addne   r5, r3, r0
	bne     branch_20b3ffc
.arm
branch_20b3ff8: @ 20b3ff8 :arm
	mov     r5, #0x0
.arm
branch_20b3ffc: @ 20b3ffc :arm
	ldrh    r0, [r5]
	add     r1, r5, #0x4
	tst     r0, #0x1
	addeq   r1, r1, #0xc
	tst     r0, #0x2
	bne     branch_20b40f4
	tst     r0, #0x8
	beq     branch_20b40a8
	and     r2, r0, #0xf0
	add     r0, r8, #0x28
	mov     r4, r2, asr #4
	ldrsh   r7, [r1]
	ldrsh   r6, [r1, #0x2]
	blx     MI_Zero36B
	ldrh    r0, [r5]
	ldr     r1, [pc, #0xc8] @ [0x20b4108] (=Unknown_20f9818)
	mov     r3, #1, 20 @ #0x1000
	tst     r0, #1, 24 @ #0x100
	ldr     r0, [pc, #0xc0] @ [0x20b410c] (=Unknown_20f9818+1)
	ldrb    r1, [r1, r4, lsl #0x2]
	ldrb    r0, [r0, r4, lsl #0x2]
	rsbne   r3, r3, #0x0
	add     r2, r8, r4, lsl #2
	str     r3, [r2, #0x28]
	add     r1, r8, r1, lsl #2
	str     r7, [r1, #0x28]
	add     r0, r8, r0, lsl #2
	str     r6, [r0, #0x28]
	ldrh    r0, [r5]
	tst     r0, #2, 24 @ #0x200
	ldr     r0, [pc, #0x94] @ [0x20b4110] (=Unknown_20f9818+2)
	rsbne   r6, r6, #0x0
	ldrb    r0, [r0, r4, lsl #0x2]
	add     r0, r8, r0, lsl #2
	str     r6, [r0, #0x28]
	ldrh    r0, [r5]
	tst     r0, #1, 22 @ #0x400
	ldr     r0, [pc, #0x7c] @ [0x20b4114] (=Unknown_20f9818+3)
	rsbne   r7, r7, #0x0
	ldrb    r0, [r0, r4, lsl #0x2]
	add     r0, r8, r0, lsl #2
	str     r7, [r0, #0x28]
	ldmfd   sp!, {r4-r8,pc}

branch_20b40a8: @ 20b40a8 :arm
	ldrsh   r0, [r5, #0x2]
	str     r0, [r8, #0x28]
	ldrsh   r0, [r1]
	str     r0, [r8, #0x2c]
	ldrsh   r0, [r1, #0x2]
	str     r0, [r8, #0x30]
	ldrsh   r0, [r1, #0x4]
	str     r0, [r8, #0x34]
	ldrsh   r0, [r1, #0x6]
	str     r0, [r8, #0x38]
	ldrsh   r0, [r1, #0x8]
	str     r0, [r8, #0x3c]
	ldrsh   r0, [r1, #0xa]
	str     r0, [r8, #0x40]
	ldrsh   r0, [r1, #0xc]
	str     r0, [r8, #0x44]
	ldrsh   r0, [r1, #0xe]
	str     r0, [r8, #0x48]
	ldmfd   sp!, {r4-r8,pc}

branch_20b40f4: @ 20b40f4 :arm
	ldr     r0, [r8]
	orr     r0, r0, #0x2
	str     r0, [r8]
	ldmfd   sp!, {r4-r8,pc}
@ 0x20b4104

.word RAM_21c5cf0 @ 0x20b4104
.word Unknown_20f9818 @ 0x20b4108
.word Unknown_20f9818+1 @ 0x20b410c
.word Unknown_20f9818+2 @ 0x20b4110
.word Unknown_20f9818+3 @ 0x20b4114



.arm
Function_20b4118: @ 20b4118 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x30
	mov     r9, r0
	add     r0, r9, r1, lsl #1
	ldrh    r0, [r0, #0x14]
	mov     r7, r3
	mov     r8, r2
	ldr     r4, [r9, r0]
	add     r1, r9, r0
	tst     r4, #0x1
	movne   r0, #0x7
	strne   r0, [r7]
	bne     branch_20b4490
	ldr     r0, [pc, #0x370] @ [0x20b44c4] (=0xfff)
	add     r5, r1, #0x4
	tst     r8, r0
	beq     branch_20b416c
	ldr     r0, [r9, #0x8]
	tst     r0, #0x1
	movne   r6, #0x1
	bne     branch_20b4170
.arm
branch_20b416c: @ 20b416c :arm
	mov     r6, #0x0
.arm
branch_20b4170: @ 20b4170 :arm
	mov     r0, #0x0
	str     r0, [r7]
	tst     r4, #0x6
	bne     branch_20b4250
	tst     r4, #0x8
	bne     branch_20b41bc
	cmp     r6, #0x0
	mov     r1, r8
	mov     r2, r5
	beq     branch_20b41a8
	mov     r3, r9
	add     r0, r7, #0x4c
	bl      Function_20b462c
	b       branch_20b41b4
@ 0x20b41a8

.arm
branch_20b41a8: @ 20b41a8 :arm
	mov     r3, r9
	add     r0, r7, #0x4c
	bl      Function_20b44cc
.arm
branch_20b41b4: @ 20b41b4 :arm
	add     r5, r5, #0x8
	b       branch_20b41c4
@ 0x20b41bc

.arm
branch_20b41bc: @ 20b41bc :arm
	ldr     r0, [r5], #0x4
	str     r0, [r7, #0x4c]
.arm
branch_20b41c4: @ 20b41c4 :arm
	tst     r4, #0x10
	bne     branch_20b4200
	cmp     r6, #0x0
	mov     r1, r8
	mov     r2, r5
	beq     branch_20b41ec
	mov     r3, r9
	add     r0, r7, #0x50
	bl      Function_20b462c
	b       branch_20b41f8
@ 0x20b41ec

.arm
branch_20b41ec: @ 20b41ec :arm
	mov     r3, r9
	add     r0, r7, #0x50
	bl      Function_20b44cc
.arm
branch_20b41f8: @ 20b41f8 :arm
	add     r5, r5, #0x8
	b       branch_20b4208
@ 0x20b4200

.arm
branch_20b4200: @ 20b4200 :arm
	ldr     r0, [r5], #0x4
	str     r0, [r7, #0x50]
.arm
branch_20b4208: @ 20b4208 :arm
	tst     r4, #0x20
	bne     branch_20b4244
	cmp     r6, #0x0
	mov     r1, r8
	mov     r2, r5
	beq     branch_20b4230
	mov     r3, r9
	add     r0, r7, #0x54
	bl      Function_20b462c
	b       branch_20b423c
@ 0x20b4230

.arm
branch_20b4230: @ 20b4230 :arm
	mov     r3, r9
	add     r0, r7, #0x54
	bl      Function_20b44cc
.arm
branch_20b423c: @ 20b423c :arm
	add     r5, r5, #0x8
	b       branch_20b4270
@ 0x20b4244

.arm
branch_20b4244: @ 20b4244 :arm
	ldr     r0, [r5], #0x4
	str     r0, [r7, #0x54]
	b       branch_20b4270
@ 0x20b4250

.arm
branch_20b4250: @ 20b4250 :arm
	tst     r4, #0x2
	beq     branch_20b4268
	ldr     r0, [r7]
	orr     r0, r0, #0x4
	str     r0, [r7]
	b       branch_20b4270
@ 0x20b4268

.arm
branch_20b4268: @ 20b4268 :arm
	mov     r0, r7
	bl      Function_20b3e70
.arm
branch_20b4270: @ 20b4270 :arm
	tst     r4, #0xc0
	bne     branch_20b4334
	tst     r4, #1, 24 @ #0x100
	bne     branch_20b42b4
	cmp     r6, #0x0
	mov     r1, r8
	mov     r2, r5
	beq     branch_20b42a0
	mov     r3, r9
	add     r0, r7, #0x28
	bl      Function_20b4f28
	b       branch_20b42ac
@ 0x20b42a0

.arm
branch_20b42a0: @ 20b42a0 :arm
	mov     r3, r9
	add     r0, r7, #0x28
	bl      Function_20b4b10
.arm
branch_20b42ac: @ 20b42ac :arm
	add     r5, r5, #0x8
	b       branch_20b4354
@ 0x20b42b4

.arm
branch_20b42b4: @ 20b42b4 :arm
	ldr     r1, [r9, #0xc]
	ldr     r2, [r9, #0x10]
	ldr     r3, [r5]
	add     r0, r7, #0x28
	add     r1, r9, r1
	add     r2, r9, r2
	bl      Function_20b526c
	cmp     r0, #0x0
	beq     branch_20b432c
	ldr     r12, [r7, #0x3c]
	ldr     r0, [r7, #0x2c]
	ldr     r3, [r7, #0x28]
	ldr     r11, [r7, #0x38]
	ldr     r1, [r7, #0x30]
	ldr     r2, [r7, #0x34]
	mul     r10, r0, r12
	mul     lr, r1, r11
	sub     r10, r10, lr
	mov     r10, r10, asr #12
	mul     lr, r1, r2
	mul     r1, r3, r12
	sub     r1, lr, r1
	mul     r11, r3, r11
	mul     r2, r0, r2
	sub     r0, r11, r2
	str     r10, [r7, #0x40]
	mov     r1, r1, asr #12
	str     r1, [r7, #0x44]
	mov     r0, r0, asr #12
	str     r0, [r7, #0x48]
.arm
branch_20b432c: @ 20b432c :arm
	add     r5, r5, #0x4
	b       branch_20b4354
@ 0x20b4334

.arm
branch_20b4334: @ 20b4334 :arm
	tst     r4, #0x40
	beq     branch_20b434c
	ldr     r0, [r7]
	orr     r0, r0, #0x2
	str     r0, [r7]
	b       branch_20b4354
@ 0x20b434c

.arm
branch_20b434c: @ 20b434c :arm
	mov     r0, r7
	bl      Function_20b3f98
.arm
branch_20b4354: @ 20b4354 :arm
	tst     r4, #6, 24 @ #0x600
	bne     branch_20b4468
	tst     r4, #2, 22 @ #0x800
	bne     branch_20b43a4
	cmp     r6, #0x0
	add     r0, sp, #0x10
	mov     r1, r8
	beq     branch_20b4384
	mov     r2, r5
	mov     r3, r9
	bl      Function_20b497c
	b       branch_20b4390
@ 0x20b4384

.arm
branch_20b4384: @ 20b4384 :arm
	mov     r2, r5
	mov     r3, r9
	bl      Function_20b4788
.arm
branch_20b4390: @ 20b4390 :arm
	ldr     r1, [sp, #0x10]
	ldr     r0, [sp, #0x14]
	str     r1, [sp, #0x18]
	str     r0, [sp, #0x24]
	b       branch_20b43b4
@ 0x20b43a4

.arm
branch_20b43a4: @ 20b43a4 :arm
	ldr     r0, [r5]
	str     r0, [sp, #0x18]
	ldr     r0, [r5, #0x4]
	str     r0, [sp, #0x24]
.arm
branch_20b43b4: @ 20b43b4 :arm
	tst     r4, #1, 20 @ #0x1000
	bne     branch_20b43fc
	cmp     r6, #0x0
	add     r0, sp, #0x8
	mov     r1, r8
	beq     branch_20b43dc
	mov     r3, r9
	add     r2, r5, #0x8
	bl      Function_20b497c
	b       branch_20b43e8
@ 0x20b43dc

.arm
branch_20b43dc: @ 20b43dc :arm
	mov     r3, r9
	add     r2, r5, #0x8
	bl      Function_20b4788
.arm
branch_20b43e8: @ 20b43e8 :arm
	ldr     r1, [sp, #0x8]
	ldr     r0, [sp, #0xc]
	str     r1, [sp, #0x1c]
	str     r0, [sp, #0x28]
	b       branch_20b440c
@ 0x20b43fc

.arm
branch_20b43fc: @ 20b43fc :arm
	ldr     r0, [r5, #0x8]
	str     r0, [sp, #0x1c]
	ldr     r0, [r5, #0xc]
	str     r0, [sp, #0x28]
.arm
branch_20b440c: @ 20b440c :arm
	tst     r4, #2, 20 @ #0x2000
	bne     branch_20b4454
	cmp     r6, #0x0
	add     r0, sp, #0x0
	mov     r1, r8
	beq     branch_20b4434
	mov     r3, r9
	add     r2, r5, #0x10
	bl      Function_20b497c
	b       branch_20b4440
@ 0x20b4434

.arm
branch_20b4434: @ 20b4434 :arm
	mov     r3, r9
	add     r2, r5, #0x10
	bl      Function_20b4788
.arm
branch_20b4440: @ 20b4440 :arm
	ldr     r1, [sp]
	ldr     r0, [sp, #0x4]
	str     r1, [sp, #0x20]
	str     r0, [sp, #0x2c]
	b       branch_20b4490
@ 0x20b4454

.arm
branch_20b4454: @ 20b4454 :arm
	ldr     r0, [r5, #0x10]
	str     r0, [sp, #0x20]
	ldr     r0, [r5, #0x14]
	str     r0, [sp, #0x2c]
	b       branch_20b4490
@ 0x20b4468

.arm
branch_20b4468: @ 20b4468 :arm
	tst     r4, #2, 24 @ #0x200
	beq     branch_20b4480
	ldr     r0, [r7]
	orr     r0, r0, #0x1
	str     r0, [r7]
	b       branch_20b4490
@ 0x20b4480

.arm
branch_20b4480: @ 20b4480 :arm
	mov     r0, r7
	bl      Function_20b3f08
	add     sp, sp, #0x30
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b4490

.arm
branch_20b4490: @ 20b4490 :arm
	ldr     r0, [r7]
	add     r1, sp, #0x18
	tst     r0, #0x1
	ldr     r0, [pc, #0x24] @ [0x20b44c8] (=RAM_21c5cf0)
	movne   r3, #0x4
	ldr     r4, [r0]
	moveq   r3, #0x0
	ldr     r2, [r4]
	ldr     r4, [r4, #0xe8]
	mov     r0, r7
	blx     r4
	add     sp, sp, #0x30
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b44c4

.word 0xfff @ 0x20b44c4
.word RAM_21c5cf0 @ 0x20b44c8
.arm
Function_20b44cc: @ 20b44cc :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r4, [r2, #0x4]
	ldr     r12, [r2]
	mov     r5, r1, asr #12
	tst     r12, #3, 2 @ #0xc0000000
	add     r1, r3, r4
	beq     branch_20b4608
	ldr     r2, [pc, #0x138] @ [0x20b4628] (=0x1fff0000)
	tst     r12, #1, 2 @ #0x40000000
	and     r2, r12, r2
	mov     r3, r2, lsr #16
	beq     branch_20b4524
	tst     r5, #0x1
	beq     branch_20b451c
	cmp     r5, r3
	movhi   r2, r3, lsr #1
	addhi   r5, r2, #0x1
	bhi     branch_20b4608
	mov     r4, r5, lsr #1
	b       branch_20b45c8
@ 0x20b451c

.arm
branch_20b451c: @ 20b451c :arm
	mov     r5, r5, lsr #1
	b       branch_20b4608
@ 0x20b4524

.arm
branch_20b4524: @ 20b4524 :arm
	ands    r2, r5, #0x3
	beq     branch_20b45c0
	cmp     r5, r3
	addhi   r5, r2, r3, lsr #2
	bhi     branch_20b4608
	tst     r5, #0x1
	beq     branch_20b45b8
	tst     r5, #0x2
	movne   r5, r5, lsr #2
	addne   r2, r5, #0x1
	moveq   r2, r5, lsr #2
	addeq   r5, r2, #0x1
	tst     r12, #2, 4 @ #0x20000000
	beq     branch_20b4580
	mov     r3, r2, lsl #1
	mov     r2, r5, lsl #1
	ldrsh   r3, [r1, r3]
	ldrsh   r1, [r1, r2]
	add     r2, r3, r3, lsl #1
	add     r1, r2, r1
	mov     r1, r1, asr #2
	str     r1, [r0]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b4580

.arm
branch_20b4580: @ 20b4580 :arm
	ldr     r12, [r1, r2, lsl #0x2]
	mov     r2, #0x3
	mov     r3, #0x0
	umull   r4, lr, r12, r2
	mla     lr, r12, r3, lr
	mov     r3, r12, asr #31
	mla     lr, r3, r2, lr
	ldr     r1, [r1, r5, lsl #0x2]
	adds    r2, r4, r1
	adc     r1, lr, r1, asr #31
	mov     r2, r2, lsr #2
	orr     r2, r2, r1, lsl #30
	str     r2, [r0]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b45b8

.arm
branch_20b45b8: @ 20b45b8 :arm
	mov     r4, r5, lsr #2
	b       branch_20b45c8
@ 0x20b45c0

.arm
branch_20b45c0: @ 20b45c0 :arm
	mov     r5, r5, lsr #2
	b       branch_20b4608
@ 0x20b45c8

.arm
branch_20b45c8: @ 20b45c8 :arm
	tst     r12, #2, 4 @ #0x20000000
	beq     branch_20b45ec
	mov     r3, r4, lsl #1
	add     r2, r1, r4, lsl #1
	ldrsh   r3, [r1, r3]
	ldrsh   r1, [r2, #0x2]
	add     r1, r3, r1
	mov     r1, r1, asr #1
	b       branch_20b4600
@ 0x20b45ec

.arm
branch_20b45ec: @ 20b45ec :arm
	add     r2, r1, r4, lsl #2
	ldr     r2, [r2, #0x4]
	ldr     r3, [r1, r4, lsl #0x2]
	mov     r1, r2, asr #1
	add     r1, r1, r3, asr #1
.arm
branch_20b4600: @ 20b4600 :arm
	str     r1, [r0]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b4608

.arm
branch_20b4608: @ 20b4608 :arm
	tst     r12, #2, 4 @ #0x20000000
	ldreq   r1, [r1, r5, lsl #0x2]
	streq   r1, [r0]
	ldmeqfd sp!, {r3-r5,pc}
	mov     r2, r5, lsl #1
	ldrsh   r1, [r1, r2]
	str     r1, [r0]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b4628

.word 0x1fff0000 @ 0x20b4628
.arm
Function_20b462c: @ 20b462c :arm
	stmfd   sp!, {r3-r5,lr}
	ldrh    r4, [r3, #0x4]
	ldr     r12, [r2, #0x4]
	mov     lr, r1, asr #12
	sub     r4, r4, #0x1
	cmp     r4, r1, asr #12
	add     r12, r3, r12
	ldr     r2, [r2]
	bne     branch_20b46c8
	tst     r2, #3, 2 @ #0xc0000000
	beq     branch_20b466c
	tst     r2, #1, 2 @ #0x40000000
	andne   r4, lr, #0x1
	addne   lr, r4, lr, lsr #1
	andeq   r4, lr, #0x3
	addeq   lr, r4, lr, lsr #2
.arm
branch_20b466c: @ 20b466c :arm
	ldr     r3, [r3, #0x8]
	tst     r3, #0x2
	beq     branch_20b46b0
	ldr     r3, [pc, #0xfc] @ [0x20b477c] (=0xfff)
	tst     r2, #2, 4 @ #0x20000000
	and     r2, r1, r3
	ldreq   r3, [r12, lr, lsl #0x2]
	ldreq   r1, [r12]
	beq     branch_20b469c
	mov     r1, lr, lsl #1
	ldrsh   r3, [r12, r1]
	ldrsh   r1, [r12]
.arm
branch_20b469c: @ 20b469c :arm
	sub     r1, r1, r3
	mul     r1, r2, r1
	add     r1, r3, r1, asr #12
	str     r1, [r0]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b46b0

.arm
branch_20b46b0: @ 20b46b0 :arm
	tst     r2, #2, 4 @ #0x20000000
	movne   r1, lr, lsl #1
	ldrnesh r1, [r12, r1]
	ldreq   r1, [r12, lr, lsl #0x2]
	str     r1, [r0]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b46c8

.arm
branch_20b46c8: @ 20b46c8 :arm
	tst     r2, #3, 2 @ #0xc0000000
	beq     branch_20b472c
	ldr     r3, [pc, #0xa8] @ [0x20b4780] (=0x1fff0000)
	tst     r2, #1, 2 @ #0x40000000
	and     r4, r2, r3
	mov     r4, r4, lsr #16
	beq     branch_20b4704
	cmp     lr, r4
	movcs   lr, r4, lsr #1
	bhs     branch_20b472c
	mov     lr, lr, lsr #1
	and     r1, r1, r3, lsr #16
	mov     r4, #0x2
	mov     r5, #0x1
	b       branch_20b473c
@ 0x20b4704

.arm
branch_20b4704: @ 20b4704 :arm
	cmp     lr, r4
	andcs   r3, lr, #0x3
	addcs   lr, r3, lr, lsr #2
	bhs     branch_20b472c
	ldr     r3, [pc, #0x68] @ [0x20b4784] (=0x3fff)
	mov     lr, lr, lsr #2
	and     r1, r1, r3
	mov     r4, #0x4
	mov     r5, #0x2
	b       branch_20b473c
@ 0x20b472c

.arm
branch_20b472c: @ 20b472c :arm
	ldr     r3, [pc, #0x48] @ [0x20b477c] (=0xfff)
	mov     r4, #0x1
	and     r1, r1, r3
	mov     r5, #0x0
.arm
branch_20b473c: @ 20b473c :arm
	tst     r2, #2, 4 @ #0x20000000
	addeq   r2, r12, lr, lsl #2
	ldreq   r12, [r12, lr, lsl #0x2]
	ldreq   r2, [r2, #0x4]
	beq     branch_20b4760
	add     r2, r12, lr, lsl #1
	mov     r3, lr, lsl #1
	ldrsh   r12, [r12, r3]
	ldrsh   r2, [r2, #0x2]
.arm
branch_20b4760: @ 20b4760 :arm
	sub     r2, r2, r12
	mul     r3, r12, r4
	mul     r2, r1, r2
	add     r1, r3, r2, asr #12
	mov     r1, r1, asr r5
	str     r1, [r0]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b477c

.word 0xfff @ 0x20b477c
.word 0x1fff0000 @ 0x20b4780
.word 0x3fff @ 0x20b4784
.arm
Function_20b4788: @ 20b4788 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r4, [r2, #0x4]
	ldr     r5, [r2]
	mov     r6, r1, asr #12
	tst     r5, #3, 2 @ #0xc0000000
	add     r1, r3, r4
	beq     branch_20b48d4
	ldr     r2, [pc, #0x1cc] @ [0x20b4978] (=0x1fff0000)
	tst     r5, #1, 2 @ #0x40000000
	and     r2, r5, r2
	mov     r3, r2, lsr #16
	beq     branch_20b47e0
	tst     r6, #0x1
	beq     branch_20b47d8
	cmp     r6, r3
	movhi   r2, r3, lsr #1
	addhi   r6, r2, #0x1
	bhi     branch_20b48d4
	mov     r4, r6, lsr #1
	b       branch_20b490c
@ 0x20b47d8

.arm
branch_20b47d8: @ 20b47d8 :arm
	mov     r6, r6, lsr #1
	b       branch_20b48d4
@ 0x20b47e0

.arm
branch_20b47e0: @ 20b47e0 :arm
	ands    r2, r6, #0x3
	beq     branch_20b48d0
	cmp     r6, r3
	addhi   r6, r2, r3, lsr #2
	bhi     branch_20b48d4
	tst     r6, #0x1
	beq     branch_20b48c8
	tst     r6, #0x2
	movne   r3, r6, lsr #2
	addne   r2, r3, #0x1
	moveq   r2, r6, lsr #2
	addeq   r3, r2, #0x1
	tst     r5, #2, 4 @ #0x20000000
	beq     branch_20b485c
	mov     r5, r2, lsl #2
	mov     r4, r3, lsl #2
	ldrsh   r6, [r1, r5]
	ldrsh   r5, [r1, r4]
	add     r2, r1, r2, lsl #2
	add     r4, r6, r6, lsl #1
	add     r4, r5, r4
	mov     r4, r4, asr #2
	str     r4, [r0]
	add     r1, r1, r3, lsl #2
	ldrsh   r3, [r2, #0x2]
	ldrsh   r2, [r1, #0x2]
	add     r1, r3, r3, lsl #1
	add     r1, r2, r1
	mov     r1, r1, asr #2
	str     r1, [r0, #0x4]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b485c

.arm
branch_20b485c: @ 20b485c :arm
	ldr     r4, [r1, r2, lsl #0x3]
	mov     r12, #0x3
	mov     lr, #0x0
	umull   r6, r5, r4, r12
	mla     r5, r4, lr, r5
	mov     r4, r4, asr #31
	ldr     r7, [r1, r3, lsl #0x3]
	add     r2, r1, r2, lsl #3
	mla     r5, r4, r12, r5
	adds    r6, r6, r7
	adc     r4, r5, r7, asr #31
	mov     r5, r6, lsr #2
	orr     r5, r5, r4, lsl #30
	str     r5, [r0]
	add     r1, r1, r3, lsl #3
	ldr     r2, [r2, #0x4]
	ldr     r1, [r1, #0x4]
	umull   r4, r3, r2, r12
	mla     r3, r2, lr, r3
	mov     r2, r2, asr #31
	mla     r3, r2, r12, r3
	adds    r4, r4, r1
	adc     r1, r3, r1, asr #31
	mov     r2, r4, lsr #2
	orr     r2, r2, r1, lsl #30
	str     r2, [r0, #0x4]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b48c8

.arm
branch_20b48c8: @ 20b48c8 :arm
	mov     r4, r6, lsr #2
	b       branch_20b490c
@ 0x20b48d0

.arm
branch_20b48d0: @ 20b48d0 :arm
	mov     r6, r6, lsr #2
.arm
branch_20b48d4: @ 20b48d4 :arm
	tst     r5, #2, 4 @ #0x20000000
	beq     branch_20b48f4
	mov     r2, r6, lsl #2
	ldrsh   r2, [r1, r2]
	add     r1, r1, r6, lsl #2
	str     r2, [r0]
	ldrsh   r1, [r1, #0x2]
	b       branch_20b4904
@ 0x20b48f4

.arm
branch_20b48f4: @ 20b48f4 :arm
	ldr     r2, [r1, r6, lsl #0x3]
	add     r1, r1, r6, lsl #3
	str     r2, [r0]
	ldr     r1, [r1, #0x4]
.arm
branch_20b4904: @ 20b4904 :arm
	str     r1, [r0, #0x4]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b490c

.arm
branch_20b490c: @ 20b490c :arm
	tst     r5, #2, 4 @ #0x20000000
	beq     branch_20b4948
	mov     r2, r4, lsl #2
	add     r3, r1, r4, lsl #2
	ldrsh   r2, [r1, r2]
	ldrsh   r1, [r3, #0x4]
	add     r1, r2, r1
	mov     r1, r1, asr #1
	str     r1, [r0]
	ldrsh   r2, [r3, #0x2]
	ldrsh   r1, [r3, #0x6]
	add     r1, r2, r1
	mov     r1, r1, asr #1
	str     r1, [r0, #0x4]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b4948

.arm
branch_20b4948: @ 20b4948 :arm
	add     r3, r1, r4, lsl #3
	ldr     r2, [r1, r4, lsl #0x3]
	ldr     r1, [r3, #0x8]
	add     r1, r2, r1
	mov     r1, r1, asr #1
	str     r1, [r0]
	ldr     r2, [r3, #0x4]
	ldr     r1, [r3, #0xc]
	add     r1, r2, r1
	mov     r1, r1, asr #1
	str     r1, [r0, #0x4]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b4978

.word 0x1fff0000 @ 0x20b4978
.arm
Function_20b497c: @ 20b497c :arm
	stmfd   sp!, {r3-r7,lr}
	ldrh    r4, [r3, #0x4]
	ldr     r5, [r2, #0x4]
	mov     lr, r1, asr #12
	sub     r4, r4, #0x1
	cmp     r4, r1, asr #12
	add     r12, r3, r5
	ldr     r2, [r2]
	bne     branch_20b4a04
	tst     r2, #3, 2 @ #0xc0000000
	beq     branch_20b49bc
	tst     r2, #1, 2 @ #0x40000000
	andne   r4, lr, #0x1
	addne   lr, r4, lr, lsr #1
	andeq   r4, lr, #0x3
	addeq   lr, r4, lr, lsr #2
.arm
branch_20b49bc: @ 20b49bc :arm
	ldr     r3, [r3, #0x8]
	tst     r3, #0x2
	movne   r3, #0x0
	bne     branch_20b4a80
	tst     r2, #2, 4 @ #0x20000000
	beq     branch_20b49ec
	mov     r1, lr, lsl #2
	ldrsh   r2, [r12, r1]
	add     r1, r12, lr, lsl #2
	str     r2, [r0]
	ldrsh   r1, [r1, #0x2]
	b       branch_20b49fc
@ 0x20b49ec

.arm
branch_20b49ec: @ 20b49ec :arm
	ldr     r2, [r12, lr, lsl #0x3]
	add     r1, r12, lr, lsl #3
	str     r2, [r0]
	ldr     r1, [r1, #0x4]
.arm
branch_20b49fc: @ 20b49fc :arm
	str     r1, [r0, #0x4]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b4a04

.arm
branch_20b4a04: @ 20b4a04 :arm
	tst     r2, #3, 2 @ #0xc0000000
	beq     branch_20b4a7c
	ldr     r4, [pc, #0xf0] @ [0x20b4b04] (=0x1fff0000)
	tst     r2, #1, 2 @ #0x40000000
	and     r3, r2, r4
	mov     r3, r3, lsr #16
	beq     branch_20b4a48
	cmp     lr, r3
	movcs   lr, r3, lsr #1
	addcs   r3, lr, #0x1
	bhs     branch_20b4a80
	mov     lr, lr, lsr #1
	add     r3, lr, #0x1
	and     r1, r1, r4, lsr #16
	mov     r4, #0x2
	mov     r5, #0x1
	b       branch_20b4a90
@ 0x20b4a48

.arm
branch_20b4a48: @ 20b4a48 :arm
	cmp     lr, r3
	blo     branch_20b4a60
	and     r3, lr, #0x3
	add     lr, r3, lr, lsr #2
	add     r3, lr, #0x1
	b       branch_20b4a80
@ 0x20b4a60

.arm
branch_20b4a60: @ 20b4a60 :arm
	ldr     r4, [pc, #0xa0] @ [0x20b4b08] (=0x3fff)
	mov     lr, lr, lsr #2
	add     r3, lr, #0x1
	and     r1, r1, r4
	mov     r4, #0x4
	mov     r5, #0x2
	b       branch_20b4a90
@ 0x20b4a7c

.arm
branch_20b4a7c: @ 20b4a7c :arm
	add     r3, lr, #0x1
.arm
branch_20b4a80: @ 20b4a80 :arm
	ldr     r5, [pc, #0x84] @ [0x20b4b0c] (=0xfff)
	mov     r4, #0x1
	and     r1, r1, r5
	mov     r5, #0x0
.arm
branch_20b4a90: @ 20b4a90 :arm
	tst     r2, #2, 4 @ #0x20000000
	beq     branch_20b4abc
	mov     r2, lr, lsl #2
	add     r7, r12, lr, lsl #2
	mov     r6, r3, lsl #2
	add     r3, r12, r3, lsl #2
	ldrsh   r2, [r12, r2]
	ldrsh   lr, [r7, #0x2]
	ldrsh   r7, [r12, r6]
	ldrsh   r3, [r3, #0x2]
	b       branch_20b4ad0
@ 0x20b4abc

.arm
branch_20b4abc: @ 20b4abc :arm
	add     r7, r12, lr, lsl #3
	ldmia   r7, {r2,lr}
	add     r6, r12, r3, lsl #3
	ldr     r7, [r12, r3, lsl #0x3]
	ldr     r3, [r6, #0x4]
.arm
branch_20b4ad0: @ 20b4ad0 :arm
	sub     r12, r7, r2
	sub     r3, r3, lr
	mul     r6, r2, r4
	mul     r2, r1, r12
	add     r2, r6, r2, asr #12
	mov     r6, r2, asr r5
	mul     r4, lr, r4
	mul     r2, r1, r3
	add     r1, r4, r2, asr #12
	mov     r1, r1, asr r5
	str     r6, [r0]
	str     r1, [r0, #0x4]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b4b04

.word 0x1fff0000 @ 0x20b4b04
.word 0x3fff @ 0x20b4b08
.word 0xfff @ 0x20b4b0c
.arm
Function_20b4b10: @ 20b4b10 :arm
	stmfd   sp!, {r4-r10,lr}
	sub     sp, sp, #0x48
	ldr     r9, [r2]
	mov     r4, r3
	ldr     r2, [r2, #0x4]
	mov     r5, r0
	tst     r9, #3, 2 @ #0xc0000000
	mov     r3, r1, asr #12
	add     r8, r4, r2
	ldr     r7, [r4, #0xc]
	ldr     r6, [r4, #0x10]
	beq     branch_20b4e94
	ldr     r0, [pc, #0x3dc] @ [0x20b4f24] (=0x1fff0000)
	tst     r9, #1, 2 @ #0x40000000
	and     r0, r9, r0
	mov     r1, r0, lsr #16
	beq     branch_20b4b7c
	tst     r3, #0x1
	beq     branch_20b4b74
	cmp     r3, r1
	movhi   r0, r1, lsr #1
	addhi   r3, r0, #0x1
	bhi     branch_20b4e94
	mov     r9, r3, lsr #1
	b       branch_20b4d3c
@ 0x20b4b74

.arm
branch_20b4b74: @ 20b4b74 :arm
	mov     r3, r3, lsr #1
	b       branch_20b4e94
@ 0x20b4b7c

.arm
branch_20b4b7c: @ 20b4b7c :arm
	ands    r0, r3, #0x3
	beq     branch_20b4d34
	cmp     r3, r1
	addhi   r3, r0, r1, lsr #2
	bhi     branch_20b4e94
	tst     r3, #0x1
	beq     branch_20b4d2c
	tst     r3, #0x2
	movne   r9, r3, lsr #2
	addne   r0, r9, #0x1
	moveq   r0, r3, lsr #2
	addeq   r9, r0, #0x1
	mov     r0, r0, lsl #1
	ldrh    r3, [r8, r0]
	mov     r0, r5
	add     r1, r4, r7
	add     r2, r4, r6
	mov     r10, #0x0
	bl      Function_20b526c
	mov     r1, r9, lsl #1
	ldrh    r3, [r8, r1]
	orr     r10, r10, r0
	add     r0, sp, #0x24
	add     r1, r4, r7
	add     r2, r4, r6
	bl      Function_20b526c
	ldr     r1, [r5]
	ldr     r2, [sp, #0x24]
	add     r1, r1, r1, lsl #1
	add     r1, r2, r1
	str     r1, [r5]
	ldr     r1, [r5, #0x4]
	ldr     r2, [sp, #0x28]
	add     r1, r1, r1, lsl #1
	add     r1, r2, r1
	str     r1, [r5, #0x4]
	ldr     r1, [r5, #0x8]
	ldr     r2, [sp, #0x2c]
	add     r1, r1, r1, lsl #1
	add     r1, r2, r1
	str     r1, [r5, #0x8]
	ldr     r1, [r5, #0xc]
	ldr     r2, [sp, #0x30]
	add     r1, r1, r1, lsl #1
	add     r1, r2, r1
	str     r1, [r5, #0xc]
	ldr     r1, [r5, #0x10]
	orr     r10, r10, r0
	ldr     r2, [sp, #0x34]
	add     r0, r1, r1, lsl #1
	add     r0, r2, r0
	str     r0, [r5, #0x10]
	ldr     r0, [r5, #0x14]
	ldr     r1, [sp, #0x38]
	add     r0, r0, r0, lsl #1
	add     r2, r1, r0
	mov     r0, r5
	mov     r1, r5
	str     r2, [r5, #0x14]
	bl      VEC_Normalize
	add     r0, r5, #0xc
	mov     r1, r0
	bl      VEC_Normalize
	cmp     r10, #0x0
	bne     branch_20b4cd0
	ldr     r0, [r5, #0x18]
	ldr     r1, [sp, #0x3c]
	add     r0, r0, r0, lsl #1
	add     r0, r1, r0
	str     r0, [r5, #0x18]
	ldr     r0, [r5, #0x1c]
	ldr     r1, [sp, #0x40]
	add     r0, r0, r0, lsl #1
	add     r0, r1, r0
	str     r0, [r5, #0x1c]
	ldr     r0, [r5, #0x20]
	ldr     r1, [sp, #0x44]
	add     r0, r0, r0, lsl #1
	add     r2, r1, r0
	add     r0, r5, #0x18
	mov     r1, r0
	str     r2, [r5, #0x20]
	bl      VEC_Normalize
	add     sp, sp, #0x48
	ldmfd   sp!, {r4-r10,pc}
@ 0x20b4cd0

.arm
branch_20b4cd0: @ 20b4cd0 :arm
	ldr     r9, [r5, #0x14]
	ldr     r6, [r5, #0x4]
	ldr     r4, [r5, #0x10]
	ldr     r2, [r5, #0x8]
	mul     r1, r6, r9
	mul     r0, r2, r4
	sub     r0, r1, r0
	ldr     r7, [r5, #0xc]
	ldr     r8, [r5]
	mov     r3, r0, asr #12
	mul     r1, r2, r7
	mul     r0, r8, r9
	sub     r2, r1, r0
	mul     r1, r8, r4
	mul     r0, r6, r7
	sub     r0, r1, r0
	str     r3, [r5, #0x18]
	mov     r1, r2, asr #12
	str     r1, [r5, #0x1c]
	mov     r0, r0, asr #12
	add     sp, sp, #0x48
	str     r0, [r5, #0x20]
	ldmfd   sp!, {r4-r10,pc}
@ 0x20b4d2c

.arm
branch_20b4d2c: @ 20b4d2c :arm
	mov     r9, r3, lsr #2
	b       branch_20b4d3c
@ 0x20b4d34

.arm
branch_20b4d34: @ 20b4d34 :arm
	mov     r3, r3, lsr #2
	b       branch_20b4e94
@ 0x20b4d3c

.arm
branch_20b4d3c: @ 20b4d3c :arm
	mov     r0, r9, lsl #1
	ldrh    r3, [r8, r0]
	mov     r0, r5
	add     r1, r4, r7
	add     r2, r4, r6
	bl      Function_20b526c
	add     r1, r8, r9, lsl #1
	ldrh    r3, [r1, #0x2]
	orr     r8, r0, #0x0
	add     r0, sp, #0x0
	add     r1, r4, r7
	add     r2, r4, r6
	bl      Function_20b526c
	ldr     r2, [r5]
	ldr     r1, [sp]
	orr     r8, r8, r0
	add     r0, r2, r1
	str     r0, [r5]
	ldr     r2, [r5, #0x4]
	ldr     r1, [sp, #0x4]
	mov     r0, r5
	add     r1, r2, r1
	str     r1, [r5, #0x4]
	ldr     r3, [r5, #0x8]
	ldr     r2, [sp, #0x8]
	mov     r1, r5
	add     r2, r3, r2
	str     r2, [r5, #0x8]
	ldr     r3, [r5, #0xc]
	ldr     r2, [sp, #0xc]
	add     r2, r3, r2
	str     r2, [r5, #0xc]
	ldr     r3, [r5, #0x10]
	ldr     r2, [sp, #0x10]
	add     r2, r3, r2
	str     r2, [r5, #0x10]
	ldr     r3, [r5, #0x14]
	ldr     r2, [sp, #0x14]
	add     r2, r3, r2
	str     r2, [r5, #0x14]
	bl      VEC_Normalize
	add     r0, r5, #0xc
	mov     r1, r0
	bl      VEC_Normalize
	cmp     r8, #0x0
	bne     branch_20b4e38
	ldr     r2, [r5, #0x18]
	ldr     r1, [sp, #0x18]
	add     r0, r5, #0x18
	add     r1, r2, r1
	str     r1, [r5, #0x18]
	ldr     r3, [r5, #0x1c]
	ldr     r2, [sp, #0x1c]
	mov     r1, r0
	add     r2, r3, r2
	str     r2, [r5, #0x1c]
	ldr     r3, [r5, #0x20]
	ldr     r2, [sp, #0x20]
	add     r2, r3, r2
	str     r2, [r5, #0x20]
	bl      VEC_Normalize
	add     sp, sp, #0x48
	ldmfd   sp!, {r4-r10,pc}
@ 0x20b4e38

.arm
branch_20b4e38: @ 20b4e38 :arm
	ldr     r9, [r5, #0x14]
	ldr     r6, [r5, #0x4]
	ldr     r4, [r5, #0x10]
	ldr     r2, [r5, #0x8]
	mul     r1, r6, r9
	mul     r0, r2, r4
	sub     r0, r1, r0
	ldr     r7, [r5, #0xc]
	ldr     r8, [r5]
	mov     r3, r0, asr #12
	mul     r1, r2, r7
	mul     r0, r8, r9
	sub     r2, r1, r0
	mul     r1, r8, r4
	mul     r0, r6, r7
	sub     r0, r1, r0
	str     r3, [r5, #0x18]
	mov     r1, r2, asr #12
	str     r1, [r5, #0x1c]
	mov     r0, r0, asr #12
	add     sp, sp, #0x48
	str     r0, [r5, #0x20]
	ldmfd   sp!, {r4-r10,pc}
@ 0x20b4e94

.arm
branch_20b4e94: @ 20b4e94 :arm
	mov     r0, r3, lsl #1
	ldrh    r3, [r8, r0]
	mov     r0, r5
	add     r1, r4, r7
	add     r2, r4, r6
	bl      Function_20b526c
	cmp     r0, #0x0
	beq     branch_20b4f10
	ldr     r9, [r5, #0x14]
	ldr     r6, [r5, #0x4]
	ldr     r4, [r5, #0x10]
	ldr     r2, [r5, #0x8]
	mul     r1, r6, r9
	mul     r0, r2, r4
	sub     r0, r1, r0
	ldr     r7, [r5, #0xc]
	ldr     r8, [r5]
	mov     r3, r0, asr #12
	mul     r1, r2, r7
	mul     r0, r8, r9
	sub     r2, r1, r0
	mul     r1, r8, r4
	mul     r0, r6, r7
	sub     r0, r1, r0
	str     r3, [r5, #0x18]
	mov     r1, r2, asr #12
	str     r1, [r5, #0x1c]
	mov     r0, r0, asr #12
	add     sp, sp, #0x48
	str     r0, [r5, #0x20]
	ldmfd   sp!, {r4-r10,pc}
@ 0x20b4f10

.arm
branch_20b4f10: @ 20b4f10 :arm
	add     r0, r5, #0x18
	mov     r1, r0
	bl      VEC_Normalize
	add     sp, sp, #0x48
	ldmfd   sp!, {r4-r10,pc}
@ 0x20b4f24

.word 0x1fff0000 @ 0x20b4f24
.arm
Function_20b4f28: @ 20b4f28 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x48
	mov     r9, r3
	ldrh    r3, [r9, #0x4]
	ldr     r4, [r2, #0x4]
	mov     r10, r0
	sub     r0, r3, #0x1
	cmp     r0, r1, asr #12
	add     r8, r9, r4
	mov     r0, r1, asr #12
	ldr     r4, [r9, #0xc]
	ldr     r11, [r9, #0x10]
	ldr     r3, [r2]
	bne     branch_20b501c
	tst     r3, #3, 2 @ #0xc0000000
	beq     branch_20b4f7c
	tst     r3, #1, 2 @ #0x40000000
	andne   r2, r0, #0x1
	addne   r0, r2, r0, lsr #1
	andeq   r2, r0, #0x3
	addeq   r0, r2, r0, lsr #2
.arm
branch_20b4f7c: @ 20b4f7c :arm
	ldr     r2, [r9, #0x8]
	tst     r2, #0x2
	movne   r5, #0x0
	bne     branch_20b5090
	mov     r0, r0, lsl #1
	ldrh    r3, [r8, r0]
	mov     r0, r10
	add     r1, r9, r4
	add     r2, r9, r11
	bl      Function_20b526c
	cmp     r0, #0x0
	beq     branch_20b5008
	ldr     r8, [r10, #0x14]
	ldr     r5, [r10, #0x4]
	ldr     r4, [r10, #0x10]
	ldr     r2, [r10, #0x8]
	mul     r1, r5, r8
	mul     r0, r2, r4
	sub     r0, r1, r0
	ldr     r6, [r10, #0xc]
	ldr     r7, [r10]
	mov     r3, r0, asr #12
	mul     r1, r2, r6
	mul     r0, r7, r8
	sub     r2, r1, r0
	mul     r1, r7, r4
	mul     r0, r5, r6
	sub     r0, r1, r0
	str     r3, [r10, #0x18]
	mov     r1, r2, asr #12
	str     r1, [r10, #0x1c]
	mov     r0, r0, asr #12
	add     sp, sp, #0x48
	str     r0, [r10, #0x20]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b5008

.arm
branch_20b5008: @ 20b5008 :arm
	add     r0, r10, #0x18
	mov     r1, r0
	bl      VEC_Normalize
	add     sp, sp, #0x48
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b501c

.arm
branch_20b501c: @ 20b501c :arm
	tst     r3, #3, 2 @ #0xc0000000
	beq     branch_20b508c
	ldr     r2, [pc, #0x234] @ [0x20b5260] (=0x1fff0000)
	tst     r3, #1, 2 @ #0x40000000
	and     r3, r3, r2
	mov     r3, r3, lsr #16
	beq     branch_20b505c
	cmp     r0, r3
	movcs   r0, r3, lsr #1
	addcs   r5, r0, #0x1
	bhs     branch_20b5090
	mov     r0, r0, lsr #1
	add     r5, r0, #0x1
	and     r6, r1, r2, lsr #16
	mov     r7, #0x2
	b       branch_20b509c
@ 0x20b505c

.arm
branch_20b505c: @ 20b505c :arm
	cmp     r0, r3
	blo     branch_20b5074
	and     r2, r0, #0x3
	add     r0, r2, r0, lsr #2
	add     r5, r0, #0x1
	b       branch_20b5090
@ 0x20b5074

.arm
branch_20b5074: @ 20b5074 :arm
	ldr     r2, [pc, #0x1e8] @ [0x20b5264] (=0x3fff)
	mov     r0, r0, lsr #2
	add     r5, r0, #0x1
	and     r6, r1, r2
	mov     r7, #0x4
	b       branch_20b509c
@ 0x20b508c

.arm
branch_20b508c: @ 20b508c :arm
	add     r5, r0, #0x1
.arm
branch_20b5090: @ 20b5090 :arm
	ldr     r2, [pc, #0x1d0] @ [0x20b5268] (=0xfff)
	mov     r7, #0x1
	and     r6, r1, r2
.arm
branch_20b509c: @ 20b509c :arm
	mov     r0, r0, lsl #1
	ldrh    r3, [r8, r0]
	add     r0, sp, #0x24
	add     r1, r9, r4
	add     r2, r9, r11
	bl      Function_20b526c
	mov     r1, r5, lsl #1
	ldrh    r3, [r8, r1]
	orr     r5, r0, #0x0
	add     r0, sp, #0x0
	add     r1, r9, r4
	add     r2, r9, r11
	bl      Function_20b526c
	ldr     r3, [sp, #0x24]
	ldr     r1, [sp]
	mul     r2, r3, r7
	sub     r1, r1, r3
	mul     r1, r6, r1
	add     r1, r2, r1, asr #12
	str     r1, [r10]
	ldr     r3, [sp, #0x28]
	ldr     r1, [sp, #0x4]
	mul     r2, r3, r7
	sub     r1, r1, r3
	mul     r1, r6, r1
	add     r1, r2, r1, asr #12
	str     r1, [r10, #0x4]
	ldr     r3, [sp, #0x2c]
	ldr     r1, [sp, #0x8]
	mul     r2, r3, r7
	sub     r1, r1, r3
	mul     r1, r6, r1
	add     r1, r2, r1, asr #12
	str     r1, [r10, #0x8]
	ldr     r3, [sp, #0x30]
	ldr     r1, [sp, #0xc]
	mul     r2, r3, r7
	sub     r1, r1, r3
	mul     r1, r6, r1
	add     r1, r2, r1, asr #12
	str     r1, [r10, #0xc]
	ldr     r2, [sp, #0x34]
	ldr     r1, [sp, #0x10]
	orr     r5, r5, r0
	sub     r0, r1, r2
	mul     r1, r2, r7
	mul     r0, r6, r0
	add     r0, r1, r0, asr #12
	str     r0, [r10, #0x10]
	ldr     r2, [sp, #0x38]
	ldr     r0, [sp, #0x14]
	mul     r1, r2, r7
	sub     r0, r0, r2
	mul     r0, r6, r0
	add     r2, r1, r0, asr #12
	mov     r0, r10
	mov     r1, r10
	str     r2, [r10, #0x14]
	bl      VEC_Normalize
	add     r0, r10, #0xc
	mov     r1, r0
	bl      VEC_Normalize
	cmp     r5, #0x0
	bne     branch_20b5204
	ldr     r2, [sp, #0x3c]
	ldr     r0, [sp, #0x18]
	mul     r1, r2, r7
	sub     r0, r0, r2
	mul     r0, r6, r0
	add     r0, r1, r0, asr #12
	str     r0, [r10, #0x18]
	ldr     r2, [sp, #0x40]
	ldr     r0, [sp, #0x1c]
	mul     r1, r2, r7
	sub     r0, r0, r2
	mul     r0, r6, r0
	add     r0, r1, r0, asr #12
	str     r0, [r10, #0x1c]
	ldr     r2, [sp, #0x44]
	ldr     r0, [sp, #0x20]
	mul     r1, r2, r7
	sub     r0, r0, r2
	mul     r0, r6, r0
	add     r2, r1, r0, asr #12
	add     r0, r10, #0x18
	mov     r1, r0
	str     r2, [r10, #0x20]
	bl      VEC_Normalize
	add     sp, sp, #0x48
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b5204

.arm
branch_20b5204: @ 20b5204 :arm
	ldr     r8, [r10, #0x14]
	ldr     r5, [r10, #0x4]
	ldr     r7, [r10]
	ldr     r4, [r10, #0x10]
	ldr     r2, [r10, #0x8]
	ldr     r6, [r10, #0xc]
	mul     r1, r5, r8
	mul     r0, r2, r4
	sub     r0, r1, r0
	mov     r3, r0, asr #12
	mul     r1, r2, r6
	mul     r0, r7, r8
	sub     r2, r1, r0
	mul     r1, r7, r4
	mul     r0, r5, r6
	sub     r0, r1, r0
	str     r3, [r10, #0x18]
	mov     r1, r2, asr #12
	str     r1, [r10, #0x1c]
	mov     r0, r0, asr #12
	str     r0, [r10, #0x20]
	add     sp, sp, #0x48
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b5260

.word 0x1fff0000 @ 0x20b5260
.word 0x3fff @ 0x20b5264
.word 0xfff @ 0x20b5268
.arm
Function_20b526c: @ 20b526c :arm
	stmfd   sp!, {r3-r5,lr}
	tst     r3, #2, 18 @ #0x8000
	beq     branch_20b5324
	mov     r4, #0x0
	str     r4, [r0, #0x20]
	str     r4, [r0, #0x1c]
	str     r4, [r0, #0x18]
	str     r4, [r0, #0x14]
	str     r4, [r0, #0x10]
	ldr     r2, [pc, #0x12c] @ [0x20b53c4] (=0x7fff)
	str     r4, [r0, #0xc]
	str     r4, [r0, #0x8]
	and     r2, r3, r2
	add     r3, r2, r2, lsl #1
	str     r4, [r0, #0x4]
	add     r2, r1, r3, lsl #1
	str     r4, [r0]
	mov     r3, r3, lsl #1
	ldrsh   r1, [r1, r3]
	ldrsh   r12, [r2, #0x2]
	ldrsh   r3, [r2, #0x4]
	tst     r1, #0x10
	subne   r5, r4, #1, 20 @ #0x1000
	ldr     r4, [pc, #0xf8] @ [0x20b53c8] (=Unknown_20f9818)
	and     r1, r1, #0xf
	ldr     lr, [pc, #0xf4] @ [0x20b53cc] (=Unknown_20f9818+1)
	moveq   r5, #1, 20 @ #0x1000
	ldrb    r4, [r4, r1, lsl #0x2]
	str     r5, [r0, r1, lsl #0x2]
	ldrb    lr, [lr, r1, lsl #0x2]
	str     r12, [r0, r4, lsl #0x2]
	str     r3, [r0, lr, lsl #0x2]
	ldrsh   lr, [r2]
	tst     lr, #0x20
	ldr     lr, [pc, #0xd4] @ [0x20b53d0] (=Unknown_20f9818+2)
	rsbne   r3, r3, #0x0
	ldrb    lr, [lr, r1, lsl #0x2]
	str     r3, [r0, lr, lsl #0x2]
	ldrsh   r2, [r2]
	tst     r2, #0x40
	ldr     r2, [pc, #0xc0] @ [0x20b53d4] (=Unknown_20f9818+3)
	rsbne   r12, r12, #0x0
	ldrb    r1, [r2, r1, lsl #0x2]
	str     r12, [r0, r1, lsl #0x2]
	mov     r0, #0x0
	ldmfd   sp!, {r3-r5,pc}

branch_20b5324: @ 20b5324 :arm
	ldr     r1, [pc, #0x98] @ [0x20b53c4] (=0x7fff)
	and     r1, r3, r1
	add     r3, r1, r1, lsl #2
	add     r1, r2, r3, lsl #1
	ldrsh   lr, [r1, #0x8]
	mov     r12, r3, lsl #1
	mov     r3, lr, asr #3
	str     r3, [r0, #0x10]
	ldrsh   r12, [r2, r12]
	and     r2, lr, #0x7
	mov     r2, r2, lsl #16
	mov     r3, r12, asr #3
	str     r3, [r0]
	ldrsh   r3, [r1, #0x2]
	and     r12, r12, #0x7
	orr     lr, r12, r2, asr #13
	mov     r2, r3, asr #3
	str     r2, [r0, #0x4]
	ldrsh   r12, [r1, #0x4]
	mov     r2, lr, lsl #16
	and     lr, r3, #0x7
	mov     r3, r12, asr #3
	str     r3, [r0, #0x8]
	ldrsh   r3, [r1, #0x6]
	orr     r1, lr, r2, asr #13
	mov     r1, r1, lsl #16
	and     r2, r12, #0x7
	orr     r1, r2, r1, asr #13
	mov     r1, r1, lsl #16
	and     r2, r3, #0x7
	orr     r1, r2, r1, asr #13
	mov     r1, r1, lsl #16
	mov     r1, r1, asr #16
	mov     r2, r3, asr #3
	mov     r1, r1, lsl #19
	str     r2, [r0, #0xc]
	mov     r1, r1, asr #19
	str     r1, [r0, #0x14]
	mov     r0, #0x1
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b53c4

.word 0x7fff @ 0x20b53c4
.word Unknown_20f9818 @ 0x20b53c8
.word Unknown_20f9818+1 @ 0x20b53cc
.word Unknown_20f9818+2 @ 0x20b53d0
.word Unknown_20f9818+3 @ 0x20b53d4



.arm
Function_20b53d8: @ 20b53d8 :arm
	tst     r1, #2, 4 @ #0x20000000
	movne   r0, r1, lsl #16
	movne   r0, r0, lsr #16
	bxne    lr
	mov     r3, r1, lsl #16
	tst     r1, #3, 2 @ #0xc0000000
	add     r0, r0, r3, lsr #16
	moveq   r1, r2, lsl #1
	ldreqh  r0, [r0, r1]
	bxeq    lr
	ldr     r3, [pc, #0x130] @ [0x20b5538] (=0x1fff0000)
	tst     r1, #1, 2 @ #0x40000000
	and     r1, r1, r3
	mov     r3, r1, lsr #16
	beq     branch_20b5448
	tst     r2, #0x1
	beq     branch_20b543c
	cmp     r2, r3
	bls     branch_20b5434
	bic     r1, r3, #0x1
	add     r0, r0, r1
	ldrh    r0, [r0, #0x2]
	bx      lr
@ 0x20b5434

.arm
branch_20b5434: @ 20b5434 :arm
	mov     r1, r2, lsr #1
	b       branch_20b54f0
@ 0x20b543c

.arm
branch_20b543c: @ 20b543c :arm
	bic     r1, r2, #0x1
	ldrh    r0, [r0, r1]
	bx      lr
@ 0x20b5448

.arm
branch_20b5448: @ 20b5448 :arm
	ands    r1, r2, #0x3
	beq     branch_20b54e0
	cmp     r2, r3
	bls     branch_20b546c
	mov     r2, r3, lsr #2
	mov     r1, r1, lsl #1
	add     r0, r0, r2, lsl #1
	ldrh    r0, [r1, r0]
	bx      lr
@ 0x20b546c

.arm
branch_20b546c: @ 20b546c :arm
	tst     r2, #0x1
	beq     branch_20b54d8
	tst     r2, #0x2
	movne   r3, r2, lsr #2
	addne   r1, r3, #0x1
	moveq   r1, r2, lsr #2
	mov     r2, r1, lsl #1
	addeq   r3, r1, #0x1
	mov     r1, r3, lsl #1
	ldrh    r2, [r0, r2]
	ldrh    r12, [r0, r1]
	ldr     r0, [pc, #0x9c] @ [0x20b553c] (=0x7c1f)
	and     r1, r2, #62, 28 @ #0x3e0
	and     r3, r2, r0
	add     r2, r1, r1, lsl #1
	and     r1, r12, #62, 28 @ #0x3e0
	add     r1, r2, r1
	add     r3, r3, r3, lsl #1
	and     r2, r12, r0
	add     r2, r3, r2
	mov     r1, r1, lsr #2
	and     r2, r0, r2, lsr #2
	and     r0, r1, #62, 28 @ #0x3e0
	orr     r0, r2, r0
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bx      lr
@ 0x20b54d8

.arm
branch_20b54d8: @ 20b54d8 :arm
	mov     r1, r2, lsr #2
	b       branch_20b54f0
@ 0x20b54e0

.arm
branch_20b54e0: @ 20b54e0 :arm
	mov     r1, r2, lsr #2
	mov     r1, r1, lsl #1
	ldrh    r0, [r0, r1]
	bx      lr
@ 0x20b54f0

.arm
branch_20b54f0: @ 20b54f0 :arm
	mov     r2, r1, lsl #1
	add     r1, r0, r1, lsl #1
	ldrh    r3, [r0, r2]
	ldrh    r12, [r1, #0x2]
	ldr     r0, [pc, #0x34] @ [0x20b553c] (=0x7c1f)
	and     r2, r3, #62, 28 @ #0x3e0
	and     r1, r12, #62, 28 @ #0x3e0
	add     r1, r2, r1
	mov     r1, r1, lsr #1
	and     r3, r3, r0
	and     r2, r12, r0
	add     r2, r3, r2
	and     r2, r0, r2, lsr #1
	and     r0, r1, #62, 28 @ #0x3e0
	orr     r0, r2, r0
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bx      lr
@ 0x20b5538

.word 0x1fff0000 @ 0x20b5538
.word 0x7c1f @ 0x20b553c
.arm
Function_20b5540: @ 20b5540 :arm
	tst     r1, #2, 4 @ #0x20000000
	movne   r0, r1, lsl #16
	movne   r0, r0, lsr #16
	bxne    lr
	mov     r3, r1, lsl #16
	add     r3, r0, r3, lsr #16
	tst     r1, #3, 2 @ #0xc0000000
	ldreqb  r0, [r3, r2]
	bxeq    lr
	ldr     r0, [pc, #0xbc] @ [0x20b5628] (=0x1fff0000)
	tst     r1, #1, 2 @ #0x40000000
	and     r0, r1, r0
	mov     r0, r0, lsr #16
	beq     branch_20b55b4
	tst     r2, #0x1
	beq     branch_20b55ac
	cmp     r2, r0
	addhi   r0, r3, r0, lsr #1
	ldrhib  r0, [r0, #0x1]
	bxhi    lr
	add     r0, r3, r2, lsr #1
	ldrb    r1, [r3, r2, lsr #0x1]
	ldrb    r0, [r0, #0x1]
	add     r0, r1, r0
	mov     r0, r0, lsl #15
	mov     r0, r0, lsr #16
	bx      lr
@ 0x20b55ac

.arm
branch_20b55ac: @ 20b55ac :arm
	ldrb    r0, [r3, r2, lsr #0x1]
	bx      lr
@ 0x20b55b4

.arm
branch_20b55b4: @ 20b55b4 :arm
	ands    r1, r2, #0x3
	beq     branch_20b5620
	cmp     r2, r0
	addhi   r0, r3, r0, lsr #2
	ldrhib  r0, [r1, r0]
	bxhi    lr
	tst     r2, #0x1
	beq     branch_20b5604
	tst     r2, #0x2
	movne   r2, r2, lsr #2
	addne   r0, r2, #0x1
	moveq   r0, r2, lsr #2
	ldrb    r1, [r3, r0]
	addeq   r2, r0, #0x1
	ldrb    r0, [r3, r2]
	add     r1, r1, r1, lsl #1
	add     r0, r1, r0
	mov     r0, r0, lsl #14
	mov     r0, r0, lsr #16
	bx      lr
@ 0x20b5604

.arm
branch_20b5604: @ 20b5604 :arm
	add     r0, r3, r2, lsr #2
	ldrb    r1, [r3, r2, lsr #0x2]
	ldrb    r0, [r0, #0x1]
	add     r0, r1, r0
	mov     r0, r0, lsl #15
	mov     r0, r0, lsr #16
	bx      lr

branch_20b5620: @ 20b5620 :arm
	ldrb    r0, [r3, r2, lsr #0x2]
	bx      lr
@ 0x20b5628

.word 0x1fff0000 @ 0x20b5628



.arm
Function_20b562c: @ 20b562c :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r0
	cmp     r2, #0x0
	ldrne   r0, [r2, #0x8]
	mov     r9, r1
	cmpne   r0, #0x0
	addne   r7, r2, r0
	ldr     r0, [pc, #0xac] @ [0x20b56fc] (=Unknown_2100edc)
	add     r1, r10, #0x1a
	ldr     r3, [r0]
	mov     r0, #0x0
	str     r3, [r10, #0xc]
	ldrb    r2, [r2, #0x18]
	moveq   r7, #0x0
	strb    r2, [r10, #0x19]
	mov     r2, r2, lsl #1
	bl      MIi_CpuClear16
	ldrb    r0, [r9, #0x9]
	mov     r6, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r3-r11,pc}
	mov     r8, r6
	add     r5, r9, #0x8
	mov     r11, r6
	mvn     r4, #0x0
.arm
branch_20b5690: @ 20b5690 :arm
	cmp     r5, #0x0
	beq     branch_20b56bc
	ldrb    r0, [r9, #0x9]
	cmp     r6, r0
	bhs     branch_20b56bc
	ldrh    r0, [r9, #0xe]
	add     r1, r5, r0
	ldrh    r0, [r1, #0x2]
	add     r0, r1, r0
	add     r1, r0, r8
	b       branch_20b56c0
@ 0x20b56bc

.arm
branch_20b56bc: @ 20b56bc :arm
	mov     r1, r11
.arm
branch_20b56c0: @ 20b56c0 :arm
	cmp     r7, #0x0
	moveq   r0, r4
	beq     branch_20b56d4
	add     r0, r7, #0x4
	bl      Function_20b3aa4
.arm
branch_20b56d4: @ 20b56d4 :arm
	cmp     r0, #0x0
	orrge   r1, r6, #1, 24 @ #0x100
	addge   r0, r10, r0, lsl #1
	strgeh  r1, [r0, #0x1a]
	ldrb    r0, [r9, #0x9]
	add     r6, r6, #0x1
	add     r8, r8, #0x10
	cmp     r6, r0
	blo     branch_20b5690
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b56fc

.word Unknown_2100edc @ 0x20b56fc



.arm
Function_20b5700: @ 20b5700 :arm
	stmfd   sp!, {r4-r8,lr}
	ldr     r4, [r1, #0x8]
	ldr     r1, [r1]
	mov     r7, r0
	mov     r5, r1, asr #12
	adds    r3, r4, #0x8
	beq     branch_20b5748
	ldrb    r1, [r4, #0x9]
	mov     r0, r2, lsl #16
	mov     r2, r0, lsr #16
	cmp     r1, r0, lsr #16
	bls     branch_20b5748
	ldrh    r1, [r4, #0xe]
	ldrh    r0, [r3, r1]
	add     r1, r3, r1
	add     r1, r1, #0x4
	mla     r6, r0, r2, r1
	b       branch_20b574c
@ 0x20b5748

.arm
branch_20b5748: @ 20b5748 :arm
	mov     r6, #0x0
.arm
branch_20b574c: @ 20b574c :arm
	ldr     r1, [r6]
	mov     r0, r4
	mov     r2, r5
	bl      Function_20b53d8
	mov     r8, r0
	ldr     r1, [r6, #0x4]
	mov     r0, r4
	mov     r2, r5
	bl      Function_20b53d8
	ldr     r1, [r7, #0x4]
	orr     r0, r8, r0, lsl #16
	tst     r1, #2, 18 @ #0x8000
	movne   r1, #0x1
	moveq   r1, #0x0
	orr     r0, r0, r1, lsl #15
	str     r0, [r7, #0x4]
	ldr     r1, [r6, #0xc]
	mov     r0, r4
	mov     r2, r5
	bl      Function_20b53d8
	mov     r8, r0
	ldr     r1, [r6, #0x8]
	mov     r0, r4
	mov     r2, r5
	bl      Function_20b53d8
	ldr     r1, [r7, #0x8]
	orr     r0, r0, r8, lsl #16
	tst     r1, #2, 18 @ #0x8000
	movne   r1, #0x1
	moveq   r1, #0x0
	orr     r0, r0, r1, lsl #15
	str     r0, [r7, #0x8]
	ldr     r1, [r6, #0x10]
	mov     r0, r4
	mov     r2, r5
	bl      Function_20b5540
	ldr     r1, [r7, #0xc]
	bic     r1, r1, #31, 16 @ #0x1f0000
	orr     r0, r1, r0, lsl #16
	str     r0, [r7, #0xc]
	ldmfd   sp!, {r4-r8,pc}
@ 0x20b57f0

.arm
Function_20b57f0: @ 20b57f0 :arm
	tst     r1, #2, 4 @ #0x20000000
	movne   r0, r2
	bxne    lr
	tst     r1, #3, 2 @ #0xc0000000
	add     r0, r0, r2
	beq     branch_20b58ac
	mov     r2, r1, lsl #16
	tst     r1, #1, 2 @ #0x40000000
	mov     r12, r2, lsr #16
	beq     branch_20b5840
	tst     r3, #0x1
	beq     branch_20b5838
	cmp     r3, r12
	movhi   r2, r12, lsr #1
	addhi   r3, r2, #0x1
	bhi     branch_20b58ac
	mov     r3, r3, lsr #1
	b       branch_20b58c0
@ 0x20b5838

.arm
branch_20b5838: @ 20b5838 :arm
	mov     r3, r3, lsr #1
	b       branch_20b58ac
@ 0x20b5840

.arm
branch_20b5840: @ 20b5840 :arm
	ands    r2, r3, #0x3
	beq     branch_20b58a8
	cmp     r3, r12
	addhi   r3, r2, r12, lsr #2
	bhi     branch_20b58ac
	tst     r3, #0x1
	beq     branch_20b58a0
	tst     r3, #0x2
	movne   r3, r3, lsr #2
	addne   r2, r3, #0x1
	moveq   r2, r3, lsr #2
	addeq   r3, r2, #0x1
	tst     r1, #1, 4 @ #0x10000000
	ldreq   r2, [r0, r2, lsl #0x2]
	ldreq   r1, [r0, r3, lsl #0x2]
	beq     branch_20b5890
	mov     r2, r2, lsl #1
	mov     r1, r3, lsl #1
	ldrsh   r2, [r0, r2]
	ldrsh   r1, [r0, r1]
.arm
branch_20b5890: @ 20b5890 :arm
	add     r0, r2, r2, lsl #1
	add     r0, r0, r1
	mov     r0, r0, asr #2
	bx      lr
@ 0x20b58a0

.arm
branch_20b58a0: @ 20b58a0 :arm
	mov     r3, r3, lsr #2
	b       branch_20b58c0
@ 0x20b58a8

.arm
branch_20b58a8: @ 20b58a8 :arm
	mov     r3, r3, lsr #2
.arm
branch_20b58ac: @ 20b58ac :arm
	tst     r1, #1, 4 @ #0x10000000
	movne   r1, r3, lsl #1
	ldrnesh r0, [r0, r1]
	ldreq   r0, [r0, r3, lsl #0x2]
	bx      lr
@ 0x20b58c0

.arm
branch_20b58c0: @ 20b58c0 :arm
	tst     r1, #1, 4 @ #0x10000000
	addeq   r1, r0, r3, lsl #2
	ldreq   r0, [r0, r3, lsl #0x2]
	ldreq   r1, [r1, #0x4]
	beq     branch_20b58e4
	add     r1, r0, r3, lsl #1
	mov     r2, r3, lsl #1
	ldrsh   r0, [r0, r2]
	ldrsh   r1, [r1, #0x2]
.arm
branch_20b58e4: @ 20b58e4 :arm
	add     r0, r0, r1
	mov     r0, r0, asr #1
	bx      lr
@ 0x20b58f0

.arm
Function_20b58f0: @ 20b58f0 :arm
	tst     r1, #2, 4 @ #0x20000000
	movne   r0, r2
	bxne    lr
	tst     r1, #3, 2 @ #0xc0000000
	add     r0, r0, r2
	beq     branch_20b59c0
	mov     r2, r1, lsl #16
	tst     r1, #1, 2 @ #0x40000000
	mov     r2, r2, lsr #16
	beq     branch_20b5940
	tst     r3, #0x1
	beq     branch_20b5938
	cmp     r3, r2
	movhi   r1, r2, lsr #1
	addhi   r3, r1, #0x1
	bhi     branch_20b59c0
	mov     r1, r3, lsr #1
	b       branch_20b59c8
@ 0x20b5938

.arm
branch_20b5938: @ 20b5938 :arm
	mov     r3, r3, lsr #1
	b       branch_20b59c0
@ 0x20b5940

.arm
branch_20b5940: @ 20b5940 :arm
	ands    r1, r3, #0x3
	beq     branch_20b59bc
	cmp     r3, r2
	addhi   r3, r1, r2, lsr #2
	bhi     branch_20b59c0
	tst     r3, #0x1
	beq     branch_20b59b4
	tst     r3, #0x2
	movne   r3, r3, lsr #2
	addne   r1, r3, #0x1
	moveq   r1, r3, lsr #2
	add     r2, r0, r1, lsl #2
	mov     r12, r1, lsl #2
	addeq   r3, r1, #0x1
	add     r1, r0, r3, lsl #2
	ldrsh   r2, [r2, #0x2]
	mov     r3, r3, lsl #2
	ldrsh   r12, [r0, r12]
	ldrsh   r1, [r1, #0x2]
	ldrsh   r3, [r0, r3]
	add     r2, r2, r2, lsl #1
	add     r0, r2, r1
	add     r12, r12, r12, lsl #1
	mov     r1, r0, asr #2
	add     r2, r12, r3
	mov     r0, r2, lsl #14
	mov     r1, r1, lsl #16
	orr     r0, r1, r0, lsr #16
	bx      lr
@ 0x20b59b4

.arm
branch_20b59b4: @ 20b59b4 :arm
	mov     r1, r3, lsr #2
	b       branch_20b59c8
@ 0x20b59bc

.arm
branch_20b59bc: @ 20b59bc :arm
	mov     r3, r3, lsr #2
.arm
branch_20b59c0: @ 20b59c0 :arm
	ldr     r0, [r0, r3, lsl #0x2]
	bx      lr
@ 0x20b59c8

.arm
branch_20b59c8: @ 20b59c8 :arm
	add     r3, r0, r1, lsl #2
	mov     r12, r1, lsl #2
	ldrsh   r2, [r3, #0x2]
	ldrsh   r1, [r3, #0x6]
	ldrsh   r12, [r0, r12]
	ldrsh   r3, [r3, #0x4]
	add     r0, r2, r1
	mov     r1, r0, asr #1
	add     r0, r12, r3
	mov     r0, r0, lsl #15
	mov     r1, r1, lsl #16
	orr     r0, r1, r0, lsr #16
	bx      lr
@ 0x20b59fc

.arm
Function_20b59fc: @ 20b59fc :arm
	stmfd   sp!, {r3-r9,lr}
	mov     r7, r0
	mov     r6, r2
	mov     r5, r3
	adds    r3, r7, #0x8
	beq     branch_20b5a38
	ldrb    r0, [r7, #0x9]
	cmp     r1, r0
	bhs     branch_20b5a38
	ldrh    r2, [r7, #0xe]
	ldrh    r0, [r3, r2]
	add     r2, r3, r2
	add     r2, r2, #0x4
	mla     r4, r0, r1, r2
	b       branch_20b5a3c
@ 0x20b5a38

.arm
branch_20b5a38: @ 20b5a38 :arm
	mov     r4, #0x0
.arm
branch_20b5a3c: @ 20b5a3c :arm
	ldr     r1, [r4, #0x18]
	ldr     r2, [r4, #0x1c]
	mov     r0, r7
	mov     r3, r6
	ldr     r8, [r5]
	bl      Function_20b57f0
	mov     r9, r0
	ldr     r1, [r4, #0x20]
	ldr     r2, [r4, #0x24]
	mov     r0, r7
	mov     r3, r6
	bl      Function_20b57f0
	cmp     r9, #0x0
	cmpeq   r0, #0x0
	strne   r9, [r5, #0x24]
	strne   r0, [r5, #0x28]
	orreq   r8, r8, #0x4
	ldr     r1, [r4, #0x10]
	ldr     r2, [r4, #0x14]
	bicne   r8, r8, #0x4
	mov     r0, r7
	mov     r3, r6
	bl      Function_20b58f0
	cmp     r0, #1, 4 @ #0x10000000
	orreq   r8, r8, #0x2
	beq     branch_20b5ab4
	strh    r0, [r5, #0x20]
	mov     r0, r0, lsr #16
	strh    r0, [r5, #0x22]
	bic     r8, r8, #0x2
.arm
branch_20b5ab4: @ 20b5ab4 :arm
	mov     r0, r7
	mov     r3, r6
	ldmia   r4, {r1,r2}
	bl      Function_20b57f0
	mov     r9, r0
	ldr     r1, [r4, #0x8]
	ldr     r2, [r4, #0xc]
	mov     r0, r7
	mov     r3, r6
	bl      Function_20b57f0
	cmp     r9, #1, 20 @ #0x1000
	cmpeq   r0, #1, 20 @ #0x1000
	orreq   r8, r8, #0x1
	strne   r9, [r5, #0x18]
	strne   r0, [r5, #0x1c]
	bicne   r8, r8, #0x1
	str     r8, [r5]
	ldmfd   sp!, {r3-r9,pc}
@ 0x20b5afc


.arm
Function_20b5afc: @ 20b5afc :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r0
	cmp     r2, #0x0
	ldrne   r0, [r2, #0x8]
	mov     r9, r1
	cmpne   r0, #0x0
	addne   r7, r2, r0
	ldr     r0, [pc, #0xac] @ [0x20b5bcc] (=Unknown_2100ed4)
	add     r1, r10, #0x1a
	ldr     r3, [r0]
	mov     r0, #0x0
	str     r3, [r10, #0xc]
	ldrb    r2, [r2, #0x18]
	moveq   r7, #0x0
	strb    r2, [r10, #0x19]
	mov     r2, r2, lsl #1
	bl      MIi_CpuClear16
	ldrb    r0, [r9, #0x9]
	mov     r6, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r3-r11,pc}
	mov     r8, r6
	add     r5, r9, #0x8
	mov     r11, r6
	mvn     r4, #0x0
.arm
branch_20b5b60: @ 20b5b60 :arm
	cmp     r5, #0x0
	beq     branch_20b5b8c
	ldrb    r0, [r9, #0x9]
	cmp     r6, r0
	bhs     branch_20b5b8c
	ldrh    r0, [r9, #0xe]
	add     r1, r5, r0
	ldrh    r0, [r1, #0x2]
	add     r0, r1, r0
	add     r1, r0, r8
	b       branch_20b5b90
@ 0x20b5b8c

.arm
branch_20b5b8c: @ 20b5b8c :arm
	mov     r1, r11
.arm
branch_20b5b90: @ 20b5b90 :arm
	cmp     r7, #0x0
	moveq   r0, r4
	beq     branch_20b5ba4
	add     r0, r7, #0x4
	bl      Function_20b3aa4
.arm
branch_20b5ba4: @ 20b5ba4 :arm
	cmp     r0, #0x0
	orrge   r1, r6, #1, 24 @ #0x100
	addge   r0, r10, r0, lsl #1
	strgeh  r1, [r0, #0x1a]
	ldrb    r0, [r9, #0x9]
	add     r6, r6, #0x1
	add     r8, r8, #0x10
	cmp     r6, r0
	blo     branch_20b5b60
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b5bcc

.word Unknown_2100ed4 @ 0x20b5bcc



.arm
Function_20b5bd0: @ 20b5bd0 :arm
	stmfd   sp!, {r4,lr}
	ldr     r12, [r1]
	mov     r4, r0
	mov     r2, r2, lsl #16
	ldr     r0, [r1, #0x8]
	mov     r1, r2, lsr #16
	mov     r3, r4
	mov     r2, r12, asr #12
	bl      Function_20b59fc
	ldr     r0, [r4, #0x10]
	bic     r0, r0, #3, 2 @ #0xc0000000
	orr     r0, r0, #1, 2 @ #0x40000000
	str     r0, [r4, #0x10]
	ldr     r0, [r4]
	orr     r0, r0, #0x8
	str     r0, [r4]
	ldmfd   sp!, {r4,pc}
@ 0x20b5c14


.arm
Function_20b5c14: @ 20b5c14 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r0
	cmp     r2, #0x0
	ldrne   r0, [r2, #0x8]
	mov     r9, r1
	cmpne   r0, #0x0
	addne   r7, r2, r0
	ldr     r0, [pc, #0xb4] @ [0x20b5cec] (=Unknown_2100ed8)
	add     r1, r10, #0x1a
	ldr     r3, [r0]
	mov     r0, #0x0
	str     r3, [r10, #0xc]
	ldrb    r2, [r2, #0x18]
	moveq   r7, #0x0
	strb    r2, [r10, #0x19]
	str     r9, [r10, #0x8]
	ldrb    r2, [r10, #0x19]
	mov     r2, r2, lsl #1
	bl      MIi_CpuClear16
	ldrb    r0, [r9, #0xd]
	mov     r6, #0x0
	cmp     r0, #0x0
	ldmlsfd sp!, {r3-r11,pc}
	mov     r8, r6
	add     r5, r9, #0xc
	mov     r11, r6
	mvn     r4, #0x0
.arm
branch_20b5c80: @ 20b5c80 :arm
	cmp     r5, #0x0
	beq     branch_20b5cac
	ldrb    r0, [r9, #0xd]
	cmp     r6, r0
	bhs     branch_20b5cac
	ldrh    r0, [r9, #0x12]
	add     r1, r5, r0
	ldrh    r0, [r1, #0x2]
	add     r0, r1, r0
	add     r1, r0, r8
	b       branch_20b5cb0
@ 0x20b5cac

.arm
branch_20b5cac: @ 20b5cac :arm
	mov     r1, r11
.arm
branch_20b5cb0: @ 20b5cb0 :arm
	cmp     r7, #0x0
	moveq   r0, r4
	beq     branch_20b5cc4
	add     r0, r7, #0x4
	bl      Function_20b3aa4
.arm
branch_20b5cc4: @ 20b5cc4 :arm
	cmp     r0, #0x0
	orrge   r1, r6, #1, 24 @ #0x100
	addge   r0, r10, r0, lsl #1
	strgeh  r1, [r0, #0x1a]
	ldrb    r0, [r9, #0xd]
	add     r6, r6, #0x1
	add     r8, r8, #0x10
	cmp     r6, r0
	blo     branch_20b5c80
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b5cec

.word Unknown_2100ed8 @ 0x20b5cec



.arm
Function_20b5cf0: @ 20b5cf0 :arm
	stmfd   sp!, {r3-r5,lr}
	movs    r5, r0
	mov     r4, r2
	moveq   r0, #0x0
	beq     branch_20b5d0c
	add     r0, r5, #0x3c
	bl      Function_20b38e4
branch_20b5d0c: @ 20b5d0c :arm
	ldr     r1, [r0]
	ldr     r3, [r4, #0x10]
	and     r1, r1, #7, 6 @ #0x1c000000
	cmp     r1, #5, 6 @ #0x14000000
	ldrne   r1, [r5, #0x8]
	ldr     r2, [pc, #0x98] @ [0x20b5dc0] (=0x7ff)
	ldreq   r1, [r5, #0x18]
	mov     r1, r1, lsl #16
	mov     r1, r1, lsr #16
	bic     r5, r1, #14, 4 @ #0xe0000000
	ldr     r1, [pc, #0x88] @ [0x20b5dc4] (=0xc00f0000)
	and     r3, r3, r1
	str     r3, [r4, #0x10]
	ldr     r1, [r0]
	add     r1, r1, r5
	orr     r1, r3, r1
	str     r1, [r4, #0x10]
	ldr     r1, [r0, #0x4]
	and     r1, r1, r2
	strh    r1, [r4, #0x2c]
	ldr     r1, [r0, #0x4]
	and     r1, r1, r2, lsl #11
	mov     r1, r1, lsr #11
	strh    r1, [r4, #0x2e]
	ldr     r0, [r0, #0x4]
	ldrh    r1, [r4, #0x2c]
	and     r3, r0, r2
	and     r0, r0, r2, lsl #11
	cmp     r3, r1
	mov     r5, r0, lsr #11
	moveq   r0, #1, 20 @ #0x1000
	beq     branch_20b5d98
	mov     r0, r3, lsl #12
	mov     r1, r1, lsl #12
	bl      FX_Div
.arm
branch_20b5d98: @ 20b5d98 :arm
	str     r0, [r4, #0x30]
	ldrh    r1, [r4, #0x2e]
	cmp     r5, r1
	moveq   r0, #1, 20 @ #0x1000
	beq     branch_20b5db8
	mov     r0, r5, lsl #12
	mov     r1, r1, lsl #12
	bl      FX_Div
.arm
branch_20b5db8: @ 20b5db8 :arm
	str     r0, [r4, #0x34]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b5dc0

.word 0x7ff @ 0x20b5dc0
.word 0xc00f0000 @ 0x20b5dc4
.arm
Function_20b5dc8: @ 20b5dc8 :arm
	stmfd   sp!, {r3-r5,lr}
	movs    r5, r0
	ldrneh  r0, [r5, #0x34]
	mov     r4, r2
	cmpne   r0, #0x0
	moveq   r0, #0x0
	beq     branch_20b5dec
	add     r0, r5, r0
	bl      Function_20b38e4
.arm
branch_20b5dec: @ 20b5dec :arm
	ldr     r1, [r5, #0x2c]
	ldrh    r2, [r0, #0x2]
	mov     r1, r1, lsl #16
	mov     r1, r1, lsr #16
	bic     r1, r1, #14, 4 @ #0xe0000000
	mov     r1, r1, lsl #16
	tst     r2, #0x1
	mov     r1, r1, lsr #16
	ldrh    r0, [r0]
	bne     branch_20b5e24
	mov     r0, r0, lsl #15
	mov     r1, r1, lsl #15
	mov     r0, r0, lsr #16
	mov     r1, r1, lsr #16
.arm
branch_20b5e24: @ 20b5e24 :arm
	add     r0, r0, r1
	str     r0, [r4, #0x14]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b5e30

.arm
Function_20b5e30: @ 20b5e30 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r6, r1
	ldr     r3, [r6]
	ldr     r5, [r6, #0x8]
	mov     r1, r2, lsl #16
	mov     r2, r3, lsl #4
	mov     r7, r0
	mov     r0, r5
	mov     r1, r1, lsr #16
	mov     r2, r2, lsr #16
	bl      Function_20b3d10
	mov     r4, r0
	ldrb    r1, [r4, #0x2]
	mov     r0, r5
	bl      Function_20b3cb8
	mov     r1, r0
	ldr     r0, [r6, #0x14]
	mov     r2, r7
	bl      Function_20b5cf0
	ldrb    r1, [r4, #0x3]
	cmp     r1, #0xff
	ldmeqfd sp!, {r3-r7,pc}
	mov     r0, r5
	bl      Function_20b3ce4
	mov     r1, r0
	ldr     r0, [r6, #0x14]
	mov     r2, r7
	bl      Function_20b5dc8
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b5ea4


.arm
Function_20b5ea4: @ 20b5ea4 :arm
	ldr     r3, [pc, #0x40] @ [0x20b5eec] (=Unknown_2100ecc)
	mov     r12, #0x0
	ldr     r3, [r3]
	str     r3, [r0, #0xc]
	ldrb    r2, [r2, #0x17]
	strb    r2, [r0, #0x19]
	str     r1, [r0, #0x8]
	ldrb    r1, [r0, #0x19]
	cmp     r1, #0x0
	bxls    lr
branch_20b5ecc: @ 20b5ecc :arm
	orr     r2, r12, #1, 24 @ #0x100
	add     r1, r0, r12, lsl #1
	strh    r2, [r1, #0x1a]
	ldrb    r1, [r0, #0x19]
	add     r12, r12, #0x1
	cmp     r12, r1
	blo     branch_20b5ecc
	bx      lr
@ 0x20b5eec

.word Unknown_2100ecc @ 0x20b5eec



.arm
Function_20b5ef0: @ 20b5ef0 :arm
	stmfd   sp!, {r3,lr}
	ldr     lr, [r1, #0x8]
	ldr     r3, [r1]
	ldrh    r1, [lr, #0x6]
	mov     r12, r3, asr #12
	mov     r3, #0x1
	mla     r2, r12, r1, r2
	mov     r1, r2, lsr #5
	add     r1, lr, r1, lsl #2
	ldr     r1, [r1, #0xc]
	and     r2, r2, #0x1f
	and     r1, r1, r3, lsl r2
	str     r1, [r0]
	ldmfd   sp!, {r3,pc}
@ 0x20b5f28


.arm
Function_20b5f28: @ 20b5f28 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r0, [r4]
	tst     r0, #0x4
	bne     branch_20b5f6c
	tst     r0, #0x2
	bne     branch_20b5f58
	add     r1, r4, #0x28
	mov     r0, #0x19
	mov     r2, #0xc
	bl      Function_20b275c
	b       branch_20b5f84
@ 0x20b5f58

.arm
branch_20b5f58: @ 20b5f58 :arm
	add     r1, r4, #0x4c
	mov     r0, #0x1c
	mov     r2, #0x3
	bl      Function_20b275c
	b       branch_20b5f84
@ 0x20b5f6c

.arm
branch_20b5f6c: @ 20b5f6c :arm
	tst     r0, #0x2
	bne     branch_20b5f84
	add     r1, r4, #0x28
	mov     r0, #0x1a
	mov     r2, #0x9
	bl      Function_20b275c
.arm
branch_20b5f84: @ 20b5f84 :arm
	ldr     r0, [r4]
	tst     r0, #0x1
	ldmnefd sp!, {r4,pc}
	add     r1, r4, #0x4
	mov     r0, #0x1b
	mov     r2, #0x3
	bl      Function_20b275c
	ldmfd   sp!, {r4,pc}
@ 0x20b5fa4

.arm
Function_20b5fa4: @ 20b5fa4 :arm
	tst     r3, #0x4
	beq     branch_20b5fbc
	ldr     r1, [r0]
	orr     r1, r1, #0x1
	str     r1, [r0]
	b       branch_20b5fd4
@ 0x20b5fbc

.arm
branch_20b5fbc: @ 20b5fbc :arm
	ldr     r2, [r1]
	str     r2, [r0, #0x4]
	ldr     r2, [r1, #0x4]
	str     r2, [r0, #0x8]
	ldr     r1, [r1, #0x8]
	str     r1, [r0, #0xc]
.arm
branch_20b5fd4: @ 20b5fd4 :arm
	ldr     r1, [r0]
	orr     r1, r1, #0x18
	str     r1, [r0]
	bx      lr
@ 0x20b5fe4

.arm
Function_20b5fe4: @ 20b5fe4 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	ldr     r0, [r5]
	mov     r4, #0x0
	tst     r0, #0x4
	moveq   r4, #0x1
	tst     r0, #0x20
	beq     branch_20b6038
	tst     r0, #0x8
	bne     branch_20b6038
	cmp     r4, #0x0
	beq     branch_20b6028
	add     r1, r5, #0x4c
	mov     r0, #0x1c
	mov     r2, #0x3
	bl      Function_20b275c
	mov     r4, #0x0
.arm
branch_20b6028: @ 20b6028 :arm
	add     r1, r5, #0x10
	mov     r0, #0x1b
	mov     r2, #0x3
	bl      Function_20b275c
.arm
branch_20b6038: @ 20b6038 :arm
	ldr     r0, [r5]
	tst     r0, #0x2
	bne     branch_20b6070
	cmp     r4, #0x0
	add     r1, r5, #0x28
	beq     branch_20b6060
	mov     r0, #0x19
	mov     r2, #0xc
	bl      Function_20b275c
	b       branch_20b6088
@ 0x20b6060

.arm
branch_20b6060: @ 20b6060 :arm
	mov     r0, #0x1a
	mov     r2, #0x9
	bl      Function_20b275c
	b       branch_20b6088
@ 0x20b6070

.arm
branch_20b6070: @ 20b6070 :arm
	cmp     r4, #0x0
	beq     branch_20b6088
	add     r1, r5, #0x4c
	mov     r0, #0x1c
	mov     r2, #0x3
	bl      Function_20b275c
.arm
branch_20b6088: @ 20b6088 :arm
	ldr     r0, [r5]
	tst     r0, #0x1
	ldmnefd sp!, {r3-r5,pc}
	add     r1, r5, #0x4
	mov     r0, #0x1b
	mov     r2, #0x3
	bl      Function_20b275c
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b60a8


.arm
Function_20b60a8: @ 20b60a8 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r12, r0
	tst     r3, #0x4
	ldrb    r0, [r2, #0x3]
	beq     branch_20b60fc
	ldr     r1, [r12]
	tst     r0, #0x2
	orr     r1, r1, #0x1
	str     r1, [r12]
	beq     branch_20b6174
	ldr     r1, [pc, #0x110] @ [0x20b61e8] (=RAM_21c5cf0)
	ldrb    r7, [r2, #0x1]
	ldr     r1, [r1]
	mov     r3, #0x1
	add     r6, r1, #0xc4
	mov     r5, r7, lsr #5
	ldr     r4, [r6, r5, lsl #0x2]
	and     r1, r7, #0x1f
	orr     r1, r4, r3, lsl r1
	str     r1, [r6, r5, lsl #0x2]
	b       branch_20b6174
@ 0x20b60fc

.arm
branch_20b60fc: @ 20b60fc :arm
	ldr     r3, [r1]
	tst     r0, #0x2
	str     r3, [r12, #0x4]
	ldr     r3, [r1, #0x4]
	str     r3, [r12, #0x8]
	ldr     r3, [r1, #0x8]
	str     r3, [r12, #0xc]
	beq     branch_20b6174
	ldr     r3, [pc, #0xc4] @ [0x20b61e8] (=RAM_21c5cf0)
	ldrb    r8, [r2, #0x1]
	ldr     r4, [r3]
	mov     r3, #0x18
	add     r7, r4, #0xc4
	mov     r6, r8, lsr #5
	and     r4, r8, #0x1f
	mov     r5, #0x1
	mvn     r4, r5, lsl r4
	ldr     lr, [r7, r6, lsl #0x2]
	smulbb  r5, r8, r3
	and     r3, lr, r4
	str     r3, [r7, r6, lsl #0x2]
	ldr     r4, [r1, #0xc]
	ldr     r3, [pc, #0x90] @ [0x20b61ec] (=RAM_21c6b00)
	ldr     lr, [pc, #0x90] @ [0x20b61f0] (=RAM_21c6b04)
	str     r4, [r3, r5]
	ldr     r4, [r1, #0x10]
	ldr     r3, [pc, #0x88] @ [0x20b61f4] (=RAM_21c6b08)
	str     r4, [lr, r5]
	ldr     r1, [r1, #0x14]
	str     r1, [r3, r5]
.arm
branch_20b6174: @ 20b6174 :arm
	tst     r0, #0x1
	beq     branch_20b61d8
	ldrb    r3, [r2, #0x2]
	ldr     r1, [r12]
	ldr     r0, [pc, #0x5c] @ [0x20b61e8] (=RAM_21c5cf0)
	orr     r1, r1, #0x20
	str     r1, [r12]
	ldr     r1, [r0]
	mov     r0, r3, lsr #5
	add     r0, r1, r0, lsl #2
	ldr     r0, [r0, #0xc4]
	and     r1, r3, #0x1f
	mov     r2, #0x1
	tst     r0, r2, lsl r1
	beq     branch_20b61c0
	ldr     r0, [r12]
	orr     r0, r0, #0x8
	str     r0, [r12]
	b       branch_20b61d8
@ 0x20b61c0

.arm
branch_20b61c0: @ 20b61c0 :arm
	ldr     r1, [pc, #0x24] @ [0x20b61ec] (=RAM_21c6b00)
	mov     r0, #0x18
	mla     r0, r3, r0, r1
	add     r3, r12, #0x10
	ldmia   r0, {r0-r2}
	stmia   r3, {r0-r2}
.arm
branch_20b61d8: @ 20b61d8 :arm
	ldr     r0, [r12]
	orr     r0, r0, #0x10
	str     r0, [r12]
	ldmfd   sp!, {r4-r8,pc}
@ 0x20b61e8

.word RAM_21c5cf0 @ 0x20b61e8
.word RAM_21c6b00 @ 0x20b61ec
.word RAM_21c6b04 @ 0x20b61f0
.word RAM_21c6b08 @ 0x20b61f4
.arm
Function_20b61f8: @ 20b61f8 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r9, r1
	ldrh    r2, [r9, #0x2c]
	ldrh    r1, [r9, #0x2e]
	mov     r10, r0
	mov     r8, r2, lsl #12
	mov     r11, r1, lsl #12
	mov     r0, r11
	mov     r1, r8
	bl      FX_DivAsync
	ldrsh   r5, [r9, #0x22]
	ldr     r3, [r9, #0x18]
	ldrsh   r0, [r9, #0x20]
	ldr     r4, [r9, #0x1c]
	smull   r2, r1, r3, r5
	mov     r6, r2, lsr #12
	orr     r6, r6, r1, lsl #20
	smull   r2, r1, r3, r0
	mov     r7, r2, lsr #12
	orr     r7, r7, r1, lsl #20
	smull   r3, r2, r4, r0
	smull   r1, r0, r4, r5
	mov     r5, r3, lsr #12
	orr     r5, r5, r2, lsl #20
	mov     r4, r1, lsr #12
	orr     r4, r4, r0, lsl #20
	str     r6, [r10]
	str     r4, [r10, #0x14]
	bl      FX_GetDivResult
	mov     r1, r11
	rsb     r2, r5, #0x0
	mul     r0, r2, r0
	mov     r0, r0, asr #12
	str     r0, [r10, #0x4]
	mov     r0, r8
	bl      FX_DivAsync
	sub     r0, r5, r4
	add     r1, r7, r6
	ldr     r5, [r9, #0x18]
	ldrh    r4, [r9, #0x2c]
	sub     r2, r5, r1
	ldr     r1, [r9, #0x24]
	mul     r3, r4, r2
	smull   r2, r1, r5, r1
	mov     r2, r2, lsr #8
	orr     r2, r2, r1, lsl #24
	mul     r1, r4, r2
	rsb     r1, r1, r3, lsl #3
	str     r1, [r10, #0x30]
	ldr     r4, [r9, #0x1c]
	ldrh    r3, [r9, #0x2e]
	sub     r0, r0, r4
	add     r0, r0, #2, 20 @ #0x2000
	mul     r2, r3, r0
	ldr     r0, [r9, #0x28]
	smull   r1, r0, r4, r0
	mov     r1, r1, lsr #8
	orr     r1, r1, r0, lsl #24
	mul     r0, r3, r1
	add     r0, r0, r2, lsl #3
	str     r0, [r10, #0x34]
	bl      FX_GetDivResult
	mul     r0, r7, r0
	mov     r0, r0, asr #12
	str     r0, [r10, #0x10]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b6300

.arm
Function_20b6300: @ 20b6300 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r5, r1
	ldrh    r2, [r5, #0x2c]
	ldrh    r1, [r5, #0x2e]
	mov     r6, r0
	mov     r4, r2, lsl #12
	mov     r7, r1, lsl #12
	mov     r0, r7
	mov     r1, r4
	bl      FX_DivAsync
	ldrsh   r0, [r5, #0x22]
	str     r0, [r6]
	ldrsh   r0, [r5, #0x22]
	str     r0, [r6, #0x14]
	bl      FX_GetDivResult
	ldrsh   r2, [r5, #0x20]
	mov     r1, r7
	rsb     r2, r2, #0x0
	mul     r0, r2, r0
	mov     r2, r0, asr #12
	mov     r0, r4
	str     r2, [r6, #0x4]
	bl      FX_DivAsync
	ldrsh   r2, [r5, #0x20]
	ldrsh   r1, [r5, #0x22]
	ldrh    r3, [r5, #0x2c]
	ldr     r0, [r5, #0x24]
	add     r1, r2, r1
	rsb     r1, r1, #0x0
	add     r2, r1, #1, 20 @ #0x1000
	mul     r1, r0, r3
	mul     r2, r3, r2
	mov     r0, r1, lsl #4
	rsb     r0, r0, r2, lsl #3
	str     r0, [r6, #0x30]
	ldrsh   r2, [r5, #0x20]
	ldrsh   r1, [r5, #0x22]
	ldrh    r3, [r5, #0x2e]
	ldr     r0, [r5, #0x28]
	sub     r1, r2, r1
	add     r2, r1, #1, 20 @ #0x1000
	mul     r1, r0, r3
	mul     r2, r3, r2
	mov     r0, r1, lsl #4
	add     r0, r0, r2, lsl #3
	str     r0, [r6, #0x34]
	bl      FX_GetDivResult
	ldrsh   r1, [r5, #0x20]
	mul     r0, r1, r0
	mov     r0, r0, asr #12
	str     r0, [r6, #0x10]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b63d0

.arm
Function_20b63d0: @ 20b63d0 :arm
	stmfd   sp!, {r4,lr}
	ldr     r3, [r1, #0x18]
	mov     r2, #0x0
	str     r3, [r0]
	ldr     r3, [r1, #0x1c]
	str     r3, [r0, #0x14]
	str     r2, [r0, #0x4]
	ldr     r4, [r1, #0x18]
	ldr     r3, [r1, #0x24]
	ldrh    lr, [r1, #0x2c]
	smull   r12, r3, r4, r3
	mov     r4, r12, lsr #8
	orr     r4, r4, r3, lsl #24
	rsb     r3, r4, #0x0
	mul     r3, lr, r3
	str     r3, [r0, #0x30]
	ldr     r4, [r1, #0x1c]
	ldr     r12, [r1, #0x28]
	mov     r3, r4, lsl #1
	smull   lr, r12, r4, r12
	rsb     r4, r3, #0x0
	mov     r3, lr, lsr #8
	ldrh    lr, [r1, #0x2e]
	add     r1, r4, #2, 20 @ #0x2000
	orr     r3, r3, r12, lsl #24
	mul     r4, lr, r1
	mul     r1, lr, r3
	add     r1, r1, r4, lsl #3
	str     r1, [r0, #0x34]
	str     r2, [r0, #0x10]
	ldmfd   sp!, {r4,pc}
@ 0x20b644c

.arm
Function_20b644c: @ 20b644c :arm
	mov     r2, #1, 20 @ #0x1000
	str     r2, [r0]
	str     r2, [r0, #0x14]
	mov     r12, #0x0
	str     r12, [r0, #0x4]
	ldrh    r2, [r1, #0x2c]
	ldr     r3, [r1, #0x24]
	mul     r2, r3, r2
	rsb     r2, r2, #0x0
	mov     r2, r2, lsl #4
	str     r2, [r0, #0x30]
	ldrh    r2, [r1, #0x2e]
	ldr     r1, [r1, #0x28]
	mul     r2, r1, r2
	mov     r1, r2, lsl #4
	str     r1, [r0, #0x34]
	str     r12, [r0, #0x10]
	bx      lr
@ 0x20b6494

.arm
Function_20b6494: @ 20b6494 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r9, r1
	ldrh    r2, [r9, #0x2c]
	ldrh    r1, [r9, #0x2e]
	mov     r10, r0
	mov     r8, r2, lsl #12
	mov     r11, r1, lsl #12
	mov     r0, r11
	mov     r1, r8
	bl      FX_DivAsync
	ldrsh   r5, [r9, #0x22]
	ldr     r3, [r9, #0x18]
	ldrsh   r0, [r9, #0x20]
	ldr     r4, [r9, #0x1c]
	smull   r2, r1, r3, r5
	mov     r6, r2, lsr #12
	orr     r6, r6, r1, lsl #20
	smull   r2, r1, r3, r0
	mov     r7, r2, lsr #12
	orr     r7, r7, r1, lsl #20
	smull   r3, r2, r4, r0
	smull   r1, r0, r4, r5
	mov     r5, r3, lsr #12
	orr     r5, r5, r2, lsl #20
	mov     r4, r1, lsr #12
	orr     r4, r4, r0, lsl #20
	str     r6, [r10]
	str     r4, [r10, #0x14]
	bl      FX_GetDivResult
	mov     r1, r11
	rsb     r2, r5, #0x0
	mul     r0, r2, r0
	mov     r0, r0, asr #12
	str     r0, [r10, #0x4]
	mov     r0, r8
	bl      FX_DivAsync
	sub     r1, r5, r4
	add     r0, r7, r6
	ldrh    r3, [r9, #0x2c]
	ldr     r2, [r9, #0x18]
	sub     r0, r2, r0
	mul     r0, r3, r0
	mov     r0, r0, lsl #3
	str     r0, [r10, #0x30]
	ldrh    r2, [r9, #0x2e]
	ldr     r0, [r9, #0x1c]
	sub     r0, r1, r0
	add     r0, r0, #2, 20 @ #0x2000
	mul     r0, r2, r0
	mov     r0, r0, lsl #3
	str     r0, [r10, #0x34]
	bl      FX_GetDivResult
	mul     r0, r7, r0
	mov     r0, r0, asr #12
	str     r0, [r10, #0x10]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b6574

.arm
Function_20b6574: @ 20b6574 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r5, r1
	ldrh    r2, [r5, #0x2c]
	ldrh    r1, [r5, #0x2e]
	mov     r6, r0
	mov     r4, r2, lsl #12
	mov     r7, r1, lsl #12
	mov     r0, r7
	mov     r1, r4
	bl      FX_DivAsync
	ldrsh   r0, [r5, #0x22]
	str     r0, [r6]
	ldrsh   r0, [r5, #0x22]
	str     r0, [r6, #0x14]
	bl      FX_GetDivResult
	ldrsh   r2, [r5, #0x20]
	mov     r1, r7
	rsb     r2, r2, #0x0
	mul     r0, r2, r0
	mov     r2, r0, asr #12
	mov     r0, r4
	str     r2, [r6, #0x4]
	bl      FX_DivAsync
	ldrsh   r1, [r5, #0x20]
	ldrsh   r0, [r5, #0x22]
	ldrh    r2, [r5, #0x2c]
	add     r0, r1, r0
	rsb     r0, r0, #0x0
	add     r0, r0, #1, 20 @ #0x1000
	mul     r0, r2, r0
	mov     r0, r0, lsl #3
	str     r0, [r6, #0x30]
	ldrsh   r1, [r5, #0x20]
	ldrsh   r0, [r5, #0x22]
	ldrh    r2, [r5, #0x2e]
	sub     r0, r1, r0
	add     r0, r0, #1, 20 @ #0x1000
	mul     r0, r2, r0
	mov     r0, r0, lsl #3
	str     r0, [r6, #0x34]
	bl      FX_GetDivResult
	ldrsh   r1, [r5, #0x20]
	mul     r0, r1, r0
	mov     r0, r0, asr #12
	str     r0, [r6, #0x10]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b662c

.arm
Function_20b662c: @ 20b662c :arm
	ldr     r2, [r1, #0x18]
	mov     r12, #0x0
	str     r2, [r0]
	ldr     r2, [r1, #0x1c]
	str     r2, [r0, #0x14]
	str     r12, [r0, #0x4]
	str     r12, [r0, #0x30]
	ldr     r2, [r1, #0x1c]
	ldrh    r3, [r1, #0x2e]
	mov     r1, r2, lsl #1
	rsb     r1, r1, #0x0
	add     r1, r1, #2, 20 @ #0x2000
	mul     r1, r3, r1
	mov     r1, r1, lsl #3
	str     r1, [r0, #0x34]
	str     r12, [r0, #0x10]
	bx      lr
@ 0x20b6670

.arm
Function_20b6670: @ 20b6670 :arm
	mov     r2, #1, 20 @ #0x1000
	str     r2, [r0]
	mov     r1, #0x0
	str     r1, [r0, #0x4]
	str     r1, [r0, #0x10]
	str     r2, [r0, #0x14]
	str     r1, [r0, #0x30]
	str     r1, [r0, #0x34]
	bx      lr
@ 0x20b6694

.arm
Function_20b6694: @ 20b6694 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4c
	mov     r4, r0
	ldr     r0, [r4]
	mov     r1, #0x0
	tst     r0, #0x8
	ldrne   r0, [pc, #0x11c] @ [0x20b67d0] (=0x101610)
	mov     r3, #0x3
	strne   r0, [sp]
	ldreq   r0, [pc, #0x114] @ [0x20b67d4] (=0x101810)
	mov     r2, #0x2
	streq   r0, [sp]
	mov     r0, #1, 20 @ #0x1000
	str     r0, [sp, #0x44]
	str     r3, [sp, #0x4]
	str     r2, [sp, #0x48]
	str     r1, [sp, #0x40]
	str     r1, [sp, #0x34]
	str     r1, [sp, #0x30]
	str     r1, [sp, #0x2c]
	str     r1, [sp, #0x28]
	str     r1, [sp, #0x24]
	str     r1, [sp, #0x20]
	str     r1, [sp, #0x14]
	str     r1, [sp, #0x10]
	ldr     r1, [r4]
	ldr     r0, [pc, #0xd4] @ [0x20b67d8] (=JumpTable_21010e4)
	and     r1, r1, #0x7
	ldr     r2, [r0, r1, lsl #0x2]
	add     r0, sp, #0x8
	mov     r1, r4
	blx     r2
	ldr     r3, [r4, #0x30]
	cmp     r3, #1, 20 @ #0x1000
	beq     branch_20b6764
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	smull   r2, r0, r3, r0
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
	str     r2, [sp, #0x8]
	ldr     r2, [r4, #0x30]
	ldr     r0, [sp, #0x38]
	smull   r3, r1, r2, r1
	mov     r2, r3, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [sp, #0xc]
	ldr     r1, [r4, #0x30]
	smull   r2, r0, r1, r0
	mov     r1, r2, lsr #12
	orr     r1, r1, r0, lsl #20
	str     r1, [sp, #0x38]
.arm
branch_20b6764: @ 20b6764 :arm
	ldr     r3, [r4, #0x34]
	cmp     r3, #1, 20 @ #0x1000
	beq     branch_20b67b4
	ldr     r0, [sp, #0x18]
	ldr     r1, [sp, #0x1c]
	smull   r2, r0, r3, r0
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
	str     r2, [sp, #0x18]
	ldr     r2, [r4, #0x34]
	ldr     r0, [sp, #0x3c]
	smull   r3, r1, r2, r1
	mov     r2, r3, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [sp, #0x1c]
	ldr     r1, [r4, #0x34]
	smull   r2, r0, r1, r0
	mov     r1, r2, lsr #12
	orr     r1, r1, r0, lsl #20
	str     r1, [sp, #0x3c]
.arm
branch_20b67b4: @ 20b67b4 :arm
	add     r1, sp, #0x0
	ldr     r0, [sp]
	add     r1, r1, #0x4
	mov     r2, #0x12
	bl      Function_20b275c
	add     sp, sp, #0x4c
	ldmfd   sp!, {r3,r4,pc}
@ 0x20b67d0

.word 0x101610 @ 0x20b67d0
.word 0x101810 @ 0x20b67d4
.word JumpTable_21010e4 @ 0x20b67d8



.arm
Function_20b67dc: @ 20b67dc :arm
	stmfd   sp!, {r3-r6,lr}
	sub     sp, sp, #0xc
	mov     r6, r0
	ldr     r0, [r6]
	mov     r4, #0x0
	ands    r5, r0, #0x18
	bne     branch_20b6808
	add     r1, r6, #0x1c
	mov     r0, #0x1b
	mov     r2, #0x3
	bl      Function_20b275c
.arm
branch_20b6808: @ 20b6808 :arm
	ldr     r0, [r6]
	tst     r0, #0x4
	bne     branch_20b6878
	cmp     r5, #0x0
	movne   r4, #0x1
	bne     branch_20b6878
	ldr     r2, [r6, #0x4c]
	ldr     r0, [r6, #0x10]
	add     r1, sp, #0x0
	smull   r3, r0, r2, r0
	mov     r2, r3, lsr #12
	orr     r2, r2, r0, lsl #20
	str     r2, [sp]
	ldr     r3, [r6, #0x50]
	ldr     r2, [r6, #0x14]
	mov     r0, #0x1c
	smull   r12, r2, r3, r2
	mov     r3, r12, lsr #12
	orr     r3, r3, r2, lsl #20
	str     r3, [sp, #0x4]
	ldr     r12, [r6, #0x54]
	ldr     r3, [r6, #0x18]
	mov     r2, #0x3
	smull   lr, r3, r12, r3
	mov     r12, lr, lsr #12
	orr     r12, r12, r3, lsl #20
	str     r12, [sp, #0x8]
	bl      Function_20b275c
.arm
branch_20b6878: @ 20b6878 :arm
	ldr     r0, [r6]
	tst     r0, #0x2
	bne     branch_20b68b0
	cmp     r4, #0x0
	add     r1, r6, #0x28
	beq     branch_20b68a0
	mov     r0, #0x19
	mov     r2, #0xc
	bl      Function_20b275c
	b       branch_20b68c8
@ 0x20b68a0

.arm
branch_20b68a0: @ 20b68a0 :arm
	mov     r0, #0x1a
	mov     r2, #0x9
	bl      Function_20b275c
	b       branch_20b68c8
@ 0x20b68b0

.arm
branch_20b68b0: @ 20b68b0 :arm
	cmp     r4, #0x0
	beq     branch_20b68c8
	add     r1, r6, #0x4c
	mov     r0, #0x1c
	mov     r2, #0x3
	bl      Function_20b275c
.arm
branch_20b68c8: @ 20b68c8 :arm
	cmp     r5, #0x0
	bne     branch_20b68e0
	add     r1, r6, #0x10
	mov     r0, #0x1b
	mov     r2, #0x3
	bl      Function_20b275c
.arm
branch_20b68e0: @ 20b68e0 :arm
	ldr     r0, [r6]
	tst     r0, #0x1
	addne   sp, sp, #0xc
	ldmnefd sp!, {r3-r6,pc}
	add     r1, r6, #0x4
	mov     r0, #0x1b
	mov     r2, #0x3
	bl      Function_20b275c
	add     sp, sp, #0xc
	ldmfd   sp!, {r3-r6,pc}
@ 0x20b6908

.arm
Function_20b6908: @ 20b6908 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r5, r0
	tst     r3, #0x4
	ldrb    r4, [r2, #0x1]
	ldrb    r0, [r2, #0x2]
	beq     branch_20b69a4
	ldr     r2, [r5]
	ldr     r1, [pc, #0x1dc] @ [0x20b6b08] (=RAM_21c5cf0)
	orr     r2, r2, #0x1
	str     r2, [r5]
	ldr     r3, [r1]
	mov     r1, r0, lsr #5
	add     r1, r3, r1, lsl #2
	ldr     r1, [r1, #0xc4]
	and     r2, r0, #0x1f
	mov     r6, #0x1
	tst     r1, r6, lsl r2
	beq     branch_20b6978
	add     r3, r3, #0xc4
	mov     r2, r4, lsr #5
	ldr     r1, [r3, r2, lsl #0x2]
	and     r0, r4, #0x1f
	orr     r0, r1, r6, lsl r0
	str     r0, [r3, r2, lsl #0x2]
	ldr     r0, [r5]
	orr     r0, r0, #0x18
	str     r0, [r5]
	ldmfd   sp!, {r4-r8,pc}
@ 0x20b6978

.arm
branch_20b6978: @ 20b6978 :arm
	mov     r2, #0x18
	ldr     r7, [pc, #0x188] @ [0x20b6b0c] (=RAM_21c6af4)
	mul     r6, r0, r2
	mla     r1, r4, r2, r7
	add     r0, r7, r6
	bl      MI_CpuCopy32
	add     r0, r7, r6
	add     r1, r5, #0x10
	mov     r2, #0x18
	bl      MI_CpuCopy32
	ldmfd   sp!, {r4-r8,pc}
@ 0x20b69a4

.arm
branch_20b69a4: @ 20b69a4 :arm
	ldr     r3, [r1]
	ldr     r2, [pc, #0x158] @ [0x20b6b08] (=RAM_21c5cf0)
	str     r3, [r5, #0x4]
	ldr     r3, [r1, #0x4]
	mov     r7, r0, lsr #5
	str     r3, [r5, #0x8]
	ldr     r3, [r1, #0x8]
	and     r8, r0, #0x1f
	str     r3, [r5, #0xc]
	ldr     r6, [r2]
	mov     r3, #0x1
	add     r2, r6, r7, lsl #2
	ldr     r2, [r2, #0xc4]
	tst     r2, r3, lsl r8
	mov     r2, #0x18
	beq     branch_20b6a2c
	ldr     r3, [pc, #0x120] @ [0x20b6b0c] (=RAM_21c6af4)
	mov     r0, r1
	mla     r1, r4, r2, r3
	bl      MI_CpuCopy32
	ldr     r0, [pc, #0x10c] @ [0x20b6b08] (=RAM_21c5cf0)
	mov     r2, r4, lsr #5
	ldr     r1, [r0]
	and     r0, r4, #0x1f
	add     r3, r1, #0xc4
	mov     r1, #0x1
	mvn     r0, r1, lsl r0
	ldr     r1, [r3, r2, lsl #0x2]
	and     r0, r1, r0
	str     r0, [r3, r2, lsl #0x2]
	ldr     r0, [r5]
	orr     r0, r0, #0x18
	str     r0, [r5]
	ldmfd   sp!, {r4-r8,pc}

branch_20b6a2c: @ 20b6a2c :arm
	mul     r12, r0, r2
	and     r7, r4, #0x1f
	mvn     r7, r3, lsl r7
	add     r6, r6, #0xc4
	mov     lr, r4, lsr #5
	ldr     r8, [r6, lr, lsl #0x2]
	mul     r3, r4, r2
	and     r4, r8, r7
	str     r4, [r6, lr, lsl #0x2]
	ldr     r0, [pc, #0xb4] @ [0x20b6b0c] (=RAM_21c6af4)
	ldr     r7, [r1]
	ldr     r4, [r0, r12]
	ldr     r6, [pc, #0xac] @ [0x20b6b10] (=RAM_21c6af8)
	smull   r8, r4, r7, r4
	mov     r7, r8, lsr #12
	orr     r7, r7, r4, lsl #20
	str     r7, [r0, r3]
	ldr     r8, [r1, #0x4]
	ldr     r4, [r6, r12]
	ldr     r7, [pc, #0x94] @ [0x20b6b14] (=RAM_21c6afc)
	smull   lr, r4, r8, r4
	mov     r8, lr, lsr #12
	orr     r8, r8, r4, lsl #20
	str     r8, [r6, r3]
	ldr     r8, [r1, #0x8]
	ldr     r4, [r7, r12]
	ldr     r6, [pc, #0x7c] @ [0x20b6b18] (=RAM_21c6b00)
	smull   lr, r4, r8, r4
	mov     r8, lr, lsr #12
	orr     r8, r8, r4, lsl #20
	str     r8, [r7, r3]
	ldr     r7, [r1, #0xc]
	ldr     r4, [r6, r12]
	ldr     lr, [pc, #0x64] @ [0x20b6b1c] (=RAM_21c6b04)
	smull   r8, r4, r7, r4
	mov     r7, r8, lsr #12
	orr     r7, r7, r4, lsl #20
	str     r7, [r6, r3]
	ldr     r7, [r1, #0x10]
	ldr     r6, [lr, r12]
	ldr     r4, [pc, #0x4c] @ [0x20b6b20] (=RAM_21c6b08)
	smull   r8, r6, r7, r6
	mov     r7, r8, lsr #12
	orr     r7, r7, r6, lsl #20
	str     r7, [lr, r3]
	ldr     r6, [r1, #0x14]
	ldr     r1, [r4, r12]
	add     r0, r0, r12
	smull   r12, r1, r6, r1
	mov     r6, r12, lsr #12
	orr     r6, r6, r1, lsl #20
	add     r1, r5, #0x10
	str     r6, [r4, r3]
	bl      MI_CpuCopy32

	ldmfd   sp!, {r4-r8,pc}
@ 0x20b6b08

.word RAM_21c5cf0 @ 0x20b6b08
.word RAM_21c6af4 @ 0x20b6b0c
.word RAM_21c6af8 @ 0x20b6b10
.word RAM_21c6afc @ 0x20b6b14
.word RAM_21c6b00 @ 0x20b6b18
.word RAM_21c6b04 @ 0x20b6b1c
.word RAM_21c6b08 @ 0x20b6b20



.arm
Function_20b6b24: @ 20b6b24 :arm
	stmfd   sp!, {lr}
	sub     sp, sp, #0x3c
	ldr     r1, [r0]
	mov     r2, #0x0
	tst     r1, #0x8
	ldrne   r1, [pc, #0x1a8] @ [0x20b6ce8] (=0x101710)
	mov     r3, #0x3
	strne   r1, [sp]
	ldreq   r1, [pc, #0x1a0] @ [0x20b6cec] (=0x101910)
	str     r3, [sp, #0x4]
	streq   r1, [sp]
	mov     r1, #0x2
	str     r2, [sp, #0x34]
	str     r2, [sp, #0x28]
	str     r2, [sp, #0x24]
	str     r2, [sp, #0x20]
	str     r2, [sp, #0x1c]
	str     r2, [sp, #0x14]
	str     r2, [sp, #0x10]
	str     r2, [sp, #0xc]
	str     r1, [sp, #0x38]
	ldr     r1, [r0]
	tst     r1, #0x4
	beq     branch_20b6bbc
	str     r2, [sp, #0x2c]
	str     r2, [sp, #0x30]
	ldr     r1, [r0]
	tst     r1, #0x1
	beq     branch_20b6ba8
	mov     r1, #1, 20 @ #0x1000
	str     r1, [sp, #0x8]
	str     r1, [sp, #0x18]
	b       branch_20b6c5c
@ 0x20b6ba8

.arm
branch_20b6ba8: @ 20b6ba8 :arm
	ldr     r1, [r0, #0x18]
	str     r1, [sp, #0x8]
	ldr     r1, [r0, #0x1c]
	str     r1, [sp, #0x18]
	b       branch_20b6c5c
@ 0x20b6bbc

.arm
branch_20b6bbc: @ 20b6bbc :arm
	tst     r1, #0x1
	beq     branch_20b6c04
	ldr     r2, [r0, #0x24]
	ldrh    r1, [r0, #0x2c]
	mov     r2, r2, lsl #4
	rsb     r2, r2, #0x0
	mul     r1, r2, r1
	str     r1, [sp, #0x2c]
	ldr     r2, [r0, #0x28]
	ldrh    r1, [r0, #0x2e]
	mov     r2, r2, lsl #4
	rsb     r2, r2, #0x0
	mul     r3, r2, r1
	mov     r1, #1, 20 @ #0x1000
	str     r3, [sp, #0x30]
	str     r1, [sp, #0x8]
	str     r1, [sp, #0x18]
	b       branch_20b6c5c
@ 0x20b6c04

.arm
branch_20b6c04: @ 20b6c04 :arm
	ldr     r2, [r0, #0x18]
	ldr     r1, [r0, #0x24]
	ldrh    r12, [r0, #0x2c]
	smull   r3, r1, r2, r1
	mov     r2, r3, lsr #8
	orr     r2, r2, r1, lsl #24
	rsb     r1, r2, #0x0
	mul     r1, r12, r1
	str     r1, [sp, #0x2c]
	ldr     r2, [r0, #0x1c]
	ldr     r1, [r0, #0x28]
	ldrh    r12, [r0, #0x2e]
	smull   r3, r1, r2, r1
	mov     r2, r3, lsr #8
	orr     r2, r2, r1, lsl #24
	rsb     r1, r2, #0x0
	mul     r1, r12, r1
	str     r1, [sp, #0x30]
	ldr     r1, [r0, #0x18]
	str     r1, [sp, #0x8]
	ldr     r1, [r0, #0x1c]
	str     r1, [sp, #0x18]
.arm
branch_20b6c5c: @ 20b6c5c :arm
	ldr     r12, [r0, #0x30]
	cmp     r12, #1, 20 @ #0x1000
	beq     branch_20b6c94
	ldr     r2, [sp, #0x8]
	ldr     r1, [sp, #0x2c]
	smull   r3, r2, r12, r2
	mov     r3, r3, lsr #12
	orr     r3, r3, r2, lsl #20
	str     r3, [sp, #0x8]
	ldr     r2, [r0, #0x30]
	smull   r3, r1, r2, r1
	mov     r2, r3, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [sp, #0x2c]
.arm
branch_20b6c94: @ 20b6c94 :arm
	ldr     r12, [r0, #0x34]
	cmp     r12, #1, 20 @ #0x1000
	beq     branch_20b6ccc
	ldr     r2, [sp, #0x18]
	ldr     r1, [sp, #0x30]
	smull   r3, r2, r12, r2
	mov     r3, r3, lsr #12
	orr     r3, r3, r2, lsl #20
	str     r3, [sp, #0x18]
	ldr     r0, [r0, #0x34]
	smull   r2, r1, r0, r1
	mov     r0, r2, lsr #12
	orr     r0, r0, r1, lsl #20
	str     r0, [sp, #0x30]
.arm
branch_20b6ccc: @ 20b6ccc :arm
	add     r1, sp, #0x0
	ldr     r0, [sp]
	add     r1, r1, #0x4
	mov     r2, #0xe
	bl      Function_20b275c
	add     sp, sp, #0x3c
	ldmfd   sp!, {pc}
@ 0x20b6ce8

.word 0x101710 @ 0x20b6ce8
.word 0x101910 @ 0x20b6cec
.arm
Function_20b6cf0: @ 20b6cf0 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r9, r1
	ldrh    r2, [r9, #0x2c]
	ldrh    r1, [r9, #0x2e]
	mov     r10, r0
	mov     r8, r2, lsl #12
	mov     r11, r1, lsl #12
	mov     r0, r11
	mov     r1, r8
	bl      FX_DivAsync
	ldrsh   r0, [r9, #0x22]
	ldr     r3, [r9, #0x18]
	ldrsh   r5, [r9, #0x20]
	ldr     r4, [r9, #0x1c]
	smull   r2, r1, r3, r0
	mov     r7, r2, lsr #12
	orr     r7, r7, r1, lsl #20
	smull   r2, r1, r3, r5
	mov     r6, r2, lsr #12
	orr     r6, r6, r1, lsl #20
	smull   r3, r2, r4, r0
	smull   r1, r0, r4, r5
	mov     r5, r3, lsr #12
	orr     r5, r5, r2, lsl #20
	mov     r4, r1, lsr #12
	orr     r4, r4, r0, lsl #20
	str     r7, [r10]
	str     r5, [r10, #0x14]
	bl      FX_GetDivResult
	mov     r1, r11
	mul     r0, r4, r0
	mov     r0, r0, asr #12
	str     r0, [r10, #0x4]
	mov     r0, r8
	bl      FX_DivAsync
	ldrh    r1, [r9, #0x2c]
	ldrh    r8, [r9, #0x2e]
	ldr     r2, [r9, #0x28]
	rsb     r0, r1, #0x0
	mul     r3, r2, r8
	rsb     r2, r8, #0x0
	add     r8, r3, r2, lsl #11
	smull   r3, r2, r5, r8
	smull   r8, r5, r6, r8
	ldr     r11, [r9, #0x24]
	mul     r12, r11, r1
	rsb     r0, r12, r0, lsl #11
	smlal   r3, r2, r4, r0
	smull   r4, r0, r7, r0
	subs    r4, r4, r8
	sbc     r0, r0, r5
	mov     r4, r4, lsr #8
	orr     r4, r4, r0, lsl #24
	add     r0, r4, r1, lsl #15
	str     r0, [r10, #0x30]
	ldrh    r1, [r9, #0x2e]
	mov     r0, r3, lsr #8
	orr     r0, r0, r2, lsl #24
	add     r0, r0, r1, lsl #15
	str     r0, [r10, #0x34]
	bl      FX_GetDivResult
	rsb     r1, r6, #0x0
	mul     r0, r1, r0
	mov     r0, r0, asr #12
	str     r0, [r10, #0x10]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b6df8

.arm
Function_20b6df8: @ 20b6df8 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r5, r1
	ldrh    r2, [r5, #0x2c]
	ldrh    r1, [r5, #0x2e]
	mov     r6, r0
	mov     r4, r2, lsl #12
	mov     r7, r1, lsl #12
	mov     r0, r7
	mov     r1, r4
	bl      FX_DivAsync
	ldrsh   r0, [r5, #0x22]
	str     r0, [r6]
	ldrsh   r0, [r5, #0x22]
	str     r0, [r6, #0x14]
	bl      FX_GetDivResult
	ldrsh   r2, [r5, #0x20]
	mov     r1, r7
	mul     r0, r2, r0
	mov     r2, r0, asr #12
	mov     r0, r4
	str     r2, [r6, #0x4]
	bl      FX_DivAsync
	ldrh    r2, [r5, #0x2c]
	ldrh    r4, [r5, #0x2e]
	ldr     r1, [r5, #0x28]
	ldr     r0, [r5, #0x24]
	mul     r3, r1, r4
	rsb     r1, r4, #0x0
	mul     r4, r0, r2
	rsb     r0, r2, #0x0
	add     r1, r3, r1, lsl #11
	ldrsh   r3, [r5, #0x20]
	rsb     r0, r4, r0, lsl #11
	ldrsh   lr, [r5, #0x22]
	smull   r12, r4, r3, r1
	smull   r7, r3, lr, r0
	subs    r7, r7, r12
	sbc     r3, r3, r4
	mov     r4, r7, lsr #8
	orr     r4, r4, r3, lsl #24
	add     r2, r4, r2, lsl #15
	str     r2, [r6, #0x30]
	ldrsh   r2, [r5, #0x22]
	ldrsh   r3, [r5, #0x20]
	ldrh    r12, [r5, #0x2e]
	smull   r4, r1, r2, r1
	smlal   r4, r1, r3, r0
	mov     r0, r4, lsr #8
	orr     r0, r0, r1, lsl #24
	add     r0, r0, r12, lsl #15
	str     r0, [r6, #0x34]
	bl      FX_GetDivResult
	ldrsh   r1, [r5, #0x20]
	rsb     r1, r1, #0x0
	mul     r0, r1, r0
	mov     r0, r0, asr #12
	str     r0, [r6, #0x10]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b6ee0

.arm
Function_20b6ee0: @ 20b6ee0 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r2, [r1, #0x18]
	mov     r3, #0x0
	str     r2, [r0]
	ldr     r2, [r1, #0x1c]
	str     r2, [r0, #0x14]
	str     r3, [r0, #0x4]
	ldrh    r5, [r1, #0x2c]
	ldr     r12, [r1, #0x24]
	ldrh    r2, [r1, #0x2e]
	mul     lr, r12, r5
	rsb     r12, r5, #0x0
	ldr     r4, [r1, #0x18]
	rsb     r12, lr, r12, lsl #11
	smull   lr, r12, r4, r12
	ldr     r6, [r1, #0x28]
	mov     r4, lr, lsr #8
	orr     r4, r4, r12, lsl #24
	add     r4, r4, r5, lsl #15
	str     r4, [r0, #0x30]
	mul     r4, r6, r2
	rsb     r5, r2, #0x0
	ldr     r2, [r1, #0x1c]
	add     r4, r4, r5, lsl #11
	smull   lr, r12, r2, r4
	mov     r2, lr, lsr #8
	ldrh    r1, [r1, #0x2e]
	orr     r2, r2, r12, lsl #24
	add     r1, r2, r1, lsl #15
	str     r1, [r0, #0x34]
	str     r3, [r0, #0x10]
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b6f60

.arm
Function_20b6f60: @ 20b6f60 :arm
	mov     r2, #1, 20 @ #0x1000
	str     r2, [r0]
	str     r2, [r0, #0x14]
	mov     r12, #0x0
	str     r12, [r0, #0x4]
	ldr     r3, [r1, #0x24]
	ldrh    r2, [r1, #0x2c]
	rsb     r3, r3, #0x0
	mul     r2, r3, r2
	mov     r2, r2, lsl #4
	str     r2, [r0, #0x30]
	ldrh    r2, [r1, #0x2e]
	ldr     r1, [r1, #0x28]
	mul     r2, r1, r2
	mov     r1, r2, lsl #4
	str     r1, [r0, #0x34]
	str     r12, [r0, #0x10]
	bx      lr
@ 0x20b6fa8

.arm
Function_20b6fa8: @ 20b6fa8 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r9, r1
	ldrh    r2, [r9, #0x2c]
	ldrh    r1, [r9, #0x2e]
	mov     r10, r0
	mov     r8, r2, lsl #12
	mov     r11, r1, lsl #12
	mov     r0, r11
	mov     r1, r8
	bl      FX_DivAsync
	ldrsh   r0, [r9, #0x22]
	ldr     r3, [r9, #0x18]
	ldrsh   r5, [r9, #0x20]
	ldr     r4, [r9, #0x1c]
	smull   r2, r1, r3, r0
	mov     r7, r2, lsr #12
	orr     r7, r7, r1, lsl #20
	smull   r2, r1, r3, r5
	mov     r6, r2, lsr #12
	orr     r6, r6, r1, lsl #20
	smull   r3, r2, r4, r0
	smull   r1, r0, r4, r5
	mov     r5, r3, lsr #12
	orr     r5, r5, r2, lsl #20
	mov     r4, r1, lsr #12
	orr     r4, r4, r0, lsl #20
	str     r7, [r10]
	str     r5, [r10, #0x14]
	bl      FX_GetDivResult
	mov     r1, r11
	mul     r0, r4, r0
	mov     r0, r0, asr #12
	str     r0, [r10, #0x4]
	mov     r0, r8
	bl      FX_DivAsync
	ldrh    r3, [r9, #0x2c]
	ldrh    r1, [r9, #0x2e]
	rsb     r0, r3, #0x0
	rsb     r1, r1, #0x0
	mov     r2, r1, lsl #11
	mov     r11, r0, lsl #11
	smull   r1, r0, r7, r11
	smull   r8, r7, r5, r2
	smlal   r8, r7, r4, r11
	mov     r4, r8, lsr #8
	orr     r4, r4, r7, lsl #24
	smull   r5, r2, r6, r2
	subs    r1, r1, r5
	sbc     r0, r0, r2
	mov     r1, r1, lsr #8
	orr     r1, r1, r0, lsl #24
	add     r0, r1, r3, lsl #15
	str     r0, [r10, #0x30]
	ldrh    r0, [r9, #0x2e]
	add     r0, r4, r0, lsl #15
	str     r0, [r10, #0x34]
	bl      FX_GetDivResult
	rsb     r1, r6, #0x0
	mul     r0, r1, r0
	mov     r0, r0, asr #12
	str     r0, [r10, #0x10]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b70a0

.arm
Function_20b70a0: @ 20b70a0 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r5, r1
	ldrh    r2, [r5, #0x2c]
	ldrh    r1, [r5, #0x2e]
	mov     r6, r0
	mov     r4, r2, lsl #12
	mov     r7, r1, lsl #12
	mov     r0, r7
	mov     r1, r4
	bl      FX_DivAsync
	ldrsh   r0, [r5, #0x22]
	str     r0, [r6]
	ldrsh   r0, [r5, #0x22]
	str     r0, [r6, #0x14]
	bl      FX_GetDivResult
	ldrsh   r2, [r5, #0x20]
	mov     r1, r7
	mul     r0, r2, r0
	mov     r2, r0, asr #12
	mov     r0, r4
	str     r2, [r6, #0x4]
	bl      FX_DivAsync
	ldrh    r2, [r5, #0x2c]
	ldrh    r1, [r5, #0x2e]
	ldrsh   r4, [r5, #0x22]
	rsb     r0, r2, #0x0
	rsb     r1, r1, #0x0
	mov     r0, r0, lsl #11
	ldrsh   r3, [r5, #0x20]
	mov     r1, r1, lsl #11
	smull   r7, lr, r4, r0
	smull   r12, r4, r3, r1
	subs    r7, r7, r12
	sbc     r3, lr, r4
	mov     r4, r7, lsr #8
	orr     r4, r4, r3, lsl #24
	add     r2, r4, r2, lsl #15
	str     r2, [r6, #0x30]
	ldrsh   r2, [r5, #0x22]
	ldrsh   r3, [r5, #0x20]
	ldrh    r12, [r5, #0x2e]
	smull   r4, r1, r2, r1
	smlal   r4, r1, r3, r0
	mov     r0, r4, lsr #8
	orr     r0, r0, r1, lsl #24
	add     r0, r0, r12, lsl #15
	str     r0, [r6, #0x34]
	bl      FX_GetDivResult
	ldrsh   r1, [r5, #0x20]
	rsb     r1, r1, #0x0
	mul     r0, r1, r0
	mov     r0, r0, asr #12
	str     r0, [r6, #0x10]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b7178

.arm
Function_20b7178: @ 20b7178 :arm
	ldr     r2, [r1, #0x18]
	mov     r12, #0x0
	str     r2, [r0]
	ldr     r2, [r1, #0x1c]
	str     r2, [r0, #0x14]
	str     r12, [r0, #0x4]
	ldr     r3, [r1, #0x18]
	ldrh    r2, [r1, #0x2c]
	rsb     r3, r3, #1, 20 @ #0x1000
	mul     r2, r3, r2
	mov     r2, r2, lsl #3
	str     r2, [r0, #0x30]
	ldr     r2, [r1, #0x1c]
	ldrh    r1, [r1, #0x2e]
	rsb     r2, r2, #1, 20 @ #0x1000
	mul     r1, r2, r1
	mov     r1, r1, lsl #3
	str     r1, [r0, #0x34]
	str     r12, [r0, #0x10]
	bx      lr
@ 0x20b71c8

.arm
Function_20b71c8: @ 20b71c8 :arm
	mov     r2, #1, 20 @ #0x1000
	str     r2, [r0]
	mov     r1, #0x0
	str     r1, [r0, #0x4]
	str     r1, [r0, #0x10]
	str     r2, [r0, #0x14]
	str     r1, [r0, #0x30]
	str     r1, [r0, #0x34]
	bx      lr
@ 0x20b71ec

.arm
Function_20b71ec: @ 20b71ec :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4c
	mov     r4, r0
	ldr     r0, [r4]
	mov     r1, #0x0
	tst     r0, #0x8
	ldrne   r0, [pc, #0x11c] @ [0x20b7328] (=0x101610)
	mov     r3, #0x3
	strne   r0, [sp]
	ldreq   r0, [pc, #0x114] @ [0x20b732c] (=0x101810)
	mov     r2, #0x2
	streq   r0, [sp]
	mov     r0, #1, 20 @ #0x1000
	str     r0, [sp, #0x44]
	str     r3, [sp, #0x4]
	str     r2, [sp, #0x48]
	str     r1, [sp, #0x40]
	str     r1, [sp, #0x34]
	str     r1, [sp, #0x30]
	str     r1, [sp, #0x2c]
	str     r1, [sp, #0x28]
	str     r1, [sp, #0x24]
	str     r1, [sp, #0x20]
	str     r1, [sp, #0x14]
	str     r1, [sp, #0x10]
	ldr     r1, [r4]
	ldr     r0, [pc, #0xd4] @ [0x20b7330] (=JumpTable_2101104)
	and     r1, r1, #0x7
	ldr     r2, [r0, r1, lsl #0x2]
	add     r0, sp, #0x8
	mov     r1, r4
	blx     r2
	ldr     r3, [r4, #0x30]
	cmp     r3, #1, 20 @ #0x1000
	beq     branch_20b72bc
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	smull   r2, r0, r3, r0
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
	str     r2, [sp, #0x8]
	ldr     r2, [r4, #0x30]
	ldr     r0, [sp, #0x38]
	smull   r3, r1, r2, r1
	mov     r2, r3, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [sp, #0xc]
	ldr     r1, [r4, #0x30]
	smull   r2, r0, r1, r0
	mov     r1, r2, lsr #12
	orr     r1, r1, r0, lsl #20
	str     r1, [sp, #0x38]
.arm
branch_20b72bc: @ 20b72bc :arm
	ldr     r3, [r4, #0x34]
	cmp     r3, #1, 20 @ #0x1000
	beq     branch_20b730c
	ldr     r0, [sp, #0x18]
	ldr     r1, [sp, #0x1c]
	smull   r2, r0, r3, r0
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
	str     r2, [sp, #0x18]
	ldr     r2, [r4, #0x34]
	ldr     r0, [sp, #0x3c]
	smull   r3, r1, r2, r1
	mov     r2, r3, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [sp, #0x1c]
	ldr     r1, [r4, #0x34]
	smull   r2, r0, r1, r0
	mov     r1, r2, lsr #12
	orr     r1, r1, r0, lsl #20
	str     r1, [sp, #0x3c]
.arm
branch_20b730c: @ 20b730c :arm
	add     r1, sp, #0x0
	ldr     r0, [sp]
	add     r1, r1, #0x4
	mov     r2, #0x12
	bl      Function_20b275c
	add     sp, sp, #0x4c
	ldmfd   sp!, {r3,r4,pc}
@ 0x20b7328

.word 0x101610 @ 0x20b7328
.word 0x101810 @ 0x20b732c
.word JumpTable_2101104 @ 0x20b7330
.arm
Function_20b7334: @ 20b7334 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r6, r1
	ldrh    r2, [r6, #0x2c]
	ldrh    r1, [r6, #0x2e]
	mov     r7, r0
	mov     r10, r2, lsl #12
	mov     r11, r1, lsl #12
	mov     r0, r11
	mov     r1, r10
	bl      FX_DivAsync
	ldrsh   r3, [r6, #0x22]
	ldr     r0, [r6, #0x18]
	ldrsh   r9, [r6, #0x20]
	smull   r2, r1, r0, r3
	mov     r2, r2, lsr #12
	ldr     r8, [r6, #0x1c]
	orr     r2, r2, r1, lsl #20
	str     r2, [r7]
	smull   r2, r1, r8, r3
	mov     r4, r2, lsr #12
	orr     r4, r4, r1, lsl #20
	smull   r2, r1, r0, r9
	mov     r5, r2, lsr #12
	orr     r5, r5, r1, lsl #20
	str     r4, [r7, #0x14]
	bl      FX_GetDivResult
	smull   r2, r1, r8, r9
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	mul     r0, r2, r0
	mov     r0, r0, asr #12
	str     r0, [r7, #0x4]
	mov     r0, r10
	mov     r1, r11
	bl      FX_DivAsync
	ldr     lr, [r6, #0x1c]
	ldrsh   r2, [r6, #0x20]
	ldr     r8, [r6, #0x24]
	ldr     r0, [r6, #0x28]
	smull   r10, r9, r8, r2
	ldrh    r1, [r6, #0x2c]
	smull   r3, r2, r0, r2
	ldrsh   r12, [r6, #0x22]
	str     r1, [sp]
	mov     r11, lr, asr #31
	smlal   r3, r2, r8, r12
	smull   r8, r12, r0, r12
	subs    r8, r10, r8
	sbc     r0, r9, r12
	mov     r9, r8, lsr #12
	mov     r12, r3, lsr #12
	orr     r9, r9, r0, lsl #20
	mov     r3, r2, asr #12
	orr     r12, r12, r2, lsl #20
	umull   r10, r2, r9, lr
	mla     r2, r9, r11, r2
	mov     r8, r0, asr #12
	mla     r2, r8, lr, r2
	ldr     r1, [r6, #0x18]
	mov     r8, r10, lsr #12
	orr     r8, r8, r2, lsl #20
	add     r2, r4, r8
	mov     r0, r1, asr #31
	umull   r8, r4, r12, r1
	mla     r4, r12, r0, r4
	mla     r4, r3, r1, r4
	mov     r0, r8, lsr #12
	orr     r0, r0, r4, lsl #20
	sub     r1, r5, r0
	ldr     r0, [sp]
	sub     r2, r2, #1, 20 @ #0x1000
	mul     r1, r0, r1
	mov     r0, r1, lsl #4
	str     r0, [r7, #0x30]
	ldrh    r0, [r6, #0x2e]
	rsb     r0, r0, #0x0
	mul     r1, r0, r2
	mov     r0, r1, lsl #4
	str     r0, [r7, #0x34]
	bl      FX_GetDivResult
	rsb     r1, r5, #0x0
	mul     r0, r1, r0
	mov     r0, r0, asr #12
	str     r0, [r7, #0x10]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b7488

.arm
Function_20b7488: @ 20b7488 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r5, r1
	ldrh    r2, [r5, #0x2c]
	ldrh    r1, [r5, #0x2e]
	mov     r6, r0
	mov     r4, r2, lsl #12
	mov     r7, r1, lsl #12
	mov     r0, r7
	mov     r1, r4
	bl      FX_DivAsync
	ldrsh   r0, [r5, #0x22]
	str     r0, [r6]
	ldrsh   r0, [r5, #0x22]
	str     r0, [r6, #0x14]
	bl      FX_GetDivResult
	ldrsh   r2, [r5, #0x20]
	mov     r1, r7
	mul     r0, r2, r0
	mov     r2, r0, asr #12
	mov     r0, r4
	str     r2, [r6, #0x4]
	bl      FX_DivAsync
	ldrsh   lr, [r5, #0x20]
	ldr     r4, [r5, #0x28]
	ldrsh   r0, [r5, #0x22]
	ldr     r12, [r5, #0x24]
	smull   r3, r2, r4, lr
	smlal   r3, r2, r12, r0
	smull   r1, r0, r4, r0
	mov     r3, r3, lsr #12
	orr     r3, r3, r2, lsl #20
	sub     r4, lr, r3
	smull   r3, r2, r12, lr
	subs    r1, r3, r1
	sbc     r0, r2, r0
	ldrh    r2, [r5, #0x2c]
	mov     r1, r1, lsr #12
	orr     r1, r1, r0, lsl #20
	mul     r0, r2, r4
	mov     r0, r0, lsl #4
	str     r0, [r6, #0x30]
	ldrsh   r0, [r5, #0x22]
	ldrh    r2, [r5, #0x2e]
	add     r0, r0, r1
	rsb     r1, r2, #0x0
	sub     r0, r0, #1, 20 @ #0x1000
	mul     r0, r1, r0
	mov     r0, r0, lsl #4
	str     r0, [r6, #0x34]
	bl      FX_GetDivResult
	ldrsh   r1, [r5, #0x20]
	rsb     r1, r1, #0x0
	mul     r0, r1, r0
	mov     r0, r0, asr #12
	str     r0, [r6, #0x10]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b7568

.arm
Function_20b7568: @ 20b7568 :arm
	stmfd   sp!, {r4,lr}
	ldr     r3, [r1, #0x18]
	mov     r2, #0x0
	str     r3, [r0]
	ldr     r3, [r1, #0x1c]
	str     r3, [r0, #0x14]
	str     r2, [r0, #0x4]
	ldr     r12, [r1, #0x24]
	ldr     r3, [r1, #0x18]
	ldr     r4, [r1, #0x28]
	smull   lr, r3, r12, r3
	mov     r12, lr, lsr #12
	orr     r12, r12, r3, lsl #20
	ldrh    lr, [r1, #0x2c]
	rsb     r3, r12, #0x0
	ldr     r12, [r1, #0x1c]
	rsb     r4, r4, #0x0
	mul     r3, lr, r3
	smull   lr, r12, r4, r12
	mov     r3, r3, lsl #4
	str     r3, [r0, #0x30]
	mov     r4, lr, lsr #12
	ldrh    r3, [r1, #0x2e]
	ldr     r1, [r1, #0x1c]
	orr     r4, r4, r12, lsl #20
	add     r1, r1, r4
	rsb     r3, r3, #0x0
	sub     r1, r1, #1, 20 @ #0x1000
	mul     r1, r3, r1
	mov     r1, r1, lsl #4
	str     r1, [r0, #0x34]
	str     r2, [r0, #0x10]
	ldmfd   sp!, {r4,pc}
@ 0x20b75ec

.arm
Function_20b75ec: @ 20b75ec :arm
	stmfd   sp!, {r3,lr}
	mov     r2, #1, 20 @ #0x1000
	str     r2, [r0]
	str     r2, [r0, #0x14]
	mov     lr, #0x0
	str     lr, [r0, #0x4]
	ldr     r2, [r1, #0x24]
	ldrh    r3, [r1, #0x2c]
	rsb     r2, r2, #0x0
	ldr     r12, [r1, #0x28]
	mul     r2, r3, r2
	mov     r2, r2, lsl #4
	str     r2, [r0, #0x30]
	ldrh    r1, [r1, #0x2e]
	rsb     r2, r12, #0x0
	rsb     r1, r1, #0x0
	mul     r2, r1, r2
	mov     r1, r2, lsl #4
	str     r1, [r0, #0x34]
	str     lr, [r0, #0x10]
	ldmfd   sp!, {r3,pc}
@ 0x20b7640

.arm
Function_20b7640: @ 20b7640 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r9, r1
	ldrh    r2, [r9, #0x2c]
	ldrh    r1, [r9, #0x2e]
	mov     r10, r0
	mov     r8, r2, lsl #12
	mov     r11, r1, lsl #12
	mov     r0, r11
	mov     r1, r8
	bl      FX_DivAsync
	ldrsh   r3, [r9, #0x22]
	ldr     r0, [r9, #0x18]
	ldrsh   r7, [r9, #0x20]
	ldr     r5, [r9, #0x1c]
	smull   r2, r1, r0, r3
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [r10]
	smull   r2, r1, r5, r3
	mov     r4, r2, lsr #12
	orr     r4, r4, r1, lsl #20
	smull   r2, r1, r0, r7
	mov     r6, r2, lsr #12
	orr     r6, r6, r1, lsl #20
	str     r4, [r10, #0x14]
	bl      FX_GetDivResult
	smull   r2, r1, r5, r7
	mov     r2, r2, lsr #12
	orr     r2, r2, r1, lsl #20
	mul     r0, r2, r0
	mov     r0, r0, asr #12
	str     r0, [r10, #0x4]
	mov     r0, r8
	mov     r1, r11
	bl      FX_DivAsync
	sub     r0, r4, #1, 20 @ #0x1000
	ldrh    r1, [r9, #0x2c]
	mul     r2, r1, r6
	mov     r1, r2, lsl #4
	str     r1, [r10, #0x30]
	ldrh    r1, [r9, #0x2e]
	rsb     r1, r1, #0x0
	mul     r0, r1, r0
	mov     r0, r0, lsl #4
	str     r0, [r10, #0x34]
	bl      FX_GetDivResult
	rsb     r1, r6, #0x0
	mul     r0, r1, r0
	mov     r0, r0, asr #12
	str     r0, [r10, #0x10]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b770c

.arm
Function_20b770c: @ 20b770c :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r5, r1
	ldrh    r2, [r5, #0x2c]
	ldrh    r1, [r5, #0x2e]
	mov     r6, r0
	mov     r4, r2, lsl #12
	mov     r7, r1, lsl #12
	mov     r0, r7
	mov     r1, r4
	bl      FX_DivAsync
	ldrsh   r0, [r5, #0x22]
	str     r0, [r6]
	ldrsh   r0, [r5, #0x22]
	str     r0, [r6, #0x14]
	bl      FX_GetDivResult
	ldrsh   r2, [r5, #0x20]
	mov     r1, r7
	mul     r0, r2, r0
	mov     r2, r0, asr #12
	mov     r0, r4
	str     r2, [r6, #0x4]
	bl      FX_DivAsync
	ldrh    r1, [r5, #0x2c]
	ldrsh   r0, [r5, #0x20]
	mul     r0, r1, r0
	mov     r0, r0, lsl #4
	str     r0, [r6, #0x30]
	ldrh    r1, [r5, #0x2e]
	ldrsh   r0, [r5, #0x22]
	rsb     r1, r1, #0x0
	sub     r0, r0, #1, 20 @ #0x1000
	mul     r0, r1, r0
	mov     r0, r0, lsl #4
	str     r0, [r6, #0x34]
	bl      FX_GetDivResult
	ldrsh   r1, [r5, #0x20]
	rsb     r1, r1, #0x0
	mul     r0, r1, r0
	mov     r0, r0, asr #12
	str     r0, [r6, #0x10]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b77b0

.arm
Function_20b77b0: @ 20b77b0 :arm
	ldr     r2, [r1, #0x18]
	mov     r3, #0x0
	str     r2, [r0]
	ldr     r2, [r1, #0x1c]
	str     r2, [r0, #0x14]
	str     r3, [r0, #0x4]
	str     r3, [r0, #0x30]
	ldrh    r2, [r1, #0x2e]
	ldr     r1, [r1, #0x1c]
	rsb     r2, r2, #0x0
	sub     r1, r1, #1, 20 @ #0x1000
	mul     r1, r2, r1
	mov     r1, r1, lsl #4
	str     r1, [r0, #0x34]
	str     r3, [r0, #0x10]
	bx      lr
@ 0x20b77f0


.arm
Function_20b77f0: @ 20b77f0 :arm
	mov     r2, #1, 20 @ #0x1000
	str     r2, [r0]
	mov     r1, #0x0
	str     r1, [r0, #0x4]
	str     r1, [r0, #0x10]
	str     r2, [r0, #0x14]
	str     r1, [r0, #0x30]
	str     r1, [r0, #0x34]
	bx      lr
@ 0x20b7814


.arm
Function_20b7814: @ 20b7814 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4c
	mov     r4, r0
	ldr     r0, [r4]
	mov     r3, #0x3
	tst     r0, #0x8
	ldrne   r0, [pc, #0x15c] @ [0x20b7990] (=0x101610)
	mov     r2, #0x2
	strne   r0, [sp]
	ldreq   r0, [pc, #0x154] @ [0x20b7994] (=0x101810)
	mov     r1, #1, 20 @ #0x1000
	streq   r0, [sp]
	mov     r0, #0x0
	str     r3, [sp, #0x4]
	str     r2, [sp, #0x48]
	str     r1, [sp, #0x44]
	str     r0, [sp, #0x40]
	str     r0, [sp, #0x34]
	str     r0, [sp, #0x30]
	str     r0, [sp, #0x2c]
	str     r0, [sp, #0x28]
	str     r0, [sp, #0x24]
	str     r0, [sp, #0x20]
	str     r0, [sp, #0x14]
	str     r0, [sp, #0x10]
	ldr     r0, [r4]
	tst     r0, #0x1
	strne   r1, [r4, #0x1c]
	strne   r1, [r4, #0x18]
	ldr     r0, [r4]
	tst     r0, #0x2
	beq     branch_20b78a4
	mov     r0, #1, 20 @ #0x1000
	strh    r0, [r4, #0x22]
	mov     r0, #0x0
	strh    r0, [r4, #0x20]
branch_20b78a4: @ 20b78a4 :arm
	ldr     r0, [r4]
	tst     r0, #0x4
	movne   r0, #0x0
	strne   r0, [r4, #0x28]
	strne   r0, [r4, #0x24]
	ldr     r1, [r4]
	ldr     r0, [pc, #0xd4] @ [0x20b7998] (=JumpTable_2101124)
	and     r1, r1, #0x7
	ldr     r2, [r0, r1, lsl #0x2]
	add     r0, sp, #0x8
	mov     r1, r4
	blx     r2
	ldr     r3, [r4, #0x30]
	cmp     r3, #1, 20 @ #0x1000
	beq     branch_20b7924
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	smull   r2, r0, r3, r0
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
	str     r2, [sp, #0x8]
	ldr     r2, [r4, #0x30]
	ldr     r0, [sp, #0x38]
	smull   r3, r1, r2, r1
	mov     r2, r3, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [sp, #0xc]
	ldr     r1, [r4, #0x30]
	smull   r2, r0, r1, r0
	mov     r1, r2, lsr #12
	orr     r1, r1, r0, lsl #20
	str     r1, [sp, #0x38]
branch_20b7924: @ 20b7924 :arm
	ldr     r3, [r4, #0x34]
	cmp     r3, #1, 20 @ #0x1000
	beq     branch_20b7974
	ldr     r0, [sp, #0x18]
	ldr     r1, [sp, #0x1c]
	smull   r2, r0, r3, r0
	mov     r2, r2, lsr #12
	orr     r2, r2, r0, lsl #20
	str     r2, [sp, #0x18]
	ldr     r2, [r4, #0x34]
	ldr     r0, [sp, #0x3c]
	smull   r3, r1, r2, r1
	mov     r2, r3, lsr #12
	orr     r2, r2, r1, lsl #20
	str     r2, [sp, #0x1c]
	ldr     r1, [r4, #0x34]
	smull   r2, r0, r1, r0
	mov     r1, r2, lsr #12
	orr     r1, r1, r0, lsl #20
	str     r1, [sp, #0x3c]
branch_20b7974: @ 20b7974 :arm
	add     r1, sp, #0x0
	ldr     r0, [sp]
	add     r1, r1, #0x4
	mov     r2, #0x12
	bl      Function_20b275c
	add     sp, sp, #0x4c
	ldmfd   sp!, {r3,r4,pc}
@ 0x20b7990

.word 0x101610 @ 0x20b7990
.word 0x101810 @ 0x20b7994
.word JumpTable_2101124 @ 0x20b7998



.arm
.globl Function_20b799c
Function_20b799c: @ 20b799c :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x68] @ [0x20b7a10] (=RAM_21c8a00)
	ldr     r1, [r0, #0xc]
	cmp     r1, #0x0
	ldmnefd sp!, {r3,pc}
	mov     r1, #0x1
	str     r1, [r0, #0xc]
	bl      Function_20c5580
	ldr     r0, [pc, #0x50] @ [0x20b7a14] (=Function_20b7a80)
	ldr     r1, [pc, #0x48] @ [0x20b7a10] (=RAM_21c8a00)
	mov     r2, #0x0
	str     r0, [r1, #0x10]
	ldr     r0, [pc, #0x44] @ [0x20b7a18] (=Function_20b7ab8)
	str     r2, [r1, #0x14]
	str     r0, [r1, #0x1c]
	ldr     r0, [pc, #0x3c] @ [0x20b7a1c] (=RAM_21c8a10)
	str     r2, [r1, #0x20]
	bl      Function_20cb848
	ldr     r0, [pc, #0x34] @ [0x20b7a20] (=RAM_21c8a1c)
	bl      Function_20cb860
	bl      Function_20b7be4
	bl      Function_20b90fc
	bl      Function_20b82a0
	ldr     r0, [pc, #0x10] @ [0x20b7a10] (=RAM_21c8a00)
	mvn     r1, #0x0
	strb    r1, [r0]
	mov     r1, #0x1
	str     r1, [r0, #0x4]
	ldmfd   sp!, {r3,pc}
@ 0x20b7a10

.word RAM_21c8a00 @ 0x20b7a10
.word Function_20b7a80 @ 0x20b7a14
.word Function_20b7ab8 @ 0x20b7a18
.word RAM_21c8a10 @ 0x20b7a1c
.word RAM_21c8a1c @ 0x20b7a20



.arm
.globl Function_20b7a24
Function_20b7a24: @ 20b7a24 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, #0x0
branch_20b7a2c: @ 20b7a2c :arm
	mov     r0, r4
	bl      Function_20c56b4
	cmp     r0, #0x0
	bne     branch_20b7a2c
	bl      Function_20b8354
	bl      Function_20b9114
	bl      Function_20bb070
	mov     r0, #0x0
	bl      Function_20c5884
	ldmfd   sp!, {r4,pc}
@ 0x20b7a54


.arm
Function_20b7a54: @ 20b7a54 :arm
	ldr     r12, [pc, #0x0] @ [0x20b7a5c] (=Function_20c5464)
	bx      r12
@ 0x20b7a5c

.word Function_20c5464 @ 0x20b7a5c



.arm
Function_20b7a60: @ 20b7a60 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	beq     branch_20b7a78
	mov     r0, #0x40
	bl      Function_20c54ac
	ldmfd   sp!, {r3,pc}

branch_20b7a78: @ 20b7a78 :arm
	bl      Function_20c54cc
	ldmfd   sp!, {r3,pc}
@ Function_20b7a80


.arm
Function_20b7a80: @ 20b7a80 :arm
	stmfd   sp!, {r4,lr}
	bl      Function_20b95f8
	mov     r0, #0x0
	mov     r1, r0
	mov     r2, r0
	mov     r3, r0
	bl      Function_20c522c
	bl      Function_20c5aac
	mov     r4, r0
	mov     r0, #0x1
	bl      Function_20c5884
	mov     r0, r4
	bl      Function_20c5a40
	ldmfd   sp!, {r4,pc}
@ 0x20b7ab8


.arm
Function_20b7ab8: @ 20b7ab8 :arm
	ldr     r12, [pc, #0x0] @ [0x20b7ac0] (=Function_20b9658)
	bx      r12
@ 0x20b7ac0

.word Function_20b9658 @ 0x20b7ac0



.arm
Function_20b7ac4: @ 20b7ac4 :arm
	stmfd   sp!, {r4,lr}

	movs    r4, r0
	moveq   r0, #0x1
	ldmeqfd sp!, {r4,pc}
	ldr     r1, [pc, #0x2c] @ [0x20b7b08] (=RAM_21cae00)
	ldr     r1, [r1, #0x8]
	tst     r4, r1
	movne   r0, #0x0
	ldmnefd sp!, {r4,pc}

	mov     r1, #0x0
	bl      Function_20c5310
	ldr     r1, [pc, #0x10] @ [0x20b7b08] (=RAM_21cae00)
	mov     r0, #0x1
	ldr     r2, [r1, #0x8]
	orr     r2, r2, r4
	str     r2, [r1, #0x8]

	ldmfd   sp!, {r4,pc}
@ 0x20b7b08

.word RAM_21cae00 @ 0x20b7b08



.arm
Function_20b7b0c: @ 20b7b0c :arm
	stmfd   sp!, {r4,lr}
	movs    r4, r0
	ldmeqfd sp!, {r4,pc}
	mov     r1, #0x0
	bl      Function_20c5330
	ldr     r0, [pc, #0x10] @ [0x20b7b38] (=RAM_21cae00)
	mvn     r1, r4
	ldr     r2, [r0, #0x8]
	and     r1, r2, r1
	str     r1, [r0, #0x8]
	ldmfd   sp!, {r4,pc}
@ 0x20b7b38

.word RAM_21cae00 @ 0x20b7b38
.arm
Function_20b7b3c: @ 20b7b3c :arm
	ldr     r1, [pc, #0x18] @ [0x20b7b5c] (=RAM_21cae00)
	ldr     r2, [r1]
	tst     r0, r2
	movne   r0, #0x0
	orreq   r0, r2, r0
	streq   r0, [r1]
	moveq   r0, #0x1
	bx      lr
@ 0x20b7b5c

.word RAM_21cae00 @ 0x20b7b5c
.arm
Function_20b7b60: @ 20b7b60 :arm
	ldr     r1, [pc, #0x10] @ [0x20b7b78] (=RAM_21cae00)
	mvn     r0, r0
	ldr     r2, [r1]
	and     r0, r2, r0
	str     r0, [r1]
	bx      lr
@ 0x20b7b78

.word RAM_21cae00 @ 0x20b7b78
.arm
Function_20b7b7c: @ 20b7b7c :arm
	ldr     r0, [pc, #0x3c] @ [0x20b7bc0] (=RAM_21cae00)
	mov     r3, #0x1
	ldr     r1, [r0, #0x4]
	mov     r0, #0x0
.arm
branch_20b7b8c: @ 20b7b8c :arm
	tst     r1, r3
	bne     branch_20b7ba8
	ldr     r1, [pc, #0x24] @ [0x20b7bc0] (=RAM_21cae00)
	ldr     r2, [r1, #0x4]
	orr     r2, r2, r3
	str     r2, [r1, #0x4]
	bx      lr
@ 0x20b7ba8

.arm
branch_20b7ba8: @ 20b7ba8 :arm
	add     r0, r0, #0x1
	cmp     r0, #0x8
	mov     r3, r3, lsl #1
	blt     branch_20b7b8c
	mvn     r0, #0x0
	bx      lr
@ 0x20b7bc0

.word RAM_21cae00 @ 0x20b7bc0
.arm
Function_20b7bc4: @ 20b7bc4 :arm
	ldr     r1, [pc, #0x14] @ [0x20b7be0] (=RAM_21cae00)
	mov     r2, #0x1
	mvn     r0, r2, lsl r0
	ldr     r2, [r1, #0x4]
	and     r0, r2, r0
	str     r0, [r1, #0x4]
	bx      lr
@ 0x20b7be0

.word RAM_21cae00 @ 0x20b7be0
.arm
Function_20b7be4: @ 20b7be4 :arm
	ldr     r0, [pc, #0x10] @ [0x20b7bfc] (=RAM_21cae00)
	mov     r1, #0x0
	str     r1, [r0, #0x8]
	str     r1, [r0]
	str     r1, [r0, #0x4]
	bx      lr
@ 0x20b7bfc

.word RAM_21cae00 @ 0x20b7bfc



.arm
Function_20b7c00: @ 20b7c00 :arm
	stmfd   sp!, {r4,lr}

	mov     r4, r0
	mov     r0, #0x1
	mov     r0, r0, lsl r4
	bl      Function_20b7ac4
	cmp     r0, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4,pc}

	mov     r0, #0x14
	mul     r0, r4, r0
	ldr     r2, [pc, #0x10] @ [0x20b7c40] (=RAM_21cae0c)
	mov     r1, #0x0
	str     r4, [r2, r0]
	add     r0, r2, r0
	str     r1, [r0, #0x8]

	ldmfd   sp!, {r4,pc}
@ 0x20b7c40

.word RAM_21cae0c @ 0x20b7c40



.arm
Function_20b7c44: @ 20b7c44 :arm
	ldr     r0, [r0]
	mov     r1, #0x1
	ldr     r12, [pc, #0x4] @ [0x20b7c58] (=Function_20b7b0c)
	mov     r0, r1, lsl r0
	bx      r12
@ 0x20b7c58

.word Function_20b7b0c @ =0x20b7b0c, 0x20b7c58



.arm
Function_20b7c5c: @ 20b7c5c :arm
	stmfd   sp!, {r3-r9,lr}
	sub     sp, sp, #0x18
	movs    r8, r1
	mov     r9, r0
	mov     r7, r2
	mov     r6, r3
	beq     branch_20b7c84
	cmp     r8, #0x1
	beq     branch_20b7c98
	b       branch_20b7ca8

branch_20b7c84: @ 20b7c84 :arm
	ldr     r1, [sp, #0x38]
	ldr     r0, [sp, #0x3c]
	mov     r4, r1, asr #2
	rsb     r5, r4, r0, asr #2
	b       branch_20b7ca8

branch_20b7c98: @ 20b7c98 :arm
	ldr     r1, [sp, #0x38]
	ldr     r0, [sp, #0x3c]
	mov     r4, r1, asr #1
	rsb     r5, r4, r0, asr #1
branch_20b7ca8: @ 20b7ca8 :arm
	ldr     r2, [sp, #0x40]
	ldr     r0, [pc, #0xc0] @ [0x20b7d74] (=0xd87f8000)
	mov     r3, r2, asr #31
	mov     r1, #0x7f
	bl      _ll_udiv
	ldr     r2, [sp, #0x48]
	mov     r3, r2, asr #31
	bl      _ll_udiv
	cmp     r1, #0x0
	mov     r2, #0x10
	cmpeq   r0, #0x10
	mov     r3, #0x0
	movcc   r0, r2
	blo     branch_20b7cf0
	ldr     r2, [pc, #0x90] @ [0x20b7d78] (=0xffff)
	cmp     r1, r3
	cmpeq   r0, r2
	movhi   r0, r2
branch_20b7cf0: @ 20b7cf0 :arm
	ldr     r1, [sp, #0x44]
	stmea   sp, {r4,r5}
	str     r1, [sp, #0x8]
	mov     r1, #0x0
	str     r1, [sp, #0xc]
	cmp     r6, #0x0
	movne   r3, #0x1
	ldr     r1, [sp, #0x4c]
	str     r0, [sp, #0x10]
	str     r1, [sp, #0x14]
	ldr     r0, [r9]
	moveq   r3, #0x2
	mov     r1, r8
	mov     r2, r7
	bl      Function_20c53b8
	mov     r1, #0x0
	ldr     r0, [r9]
	mov     r2, #0x1
	mov     r0, r2, lsl r0
	mov     r2, r1
	mov     r3, r1
	bl      Function_20c5204
	mov     r0, #0x1
	str     r0, [r9, #0x8]
	mov     r0, #0x0
	str     r0, [r9, #0xc]
	bl      Function_20c5aac
	str     r0, [r9, #0x10]
	ldr     r1, [sp, #0x40]
	mov     r0, #0x1
	str     r1, [r9, #0x4]
	add     sp, sp, #0x18
	ldmfd   sp!, {r3-r9,pc}
@ 0x20b7d74

.word 0xd87f8000 @ 0x20b7d74
.word 0xffff @ 0x20b7d78



.arm
Function_20b7d7c: @ 20b7d7c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r0, [r4, #0x8]
	cmp     r0, #0x0
	ldmeqfd sp!, {r4,pc}
	ldr     r0, [r4]
	mov     r2, #0x1
	mov     r1, #0x0
	mov     r0, r2, lsl r0
	mov     r2, r1
	mov     r3, r1
	bl      Function_20c522c
	mov     r0, #0x0
	str     r0, [r4, #0x8]
	ldmfd   sp!, {r4,pc}
@ 0x20b7db8


.arm
Function_20b7db8: @ 20b7db8 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [r0, #0x8]
	cmp     r2, #0x0
	ldmeqfd sp!, {r3,pc}
	ldr     r0, [r0]
	mov     r2, #0x1
	mov     r0, r2, lsl r0
	mov     r2, #0x0
	bl      Function_20c5370
	ldmfd   sp!, {r3,pc}
@ 0x20b7de0


.arm
Function_20b7de0: @ 20b7de0 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	ldr     r0, [r5, #0x8]
	mov     r4, r1
	cmp     r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	ldr     r2, [r5, #0x4]
	ldr     r0, [pc, #0x58] @ [0x20b7e5c] (=0xd87f8000)
	mov     r3, r2, asr #31
	mov     r1, #0x7f
	bl      _ll_udiv
	mov     r2, r4
	mov     r3, r4, asr #31
	bl      _ll_udiv
	mov     r3, r0
	cmp     r1, #0x0
	mov     r0, #0x10
	cmpeq   r3, #0x10
	mov     r2, #0x0
	movcc   r3, r0
	blo     branch_20b7e44
	ldr     r0, [pc, #0x24] @ [0x20b7e60] (=0xffff)
	cmp     r1, r2
	cmpeq   r3, r0
	movhi   r3, r0
branch_20b7e44: @ 20b7e44 :arm
	ldr     r0, [r5]
	mov     r1, #0x1
	mov     r0, r1, lsl r0
	mov     r1, r3
	bl      Function_20c5350
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b7e5c

.word 0xd87f8000 @ 0x20b7e5c
.word 0xffff @ 0x20b7e60



.arm
Function_20b7e64: @ 20b7e64 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [r0, #0x8]
	cmp     r2, #0x0
	ldmeqfd sp!, {r3,pc}
	ldr     r0, [r0]
	mov     r2, #0x1
	mov     r0, r2, lsl r0
	bl      Function_20c5398
	ldmfd   sp!, {r3,pc}
@ 0x20b7e88

.arm
Function_20b7e88: @ 20b7e88 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r0, [r4, #0x8]
	cmp     r0, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4,pc}
	ldr     r0, [r4, #0xc]
	cmp     r0, #0x0
	bne     branch_20b7ec4
	ldr     r0, [r4, #0x10]
	bl      Function_20c5ad8
	cmp     r0, #0x0
	mov     r0, #0x1
	ldmeqfd sp!, {r4,pc}
	str     r0, [r4, #0xc]
.arm
branch_20b7ec4: @ 20b7ec4 :arm
	bl      Function_20c5de0
	ldr     r1, [r4]
	mov     r2, #0x1
	tst     r0, r2, lsl r1
	movne   r0, r2
	moveq   r0, #0x0
	streq   r0, [r4, #0x8]
	ldmfd   sp!, {r4,pc}
@ 0x20b7ee4


.arm
Function_20b7ee4: @ 20b7ee4 :arm
	mov     r2, #0x24
	mul     r2, r0, r2
	ldr     r0, [pc, #0x4] @ [0x20b7ef8] (=RAM_21cb3c4)
	strb    r1, [r0, r2]
	bx      lr
@ 0x20b7ef8

.word RAM_21cb3c4 @ 0x20b7ef8



.arm
Function_20b7efc: @ 20b7efc :arm
	mov     r2, #0x24
	mul     r2, r0, r2
	mov     r0, r1, lsl #16
	ldr     r1, [pc, #0x8] @ [0x20b7f18] (=RAM_21cb3bc)
	mov     r0, r0, lsr #16
	str     r0, [r1, r2]
	bx      lr
@ 0x20b7f18

.word RAM_21cb3bc @ 0x20b7f18



.arm
Function_20b7f1c: @ 20b7f1c :arm
	mov     r2, #0x24
	mul     r2, r0, r2
	ldr     r0, [pc, #0x4] @ [0x20b7f30] (=RAM_21cb3c0)
	str     r1, [r0, r2]
	bx      lr
@ 0x20b7f30

.word RAM_21cb3c0 @ 0x20b7f30



.arm
Function_20b7f34: @ 20b7f34 :arm
	stmfd   sp!, {r3-r6,lr}
	sub     sp, sp, #0x4
	mov     r5, r2
	mov     r6, r0
	mov     r0, r1
	mov     r3, #0x0
	ldr     r2, [pc, #0x6c] @ [0x20b7fc0] (=Function_20b8884)
	add     r1, r5, #0x14
	str     r3, [sp]
	bl      Function_20ba018
	movs    r4, r0
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r6,pc}
	mov     r2, #0x0
	str     r2, [r4, #0xc]
	str     r6, [r4, #0x10]
	mov     r1, r5
	add     r0, r4, #0x14
	str     r2, [r4, #0x8]
	bl      Function_20b9ed4
	cmp     r0, #0x0
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r6,pc}
	ldr     r2, [pc, #0x24] @ [0x20b7fc4] (=RAM_21cb3a4)
	mov     r1, #0x24
	mla     r2, r6, r1, r2
	str     r0, [r4, #0x8]
	mov     r1, r4
	add     r0, r2, #0xc
	bl      Function_20a4c54
	mov     r0, #0x1
	add     sp, sp, #0x4
	ldmfd   sp!, {r3-r6,pc}
@ 0x20b7fc0

.word Function_20b8884 @ 0x20b7fc0
.word RAM_21cb3a4 @ 0x20b7fc4



.arm
.globl Function_20b7fc8
Function_20b7fc8: @ 20b7fc8 :arm
	ldr     r12, [pc, #0x4] @ [0x20b7fd4] (=Function_20b85ac)
	ldr     r0, [r0]
	bx      r12
@ 0x20b7fd4

.word Function_20b85ac @ =0x20b85ac, 0x20b7fd4



.arm
Function_20b7fd8: @ 20b7fd8 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r3, [pc, #0x48] @ [0x20b802c] (=RAM_21cb3a4)
	mov     r2, #0x24
	mla     r6, r0, r2, r3
	ldr     r5, [pc, #0x40] @ [0x20b8030] (=RAM_21caf64)
	mov     r7, r1
	mov     r4, #0x0
branch_20b7ff4: @ 20b7ff4 :arm
	ldrb    r0, [r5, #0x2c]
	cmp     r0, #0x0
	beq     branch_20b8018
	ldr     r0, [r5, #0x4]
	cmp     r0, r6
	bne     branch_20b8018
	mov     r0, r5
	mov     r1, r7
	bl      Function_20b85ac
branch_20b8018: @ 20b8018 :arm
	add     r4, r4, #0x1
	cmp     r4, #0x10
	add     r5, r5, #0x44
	blt     branch_20b7ff4
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b802c

.word RAM_21cb3a4 @ 0x20b802c
.word RAM_21caf64 @ 0x20b8030



.arm
Function_20b8034: @ 20b8034 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r5, [pc, #0x48] @ [0x20b8088] (=RAM_21caf64)
	mov     r7, r0
	mov     r6, r1
	mov     r4, #0x0
branch_20b8048: @ 20b8048 :arm
	ldrb    r0, [r5, #0x2c]
	cmp     r0, #0x0
	beq     branch_20b8074
	ldrh    r0, [r5, #0x34]
	cmp     r0, #0x1
	ldreqh  r0, [r5, #0x38]
	cmpeq   r0, r7
	bne     branch_20b8074
	mov     r0, r5
	mov     r1, r6
	bl      Function_20b85ac
branch_20b8074: @ 20b8074 :arm
	add     r4, r4, #0x1
	cmp     r4, #0x10
	add     r5, r5, #0x44
	blt     branch_20b8048
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b8088

.word RAM_21caf64 @ 0x20b8088



.arm
Function_20b808c: @ 20b808c :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r5, [pc, #0x30] @ [0x20b80c8] (=RAM_21caf64)
	mov     r6, r0
	mov     r4, #0x0
branch_20b809c: @ 20b809c :arm
	ldrb    r0, [r5, #0x2c]
	cmp     r0, #0x0
	beq     branch_20b80b4
	mov     r0, r5
	mov     r1, r6
	bl      Function_20b85ac
branch_20b80b4: @ 20b80b4 :arm
	add     r4, r4, #0x1
	cmp     r4, #0x10
	add     r5, r5, #0x44
	blt     branch_20b809c
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b80c8

.word RAM_21caf64 @ 0x20b80c8



.arm
Function_20b80cc: @ 20b80cc :arm
	ldr     r12, [pc, #0x4] @ [0x20b80d8] (=Function_20b85f8)
	ldr     r0, [r0]
	bx      r12
@ 0x20b80d8

.word Function_20b85f8 @ 0x20b80d8



.arm
.globl Function_20b80dc
Function_20b80dc: @ 20b80dc :arm
	mov     r1, #0x0
	str     r1, [r0]
	bx      lr
@ 0x20b80e8


.arm
Function_20b80e8: @ 20b80e8 :arm
	ldr     r1, [r0]
	cmp     r1, #0x0
	bxeq    lr
	ldr     r1, [r0]
	mov     r2, #0x0
	str     r2, [r1]
	str     r2, [r0]
	bx      lr
@ 0x20b8108


.arm
Function_20b8108: @ 20b8108 :arm
	mov     r1, #0x24
	mul     r1, r0, r1
	ldr     r0, [pc, #0x4] @ [0x20b811c] (=RAM_21cb3ac)
	ldrh    r0, [r0, r1]
	bx      lr
@ 0x20b811c

.word RAM_21cb3ac @ 0x20b811c



.arm
.globl Function_20b8120
Function_20b8120: @ 20b8120 :arm
	ldr     r2, [r0]
	cmp     r2, #0x0
	ldrne   r0, [r0]
	strneb  r1, [r0, #0x41]
	bx      lr
@ 0x20b8134


.arm
Function_20b8134: @ 20b8134 :arm
	ldr     r2, [r0]
	cmp     r2, #0x0
	ldrne   r0, [r0]
	strneb  r1, [r0, #0x40]
	bx      lr
@ 0x20b8148


.arm
Function_20b8148: @ 20b8148 :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [r0]
	cmp     r3, #0x0
	ldrne   r3, [r0]
	ldrneb  r0, [r3, #0x2c]
	cmpne   r0, #0x2
	ldmeqfd sp!, {r3,pc}
	add     r0, r3, #0x1c
	mov     r1, r1, lsl #8
	bl      Function_20bb3c0
	ldmfd   sp!, {r3,pc}
@ 0x20b8174


.arm
Function_20b8174: @ 20b8174 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [r0]
	cmp     r2, #0x0
	ldmeqfd sp!, {r3,pc}
	ldr     r0, [r0]
	ldrb    r0, [r0, #0x3c]
	bl      Function_20c518c
	ldmfd   sp!, {r3,pc}
@ 0x20b8194


.arm
.globl Function_20b8194
Function_20b8194: @ 20b8194 :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [r0]
	cmp     r3, #0x0
	ldmeqfd sp!, {r3,pc}

	ldr     r0, [r0]
	ldrb    r0, [r0, #0x3c]
	bl      Function_20c51a4
	ldmfd   sp!, {r3,pc}
@ 0x20b81b4


.arm
Function_20b81b4: @ 20b81b4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [r0]
	cmp     r3, #0x0
	ldmeqfd sp!, {r3,pc}
	ldr     r0, [r0]
	ldrb    r0, [r0, #0x3c]
	bl      Function_20c51c0
	ldmfd   sp!, {r3,pc}
@ 0x20b81d4


.arm
Function_20b81d4: @ 20b81d4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [r0]
	cmp     r2, #0x0
	ldmeqfd sp!, {r3,pc}
	ldr     r0, [r0]
	ldrb    r0, [r0, #0x3c]
	bl      Function_20c515c
	ldmfd   sp!, {r3,pc}
@ 0x20b81f4


.arm
Function_20b81f4: @ 20b81f4 :arm
	ldr     r2, [r0]
	cmp     r2, #0x0
	bxeq    lr
	ldr     r2, [r0]
	mov     r3, #0x1
	strh    r3, [r2, #0x34]
	ldr     r0, [r0]
	strh    r1, [r0, #0x38]
	bx      lr
@ 0x20b8218


.arm
Function_20b8218: @ 20b8218 :arm
	ldr     r3, [r0]
	cmp     r3, #0x0
	bxeq    lr
	ldr     r3, [r0]
	mov     r12, #0x2
	strh    r12, [r3, #0x34]
	ldr     r3, [r0]
	strh    r1, [r3, #0x38]
	ldr     r0, [r0]
	strh    r2, [r0, #0x3a]
	bx      lr
@ 0x20b8244


.arm
Function_20b8244: @ 20b8244 :arm
	ldr     r1, [r0]
	cmp     r1, #0x0
	mvneq   r0, #0x0
	bxeq    lr
	ldr     r1, [r0]
	ldrh    r0, [r1, #0x34]
	cmp     r0, #0x1
	mvnne   r0, #0x0
	ldreqh  r0, [r1, #0x38]
	bx      lr
@ 0x20b826c


.arm
Function_20b826c: @ 20b826c :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [r0]
	cmp     r1, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3,pc}
	ldr     r1, [r0]
	ldrb    r0, [r1, #0x2d]
	cmp     r0, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3,pc}
	ldrb    r0, [r1, #0x3c]
	bl      Function_20c5e0c
	ldmfd   sp!, {r3,pc}
@ 0x20b82a0


.arm
Function_20b82a0: @ 20b82a0 :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r0, [pc, #0x98] @ [0x20b8344] (=RAM_21caf58)
	mov     r1, #0x14
	bl      Function_20a4c10
	ldr     r0, [pc, #0x90] @ [0x20b8348] (=RAM_21caf4c)
	mov     r1, #0x14
	bl      Function_20a4c10
	mov     r6, #0x0
	ldr     r7, [pc, #0x84] @ [0x20b834c] (=RAM_21caf64)
	ldr     r4, [pc, #0x7c] @ [0x20b8348] (=RAM_21caf4c)
	mov     r5, r6
.arm
branch_20b82cc: @ 20b82cc :arm
	strb    r5, [r7, #0x2c]
	mov     r0, r4
	mov     r1, r7
	strb    r6, [r7, #0x3c]
	bl      Function_20a4c54
	add     r6, r6, #0x1
	cmp     r6, #0x10
	add     r7, r7, #0x44
	blt     branch_20b82cc
	mov     r10, #0x0
	ldr     r9, [pc, #0x54] @ [0x20b8350] (=RAM_21cb3a4)
	mov     r8, #0xc
	mov     r7, r10
	mov     r6, #0x7f
	mov     r5, #0x1
	mov     r4, r10
.arm
branch_20b830c: @ 20b830c :arm
	mov     r0, r9
	mov     r1, r8
	bl      Function_20a4c10
	mov     r1, r7
	add     r0, r9, #0xc
	bl      Function_20a4c10
	strb    r6, [r9, #0x20]
	str     r5, [r9, #0x18]
	add     r10, r10, #0x1
	str     r4, [r9, #0x1c]
	cmp     r10, #0x20
	add     r9, r9, #0x24
	blt     branch_20b830c
	ldmfd   sp!, {r4-r10,pc}
@ 0x20b8344

.word RAM_21caf58 @ 0x20b8344
.word RAM_21caf4c @ 0x20b8348
.word RAM_21caf64 @ 0x20b834c
.word RAM_21cb3a4 @ 0x20b8350



.arm
Function_20b8354: @ 20b8354 :arm
	stmfd   sp!, {r3-r11,lr}
	bl      Function_20c5db4
	mov     r11, r0
	ldr     r0, [pc, #0x144] @ [0x20b84ac] (=RAM_21caf58)
	mov     r1, #0x0
	bl      Function_20a4dbc
	movs    r6, r0
	ldmeqfd sp!, {r3-r11,pc}
	mov     r4, #2, 18 @ #0x8000
	ldr     r5, [pc, #0x130] @ [0x20b84b0] (=Unknown_20fdab0)
	rsb     r4, r4, #0x0
branch_20b8380: @ 20b8380 :arm
	ldr     r0, [pc, #0x124] @ [0x20b84ac] (=RAM_21caf58)
	mov     r1, r6
	bl      Function_20a4dbc
	ldrb    r1, [r6, #0x2d]
	mov     r7, r0
	cmp     r1, #0x0
	bne     branch_20b83b0
	ldr     r0, [r6, #0x30]
	bl      Function_20c5ad8
	cmp     r0, #0x0
	movne   r0, #0x1
	strneb  r0, [r6, #0x2d]
branch_20b83b0: @ 20b83b0 :arm
	ldrb    r0, [r6, #0x2d]
	cmp     r0, #0x0
	beq     branch_20b83d8
	ldrb    r1, [r6, #0x3c]
	mov     r0, #0x1
	tst     r11, r0, lsl r1
	bne     branch_20b83d8
	mov     r0, r6
	bl      Function_20b8800
	b       branch_20b849c

branch_20b83d8: @ 20b83d8 :arm
	add     r0, r6, #0x1c
	bl      Function_20bb41c
	ldr     r0, [r6, #0x4]
	ldrb    r2, [r6, #0x41]
	ldrb    r0, [r0, #0x20]
	ldrb    r1, [r6, #0x40]
	mov     r2, r2, lsl #1
	mov     r0, r0, lsl #1
	mov     r1, r1, lsl #1
	ldrsh   r10, [r5, r0]
	add     r0, r6, #0x1c
	ldrsh   r8, [r5, r2]
	ldrsh   r9, [r5, r1]
	bl      Function_20bb3e8
	mov     r0, r0, asr #8
	mov     r0, r0, lsl #1
	add     r1, r9, r8
	ldrsh   r0, [r5, r0]
	add     r1, r10, r1
	add     r8, r0, r1
	cmp     r8, r4
	movlt   r8, r4
	blt     branch_20b8440
	ldr     r0, [pc, #0x78] @ [0x20b84b4] (=0x7fff)
	cmp     r8, r0
	movgt   r8, r0
branch_20b8440: @ 20b8440 :arm
	ldrsh   r0, [r6, #0x3e]
	cmp     r8, r0
	beq     branch_20b845c
	ldrb    r0, [r6, #0x3c]
	mov     r1, r8
	bl      Function_20c5174
	strh    r8, [r6, #0x3e]
branch_20b845c: @ 20b845c :arm
	ldrb    r0, [r6, #0x2c]
	cmp     r0, #0x2
	bne     branch_20b8480
	add     r0, r6, #0x1c
	bl      Function_20bb434
	cmp     r0, #0x0
	beq     branch_20b8480
	mov     r0, r6
	bl      Function_20b8760
branch_20b8480: @ 20b8480 :arm
	ldrb    r0, [r6, #0x2f]
	cmp     r0, #0x0
	beq     branch_20b849c
	ldrb    r0, [r6, #0x3c]
	bl      Function_20c511c
	mov     r0, #0x0
	strb    r0, [r6, #0x2f]
branch_20b849c: @ 20b849c :arm
	mov     r6, r7
	cmp     r7, #0x0
	bne     branch_20b8380
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b84ac

.word RAM_21caf58 @ 0x20b84ac
.word Unknown_20fdab0 @ 0x20b84b0
.word 0x7fff @ 0x20b84b4



.arm
Function_20b84b8: @ 20b84b8 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r12, [pc, #0x88] @ [0x20b854c] (=RAM_21cb3a4)
	mov     r3, #0x24
	mov     r4, r0
	ldr     r5, [r4]
	mla     r6, r1, r3, r12
	mov     r7, r2
	cmp     r5, #0x0
	beq     branch_20b84e0
	bl      Function_20b80e8
.arm
branch_20b84e0: @ 20b84e0 :arm
	ldrh    r1, [r6, #0x8]
	ldr     r0, [r6, #0x18]
	cmp     r1, r0
	blo     branch_20b851c
	mov     r0, r6
	mov     r1, #0x0
	bl      Function_20a4dbc
	cmp     r0, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	ldrb    r1, [r0, #0x3d]
	cmp     r7, r1
	movlt   r0, #0x0
	ldmltfd sp!, {r3-r7,pc}
	bl      Function_20b8760
.arm
branch_20b851c: @ 20b851c :arm
	mov     r0, r7
	bl      Function_20b8798
	movs    r5, r0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	mov     r0, r6
	mov     r1, r5
	bl      Function_20b86bc
	str     r4, [r5]
	mov     r0, r5
	str     r5, [r4]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b854c

.word RAM_21cb3a4 @ 0x20b854c
.arm
Function_20b8550: @ 20b8550 :arm
	ldr     r12, [pc, #0x0] @ [0x20b8558] (=Function_20b8800)
	bx      r12
@ 0x20b8558

.word Function_20b8800 @ =0x20b8800, 0x20b8558



.arm
Function_20b855c: @ 20b855c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	ldrb    r0, [r5, #0x3c]
	ldr     r4, [r5, #0x4]
	bl      Function_20c50f4
	ldr     r2, [r4, #0x1c]
	cmp     r2, #0x0
	beq     branch_20b8588
	ldrb    r0, [r5, #0x3c]
	ldr     r1, [pc, #0x20] @ [0x20b85a8] (=0xffff)
	bl      Function_20c51dc
.arm
branch_20b8588: @ 20b8588 :arm
	mov     r0, r5
	bl      Function_20b8674
	bl      Function_20c5aac
	str     r0, [r5, #0x30]
	mov     r0, #0x1
	strb    r0, [r5, #0x2f]
	strb    r0, [r5, #0x2c]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b85a8

.word 0xffff @ 0x20b85a8
.arm
Function_20b85ac: @ 20b85ac :arm
	stmfd   sp!, {r4,lr}
	movs    r4, r0
	mov     r2, r1
	ldrneb  r1, [r4, #0x2c]
	cmpne   r1, #0x0
	ldmeqfd sp!, {r4,pc}
	cmp     r2, #0x0
	bne     branch_20b85d4
	bl      Function_20b8760
	ldmfd   sp!, {r4,pc}
@ 0x20b85d4

.arm
branch_20b85d4: @ 20b85d4 :arm
	add     r0, r4, #0x1c
	mov     r1, #0x0
	bl      Function_20bb3c0
	mov     r0, r4
	mov     r1, #0x0
	bl      Function_20b88d4
	mov     r0, #0x2
	strb    r0, [r4, #0x2c]
	ldmfd   sp!, {r4,pc}
@ 0x20b85f8

.arm
Function_20b85f8: @ 20b85f8 :arm
	stmfd   sp!, {r3-r5,lr}
	movs    r5, r0
	ldrneb  r0, [r5, #0x2e]
	mov     r4, r1
	cmpne   r4, r0
	ldmeqfd sp!, {r3-r5,pc}
	ldrb    r0, [r5, #0x3c]
	bl      Function_20c513c
	strb    r4, [r5, #0x2e]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b8620

.arm
Function_20b8620: @ 20b8620 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r3, [pc, #0x44] @ [0x20b8670] (=RAM_21cb3a4)
	mov     r2, #0x24
	mla     r5, r0, r2, r3
	mov     r6, r1
	add     r0, r5, #0xc
	mov     r1, #0x0
	bl      Function_20a4dbc
	movs    r4, r0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4-r6,pc}
	mov     r1, r4
	add     r0, r5, #0xc
	bl      Function_20a4d5c
	str     r6, [r4, #0xc]
	str     r4, [r6, #0x8]
	ldr     r0, [r4, #0x8]
	bl      Function_20b9f5c
	ldr     r0, [r4, #0x8]
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b8670

.word RAM_21cb3a4 @ 0x20b8670
.arm
Function_20b8674: @ 20b8674 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, #0x0
	strb    r0, [r4, #0x2e]
	strb    r0, [r4, #0x2d]
	strb    r0, [r4, #0x2f]
	strh    r0, [r4, #0x34]
	strh    r0, [r4, #0x3e]
	mov     r1, #0x7f
	strb    r1, [r4, #0x40]
	add     r0, r4, #0x1c
	strb    r1, [r4, #0x41]
	bl      Function_20bb3a8
	add     r0, r4, #0x1c
	mov     r1, #127, 24 @ #0x7f00
	mov     r2, #0x1
	bl      Function_20bb3c0
	ldmfd   sp!, {r4,pc}
@ 0x20b86bc

.arm
Function_20b86bc: @ 20b86bc :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r1
	mov     r1, #0x0
	mov     r5, r0
	bl      Function_20a4dbc
	movs    r1, r0
	beq     branch_20b86f8
.arm
branch_20b86d8: @ 20b86d8 :arm
	ldrb    r2, [r4, #0x3d]
	ldrb    r0, [r1, #0x3d]
	cmp     r2, r0
	blo     branch_20b86f8
	mov     r0, r5
	bl      Function_20a4dbc
	movs    r1, r0
	bne     branch_20b86d8
.arm
branch_20b86f8: @ 20b86f8 :arm
	mov     r0, r5
	mov     r2, r4
	bl      Function_20a4cf8
	str     r5, [r4, #0x4]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b870c

.arm
Function_20b870c: @ 20b870c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	ldr     r0, [pc, #0x40] @ [0x20b875c] (=RAM_21caf58)
	mov     r1, #0x0
	bl      Function_20a4dbc
	movs    r1, r0
	beq     branch_20b874c
	ldr     r4, [pc, #0x2c] @ [0x20b875c] (=RAM_21caf58)
.arm
branch_20b872c: @ 20b872c :arm
	ldrb    r2, [r5, #0x3d]
	ldrb    r0, [r1, #0x3d]
	cmp     r2, r0
	blo     branch_20b874c
	mov     r0, r4
	bl      Function_20a4dbc
	movs    r1, r0
	bne     branch_20b872c
.arm
branch_20b874c: @ 20b874c :arm
	ldr     r0, [pc, #0x8] @ [0x20b875c] (=RAM_21caf58)
	mov     r2, r5
	bl      Function_20a4cf8
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b875c

.word RAM_21caf58 @ 0x20b875c
.arm
Function_20b8760: @ 20b8760 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldrb    r0, [r4, #0x2c]
	cmp     r0, #0x2
	bne     branch_20b8780
	ldrb    r0, [r4, #0x3c]
	ldr     r1, [pc, #0x14] @ [0x20b8794] (=0xfffffd2d)
	bl      Function_20c5174
.arm
branch_20b8780: @ 20b8780 :arm
	ldrb    r0, [r4, #0x3c]
	bl      Function_20c50d4
	mov     r0, r4
	bl      Function_20b8800
	ldmfd   sp!, {r4,pc}
@ 0x20b8794

.word 0xfffffd2d @ 0x20b8794
.arm
Function_20b8798: @ 20b8798 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	ldr     r0, [pc, #0x50] @ [0x20b87f8] (=RAM_21caf4c)
	mov     r1, #0x0
	bl      Function_20a4dbc
	movs    r4, r0
	bne     branch_20b87d8
	ldr     r0, [pc, #0x40] @ [0x20b87fc] (=RAM_21caf58)
	mov     r1, #0x0
	bl      Function_20a4dbc
	mov     r4, r0
	ldrb    r1, [r4, #0x3d]
	cmp     r5, r1
	movlt   r0, #0x0
	ldmltfd sp!, {r3-r5,pc}
	bl      Function_20b8760
.arm
branch_20b87d8: @ 20b87d8 :arm
	ldr     r0, [pc, #0x18] @ [0x20b87f8] (=RAM_21caf4c)
	mov     r1, r4
	bl      Function_20a4d5c
	mov     r0, r4
	strb    r5, [r4, #0x3d]
	bl      Function_20b870c
	mov     r0, r4
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b87f8

.word RAM_21caf4c @ 0x20b87f8
.word RAM_21caf58 @ 0x20b87fc
.arm
Function_20b8800: @ 20b8800 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	ldr     r1, [r4]
	cmp     r1, #0x0
	movne   r0, #0x0
	strne   r0, [r1]
	strne   r0, [r4]
	ldr     r5, [r4, #0x4]
	mov     r1, r4
	mov     r0, r5
	bl      Function_20a4d5c
	mov     r0, #0x0
	str     r0, [r4, #0x4]
	ldr     r1, [r4, #0x8]
	cmp     r1, #0x0
	beq     branch_20b8858
	add     r0, r5, #0xc
	bl      Function_20a4c54
	ldr     r0, [r4, #0x8]
	mov     r1, #0x0
	str     r1, [r0, #0xc]
	str     r1, [r4, #0x8]
.arm
branch_20b8858: @ 20b8858 :arm
	ldr     r0, [pc, #0x1c] @ [0x20b887c] (=RAM_21caf58)
	mov     r1, r4
	bl      Function_20a4d5c
	ldr     r0, [pc, #0x14] @ [0x20b8880] (=RAM_21caf4c)
	mov     r1, r4
	bl      Function_20a4c54
	mov     r0, #0x0
	strb    r0, [r4, #0x2c]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b887c

.word RAM_21caf58 @ 0x20b887c
.word RAM_21caf4c @ 0x20b8880



.arm
Function_20b8884: @ 20b8884 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r0, [r4, #0x8]
	cmp     r0, #0x0
	ldmeqfd sp!, {r4,pc}
	bl      Function_20b9f44
	ldr     r1, [r4, #0xc]
	cmp     r1, #0x0
	movne   r0, #0x0
	strne   r0, [r1, #0x8]
	ldmnefd sp!, {r4,pc}
	ldr     r1, [r4, #0x10]
	ldr     r2, [pc, #0x14] @ [0x20b88d0] (=RAM_21cb3a4)
	mov     r0, #0x24
	mla     r0, r1, r0, r2
	mov     r1, r4
	add     r0, r0, #0xc
	bl      Function_20a4d5c
	ldmfd   sp!, {r4,pc}
@ 0x20b88d0

.word RAM_21cb3a4 @ 0x20b88d0



.arm
Function_20b88d4: @ 20b88d4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	ldr     r4, [r6, #0x4]
	mov     r5, r1
	cmp     r4, #0x0
	beq     branch_20b8900
	mov     r0, r4
	mov     r1, r6
	bl      Function_20a4d5c
	mov     r0, #0x0
	str     r0, [r6, #0x4]
.arm
branch_20b8900: @ 20b8900 :arm
	ldr     r0, [pc, #0x28] @ [0x20b8930] (=RAM_21caf58)
	mov     r1, r6
	bl      Function_20a4d5c
	strb    r5, [r6, #0x3d]
	cmp     r4, #0x0
	beq     branch_20b8924
	mov     r0, r4
	mov     r1, r6
	bl      Function_20b86bc
.arm
branch_20b8924: @ 20b8924 :arm
	mov     r0, r6
	bl      Function_20b870c
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b8930

.word RAM_21caf58 @ 0x20b8930



.arm
.globl Function_20b8934
Function_20b8934: @ 20b8934 :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [pc, #0x5c] @ [0x20b899c] (=RAM_21cb824)
	mov     r4, r0
	ldr     r0, [r1]
	cmp     r0, #0x0
	bne     branch_20b8964
	ldr     r0, [pc, #0x4c] @ [0x20b89a0] (=RAM_21cb828)
	mov     r1, #0x0
	bl      Function_20a4c10
	ldr     r0, [pc, #0x3c] @ [0x20b899c] (=RAM_21cb824)
	mov     r1, #0x1
	str     r1, [r0]
.arm
branch_20b8964: @ 20b8964 :arm
	ldr     r1, [pc, #0x38] @ [0x20b89a4] (=0x20b8e14)
	ldr     r0, [pc, #0x38] @ [0x20b89a8] (=0x20b8e60)
	str     r1, [r4, #0x8]
	str     r4, [r4, #0xc]
	str     r0, [r4, #0x14]
	str     r4, [r4, #0x18]
	mov     r0, #0x0
	str     r0, [r4, #0x44]
	str     r0, [r4, #0x48]
	ldr     r0, [r4, #0x24]
	bic     r0, r0, #0x1
	bic     r0, r0, #0x2
	str     r0, [r4, #0x24]
	ldmfd   sp!, {r4,pc}
@ 0x20b899c

.word RAM_21cb824 @ 0x20b899c
.word RAM_21cb828 @ 0x20b89a0
.word Function_20b8e14 @ 0x20b89a4
.word Function_20b8e60 @ 0x20b89a8



.arm
.globl Function_20b89ac
Function_20b89ac: @ 20b89ac :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r4, r1
	mov     r6, #0x0
	mov     r5, r0
	mov     r12, r6
	cmp     r4, #0x0
	ble     branch_20b89ec
	mov     r1, #0x1
branch_20b89cc: @ 20b89cc :arm
	ldrb    r3, [r2, r12]
	add     r0, r5, r12
	strb    r3, [r0, #0x4c]
	ldrb    r0, [r2, r12]
	add     r12, r12, #0x1
	cmp     r12, r4
	orr     r6, r6, r1, lsl r0
	blt     branch_20b89cc
branch_20b89ec: @ 20b89ec :arm
	mov     r0, r6
	bl      Function_20b7ac4
	cmp     r0, #0x0
	moveq   r0, #0x0
	strne   r4, [r5, #0x48]
	strne   r6, [r5, #0x44]
	movne   r0, #0x1
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b8a0c


.arm
.globl Function_20b8a0c
Function_20b8a0c: @ 20b8a0c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r0, [r4, #0x44]
	cmp     r0, #0x0
	ldmeqfd sp!, {r4,pc}
	bl      Function_20b7b0c
	mov     r0, #0x0
	str     r0, [r4, #0x44]
	str     r0, [r4, #0x48]
	ldmfd   sp!, {r4,pc}
@ 0x20b8a34


.arm
.globl Function_20b8a34
Function_20b8a34: @ 20b8a34 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x1c
	mov     r10, r0
	ldr     r4, [r10, #0x24]
	mov     r9, r1
	mov     r1, r4, lsl #31
	mov     r8, r2
	mov     r4, r3
	movs    r1, r1, asr #31
	ldr     r11, [sp, #0x44]
	beq     branch_20b8a64
	bl      Function_20b8c28
.arm
branch_20b8a64: @ 20b8a64 :arm
	ldr     r2, [r10, #0x48]
	mov     r0, r11, lsl #5
	mul     r1, r2, r0
	mov     r0, r4
	bl      _u32_div_f
	mul     r1, r0, r11
	mov     r0, r1, lsl #5
	ldr     r2, [sp, #0x40]
	str     r0, [r10, #0x28]
	cmp     r9, #0x1
	moveq   r0, r0, lsr #1
	mul     r0, r2, r0
	mov     r1, r11
	bl      _u32_div_f
	str     r0, [sp, #0x18]
	bl      Function_20b7b7c
	cmp     r0, #0x0
	str     r0, [r10, #0x40]
	addlt   sp, sp, #0x1c
	movlt   r0, #0x0
	ldmltfd sp!, {r4-r11,pc}
	ldr     r0, [r10, #0x48]
	mov     r6, #0x0
	cmp     r0, #0x0
	ble     branch_20b8b3c
	ldr     r0, [sp, #0x40]
	ldr     r5, [pc, #0xf4] @ [0x20b8bc8] (=RAM_21cb874)
	mov     r7, r0, lsl #5
	mov     r4, r6
.arm
branch_20b8ad8: @ 20b8ad8 :arm
	ldr     r1, [r10, #0x28]
	add     r0, r10, r6
	mla     r2, r1, r6, r8
	ldrb    r0, [r0, #0x4c]
	mov     r3, #0x1
	str     r2, [r5, r0, lsl #0x3]
	add     r1, r5, r0, lsl #3
	str     r4, [r1, #0x4]
	str     r4, [sp]
	ldr     r2, [r10, #0x28]
	mov     r1, r9
	mov     r2, r2, lsr #2
	str     r2, [sp, #0x4]
	mov     r2, #0x7f
	str     r2, [sp, #0x8]
	str     r4, [sp, #0xc]
	str     r7, [sp, #0x10]
	mov     r2, #0x40
	str     r2, [sp, #0x14]
	ldr     r2, [r5, r0, lsl #0x3]
	bl      Function_20c53b8
	ldr     r0, [r10, #0x48]
	add     r6, r6, #0x1
	cmp     r6, r0
	blt     branch_20b8ad8
.arm
branch_20b8b3c: @ 20b8b3c :arm
	str     r10, [sp]
	ldr     r1, [sp, #0x18]
	ldr     r0, [r10, #0x40]
	ldr     r3, [pc, #0x7c] @ [0x20b8bcc] (=0x20b8d54)
	mov     r2, r1
	bl      Function_20c52d0
	ldr     r0, [pc, #0x74] @ [0x20b8bd0] (=RAM_21cb828)
	mov     r1, r10
	bl      Function_20a4c54
	str     r9, [r10, #0x20]
	ldr     r1, [sp, #0x48]
	str     r11, [r10, #0x2c]
	ldr     r0, [sp, #0x4c]
	str     r1, [r10, #0x30]
	str     r0, [r10, #0x34]
	mov     r0, #0x0
	str     r0, [r10, #0x38]
	str     r0, [r10, #0x3c]
	ldr     r0, [r10, #0x24]
	bic     r0, r0, #0x1
	orr     r0, r0, #0x1
	str     r0, [r10, #0x24]
	bl      OS_DisableInterrupts
	mov     r4, r0
	mov     r2, #0x1
	mov     r0, r10
	mov     r1, #0x0
	str     r2, [r10, #0x2c]
	bl      Function_20b8d64
	mov     r0, r4
	str     r11, [r10, #0x2c]
	bl      OS_RestoreInterrupts
	mov     r0, #0x1
	add     sp, sp, #0x1c
	ldmfd   sp!, {r4-r11,pc}
@ 0x20b8bc8

.word RAM_21cb874 @ 0x20b8bc8
.word Function_20b8d54 @ 0x20b8bcc
.word RAM_21cb828 @ 0x20b8bd0



.arm
.globl Function_20b8bd4
Function_20b8bd4: @ 20b8bd4 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r0, [r4, #0x40]
	mov     r2, #0x1
	mov     r1, #0x0
	mov     r2, r2, lsl r0
	ldr     r0, [r4, #0x44]
	mov     r3, r1
	bl      Function_20c5204
	ldr     r0, [r4, #0x24]
	mov     r0, r0, lsl #30
	movs    r0, r0, asr #31
	ldmnefd sp!, {r4,pc}
	add     r0, r4, #0x8
	bl      Function_20cb848
	add     r0, r4, #0x14
	bl      Function_20cb860
	ldr     r0, [r4, #0x24]
	orr     r0, r0, #0x2
	str     r0, [r4, #0x24]
	ldmfd   sp!, {r4,pc}
@ 0x20b8c28

.arm
.globl Function_20b8c28
Function_20b8c28: @ 20b8c28 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [r0, #0x24]
	mov     r1, r1, lsl #31
	movs    r1, r1, asr #31
	ldmeqfd sp!, {r3,pc}
	bl      Function_20b8cb0
	ldmfd   sp!, {r3,pc}
@ 0x20b8c44


.arm
.globl Function_20b8c44
Function_20b8c44: @ 20b8c44 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r7, r0
	str     r1, [r7, #0x3c]
	ldr     r0, [r7, #0x48]
	mov     r6, #0x0
	cmp     r0, #0x0
	ldmlefd sp!, {r4-r8,pc}
	ldr     r4, [pc, #0x44] @ [0x20b8cac] (=RAM_21cb874)
	mov     r8, #0x1
.arm
branch_20b8c68: @ 20b8c68 :arm
	add     r0, r7, r6
	ldrb    r5, [r0, #0x4c]
	ldr     r1, [r7, #0x3c]
	add     r0, r4, r5, lsl #3
	ldr     r0, [r0, #0x4]
	add     r0, r1, r0
	bl      Function_20c5eec
	mov     r2, r0
	mov     r0, r8, lsl r5
	and     r1, r2, #0xff
	mov     r2, r2, asr #8
	bl      Function_20c5370
	ldr     r0, [r7, #0x48]
	add     r6, r6, #0x1
	cmp     r6, r0
	blt     branch_20b8c68
	ldmfd   sp!, {r4-r8,pc}
@ 0x20b8cac

.word RAM_21cb874 @ 0x20b8cac
.arm
Function_20b8cb0: @ 20b8cb0 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	ldr     r0, [r4, #0x24]
	mov     r0, r0, lsl #30
	movs    r0, r0, asr #31
	beq     branch_20b8d18
	ldr     r0, [r4, #0x40]
	mov     r2, #0x1
	mov     r1, #0x0
	mov     r2, r2, lsl r0
	ldr     r0, [r4, #0x44]
	mov     r3, r1
	bl      Function_20c522c
	add     r0, r4, #0x8
	bl      Function_20cb878
	add     r0, r4, #0x14
	bl      Function_20cb890
	ldr     r0, [r4, #0x24]
	bic     r0, r0, #0x2
	str     r0, [r4, #0x24]
	bl      Function_20c5aac
	mov     r5, r0
	mov     r0, #0x1
	bl      Function_20c5884
	mov     r0, r5
	bl      Function_20c5a40
.arm
branch_20b8d18: @ 20b8d18 :arm
	mov     r0, r4
	bl      Function_20b8d24
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b8d24

.arm
Function_20b8d24: @ 20b8d24 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r0, [r4, #0x40]
	bl      Function_20b7bc4
	ldr     r0, [pc, #0x14] @ [0x20b8d50] (=RAM_21cb828)
	mov     r1, r4
	bl      Function_20a4d5c
	ldr     r0, [r4, #0x24]
	bic     r0, r0, #0x1
	str     r0, [r4, #0x24]
	ldmfd   sp!, {r4,pc}
@ 0x20b8d50

.word RAM_21cb828 @ 0x20b8d50



.arm
Function_20b8d54: @ 20b8d54 :arm
	ldr     r12, [pc, #0x4] @ [0x20b8d60] (=0x20b8d64)
	mov     r1, #0x1
	bx      r12
@ 0x20b8d60

.word Function_20b8d64 @ =0x20b8d64, 0x20b8d60



.arm
Function_20b8d64: @ 20b8d64 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x8
	mov     r5, r0
	mov     r4, r1
	ldr     r0, [r5, #0x28]
	ldr     r1, [r5, #0x2c]
	bl      _u32_div_f
	ldr     r1, [r5, #0x48]
	ldr     r2, [r5, #0x38]
	mov     r3, r0
	mul     r12, r3, r2
	cmp     r1, #0x0
	mov     lr, #0x0
	ble     branch_20b8dc8
	ldr     r2, [pc, #0x68] @ [0x20b8e0c] (=RAM_21cb874)
	ldr     r0, [pc, #0x68] @ [0x20b8e10] (=RAM_21cb834)
.arm
branch_20b8da4: @ 20b8da4 :arm
	add     r1, r5, lr
	ldrb    r1, [r1, #0x4c]
	ldr     r1, [r2, r1, lsl #0x3]
	add     r1, r1, r12
	str     r1, [r0, lr, lsl #0x2]
	ldr     r1, [r5, #0x48]
	add     lr, lr, #0x1
	cmp     lr, r1
	blt     branch_20b8da4
.arm
branch_20b8dc8: @ 20b8dc8 :arm
	ldr     r0, [r5, #0x20]
	ldr     r2, [pc, #0x3c] @ [0x20b8e10] (=RAM_21cb834)
	str     r0, [sp]
	ldr     r12, [r5, #0x34]
	mov     r0, r4
	str     r12, [sp, #0x4]
	ldr     r4, [r5, #0x30]
	blx     r4
	ldr     r0, [r5, #0x38]
	add     r1, r0, #0x1
	str     r1, [r5, #0x38]
	ldr     r0, [r5, #0x2c]
	cmp     r1, r0
	movge   r0, #0x0
	strge   r0, [r5, #0x38]
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b8e0c

.word RAM_21cb874 @ 0x20b8e0c
.word RAM_21cb834 @ 0x20b8e10



.arm
Function_20b8e14: @ 20b8e14 :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [r0, #0x24]
	mov     r1, r1, lsl #30
	movs    r1, r1, asr #31
	ldmeqfd sp!, {r4,pc}
	ldr     r2, [r0, #0x40]
	mov     r3, #0x1
	mov     r1, #0x0
	mov     r2, r3, lsl r2
	ldr     r0, [r0, #0x44]
	mov     r3, r1
	bl      Function_20c522c
	bl      Function_20c5aac
	mov     r4, r0
	mov     r0, #0x1
	bl      Function_20c5884
	mov     r0, r4
	bl      Function_20c5a40
	ldmfd   sp!, {r4,pc}
@ 0x20b8e60


.arm
Function_20b8e60: @ 20b8e60 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r4, r0
	ldr     r0, [r4, #0x24]
	mov     r0, r0, lsl #30
	movs    r0, r0, asr #31
	ldmeqfd sp!, {r4-r6,pc}
	ldr     r0, [r4, #0x38]
	cmp     r0, #0x0
	beq     branch_20b8eb0
	mov     r5, #0x1
.arm
branch_20b8e88: @ 20b8e88 :arm
	bl      OS_DisableInterrupts
	mov     r6, r0
	mov     r0, r4
	mov     r1, r5
	bl      Function_20b8d64
	mov     r0, r6
	bl      OS_RestoreInterrupts
	ldr     r0, [r4, #0x38]
	cmp     r0, #0x0
	bne     branch_20b8e88
.arm
branch_20b8eb0: @ 20b8eb0 :arm
	ldr     r0, [r4, #0x40]
	mov     r2, #0x1
	mov     r1, #0x0
	mov     r2, r2, lsl r0
	ldr     r0, [r4, #0x44]
	mov     r3, r1
	bl      Function_20c5204
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b8ed0


.arm
Function_20b8ed0: @ 20b8ed0 :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0x2c
	mov     r5, r0
	mov     r0, #0x0
	mov     r4, r1
	mov     r7, r2
	mov     r6, r3
	bl      Function_20b8fbc
	ldr     r0, [pc, #0x7c] @ [0x20b8f74] (=RAM_21cb8f4)
	ldr     r0, [r0, #0x48]
	cmp     r0, #0x0
	addne   sp, sp, #0x2c
	mov     r0, #0x0
	ldmnefd sp!, {r4-r7,pc}
	mov     r1, r5
	mov     r2, r4
	bl      MIi_CpuClear32
	mov     r0, r5
	mov     r1, r4
	bl      DC_FlushRange
	str     r7, [sp]
	mov     r0, #0x0
	str     r0, [sp, #0x4]
	str     r0, [sp, #0x8]
	mov     r1, #0x1
	str     r1, [sp, #0xc]
	ldr     r1, [sp, #0x40]
	str     r6, [sp, #0x10]
	str     r1, [sp, #0x14]
	str     r0, [sp, #0x18]
	mov     r1, #0x7f
	str     r1, [sp, #0x1c]
	str     r0, [sp, #0x20]
	str     r0, [sp, #0x24]
	mov     r1, r5
	mov     r3, r4, lsr #1
	add     r2, r5, r4, lsr #1
	str     r0, [sp, #0x28]
	bl      Function_20b919c
	add     sp, sp, #0x2c
	ldmfd   sp!, {r4-r7,pc}
@ 0x20b8f74

.word RAM_21cb8f4 @ 0x20b8f74



.arm
Function_20b8f78: @ 20b8f78 :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, [pc, #0x30] @ [0x20b8fb4] (=RAM_21cb8f4)
	mov     r3, r0
	ldr     r0, [r2, #0x48]
	mov     r2, r1
	cmp     r0, #0x0
	ldr     r1, [pc, #0x20] @ [0x20b8fb8] (=RAM_21cb93c)
	ldmeqfd sp!, {r3,pc}
	ldr     r0, [r1, #0x4]
	cmp     r0, #0x0
	ldmnefd sp!, {r3,pc}
	add     r0, r1, #0x3c
	mov     r1, r3, lsl #8
	bl      Function_20bb3c0
	ldmfd   sp!, {r3,pc}
@ 0x20b8fb4

.word RAM_21cb8f4 @ 0x20b8fb4
.word RAM_21cb93c @ 0x20b8fb8



.arm
Function_20b8fbc: @ 20b8fbc :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [pc, #0x44] @ [0x20b900c] (=RAM_21cb8f4)
	mov     r2, r0
	ldr     r0, [r1, #0x48]
	ldr     r4, [pc, #0x3c] @ [0x20b9010] (=RAM_21cb93c)
	cmp     r0, #0x0
	ldmeqfd sp!, {r4,pc}
	ldr     r0, [r4, #0x4]
	cmp     r0, #0x0
	ldmnefd sp!, {r4,pc}
	cmp     r2, #0x0
	bne     branch_20b8ff4
	bl      Function_20b9508
	ldmfd   sp!, {r4,pc}
@ 0x20b8ff4

.arm
branch_20b8ff4: @ 20b8ff4 :arm
	add     r0, r4, #0x3c
	mov     r1, #0x0
	bl      Function_20bb3c0
	mov     r0, #0x1
	str     r0, [r4, #0x4c]
	ldmfd   sp!, {r4,pc}
@ 0x20b900c

.word RAM_21cb8f4 @ 0x20b900c
.word RAM_21cb93c @ 0x20b9010



.arm
Function_20b9014: @ 20b9014 :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0x2c
	mov     r5, r0
	mov     r4, r1
	mov     r7, r2
	mov     r6, r3
	bl      Function_20b90c0
	ldr     r0, [pc, #0x84] @ [0x20b90bc] (=RAM_21cb8f4)
	ldr     r0, [r0, #0x48]
	cmp     r0, #0x0
	addne   sp, sp, #0x2c
	mov     r0, #0x0
	ldmnefd sp!, {r4-r7,pc}
	mov     r1, r5
	mov     r2, r4
	bl      MIi_CpuClear32
	mov     r0, r5
	mov     r1, r4
	bl      DC_FlushRange
	str     r7, [sp]
	mov     r2, #0x0
	str     r2, [sp, #0x4]
	str     r2, [sp, #0x8]
	mov     r0, #0x1
	str     r0, [sp, #0xc]
	str     r6, [sp, #0x10]
	mov     r1, #0x7f
	str     r1, [sp, #0x14]
	str     r2, [sp, #0x18]
	str     r1, [sp, #0x1c]
	ldr     r2, [sp, #0x40]
	ldr     r1, [sp, #0x44]
	str     r2, [sp, #0x20]
	str     r1, [sp, #0x24]
	ldr     r12, [sp, #0x48]
	mov     r1, r5
	mov     r3, r4, lsr #1
	add     r2, r5, r4, lsr #1
	str     r12, [sp, #0x28]
	bl      Function_20b919c
	add     sp, sp, #0x2c
	ldmfd   sp!, {r4-r7,pc}
@ 0x20b90bc

.word RAM_21cb8f4 @ 0x20b90bc



.arm
.globl Function_20b90c0
Function_20b90c0: @ 20b90c0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x1c] @ [0x20b90e8] (=RAM_21cb8f4)
	ldr     r1, [r0, #0x48]
	cmp     r1, #0x0
	ldmeqfd sp!, {r3,pc}
	ldr     r0, [r0, #0x4c]
	cmp     r0, #0x1
	ldmnefd sp!, {r3,pc}
	bl      Function_20b9508
	ldmfd   sp!, {r3,pc}
@ 0x20b90e8

.word RAM_21cb8f4 @ 0x20b90e8



.arm
Function_20b90ec: @ 20b90ec :arm
	ldr     r0, [pc, #0x4] @ [0x20b90f8] (=RAM_21cb8f4)
	ldr     r0, [r0, #0x48]
	bx      lr
@ 0x20b90f8

.word RAM_21cb8f4 @ 0x20b90f8



.arm
Function_20b90fc: @ 20b90fc :arm
	ldr     r0, [pc, #0xc] @ [0x20b9110] (=RAM_21cb8f4)
	mov     r1, #0x0
	str     r1, [r0]
	str     r1, [r0, #0x48]
	bx      lr
@ 0x20b9110

.word RAM_21cb8f4 @ 0x20b9110



.arm
Function_20b9114: @ 20b9114 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0x74] @ [0x20b9194] (=RAM_21cb8f4)
	ldr     r4, [pc, #0x74] @ [0x20b9198] (=RAM_21cb93c)
	ldr     r0, [r0, #0x48]
	cmp     r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	ldr     r0, [r4, #0x4]
	cmp     r0, #0x0
	ldmnefd sp!, {r3-r5,pc}
	add     r0, r4, #0x3c
	bl      Function_20bb41c
	ldr     r0, [r4, #0x4c]
	cmp     r0, #0x0
	beq     branch_20b9164
	add     r0, r4, #0x3c
	bl      Function_20bb434
	cmp     r0, #0x0
	beq     branch_20b9164
	bl      Function_20b9508
	ldmfd   sp!, {r3-r5,pc}

branch_20b9164: @ 20b9164 :arm
	add     r0, r4, #0x3c
	bl      Function_20bb3e8
	ldr     r1, [r4, #0x50]
	mov     r5, r0, asr #8
	cmp     r5, r1
	ldmeqfd sp!, {r3-r5,pc}
	ldr     r0, [r4, #0x24]
	mov     r1, r5
	mov     r2, #0x0
	bl      Function_20c5370
	str     r5, [r4, #0x50]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b9194

.word RAM_21cb8f4 @ 0x20b9194
.word RAM_21cb93c @ 0x20b9198



.arm
Function_20b919c: @ 20b919c :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x40
	str     r1, [sp, #0x1c]
	mov     r1, #0x0
	str     r0, [sp, #0x18]
	str     r1, [sp, #0x3c]
	mov     r10, r3
	str     r2, [sp, #0x20]
	ldr     r2, [sp, #0x3c]
	ldr     r0, [sp, #0x1c]
	mov     r1, r10
	str     r2, [sp, #0x38]
	mov     r4, r2
	sub     r5, r2, #0x1
	ldr     r9, [sp, #0x74]
	ldr     r8, [sp, #0x7c]
	ldr     r6, [pc, #0x318] @ [0x20b94fc] (=RAM_21cb93c)
	bl      DC_FlushRange
	ldr     r0, [sp, #0x20]
	mov     r1, r10
	bl      DC_FlushRange
	ldr     r0, [sp, #0x68]
	ldr     r1, [sp, #0x78]
	cmp     r0, #0x1
	moveq   r7, #0x1
	ldr     r0, [pc, #0x2f8] @ [0x20b9500] (=0xffb0ff)
	movne   r7, #0x0
	bl      _s32_div_f
	str     r0, [sp, #0x34]
	ldr     r0, [sp, #0x8c]
	cmp     r0, #0x0
	beq     branch_20b926c
	ldr     r1, [sp, #0x34]
	mov     r0, r10
	add     r1, r1, #0x10
	bic     r1, r1, #0x1f
	str     r1, [sp, #0x34]
	mov     r1, r1, asr #5
	str     r1, [sp, #0x2c]
	cmp     r7, #0x0
	ldr     r1, [sp, #0x88]
	moveq   r0, r10, lsr #1
	bl      _u32_div_f
	ldr     r1, [sp, #0x2c]
	mov     r11, #0x20
	mul     r0, r1, r0
	str     r0, [sp, #0x30]
	cmp     r7, #0x0
	ldr     r0, [sp, #0x2c]
	moveq   r11, r11, lsr #1
	mul     r0, r11, r0
	mov     r11, r0
.arm
branch_20b926c: @ 20b926c :arm
	cmp     r7, #0x0
	movne   r0, #0x0
	strne   r0, [sp, #0x28]
	moveq   r0, #0x1
	streq   r0, [sp, #0x28]
	cmp     r7, #0x0
	movne   r0, #0x1
	strne   r0, [sp, #0x24]
	moveq   r0, #0x0
	streq   r0, [sp, #0x24]
	ldr     r0, [sp, #0x18]
	orr     r4, r4, #0x3
	cmp     r0, #0x2
	ldr     r0, [sp, #0x3c]
	orr     r0, r0, #0xa
	str     r0, [sp, #0x3c]
	strne   r0, [sp, #0x38]
	ldr     r0, [sp, #0x8c]
	cmp     r0, #0x0
	beq     branch_20b92d0
	bl      Function_20b7b7c
	movs    r5, r0
	addmi   sp, sp, #0x40
	movmi   r0, #0x0
	ldmmifd sp!, {r3-r11,pc}
.arm
branch_20b92d0: @ 20b92d0 :arm
	mov     r0, r4
	bl      Function_20b7b3c
	cmp     r0, #0x0
	bne     branch_20b92fc
	cmp     r5, #0x0
	blt     branch_20b92f0
	mov     r0, r5
	bl      Function_20b7bc4
.arm
branch_20b92f0: @ 20b92f0 :arm
	add     sp, sp, #0x40
	mov     r0, #0x0
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b92fc

.arm
branch_20b92fc: @ 20b92fc :arm
	ldr     r0, [sp, #0x3c]
	bl      Function_20b7ac4
	cmp     r0, #0x0
	bne     branch_20b9330
	cmp     r5, #0x0
	blt     branch_20b931c
	mov     r0, r5
	bl      Function_20b7bc4
.arm
branch_20b931c: @ 20b931c :arm
	mov     r0, r4
	bl      Function_20b7b60
	add     sp, sp, #0x40
	mov     r0, #0x0
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b9330

.arm
branch_20b9330: @ 20b9330 :arm
	mov     r7, r10, lsr #2
	mov     r0, #0x0
	stmea   sp, {r0,r7,r8}
	str     r0, [sp, #0xc]
	ldr     r0, [sp, #0x34]
	cmp     r9, #0x0
	str     r0, [sp, #0x10]
	ldr     r1, [sp, #0x80]
	movne   r3, #0x1
	str     r1, [sp, #0x14]
	ldr     r1, [sp, #0x28]
	ldr     r2, [sp, #0x1c]
	moveq   r3, #0x2
	mov     r0, #0x1
	bl      Function_20c53b8
	ldr     r1, [sp, #0x6c]
	str     r9, [sp]
	str     r1, [sp, #0x4]
	ldr     r0, [sp, #0x70]
	ldr     r1, [sp, #0x24]
	str     r0, [sp, #0x8]
	ldr     r2, [sp, #0x1c]
	mov     r0, #0x0
	mov     r3, r7
	bl      Function_20c5290
	mov     r0, #0x0
	stmea   sp, {r0,r7,r8}
	str     r0, [sp, #0xc]
	ldr     r0, [sp, #0x34]
	cmp     r9, #0x0
	str     r0, [sp, #0x10]
	ldr     r2, [sp, #0x84]
	movne   r3, #0x1
	str     r2, [sp, #0x14]
	ldr     r1, [sp, #0x28]
	ldr     r2, [sp, #0x20]
	moveq   r3, #0x2
	mov     r0, #0x3
	bl      Function_20c53b8
	ldr     r2, [sp, #0x6c]
	str     r9, [sp]
	str     r2, [sp, #0x4]
	ldr     r0, [sp, #0x70]
	ldr     r1, [sp, #0x24]
	str     r0, [sp, #0x8]
	ldr     r2, [sp, #0x20]
	mov     r3, r7
	mov     r0, #0x1
	bl      Function_20c5290
	cmp     r5, #0x0
	blt     branch_20b9418
	ldr     r1, [sp, #0x30]
	ldr     r3, [pc, #0xfc] @ [0x20b9504] (=Function_20b96dc)
	ldr     r2, [sp, #0x30]
	mov     r0, r5
	add     r1, r1, r11
	str     r6, [sp]
	bl      Function_20c52d0
.arm
branch_20b9418: @ 20b9418 :arm
	ldr     r0, [sp, #0x18]
	cmp     r0, #0x1
	bne     branch_20b9438
	mov     r0, #0x1
	mov     r2, r0
	mov     r3, r0
	mov     r1, #0x2
	bl      Function_20c5484
.arm
branch_20b9438: @ 20b9438 :arm
	cmp     r5, #0x0
	movge   r0, #0x1
	movge   r2, r0, lsl r5
	ldr     r0, [sp, #0x38]
	movlt   r2, #0x0
	mov     r1, r4
	mov     r3, #0x0
	bl      Function_20c5204
	ldr     r0, [sp, #0x18]
	ldr     r2, [sp, #0x38]
	str     r0, [r6, #0x4]
	mov     r0, #0x1
	str     r2, [r6, #0x24]
	ldr     r2, [sp, #0x1c]
	str     r0, [r6]
	ldr     r0, [sp, #0x3c]
	ldr     r3, [sp, #0x68]
	str     r2, [r6, #0xc]
	ldr     r2, [sp, #0x20]
	str     r0, [r6, #0x20]
	ldr     r1, [sp, #0x88]
	mov     r0, r10
	str     r4, [r6, #0x28]
	str     r5, [r6, #0x2c]
	str     r3, [r6, #0x8]
	str     r2, [r6, #0x10]
	str     r10, [r6, #0x14]
	bl      _u32_div_f
	ldr     r3, [sp, #0x88]
	ldr     r2, [sp, #0x8c]
	ldr     r1, [sp, #0x90]
	str     r0, [r6, #0x18]
	mov     r4, #0x0
	add     r0, r6, #0x3c
	str     r4, [r6, #0x1c]
	str     r3, [r6, #0x30]
	str     r2, [r6, #0x34]
	str     r1, [r6, #0x38]
	str     r8, [r6, #0x50]
	bl      Function_20bb3a8
	add     r0, r6, #0x3c
	mov     r1, r8, lsl #8
	mov     r2, #0x1
	bl      Function_20bb3c0
	mov     r0, r4
	str     r0, [r6, #0x4c]
	mov     r0, #0x1
	add     sp, sp, #0x40
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b94fc

.word RAM_21cb93c @ 0x20b94fc
.word 0xffb0ff @ 0x20b9500
.word Function_20b96dc @ 0x20b9504



.arm
Function_20b9508: @ 20b9508 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r0, [pc, #0xd8] @ [0x20b95ec] (=RAM_21cb8f4)
	ldr     r4, [pc, #0xd8] @ [0x20b95f0] (=RAM_21cb93c)
	ldr     r0, [r0, #0x48]
	cmp     r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	ldr     r1, [r4, #0x2c]
	mov     r3, #0x0
	cmp     r1, #0x0
	movge   r7, #0x1
	movlt   r7, #0x0
	cmp     r7, #0x0
	movne   r0, #0x1
	movne   r2, r0, lsl r1
	ldr     r0, [r4, #0x24]
	ldr     r1, [r4, #0x28]
	moveq   r2, #0x0
	bl      Function_20c522c
	cmp     r7, #0x0
	beq     branch_20b9590
	bl      Function_20c5aac
	mov     r5, r0
	mov     r0, #0x1
	bl      Function_20c5884
	mov     r0, r5
	bl      Function_20c5a40
	ldr     r6, [pc, #0x7c] @ [0x20b95f4] (=RAM_21cb8fc)
	mov     r5, #0x0
.arm
branch_20b9578: @ 20b9578 :arm
	mov     r0, r6
	mov     r1, r5
	mov     r2, r5
	bl      OS_ReceiveMessage
	cmp     r0, #0x0
	bne     branch_20b9578
.arm
branch_20b9590: @ 20b9590 :arm
	ldr     r0, [r4, #0x28]
	cmp     r0, #0x0
	beq     branch_20b95a0
	bl      Function_20b7b60
.arm
branch_20b95a0: @ 20b95a0 :arm
	ldr     r0, [r4, #0x20]
	cmp     r0, #0x0
	beq     branch_20b95b0
	bl      Function_20b7b0c
.arm
branch_20b95b0: @ 20b95b0 :arm
	cmp     r7, #0x0
	beq     branch_20b95c0
	ldr     r0, [r4, #0x2c]
	bl      Function_20b7bc4
.arm
branch_20b95c0: @ 20b95c0 :arm
	ldr     r0, [r4, #0x4]
	cmp     r0, #0x1
	bne     branch_20b95e0
	mov     r0, #0x0
	mov     r1, r0
	mov     r2, r0
	mov     r3, r0
	bl      Function_20c5484
branch_20b95e0: @ 20b95e0 :arm
	mov     r0, #0x0
	str     r0, [r4]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b95ec

.word RAM_21cb8f4 @ 0x20b95ec
.word RAM_21cb93c @ 0x20b95f0
.word RAM_21cb8fc @ 0x20b95f4



.arm
Function_20b95f8: @ 20b95f8 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x4c] @ [0x20b9650] (=RAM_21cb8f4)
	ldr     r3, [pc, #0x4c] @ [0x20b9654] (=RAM_21cb93c)
	ldr     r0, [r0, #0x48]
	cmp     r0, #0x0
	ldmeqfd sp!, {r4,pc}
	ldr     r1, [r3, #0x2c]
	cmp     r1, #0x0
	movge   r0, #0x1
	movge   r2, r0, lsl r1
	ldr     r0, [r3, #0x24]
	ldr     r1, [r3, #0x28]
	movlt   r2, #0x0
	mov     r3, #0x0
	bl      Function_20c522c
	bl      Function_20c5aac
	mov     r4, r0
	mov     r0, #0x1
	bl      Function_20c5884
	mov     r0, r4
	bl      Function_20c5a40
	ldmfd   sp!, {r4,pc}
@ 0x20b9650

.word RAM_21cb8f4 @ 0x20b9650
.word RAM_21cb93c @ 0x20b9654



.arm
Function_20b9658: @ 20b9658 :arm
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0x70] @ [0x20b96d4] (=RAM_21cb8f4)
	ldr     r4, [pc, #0x70] @ [0x20b96d8] (=RAM_21cb93c)
	ldr     r0, [r0, #0x48]
	cmp     r0, #0x0
	ldmeqfd sp!, {r4,pc}
	ldr     r1, [r4, #0xc]
	mov     r0, #0x0
	ldr     r2, [r4, #0x14]
	str     r0, [r4, #0x1c]
	bl      MIi_CpuClear32
	ldr     r1, [r4, #0x10]
	ldr     r2, [r4, #0x14]
	mov     r0, #0x0
	bl      MIi_CpuClear32
	ldr     r0, [r4, #0xc]
	ldr     r1, [r4, #0x14]
	bl      DC_FlushRange
	ldr     r0, [r4, #0x10]
	ldr     r1, [r4, #0x14]
	bl      DC_FlushRange
	ldr     r1, [r4, #0x2c]
	mov     r3, #0x0
	cmp     r1, #0x0
	movge   r0, #0x1
	movge   r2, r0, lsl r1
	ldr     r0, [r4, #0x24]
	ldr     r1, [r4, #0x28]
	movlt   r2, #0x0
	bl      Function_20c5204
	ldmfd   sp!, {r4,pc}
@ 0x20b96d4

.word RAM_21cb8f4 @ 0x20b96d4
.word RAM_21cb93c @ 0x20b96d8



.arm
Function_20b96dc: @ 20b96dc :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	ldr     r6, [r7, #0x18]
	ldr     r1, [r7, #0x1c]
	ldr     r0, [pc, #0xc8] @ [0x20b97bc] (=RAM_21cb8f4)
	mul     r2, r6, r1
	ldr     r4, [r7, #0xc]
	ldr     r3, [r7, #0x10]
	ldr     r1, [r0]
	add     r4, r4, r2
	cmp     r1, #0x0
	add     r5, r3, r2
	beq     branch_20b9764
	ldr     r1, [r0, #0x4]
	mov     r0, #0x14
	mul     r3, r1, r0
	ldr     r1, [pc, #0x9c] @ [0x20b97c0] (=RAM_21cb990)
	ldr     r0, [pc, #0x9c] @ [0x20b97c4] (=RAM_21cb8fc)
	str     r7, [r1, r3]
	add     r1, r1, r3
	str     r6, [r1, #0x4]
	str     r2, [r1, #0x8]
	str     r4, [r1, #0xc]
	mov     r2, #0x0
	str     r5, [r1, #0x10]
	bl      OS_SendMessage
	ldr     r0, [pc, #0x70] @ [0x20b97bc] (=RAM_21cb8f4)
	ldr     r1, [r0, #0x4]
	add     r1, r1, #0x1
	str     r1, [r0, #0x4]
	cmp     r1, #0x8
	movge   r1, #0x0
	strge   r1, [r0, #0x4]
	b       branch_20b979c
@ 0x20b9764

.arm
branch_20b9764: @ 20b9764 :arm
	mov     r0, r4
	mov     r1, r6
	bl      DC_InvalidateRange
	mov     r0, r5
	mov     r1, r6
	bl      DC_InvalidateRange
	ldr     r1, [r7, #0x38]
	mov     r0, r4
	str     r1, [sp]
	ldr     r3, [r7, #0x8]
	ldr     r4, [r7, #0x34]
	mov     r1, r5
	mov     r2, r6
	blx     r4
.arm
branch_20b979c: @ 20b979c :arm
	ldr     r0, [r7, #0x1c]
	add     r1, r0, #0x1
	str     r1, [r7, #0x1c]
	ldr     r0, [r7, #0x30]
	cmp     r1, r0
	movge   r0, #0x0
	strge   r0, [r7, #0x1c]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20b97bc

.word RAM_21cb8f4 @ 0x20b97bc
.word RAM_21cb990 @ 0x20b97c0
.word RAM_21cb8fc @ 0x20b97c4



.arm
Function_20b97c8: @ 20b97c8 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r12, #0x0
	str     r12, [r6, #0x8c]
	str     r12, [r6, #0x84]
	str     r12, [r6, #0x88]
	add     r0, r6, #0x7c
	mov     r5, r2
	mov     r4, r3
	str     r12, [r6, #0x90]
	bl      FS_ConvertPathToFileID
	cmp     r0, #0x0
	ldmeqfd sp!, {r4-r6,pc}
	add     r0, r6, #0x34
	bl      FS_InitFile
	add     r1, r6, #0x7c
	add     r0, r6, #0x34
	ldmia   r1, {r1,r2}
	bl      FS_OpenFileFast
	cmp     r0, #0x0
	ldmeqfd sp!, {r4-r6,pc}
	mov     r3, #0x1
	mov     r0, r6
	mov     r1, r5
	mov     r2, r4
	str     r3, [r6, #0x30]
	bl      Function_20b9848
	cmp     r0, #0x0
	ldrne   r0, [pc, #0x4] @ [0x20b9844] (=RAM_21cbef0)
	strne   r6, [r0]
	ldmfd   sp!, {r4-r6,pc}
@ 0x20b9844

.word RAM_21cbef0 @ 0x20b9844



.arm
Function_20b9848: @ 20b9848 :arm
	stmfd   sp!, {r3-r6,lr}
	sub     sp, sp, #0x4
	mov     r5, r0
	mov     r4, r1
	mov     r1, #0x0
	mov     r6, r2
	mov     r2, r1
	add     r0, r5, #0x34
	bl      FS_SeekFile
	cmp     r0, #0x0
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r6,pc}
	mov     r1, r5
	add     r0, r5, #0x34
	mov     r2, #0x30
	bl      FS_ReadFile
	cmp     r0, #0x30
	addne   sp, sp, #0x4
	movne   r0, #0x0
	ldmnefd sp!, {r3-r6,pc}
	cmp     r4, #0x0
	beq     branch_20b9a08
	mov     r0, #0x0
	str     r0, [sp]
	ldr     r1, [r5, #0x1c]
	ldr     r2, [pc, #0x15c] @ [0x20b9a14] (=Function_20b9eb0)
	mov     r0, r4
	mov     r3, r5
	bl      Function_20ba018
	cmp     r0, #0x0
	str     r0, [r5, #0x8c]
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r6,pc}
	ldr     r1, [r5, #0x18]
	add     r0, r5, #0x34
	mov     r2, #0x0
	bl      FS_SeekFile
	cmp     r0, #0x0
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r6,pc}
	ldr     r1, [r5, #0x8c]
	ldr     r2, [r5, #0x1c]
	add     r0, r5, #0x34
	bl      FS_ReadFile
	ldr     r1, [r5, #0x1c]
	cmp     r0, r1
	addne   sp, sp, #0x4
	mov     r0, #0x0
	ldmnefd sp!, {r3-r6,pc}
	str     r0, [sp]
	ldr     r1, [r5, #0x24]
	ldr     r2, [pc, #0xf0] @ [0x20b9a18] (=Function_20b9ebc)
	mov     r0, r4
	mov     r3, r5
	bl      Function_20ba018
	cmp     r0, #0x0
	str     r0, [r5, #0x84]
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r6,pc}
	ldr     r1, [r5, #0x20]
	add     r0, r5, #0x34
	mov     r2, #0x0
	bl      FS_SeekFile
	cmp     r0, #0x0
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r6,pc}
	ldr     r1, [r5, #0x84]
	ldr     r2, [r5, #0x24]
	add     r0, r5, #0x34
	bl      FS_ReadFile
	ldr     r1, [r5, #0x24]
	cmp     r0, r1
	addne   sp, sp, #0x4
	movne   r0, #0x0
	ldmnefd sp!, {r3-r6,pc}
	cmp     r6, #0x0
	ldrne   r1, [r5, #0x14]
	cmpne   r1, #0x0
	beq     branch_20b9a08
	ldr     r2, [pc, #0x7c] @ [0x20b9a1c] (=Function_20b9ec8)
	mov     r12, #0x0
	mov     r0, r4
	mov     r3, r5
	str     r12, [sp]
	bl      Function_20ba018
	cmp     r0, #0x0
	str     r0, [r5, #0x88]
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r6,pc}
	ldr     r1, [r5, #0x10]
	add     r0, r5, #0x34
	mov     r2, #0x0
	bl      FS_SeekFile
	cmp     r0, #0x0
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r6,pc}
	ldr     r1, [r5, #0x88]
	ldr     r2, [r5, #0x14]
	add     r0, r5, #0x34
	bl      FS_ReadFile
	ldr     r1, [r5, #0x14]
	cmp     r0, r1
	addne   sp, sp, #0x4
	movne   r0, #0x0
	ldmnefd sp!, {r3-r6,pc}
.arm
branch_20b9a08: @ 20b9a08 :arm
	mov     r0, #0x1
	add     sp, sp, #0x4
	ldmfd   sp!, {r3-r6,pc}
@ 0x20b9a14

.word Function_20b9eb0 @ 0x20b9a14
.word Function_20b9ebc @ 0x20b9a18
.word Function_20b9ec8 @ 0x20b9a1c



.arm
.globl Function_20b9a20
Function_20b9a20: @ 20b9a20 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	mov     r0, r4
	mov     r1, r5
	mov     r2, #0x30
	bl      MI_CpuCopy32
	ldr     r0, [r5, #0x18]
	mov     r3, #0x0
	cmp     r0, #0x0
	moveq   r0, #0x0
	addne   r0, r4, r0
	str     r0, [r5, #0x8c]
	ldr     r0, [r5, #0x20]
	cmp     r0, #0x0
	moveq   r0, #0x0
	addne   r0, r4, r0
	str     r0, [r5, #0x84]
	ldr     r0, [r5, #0x10]
	cmp     r0, #0x0
	moveq   r0, #0x0
	addne   r0, r4, r0
	str     r0, [r5, #0x88]
	str     r3, [r5, #0x90]
	ldr     r2, [r5, #0x84]
	ldr     r0, [r2, #0x8]
	cmp     r0, #0x0
	bls     branch_20b9acc
	mov     r12, r3
	mov     r1, r3
.arm
branch_20b9a98: @ 20b9a98 :arm
	add     r2, r2, #0xc
	ldr     r0, [r2, r12]
	add     r2, r2, r12
	cmp     r0, #0x0
	moveq   r0, r1
	addne   r0, r4, r0
	str     r0, [r2, #0x8]
	ldr     r2, [r5, #0x84]
	add     r3, r3, #0x1
	ldr     r0, [r2, #0x8]
	add     r12, r12, #0x10
	cmp     r3, r0
	blo     branch_20b9a98
.arm
branch_20b9acc: @ 20b9acc :arm
	mov     r1, #0x0
	ldr     r0, [pc, #0x8] @ [0x20b9ae0] (=RAM_21cbef0)
	str     r1, [r5, #0x30]
	str     r5, [r0]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b9ae0

.word RAM_21cbef0 @ 0x20b9ae0



.arm
Function_20b9ae4: @ 20b9ae4 :arm
	ldr     r1, [pc, #0xc] @ [0x20b9af8] (=RAM_21cbef0)
	ldr     r2, [r1]
	str     r0, [r1]
	mov     r0, r2
	bx      lr
@ 0x20b9af8

.word RAM_21cbef0 @ 0x20b9af8



.arm
Function_20b9afc: @ 20b9afc :arm
	ldr     r0, [pc, #0x4] @ [0x20b9b08] (=RAM_21cbef0)
	ldr     r0, [r0]
	bx      lr
@ 0x20b9b08

.word RAM_21cbef0 @ 0x20b9b08



.arm
Function_20b9b0c: @ 20b9b0c :arm
	stmfd   sp!, {r3,lr}
	bl      Function_20b9b24
	cmp     r0, #0x0
	moveq   r0, #0x0
	addne   r0, r0, #0x4
	ldmfd   sp!, {r3,pc}
@ 0x20b9b24


/* Input:
r0: dimensions??
*/
.arm
Function_20b9b24: @ 20b9b24 :arm
	ldr     r1, =RAM_21cbef0
	ldr     r3, [r1]
	ldr     r2, [r3, #0x8c]
	ldr     r1, [r2, #0x8]
	cmp     r1, #0x0
	moveq   r2, #0x0
	addne   r2, r2, r1
	cmp     r2, #0x0
	moveq   r0, #0x0
	bxeq    lr

	cmp     r0, #0x0
	movlt   r0, #0x0
	bxlt    lr

	ldr     r1, [r2]
	cmp     r0, r1
	movcs   r0, #0x0
	bxcs    lr

	add     r0, r2, r0, lsl #2
	ldr     r1, [r0, #0x4]
	ldr     r0, [r3, #0x8c]
	cmp     r1, #0x0
	moveq   r0, #0x0
	addne   r0, r0, r1
	bx      lr
@ 0x20b9b84

.align 2
.pool



.arm
Function_20b9b88: @ 20b9b88 :arm
	ldr     r1, =RAM_21cbef0
	ldr     r3, [r1]
	ldr     r2, [r3, #0x8c]
	ldr     r1, [r2, #0xc]
	cmp     r1, #0x0
	moveq   r2, #0x0
	addne   r2, r2, r1
	cmp     r2, #0x0
	moveq   r0, #0x0
	bxeq    lr

	cmp     r0, #0x0
	movlt   r0, #0x0
	bxlt    lr

	ldr     r1, [r2]
	cmp     r0, r1
	movcs   r0, #0x0
	bxcs    lr

	add     r0, r2, r0, lsl #2
	ldr     r1, [r0, #0x4]
	ldr     r0, [r3, #0x8c]
	cmp     r1, #0x0
	moveq   r0, #0x0
	addne   r0, r0, r1
	bx      lr
@ 0x20b9be8

.align 2
.pool



.arm
Function_20b9bec: @ 20b9bec :arm
	ldr     r1, [pc, #0x58] @ [0x20b9c4c] (=RAM_21cbef0)
	ldr     r3, [r1]
	ldr     r2, [r3, #0x8c]
	ldr     r1, [r2, #0x10]
	cmp     r1, #0x0
	moveq   r2, #0x0
	addne   r2, r2, r1
	cmp     r2, #0x0
	moveq   r0, #0x0
	bxeq    lr
	cmp     r0, #0x0
	movlt   r0, #0x0
	bxlt    lr
	ldr     r1, [r2]
	cmp     r0, r1
	movcs   r0, #0x0
	bxcs    lr
	add     r0, r2, r0, lsl #2
	ldr     r1, [r0, #0x4]
	ldr     r0, [r3, #0x8c]
	cmp     r1, #0x0
	moveq   r0, #0x0
	addne   r0, r0, r1
	bx      lr
@ 0x20b9c4c

.word RAM_21cbef0 @ 0x20b9c4c
.arm
Function_20b9c50: @ 20b9c50 :arm
	ldr     r1, [pc, #0x58] @ [0x20b9cb0] (=RAM_21cbef0)
	ldr     r3, [r1]
	ldr     r2, [r3, #0x8c]
	ldr     r1, [r2, #0x14]
	cmp     r1, #0x0
	moveq   r2, #0x0
	addne   r2, r2, r1
	cmp     r2, #0x0
	moveq   r0, #0x0
	bxeq    lr
	cmp     r0, #0x0
	movlt   r0, #0x0
	bxlt    lr
	ldr     r1, [r2]
	cmp     r0, r1
	movcs   r0, #0x0
	bxcs    lr
	add     r0, r2, r0, lsl #2
	ldr     r1, [r0, #0x4]
	ldr     r0, [r3, #0x8c]
	cmp     r1, #0x0
	moveq   r0, #0x0
	addne   r0, r0, r1
	bx      lr
@ 0x20b9cb0

.word RAM_21cbef0 @ 0x20b9cb0
.arm
Function_20b9cb4: @ 20b9cb4 :arm
	ldr     r1, [pc, #0x58] @ [0x20b9d14] (=RAM_21cbef0)
	ldr     r3, [r1]
	ldr     r2, [r3, #0x8c]
	ldr     r1, [r2, #0x18]
	cmp     r1, #0x0
	moveq   r2, #0x0
	addne   r2, r2, r1
	cmp     r2, #0x0
	moveq   r0, #0x0
	bxeq    lr
	cmp     r0, #0x0
	movlt   r0, #0x0
	bxlt    lr
	ldr     r1, [r2]
	cmp     r0, r1
	movcs   r0, #0x0
	bxcs    lr
	add     r0, r2, r0, lsl #2
	ldr     r1, [r0, #0x4]
	ldr     r0, [r3, #0x8c]
	cmp     r1, #0x0
	moveq   r0, #0x0
	addne   r0, r0, r1
	bx      lr
@ 0x20b9d14

.word RAM_21cbef0 @ 0x20b9d14
.arm
Function_20b9d18: @ 20b9d18 :arm
	ldr     r1, [pc, #0x58] @ [0x20b9d78] (=RAM_21cbef0)
	ldr     r3, [r1]
	ldr     r2, [r3, #0x8c]
	ldr     r1, [r2, #0x1c]
	cmp     r1, #0x0
	moveq   r2, #0x0
	addne   r2, r2, r1
	cmp     r2, #0x0
	moveq   r0, #0x0
	bxeq    lr
	cmp     r0, #0x0
	movlt   r0, #0x0
	bxlt    lr
	ldr     r1, [r2]
	cmp     r0, r1
	movcs   r0, #0x0
	bxcs    lr
	add     r0, r2, r0, lsl #2
	ldr     r1, [r0, #0x4]
	ldr     r0, [r3, #0x8c]
	cmp     r1, #0x0
	moveq   r0, #0x0
	addne   r0, r0, r1
	bx      lr
@ 0x20b9d78

.word RAM_21cbef0 @ 0x20b9d78
.arm
Function_20b9d7c: @ 20b9d7c :arm
	ldr     r1, [pc, #0x1c] @ [0x20b9da0] (=RAM_21cbef0)
	ldr     r1, [r1]
	ldr     r2, [r1, #0x84]
	ldr     r1, [r2, #0x8]
	cmp     r0, r1
	movcs   r0, #0x0
	addcc   r0, r2, r0, lsl #4
	ldrcc   r0, [r0, #0x10]
	bx      lr
@ 0x20b9da0

.word RAM_21cbef0 @ 0x20b9da0
.arm
Function_20b9da4: @ 20b9da4 :arm
	stmfd   sp!, {r3-r11,lr}
	ldr     r4, [pc, #0xb8] @ [0x20b9e68] (=RAM_21cbef0)
	mov     r9, r2
	ldr     r7, [r4]
	mov     r10, r1
	ldr     r2, [r7, #0x84]
	mov     r8, r3
	ldr     r1, [r2, #0x8]
	cmp     r0, r1
	mvncs   r0, #0x0
	ldmcsfd sp!, {r3-r11,pc}
	ldr     r5, [r7, #0x90]
	add     r1, r2, #0xc
	cmp     r5, #0x0
	moveq   r5, r9
	add     r11, r1, r0, lsl #4
	cmp     r9, #0x0
	mov     r4, #0x0
	ble     branch_20b9e60
.arm
branch_20b9df0: @ 20b9df0 :arm
	ldr     r0, [r11, #0x4]
	sub     r6, r9, r4
	cmp     r6, r5
	movgt   r6, r5
	sub     r0, r0, r8
	cmp     r6, r0
	movhi   r6, r0
	cmp     r6, #0x0
	beq     branch_20b9e60
	ldr     r1, [r11]
	mov     r2, #0x0
	add     r0, r7, #0x34
	add     r1, r1, r8
	bl      FS_SeekFile
	cmp     r0, #0x0
	mvneq   r0, #0x0
	ldmeqfd sp!, {r3-r11,pc}
	mov     r1, r10
	mov     r2, r6
	add     r0, r7, #0x34
	bl      FS_ReadFile
	cmp     r0, #0x0
	ldmltfd sp!, {r3-r11,pc}
	add     r4, r4, r0
	cmp     r4, r9
	add     r8, r8, r0
	add     r10, r10, r0
	blt     branch_20b9df0
.arm
branch_20b9e60: @ 20b9e60 :arm
	mov     r0, r4
	ldmfd   sp!, {r3-r11,pc}
@ 0x20b9e68

.word RAM_21cbef0 @ 0x20b9e68
.arm
Function_20b9e6c: @ 20b9e6c :arm
	ldr     r1, [pc, #0x1c] @ [0x20b9e90] (=RAM_21cbef0)
	ldr     r1, [r1]
	ldr     r2, [r1, #0x84]
	ldr     r1, [r2, #0x8]
	cmp     r0, r1
	movcs   r0, #0x0
	addcc   r0, r2, r0, lsl #4
	ldrcc   r0, [r0, #0x14]
	bx      lr
@ 0x20b9e90

.word RAM_21cbef0 @ 0x20b9e90
.arm
Function_20b9e94: @ 20b9e94 :arm
	ldr     r2, [pc, #0x10] @ [0x20b9eac] (=RAM_21cbef0)
	ldr     r2, [r2]
	ldr     r2, [r2, #0x84]
	add     r0, r2, r0, lsl #4
	str     r1, [r0, #0x14]
	bx      lr
@ 0x20b9eac

.word RAM_21cbef0 @ 0x20b9eac



.arm
Function_20b9eb0: @ 20b9eb0 :arm
	mov     r0, #0x0
	str     r0, [r2, #0x8c]
	bx      lr
@ 0x20b9ebc


.arm
Function_20b9ebc: @ 20b9ebc :arm
	mov     r0, #0x0
	str     r0, [r2, #0x84]
	bx      lr
@ 0x20b9ec8


.arm
Function_20b9ec8: @ 20b9ec8 :arm
	mov     r0, #0x0
	str     r0, [r2, #0x88]
	bx      lr
@ 0x20b9ed4


.arm
Function_20b9ed4: @ 20b9ed4 :arm
	stmfd   sp!, {r3-r5,lr}
	add     r2, r0, #0x3
	add     r0, r0, r1
	bic     r5, r2, #0x3
	cmp     r5, r0
	movhi   r0, #0x0
	ldmhifd sp!, {r3-r5,pc}
	sub     r1, r0, r5
	cmp     r1, #0x10
	movcc   r0, #0x0
	ldmccfd sp!, {r3-r5,pc}
	add     r0, r5, #0x10
	sub     r1, r1, #0x10
	mov     r2, #0x0
	bl      Function_20a579c
	movs    r4, r0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	mov     r0, r5
	mov     r1, r4
	bl      Function_20ba1b0
	cmp     r0, #0x0
	movne   r0, r5
	ldmnefd sp!, {r3-r5,pc}
	mov     r0, r4
	bl      Function_20a57d4
	mov     r0, #0x0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20b9f44


.arm
Function_20b9f44: @ 20b9f44 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20b9f5c
	ldr     r0, [r4]
	bl      Function_20a57d4
	ldmfd   sp!, {r4,pc}
@ 0x20b9f5c


.arm
Function_20b9f5c: @ 20b9f5c :arm
	stmfd   sp!, {r4-r10,lr}
	mov     r8, r0
	mov     r6, #0x0
	mov     r1, r6
	add     r0, r8, #0x4
	bl      Function_20a4dd4
	movs    r5, r0
	beq     branch_20b9ff4
	mov     r10, #0x1
	mov     r9, r6
	mov     r4, r6
.arm
branch_20b9f88: @ 20b9f88 :arm
	mov     r0, r5
	mov     r1, r4
	bl      Function_20a4dd4
	movs    r7, r0
	beq     branch_20b9fd4
.arm
branch_20b9f9c: @ 20b9f9c :arm
	ldr     r12, [r7, #0xc]
	cmp     r12, #0x0
	beq     branch_20b9fc0
	ldr     r1, [r7, #0x8]
	ldr     r2, [r7, #0x10]
	ldr     r3, [r7, #0x14]
	add     r0, r7, #0x20
	blx     r12
	mov     r6, r10
.arm
branch_20b9fc0: @ 20b9fc0 :arm
	mov     r0, r5
	mov     r1, r7
	bl      Function_20a4dd4
	movs    r7, r0
	bne     branch_20b9f9c
.arm
branch_20b9fd4: @ 20b9fd4 :arm
	mov     r1, r5
	add     r0, r8, #0x4
	bl      Function_20a4d5c
	mov     r1, r9
	add     r0, r8, #0x4
	bl      Function_20a4dd4
	movs    r5, r0
	bne     branch_20b9f88
.arm
branch_20b9ff4: @ 20b9ff4 :arm
	ldr     r0, [r8]
	mov     r1, #0x3
	bl      Function_20a5814
	cmp     r6, #0x0
	beq     branch_20ba00c
	bl      Function_20ba220
.arm
branch_20ba00c: @ 20ba00c :arm
	mov     r0, r8
	bl      Function_20ba1e4
	ldmfd   sp!, {r4-r10,pc}
@ 0x20ba018

.arm
Function_20ba018: @ 20ba018 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r7, r1
	mov     r8, r0
	add     r0, r7, #0x1f
	bic     r1, r0, #0x1f
	mov     r6, r2
	ldr     r0, [r8]
	add     r1, r1, #0x20
	mov     r2, #0x20
	mov     r5, r3
	bl      Function_20a57e0
	movs    r4, r0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4-r8,pc}
	add     r0, r8, #0x4
	mov     r1, #0x0
	bl      Function_20a4dd4
	str     r7, [r4, #0x8]
	str     r6, [r4, #0xc]
	ldr     r2, [sp, #0x18]
	str     r5, [r4, #0x10]
	mov     r1, r4
	str     r2, [r4, #0x14]
	bl      Function_20a4c54
	add     r0, r4, #0x20
	ldmfd   sp!, {r4-r8,pc}
@ 0x20ba080

.arm
Function_20ba080: @ 20ba080 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldrh    r1, [r4, #0xc]
	ldr     r0, [r4]
	bl      Function_20a5840
	cmp     r0, #0x0
	mvneq   r0, #0x0
	ldmeqfd sp!, {r4,pc}
	mov     r0, r4
	bl      Function_20ba1e4
	cmp     r0, #0x0
	ldrneh  r0, [r4, #0xc]
	subne   r0, r0, #0x1
	ldmnefd sp!, {r4,pc}
	ldr     r0, [r4]
	mov     r1, #0x0
	bl      Function_20a5890
	mvn     r0, #0x0
	ldmfd   sp!, {r4,pc}
@ 0x20ba0cc

.arm
Function_20ba0cc: @ 20ba0cc :arm
	stmfd   sp!, {r4-r10,lr}
	mov     r8, #0x0
	movs    r9, r1
	mov     r10, r0
	mov     r7, r8
	bne     branch_20ba0ec
	bl      Function_20b9f5c
	ldmfd   sp!, {r4-r10,pc}
@ 0x20ba0ec

.arm
branch_20ba0ec: @ 20ba0ec :arm
	ldrh    r0, [r10, #0xc]
	cmp     r9, r0
	bge     branch_20ba170
	mov     r4, #0x1
	mov     r5, r8
.arm
branch_20ba100: @ 20ba100 :arm
	mov     r1, r5
	add     r0, r10, #0x4
	bl      Function_20a4dd4
	mov     r1, r8
	mov     r6, r0
	bl      Function_20a4dd4
	movs    r8, r0
	beq     branch_20ba158
.arm
branch_20ba120: @ 20ba120 :arm
	ldr     r12, [r8, #0xc]
	cmp     r12, #0x0
	beq     branch_20ba144
	ldr     r1, [r8, #0x8]
	ldr     r2, [r8, #0x10]
	ldr     r3, [r8, #0x14]
	add     r0, r8, #0x20
	blx     r12
	mov     r7, r4
.arm
branch_20ba144: @ 20ba144 :arm
	mov     r0, r6
	mov     r1, r8
	bl      Function_20a4dd4
	movs    r8, r0
	bne     branch_20ba120
.arm
branch_20ba158: @ 20ba158 :arm
	mov     r1, r6
	add     r0, r10, #0x4
	bl      Function_20a4d5c
	ldrh    r0, [r10, #0xc]
	cmp     r9, r0
	blt     branch_20ba100
.arm
branch_20ba170: @ 20ba170 :arm
	ldr     r0, [r10]
	mov     r1, r9
	bl      Function_20a5890
	cmp     r7, #0x0
	beq     branch_20ba188
	bl      Function_20ba220
.arm
branch_20ba188: @ 20ba188 :arm
	ldrh    r1, [r10, #0xc]
	ldr     r0, [r10]
	bl      Function_20a5840
	mov     r0, r10
	bl      Function_20ba1e4
	ldmfd   sp!, {r4-r10,pc}
@ 0x20ba1a0

.arm
Function_20ba1a0: @ 20ba1a0 :arm
	ldr     r12, [pc, #0x4] @ [0x20ba1ac] (=Function_20a4c10)
	mov     r1, #0x0
	bx      r12
@ 0x20ba1ac

.word Function_20a4c10 @ =0x20a4c10, 0x20ba1ac



.arm
Function_20ba1b0: @ 20ba1b0 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	add     r0, r5, #0x4
	mov     r1, #0xc
	bl      Function_20a4c10
	mov     r0, r5
	str     r4, [r5]
	bl      Function_20ba1e4
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20ba1e4

.arm
Function_20ba1e4: @ 20ba1e4 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	ldr     r0, [r5]
	mov     r1, #0x14
	mov     r2, #0x4
	bl      Function_20a57e0
	movs    r4, r0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	bl      Function_20ba1a0
	mov     r1, r4
	add     r0, r5, #0x4
	bl      Function_20a4c54
	mov     r0, #0x1
	ldmfd   sp!, {r3-r5,pc}
@ 0x20ba220

.arm
Function_20ba220: @ 20ba220 :arm
	stmfd   sp!, {r4,lr}
	bl      Function_20c5aac
	mov     r4, r0
	mov     r0, #0x1
	bl      Function_20c5884
	mov     r0, r4
	bl      Function_20c5a40
	ldmfd   sp!, {r4,pc}
@ 0x20ba240

.arm
Function_20ba240: @ 20ba240 :arm
	stmfd   sp!, {r3,lr}
	bl      Function_20ba300
	cmp     r0, #0x0
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20ba258

.arm
Function_20ba258: @ 20ba258 :arm
	stmfd   sp!, {r3,lr}
	mov     r2, r1
	mov     r12, #0x0
	mov     r1, #0xff
	mov     r3, #0x1
	str     r12, [sp]
	bl      Function_20ba404
	cmp     r0, #0x0
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20ba284


.arm
Function_20ba284: @ 20ba284 :arm
	stmfd   sp!, {r3,lr}
	mov     r2, r1
	mov     r12, #0x0
	mov     r1, #0xff
	mov     r3, #0x1
	str     r12, [sp]
	bl      Function_20ba4e8
	cmp     r0, #0x0
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20ba2b0


.arm
Function_20ba2b0: @ 20ba2b0 :arm
	stmfd   sp!, {r3,lr}
	mov     r2, r1
	mov     r12, #0x0
	mov     r1, #0xff
	mov     r3, #0x1
	str     r12, [sp]
	bl      Function_20ba628
	cmp     r0, #0x0
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20ba2dc


.arm
Function_20ba2dc: @ 20ba2dc :arm
	stmfd   sp!, {r3,lr}
	mov     r12, #0x0
	mov     r3, #0x1
	str     r12, [sp]
	bl      Function_20ba404
	cmp     r0, #0x0
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20ba300


.arm
Function_20ba300: @ 20ba300 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r9, r1
	bl      Function_20b9d18
	movs    r6, r0
	moveq   r0, #0x1
	ldmeqfd sp!, {r3-r11,pc}
	ldr     r0, [r6]
	mov     r7, #0x0
	cmp     r0, #0x0
	bls     branch_20ba3fc
	add     r8, r6, #0x4
	mov     r11, r7
	mov     r10, r7
	mov     r4, r7
	mov     r5, r7
branch_20ba33c: @ 20ba33c :arm
	ldrb    r0, [r8]
	cmp     r0, #0x3
	addls   pc, pc, r0, lsl #2
	b       branch_20ba3e8
	b       branch_20ba35c
	b       branch_20ba3a4
	b       branch_20ba3c8
	b       branch_20ba380

branch_20ba35c: @ 20ba35c :arm
	str     r5, [sp]
	ldrb    r1, [r8, #0x1]
	ldr     r0, [r8, #0x4]
	mov     r2, r9
	mov     r3, #0x1
	bl      Function_20ba404
	cmp     r0, #0x0
	beq     branch_20ba3e8
	ldmfd   sp!, {r3-r11,pc}
@ 0x20ba380

.arm
branch_20ba380: @ 20ba380 :arm
	str     r4, [sp]
	ldrb    r1, [r8, #0x1]
	ldr     r0, [r8, #0x4]
	mov     r2, r9
	mov     r3, #0x1
	bl      Function_20ba488
	cmp     r0, #0x0
	beq     branch_20ba3e8
	ldmfd   sp!, {r3-r11,pc}
@ 0x20ba3a4

.arm
branch_20ba3a4: @ 20ba3a4 :arm
	str     r10, [sp]
	ldrb    r1, [r8, #0x1]
	ldr     r0, [r8, #0x4]
	mov     r2, r9
	mov     r3, #0x1
	bl      Function_20ba4e8
	cmp     r0, #0x0
	beq     branch_20ba3e8
	ldmfd   sp!, {r3-r11,pc}
@ 0x20ba3c8

.arm
branch_20ba3c8: @ 20ba3c8 :arm
	str     r11, [sp]
	ldrb    r1, [r8, #0x1]
	ldr     r0, [r8, #0x4]
	mov     r2, r9
	mov     r3, #0x1
	bl      Function_20ba628
	cmp     r0, #0x0
	ldmnefd sp!, {r3-r11,pc}
.arm
branch_20ba3e8: @ 20ba3e8 :arm
	ldr     r0, [r6]
	add     r7, r7, #0x1
	cmp     r7, r0
	add     r8, r8, #0x8
	blo     branch_20ba33c
.arm
branch_20ba3fc: @ 20ba3fc :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r11,pc}
@ 0x20ba404


.arm
Function_20ba404: @ 20ba404 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r1
	mov     r6, r2
	mov     r5, r3
	bl      Function_20b9b24
	movs    r4, r0
	moveq   r0, #0x2
	ldmeqfd sp!, {r3-r7,pc}
	mov     r0, #0x0
	str     r0, [sp]
	ldrh    r0, [r4, #0x4]
	mov     r1, r7
	mov     r2, r6
	mov     r3, r5
	bl      Function_20ba4e8
	cmp     r0, #0x0
	ldmnefd sp!, {r3-r7,pc}
	tst     r7, #0x1
	ldr     r0, [r4]
	beq     branch_20ba470
	mov     r1, r6
	mov     r2, r5
	bl      Function_20ba754
	cmp     r0, #0x0
	bne     branch_20ba474
	mov     r0, #0x6
	ldmfd   sp!, {r3-r7,pc}
@ 0x20ba470

.arm
branch_20ba470: @ 20ba470 :arm
	bl      Function_20b9e6c
.arm
branch_20ba474: @ 20ba474 :arm
	ldr     r1, [sp, #0x18]
	cmp     r1, #0x0
	strne   r0, [r1]
	mov     r0, #0x0
	ldmfd   sp!, {r3-r7,pc}
@ 0x20ba488


.arm
Function_20ba488: @ 20ba488 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r1
	mov     r5, r2
	mov     r4, r3
	bl      Function_20b9b88
	cmp     r0, #0x0
	moveq   r0, #0x3
	ldmeqfd sp!, {r4-r6,pc}
	tst     r6, #0x8
	ldr     r0, [r0]
	beq     branch_20ba4d0
	mov     r1, r5
	mov     r2, r4
	bl      Function_20ba7c0
	cmp     r0, #0x0
	bne     branch_20ba4d4
	mov     r0, #0x7
	ldmfd   sp!, {r4-r6,pc}

branch_20ba4d0: @ 20ba4d0 :arm
	bl      Function_20b9e6c
branch_20ba4d4: @ 20ba4d4 :arm
	ldr     r1, [sp, #0x10]
	cmp     r1, #0x0
	strne   r0, [r1]
	mov     r0, #0x0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20ba4e8


.arm
Function_20ba4e8: @ 20ba4e8 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x8
	mov     r10, r1
	mov     r9, r2
	mov     r11, r3
	bl      Function_20b9bec
	movs    r5, r0
	addeq   sp, sp, #0x8
	moveq   r0, #0x4
	ldmeqfd sp!, {r3-r11,pc}
	tst     r10, #0x2
	ldr     r0, [r5]
	beq     branch_20ba53c
	mov     r1, r9
	mov     r2, r11
	bl      Function_20ba82c
	movs    r6, r0
	bne     branch_20ba544
	add     sp, sp, #0x8
	mov     r0, #0x8
	ldmfd   sp!, {r3-r11,pc}
@ 0x20ba53c

.arm
branch_20ba53c: @ 20ba53c :arm
	bl      Function_20b9e6c
	mov     r6, r0
.arm
branch_20ba544: @ 20ba544 :arm
	and     r8, r10, #0x4
	mov     r7, #0x0
.arm
branch_20ba54c: @ 20ba54c :arm
	add     r0, r5, r7, lsl #1
	ldrh    r0, [r0, #0x4]
	ldr     r1, [pc, #0xc8] @ [0x20ba624] (=0xffff)
	cmp     r0, r1
	beq     branch_20ba600
	bl      Function_20b9c50
	movs    r4, r0
	addeq   sp, sp, #0x8
	moveq   r0, #0x5
	ldmeqfd sp!, {r3-r11,pc}
	add     r0, sp, #0x4
	str     r0, [sp]
	add     r0, r5, r7, lsl #1
	ldrh    r0, [r0, #0x4]
	mov     r1, r10
	mov     r2, r9
	mov     r3, r11
	bl      Function_20ba628
	cmp     r0, #0x0
	addne   sp, sp, #0x8
	ldmnefd sp!, {r3-r11,pc}
	ldr     r0, [r4]
	mov     r0, r0, lsr #24
	tst     r0, #0x1
	cmpne   r8, #0x0
	beq     branch_20ba5e4
	str     r9, [sp]
	ldr     r1, [r4]
	ldr     r0, [sp, #0x4]
	mov     r3, r1, lsl #8
	mov     r1, r6
	mov     r2, r7
	mov     r3, r3, lsr #8
	bl      Function_20bac1c
	cmp     r0, #0x0
	addeq   sp, sp, #0x8
	moveq   r0, #0x9
	ldmeqfd sp!, {r3-r11,pc}
.arm
branch_20ba5e4: @ 20ba5e4 :arm
	cmp     r6, #0x0
	ldrne   r2, [sp, #0x4]
	cmpne   r2, #0x0
	beq     branch_20ba600
	mov     r0, r6
	mov     r1, r7
	bl      Function_20c5f5c
.arm
branch_20ba600: @ 20ba600 :arm
	add     r7, r7, #0x1
	cmp     r7, #0x4
	blt     branch_20ba54c
	ldr     r0, [sp, #0x30]
	cmp     r0, #0x0
	strne   r6, [r0]
	mov     r0, #0x0
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r11,pc}
@ 0x20ba624

.word 0xffff @ 0x20ba624
.arm
Function_20ba628: @ 20ba628 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r1
	mov     r5, r2
	mov     r4, r3
	bl      Function_20b9c50
	cmp     r0, #0x0
	moveq   r0, #0x5
	ldmeqfd sp!, {r4-r6,pc}
	tst     r6, #0x4
	ldr     r0, [r0]
	beq     branch_20ba694
	mov     r1, r0, lsr #24
	tst     r1, #0x1
	mov     r0, r0, lsl #8
	mov     r1, r5
	beq     branch_20ba678
	mov     r2, r4
	mov     r0, r0, lsr #8
	bl      Function_20ba904
	b       branch_20ba684
@ 0x20ba678

.arm
branch_20ba678: @ 20ba678 :arm
	mov     r2, r4
	mov     r0, r0, lsr #8
	bl      Function_20ba898
.arm
branch_20ba684: @ 20ba684 :arm
	cmp     r0, #0x0
	bne     branch_20ba6a0
	mov     r0, #0x9
	ldmfd   sp!, {r4-r6,pc}
@ 0x20ba694

.arm
branch_20ba694: @ 20ba694 :arm
	mov     r0, r0, lsl #8
	mov     r0, r0, lsr #8
	bl      Function_20b9e6c
.arm
branch_20ba6a0: @ 20ba6a0 :arm
	ldr     r1, [sp, #0x10]
	cmp     r1, #0x0
	strne   r0, [r1]
	mov     r0, #0x0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20ba6b4

.arm
Function_20ba6b4: @ 20ba6b4 :arm
	stmfd   sp!, {r3-r8,lr}
	sub     sp, sp, #0x4
	mov     r8, r0
	mov     r7, r1
	mov     r6, r2
	mov     r4, r3
	bl      Function_20b9d7c
	movs    r5, r0
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r8,pc}
	ldr     r0, [sp, #0x20]
	cmp     r0, #0x0
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r8,pc}
	mov     r2, r7
	mov     r3, r6
	add     r1, r5, #0x20
	str     r4, [sp]
	bl      Function_20ba018
	movs    r4, r0
	addeq   sp, sp, #0x4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r8,pc}
	mov     r0, r8
	mov     r1, r4
	mov     r2, r5
	mov     r3, #0x0
	bl      Function_20b9da4
	cmp     r5, r0
	addne   sp, sp, #0x4
	movne   r0, #0x0
	ldmnefd sp!, {r3-r8,pc}
	mov     r0, r4
	mov     r1, r5
	bl      DC_StoreRange
	mov     r0, r4
	add     sp, sp, #0x4
	ldmfd   sp!, {r3-r8,pc}
@ 0x20ba754

.arm
Function_20ba754: @ 20ba754 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r6, r1
	mov     r5, r2
	bl      Function_20b9e6c
	movs    r4, r0
	bne     branch_20ba7b4
	cmp     r5, #0x0
	moveq   r2, #0x0
	beq     branch_20ba784
	bl      Function_20b9afc
	mov     r2, r0
.arm
branch_20ba784: @ 20ba784 :arm
	ldr     r1, [pc, #0x30] @ [0x20ba7bc] (=Function_20baa64)
	mov     r0, r7
	mov     r3, r7
	str     r6, [sp]
	bl      Function_20ba6b4
	mov     r4, r0
	cmp     r5, #0x0
	cmpne   r4, #0x0
	beq     branch_20ba7b4
	mov     r0, r7
	mov     r1, r4
	bl      Function_20b9e94
.arm
branch_20ba7b4: @ 20ba7b4 :arm
	mov     r0, r4
	ldmfd   sp!, {r3-r7,pc}
@ 0x20ba7bc

.word Function_20baa64 @ 0x20ba7bc



.arm
Function_20ba7c0: @ 20ba7c0 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r6, r1
	mov     r5, r2
	bl      Function_20b9e6c
	movs    r4, r0
	bne     branch_20ba820
	cmp     r5, #0x0
	moveq   r2, #0x0
	beq     branch_20ba7f0
	bl      Function_20b9afc
	mov     r2, r0
.arm
branch_20ba7f0: @ 20ba7f0 :arm
	ldr     r1, [pc, #0x30] @ [0x20ba828] (=0x20baa64)
	mov     r0, r7
	mov     r3, r7
	str     r6, [sp]
	bl      Function_20ba6b4
	mov     r4, r0
	cmp     r5, #0x0
	cmpne   r4, #0x0
	beq     branch_20ba820
	mov     r0, r7
	mov     r1, r4
	bl      Function_20b9e94
.arm
branch_20ba820: @ 20ba820 :arm
	mov     r0, r4
	ldmfd   sp!, {r3-r7,pc}
@ 0x20ba828

.word Function_20baa64 @ 0x20ba828



.arm
Function_20ba82c: @ 20ba82c :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r6, r1
	mov     r5, r2
	bl      Function_20b9e6c
	movs    r4, r0
	bne     branch_20ba88c
	cmp     r5, #0x0
	moveq   r2, #0x0
	beq     branch_20ba85c
	bl      Function_20b9afc
	mov     r2, r0
.arm
branch_20ba85c: @ 20ba85c :arm
	ldr     r1, [pc, #0x30] @ [0x20ba894] (=Function_20baa8c)
	mov     r0, r7
	mov     r3, r7
	str     r6, [sp]
	bl      Function_20ba6b4
	mov     r4, r0
	cmp     r5, #0x0
	cmpne   r4, #0x0
	beq     branch_20ba88c
	mov     r0, r7
	mov     r1, r4
	bl      Function_20b9e94
.arm
branch_20ba88c: @ 20ba88c :arm
	mov     r0, r4
	ldmfd   sp!, {r3-r7,pc}
@ 0x20ba894

.word Function_20baa8c @ 0x20ba894



.arm
Function_20ba898: @ 20ba898 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r6, r1
	mov     r5, r2
	bl      Function_20b9e6c
	movs    r4, r0
	bne     branch_20ba8f8
	cmp     r5, #0x0
	moveq   r2, #0x0
	beq     branch_20ba8c8
	bl      Function_20b9afc
	mov     r2, r0
.arm
branch_20ba8c8: @ 20ba8c8 :arm
	ldr     r1, [pc, #0x30] @ [0x20ba900] (=Function_20baabc)
	mov     r0, r7
	mov     r3, r7
	str     r6, [sp]
	bl      Function_20ba6b4
	mov     r4, r0
	cmp     r5, #0x0
	cmpne   r4, #0x0
	beq     branch_20ba8f8
	mov     r0, r7
	mov     r1, r4
	bl      Function_20b9e94
.arm
branch_20ba8f8: @ 20ba8f8 :arm
	mov     r0, r4
	ldmfd   sp!, {r3-r7,pc}
@ 0x20ba900

.word Function_20baabc @ 0x20ba900



.arm
Function_20ba904: @ 20ba904 :arm
	stmfd   sp!, {r3-r9,lr}
	mov     r9, r0
	mov     r8, r1
	mov     r7, r2
	bl      Function_20b9e6c
	movs    r5, r0
	bne     branch_20ba9f8
	ldr     r1, [pc, #0xd8] @ [0x20baa00] (=RAM_21cbef4)
	mov     r0, r9
	mov     r2, #0x3c
	mov     r3, #0x0
	bl      Function_20b9da4
	cmp     r0, #0x3c
	movne   r0, #0x0
	ldmnefd sp!, {r3-r9,pc}
	ldr     r0, [pc, #0xbc] @ [0x20baa04] (=RAM_21cbef4)
	cmp     r8, #0x0
	ldr     r0, [r0, #0x38]
	mov     r6, r0, lsl #2
	mov     r4, r6, lsl #1
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r9,pc}
	cmp     r7, #0x0
	moveq   r3, #0x0
	beq     branch_20ba970
	bl      Function_20b9afc
	mov     r3, r0
.arm
branch_20ba970: @ 20ba970 :arm
	ldr     r2, [pc, #0x90] @ [0x20baa08] (=Function_20baaec)
	mov     r0, r8
	add     r1, r4, #0x5c
	str     r9, [sp]
	bl      Function_20ba018
	movs    r5, r0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r9,pc}
	mov     r0, r9
	mov     r1, r5
	add     r2, r6, #0x3c
	mov     r3, #0x0
	bl      Function_20b9da4
	add     r1, r6, #0x3c
	cmp     r0, r1
	movne   r0, #0x0
	ldmnefd sp!, {r3-r9,pc}
	ldr     r1, [r5, #0x38]
	add     r0, r5, #0x3c
	mov     r2, r6
	add     r1, r0, r1, lsl #2
	bl      MI_CpuCopy8
	mov     r2, r6
	add     r0, r5, #0x3c
	mov     r1, #0x0
	bl      MI_CpuFill8
	mov     r0, r5
	add     r1, r4, #0x3c
	bl      DC_StoreRange
	cmp     r7, #0x0
	beq     branch_20ba9f8
	mov     r0, r9
	mov     r1, r5
	bl      Function_20b9e94
branch_20ba9f8: @ 20ba9f8 :arm
	mov     r0, r5
	ldmfd   sp!, {r3-r9,pc}
@ 0x20baa00

.word RAM_21cbef4 @ 0x20baa00
.word RAM_21cbef4 @ 0x20baa04
.word Function_20baaec @ 0x20baa08



.arm
Function_20baa0c: @ 20baa0c :arm
	stmfd   sp!, {r3-r7,lr}
	movs    r4, r1
	mov     r7, r0
	mov     r6, r2
	ldmeqfd sp!, {r3-r7,pc}
	bl      OS_DisableInterrupts
	mov     r5, r0
	mov     r0, r4
	bl      Function_20b9ae4
	mov     r4, r0
	mov     r0, r6
	bl      Function_20b9e6c
	cmp     r7, r0
	bne     branch_20baa50
	mov     r0, r6
	mov     r1, #0x0
	bl      Function_20b9e94
branch_20baa50: @ 20baa50 :arm
	mov     r0, r4
	bl      Function_20b9ae4
	mov     r0, r5
	bl      OS_RestoreInterrupts
	ldmfd   sp!, {r3-r7,pc}
@ 0x20baa64


.arm
Function_20baa64: @ 20baa64 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r1
	mov     r1, r2
	mov     r5, r0
	mov     r2, r3
	bl      Function_20baa0c
	mov     r0, r5
	add     r1, r5, r4
	bl      Function_20c5404
	ldmfd   sp!, {r3-r5,pc}
@ 0x20baa8c


.arm
Function_20baa8c: @ 20baa8c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r1
	mov     r1, r2
	mov     r5, r0
	mov     r2, r3
	bl      Function_20baa0c
	mov     r0, r5
	add     r1, r5, r4
	bl      Function_20c5424
	mov     r0, r5
	bl      Function_20c6028
	ldmfd   sp!, {r3-r5,pc}
@ 0x20baabc


.arm
Function_20baabc: @ 20baabc :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r1
	mov     r1, r2
	mov     r5, r0
	mov     r2, r3
	bl      Function_20baa0c
	mov     r0, r5
	add     r1, r5, r4
	bl      Function_20c5444
	mov     r0, r5
	bl      Function_20c60c0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20baaec


.arm
Function_20baaec: @ 20baaec :arm
	stmfd   sp!, {r4,lr}
	mov     r1, r2
	mov     r4, r0
	mov     r2, r3
	bl      Function_20baa0c
	mov     r0, r4
	bl      Function_20c60c0
	ldmfd   sp!, {r4,pc}
@ 0x20bab0c


.arm
Function_20bab0c: @ 20bab0c :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r5, r2
	mov     r7, r0
	mov     r4, r3
	mov     r6, r1
	mov     r0, r5
	mov     r1, r4
	bl      Function_20c6314
	cmp     r7, r0
	bne     branch_20bab44
	mov     r0, r5
	mov     r1, r4
	mov     r2, #0x0
	bl      Function_20c62e0
branch_20bab44: @ 20bab44 :arm
	mov     r0, r7
	add     r1, r7, r6
	bl      Function_20c5444
	ldmfd   sp!, {r3-r7,pc}
@ 0x20bab54


.arm
Function_20bab54: @ 20bab54 :arm
	stmfd   sp!, {r3-r9,lr}
	mov     r8, r0
	mov     r7, r1
	mov     r6, r2
	mov     r5, r3
	bl      Function_20c6314
	cmp     r0, #0x0
	movne   r0, #0x1
	ldmnefd sp!, {r3-r9,pc}
	mov     r0, r8
	bl      Function_20c62d8
	ldr     r1, [r8, #0x38]
	sub     r0, r0, #0x1
	add     r1, r1, r7
	add     r1, r8, r1, lsl #2
	cmp     r7, r0
	ldrcc   r0, [r1, #0x40]
	ldr     r4, [r1, #0x3c]
	ldrcs   r0, [r8, #0x8]
	cmp     r5, #0x0
	sub     r9, r0, r4
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r9,pc}
	ldr     r2, [pc, #0x60] @ [0x20bac18] (=Function_20bab0c)
	mov     r0, r5
	mov     r3, r8
	add     r1, r9, #0x20
	str     r7, [sp]
	bl      Function_20ba018
	movs    r5, r0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r9,pc}
	mov     r0, r6
	mov     r1, r5
	mov     r2, r9
	mov     r3, r4
	bl      Function_20b9da4
	cmp     r9, r0
	movne   r0, #0x0
	ldmnefd sp!, {r3-r9,pc}
	mov     r0, r5
	mov     r1, r9
	bl      DC_StoreRange
	mov     r0, r8
	mov     r1, r7
	mov     r2, r5
	bl      Function_20c62e0
	mov     r0, #0x1
	ldmfd   sp!, {r3-r9,pc}
@ 0x20bac18

.word Function_20bab0c @ 0x20bac18



.arm
Function_20bac1c: @ 20bac1c :arm
	stmfd   sp!, {r3-r10,lr}
	sub     sp, sp, #0x1c
	mov     r8, r0
	add     r0, sp, #0x0
	mov     r7, r1
	mov     r6, r2
	mov     r5, r3
	ldr     r4, [sp, #0x40]
	bl      Function_20c6108
	ldr     r1, [sp]
	ldr     r0, [sp, #0x4]
	str     r1, [sp, #0x8]
	str     r0, [sp, #0xc]
	cmp     r7, #0x0
	add     r2, sp, #0x8
	addeq   sp, sp, #0x1c
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r10,pc}
	add     r1, sp, #0x10
	mov     r0, r7
	bl      Function_20c6128
	cmp     r0, #0x0
	beq     branch_20bacd0
	add     r10, sp, #0x10
	add     r9, sp, #0x8
.arm
branch_20bac80: @ 20bac80 :arm
	ldrb    r0, [sp, #0x10]
	cmp     r0, #0x1
	ldreqh  r0, [sp, #0x14]
	cmpeq   r6, r0
	bne     branch_20bacb8
	ldrh    r1, [sp, #0x12]
	mov     r0, r8
	mov     r2, r5
	mov     r3, r4
	bl      Function_20bab54
	cmp     r0, #0x0
	addeq   sp, sp, #0x1c
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r10,pc}
.arm
branch_20bacb8: @ 20bacb8 :arm
	mov     r0, r7
	mov     r1, r10
	mov     r2, r9
	bl      Function_20c6128
	cmp     r0, #0x0
	bne     branch_20bac80

branch_20bacd0: @ 20bacd0 :arm
	mov     r0, #0x1
	add     sp, sp, #0x1c
	ldmfd   sp!, {r3-r10,pc}
@ 0x20bacdc


.arm
.globl Function_20bacdc
Function_20bacdc: @ 20bacdc :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r4, r0
	bl      Function_20b9afc
	mov     r6, #0x0
	mov     r5, r6
branch_20bacf0: @ 20bacf0 :arm
	mov     r0, r6
	bl      Function_20b9cb4
	movs    r7, r0
	beq     branch_20bad64
	ldrb    r1, [r7]
	mov     r0, r6
	bl      Function_20b7efc
	ldrh    r1, [r7, #0x2]
	mov     r0, r6
	bl      Function_20b7f1c
	ldr     r0, [r7, #0x4]
	cmp     r0, #0x0
	cmpne   r4, #0x0
	beq     branch_20bad64
	ldrb    r0, [r7]
	mov     r8, r5
	cmp     r0, #0x0
	ble     branch_20bad64
.arm
branch_20bad38: @ 20bad38 :arm
	ldr     r2, [r7, #0x4]
	mov     r0, r6
	mov     r1, r4
	bl      Function_20b7f34
	cmp     r0, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4-r8,pc}
	ldrb    r0, [r7]
	add     r8, r8, #0x1
	cmp     r8, r0
	blt     branch_20bad38
.arm
branch_20bad64: @ 20bad64 :arm
	add     r6, r6, #0x1
	cmp     r6, #0x20
	blt     branch_20bacf0
	mov     r0, #0x1
	ldmfd   sp!, {r4-r8,pc}
@ 0x20bad78


/* Input:
r1: dimensions??
*/
.arm
Function_20bad78: @ 20bad78 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x8
	mov     r4, r1
	mov     r5, r0
	mov     r0, r4
	bl      Function_20b9b24
	cmp     r0, #0x0
	addeq   sp, sp, #0x8
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}

	stmea   sp, {r0,r4}
	ldrb    r1, [r0, #0x9]
	ldrh    r2, [r0, #0x4]
	ldrb    r3, [r0, #0x8]
	mov     r0, r5
	bl      Function_20baeb0
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r5,pc}
@ 0x20badc0


.arm
Function_20badc0: @ 20badc0 :arm
	stmfd   sp!, {r3-r7,lr}
	sub     sp, sp, #0x8
	mov     r7, r0
	ldr     r0, [sp, #0x20]
	mov     r6, r1
	mov     r5, r2
	mov     r4, r3
	bl      Function_20b9b24
	cmp     r0, #0x0
	addeq   sp, sp, #0x8
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}

	cmp     r4, #0x0
	ldrltb  r4, [r0, #0x8]
	cmp     r5, #0x0
	ldrlth  r5, [r0, #0x4]
	cmp     r6, #0x0
	ldrltb  r6, [r0, #0x9]
	ldr     r12, [sp, #0x20]
	mov     r2, r5
	str     r0, [sp]
	mov     r0, r7
	mov     r1, r6
	mov     r3, r4
	str     r12, [sp, #0x4]
	bl      Function_20baeb0
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r7,pc}
@ 0x20bae30


.arm
.globl Function_20bae30
Function_20bae30: @ 20bae30 :arm
	stmfd   sp!, {r3-r7,lr}
	sub     sp, sp, #0x10
	mov     r6, r1
	mov     r7, r0
	mov     r0, r6
	mov     r5, r2
	bl      Function_20b9b88
	cmp     r0, #0x0
	addeq   sp, sp, #0x10
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}

	ldr     r0, [r0]
	bl      Function_20b9e6c
	movs    r4, r0
	addeq   sp, sp, #0x10
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}

	mov     r1, r5
	bl      Function_20bb368
	cmp     r0, #0x0
	addeq   sp, sp, #0x10
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}

	stmea   sp, {r0,r4,r6}
	str     r5, [sp, #0xc]
	ldrb    r1, [r0, #0x9]
	ldrh    r2, [r0, #0x4]
	ldrb    r3, [r0, #0x8]
	mov     r0, r7
	bl      Function_20bafac
	add     sp, sp, #0x10
	ldmfd   sp!, {r3-r7,pc}
@ 0x20baeb0


.arm
Function_20baeb0: @ 20baeb0 :arm
	stmfd   sp!, {r3-r8,lr}
	sub     sp, sp, #0xc
	mov     r8, r2
	mov     r2, r3
	ldr     r5, [sp, #0x28]
	mov     r6, r0
	mov     r7, r1
	bl      Function_20b84b8
	movs    r4, r0
	addeq   sp, sp, #0xc
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r8,pc}

	mov     r0, r7
	mov     r1, r4
	bl      Function_20b8620
	mov     r7, r0
	add     r12, sp, #0x4
	mov     r0, r8
	mov     r2, r7
	mov     r1, #0x6
	mov     r3, #0x0
	str     r12, [sp]
	bl      Function_20ba4e8
	cmp     r0, #0x0
	beq     branch_20baf28

	mov     r0, r4
	bl      Function_20b8550
	add     sp, sp, #0xc
	mov     r0, #0x0
	ldmfd   sp!, {r3-r8,pc}

branch_20baf28: @ 20baf28 :arm
	ldr     r0, [sp, #0x2c]
	add     r12, sp, #0x8
	mov     r2, r7
	mov     r1, #0x1
	mov     r3, #0x0
	str     r12, [sp]
	bl      Function_20ba404
	cmp     r0, #0x0
	beq     branch_20baf60
	mov     r0, r4
	bl      Function_20b8550
	add     sp, sp, #0xc
	mov     r0, #0x0
	ldmfd   sp!, {r3-r8,pc}
@ 0x20baf60

.arm
branch_20baf60: @ 20baf60 :arm
	ldr     r2, [sp, #0x8]
	ldr     r3, [sp, #0x4]
	ldr     r1, [r2, #0x18]
	mov     r0, r4
	add     r1, r2, r1
	mov     r2, #0x0
	bl      Function_20b855c
	ldrb    r1, [r5, #0x6]
	mov     r0, r6
	bl      Function_20b8134
	ldrb    r1, [r5, #0x7]
	mov     r0, r6
	bl      Function_20b8174
	ldr     r1, [sp, #0x2c]
	mov     r0, r6
	bl      Function_20b81f4
	mov     r0, #0x1
	add     sp, sp, #0xc
	ldmfd   sp!, {r3-r8,pc}
@ 0x20bafac


.arm
Function_20bafac: @ 20bafac :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x8
	mov     r7, r2
	mov     r2, r3
	ldr     r6, [sp, #0x20]
	mov     r4, r0
	mov     r8, r1
	bl      Function_20b84b8
	movs    r5, r0
	addeq   sp, sp, #0x8
	moveq   r0, #0x0
	ldmeqfd sp!, {r4-r8,pc}
	mov     r0, r8
	mov     r1, r5
	bl      Function_20b8620
	add     r12, sp, #0x4
	mov     r2, r0
	mov     r0, r7
	mov     r1, #0x6
	mov     r3, #0x0
	str     r12, [sp]
	bl      Function_20ba4e8
	cmp     r0, #0x0
	beq     branch_20bb020
	mov     r0, r5
	bl      Function_20b8550
	add     sp, sp, #0x8
	mov     r0, #0x0
	ldmfd   sp!, {r4-r8,pc}

branch_20bb020: @ 20bb020 :arm
	ldr     r12, [sp, #0x24]
	ldr     r2, [r6]
	ldr     r1, [r12, #0x18]
	ldr     r3, [sp, #0x4]
	mov     r0, r5
	add     r1, r12, r1
	bl      Function_20b855c
	ldrb    r1, [r6, #0x6]
	mov     r0, r4
	bl      Function_20b8134
	ldrb    r1, [r6, #0x7]
	mov     r0, r4
	bl      Function_20b8174
	ldr     r1, [sp, #0x28]
	ldr     r2, [sp, #0x2c]
	mov     r0, r4
	bl      Function_20b8218
	mov     r0, #0x1
	add     sp, sp, #0x8
	ldmfd   sp!, {r4-r8,pc}
@ 0x20bb070


.arm
Function_20bb070: @ 20bb070 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r7, [pc, #0xfc] @ [0x20bb178] (=RAM_21cc5cc)
	ldr     r4, [pc, #0xfc] @ [0x20bb17c] (=Unknown_20fdab0)
	mov     r5, #0x0
branch_20bb080: @ 20bb080 :arm
	ldr     r1, [r7, #0x110]
	mov     r0, r1, lsl #31
	movs    r0, r0, asr #31
	beq     branch_20bb164
	ldr     r0, [r7, #0x114]
	cmp     r0, #0x0
	bne     branch_20bb0a8
	mov     r0, r7
	bl      Function_20bb1ac
	b       branch_20bb164

branch_20bb0a8: @ 20bb0a8 :arm
	mov     r0, r1, lsl #29
	movs    r0, r0, asr #31
	ldrne   r0, [r7, #0x118]
	cmpne   r0, #0x0
	beq     branch_20bb0d4
	mov     r0, r7
	bl      Function_20b8bd4
	ldr     r0, [r7, #0x110]
	orr     r0, r0, #0x2
	bic     r0, r0, #0x4
	str     r0, [r7, #0x110]
branch_20bb0d4: @ 20bb0d4 :arm
	ldr     r0, [r7, #0x110]
	mov     r0, r0, lsl #30
	movs    r0, r0, asr #31
	beq     branch_20bb164
	add     r0, r7, #0xe8
	bl      Function_20bb41c
	ldr     r1, [r7, #0x154]
	add     r0, r7, #0xe8
	mov     r1, r1, lsl #1
	ldrsh   r6, [r4, r1]
	bl      Function_20bb3e8
	mov     r0, r0, asr #8
	ldr     r1, [r7, #0x158]
	mov     r0, r0, lsl #1
	mov     r2, r1, lsl #1
	ldrsh   r1, [r4, r0]
	ldrsh   r2, [r4, r2]
	ldr     r0, [r7, #0x15c]
	add     r1, r1, r6
	add     r6, r2, r1
	cmp     r6, r0
	beq     branch_20bb13c
	mov     r0, r7
	mov     r1, r6
	bl      Function_20b8c44
	str     r6, [r7, #0x15c]
branch_20bb13c: @ 20bb13c :arm
	ldr     r0, [r7, #0x110]
	mov     r0, r0, lsl #28
	movs    r0, r0, asr #31
	beq     branch_20bb164
	add     r0, r7, #0xe8
	bl      Function_20bb434
	cmp     r0, #0x0
	beq     branch_20bb164
	mov     r0, r7
	bl      Function_20bb1ac
branch_20bb164: @ 20bb164 :arm
	add     r5, r5, #0x1
	cmp     r5, #0x4
	add     r7, r7, #0x174
	blt     branch_20bb080
	ldmfd   sp!, {r3-r7,pc}
@ 0x20bb178

.word RAM_21cc5cc @ 0x20bb178
.word Unknown_20fdab0 @ 0x20bb17c



.arm
Function_20bb180: @ 20bb180 :arm
	ldr     r2, [r0, #0x14c]
	cmp     r2, #0x0
	movne   r1, #0x0
	strne   r1, [r2]
	strne   r1, [r0, #0x14c]
	ldr     r1, [r0, #0x110]
	bic     r2, r1, #0x1
	bic     r1, r2, #0x4
	bic     r1, r1, #0x2
	str     r1, [r0, #0x110]
	bx      lr
@ 0x20bb1ac

.arm
Function_20bb1ac: @ 20bb1ac :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r0, [pc, #0x80] @ [0x20bb23c] (=RAM_21cc5a8)
	bl      OS_LockMutex
	ldr     r0, [pc, #0x7c] @ [0x20bb240] (=RAM_21cbf30)
	ldr     r0, [r0, #0x4]
	cmp     r0, #0x0
	beq     branch_20bb1d8
	add     r0, r0, #0xc8
	add     r0, r0, #0x400
	bl      OS_LockMutex
branch_20bb1d8: @ 20bb1d8 :arm
	ldr     r0, [r4, #0x110]
	mov     r0, r0, lsl #30
	movs    r0, r0, asr #31
	beq     branch_20bb1f0
	mov     r0, r4
	bl      Function_20b8c28
branch_20bb1f0: @ 20bb1f0 :arm
	ldr     r0, [r4, #0x110]
	mov     r0, r0, lsl #31
	movs    r0, r0, asr #31
	beq     branch_20bb20c
	ldr     r1, [r4, #0x170]
	mov     r0, r4
	blx     r1
branch_20bb20c: @ 20bb20c :arm
	mov     r0, r4
	bl      Function_20bb244
	ldr     r0, [pc, #0x20] @ [0x20bb23c] (=RAM_21cc5a8)
	bl      OS_UnlockMutex
	ldr     r0, [pc, #0x1c] @ [0x20bb240] (=RAM_21cbf30)
	ldr     r0, [r0, #0x4]
	cmp     r0, #0x0
	ldmeqfd sp!, {r4,pc}
	add     r0, r0, #0xc8
	add     r0, r0, #0x400
	bl      OS_UnlockMutex
	ldmfd   sp!, {r4,pc}
@ 0x20bb23c

.word RAM_21cc5a8 @ 0x20bb23c
.word RAM_21cbf30 @ 0x20bb240



.arm
Function_20bb244: @ 20bb244 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r1, [r4, #0x110]
	mov     r1, r1, lsl #31
	movs    r1, r1, asr #31
	ldmeqfd sp!, {r4,pc}
	bl      Function_20bb2a8
	ldr     r1, [r4, #0x168]
	mov     r0, r4
	blx     r1
	ldr     r0, [pc, #0x2c] @ [0x20bb2a0] (=RAM_21cc5c0)
	mov     r1, r4
	bl      Function_20bb2cc
	ldr     r0, [pc, #0x24] @ [0x20bb2a4] (=RAM_21cbf30)
	ldr     r0, [r0, #0x4]
	cmp     r0, #0x0
	beq     branch_20bb294
	mov     r1, r4
	add     r0, r0, #78, 28 @ #0x4e0
	bl      Function_20bb2cc
branch_20bb294: @ 20bb294 :arm
	mov     r0, r4
	bl      Function_20bb180
	ldmfd   sp!, {r4,pc}
@ 0x20bb2a0

.word RAM_21cc5c0 @ 0x20bb2a0
.word RAM_21cbf30 @ 0x20bb2a4



.arm
Function_20bb2a8: @ 20bb2a8 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [r0, #0x120]
	cmp     r1, #0x0
	ldmeqfd sp!, {r3,pc}
	subs    r1, r1, #0x1
	str     r1, [r0, #0x120]
	ldmnefd sp!, {r3,pc}
	bl      Function_20b8a0c
	ldmfd   sp!, {r3,pc}
@ 0x20bb2cc

.arm
Function_20bb2cc: @ 20bb2cc :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r8, r0
	mov     r7, r1
	bl      OS_DisableInterrupts
	mov     r4, r0
	mov     r0, r8
	mov     r1, #0x0
	bl      Function_20a4dbc
	movs    r5, r0
	beq     branch_20bb330
branch_20bb2f4: @ 20bb2f4 :arm
	mov     r0, r8
	mov     r1, r5
	bl      Function_20a4dbc
	ldr     r1, [r5, #0x8]
	mov     r6, r0
	cmp     r1, r7
	bne     branch_20bb324
	mov     r0, r8
	mov     r1, r5
	bl      Function_20a4d5c
	mov     r0, r5
	bl      Function_20bb33c
branch_20bb324: @ 20bb324 :arm
	mov     r5, r6
	cmp     r6, #0x0
	bne     branch_20bb2f4
branch_20bb330: @ 20bb330 :arm
	mov     r0, r4
	bl      OS_RestoreInterrupts
	ldmfd   sp!, {r4-r8,pc}
@ 0x20bb33c


.arm
Function_20bb33c: @ 20bb33c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	bl      OS_DisableInterrupts
	mov     r4, r0
	ldr     r0, [pc, #0x10] @ [0x20bb364] (=RAM_21cbf3c)
	mov     r1, r5
	bl      Function_20a4c54
	mov     r0, r4
	bl      OS_RestoreInterrupts
	ldmfd   sp!, {r3-r5,pc}
@ 0x20bb364

.word RAM_21cbf3c @ 0x20bb364



.arm
Function_20bb368: @ 20bb368 :arm
	cmp     r1, #0x0
	movlt   r0, #0x0
	bxlt    lr
	ldr     r2, [r0, #0x1c]
	cmp     r1, r2
	movcs   r0, #0x0
	bxcs    lr
	mov     r2, #0xc
	mul     r3, r1, r2
	add     r12, r0, #0x20
	ldr     r1, [r12, r3]
	sub     r0, r2, #0xd
	cmp     r1, r0
	add     r0, r12, r3
	moveq   r0, #0x0
	bx      lr
@ 0x20bb3a8


.arm
Function_20bb3a8: @ 20bb3a8 :arm
	mov     r1, #0x0
	str     r1, [r0, #0x4]
	str     r1, [r0]
	str     r1, [r0, #0xc]
	str     r1, [r0, #0x8]
	bx      lr
@ 0x20bb3c0

.arm
Function_20bb3c0: @ 20bb3c0 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	mov     r4, r2
	bl      Function_20bb3e8
	stmia   r6, {r0,r5}
	str     r4, [r6, #0xc]
	mov     r0, #0x0
	str     r0, [r6, #0x8]
	ldmfd   sp!, {r4-r6,pc}
@ 0x20bb3e8

.arm
Function_20bb3e8: @ 20bb3e8 :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [r0, #0xc]
	ldr     r2, [r0, #0x8]
	cmp     r2, r1
	ldrge   r0, [r0, #0x4]
	ldmgefd sp!, {r4,pc}
	ldr     r4, [r0]
	ldr     r0, [r0, #0x4]
	sub     r0, r0, r4
	mul     r0, r2, r0
	bl      _s32_div_f
	add     r0, r4, r0
	ldmfd   sp!, {r4,pc}
@ 0x20bb41c

.arm
Function_20bb41c: @ 20bb41c :arm
	ldr     r2, [r0, #0x8]
	ldr     r1, [r0, #0xc]
	cmp     r2, r1
	addlt   r1, r2, #0x1
	strlt   r1, [r0, #0x8]
	bx      lr
@ 0x20bb434


.arm
Function_20bb434: @ 20bb434 :arm
	ldr     r1, [r0, #0x8]
	ldr     r0, [r0, #0xc]
	cmp     r1, r0
	movge   r0, #0x1
	movlt   r0, #0x0
	bx      lr
@ 0x20bb44c


.arm
.globl Function_20bb44c
Function_20bb44c: @ 20bb44c :arm
	mov     r1, #0x0
	mov     r2, #1, 20 @ #0x1000
	mov     r3, #0x0
	stmia   r0!, {r2,r3}
	stmia   r0!, {r1,r2}
	bx      lr
@ 0x20bb464



.include "source/arm9_mtx.s"


.include "source/arm9_fx.s"









.arm
.globl InitDummy
InitDummy: @ 20bdbc8 :arm
	bx      lr
@ 0x20bdbcc


.arm
.globl Function_20bdbcc
Function_20bdbcc: @ 20bdbcc :arm
	cmp     r0, #0x0
	ldr     r2, [pc, #0x2c] @ [0x20bdc04] (=0x7ffff000)
	blt     branch_20bdbe8
	and     r3, r0, r2
	str     r3, [r1]
	and     r0, r0, r2, lsr #19
	bx      lr

branch_20bdbe8: @ 20bdbe8 :arm
	rsb     r12, r0, #0x0
	and     r0, r12, r2
	rsb     r3, r0, #0x0
	and     r0, r12, r2, lsr #19
	str     r3, [r1]
	rsb     r0, r0, #0x0
	bx      lr
@ 0x20bdc04

.word 0x7ffff000 @ 0x20bdc04





.include "source/arm9_gx.s"


.include "source/arm9_os.s"


.include "source/arm9_mi.s"




.arm
Function_20c50d4: @ 20c50d4 :arm
	stmfd   sp!, {r3,lr}
	mov     r2, #0x0
	mov     r1, r0
	mov     r3, r2
	mov     r0, #0x1
	str     r2, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c50f4


.arm
Function_20c50f4: @ 20c50f4 :arm
	stmfd   sp!, {r3,lr}
	mov     lr, r1
	mov     r12, r2
	str     r3, [sp]
	mov     r1, r0
	mov     r2, lr
	mov     r3, r12
	mov     r0, #0x2
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c511c


.arm
Function_20c511c: @ 20c511c :arm
	stmfd   sp!, {r3,lr}
	mov     r2, #0x0
	mov     r1, r0
	mov     r3, r2
	mov     r0, #0x3
	str     r2, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c513c


.arm
Function_20c513c: @ 20c513c :arm
	stmfd   sp!, {r3,lr}
	mov     r2, r1
	mov     r3, #0x0
	mov     r1, r0
	mov     r0, #0x4
	str     r3, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c515c


.arm
Function_20c515c: @ 20c515c :arm
	ldr     r12, [pc, #0xc] @ [0x20c5170] (=Function_20c54ec)
	mov     r2, r1
	mov     r1, #0x1a
	mov     r3, #0x2
	bx      r12
@ 0x20c5170

.word Function_20c54ec @ 0x20c5170



.arm
Function_20c5174: @ 20c5174 :arm
	ldr     r12, [pc, #0xc] @ [0x20c5188] (=Function_20c54ec)
	mov     r2, r1
	mov     r1, #0x6
	mov     r3, #0x2
	bx      r12
@ 0x20c5188

.word Function_20c54ec @ 0x20c5188



.arm
Function_20c518c: @ 20c518c :arm
	ldr     r12, [pc, #0xc] @ [0x20c51a0] (=Function_20c54ec)
	mov     r2, r1
	mov     r1, #0x4
	mov     r3, #0x1
	bx      r12
@ 0x20c51a0

.word Function_20c54ec @ 0x20c51a0



.arm
Function_20c51a4: @ 20c51a4 :arm
	stmfd   sp!, {r3,lr}
	mov     r3, r2
	mov     r12, #0x2
	mov     r2, #0xc
	str     r12, [sp]
	bl      Function_20c5514
	ldmfd   sp!, {r3,pc}
@ 0x20c51c0


.arm
Function_20c51c0: @ 20c51c0 :arm
	stmfd   sp!, {r3,lr}
	mov     r3, r2
	mov     r12, #0x1
	mov     r2, #0x9
	str     r12, [sp]
	bl      Function_20c5514
	ldmfd   sp!, {r3,pc}
@ 0x20c51dc


.arm
Function_20c51dc: @ 20c51dc :arm
	stmfd   sp!, {r3,lr}
	mov     lr, r1
	mov     r3, r2
	mov     r12, #0x0
	mov     r1, r0
	mov     r2, lr
	mov     r0, #0x9
	str     r12, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c5204


.arm
Function_20c5204: @ 20c5204 :arm
	stmfd   sp!, {r3,lr}
	mov     lr, r1
	mov     r12, r2
	str     r3, [sp]
	mov     r1, r0
	mov     r2, lr
	mov     r3, r12
	mov     r0, #0xc
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c522c


.arm
Function_20c522c: @ 20c522c :arm
	stmfd   sp!, {r3-r9,lr}
	mov     r7, r2
	mov     r9, r0
	mov     r8, r1
	mov     r6, r3
	mov     r5, r7
	mov     r4, #0x0
	b       branch_20c5264
@ 0x20c524c

.arm
branch_20c524c: @ 20c524c :arm
	tst     r5, #0x1
	beq     branch_20c525c
	mov     r0, r4
	bl      Function_20c5d20
.arm
branch_20c525c: @ 20c525c :arm
	add     r4, r4, #0x1
	mov     r5, r5, lsr #1
.arm
branch_20c5264: @ 20c5264 :arm
	cmp     r4, #0x8
	bge     branch_20c5274
	cmp     r5, #0x0
	bne     branch_20c524c
.arm
branch_20c5274: @ 20c5274 :arm
	mov     r1, r9
	mov     r2, r8
	mov     r3, r7
	mov     r0, #0xd
	str     r6, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3-r9,pc}
@ 0x20c5290


.arm
Function_20c5290: @ 20c5290 :arm
	stmfd   sp!, {r3,lr}
	mov     r1, r1, lsl #30
	orr     r0, r1, r0, lsl #31
	ldr     r12, [sp, #0x8]
	mov     r1, r2
	orr     r0, r0, r12, lsl #29
	ldr     r2, [sp, #0xc]
	mov     lr, #0x0
	orr     r0, r0, r2, lsl #28
	ldr     r12, [sp, #0x10]
	mov     r2, r3
	orr     r3, r0, r12, lsl #27
	mov     r0, #0x11
	str     lr, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c52d0


.arm
Function_20c52d0: @ 20c52d0 :arm
	stmfd   sp!, {r3-r6,lr}
	sub     sp, sp, #0x4
	mov     r4, r2
	mov     r5, r1
	ldr     r2, [sp, #0x18]
	mov     r6, r0
	mov     r1, r3
	bl      Function_20c5d40
	str     r0, [sp]
	mov     r1, r6
	mov     r2, r5
	mov     r3, r4
	mov     r0, #0x12
	bl      Function_20c553c
	add     sp, sp, #0x4
	ldmfd   sp!, {r3-r6,pc}
@ 0x20c5310


.arm
Function_20c5310: @ 20c5310 :arm
	stmfd   sp!, {r3,lr}
	mov     r2, r1
	mov     r3, #0x0
	mov     r1, r0
	mov     r0, #0x1a
	str     r3, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c5330


.arm
Function_20c5330: @ 20c5330 :arm
	stmfd   sp!, {r3,lr}
	mov     r2, r1
	mov     r3, #0x0
	mov     r1, r0
	mov     r0, #0x1b
	str     r3, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c5350


.arm
Function_20c5350: @ 20c5350 :arm
	stmfd   sp!, {r3,lr}
	mov     r2, r1
	mov     r3, #0x0
	mov     r1, r0
	mov     r0, #0x13
	str     r3, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c5370


.arm
Function_20c5370: @ 20c5370 :arm
	stmfd   sp!, {r3,lr}
	mov     lr, r1
	mov     r3, r2
	mov     r12, #0x0
	mov     r1, r0
	mov     r2, lr
	mov     r0, #0x14
	str     r12, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c5398


.arm
Function_20c5398: @ 20c5398 :arm
	stmfd   sp!, {r3,lr}
	mov     r2, r1
	mov     r3, #0x0
	mov     r1, r0
	mov     r0, #0x15
	str     r3, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c53b8


.arm
Function_20c53b8: @ 20c53b8 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r12, [sp, #0x1c]
	mov     r1, r1, lsl #24
	orr     r4, r1, r3, lsl #26
	ldr     r5, [sp, #0x24]
	mov     r1, r12, lsl #22
	ldr     r3, [sp, #0x18]
	ldr     r12, [sp, #0x10]
	orr     r4, r4, r5, lsl #16
	orr     r4, r12, r4
	ldr     lr, [sp, #0x20]
	orr     r3, r1, r3, lsl #24
	ldr     r12, [sp, #0x14]
	orr     r1, r0, lr, lsl #16
	orr     r3, r12, r3
	mov     r0, #0xe
	str     r4, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3-r5,pc}
@ 0x20c5404


.arm
Function_20c5404: @ 20c5404 :arm
	stmfd   sp!, {r3,lr}
	mov     r2, r1
	mov     r3, #0x0
	mov     r1, r0
	mov     r0, #0x1e
	str     r3, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c5424


.arm
Function_20c5424: @ 20c5424 :arm
	stmfd   sp!, {r3,lr}
	mov     r2, r1
	mov     r3, #0x0
	mov     r1, r0
	mov     r0, #0x1f
	str     r3, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c5444


.arm
Function_20c5444: @ 20c5444 :arm
	stmfd   sp!, {r3,lr}
	mov     r2, r1
	mov     r3, #0x0
	mov     r1, r0
	mov     r0, #0x20
	str     r3, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c5464


.arm
Function_20c5464: @ 20c5464 :arm
	stmfd   sp!, {r3,lr}
	mov     r2, #0x0
	mov     r1, r0
	mov     r3, r2
	mov     r0, #0x17
	str     r2, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c5484


.arm
Function_20c5484: @ 20c5484 :arm
	stmfd   sp!, {r3,lr}
	mov     lr, r1
	mov     r12, r2
	str     r3, [sp]
	mov     r1, r0
	mov     r2, lr
	mov     r3, r12
	mov     r0, #0x19
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c54ac


.arm
Function_20c54ac: @ 20c54ac :arm
	stmfd   sp!, {r3,lr}
	mov     r2, #0x0
	mov     r1, r0
	mov     r3, r2
	mov     r0, #0x18
	str     r2, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c54cc


.arm
Function_20c54cc: @ 20c54cc :arm
	stmfd   sp!, {r3,lr}
	mov     r2, #0x0
	mov     r0, #0x18
	mov     r3, r2
	sub     r1, r0, #0x19
	str     r2, [sp]
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c54ec


.arm
Function_20c54ec: @ 20c54ec :arm
	stmfd   sp!, {r3,lr}
	mov     lr, r1
	mov     r12, r2
	str     r3, [sp]
	mov     r1, r0
	mov     r2, lr
	mov     r3, r12
	mov     r0, #0x6
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c5514


.arm
Function_20c5514: @ 20c5514 :arm
	stmfd   sp!, {r3,lr}
	ldr     r12, [sp, #0x8]
	mov     lr, r2
	str     r3, [sp]
	mov     r2, r1
	orr     r1, r0, r12, lsl #24
	mov     r3, lr
	mov     r0, #0x7
	bl      Function_20c553c
	ldmfd   sp!, {r3,pc}
@ 0x20c553c


.arm
Function_20c553c: @ 20c553c :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r7, r0
	mov     r0, #0x1
	mov     r6, r1
	mov     r5, r2
	mov     r4, r3
	bl      Function_20c57c4
	cmp     r0, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	str     r7, [r0, #0x4]
	str     r6, [r0, #0x8]
	str     r5, [r0, #0xc]
	ldr     r1, [sp, #0x18]
	str     r4, [r0, #0x10]
	str     r1, [r0, #0x14]
	bl      Function_20c584c
	ldmfd   sp!, {r3-r7,pc}
@ 0x20c5580


.arm
Function_20c5580: @ 20c5580 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [pc, #0x24] @ [0x20c55b0] (=RAM_21cd020)
	ldr     r0, [r1]
	cmp     r0, #0x0
	ldmnefd sp!, {r3,pc}
	ldr     r0, [pc, #0x18] @ [0x20c55b4] (=RAM_21cd024)
	mov     r2, #0x1
	str     r2, [r1]
	bl      OS_InitMutex
	bl      Function_20c55e0
	bl      Function_20c5cf0
	ldmfd   sp!, {r3,pc}
@ 0x20c55b0

.word RAM_21cd020 @ 0x20c55b0
.word RAM_21cd024 @ 0x20c55b4



.arm
Function_20c55b8: @ 20c55b8 :arm
	ldr     r12, [pc, #0x4] @ [0x20c55c4] (=OS_LockMutex)
	ldr     r0, [pc, #0x4] @ [0x20c55c8] (=RAM_21cd024)
	bx      r12
@ 0x20c55c4

.word OS_LockMutex @ =OS_LockMutex, 0x20c55c4
.word RAM_21cd024 @ 0x20c55c8



.arm
Function_20c55cc: @ 20c55cc :arm
	ldr     r12, [pc, #0x4] @ [0x20c55d8] (=OS_UnlockMutex)
	ldr     r0, [pc, #0x4] @ [0x20c55dc] (=RAM_21cd024)
	bx      r12
@ 0x20c55d8

.word OS_UnlockMutex @ =OS_UnlockMutex, 0x20c55d8
.word RAM_21cd024 @ 0x20c55dc



.arm
Function_20c55e0: @ 20c55e0 :arm
	stmfd   sp!, {r4,lr}
	bl      Function_20c5be0
	ldr     lr, [pc, #0xac] @ [0x20c569c] (=RAM_21cd320)
	ldr     r0, [pc, #0xac] @ [0x20c56a0] (=RAM_21cd040)
	mov     r4, #0x0
	str     lr, [r0]
	mov     r0, #0x18
	mov     r1, r0
	b       branch_20c5618
@ 0x20c5604

.arm
branch_20c5604: @ 20c5604 :arm
	add     r3, r4, #0x1
	mul     r2, r4, r1
	mla     r12, r3, r0, lr
	mov     r4, r3
	str     r12, [lr, r2]
.arm
branch_20c5618: @ 20c5618 :arm
	cmp     r4, #0xff
	blt     branch_20c5604
	ldr     r0, [pc, #0x7c] @ [0x20c56a4] (=RAM_21ce040)
	mov     r3, #0x0
	str     r3, [r0, #0xac8]
	ldr     r1, [pc, #0x74] @ [0x20c56a8] (=RAM_21ceb08)
	ldr     r2, [pc, #0x68] @ [0x20c56a0] (=RAM_21cd040)
	mov     r0, #0x1
	str     r1, [r2, #0x10]
	str     r3, [r2, #0x8]
	str     r3, [r2, #0xc]
	str     r3, [r2, #0x1c]
	str     r3, [r2, #0x14]
	str     r3, [r2, #0x18]
	str     r0, [r2, #0x20]
	ldr     r0, [pc, #0x50] @ [0x20c56ac] (=RAM_21cd0a0)
	ldr     r1, [pc, #0x50] @ [0x20c56b0] (=RAM_21ceb80)
	str     r3, [r2, #0x4]
	str     r0, [r1]
	bl      Function_20c5e70
	mov     r0, #0x1
	bl      Function_20c57c4
	cmp     r0, #0x0
	ldmeqfd sp!, {r4,pc}
	mov     r2, #0x1d
	ldr     r1, [pc, #0x2c] @ [0x20c56b0] (=RAM_21ceb80)
	str     r2, [r0, #0x4]
	ldr     r1, [r1]
	str     r1, [r0, #0x8]
	bl      Function_20c584c
	mov     r0, #0x1
	bl      Function_20c5884
	ldmfd   sp!, {r4,pc}
@ 0x20c569c

.word RAM_21cd320 @ 0x20c569c
.word RAM_21cd040 @ 0x20c56a0
.word RAM_21ce040 @ 0x20c56a4
.word RAM_21ceb08 @ 0x20c56a8
.word RAM_21cd0a0 @ 0x20c56ac
.word RAM_21ceb80 @ 0x20c56b0



.arm
Function_20c56b4: @ 20c56b4 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r5, r0
	bl      OS_DisableInterrupts
	mov     r4, r0
	tst     r5, #0x1
	beq     branch_20c5710
	bl      Function_20c5e48
	ldr     r5, [pc, #0xe4] @ [0x20c57bc] (=RAM_21cd040)
	ldr     r1, [r5, #0x4]
	cmp     r1, r0
	bne     branch_20c5734
	mov     r6, #0x64
.arm
branch_20c56e4: @ 20c56e4 :arm
	mov     r0, r4
	bl      OS_RestoreInterrupts
	mov     r0, r6
	bl      OS_SpinWait
	bl      OS_DisableInterrupts
	mov     r4, r0
	bl      Function_20c5e48
	ldr     r1, [r5, #0x4]
	cmp     r1, r0
	beq     branch_20c56e4
	b       branch_20c5734
@ 0x20c5710

.arm
branch_20c5710: @ 20c5710 :arm
	bl      Function_20c5e48
	ldr     r1, [pc, #0xa0] @ [0x20c57bc] (=RAM_21cd040)
	ldr     r1, [r1, #0x4]
	cmp     r1, r0
	bne     branch_20c5734
	mov     r0, r4
	bl      OS_RestoreInterrupts
	mov     r0, #0x0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20c5734

.arm
branch_20c5734: @ 20c5734 :arm
	ldr     r0, [pc, #0x80] @ [0x20c57bc] (=RAM_21cd040)
	ldr     r2, [pc, #0x80] @ [0x20c57c0] (=RAM_21cd064)
	ldr     r3, [r0, #0x14]
	add     r1, r3, #0x1
	ldr     r5, [r2, r3, lsl #0x2]
	str     r1, [r0, #0x14]
	cmp     r1, #0x8
	movgt   r1, #0x0
	strgt   r1, [r0, #0x14]
	ldr     r0, [r5]
	mov     r2, r5
	cmp     r0, #0x0
	beq     branch_20c5778
.arm
branch_20c5768: @ 20c5768 :arm
	ldr     r2, [r2]
	ldr     r0, [r2]
	cmp     r0, #0x0
	bne     branch_20c5768
.arm
branch_20c5778: @ 20c5778 :arm
	ldr     r0, [pc, #0x3c] @ [0x20c57bc] (=RAM_21cd040)
	ldr     r1, [r0, #0x10]
	cmp     r1, #0x0
	strne   r5, [r1]
	streq   r5, [r0]
	ldr     r1, [pc, #0x28] @ [0x20c57bc] (=RAM_21cd040)
	mov     r0, r4
	str     r2, [r1, #0x10]
	ldr     r2, [r1, #0x1c]
	sub     r2, r2, #0x1
	str     r2, [r1, #0x1c]
	ldr     r2, [r1, #0x4]
	add     r2, r2, #0x1
	str     r2, [r1, #0x4]
	bl      OS_RestoreInterrupts
	mov     r0, r5
	ldmfd   sp!, {r4-r6,pc}
@ 0x20c57bc

.word RAM_21cd040 @ 0x20c57bc
.word RAM_21cd064 @ 0x20c57c0



.arm
Function_20c57c4: @ 20c57c4 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20c5cb0
	cmp     r0, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4,pc}
	bl      Function_20c5c68
	cmp     r0, #0x0
	ldmnefd sp!, {r4,pc}
	tst     r4, #0x1
	moveq   r0, #0x0
	ldmeqfd sp!, {r4,pc}
	bl      Function_20c5ba0
	cmp     r0, #0x0
	ble     branch_20c5824
	mov     r4, #0x0
.arm
branch_20c5804: @ 20c5804 :arm
	mov     r0, r4
	bl      Function_20c56b4
	cmp     r0, #0x0
	bne     branch_20c5804
	bl      Function_20c5c68
	cmp     r0, #0x0
	beq     branch_20c582c
	ldmfd   sp!, {r4,pc}
@ 0x20c5824

.arm
branch_20c5824: @ 20c5824 :arm
	mov     r0, #0x1
	bl      Function_20c5884
.arm
branch_20c582c: @ 20c582c :arm
	bl      Function_20c5c40
	mov     r4, #0x1
.arm
branch_20c5834: @ 20c5834 :arm
	mov     r0, r4
	bl      Function_20c56b4
	bl      Function_20c5c68
	cmp     r0, #0x0
	beq     branch_20c5834
	ldmfd   sp!, {r4,pc}
@ 0x20c584c


.arm
Function_20c584c: @ 20c584c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      OS_DisableInterrupts
	ldr     r1, [pc, #0x20] @ [0x20c5880] (=RAM_21cd040)
	ldr     r2, [r1, #0xc]
	cmp     r2, #0x0
	streq   r4, [r1, #0x8]
	strne   r4, [r2]
	str     r4, [r1, #0xc]
	mov     r1, #0x0
	str     r1, [r4]
	bl      OS_RestoreInterrupts
	ldmfd   sp!, {r4,pc}
@ 0x20c5880

.word RAM_21cd040 @ 0x20c5880



.arm
Function_20c5884: @ 20c5884 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r0
	bl      OS_DisableInterrupts
	ldr     r4, [pc, #0x19c] @ [0x20c5a34] (=RAM_21cd040)
	mov     r9, r0
	ldr     r1, [r4, #0x8]
	cmp     r1, #0x0
	bne     branch_20c58b0
	bl      OS_RestoreInterrupts
	mov     r0, #0x1
	ldmfd   sp!, {r3-r11,pc}

branch_20c58b0: @ 20c58b0 :arm
	ldr     r1, [r4, #0x1c]
	cmp     r1, #0x8
	blt     branch_20c5908
	tst     r10, #0x1
	bne     branch_20c58d0
	bl      OS_RestoreInterrupts
	mov     r0, #0x0
	ldmfd   sp!, {r3-r11,pc}

branch_20c58d0: @ 20c58d0 :arm
	mov     r5, #0x1
branch_20c58d4: @ 20c58d4 :arm
	mov     r0, r5
	bl      Function_20c56b4
	ldr     r0, [r4, #0x1c]
	cmp     r0, #0x8
	bge     branch_20c58d4
	ldr     r0, [pc, #0x144] @ [0x20c5a34] (=RAM_21cd040)
	ldr     r0, [r0, #0x8]
	cmp     r0, #0x0
	bne     branch_20c5908
	mov     r0, r9
	bl      OS_RestoreInterrupts
	mov     r0, #0x1
	ldmfd   sp!, {r3-r11,pc}

branch_20c5908: @ 20c5908 :arm
	ldr     r0, [pc, #0x128] @ [0x20c5a38] (=RAM_21cd320)
	mov     r1, #6, 22 @ #0x1800
	bl      DC_FlushRange
	ldr     r1, [pc, #0x118] @ [0x20c5a34] (=RAM_21cd040)
	mov     r0, #0x7
	ldr     r1, [r1, #0x8]
	mov     r2, #0x0
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	bge     branch_20c59c8
	tst     r10, #0x1
	bne     branch_20c5948
	mov     r0, r9
	bl      OS_RestoreInterrupts
	mov     r0, #0x0
	ldmfd   sp!, {r3-r11,pc}

branch_20c5948: @ 20c5948 :arm
	mov     r11, #0x0
	mov     r5, #0x7
	mov     r8, r11
	ldr     r7, [pc, #0xdc] @ [0x20c5a38] (=RAM_21cd320)
	mov     r6, #6, 22 @ #0x1800
	ldr     r4, [pc, #0xd0] @ [0x20c5a34] (=RAM_21cd040)
	b       branch_20c59a4

branch_20c5964: @ 20c5964 :arm
	mov     r0, r9
	bl      OS_RestoreInterrupts
	mov     r0, r8
	bl      Function_20c56b4
	bl      OS_DisableInterrupts
	mov     r9, r0
	mov     r0, r7
	mov     r1, r6
	bl      DC_FlushRange
	ldr     r0, [r4, #0x8]
	cmp     r0, #0x0
	bne     branch_20c59a4
	mov     r0, r9
	bl      OS_RestoreInterrupts
	mov     r0, #0x1
	ldmfd   sp!, {r3-r11,pc}

branch_20c59a4: @ 20c59a4 :arm
	ldr     r0, [r4, #0x1c]
	cmp     r0, #0x8
	bge     branch_20c5964
	ldr     r1, [r4, #0x8]
	mov     r0, r5
	mov     r2, r11
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	blt     branch_20c5964
branch_20c59c8: @ 20c59c8 :arm
	ldr     r0, [pc, #0x64] @ [0x20c5a34] (=RAM_21cd040)
	ldr     r2, [pc, #0x68] @ [0x20c5a3c] (=RAM_21cd064)
	ldr     r3, [r0, #0x18]
	ldr     r4, [r0, #0x8]
	add     r1, r3, #0x1
	str     r4, [r2, r3, lsl #0x2]
	str     r1, [r0, #0x18]
	cmp     r1, #0x8
	movgt   r1, #0x0
	strgt   r1, [r0, #0x18]
	ldr     r1, [pc, #0x3c] @ [0x20c5a34] (=RAM_21cd040)
	mov     r0, #0x0
	str     r0, [r1, #0x8]
	str     r0, [r1, #0xc]
	ldr     r2, [r1, #0x1c]
	mov     r0, r9
	add     r2, r2, #0x1
	str     r2, [r1, #0x1c]
	ldr     r2, [r1, #0x20]
	add     r2, r2, #0x1
	str     r2, [r1, #0x20]
	bl      OS_RestoreInterrupts
	tst     r10, #0x2
	beq     branch_20c5a2c
	bl      Function_20c5c40
branch_20c5a2c: @ 20c5a2c :arm
	mov     r0, #0x1
	ldmfd   sp!, {r3-r11,pc}
@ 0x20c5a34

.word RAM_21cd040 @ 0x20c5a34
.word RAM_21cd320 @ 0x20c5a38
.word RAM_21cd064 @ 0x20c5a3c



.arm
Function_20c5a40: @ 20c5a40 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	bl      Function_20c5ad8
	cmp     r0, #0x0
	ldmnefd sp!, {r3-r5,pc}
	mov     r4, #0x0
branch_20c5a58: @ 20c5a58 :arm
	mov     r0, r4
	bl      Function_20c56b4
	cmp     r0, #0x0
	bne     branch_20c5a58
	mov     r0, r5
	bl      Function_20c5ad8
	cmp     r0, #0x0
	ldmnefd sp!, {r3-r5,pc}
	bl      Function_20c5c40
	mov     r0, r5
	bl      Function_20c5ad8
	cmp     r0, #0x0
	ldmnefd sp!, {r3-r5,pc}
	mov     r4, #0x1
.arm
branch_20c5a90: @ 20c5a90 :arm
	mov     r0, r4
	bl      Function_20c56b4
	mov     r0, r5
	bl      Function_20c5ad8
	cmp     r0, #0x0
	beq     branch_20c5a90
	ldmfd   sp!, {r3-r5,pc}
@ 0x20c5aac


.arm
Function_20c5aac: @ 20c5aac :arm
	stmfd   sp!, {r4,lr}
	bl      OS_DisableInterrupts
	ldr     r1, [pc, #0x18] @ [0x20c5ad4] (=RAM_21cd040)
	ldr     r2, [r1, #0x8]
	cmp     r2, #0x0
	ldreq   r4, [r1, #0x4]
	ldrne   r4, [r1, #0x20]
	bl      OS_RestoreInterrupts
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20c5ad4

.word RAM_21cd040 @ 0x20c5ad4



.arm
Function_20c5ad8: @ 20c5ad8 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      OS_DisableInterrupts
	ldr     r1, [pc, #0x38] @ [0x20c5b24] (=RAM_21cd040)
	ldr     r1, [r1, #0x4]
	cmp     r4, r1
	bls     branch_20c5b08
	sub     r1, r4, r1
	cmp     r1, #2, 2 @ #0x80000000
	movcc   r4, #0x0
	movcs   r4, #0x1
	b       branch_20c5b18
@ 0x20c5b08

.arm
branch_20c5b08: @ 20c5b08 :arm
	sub     r1, r1, r4
	cmp     r1, #2, 2 @ #0x80000000
	movcc   r4, #0x1
	movcs   r4, #0x0
.arm
branch_20c5b18: @ 20c5b18 :arm
	bl      OS_RestoreInterrupts
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20c5b24

.word RAM_21cd040 @ 0x20c5b24



.arm
Function_20c5b28: @ 20c5b28 :arm
	stmfd   sp!, {r4,lr}
	bl      OS_DisableInterrupts
	ldr     r1, [pc, #0x28] @ [0x20c5b60] (=RAM_21cd040)
	mov     r4, #0x0
	ldr     r1, [r1]
	cmp     r1, #0x0
	beq     branch_20c5b54
.arm
branch_20c5b44: @ 20c5b44 :arm
	ldr     r1, [r1]
	add     r4, r4, #0x1
	cmp     r1, #0x0
	bne     branch_20c5b44
.arm
branch_20c5b54: @ 20c5b54 :arm
	bl      OS_RestoreInterrupts
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20c5b60

.word RAM_21cd040 @ 0x20c5b60



.arm
Function_20c5b64: @ 20c5b64 :arm
	stmfd   sp!, {r4,lr}
	bl      OS_DisableInterrupts
	ldr     r1, [pc, #0x28] @ [0x20c5b9c] (=RAM_21cd040)
	mov     r4, #0x0
	ldr     r1, [r1, #0x8]
	cmp     r1, #0x0
	beq     branch_20c5b90
.arm
branch_20c5b80: @ 20c5b80 :arm
	ldr     r1, [r1]
	add     r4, r4, #0x1
	cmp     r1, #0x0
	bne     branch_20c5b80
.arm
branch_20c5b90: @ 20c5b90 :arm
	bl      OS_RestoreInterrupts
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20c5b9c

.word RAM_21cd040 @ 0x20c5b9c



.arm
Function_20c5ba0: @ 20c5ba0 :arm
	stmfd   sp!, {r4,lr}
	bl      Function_20c5b28
	mov     r4, r0
	bl      Function_20c5b64
	rsb     r1, r4, #1, 24 @ #0x100
	sub     r0, r1, r0
	ldmfd   sp!, {r4,pc}
@ Function_20c5bbc


.arm
Function_20c5bbc: @ 20c5bbc :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r1
	bl      OS_DisableInterrupts
	mov     r4, r0
	mov     r0, r5
	bl      Function_20c5d70
	mov     r0, r4
	bl      OS_RestoreInterrupts
	ldmfd   sp!, {r3-r5,pc}
@ 0x20c5be0


.arm
Function_20c5be0: @ 20c5be0 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r1, [pc, #0x50] @ [0x20c5c3c] (=Function_20c5bbc)
	mov     r0, #0x7
	bl      PXI_SetFifoRecvCallback
	bl      Function_20c5cb0
	cmp     r0, #0x0
	ldmeqfd sp!, {r4-r6,pc}
	mov     r0, #0x7
	mov     r1, #0x1
	bl      PXI_IsCallbackReady
	cmp     r0, #0x0
	ldmnefd sp!, {r4-r6,pc}
	mov     r6, #0x64
	mov     r5, #0x7
	mov     r4, #0x1
.arm
branch_20c5c1c: @ 20c5c1c :arm
	mov     r0, r6
	bl      OS_SpinWait
	mov     r0, r5
	mov     r1, r4
	bl      PXI_IsCallbackReady
	cmp     r0, #0x0
	beq     branch_20c5c1c
	ldmfd   sp!, {r4-r6,pc}
@ 0x20c5c3c

.word Function_20c5bbc @ 0x20c5c3c



.arm
Function_20c5c40: @ 20c5c40 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, #0x7
	mov     r4, #0x0

branch_20c5c4c: @ 20c5c4c :arm
	mov     r0, r5
	mov     r1, r4
	mov     r2, r4
	bl      PXI_SendWordByFifo
	cmp     r0, #0x0
	blt     branch_20c5c4c

	ldmfd   sp!, {r3-r5,pc}
@ 0x20c5c68


.arm
Function_20c5c68: @ 20c5c68 :arm
	stmfd   sp!, {r4,lr}
	bl      OS_DisableInterrupts
	ldr     r1, [pc, #0x34] @ [0x20c5cac] (=RAM_21cd040)
	ldr     r4, [r1]
	cmp     r4, #0x0
	bne     branch_20c5c8c
	bl      OS_RestoreInterrupts
	mov     r0, #0x0
	ldmfd   sp!, {r4,pc}

branch_20c5c8c: @ 20c5c8c :arm
	ldr     r2, [r4]
	str     r2, [r1]
	cmp     r2, #0x0
	moveq   r2, #0x0
	streq   r2, [r1, #0x10]
	bl      OS_RestoreInterrupts
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20c5cac

.word RAM_21cd040 @ 0x20c5cac



.arm
Function_20c5cb0: @ 20c5cb0 :arm
	stmfd   sp!, {r4,lr}

	bl      Function_20c2728
	cmp     r0, #0x0
	moveq   r0, #0x1
	ldmeqfd sp!, {r4,pc}
	bl      OS_DisableInterrupts
	ldr     r1, [pc, #0x1c] @ [0x20c5cec] (=0x4fff200)
	mov     r2, #0x10
	str     r2, [r1]
	ldr     r4, [r1]
	bl      OS_RestoreInterrupts
	cmp     r4, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0

	ldmfd   sp!, {r4,pc}
@ 0x20c5cec

.word 0x4fff200 @ 0x20c5cec



.arm
Function_20c5cf0: @ 20c5cf0 :arm
	mov     r1, #0x0
	ldr     r2, [pc, #0x20] @ [0x20c5d1c] (=RAM_21ceb20)
	mov     r0, r1
branch_20c5cfc: @ 20c5cfc :arm
	str     r0, [r2]
	str     r0, [r2, #0x4]
	add     r1, r1, #0x1
	strb    r0, [r2, #0x8]
	cmp     r1, #0x8
	add     r2, r2, #0xc
	blt     branch_20c5cfc
	bx      lr
@ 0x20c5d1c

.word RAM_21ceb20 @ 0x20c5d1c



.arm
Function_20c5d20: @ 20c5d20 :arm
	ldr     r2, [pc, #0x14] @ [0x20c5d3c] (=RAM_21ceb20)
	mov     r1, #0xc
	mla     r1, r0, r1, r2
	ldrb    r0, [r1, #0x8]
	add     r0, r0, #0x1
	strb    r0, [r1, #0x8]
	bx      lr
@ 0x20c5d3c

.word RAM_21ceb20 @ 0x20c5d3c



.arm
Function_20c5d40: @ 20c5d40 :arm
	mov     r3, #0xc
	mul     r3, r0, r3
	ldr     r0, [pc, #0x1c] @ [0x20c5d6c] (=RAM_21ceb20)
	str     r1, [r0, r3]
	add     r1, r0, r3
	str     r2, [r1, #0x4]
	ldrb    r0, [r1, #0x8]
	add     r0, r0, #0x1
	strb    r0, [r1, #0x8]
	and     r0, r0, #0xff
	bx      lr
@ 0x20c5d6c

.word RAM_21ceb20 @ 0x20c5d6c



.arm
Function_20c5d70: @ 20c5d70 :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [pc, #0x34] @ [0x20c5db0] (=RAM_21ceb20)
	and     r2, r0, #0xff
	mov     r1, #0xc
	mla     r3, r2, r1, r3
	mov     r1, r0, asr #8
	ldrb    r0, [r3, #0x8]
	and     r1, r1, #0xff
	cmp     r1, r0
	ldmnefd sp!, {r3,pc}
	ldr     r1, [r3]
	cmp     r1, #0x0
	ldmeqfd sp!, {r3,pc}
	ldr     r0, [r3, #0x4]
	blx     r1
	ldmfd   sp!, {r3,pc}
@ 0x20c5db0

.word RAM_21ceb20 @ 0x20c5db0



.arm
Function_20c5db4: @ 20c5db4 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x1c] @ [0x20c5ddc] (=RAM_21ceb80)
	mov     r1, #0x4
	ldr     r0, [r0]
	add     r0, r0, #0x4
	bl      DC_InvalidateRange
	ldr     r0, [pc, #0x8] @ [0x20c5ddc] (=RAM_21ceb80)
	ldr     r0, [r0]
	ldr     r0, [r0, #0x4]
	ldmfd   sp!, {r3,pc}
@ 0x20c5ddc

.word RAM_21ceb80 @ 0x20c5ddc



.arm
Function_20c5de0: @ 20c5de0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x1c] @ [0x20c5e08] (=RAM_21ceb80)
	mov     r1, #0x2
	ldr     r0, [r0]
	add     r0, r0, #0x8
	bl      DC_InvalidateRange
	ldr     r0, [pc, #0x8] @ [0x20c5e08] (=RAM_21ceb80)
	ldr     r0, [r0]
	ldrh    r0, [r0, #0x8]
	ldmfd   sp!, {r3,pc}
@ 0x20c5e08

.word RAM_21ceb80 @ 0x20c5e08



.arm
Function_20c5e0c: @ 20c5e0c :arm
	stmfd   sp!, {r4,lr}
	mov     r1, #0x24
	mul     r4, r0, r1
	ldr     r0, [pc, #0x24] @ [0x20c5e44] (=RAM_21ceb80)
	mov     r1, #0x4
	ldr     r0, [r0]
	add     r0, r0, #0x40
	add     r0, r0, r4
	bl      DC_InvalidateRange
	ldr     r0, [pc, #0xc] @ [0x20c5e44] (=RAM_21ceb80)
	ldr     r0, [r0]
	add     r0, r0, r4
	ldr     r0, [r0, #0x40]
	ldmfd   sp!, {r4,pc}
@ 0x20c5e44

.word RAM_21ceb80 @ 0x20c5e44



.arm
Function_20c5e48: @ 20c5e48 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x18] @ [0x20c5e6c] (=RAM_21ceb80)
	mov     r1, #0x4
	ldr     r0, [r0]
	bl      DC_InvalidateRange
	ldr     r0, [pc, #0x8] @ [0x20c5e6c] (=RAM_21ceb80)
	ldr     r0, [r0]
	ldr     r0, [r0]
	ldmfd   sp!, {r3,pc}
@ 0x20c5e6c

.word RAM_21ceb80 @ 0x20c5e6c



.arm
Function_20c5e70: @ 20c5e70 :arm
	stmfd   sp!, {r4,lr}
	mov     r12, #0x0
	str     r12, [r0, #0x4]
	strh    r12, [r0, #0x8]
	strh    r12, [r0, #0xa]
	mov     r4, r0
	str     r12, [r0]
	mvn     r2, #0x0
	mov     r3, r12
.arm
branch_20c5e94: @ 20c5e94 :arm
	mov     lr, r3
	str     r3, [r4, #0x40]
.arm
branch_20c5e9c: @ 20c5e9c :arm
	add     r1, r4, lr, lsl #1
	add     lr, lr, #0x1
	strh    r2, [r1, #0x20]
	cmp     lr, #0x10
	blt     branch_20c5e9c
	add     r12, r12, #0x1
	cmp     r12, #0x10
	add     r4, r4, #0x24
	blt     branch_20c5e94
	mov     r3, #0x0
	mvn     r2, #0x0
.arm
branch_20c5ec8: @ 20c5ec8 :arm
	add     r1, r0, r3, lsl #1
	add     r1, r1, #2, 24 @ #0x200
	add     r3, r3, #0x1
	strh    r2, [r1, #0x60]
	cmp     r3, #0x10
	blt     branch_20c5ec8
	mov     r1, #10, 26 @ #0x280
	bl      DC_FlushRange
	ldmfd   sp!, {r4,pc}
@ 0x20c5eec


.arm
Function_20c5eec: @ 20c5eec :arm
	ldr     r1, [pc, #0x60] @ [0x20c5f54] (=0xfffffd2d)
	cmp     r0, r1
	movlt   r0, r1
	blt     branch_20c5f04
	cmp     r0, #0x0
	movgt   r0, #0x0
branch_20c5f04: @ 20c5f04 :arm
	add     r1, r0, #0xd3
	mvn     r2, #0xef
	cmp     r0, r2
	ldr     r3, [pc, #0x40] @ [0x20c5f58] (=Unknown_20fe1b0)
	add     r1, r1, #2, 24 @ #0x200
	ldrb    r3, [r3, r1]
	movlt   r0, #0x3
	blt     branch_20c5f44
	add     r1, r2, #0x78
	cmp     r0, r1
	movlt   r0, #0x2
	blt     branch_20c5f44
	add     r1, r2, #0xb4
	cmp     r0, r1
	movlt   r0, #0x1
	movge   r0, #0x0
branch_20c5f44: @ 20c5f44 :arm
	orr     r0, r3, r0, lsl #8
	mov     r0, r0, lsl #16
	mov     r0, r0, lsr #16
	bx      lr
@ 0x20c5f54

.word 0xfffffd2d @ 0x20c5f54
.word Unknown_20fe1b0 @ 0x20c5f58



.arm
Function_20c5f5c: @ 20c5f5c :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	mov     r4, r2
	bl      Function_20c55b8
	add     r3, r6, r5, lsl #3
	ldr     r2, [r3, #0x18]
	cmp     r2, #0x0
	beq     branch_20c5fec
	cmp     r4, r2
	bne     branch_20c5f90
	bl      Function_20c55cc
	ldmfd   sp!, {r4-r6,pc}
@ 0x20c5f90

.arm
branch_20c5f90: @ 20c5f90 :arm
	add     r1, r6, #0x18
	ldr     r0, [r2, #0x18]
	add     r12, r1, r5, lsl #3
	cmp     r12, r0
	bne     branch_20c5fbc
	ldr     r0, [r3, #0x1c]
	mov     r1, #0x3c
	str     r0, [r2, #0x18]
	ldr     r0, [r3, #0x18]
	bl      DC_StoreRange
	b       branch_20c5fec
@ 0x20c5fbc

.arm
branch_20c5fbc: @ 20c5fbc :arm
	cmp     r0, #0x0
	beq     branch_20c5fd8
.arm
branch_20c5fc4: @ 20c5fc4 :arm
	ldr     r1, [r0, #0x4]
	cmp     r12, r1
	movne   r0, r1
	cmpne   r1, #0x0
	bne     branch_20c5fc4
.arm
branch_20c5fd8: @ 20c5fd8 :arm
	add     r1, r6, r5, lsl #3
	ldr     r2, [r1, #0x1c]
	mov     r1, #0x8
	str     r2, [r0, #0x4]
	bl      DC_StoreRange
.arm
branch_20c5fec: @ 20c5fec :arm
	add     r0, r6, #0x18
	ldr     r1, [r4, #0x18]
	add     r0, r0, r5, lsl #3
	str     r0, [r4, #0x18]
	add     r0, r6, r5, lsl #3
	str     r1, [r0, #0x1c]
	str     r4, [r0, #0x18]
	bl      Function_20c55cc
	mov     r0, r6
	mov     r1, #0x3c
	bl      DC_StoreRange
	mov     r0, r4
	mov     r1, #0x3c
	bl      DC_StoreRange
	ldmfd   sp!, {r4-r6,pc}
@ 0x20c6028


.arm
Function_20c6028: @ 20c6028 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r7, r0
	bl      Function_20c55b8
	add     r5, r7, #0x18
	mov     r6, #0x0
	mov     r8, #0x8
	mov     r4, #0x3c
branch_20c6044: @ 20c6044 :arm
	add     r1, r7, r6, lsl #3
	ldr     r0, [r1, #0x18]
	cmp     r0, #0x0
	beq     branch_20c60a8
	ldr     r3, [r0, #0x18]
	cmp     r5, r3
	bne     branch_20c6074
	ldr     r2, [r1, #0x1c]
	mov     r1, r4
	str     r2, [r0, #0x18]
	bl      DC_StoreRange
	b       branch_20c60a8

branch_20c6074: @ 20c6074 :arm
	cmp     r3, #0x0
	beq     branch_20c6090
branch_20c607c: @ 20c607c :arm
	ldr     r0, [r3, #0x4]
	cmp     r5, r0
	movne   r3, r0
	cmpne   r0, #0x0
	bne     branch_20c607c
branch_20c6090: @ 20c6090 :arm
	add     r0, r7, r6, lsl #3
	ldr     r2, [r0, #0x1c]
	mov     r0, r3
	mov     r1, r8
	str     r2, [r3, #0x4]
	bl      DC_StoreRange
branch_20c60a8: @ 20c60a8 :arm
	add     r6, r6, #0x1
	cmp     r6, #0x4
	add     r5, r5, #0x8
	blt     branch_20c6044
	bl      Function_20c55cc
	ldmfd   sp!, {r4-r8,pc}
@ 0x20c60c0


.arm
Function_20c60c0: @ 20c60c0 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r4, r0
	bl      Function_20c55b8
	ldr     r0, [r4, #0x18]
	cmp     r0, #0x0
	beq     branch_20c6100
	mov     r5, #0x0
	mov     r4, #0x8
branch_20c60e0: @ 20c60e0 :arm
	ldr     r6, [r0, #0x4]
	mov     r1, r4
	str     r5, [r0]
	str     r5, [r0, #0x4]
	bl      DC_StoreRange
	mov     r0, r6
	cmp     r6, #0x0
	bne     branch_20c60e0
branch_20c6100: @ 20c6100 :arm
	bl      Function_20c55cc
	ldmfd   sp!, {r4-r6,pc}
@ 0x20c6108


.arm
Function_20c6108: @ 20c6108 :arm
	sub     sp, sp, #0x8
	mov     r1, #0x0
	str     r1, [r0]
	str     r1, [sp]
	str     r1, [sp, #0x4]
	str     r1, [r0, #0x4]
	add     sp, sp, #0x8
	bx      lr
@ 0x20c6128


.arm
Function_20c6128: @ 20c6128 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r4, [r2]
	ldr     r3, [r0, #0x38]
	cmp     r4, r3
	bhs     branch_20c62d0
	mov     r12, #0x0
.arm
branch_20c6140: @ 20c6140 :arm
	add     r3, r0, r4, lsl #2
	ldr     r4, [r3, #0x3c]
	and     r3, r4, #0xff
	strb    r4, [r1]
	cmp     r3, #0x10
	mov     r4, r4, lsr #8
	bgt     branch_20c6188
	cmp     r3, #0x10
	bge     branch_20c61d4
	cmp     r3, #0x5
	addls   pc, pc, r3, lsl #2
	b       branch_20c62b4
	b       branch_20c62b4
	b       branch_20c6194
	b       branch_20c6194
	b       branch_20c6194
	b       branch_20c6194
	b       branch_20c6194
@ 0x20c6188

.arm
branch_20c6188: @ 20c6188 :arm
	cmp     r3, #0x11
	beq     branch_20c6248
	b       branch_20c62b4
@ 0x20c6194

.arm
branch_20c6194: @ 20c6194 :arm
	add     r5, r0, r4
	ldrh    r4, [r0, r4]
	ldrh    r3, [r5, #0x2]
	mov     r0, #0x1
	strh    r4, [r1, #0x2]
	strh    r3, [r1, #0x4]
	ldrh    r4, [r5, #0x4]
	ldrh    r3, [r5, #0x6]
	strh    r4, [r1, #0x6]
	strh    r3, [r1, #0x8]
	ldrh    r3, [r5, #0x8]
	strh    r3, [r1, #0xa]
	ldr     r1, [r2]
	add     r1, r1, #0x1
	str     r1, [r2]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20c61d4

.arm
branch_20c61d4: @ 20c61d4 :arm
	add     r5, r0, r4
	b       branch_20c6228
@ 0x20c61dc

.arm
branch_20c61dc: @ 20c61dc :arm
	mov     r0, #0xc
	mla     r12, lr, r0, r5
	ldrh    r4, [r12, #0x2]
	ldrh    r3, [r12, #0x4]
	mov     r0, #0x1
	strh    r4, [r1]
	strh    r3, [r1, #0x2]
	ldrh    r4, [r12, #0x6]
	ldrh    r3, [r12, #0x8]
	strh    r4, [r1, #0x4]
	strh    r3, [r1, #0x6]
	ldrh    r4, [r12, #0xa]
	ldrh    r3, [r12, #0xc]
	strh    r4, [r1, #0x8]
	strh    r3, [r1, #0xa]
	ldr     r1, [r2, #0x4]
	add     r1, r1, #0x1
	str     r1, [r2, #0x4]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20c6228

.arm
branch_20c6228: @ 20c6228 :arm
	ldrb    r4, [r5, #0x1]
	ldrb    r3, [r5]
	ldr     lr, [r2, #0x4]
	sub     r3, r4, r3
	add     r3, r3, #0x1
	cmp     lr, r3
	blo     branch_20c61dc
	b       branch_20c62b4
@ 0x20c6248

.arm
branch_20c6248: @ 20c6248 :arm
	add     r4, r0, r4
	b       branch_20c62a8
@ 0x20c6250

.arm
branch_20c6250: @ 20c6250 :arm
	ldrb    lr, [r4, r3]
	cmp     lr, #0x0
	beq     branch_20c62b4
	mov     r0, #0xc
	mla     lr, r3, r0, r4
	ldrh    r12, [lr, #0x8]
	ldrh    r3, [lr, #0xa]
	mov     r0, #0x1
	strh    r12, [r1]
	strh    r3, [r1, #0x2]
	ldrh    r12, [lr, #0xc]
	ldrh    r3, [lr, #0xe]
	strh    r12, [r1, #0x4]
	strh    r3, [r1, #0x6]
	ldrh    r12, [lr, #0x10]
	ldrh    r3, [lr, #0x12]
	strh    r12, [r1, #0x8]
	strh    r3, [r1, #0xa]
	ldr     r1, [r2, #0x4]
	add     r1, r1, #0x1
	str     r1, [r2, #0x4]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20c62a8

.arm
branch_20c62a8: @ 20c62a8 :arm
	ldr     r3, [r2, #0x4]
	cmp     r3, #0x8
	blo     branch_20c6250
.arm
branch_20c62b4: @ 20c62b4 :arm
	ldr     r3, [r2]
	add     r3, r3, #0x1
	stmia   r2, {r3,r12}
	ldr     r4, [r2]
	ldr     r3, [r0, #0x38]
	cmp     r4, r3
	blo     branch_20c6140
.arm
branch_20c62d0: @ 20c62d0 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20c62d8


.arm
Function_20c62d8: @ 20c62d8 :arm
	ldr     r0, [r0, #0x38]
	bx      lr
@ 0x20c62e0


.arm
Function_20c62e0: @ 20c62e0 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r6, r0
	mov     r5, r1
	mov     r4, r2
	bl      Function_20c55b8
	add     r0, r6, #0x3c
	add     r2, r6, r5, lsl #2
	add     r0, r0, r5, lsl #2
	mov     r1, #0x4
	str     r4, [r2, #0x3c]
	bl      DC_StoreRange
	bl      Function_20c55cc
	ldmfd   sp!, {r4-r6,pc}
@ 0x20c6314


.arm
Function_20c6314: @ 20c6314 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r4, r1
	bl      Function_20c55b8
	add     r0, r5, r4, lsl #2
	ldr     r4, [r0, #0x3c]
	cmp     r4, #0x0
	beq     branch_20c6340
	cmp     r4, #2, 8 @ #0x2000000
	addcc   r4, r5, r4
	b       branch_20c6344

branch_20c6340: @ 20c6340 :arm
	mov     r4, #0x0
branch_20c6344: @ 20c6344 :arm
	bl      Function_20c55cc
	mov     r0, r4
	ldmfd   sp!, {r3-r5,pc}
@ 0x20c6350


.arm
Function_20c6350: @ 20c6350 :arm
	ldr     r12, [pc, #0x0] @ [0x20c6358] (=Function_20c635c)
	bx      r12
@ 0x20c6358

.word Function_20c635c @ 0x20c6358



.arm
Function_20c635c: @ 20c635c :arm
	stmfd   sp!, {r3-r5,lr}
	bl      OS_DisableInterrupts
	ldr     r1, [pc, #0xd4] @ [0x20c6440] (=RAM_21ceb84)
	mov     r4, r0
	ldrh    r0, [r1]
	cmp     r0, #0x0
	bne     branch_20c6434
	mov     r2, #0x1
	strh    r2, [r1]
	mov     r2, #0x0
	ldr     r0, [pc, #0xb8] @ [0x20c6444] (=RAM_27ffc00)
	mov     r1, r2
	str     r2, [r0, #0x388]
	ldr     r0, [pc, #0xb0] @ [0x20c6448] (=RAM_21ceb88)
.arm
branch_20c6394: @ 20c6394 :arm
	str     r1, [r0, r2, lsl #0x2]
	add     r2, r2, #0x1
	cmp     r2, #0x20
	blt     branch_20c6394
	ldr     r2, [pc, #0xa0] @ [0x20c644c] (=0xc408)
	ldr     r1, [pc, #0xa0] @ [0x20c6450] (=REG_IPC_FIFO_CR)
	mov     r0, #IRQ_FIFO_NOT_EMPTY
	strh    r2, [r1]
	bl      OS_ResetRequestIrqMask
	ldr     r1, [pc, #0x94] @ [0x20c6454] (=PXIi_HandlerRecvFifoNotEmpty)
	mov     r0, #IRQ_FIFO_NOT_EMPTY
	bl      OS_SetIrqFunction
	mov     r0, #IRQ_FIFO_NOT_EMPTY
	bl      OS_EnableIrqMask
	mov     r5, #0x0
	ldr     r3, [pc, #0x80] @ [0x20c6458] (=REG_IPC_SYNC)
	mov     r1, r5
	mov     r2, #250, 30 @ #0x3e8
branch_20c63dc: @ 20c63dc :arm
	ldrh    r0, [r3]
	ands    lr, r0, #0xf
	mov     r0, lr, lsl #8
	strh    r0, [r3]
	bne     branch_20c63f8
	cmp     r5, #0x4
	bgt     branch_20c6434
.arm
branch_20c63f8: @ 20c63f8 :arm
	ldrh    r0, [r3]
	mov     r12, r2
	and     r0, r0, #0xf
	cmp     r0, lr
	bne     branch_20c642c
.arm
branch_20c640c: @ 20c640c :arm
	cmp     r12, #0x0
	movle   r5, r1
	ble     branch_20c642c
	ldrh    r0, [r3]
	sub     r12, r12, #0x1
	and     r0, r0, #0xf
	cmp     r0, lr
	beq     branch_20c640c
.arm
branch_20c642c: @ 20c642c :arm
	add     r5, r5, #0x1
	b       branch_20c63dc

branch_20c6434: @ 20c6434 :arm
	mov     r0, r4
	bl      OS_RestoreInterrupts
	ldmfd   sp!, {r3-r5,pc}
@ 0x20c6440

.word RAM_21ceb84 @ 0x20c6440
.word RAM_27ffc00 @ 0x20c6444
.word RAM_21ceb88 @ 0x20c6448
.word 0xc408 @ 0x20c644c
.word REG_IPC_FIFO_CR @ 0x20c6450
.word PXIi_HandlerRecvFifoNotEmpty @ 0x20c6454
.word REG_IPC_SYNC @ 0x20c6458



.arm
PXI_SetFifoRecvCallback: @ 20c645c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	mov     r5, r1
	bl      OS_DisableInterrupts
	ldr     r1, [pc, #0x2c] @ [0x20c64a0] (=RAM_21ceb88)
	ldr     r3, [pc, #0x2c] @ [0x20c64a4] (=RAM_27ffc00)
	str     r5, [r1, r4, lsl #0x2]
	cmp     r5, #0x0
	ldrne   r2, [r3, #0x388]
	mov     r1, #0x1
	orrne   r1, r2, r1, lsl r4
	mvneq   r1, r1, lsl r4
	ldreq   r2, [r3, #0x388]
	andeq   r1, r2, r1
	str     r1, [r3, #0x388]
	bl      OS_RestoreInterrupts
	ldmfd   sp!, {r3-r5,pc}
@ 0x20c64a0

.word RAM_21ceb88 @ 0x20c64a0
.word RAM_27ffc00 @ 0x20c64a4



.arm
.globl PXI_IsCallbackReady
PXI_IsCallbackReady: @ 20c64a8 :arm
	ldr     r2, [pc, #0x18] @ [0x20c64c8] (=RAM_27ffc00)
	mov     r3, #0x1
	add     r1, r2, r1, lsl #2
	ldr     r1, [r1, #0x388]
	tst     r1, r3, lsl r0
	moveq   r3, #0x0
	mov     r0, r3
	bx      lr
@ 0x20c64c8

.word RAM_27ffc00 @ 0x20c64c8



.arm
PXI_SendWordByFifo: @ 20c64cc :arm
	stmfd   sp!, {r3,lr}
	ldr     r12, [sp]
	ldr     r3, [pc, #0x74] @ [0x20c6550] (=REG_IPC_FIFO_CR)
	bic     r12, r12, #0x1f
	and     r0, r0, #0x1f
	orr     r12, r12, r0
	ldrh    r0, [r3]
	bic     r12, r12, #0x20
	mov     r2, r2, lsl #31
	orr     r2, r12, r2, lsr #26
	and     r2, r2, #0x3f
	orr     r1, r2, r1, lsl #6
	str     r1, [sp]
	tst     r0, #1, 18 @ #0x4000
	beq     branch_20c651c
	ldrh    r1, [r3]
	mvn     r0, #0x0
	orr     r1, r1, #3, 18 @ #0xc000
	strh    r1, [r3]
	ldmfd   sp!, {r3,pc}

branch_20c651c: @ 20c651c :arm
	bl      OS_DisableInterrupts
	ldr     r2, [pc, #0x28] @ [0x20c6550] (=REG_IPC_FIFO_CR)
	ldrh    r1, [r2]
	tst     r1, #0x2
	beq     branch_20c653c
	bl      OS_RestoreInterrupts
	mvn     r0, #0x1
	ldmfd   sp!, {r3,pc}

branch_20c653c: @ 20c653c :arm
	ldr     r1, [sp]
	str     r1, [r2, #0x4]
	bl      OS_RestoreInterrupts
	mov     r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20c6550

.word REG_IPC_FIFO_CR @ 0x20c6550



.arm
PXIi_HandlerRecvFifoNotEmpty: @ 20c6554 :arm
	stmfd   sp!, {r3-r10,lr}
	sub     sp, sp, #0x4
	mvn     r8, #0x3
	ldr     r6, [sp]
	ldr     r9, [pc, #0xf8] @ [0x20c6664] (=REG_IPC_FIFO_CR)
	ldr     r4, [pc, #0xf8] @ [0x20c6668] (=RAM_21ceb88)
	add     r10, r8, #0x1
	mov     r7, #REG_IPC_FIFO_RX
	mov     r5, #0x0
branch_20c6578: @ 20c6578 :arm
	ldrh    r0, [r9]
	tst     r0, #0x4000
	beq     branch_20c6598
	ldrh    r0, [r9]
	add     r1, r8, #0x1
	orr     r0, r0, #0xc000
	strh    r0, [r9]
	b       branch_20c65c4

branch_20c6598: @ 20c6598 :arm
	bl      OS_DisableInterrupts
	ldrh    r1, [r9]
	tst     r1, #0x100
	beq     branch_20c65b4
	bl      OS_RestoreInterrupts
	mov     r1, r8
	b       branch_20c65c4

branch_20c65b4: @ 20c65b4 :arm
	ldr     r6, [r7]
	str     r6, [sp]
	bl      OS_RestoreInterrupts
	mov     r1, r5
branch_20c65c4: @ 20c65c4 :arm
	cmp     r1, r8
	addeq   sp, sp, #0x4
	ldmeqfd sp!, {r3-r10,pc}
	cmp     r1, r10
	beq     branch_20c6578
	mov     r0, r6, lsl #27
	movs    r0, r0, lsr #27
	beq     branch_20c6578
	ldr     r3, [r4, r0, lsl #0x2]
	cmp     r3, #0x0
	beq     branch_20c6604
	mov     r2, r6, lsl #26
	mov     r1, r6, lsr #6
	mov     r2, r2, lsr #31
	blx     r3
	b       branch_20c6578

branch_20c6604: @ 20c6604 :arm
	mov     r0, r6, lsl #26
	movs    r0, r0, lsr #31
	bne     branch_20c6578
	ldrh    r0, [r9]
	orr     r6, r6, #0x20
	str     r6, [sp]
	tst     r0, #1, 18 @ #0x4000
	beq     branch_20c6634
	ldrh    r0, [r9]
	orr     r0, r0, #3, 18 @ #0xc000
	strh    r0, [r9]
	b       branch_20c6578

branch_20c6634: @ 20c6634 :arm
	bl      OS_DisableInterrupts
	ldrh    r1, [r9]
	tst     r1, #0x2
	beq     branch_20c664c
	bl      OS_RestoreInterrupts
	b       branch_20c6578

branch_20c664c: @ 20c664c :arm
	mov     r1, r6
	str     r1, [r9, #0x4]
	bl      OS_RestoreInterrupts
	b       branch_20c6578
@ 0x20c665c

.arm
Function_20c665c: @ 20c665c :arm
	add     sp, sp, #0x4
	ldmfd   sp!, {r3-r10,pc}
@ 0x20c6664

.word REG_IPC_FIFO_CR @ 0x20c6664
.word RAM_21ceb88 @ 0x20c6668



.include "source/arm9_fs.s"



.include "source/arm9_card.s"



.include "source/arm9_wm.s"



.include "source/arm9_ctrdg.s"




.arm
.globl Function_20d2fe4
Function_20d2fe4: @ 20d2fe4 :arm
	ldr     r1, [pc, #0x30] @ [0x20d301c] (=0x55555555)
	ldr     r2, [pc, #0x30] @ [0x20d3020] (=0x33333333)
	and     r1, r1, r0, lsr #1
	sub     r0, r0, r1
	and     r1, r0, r2
	and     r0, r2, r0, lsr #2
	add     r1, r1, r0
	ldr     r0, [pc, #0x1c] @ [0x20d3024] (=0xf0f0f0f)
	add     r1, r1, r1, lsr #4
	and     r0, r1, r0
	add     r0, r0, r0, lsr #8
	add     r0, r0, r0, lsr #16
	and     r0, r0, #0xff
	bx      lr
@ 0x20d301c

.word 0x55555555 @ 0x20d301c
.word 0x33333333 @ 0x20d3020
.word 0xf0f0f0f @ 0x20d3024



.arm
Function_20d3028: @ 20d3028 :arm
	stmfd   sp!, {r4-r6,lr}
	sub     sp, sp, #0x58
	mov     r6, r0
	add     r0, sp, #0x0
	mov     r5, r1
	mov     r4, r2
	bl      DGT_Hash1Reset
	add     r0, sp, #0x0
	mov     r1, r5
	mov     r2, r4
	bl      DGT_Hash1SetSource
	add     r1, sp, #0x0
	mov     r0, r6
	bl      DGT_Hash1GetDigest_R
	add     sp, sp, #0x58
	ldmfd   sp!, {r4-r6,pc}
@ 0x20d3068


.arm
.globl Function_20d3068
Function_20d3068: @ 20d3068 :arm
	stmfd   sp!, {r4-r6,lr}
	sub     sp, sp, #0x68
	mov     r6, r0
	add     r0, sp, #0x0
	mov     r5, r1
	mov     r4, r2
	bl      DGT_Hash2Reset
	add     r0, sp, #0x0
	mov     r1, r5
	mov     r2, r4
	bl      DGT_Hash2SetSource
	add     r0, sp, #0x0
	mov     r1, r6
	bl      DGT_Hash2GetDigest
	add     sp, sp, #0x68
	ldmfd   sp!, {r4-r6,pc}
@ 0x20d30a8


.arm
Function_20d30a8: @ 20d30a8 :arm
	stmfd   sp!, {r3,lr}
	mov     r12, #0x0
	mov     r2, r12
branch_20d30b4: @ 20d30b4 :arm
	mov     r3, r12
	mov     lr, r2
branch_20d30bc: @ 20d30bc :arm
	tst     r3, #0x80
	eorne   r3, r1, r3, lsl #1
	add     lr, lr, #0x1
	moveq   r3, r3, lsl #1
	cmp     lr, #0x8
	blo     branch_20d30bc
	strb    r3, [r0, r12]
	add     r12, r12, #0x1
	cmp     r12, #0x100
	blo     branch_20d30b4
	ldmfd   sp!, {r3,pc}
@ 0x20d30e8

.arm
Function_20d30e8: @ 20d30e8 :arm
	stmfd   sp!, {r4,lr}
	cmp     r3, #0x0
	ldrb    lr, [r1]
	mov     r4, #0x0
	bls     branch_20d3118
branch_20d30fc: @ 20d30fc :arm
	ldrb    r12, [r2], #0x1
	add     r4, r4, #0x1
	cmp     r4, r3
	eor     r12, lr, r12
	and     r12, r12, #0xff
	ldrb    lr, [r0, r12]
	blo     branch_20d30fc
branch_20d3118: @ 20d3118 :arm
	strb    lr, [r1]
	ldmfd   sp!, {r4,pc}
@ 0x20d3120


.arm
Function_20d3120: @ 20d3120 :arm
	stmfd   sp!, {r4,lr}
	mov     lr, #0x0
	mov     r4, lr
	mov     r3, lr
branch_20d3130: @ 20d3130 :arm
	mov     r12, r4
	mov     r2, r3
branch_20d3138: @ 20d3138 :arm
	tst     r12, #0x8000
	eorne   r12, r1, r12, lsl #1
	add     r2, r2, #0x1
	moveq   r12, r12, lsl #1
	cmp     r2, #0x8
	blo     branch_20d3138
	mov     r2, lr, lsl #1
	add     lr, lr, #0x1
	strh    r12, [r0, r2]
	cmp     lr, #0x100
	add     r4, r4, #0x100
	blo     branch_20d3130
	ldmfd   sp!, {r4,pc}
@ 0x20d316c


.arm
.globl Function_20d316c
Function_20d316c: @ 20d316c :arm
	stmfd   sp!, {r3,lr}
	mov     lr, #0x0
	mov     r3, lr
branch_20d3178: @ 20d3178 :arm
	mov     r12, lr
	mov     r2, r3
branch_20d3180: @ 20d3180 :arm
	tst     r12, #0x1
	eorne   r12, r1, r12, lsr #1
	add     r2, r2, #0x1
	moveq   r12, r12, lsr #1
	cmp     r2, #0x8
	blo     branch_20d3180
	mov     r2, lr, lsl #1
	add     lr, lr, #0x1
	strh    r12, [r0, r2]
	cmp     lr, #0x100
	blo     branch_20d3178
	ldmfd   sp!, {r3,pc}
@ 0x20d31b0


.arm
Function_20d31b0: @ 20d31b0 :arm
	stmfd   sp!, {r4,lr}
	cmp     r3, #0x0
	ldrh    lr, [r1]
	mov     r4, #0x0
	bls     branch_20d31e8
branch_20d31c4: @ 20d31c4 :arm
	ldrb    r12, [r2], #0x1
	add     r4, r4, #0x1
	cmp     r4, r3
	eor     r12, r12, lr, lsr #8
	mov     r12, r12, lsl #24
	mov     r12, r12, lsr #23
	ldrh    r12, [r0, r12]
	eor     lr, r12, lr, lsl #8
	blo     branch_20d31c4
branch_20d31e8: @ 20d31e8 :arm
	strh    lr, [r1]
	ldmfd   sp!, {r4,pc}
@ 0x20d31f0


.arm
.globl Function_20d31f0
Function_20d31f0: @ 20d31f0 :arm
	stmfd   sp!, {r4,lr}
	cmp     r3, #0x0
	ldrh    lr, [r1]
	mov     r4, #0x0
	bls     branch_20d3228
branch_20d3204: @ 20d3204 :arm
	ldrb    r12, [r2], #0x1
	add     r4, r4, #0x1
	cmp     r4, r3
	eor     r12, lr, r12
	mov     r12, r12, lsl #24
	mov     r12, r12, lsr #23
	ldrh    r12, [r0, r12]
	eor     lr, r12, lr, lsr #8
	blo     branch_20d3204
branch_20d3228: @ 20d3228 :arm
	strh    lr, [r1]
	ldmfd   sp!, {r4,pc}
@ 0x20d3230


.arm
Function_20d3230: @ 20d3230 :arm
	stmfd   sp!, {r3,lr}
	mov     r12, #0x0
	mov     r2, r12
branch_20d323c: @ 20d323c :arm
	mov     r3, r12
	mov     lr, r2
branch_20d3244: @ 20d3244 :arm
	tst     r3, #0x1
	eorne   r3, r1, r3, lsr #1
	add     lr, lr, #0x1
	moveq   r3, r3, lsr #1
	cmp     lr, #0x8
	blo     branch_20d3244
	str     r3, [r0, r12, lsl #0x2]
	add     r12, r12, #0x1
	cmp     r12, #0x100
	blo     branch_20d323c
	ldmfd   sp!, {r3,pc}
@ 0x20d3270


.arm
Function_20d3270: @ 20d3270 :arm
	stmfd   sp!, {r4,lr}
	cmp     r3, #0x0
	ldr     lr, [r1]
	mov     r4, #0x0
	bls     branch_20d32a4
.arm
branch_20d3284: @ 20d3284 :arm
	ldrb    r12, [r2], #0x1
	add     r4, r4, #0x1
	cmp     r4, r3
	eor     r12, lr, r12
	and     r12, r12, #0xff
	ldr     r12, [r0, r12, lsl #0x2]
	eor     lr, r12, lr, lsr #8
	blo     branch_20d3284
.arm
branch_20d32a4: @ 20d32a4 :arm
	str     lr, [r1]
	ldmfd   sp!, {r4,pc}
@ 0x20d32ac


.arm
Function_20d32ac: @ 20d32ac :arm
	stmfd   sp!, {r3,lr}
	mov     lr, r1
	mov     r12, #0x0
	mov     r3, r2
	add     r1, sp, #0x0
	mov     r2, lr
	strb    r12, [sp]
	bl      Function_20d30e8
	ldrb    r0, [sp]
	ldmfd   sp!, {r3,pc}
@ 0x20d32d4


.arm
.globl Function_20d32d4
Function_20d32d4: @ 20d32d4 :arm
	stmfd   sp!, {r3,lr}
	mov     lr, r1
	mov     r12, #0x0
	mov     r3, r2
	add     r1, sp, #0x0
	mov     r2, lr
	strh    r12, [sp]
	bl      Function_20d31f0
	ldrh    r0, [sp]
	ldmfd   sp!, {r3,pc}
@ 0x20d32fc


.arm
Function_20d32fc: @ 20d32fc :arm
	stmfd   sp!, {r3,lr}
	ldr     r12, [pc, #0x1c] @ [0x20d3324] (=0xffff)
	mov     lr, r1
	mov     r3, r2
	add     r1, sp, #0x0
	mov     r2, lr
	strh    r12, [sp]
	bl      Function_20d31b0
	ldrh    r0, [sp]
	ldmfd   sp!, {r3,pc}
@ 0x20d3324

.word 0xffff @ 0x20d3324


.arm
Function_20d3328: @ 20d3328 :arm
	stmfd   sp!, {r3,lr}
	mov     lr, r1
	mvn     r12, #0x0
	mov     r3, r2
	add     r1, sp, #0x0
	mov     r2, lr
	str     r12, [sp]
	bl      Function_20d3270
	ldr     r0, [sp]
	mvn     r0, r0
	ldmfd   sp!, {r3,pc}
@ 0x20d3354



.arm
.globl Function_20d3354
Function_20d3354: @ 20d3354 :arm
	stmfd   sp!, {r4,lr}
	sub     r12, r2, #0x1
	mov     r4, r1
	cmp     r12, #0x0
	mov     lr, #0x0
	ble     branch_20d3390
.arm
branch_20d336c: @ 20d336c :arm
	ldrsb   r3, [r4]
	strb    r3, [r0, lr]
	ldrsb   r3, [r4]
	cmp     r3, #0x0
	beq     branch_20d3390
	add     lr, lr, #0x1
	cmp     lr, r12
	add     r4, r4, #0x1
	blt     branch_20d336c
.arm
branch_20d3390: @ 20d3390 :arm
	sub     r3, r2, #0x1
	cmp     lr, r3
	blt     branch_20d33a8
	cmp     r2, #0x0
	movne   r2, #0x0
	strneb  r2, [r0, lr]
.arm
branch_20d33a8: @ 20d33a8 :arm
	mov     r0, r1
	bl      Function_20d33b4
	ldmfd   sp!, {r4,pc}
@ 0x20d33b4


.arm
.globl Function_20d33b4
Function_20d33b4: @ 20d33b4 :arm
	ldrsb   r1, [r0]
	mov     r2, #0x0
	cmp     r1, #0x0
	beq     branch_20d33d4
.arm
branch_20d33c4: @ 20d33c4 :arm
	add     r2, r2, #0x1
	ldrsb   r1, [r0, r2]
	cmp     r1, #0x0
	bne     branch_20d33c4
.arm
branch_20d33d4: @ 20d33d4 :arm
	mov     r0, r2
	bx      lr
@ 0x20d33dc


.arm
.globl Function_20d33dc
Function_20d33dc: @ 20d33dc :arm
	b       branch_20d33e8

branch_20d33e0: @ 20d33e0 :arm
	add     r0, r0, #0x1
	add     r1, r1, #0x1
branch_20d33e8: @ 20d33e8 :arm
	ldrsb   r3, [r1]
	ldrsb   r2, [r0]
	cmp     r2, r3
	bne     branch_20d3400
	cmp     r2, #0x0
	bne     branch_20d33e0
branch_20d3400: @ 20d3400 :arm
	sub     r0, r2, r3
	bx      lr
@ 0x20d3408


.arm
.globl Function_20d3408
Function_20d3408: @ 20d3408 :arm
	stmfd   sp!, {r3,lr}
	cmp     r2, #0x0
	beq     branch_20d3440
	cmp     r2, #0x0
	mov     lr, #0x0
	ble     branch_20d3440

branch_20d3420: @ 20d3420 :arm
	ldrb    r12, [r0, lr]
	ldrb    r3, [r1, lr]
	cmp     r12, r3
	subne   r0, r12, r3
	ldmnefd sp!, {r3,pc}
	add     lr, lr, #0x1
	cmp     lr, r2
	blt     branch_20d3420
branch_20d3440: @ 20d3440 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20d3448


.arm
Function_20d3448: @ 20d3448 :arm
	ldr     r2, [r0]
	cmp     r2, #0x0
	beq     branch_20d3468
	ldr     r2, [r0, #0x4]
	strb    r1, [r2]
	ldr     r1, [r0]
	sub     r1, r1, #0x1
	str     r1, [r0]
.arm
branch_20d3468: @ 20d3468 :arm
	ldr     r1, [r0, #0x4]
	add     r1, r1, #0x1
	str     r1, [r0, #0x4]
	bx      lr
@ 0x20d3478

.arm
Function_20d3478: @ 20d3478 :arm
	stmfd   sp!, {r3,lr}
	cmp     r2, #0x0
	ldmlefd sp!, {r3,pc}
	ldr     lr, [r0]
	mov     r12, #0x0
	cmp     lr, r2
	movhi   lr, r2
	cmp     lr, #0x0
	bls     branch_20d34b0
.arm
branch_20d349c: @ 20d349c :arm
	ldr     r3, [r0, #0x4]
	strb    r1, [r3, r12]
	add     r12, r12, #0x1
	cmp     r12, lr
	blo     branch_20d349c
.arm
branch_20d34b0: @ 20d34b0 :arm
	ldr     r1, [r0]
	sub     r1, r1, lr
	str     r1, [r0]
	ldr     r1, [r0, #0x4]
	add     r1, r1, r2
	str     r1, [r0, #0x4]
	ldmfd   sp!, {r3,pc}
@ 0x20d34cc

.arm
Function_20d34cc: @ 20d34cc :arm
	stmfd   sp!, {r4,lr}
	cmp     r2, #0x0
	ldmlefd sp!, {r4,pc}
	ldr     r4, [r0]
	mov     lr, #0x0
	cmp     r4, r2
	movhi   r4, r2
	cmp     r4, #0x0
	bls     branch_20d3508
.arm
branch_20d34f0: @ 20d34f0 :arm
	ldrsb   r12, [r1, lr]
	ldr     r3, [r0, #0x4]
	strb    r12, [r3, lr]
	add     lr, lr, #0x1
	cmp     lr, r4
	blo     branch_20d34f0
.arm
branch_20d3508: @ 20d3508 :arm
	ldr     r1, [r0]
	sub     r1, r1, r4
	str     r1, [r0]
	ldr     r1, [r0, #0x4]
	add     r1, r1, r2
	str     r1, [r0, #0x4]
	ldmfd   sp!, {r4,pc}
@ 0x20d3524


Function_20d3524: @ 20d3524 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x30
	mov     r9, r2
	str     r1, [sp, #0xc]
	str     r0, [sp, #0x14]
	str     r0, [sp, #0x10]
	ldrsb   r0, [r9]
	str     r1, [sp]
	mov     r11, r3
	cmp     r0, #0x0
	beq     branch_20d3d50
branch_20d3550: @ 20d3550 :arm
	ldrsb   r1, [r9]
	and     r0, r1, #0xff
	eor     r0, r0, #0x20
	sub     r0, r0, #0xa1
	cmp     r0, #0x3c
	bhs     branch_20d358c
	add     r0, sp, #0xc
	bl      Function_20d3448
	ldrsb   r1, [r9, #0x1]!
	cmp     r1, #0x0
	beq     branch_20d3d44
	add     r0, sp, #0xc
	add     r9, r9, #0x1
	bl      Function_20d3448
	b       branch_20d3d44
@ 0x20d358c

.arm
branch_20d358c: @ 20d358c :arm
	cmp     r1, #0x25
	beq     branch_20d35a4
	add     r0, sp, #0xc
	add     r9, r9, #0x1
	bl      Function_20d3448
	b       branch_20d3d44
@ 0x20d35a4

.arm
branch_20d35a4: @ 20d35a4 :arm
	mov     r5, #0x0
	mov     r10, r5
	mov     r2, r9
	sub     r6, r5, #0x1
	mov     r0, #0xa
	mov     r3, #0x57
.arm
branch_20d35bc: @ 20d35bc :arm
	ldrsb   r4, [r9, #0x1]!
	cmp     r4, #0x20
	bgt     branch_20d35d0
	beq     branch_20d360c
	b       branch_20d3624
@ 0x20d35d0

.arm
branch_20d35d0: @ 20d35d0 :arm
	cmp     r4, #0x30
	bgt     branch_20d3624
	cmp     r4, #0x2b
	blt     branch_20d3624
	beq     branch_20d35f8
	cmp     r4, #0x2d
	beq     branch_20d3614
	cmp     r4, #0x30
	beq     branch_20d361c
	b       branch_20d3624
@ 0x20d35f8

.arm
branch_20d35f8: @ 20d35f8 :arm
	ldrsb   r1, [r9, #-0x1]
	cmp     r1, #0x20
	bne     branch_20d3624
	orr     r5, r5, #0x2
	b       branch_20d35bc
@ 0x20d360c

.arm
branch_20d360c: @ 20d360c :arm
	orr     r5, r5, #0x1
	b       branch_20d35bc
@ 0x20d3614

.arm
branch_20d3614: @ 20d3614 :arm
	orr     r5, r5, #0x8
	b       branch_20d35bc
@ 0x20d361c

.arm
branch_20d361c: @ 20d361c :arm
	orr     r5, r5, #0x10
	b       branch_20d35bc
@ 0x20d3624

.arm
branch_20d3624: @ 20d3624 :arm
	cmp     r4, #0x2a
	bne     branch_20d3648
	add     r11, r11, #0x4
	ldr     r10, [r11, #-0x4]
	add     r9, r9, #0x1
	cmp     r10, #0x0
	rsblt   r10, r10, #0x0
	orrlt   r5, r5, #0x8
	b       branch_20d3670
@ 0x20d3648

.arm
branch_20d3648: @ 20d3648 :arm
	mov     r1, #0xa
	b       branch_20d365c
@ 0x20d3650

.arm
branch_20d3650: @ 20d3650 :arm
	ldrsb   r4, [r9], #0x1
	mla     r4, r10, r1, r4
	sub     r10, r4, #0x30
.arm
branch_20d365c: @ 20d365c :arm
	ldrsb   r4, [r9]
	cmp     r4, #0x30
	blt     branch_20d3670
	cmp     r4, #0x39
	ble     branch_20d3650
.arm
branch_20d3670: @ 20d3670 :arm
	ldrsb   r1, [r9]
	cmp     r1, #0x2e
	bne     branch_20d36cc
	ldrsb   r1, [r9, #0x1]!
	mov     r6, #0x0
	cmp     r1, #0x2a
	bne     branch_20d36a4
	add     r11, r11, #0x4
	ldr     r6, [r11, #-0x4]
	add     r9, r9, #0x1
	cmp     r6, #0x0
	mvnlt   r6, #0x0
	b       branch_20d36cc
@ 0x20d36a4

.arm
branch_20d36a4: @ 20d36a4 :arm
	mov     r1, #0xa
	b       branch_20d36b8
@ 0x20d36ac

.arm
branch_20d36ac: @ 20d36ac :arm
	ldrsb   r4, [r9], #0x1
	mla     r4, r6, r1, r4
	sub     r6, r4, #0x30
.arm
branch_20d36b8: @ 20d36b8 :arm
	ldrsb   r4, [r9]
	cmp     r4, #0x30
	blt     branch_20d36cc
	cmp     r4, #0x39
	ble     branch_20d36ac
.arm
branch_20d36cc: @ 20d36cc :arm
	ldrsb   r1, [r9]
	cmp     r1, #0x68
	beq     branch_20d36e4
	cmp     r1, #0x6c
	beq     branch_20d36fc
	b       branch_20d3710
@ 0x20d36e4

.arm
branch_20d36e4: @ 20d36e4 :arm
	ldrsb   r1, [r9, #0x1]!
	cmp     r1, #0x68
	orrne   r5, r5, #0x40
	addeq   r9, r9, #0x1
	orreq   r5, r5, #1, 24 @ #0x100
	b       branch_20d3710
@ 0x20d36fc

.arm
branch_20d36fc: @ 20d36fc :arm
	ldrsb   r1, [r9, #0x1]!
	cmp     r1, #0x6c
	orrne   r5, r5, #0x20
	addeq   r9, r9, #0x1
	orreq   r5, r5, #0x80
.arm
branch_20d3710: @ 20d3710 :arm
	ldrsb   r1, [r9]
	cmp     r1, #0x69
	bgt     branch_20d3754
	cmp     r1, #0x63
	blt     branch_20d3738
	beq     branch_20d37c4
	cmp     r1, #0x64
	cmpne   r1, #0x69
	beq     branch_20d397c
	b       branch_20d3960
@ 0x20d3738

.arm
branch_20d3738: @ 20d3738 :arm
	cmp     r1, #0x25
	bgt     branch_20d3748
	beq     branch_20d3944
	b       branch_20d3960
@ 0x20d3748

.arm
branch_20d3748: @ 20d3748 :arm
	cmp     r1, #0x58
	beq     branch_20d37b0
	b       branch_20d3960
@ 0x20d3754

.arm
branch_20d3754: @ 20d3754 :arm
	cmp     r1, #0x6e
	bgt     branch_20d3764
	beq     branch_20d38ec
	b       branch_20d3960

branch_20d3764: @ 20d3764 :arm
	sub     r1, r1, #0x6f
	cmp     r1, #0x9
	addls   pc, pc, r1, lsl #2
	b       branch_20d3960
	b       branch_20d379c
	b       branch_20d37b8
	b       branch_20d3960
	b       branch_20d3960
	b       branch_20d3838
	b       branch_20d3960
	b       branch_20d37a8
	b       branch_20d3960
	b       branch_20d3960
	b       branch_20d3974

branch_20d379c: @ 20d379c :arm
	orr     r5, r5, #1, 20 @ #0x1000
	mov     r0, #0x8
	b       branch_20d397c

branch_20d37a8: @ 20d37a8 :arm
	orr     r5, r5, #1, 20 @ #0x1000
	b       branch_20d397c

branch_20d37b0: @ 20d37b0 :arm
	mov     r3, #0x37
	b       branch_20d3974

branch_20d37b8: @ 20d37b8 :arm
	orr     r5, r5, #0x4
	mov     r6, #0x8
	b       branch_20d3974
@ 0x20d37c4

.arm
branch_20d37c4: @ 20d37c4 :arm
	cmp     r6, #0x0
	bge     branch_20d3960
	add     r11, r11, #0x4
	tst     r5, #0x8
	ldr     r4, [r11, #-0x4]
	beq     branch_20d3800
	mov     r1, r4, lsl #24
	add     r0, sp, #0xc
	mov     r1, r1, asr #24
	bl      Function_20d3448
	add     r0, sp, #0xc
	sub     r2, r10, #0x1
	mov     r1, #0x20
	bl      Function_20d3478
	b       branch_20d3830
@ 0x20d3800

.arm
branch_20d3800: @ 20d3800 :arm
	tst     r5, #0x10
	movne   r0, #0x30
	moveq   r0, #0x20
	mov     r1, r0, lsl #24
	add     r0, sp, #0xc
	mov     r1, r1, asr #24
	sub     r2, r10, #0x1
	bl      Function_20d3478
	mov     r1, r4, lsl #24
	add     r0, sp, #0xc
	mov     r1, r1, asr #24
	bl      Function_20d3448
.arm
branch_20d3830: @ 20d3830 :arm
	add     r9, r9, #0x1
	b       branch_20d3d44
@ 0x20d3838

.arm
branch_20d3838: @ 20d3838 :arm
	add     r11, r11, #0x4
	cmp     r6, #0x0
	ldr     r7, [r11, #-0x4]
	mov     r4, #0x0
	bge     branch_20d3870
	ldrsb   r0, [r7]
	cmp     r0, #0x0
	beq     branch_20d3884
.arm
branch_20d3858: @ 20d3858 :arm
	add     r4, r4, #0x1
	ldrsb   r0, [r7, r4]
	cmp     r0, #0x0
	bne     branch_20d3858
	b       branch_20d3884
@ 0x20d386c

.arm
branch_20d386c: @ 20d386c :arm
	add     r4, r4, #0x1
.arm
branch_20d3870: @ 20d3870 :arm
	cmp     r4, r6
	bge     branch_20d3884
	ldrsb   r0, [r7, r4]
	cmp     r0, #0x0
	bne     branch_20d386c
.arm
branch_20d3884: @ 20d3884 :arm
	tst     r5, #0x8
	sub     r10, r10, r4
	beq     branch_20d38b4
	add     r0, sp, #0xc
	mov     r1, r7
	mov     r2, r4
	bl      Function_20d34cc
	add     r0, sp, #0xc
	mov     r2, r10
	mov     r1, #0x20
	bl      Function_20d3478
	b       branch_20d38e4
@ 0x20d38b4

.arm
branch_20d38b4: @ 20d38b4 :arm
	tst     r5, #0x10
	movne   r0, #0x30
	moveq   r0, #0x20
	mov     r1, r0, lsl #24
	add     r0, sp, #0xc
	mov     r2, r10
	mov     r1, r1, asr #24
	bl      Function_20d3478
	add     r0, sp, #0xc
	mov     r1, r7
	mov     r2, r4
	bl      Function_20d34cc
.arm
branch_20d38e4: @ 20d38e4 :arm
	add     r9, r9, #0x1
	b       branch_20d3d44
@ 0x20d38ec

.arm
branch_20d38ec: @ 20d38ec :arm
	ldr     r1, [sp, #0x10]
	ldr     r0, [sp, #0x14]
	tst     r5, #1, 24 @ #0x100
	sub     r2, r1, r0
	bne     branch_20d393c
	tst     r5, #0x40
	beq     branch_20d3918
	add     r11, r11, #0x4
	ldr     r0, [r11, #-0x4]
	strh    r2, [r0]
	b       branch_20d393c
@ 0x20d3918

.arm
branch_20d3918: @ 20d3918 :arm
	add     r11, r11, #0x4
	tst     r5, #0x80
	ldreq   r0, [r11, #-0x4]
	streq   r2, [r0]
	beq     branch_20d393c
	ldr     r0, [r11, #-0x4]
	mov     r1, r2, asr #31
	str     r2, [r0]
	str     r1, [r0, #0x4]
.arm
branch_20d393c: @ 20d393c :arm
	add     r9, r9, #0x1
	b       branch_20d3d44
@ 0x20d3944

.arm
branch_20d3944: @ 20d3944 :arm
	add     r0, r2, #0x1
	cmp     r0, r9
	bne     branch_20d3960
	add     r0, sp, #0xc
	add     r9, r9, #0x1
	bl      Function_20d3448
	b       branch_20d3d44
@ 0x20d3960

.arm
branch_20d3960: @ 20d3960 :arm
	mov     r1, r2
	add     r0, sp, #0xc
	sub     r2, r9, r2
	bl      Function_20d34cc
	b       branch_20d3d44
@ 0x20d3974

.arm
branch_20d3974: @ 20d3974 :arm
	orr     r5, r5, #1, 20 @ #0x1000
	mov     r0, #0x10
.arm
branch_20d397c: @ 20d397c :arm
	tst     r5, #0x8
	bicne   r5, r5, #0x10
	cmp     r6, #0x0
	bicge   r5, r5, #0x10
	movlt   r6, #0x1
	mov     r4, #0x0
	tst     r5, #1, 20 @ #0x1000
	beq     branch_20d3a3c
	tst     r5, #1, 24 @ #0x100
	beq     branch_20d39b4
	add     r11, r11, #0x4
	ldrb    r7, [r11, #-0x4]
	mov     r1, #0x0
	b       branch_20d39ec
@ 0x20d39b4

.arm
branch_20d39b4: @ 20d39b4 :arm
	tst     r5, #0x40
	beq     branch_20d39cc
	add     r11, r11, #0x4
	ldrh    r7, [r11, #-0x4]
	mov     r1, #0x0
	b       branch_20d39ec
@ 0x20d39cc

.arm
branch_20d39cc: @ 20d39cc :arm
	tst     r5, #0x80
	addeq   r11, r11, #0x4
	ldreq   r7, [r11, #-0x4]
	moveq   r1, #0x0
	beq     branch_20d39ec
	add     r11, r11, #0x8
	ldr     r7, [r11, #-0x8]
	ldr     r1, [r11, #-0x4]
.arm
branch_20d39ec: @ 20d39ec :arm
	bic     r5, r5, #0x3
	tst     r5, #0x4
	beq     branch_20d3afc
	cmp     r0, #0x10
	bne     branch_20d3a24
	cmp     r1, #0x0
	cmpeq   r7, #0x0
	beq     branch_20d3afc
	add     r4, r3, #0x21
	mov     r2, #0x30
	strb    r4, [sp, #0x8]
	strb    r2, [sp, #0x9]
	mov     r4, #0x2
	b       branch_20d3afc
@ 0x20d3a24

.arm
branch_20d3a24: @ 20d3a24 :arm
	cmp     r0, #0x8
	bne     branch_20d3afc
	mov     r2, #0x30
	strb    r2, [sp, #0x8]
	mov     r4, #0x1
	b       branch_20d3afc
@ 0x20d3a3c

.arm
branch_20d3a3c: @ 20d3a3c :arm
	tst     r5, #1, 24 @ #0x100
	beq     branch_20d3a54
	add     r11, r11, #0x4
	ldrsb   r7, [r11, #-0x4]
	mov     r1, r7, asr #31
	b       branch_20d3a8c
@ 0x20d3a54

.arm
branch_20d3a54: @ 20d3a54 :arm
	tst     r5, #0x40
	beq     branch_20d3a6c
	add     r11, r11, #0x4
	ldrsh   r7, [r11, #-0x4]
	mov     r1, r7, asr #31
	b       branch_20d3a8c
@ 0x20d3a6c

.arm
branch_20d3a6c: @ 20d3a6c :arm
	tst     r5, #0x80
	addeq   r11, r11, #0x4
	ldreq   r7, [r11, #-0x4]
	moveq   r1, r7, asr #31
	beq     branch_20d3a8c
	add     r11, r11, #0x8
	ldr     r7, [r11, #-0x8]
	ldr     r1, [r11, #-0x4]
.arm
branch_20d3a8c: @ 20d3a8c :arm
	mov     r12, #0x0
	and     r2, r12, #0x0
	and     r8, r1, #2, 2 @ #0x80000000
	cmp     r2, #0x0
	cmpeq   r8, #0x0
	beq     branch_20d3ac4
	mvn     r4, r7
	mov     r2, #0x2d
	mvn     r1, r1
	strb    r2, [sp, #0x8]
	adds    r7, r4, #0x1
	adc     r1, r1, r12
	mov     r4, #0x1
	b       branch_20d3afc
@ 0x20d3ac4

.arm
branch_20d3ac4: @ 20d3ac4 :arm
	cmp     r1, r12
	cmpeq   r7, r12
	cmpeq   r6, #0x0
	beq     branch_20d3afc
	tst     r5, #0x2
	beq     branch_20d3aec
	mov     r2, #0x2b
	strb    r2, [sp, #0x8]
	mov     r4, #0x1
	b       branch_20d3afc
@ 0x20d3aec

.arm
branch_20d3aec: @ 20d3aec :arm
	tst     r5, #0x1
	movne   r2, #0x20
	strneb  r2, [sp, #0x8]
	movne   r4, #0x1
.arm
branch_20d3afc: @ 20d3afc :arm
	cmp     r0, #0x8
	mov     r8, #0x0
	beq     branch_20d3b1c
	cmp     r0, #0xa
	beq     branch_20d3b68
	cmp     r0, #0x10
	beq     branch_20d3c00
	b       branch_20d3c4c
@ 0x20d3b1c

.arm
branch_20d3b1c: @ 20d3b1c :arm
	cmp     r1, r8
	cmpeq   r7, r8
	beq     branch_20d3c4c
	add     r2, sp, #0x18
	mov     r0, r8
	mov     lr, #0x7
	mov     r12, r8
.arm
branch_20d3b38: @ 20d3b38 :arm
	and     r3, r7, lr
	add     r3, r3, #0x30
	strb    r3, [r2, r8]
	mov     r3, r1, lsr #3
	cmp     r3, r0
	mov     r7, r7, lsr #3
	orr     r7, r7, r1, lsl #29
	mov     r1, r3
	cmpeq   r7, r12
	add     r8, r8, #0x1
	bne     branch_20d3b38
	b       branch_20d3c4c
@ 0x20d3b68

.arm
branch_20d3b68: @ 20d3b68 :arm
	mov     r0, r8
	cmp     r0, r8
	cmpeq   r1, r8
	bne     branch_20d3bb4
	cmp     r7, #0x0
	beq     branch_20d3c4c
	ldr     r12, [pc, #0x214] @ [0x20d3d9c] (=0xcccccccd)
	add     r3, sp, #0x18
	mov     r2, #0xa
.arm
branch_20d3b8c: @ 20d3b8c :arm
	umull   r1, r0, r7, r12
	movs    r0, r0, lsr #3
	mul     r1, r0, r2
	sub     r1, r7, r1
	mov     r7, r0
	add     r0, r1, #0x30
	strb    r0, [r3, r8]
	add     r8, r8, #0x1
	bne     branch_20d3b8c
	b       branch_20d3c4c
@ 0x20d3bb4

.arm
branch_20d3bb4: @ 20d3bb4 :arm
	cmp     r1, r8
	cmpeq   r7, r8
	beq     branch_20d3c4c
.arm
branch_20d3bc0: @ 20d3bc0 :arm
	mov     r0, r7
	mov     r2, #0xa
	mov     r3, #0x0
	bl      _ll_udiv
	mov     r2, #0xa
	umull   r3, r2, r0, r2
	subs    r2, r7, r3
	add     r3, r2, #0x30
	add     r2, sp, #0x18
	strb    r3, [r2, r8]
	cmp     r1, #0x0
	cmpeq   r0, #0x0
	mov     r7, r0
	add     r8, r8, #0x1
	bne     branch_20d3bc0
	b       branch_20d3c4c
@ 0x20d3c00

.arm
branch_20d3c00: @ 20d3c00 :arm
	cmp     r1, r8
	cmpeq   r7, r8
	beq     branch_20d3c4c
	add     r12, sp, #0x18
	mov     lr, #0xf
.arm
branch_20d3c14: @ 20d3c14 :arm
	and     r2, r7, lr
	mov     r7, r7, lsr #4
	mov     r0, r1, lsr #4
	orr     r7, r7, r1, lsl #28
	cmp     r2, #0xa
	mov     r1, r0
	addlt   r0, r2, #0x30
	addge   r0, r2, r3
	strb    r0, [r12, r8]
	mov     r0, #0x0
	cmp     r1, r0
	cmpeq   r7, r0
	add     r8, r8, #0x1
	bne     branch_20d3c14
.arm
branch_20d3c4c: @ 20d3c4c :arm
	cmp     r4, #0x0
	ble     branch_20d3c74
	ldrsb   r0, [sp, #0x8]
	cmp     r0, #0x30
	bne     branch_20d3c74
	add     r0, sp, #0x18
	mov     r1, #0x30
	strb    r1, [r0, r8]
	add     r8, r8, #0x1
	mov     r4, #0x0
.arm
branch_20d3c74: @ 20d3c74 :arm
	tst     r5, #0x10
	sub     r6, r6, r8
	beq     branch_20d3c90
	sub     r0, r10, r8
	sub     r0, r0, r4
	cmp     r6, r0
	movlt   r6, r0
.arm
branch_20d3c90: @ 20d3c90 :arm
	cmp     r6, #0x0
	subgt   r10, r10, r6
	add     r0, r4, r8
	sub     r10, r10, r0
	ands    r0, r5, #0x8
	str     r0, [sp, #0x4]
	bne     branch_20d3cbc
	add     r0, sp, #0xc
	mov     r2, r10
	mov     r1, #0x20
	bl      Function_20d3478
.arm
branch_20d3cbc: @ 20d3cbc :arm
	cmp     r4, #0x0
	ble     branch_20d3ce8
	add     r0, sp, #0x8
	add     r5, r0, r4
	add     r7, sp, #0xc
.arm
branch_20d3cd0: @ 20d3cd0 :arm
	ldrsb   r1, [r5, #-0x1]!
	mov     r0, r7
	sub     r4, r4, #0x1
	bl      Function_20d3448
	cmp     r4, #0x0
	bgt     branch_20d3cd0
.arm
branch_20d3ce8: @ 20d3ce8 :arm
	add     r0, sp, #0xc
	mov     r2, r6
	mov     r1, #0x30
	bl      Function_20d3478
	cmp     r8, #0x0
	ble     branch_20d3d24
	add     r0, sp, #0x18
	add     r5, r0, r8
	add     r4, sp, #0xc
.arm
branch_20d3d0c: @ 20d3d0c :arm
	ldrsb   r1, [r5, #-0x1]!
	mov     r0, r4
	sub     r8, r8, #0x1
	bl      Function_20d3448
	cmp     r8, #0x0
	bgt     branch_20d3d0c
.arm
branch_20d3d24: @ 20d3d24 :arm
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	beq     branch_20d3d40
	add     r0, sp, #0xc
	mov     r2, r10
	mov     r1, #0x20
	bl      Function_20d3478
.arm
branch_20d3d40: @ 20d3d40 :arm
	add     r9, r9, #0x1
.arm
branch_20d3d44: @ 20d3d44 :arm
	ldrsb   r0, [r9]
	cmp     r0, #0x0
	bne     branch_20d3550
.arm
branch_20d3d50: @ 20d3d50 :arm
	ldr     r0, [sp, #0xc]
	cmp     r0, #0x0
	beq     branch_20d3d6c
	ldr     r0, [sp, #0x10]
	mov     r1, #0x0
	strb    r1, [r0]
	b       branch_20d3d88
@ 0x20d3d6c

.arm
branch_20d3d6c: @ 20d3d6c :arm
	ldr     r0, [sp]
	cmp     r0, #0x0
	beq     branch_20d3d88
	ldr     r1, [sp, #0x14]
	mov     r2, #0x0
	add     r0, r1, r0
	strb    r2, [r0, #-0x1]
.arm
branch_20d3d88: @ 20d3d88 :arm
	ldr     r1, [sp, #0x10]
	ldr     r0, [sp, #0x14]
	sub     r0, r1, r0
	add     sp, sp, #0x30
	ldmfd   sp!, {r3-r11,pc}
@ 0x20d3d9c

.word 0xcccccccd @ 0x20d3d9c



.arm
.globl Function_20d3da0
Function_20d3da0: @ 20d3da0 :arm
	stmfd   sp!, {r3,lr}
	mov     r0, #0x1
	bl      Function_20d8a30
	ldr     r1, [pc, #0xc] @ [0x20d3dc0] (=RAM_21d0810)
	mov     r0, #0x1
	str     r0, [r1, #0xc]
	bl      Function_20d3dc4
	ldmfd   sp!, {r3,pc}
@ 0x20d3dc0

.word RAM_21d0810 @ 0x20d3dc0
.arm
Function_20d3dc4: @ 20d3dc4 :arm
	stmfd   sp!, {r4,lr}
	ldr     r1, [pc, #0x3c] @ [0x20d3e0c] (=RAM_21d0810)
	mov     r4, r0
	ldr     r0, [r1, #0xc]
	cmp     r0, #0x0
	bne     branch_20d3e00
	bl      Function_20e4058
	ldr     r0, [pc, #0x24] @ [0x20d3e0c] (=RAM_21d0810)
	ldr     r0, [r0, #0x4]
	cmp     r0, #0x0
	beq     branch_20d3e00
	blx     r0
	ldr     r0, [pc, #0x10] @ [0x20d3e0c] (=RAM_21d0810)
	mov     r1, #0x0
	str     r1, [r0, #0x4]
branch_20d3e00: @ 20d3e00 :arm
	mov     r0, r4
	bl      Function_20d3e10
	ldmfd   sp!, {r4,pc}
@ 0x20d3e0c

.word RAM_21d0810 @ 0x20d3e0c



.arm
Function_20d3e10: @ 20d3e10 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r0, [pc, #0x104] @ [0x20d3f20] (=RAM_21d0968)
	bl      OS_TryLockMutex
	cmp     r0, #0x0
	bne     branch_20d3e48
	ldr     r0, [pc, #0xf8] @ [0x20d3f24] (=RAM_21ccc80)
	ldr     r1, [pc, #0xf8] @ [0x20d3f28] (=RAM_21d0920)
	ldr     r2, [r0, #0x4]
	ldr     r0, [pc, #0xf4] @ [0x20d3f2c] (=RAM_21d0944)
	ldr     r3, [r2, #0x6c]
	mov     r2, #0x1
	str     r3, [r1]
	str     r2, [r0]
	b       branch_20d3ea0
@ 0x20d3e48

.arm
branch_20d3e48: @ 20d3e48 :arm
	ldr     r0, [pc, #0xd4] @ [0x20d3f24] (=RAM_21ccc80)
	ldr     r1, [pc, #0xd4] @ [0x20d3f28] (=RAM_21d0920)
	ldr     r0, [r0, #0x4]
	ldr     r1, [r1]
	ldr     r0, [r0, #0x6c]
	cmp     r1, r0
	bne     branch_20d3e78
	ldr     r0, [pc, #0xc0] @ [0x20d3f2c] (=RAM_21d0944)
	ldr     r1, [r0]
	add     r1, r1, #0x1
	str     r1, [r0]
	b       branch_20d3ea0
@ 0x20d3e78

.arm
branch_20d3e78: @ 20d3e78 :arm
	ldr     r0, [pc, #0xa0] @ [0x20d3f20] (=RAM_21d0968)
	bl      OS_LockMutex
	ldr     r0, [pc, #0x9c] @ [0x20d3f24] (=RAM_21ccc80)
	ldr     r1, [pc, #0x9c] @ [0x20d3f28] (=RAM_21d0920)
	ldr     r2, [r0, #0x4]
	ldr     r0, [pc, #0x98] @ [0x20d3f2c] (=RAM_21d0944)
	ldr     r3, [r2, #0x6c]
	mov     r2, #0x1
	str     r3, [r1]
	str     r2, [r0]
.arm
branch_20d3ea0: @ 20d3ea0 :arm
	ldr     r4, [pc, #0x88] @ [0x20d3f30] (=RAM_21d0810)
	ldr     r0, [r4, #0x8]
	cmp     r0, #0x0
	ble     branch_20d3ed4
	ldr     r5, [pc, #0x7c] @ [0x20d3f34] (=RAM_21d0820)
.arm
branch_20d3eb4: @ 20d3eb4 :arm
	ldr     r0, [r4, #0x8]
	sub     r1, r0, #0x1
	ldr     r0, [r5, r1, lsl #0x2]
	str     r1, [r4, #0x8]
	blx     r0
	ldr     r0, [r4, #0x8]
	cmp     r0, #0x0
	bgt     branch_20d3eb4
.arm
branch_20d3ed4: @ 20d3ed4 :arm
	ldr     r0, [pc, #0x50] @ [0x20d3f2c] (=RAM_21d0944)
	ldr     r1, [r0]
	subs    r1, r1, #0x1
	str     r1, [r0]
	bne     branch_20d3ef0
	ldr     r0, [pc, #0x30] @ [0x20d3f20] (=RAM_21d0968)
	bl      OS_UnlockMutex
.arm
branch_20d3ef0: @ 20d3ef0 :arm
	ldr     r0, [pc, #0x38] @ [0x20d3f30] (=RAM_21d0810)
	ldr     r0, [r0]
	cmp     r0, #0x0
	beq     branch_20d3f10
	blx     r0
	ldr     r0, [pc, #0x24] @ [0x20d3f30] (=RAM_21d0810)
	mov     r1, #0x0
	str     r1, [r0]
branch_20d3f10: @ 20d3f10 :arm
	mov     r0, #0x0
	bl      Function_20d497c
	bl      Function_20e454c
	ldmfd   sp!, {r3-r5,pc}
@ 0x20d3f20

.word RAM_21d0968 @ 0x20d3f20
.word RAM_21ccc80 @ 0x20d3f24
.word RAM_21d0920 @ 0x20d3f28
.word RAM_21d0944 @ 0x20d3f2c
.word RAM_21d0810 @ 0x20d3f30
.word RAM_21d0820 @ 0x20d3f34



.arm
Function_20d3f38: @ 20d3f38 :arm
	ldr     r0, [pc, #0x8] @ [0x20d3f48] (=Unknown_21015b0)
	ldr     r12, [pc, #0x8] @ [0x20d3f4c] (=_f2d)
	ldr     r0, [r0]
	bx      r12
@ 0x20d3f48

.word Unknown_21015b0 @ 0x20d3f48
.word _f2d @ 0x20d3f4c



.arm
Function_20d3f50: @ 20d3f50 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3,pc}
	bl      Function_20df918
	ldmfd   sp!, {r3,pc}
@ 0x20d3f68


.arm
Function_20d3f68: @ 20d3f68 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldmeqfd sp!, {r3,pc}
	bl      Function_20df930
	ldmfd   sp!, {r3,pc}
@ 0x20d3f7c


.arm
Function_20d3f7c: @ 20d3f7c :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r0, [pc, #0x7c] @ [0x20d4004] (=0x2101490)
	mov     r4, #0x0
	mov     r5, #0x1
	mov     r8, r0
	mvn     r9, #0x0
	mov     r7, r4
	mov     r6, #0x4c
.arm
branch_20d3f9c: @ 20d3f9c :arm
	ldr     r1, [r0, #0x4]
	mov     r2, r1, lsl #22
	movs    r2, r2, lsr #29
	beq     branch_20d3fdc
	mov     r1, r1, lsl #25
	mov     r1, r1, lsr #30
	tst     r1, #0x1
	beq     branch_20d3fdc
	ldr     r1, [r0, #0x8]
	mov     r1, r1, lsl #29
	mov     r1, r1, lsr #29
	cmp     r1, #0x1
	bne     branch_20d3fdc
	bl      Function_20d497c
	cmp     r0, #0x0
	movne   r4, r9
.arm
branch_20d3fdc: @ 20d3fdc :arm
	cmp     r5, #0x3
	movge   r0, r7
	bge     branch_20d3ff4
	mul     r0, r5, r6
	add     r5, r5, #0x1
	add     r0, r8, r0
branch_20d3ff4: @ 20d3ff4 :arm
	cmp     r0, #0x0
	bne     branch_20d3f9c
	mov     r0, r4
	ldmfd   sp!, {r3-r9,pc}
@ 0x20d4004

.word Unknown_2101490 @ 0x20d4004



.arm
Function_20d4008: @ 20d4008 :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r0, [pc, #0x58] @ [0x20d406c] (=Unknown_2101490)
	mov     r4, #0x0
	mov     r5, #0x1
	mov     r8, r0
	mvn     r9, #0x0
	mov     r7, r4
	mov     r6, #0x4c
.arm
branch_20d4028: @ 20d4028 :arm
	ldr     r1, [r0, #0x4]
	mov     r1, r1, lsl #22
	movs    r1, r1, lsr #29
	beq     branch_20d4044
	bl      Function_20d497c
	cmp     r0, #0x0
	movne   r4, r9
.arm
branch_20d4044: @ 20d4044 :arm
	cmp     r5, #0x3
	movge   r0, r7
	bge     branch_20d405c
	mul     r0, r5, r6
	add     r5, r5, #0x1
	add     r0, r8, r0
.arm
branch_20d405c: @ 20d405c :arm
	cmp     r0, #0x0
	bne     branch_20d4028
	mov     r0, r4
	ldmfd   sp!, {r3-r9,pc}
@ 0x20d406c

.word Unknown_2101490 @ 0x20d406c


.arm
.globl Function_20d4070
Function_20d4070: @ 20d4070 :arm
	cmp     r0, #0x0
	rsblt   r0, r0, #0x0
	bx      lr
@ 0x20d407c

.arm
.globl Function_20d407c
Function_20d407c: @ 20d407c :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	mov     r4, r0
	mov     lr, r1
	mov     r12, r2
	str     r3, [sp]
	ldr     r0, [pc, #0x18] @ [0x20d40b4] (=Unknown_2101574)
	mov     r1, r4
	mov     r2, lr
	mov     r3, r12
	bl      Function_20d7350
	bl      Function_20d3da0
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,pc}
@ 0x20d40b4

.word Unknown_2101574 @ 0x20d40b4



.arm
Function_20d40b8: @ 20d40b8 :arm
	bx      lr
@ 0x20d40bc


.arm
Function_20d40bc: @ 20d40bc :arm
	bx      lr
@ 0x20d40c0


.arm
Function_20d40c0: @ 20d40c0 :arm
	ldr     r1, [r0, #0x1c]
	str     r1, [r0, #0x24]
	ldr     r3, [r0, #0x20]
	str     r3, [r0, #0x28]
	ldr     r2, [r0, #0x18]
	ldr     r1, [r0, #0x2c]
	and     r1, r2, r1
	sub     r1, r3, r1
	str     r1, [r0, #0x28]
	ldr     r1, [r0, #0x18]
	str     r1, [r0, #0x34]
	bx      lr
@ 0x20d40f0


.arm
Function_20d40f0: @ 20d40f0 :arm
	stmfd   sp!, {r4-r6,lr}
	mov     r5, r2
	mov     r4, r0
	mov     r6, r1
	bl      Function_20d40c0
	cmp     r5, #0x1
	ldreq   r0, [r4, #0x20]
	add     r2, r4, #0x28
	streq   r0, [r4, #0x28]
	ldr     r0, [r4]
	ldr     r1, [r4, #0x1c]
	ldr     r3, [r4, #0x48]
	ldr     r12, [r4, #0x3c]
	blx     r12
	cmp     r0, #0x2
	moveq   r1, #0x0
	streq   r1, [r4, #0x28]
	cmp     r6, #0x0
	ldrne   r1, [r4, #0x28]
	strne   r1, [r6]
	cmp     r0, #0x0
	ldmnefd sp!, {r4-r6,pc}
	ldr     r1, [r4, #0x18]
	ldr     r0, [r4, #0x28]
	add     r0, r1, r0
	str     r0, [r4, #0x18]
	ldr     r0, [r4, #0x4]
	mov     r0, r0, lsl #19
	movs    r0, r0, lsr #31
	bne     branch_20d4174
	ldr     r0, [r4, #0x1c]
	add     r1, r4, #0x28
	bl      Function_20d40bc
branch_20d4174: @ 20d4174 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20d417c


.arm
Function_20d417c: @ 20d417c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	ldr     r2, [r5, #0x24]
	ldr     r0, [r5, #0x1c]
	mov     r4, r1
	subs    r0, r2, r0
	beq     branch_20d41f4
	str     r0, [r5, #0x28]
	ldr     r0, [r5, #0x4]
	mov     r0, r0, lsl #19
	movs    r0, r0, lsr #31
	bne     branch_20d41b8
	ldr     r0, [r5, #0x1c]
	add     r1, r5, #0x28
	bl      Function_20d40b8
.arm
branch_20d41b8: @ 20d41b8 :arm
	ldr     r0, [r5]
	ldr     r1, [r5, #0x1c]
	ldr     r3, [r5, #0x48]
	ldr     r12, [r5, #0x40]
	add     r2, r5, #0x28
	blx     r12
	cmp     r4, #0x0
	ldrne   r1, [r5, #0x28]
	strne   r1, [r4]
	cmp     r0, #0x0
	ldmnefd sp!, {r3-r5,pc}
	ldr     r1, [r5, #0x18]
	ldr     r0, [r5, #0x28]
	add     r0, r1, r0
	str     r0, [r5, #0x18]
.arm
branch_20d41f4: @ 20d41f4 :arm
	mov     r0, r5
	bl      Function_20d40c0
	mov     r0, #0x0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20d4204


.arm
.globl Function_20d4204
Function_20d4204: @ 20d4204 :arm
	stmfd   sp!, {r4-r10,lr}
	ldr     r4, [pc, #0xec] @ [0x20d42fc] (=0x2101490)
	mov     r7, r3
	cmp     r7, r4
	moveq   r6, #0x2
	mov     r10, r0
	movne   r6, #0x5
	mov     r0, #0x18
	mul     r4, r6, r0
	ldr     r5, [pc, #0xd0] @ [0x20d4300] (=RAM_21d0968)
	mov     r9, r1
	add     r0, r5, r4
	mov     r8, r2
	bl      OS_TryLockMutex
	cmp     r0, #0x0
	bne     branch_20d4268
	ldr     r0, [pc, #0xb8] @ [0x20d4304] (=RAM_21ccc80)
	ldr     r2, [pc, #0xb8] @ [0x20d4308] (=RAM_21d0920)
	ldr     r1, [r0, #0x4]
	ldr     r0, [pc, #0xb4] @ [0x20d430c] (=RAM_21d0944)
	ldr     r3, [r1, #0x6c]
	mov     r1, #0x1
	str     r3, [r2, r6, lsl #0x2]
	str     r1, [r0, r6, lsl #0x2]
	b       branch_20d42c0
@ 0x20d4268

.arm
branch_20d4268: @ 20d4268 :arm
	ldr     r0, [pc, #0x94] @ [0x20d4304] (=RAM_21ccc80)
	ldr     r1, [pc, #0x94] @ [0x20d4308] (=RAM_21d0920)
	ldr     r0, [r0, #0x4]
	ldr     r1, [r1, r6, lsl #0x2]
	ldr     r0, [r0, #0x6c]
	cmp     r1, r0
	bne     branch_20d4298
	ldr     r1, [pc, #0x80] @ [0x20d430c] (=RAM_21d0944)
	ldr     r0, [r1, r6, lsl #0x2]
	add     r0, r0, #0x1
	str     r0, [r1, r6, lsl #0x2]
	b       branch_20d42c0
@ 0x20d4298

.arm
branch_20d4298: @ 20d4298 :arm
	add     r0, r5, r4
	bl      OS_LockMutex
	ldr     r0, [pc, #0x5c] @ [0x20d4304] (=RAM_21ccc80)
	ldr     r2, [pc, #0x5c] @ [0x20d4308] (=RAM_21d0920)
	ldr     r1, [r0, #0x4]
	ldr     r0, [pc, #0x58] @ [0x20d430c] (=RAM_21d0944)
	ldr     r3, [r1, #0x6c]
	mov     r1, #0x1
	str     r3, [r2, r6, lsl #0x2]
	str     r1, [r0, r6, lsl #0x2]
.arm
branch_20d42c0: @ 20d42c0 :arm
	mov     r0, r10
	mov     r1, r9
	mov     r2, r8
	mov     r3, r7
	bl      Function_20d4310
	ldr     r1, [pc, #0x30] @ [0x20d430c] (=RAM_21d0944)
	mov     r7, r0
	ldr     r0, [r1, r6, lsl #0x2]
	subs    r0, r0, #0x1
	str     r0, [r1, r6, lsl #0x2]
	bne     branch_20d42f4
	add     r0, r5, r4
	bl      OS_UnlockMutex
branch_20d42f4: @ 20d42f4 :arm
	mov     r0, r7
	ldmfd   sp!, {r4-r10,pc}
@ 0x20d42fc

.word Unknown_2101490 @ 0x20d42fc
.word RAM_21d0968 @ 0x20d4300
.word RAM_21ccc80 @ 0x20d4304
.word RAM_21d0920 @ 0x20d4308
.word RAM_21d0944 @ 0x20d430c



.arm
Function_20d4310: @ 20d4310 :arm
	stmfd   sp!, {r3-r10,lr}
	sub     sp, sp, #0x4
	mov     r7, r3
	mov     r9, r0
	mov     r8, r1
	mov     r0, r7
	mov     r1, #0x0
	mov     r4, r2
	bl      Function_20dae20
	cmp     r0, #0x0
	bne     branch_20d4348
	mov     r0, r7
	mvn     r1, #0x0
	bl      Function_20dae20
.arm
branch_20d4348: @ 20d4348 :arm
	muls    r4, r8, r4
	beq     branch_20d436c
	ldrb    r0, [r7, #0xd]
	cmp     r0, #0x0
	bne     branch_20d436c
	ldr     r1, [r7, #0x4]
	mov     r0, r1, lsl #22
	movs    r0, r0, lsr #29
	bne     branch_20d4378
.arm
branch_20d436c: @ 20d436c :arm
	add     sp, sp, #0x4
	mov     r0, #0x0
	ldmfd   sp!, {r3-r10,pc}
@ 0x20d4378

.arm
branch_20d4378: @ 20d4378 :arm
	mov     r0, r1, lsl #19
	movs    r0, r0, lsr #31
	movne   r0, r1, lsl #25
	movne   r0, r0, lsr #30
	ldr     r1, [r7, #0x8]
	cmpne   r0, #0x2
	mov     r6, #0x1
	mov     r0, r1, lsl #29
	movne   r6, #0x0
	movs    r0, r0, lsr #29
	bne     branch_20d43cc
	ldr     r0, [r7, #0x4]
	mov     r0, r0, lsl #27
	mov     r0, r0, lsr #29
	tst     r0, #0x1
	beq     branch_20d43cc
	bic     r0, r1, #0x7
	orr     r0, r0, #0x2
	str     r0, [r7, #0x8]
	mov     r0, #0x0
	str     r0, [r7, #0x28]
.arm
branch_20d43cc: @ 20d43cc :arm
	ldr     r0, [r7, #0x8]
	mov     r0, r0, lsl #29
	mov     r0, r0, lsr #29
	cmp     r0, #0x2
	bhs     branch_20d43f8
	mov     r0, #0x1
	strb    r0, [r7, #0xd]
	mov     r0, #0x0
	add     sp, sp, #0x4
	str     r0, [r7, #0x28]
	ldmfd   sp!, {r3-r10,pc}
@ 0x20d43f8

.arm
branch_20d43f8: @ 20d43f8 :arm
	ldr     r0, [r7, #0x4]
	mov     r0, r0, lsl #25
	mov     r0, r0, lsr #30
	tst     r0, #0x1
	beq     branch_20d4430
	bl      Function_20d3f7c
	cmp     r0, #0x0
	beq     branch_20d4430
	mov     r0, #0x1
	strb    r0, [r7, #0xd]
	mov     r0, #0x0
	add     sp, sp, #0x4
	str     r0, [r7, #0x28]
	ldmfd   sp!, {r3-r10,pc}
@ 0x20d4430

.arm
branch_20d4430: @ 20d4430 :arm
	cmp     r4, #0x0
	mov     r5, #0x0
	beq     branch_20d44f4
	ldr     r0, [r7, #0x8]
	mov     r0, r0, lsl #29
	mov     r0, r0, lsr #29
	cmp     r0, #0x3
	blo     branch_20d44f4
	mov     r10, r5
.arm
branch_20d4454: @ 20d4454 :arm
	mov     r0, r7
	mov     r1, r10
	bl      Function_20dae20
	cmp     r0, #0x1
	ldr     r0, [r7, #0x8]
	bne     branch_20d4488
	mov     r0, r0, lsl #29
	add     r0, r7, r0, lsr #28
	ldrh    r0, [r0, #0xe]
	add     r5, r5, #0x2
	sub     r4, r4, #0x2
	strh    r0, [r9], #0x2
	b       branch_20d44a0
@ 0x20d4488

.arm
branch_20d4488: @ 20d4488 :arm
	mov     r0, r0, lsl #29
	add     r0, r7, r0, lsr #29
	ldrb    r0, [r0, #0xf]
	add     r5, r5, #0x1
	sub     r4, r4, #0x1
	strb    r0, [r9], #0x1
.arm
branch_20d44a0: @ 20d44a0 :arm
	ldr     r1, [r7, #0x8]
	cmp     r4, #0x0
	mov     r0, r1, lsl #29
	mov     r0, r0, lsr #29
	sub     r0, r0, #0x1
	bic     r1, r1, #0x7
	and     r0, r0, #0x7
	orr     r0, r1, r0
	str     r0, [r7, #0x8]
	beq     branch_20d44dc
	ldr     r0, [r7, #0x8]
	mov     r0, r0, lsl #29
	mov     r0, r0, lsr #29
	cmp     r0, #0x3
	bhs     branch_20d4454
.arm
branch_20d44dc: @ 20d44dc :arm
	ldr     r0, [r7, #0x8]
	mov     r0, r0, lsl #29
	mov     r0, r0, lsr #29
	cmp     r0, #0x2
	ldreq   r0, [r7, #0x30]
	streq   r0, [r7, #0x28]
.arm
branch_20d44f4: @ 20d44f4 :arm
	cmp     r4, #0x0
	beq     branch_20d45b8
	ldr     r0, [r7, #0x28]
	cmp     r0, #0x0
	cmpeq   r6, #0x0
	beq     branch_20d45b8
	mov     r10, #0x0
.arm
branch_20d4510: @ 20d4510 :arm
	ldr     r0, [r7, #0x28]
	cmp     r0, #0x0
	bne     branch_20d4564
	mov     r0, r7
	mov     r1, r10
	mov     r2, r10
	bl      Function_20d40f0
	cmp     r0, #0x0
	beq     branch_20d4564
	cmp     r0, #0x1
	mov     r0, #0x1
	streqb  r0, [r7, #0xd]
	beq     branch_20d4554
	ldr     r1, [r7, #0x8]
	bic     r1, r1, #0x7
	str     r1, [r7, #0x8]
	strb    r0, [r7, #0xc]
.arm
branch_20d4554: @ 20d4554 :arm
	mov     r0, #0x0
	str     r0, [r7, #0x28]
	mov     r4, #0x0
	b       branch_20d45b8
@ 0x20d4564

.arm
branch_20d4564: @ 20d4564 :arm
	ldr     r0, [r7, #0x28]
	str     r0, [sp]
	cmp     r0, r4
	strhi   r4, [sp]
	ldr     r1, [r7, #0x24]
	ldr     r2, [sp]
	mov     r0, r9
	bl      CopyDataInByteSteps
	ldr     r2, [sp]
	ldr     r0, [r7, #0x24]
	subs    r4, r4, r2
	add     r0, r0, r2
	str     r0, [r7, #0x24]
	ldr     r1, [r7, #0x28]
	ldr     r0, [sp]
	add     r9, r9, r2
	sub     r0, r1, r0
	add     r5, r5, r2
	str     r0, [r7, #0x28]
	cmpne   r6, #0x0
	bne     branch_20d4510
.arm
branch_20d45b8: @ 20d45b8 :arm
	cmp     r4, #0x0
	beq     branch_20d4644
	cmp     r6, #0x0
	bne     branch_20d4644
	ldr     r6, [r7, #0x1c]
	ldr     r10, [r7, #0x20]
	add     r1, sp, #0x0
	str     r9, [r7, #0x1c]
	mov     r0, r7
	mov     r2, #0x1
	str     r4, [r7, #0x20]
	bl      Function_20d40f0
	cmp     r0, #0x0
	beq     branch_20d4624
	cmp     r0, #0x1
	mov     r0, #0x1
	bne     branch_20d460c
	strb    r0, [r7, #0xd]
	mov     r0, #0x0
	str     r0, [r7, #0x28]
	b       branch_20d4624
@ 0x20d460c

.arm
branch_20d460c: @ 20d460c :arm
	ldr     r1, [r7, #0x8]
	bic     r1, r1, #0x7
	str     r1, [r7, #0x8]
	strb    r0, [r7, #0xc]
	mov     r0, #0x0
	str     r0, [r7, #0x28]
.arm
branch_20d4624: @ 20d4624 :arm
	ldr     r1, [sp]
	mov     r0, r7
	str     r6, [r7, #0x1c]
	str     r10, [r7, #0x20]
	add     r5, r5, r1
	bl      Function_20d40c0
	mov     r0, #0x0
	str     r0, [r7, #0x28]
.arm
branch_20d4644: @ 20d4644 :arm
	mov     r0, r5
	mov     r1, r8
	bl      _u32_div_f
	add     sp, sp, #0x4
	ldmfd   sp!, {r3-r10,pc}
@ 0x20d4658


.arm
Function_20d4658: @ 20d4658 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x8
	mov     r9, r3
	mov     r10, r0
	str     r1, [sp]
	mov     r0, r9
	mov     r1, #0x0
	mov     r4, r2
	bl      Function_20dae20
	cmp     r0, #0x0
	bne     branch_20d4690
	mov     r0, r9
	mvn     r1, #0x0
	bl      Function_20dae20
.arm
branch_20d4690: @ 20d4690 :arm
	ldr     r0, [sp]
	muls    r5, r0, r4
	beq     branch_20d46b8
	ldrb    r0, [r9, #0xd]
	cmp     r0, #0x0
	bne     branch_20d46b8
	ldr     r1, [r9, #0x4]
	mov     r0, r1, lsl #22
	movs    r0, r0, lsr #29
	bne     branch_20d46c4
.arm
branch_20d46b8: @ 20d46b8 :arm
	add     sp, sp, #0x8
	mov     r0, #0x0
	ldmfd   sp!, {r3-r11,pc}
@ 0x20d46c4

.arm
branch_20d46c4: @ 20d46c4 :arm
	mov     r0, r1, lsl #19
	movs    r0, r0, lsr #31
	movne   r0, r1, lsl #25
	movne   r0, r0, lsr #30
	cmpne   r0, #0x2
	ldr     r1, [r9, #0x8]
	cmpne   r0, #0x1
	mov     r8, #0x1
	mov     r0, r1, lsl #29
	movne   r8, #0x0
	movs    r0, r0, lsr #29
	bne     branch_20d471c
	ldr     r0, [r9, #0x4]
	mov     r0, r0, lsl #27
	mov     r0, r0, lsr #29
	tst     r0, #0x2
	beq     branch_20d471c
	bic     r0, r1, #0x7
	orr     r1, r0, #0x1
	mov     r0, r9
	str     r1, [r9, #0x8]
	bl      Function_20d40c0
.arm
branch_20d471c: @ 20d471c :arm
	ldr     r0, [r9, #0x8]
	mov     r0, r0, lsl #29
	mov     r0, r0, lsr #29
	cmp     r0, #0x1
	beq     branch_20d4748
	mov     r0, #0x1
	strb    r0, [r9, #0xd]
	mov     r0, #0x0
	add     sp, sp, #0x8
	str     r0, [r9, #0x28]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20d4748

.arm
branch_20d4748: @ 20d4748 :arm
	cmp     r5, #0x0
	mov     r6, #0x0
	beq     branch_20d4870
	ldr     r0, [r9, #0x1c]
	ldr     r2, [r9, #0x24]
	cmp     r2, r0
	cmpeq   r8, #0x0
	beq     branch_20d4870
	ldr     r1, [r9, #0x20]
	sub     r0, r2, r0
	sub     r0, r1, r0
	str     r0, [r9, #0x28]
	mov     r11, #0xa
	mov     r4, #0x0
.arm
branch_20d4780: @ 20d4780 :arm
	ldr     r0, [r9, #0x28]
	mov     r7, r4
	str     r0, [sp, #0x4]
	cmp     r0, r5
	strhi   r5, [sp, #0x4]
	ldr     r0, [r9, #0x4]
	mov     r0, r0, lsl #25
	mov     r0, r0, lsr #30
	cmp     r0, #0x1
	bne     branch_20d47d0
	ldr     r2, [sp, #0x4]
	cmp     r2, #0x0
	beq     branch_20d47d0
	mov     r0, r10
	mov     r1, r11
	bl      Function_20d5164
	movs    r7, r0
	addne   r0, r7, #0x1
	subne   r0, r0, r10
	strne   r0, [sp, #0x4]
.arm
branch_20d47d0: @ 20d47d0 :arm
	ldr     r2, [sp, #0x4]
	cmp     r2, #0x0
	beq     branch_20d4810
	ldr     r0, [r9, #0x24]
	mov     r1, r10
	bl      CopyDataInByteSteps
	ldr     r2, [sp, #0x4]
	ldr     r0, [r9, #0x24]
	add     r10, r10, r2
	add     r0, r0, r2
	str     r0, [r9, #0x24]
	ldr     r1, [r9, #0x28]
	ldr     r0, [sp, #0x4]
	sub     r5, r5, r2
	sub     r0, r1, r0
	str     r0, [r9, #0x28]
.arm
branch_20d4810: @ 20d4810 :arm
	ldr     r0, [r9, #0x28]
	cmp     r0, #0x0
	beq     branch_20d4834
	cmp     r7, #0x0
	bne     branch_20d4834
	ldr     r0, [r9, #0x4]
	mov     r0, r0, lsl #25
	movs    r0, r0, lsr #30
	bne     branch_20d485c
.arm
branch_20d4834: @ 20d4834 :arm
	mov     r0, r9
	mov     r1, #0x0
	bl      Function_20d417c
	cmp     r0, #0x0
	beq     branch_20d485c
	mov     r0, #0x1
	strb    r0, [r9, #0xd]
	mov     r5, #0x0
	str     r5, [r9, #0x28]
	b       branch_20d4870
@ 0x20d485c

.arm
branch_20d485c: @ 20d485c :arm
	ldr     r0, [sp, #0x4]
	cmp     r5, #0x0
	add     r6, r6, r0
	cmpne   r8, #0x0
	bne     branch_20d4780
.arm
branch_20d4870: @ 20d4870 :arm
	cmp     r5, #0x0
	beq     branch_20d48dc
	cmp     r8, #0x0
	bne     branch_20d48dc
	ldr     r4, [r9, #0x1c]
	ldr     r7, [r9, #0x20]
	add     r2, r10, r5
	str     r10, [r9, #0x1c]
	str     r5, [r9, #0x20]
	add     r1, sp, #0x4
	mov     r0, r9
	str     r2, [r9, #0x24]
	bl      Function_20d417c
	cmp     r0, #0x0
	ldreq   r0, [sp, #0x4]
	addeq   r6, r6, r0
	beq     branch_20d48c4
	mov     r0, #0x1
	strb    r0, [r9, #0xd]
	mov     r0, #0x0
	str     r0, [r9, #0x28]
.arm
branch_20d48c4: @ 20d48c4 :arm
	str     r4, [r9, #0x1c]
	mov     r0, r9
	str     r7, [r9, #0x20]
	bl      Function_20d40c0
	mov     r0, #0x0
	str     r0, [r9, #0x28]
.arm
branch_20d48dc: @ 20d48dc :arm
	ldr     r0, [r9, #0x4]
	ldr     r1, [sp]
	mov     r0, r0, lsl #25
	mov     r0, r0, lsr #30
	cmp     r0, #0x2
	movne   r0, #0x0
	strne   r0, [r9, #0x28]
	mov     r0, r6
	bl      _u32_div_f
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r11,pc}
@ 0x20d4908


.arm
.globl Function_20d4908
Function_20d4908: @ 20d4908 :arm
	stmfd   sp!, {r3-r5,lr}
	movs    r5, r0
	mvneq   r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	ldr     r1, [r5, #0x4]
	mov     r1, r1, lsl #22
	movs    r1, r1, lsr #29
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	bl      Function_20d497c
	mov     r4, r0
	ldr     r0, [r5]
	ldr     r1, [r5, #0x44]
	blx     r1
	ldr     r1, [r5, #0x4]
	mov     r2, #0x0
	bic     r1, r1, #14, 26 @ #0x380
	str     r1, [r5, #0x4]
	str     r2, [r5]
	ldr     r1, [r5, #0x8]
	mov     r1, r1, lsl #28
	movs    r1, r1, lsr #31
	subne   r0, r2, #0x1
	ldmnefd sp!, {r3-r5,pc}
	cmp     r4, #0x0
	cmpeq   r0, #0x0
	movne   r2, #0x1
	rsb     r0, r2, #0x0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20d497c


.arm
Function_20d497c: @ 20d497c :arm
	stmfd   sp!, {r4,lr}
	movs    r4, r0
	bne     branch_20d4990
	bl      Function_20d4008
	ldmfd   sp!, {r4,pc}

branch_20d4990: @ 20d4990 :arm
	ldrb    r0, [r4, #0xd]
	cmp     r0, #0x0
	bne     branch_20d49ac
	ldr     r0, [r4, #0x4]
	mov     r1, r0, lsl #22
	movs    r1, r1, lsr #29
	bne     branch_20d49b4
branch_20d49ac: @ 20d49ac :arm
	mvn     r0, #0x0
	ldmfd   sp!, {r4,pc}

branch_20d49b4: @ 20d49b4 :arm
	mov     r0, r0, lsl #27
	mov     r0, r0, lsr #29
	cmp     r0, #0x1
	moveq   r0, #0x0
	ldmeqfd sp!, {r4,pc}
	ldr     r0, [r4, #0x8]
	mov     r1, r0, lsl #29
	mov     r1, r1, lsr #29
	cmp     r1, #0x3
	biccs   r0, r0, #0x7
	orrcs   r0, r0, #0x2
	strcs   r0, [r4, #0x8]
	ldr     r0, [r4, #0x8]
	mov     r0, r0, lsl #29
	mov     r0, r0, lsr #29
	cmp     r0, #0x2
	moveq   r0, #0x0
	streq   r0, [r4, #0x28]
	ldr     r0, [r4, #0x8]
	mov     r1, r0, lsl #29
	mov     r1, r1, lsr #29
	cmp     r1, #0x1
	beq     branch_20d4a20
	bic     r0, r0, #0x7
	str     r0, [r4, #0x8]
	mov     r0, #0x0
	ldmfd   sp!, {r4,pc}

branch_20d4a20: @ 20d4a20 :arm
	mov     r0, r4
	mov     r1, #0x0
	bl      Function_20d417c
	cmp     r0, #0x0
	mov     r0, #0x0
	beq     branch_20d4a4c
	mov     r1, #0x1
	strb    r1, [r4, #0xd]
	str     r0, [r4, #0x28]
	sub     r0, r0, #0x1
	ldmfd   sp!, {r4,pc}

branch_20d4a4c: @ 20d4a4c :arm
	ldr     r1, [r4, #0x8]
	bic     r1, r1, #0x7
	str     r1, [r4, #0x8]
	str     r0, [r4, #0x18]
	str     r0, [r4, #0x28]
	ldmfd   sp!, {r4,pc}
@ 0x20d4a64


.arm
Function_20d4a64: @ 20d4a64 :arm
	ldr     r1, [r0, #0x4]
	mov     r1, r1, lsl #22
	mov     r1, r1, lsr #29
	and     r1, r1, #0xff
	add     r1, r1, #0xff
	and     r1, r1, #0xff
	cmp     r1, #0x1
	bhi     branch_20d4a90
	ldrb    r1, [r0, #0xd]
	cmp     r1, #0x0
	beq     branch_20d4aa4
.arm
branch_20d4a90: @ 20d4a90 :arm
	ldr     r0, [pc, #0x44] @ [0x20d4adc] (=RAM_21d0d40)
	mov     r1, #0x28
	str     r1, [r0]
	sub     r0, r1, #0x29
	bx      lr
@ 0x20d4aa4

.arm
branch_20d4aa4: @ 20d4aa4 :arm
	ldr     r1, [r0, #0x8]
	mov     r1, r1, lsl #29
	movs    r12, r1, lsr #29
	ldreq   r0, [r0, #0x18]
	bxeq    lr
	ldr     r2, [r0, #0x24]
	ldr     r1, [r0, #0x1c]
	ldr     r3, [r0, #0x34]
	sub     r0, r2, r1
	cmp     r12, #0x3
	add     r0, r3, r0
	subcs   r1, r12, #0x2
	subcs   r0, r0, r1
	bx      lr
@ 0x20d4adc

.word RAM_21d0d40 @ 0x20d4adc



.arm
.globl Function_20d4ae0
Function_20d4ae0: @ 20d4ae0 :arm
	stmfd   sp!, {r3-r7,lr}
	ldr     r1, [pc, #0xf4] @ [0x20d4be0] (=0x2101490)
	mov     r7, r0
	cmp     r7, r1
	moveq   r6, #0x2
	beq     branch_20d4b18
	ldr     r0, [pc, #0xe4] @ [0x20d4be4] (=0x21014dc)
	cmp     r7, r0
	moveq   r6, #0x3
	beq     branch_20d4b18
	ldr     r0, [pc, #0xd8] @ [0x20d4be8] (=Unknown_2101528)
	cmp     r7, r0
	moveq   r6, #0x4
	movne   r6, #0x5
.arm
branch_20d4b18: @ 20d4b18 :arm
	mov     r0, #0x18
	mul     r4, r6, r0
	ldr     r5, [pc, #0xc4] @ [0x20d4bec] (=RAM_21d0968)
	add     r0, r5, r4
	bl      OS_TryLockMutex
	cmp     r0, #0x0
	bne     branch_20d4b58
	ldr     r0, [pc, #0xb4] @ [0x20d4bf0] (=RAM_21ccc80)
	ldr     r2, [pc, #0xb4] @ [0x20d4bf4] (=RAM_21d0920)
	ldr     r1, [r0, #0x4]
	ldr     r0, [pc, #0xb0] @ [0x20d4bf8] (=RAM_21d0944)
	ldr     r3, [r1, #0x6c]
	mov     r1, #0x1
	str     r3, [r2, r6, lsl #0x2]
	str     r1, [r0, r6, lsl #0x2]
	b       branch_20d4bb0
@ 0x20d4b58

.arm
branch_20d4b58: @ 20d4b58 :arm
	ldr     r0, [pc, #0x90] @ [0x20d4bf0] (=RAM_21ccc80)
	ldr     r1, [pc, #0x90] @ [0x20d4bf4] (=RAM_21d0920)
	ldr     r0, [r0, #0x4]
	ldr     r1, [r1, r6, lsl #0x2]
	ldr     r0, [r0, #0x6c]
	cmp     r1, r0
	bne     branch_20d4b88
	ldr     r1, [pc, #0x7c] @ [0x20d4bf8] (=RAM_21d0944)
	ldr     r0, [r1, r6, lsl #0x2]
	add     r0, r0, #0x1
	str     r0, [r1, r6, lsl #0x2]
	b       branch_20d4bb0
@ 0x20d4b88

.arm
branch_20d4b88: @ 20d4b88 :arm
	add     r0, r5, r4
	bl      OS_LockMutex
	ldr     r0, [pc, #0x58] @ [0x20d4bf0] (=RAM_21ccc80)
	ldr     r2, [pc, #0x58] @ [0x20d4bf4] (=RAM_21d0920)
	ldr     r1, [r0, #0x4]
	ldr     r0, [pc, #0x54] @ [0x20d4bf8] (=RAM_21d0944)
	ldr     r3, [r1, #0x6c]
	mov     r1, #0x1
	str     r3, [r2, r6, lsl #0x2]
	str     r1, [r0, r6, lsl #0x2]
.arm
branch_20d4bb0: @ 20d4bb0 :arm
	mov     r0, r7
	bl      Function_20d4a64
	ldr     r1, [pc, #0x38] @ [0x20d4bf8] (=RAM_21d0944)
	mov     r7, r0
	ldr     r0, [r1, r6, lsl #0x2]
	subs    r0, r0, #0x1
	str     r0, [r1, r6, lsl #0x2]
	bne     branch_20d4bd8
	add     r0, r5, r4
	bl      OS_UnlockMutex
branch_20d4bd8: @ 20d4bd8 :arm
	mov     r0, r7
	ldmfd   sp!, {r3-r7,pc}
@ 0x20d4be0

.word Unknown_2101490 @ 0x20d4be0
.word Unknown_21014dc @ 0x20d4be4
.word Unknown_2101528 @ 0x20d4be8
.word RAM_21d0968 @ 0x20d4bec
.word RAM_21ccc80 @ 0x20d4bf0
.word RAM_21d0920 @ 0x20d4bf4
.word RAM_21d0944 @ 0x20d4bf8



.arm
Function_20d4bfc: @ 20d4bfc :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	ldr     r1, [r5, #0x4]
	mov     r4, r2
	mov     r1, r1, lsl #22
	mov     r1, r1, lsr #29
	and     r1, r1, #0xff
	cmp     r1, #0x1
	ldreqb  r1, [r5, #0xd]
	cmpeq   r1, #0x0
	beq     branch_20d4c48
	ldr     r0, [pc, #0x1ac] @ [0x20d4de0] (=RAM_21d0d40)
	mov     r1, #0x28
	str     r1, [r0]
	sub     r0, r1, #0x29
	ldmfd   sp!, {r3-r5,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d4c48

.arm
branch_20d4c48: @ 20d4c48 :arm
	ldr     r1, [r5, #0x8]
	mov     r1, r1, lsl #29
	mov     r1, r1, lsr #29
	cmp     r1, #0x1
	bne     branch_20d4c98
	mov     r1, #0x0
	bl      Function_20d417c
	cmp     r0, #0x0
	beq     branch_20d4c98
	mov     r0, #0x1
	strb    r0, [r5, #0xd]
	mov     r2, #0x0
	ldr     r0, [pc, #0x160] @ [0x20d4de0] (=RAM_21d0d40)
	mov     r1, #0x28
	str     r2, [r5, #0x28]
	str     r1, [r0]
	sub     r0, r1, #0x29
	ldmfd   sp!, {r3-r5,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d4c98

.arm
branch_20d4c98: @ 20d4c98 :arm
	cmp     r4, #0x1
	bne     branch_20d4cb8
	mov     r0, r5
	mov     r4, #0x0
	bl      Function_20d4a64
	ldr     r1, [sp, #0x14]
	add     r0, r1, r0
	str     r0, [sp, #0x14]
.arm
branch_20d4cb8: @ 20d4cb8 :arm
	cmp     r4, #0x2
	beq     branch_20d4d4c
	ldr     r0, [r5, #0x4]
	mov     r0, r0, lsl #27
	mov     r0, r0, lsr #29
	cmp     r0, #0x3
	beq     branch_20d4d4c
	ldr     r0, [r5, #0x8]
	mov     r0, r0, lsl #29
	mov     r0, r0, lsr #29
	sub     r0, r0, #0x2
	cmp     r0, #0x1
	bhi     branch_20d4d4c
	ldr     r2, [sp, #0x14]
	ldr     r0, [r5, #0x18]
	cmp     r2, r0
	bhs     branch_20d4d08
	ldr     r0, [r5, #0x34]
	cmp     r2, r0
	bhs     branch_20d4d18
.arm
branch_20d4d08: @ 20d4d08 :arm
	ldr     r0, [r5, #0x8]
	bic     r0, r0, #0x7
	str     r0, [r5, #0x8]
	b       branch_20d4d58
@ 0x20d4d18

.arm
branch_20d4d18: @ 20d4d18 :arm
	ldr     r1, [r5, #0x1c]
	sub     r0, r2, r0
	add     r0, r1, r0
	str     r0, [r5, #0x24]
	ldr     r1, [r5, #0x18]
	ldr     r0, [sp, #0x14]
	sub     r0, r1, r0
	str     r0, [r5, #0x28]
	ldr     r0, [r5, #0x8]
	bic     r0, r0, #0x7
	orr     r0, r0, #0x2
	str     r0, [r5, #0x8]
	b       branch_20d4d58
@ 0x20d4d4c

.arm
branch_20d4d4c: @ 20d4d4c :arm
	ldr     r0, [r5, #0x8]
	bic     r0, r0, #0x7
	str     r0, [r5, #0x8]
.arm
branch_20d4d58: @ 20d4d58 :arm
	ldr     r0, [r5, #0x8]
	mov     r0, r0, lsl #29
	movs    r0, r0, lsr #29
	bne     branch_20d4dd0
	ldr     r12, [r5, #0x38]
	cmp     r12, #0x0
	beq     branch_20d4dbc
	ldr     r0, [r5]
	ldr     r3, [r5, #0x48]
	add     r1, sp, #0x14
	mov     r2, r4
	blx     r12
	cmp     r0, #0x0
	beq     branch_20d4dbc
	mov     r0, #0x1
	strb    r0, [r5, #0xd]
	mov     r2, #0x0
	ldr     r0, [pc, #0x3c] @ [0x20d4de0] (=RAM_21d0d40)
	mov     r1, #0x28
	str     r2, [r5, #0x28]
	str     r1, [r0]
	sub     r0, r1, #0x29
	ldmfd   sp!, {r3-r5,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d4dbc

.arm
branch_20d4dbc: @ 20d4dbc :arm
	mov     r1, #0x0
	strb    r1, [r5, #0xc]
	ldr     r0, [sp, #0x14]
	str     r0, [r5, #0x18]
	str     r1, [r5, #0x28]
.arm
branch_20d4dd0: @ 20d4dd0 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r5,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d4de0

.word RAM_21d0d40 @ 0x20d4de0



.arm
.globl Function_20d4de4
Function_20d4de4: @ 20d4de4 :arm
	stmfd   sp!, {r3-r9,lr}
	ldr     r3, [pc, #0x104] @ [0x20d4ef4] (=0x2101490)
	mov     r9, r0
	cmp     r9, r3
	mov     r8, r1
	mov     r7, r2
	moveq   r6, #0x2
	beq     branch_20d4e24
	ldr     r0, [pc, #0xec] @ [0x20d4ef8] (=0x21014dc)
	cmp     r9, r0
	moveq   r6, #0x3
	beq     branch_20d4e24
	ldr     r0, [pc, #0xe0] @ [0x20d4efc] (=Unknown_2101528)
	cmp     r9, r0
	moveq   r6, #0x4
	movne   r6, #0x5
.arm
branch_20d4e24: @ 20d4e24 :arm
	mov     r0, #0x18
	mul     r4, r6, r0
	ldr     r5, [pc, #0xcc] @ [0x20d4f00] (=RAM_21d0968)
	add     r0, r5, r4
	bl      OS_TryLockMutex
	cmp     r0, #0x0
	bne     branch_20d4e64
	ldr     r0, [pc, #0xbc] @ [0x20d4f04] (=RAM_21ccc80)
	ldr     r2, [pc, #0xbc] @ [0x20d4f08] (=RAM_21d0920)
	ldr     r1, [r0, #0x4]
	ldr     r0, [pc, #0xb8] @ [0x20d4f0c] (=RAM_21d0944)
	ldr     r3, [r1, #0x6c]
	mov     r1, #0x1
	str     r3, [r2, r6, lsl #0x2]
	str     r1, [r0, r6, lsl #0x2]
	b       branch_20d4ebc
@ 0x20d4e64

.arm
branch_20d4e64: @ 20d4e64 :arm
	ldr     r0, [pc, #0x98] @ [0x20d4f04] (=RAM_21ccc80)
	ldr     r1, [pc, #0x98] @ [0x20d4f08] (=RAM_21d0920)
	ldr     r0, [r0, #0x4]
	ldr     r1, [r1, r6, lsl #0x2]
	ldr     r0, [r0, #0x6c]
	cmp     r1, r0
	bne     branch_20d4e94
	ldr     r1, [pc, #0x84] @ [0x20d4f0c] (=RAM_21d0944)
	ldr     r0, [r1, r6, lsl #0x2]
	add     r0, r0, #0x1
	str     r0, [r1, r6, lsl #0x2]
	b       branch_20d4ebc
@ 0x20d4e94

.arm
branch_20d4e94: @ 20d4e94 :arm
	add     r0, r5, r4
	bl      OS_LockMutex
	ldr     r0, [pc, #0x60] @ [0x20d4f04] (=RAM_21ccc80)
	ldr     r2, [pc, #0x60] @ [0x20d4f08] (=RAM_21d0920)
	ldr     r1, [r0, #0x4]
	ldr     r0, [pc, #0x5c] @ [0x20d4f0c] (=RAM_21d0944)
	ldr     r3, [r1, #0x6c]
	mov     r1, #0x1
	str     r3, [r2, r6, lsl #0x2]
	str     r1, [r0, r6, lsl #0x2]
.arm
branch_20d4ebc: @ 20d4ebc :arm
	mov     r0, r9
	mov     r1, r8
	mov     r2, r7
	bl      Function_20d4bfc
	ldr     r1, [pc, #0x38] @ [0x20d4f0c] (=RAM_21d0944)
	mov     r7, r0
	ldr     r0, [r1, r6, lsl #0x2]
	subs    r0, r0, #0x1
	str     r0, [r1, r6, lsl #0x2]
	bne     branch_20d4eec
	add     r0, r5, r4
	bl      OS_UnlockMutex
branch_20d4eec: @ 20d4eec :arm
	mov     r0, r7
	ldmfd   sp!, {r3-r9,pc}
@ 0x20d4ef4

.word Unknown_2101490 @ 0x20d4ef4
.word Unknown_21014dc @ 0x20d4ef8
.word Unknown_2101528 @ 0x20d4efc
.word RAM_21d0968 @ 0x20d4f00
.word RAM_21ccc80 @ 0x20d4f04
.word RAM_21d0920 @ 0x20d4f08
.word RAM_21d0944 @ 0x20d4f0c



.arm
.globl Function_20d4f10
Function_20d4f10: @ 20d4f10 :arm
	stmfd   sp!, {r4,lr}
	mov     r1, #0x0
	mov     r4, r0
	mov     r2, r1
	strb    r1, [r4, #0xd]
	bl      Function_20d4de4
	mov     r0, #0x0
	strb    r0, [r4, #0xd]
	ldmfd   sp!, {r4,pc}
@ 0x20d4f34


.arm
Function_20d4f34: @ 20d4f34 :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, =Unknown_21016d0
	ldr     r3, [r3, #0x8]
	ldr     r3, [r3]
	blx     r3
	ldmfd   sp!, {r3,pc}
@ 0x20d4f4c

.pool



.arm
Function_20d4f50: @ 20d4f50 :arm
	cmp     r1, #0x0
	moveq   r0, #0x0
	bxeq    lr
	cmp     r2, #0x0
	mvneq   r0, #0x0
	bxeq    lr
	cmp     r0, #0x0
	ldrneb  r2, [r1]
	strneh  r2, [r0]
	ldrsb   r0, [r1]
	cmp     r0, #0x0
	moveq   r0, #0x0
	movne   r0, #0x1
	bx      lr
@ 0x20d4f88


.arm
Function_20d4f88: @ 20d4f88 :arm
	cmp     r0, #0x0
	moveq   r0, #0x0
	strneb  r1, [r0]
	movne   r0, #0x1
	bx      lr
@ 0x20d4f9c


.arm
Function_20d4f9c: @ 20d4f9c :arm
	stmfd   sp!, {r3,lr}
	ldr     r2, =Unknown_21016d0
	ldr     r2, [r2, #0x8]
	ldr     r2, [r2, #0x4]
	blx     r2
	ldmfd   sp!, {r3,pc}
@ 0x20d4fb4

.pool



.arm
Function_20d4fb8: @ 20d4fb8 :arm
	stmfd   sp!, {r4-r8,lr}
	mov     r7, r1
	mov     r8, r0
	mov     r0, r7
	mov     r6, r2
	bl      Function_20d8b60
	mov     r5, r0
	cmp     r8, #0x0
	mov     r4, #0x0
	beq     branch_20d5038
	cmp     r6, #0x0
	bls     branch_20d5038
.arm
branch_20d4fe8: @ 20d4fe8 :arm
	ldrsb   r0, [r7]
	cmp     r0, #0x0
	beq     branch_20d5020
	mov     r0, r8
	mov     r1, r7
	mov     r2, r5
	bl      Function_20d4f34
	cmp     r0, #0x0
	add     r8, r8, #0x2
	addgt   r7, r7, r0
	subgt   r5, r5, r0
	bgt     branch_20d502c
	mvn     r0, #0x0
	ldmfd   sp!, {r4-r8,pc}
@ 0x20d5020

.arm
branch_20d5020: @ 20d5020 :arm
	mov     r0, #0x0
	strh    r0, [r8]
	b       branch_20d5038
@ 0x20d502c

.arm
branch_20d502c: @ 20d502c :arm
	add     r4, r4, #0x1
	cmp     r4, r6
	blo     branch_20d4fe8
.arm
branch_20d5038: @ 20d5038 :arm
	mov     r0, r4
	ldmfd   sp!, {r4-r8,pc}
@ 0x20d5040


.arm
Function_20d5040: @ 20d5040 :arm
	stmfd   sp!, {r3-r9,lr}
	movs    r4, r0
	mov     r9, r1
	cmpne   r9, #0x0
	mov     r8, r2
	mov     r7, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r9,pc}
	add     r6, sp, #0x0
branch_20d5064: @ 20d5064 :arm
	ldrh    r1, [r9]
	cmp     r1, #0x0
	moveq   r0, #0x0
	streqb  r0, [r4, r7]
	beq     branch_20d50b0
	mov     r0, r6
	add     r9, r9, #0x2
	bl      Function_20d4f9c
	mov     r5, r0
	add     r0, r7, r5
	cmp     r0, r8
	bhi     branch_20d50b0
	mov     r1, r6
	mov     r2, r5
	add     r0, r4, r7
	bl      Function_20d8c44
	add     r7, r7, r5
	cmp     r7, r8
	bls     branch_20d5064
branch_20d50b0: @ 20d50b0 :arm
	mov     r0, r7
	ldmfd   sp!, {r3-r9,pc}
@ 0x20d50b8


/* Input
r0: Destination
r1: Source
r2: Size
*/
.arm
.globl CopyDataInByteSteps
CopyDataInByteSteps: @ 20d50b8 :arm
	mov     r12, r0
	cmp     r2, #0x0
	bxeq    lr

branch_20d50c4: @ 20d50c4 :arm
	ldrsb   r3, [r1], #0x1
	subs    r2, r2, #0x1
	strb    r3, [r12], #0x1
branch_20d50d0: @ 20d50d0 :thumb
	bne     branch_20d50c4

	bx      lr
@ 0x20d50d8


.arm
.globl Function_20d50d8
Function_20d50d8: @ 20d50d8 :arm
	cmp     r1, r0
	blo     branch_20d5100
	mov     r12, r0
	cmp     r2, #0x0
	bxeq    lr
.arm
branch_20d50ec: @ 20d50ec :arm
	ldrsb   r3, [r1], #0x1
	subs    r2, r2, #0x1
	strb    r3, [r12], #0x1
	bne     branch_20d50ec
	bx      lr
@ 0x20d5100

.arm
branch_20d5100: @ 20d5100 :arm
	cmp     r2, #0x0
	add     r3, r1, r2
	add     r12, r0, r2
	bxeq    lr
.arm
branch_20d5110: @ 20d5110 :arm
	ldrsb   r1, [r3, #-0x1]!
	subs    r2, r2, #0x1
	strb    r1, [r12, #-0x1]!
	bne     branch_20d5110
	bx      lr
@ 0x20d5124


.arm
.globl Call_FillMemWithValue
Call_FillMemWithValue: @ 20d5124 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      FillMemWithValue
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20d5138


.arm
Function_20d5138: @ 20d5138 :arm
	cmp     r2, #0x0
	and     r3, r1, #0xff
	beq     branch_20d515c
branch_20d5144: @ 20d5144 :arm
	ldrb    r1, [r0], #0x1
	cmp     r1, r3
	subeq   r0, r0, #0x1
	bxeq    lr
	subs    r2, r2, #0x1
	bne     branch_20d5144
branch_20d515c: @ 20d515c :arm
	mov     r0, #0x0
	bx      lr
@ 0x20d5164


.arm
Function_20d5164: @ 20d5164 :arm
	cmp     r2, #0x0
	and     r3, r1, #0xff
	add     r0, r0, r2
	beq     branch_20d5188
.arm
branch_20d5174: @ 20d5174 :arm
	ldrb    r1, [r0, #-0x1]!
	cmp     r1, r3
	bxeq    lr
	subs    r2, r2, #0x1
	bne     branch_20d5174
branch_20d5188: @ 20d5188 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20d5190


.arm
.globl Function_20d5190
Function_20d5190: @ 20d5190 :arm
	cmp     r2, #0x0
	beq     branch_20d51c8
branch_20d5198: @ 20d5198 :arm
	ldrb    r12, [r0], #0x1
	ldrb    r3, [r1], #0x1
	cmp     r12, r3
	beq     branch_20d51c0
	ldrb    r2, [r0, #-0x1]
	ldrb    r0, [r1, #-0x1]
	cmp     r2, r0
	mvncc   r0, #0x0
	movcs   r0, #0x1
	bx      lr

branch_20d51c0: @ 20d51c0 :arm
	subs    r2, r2, #0x1
	bne     branch_20d5198
branch_20d51c8: @ 20d51c8 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20d51d0


/* Input:
r0: Ptr
r1: Value
r2: Size
*/
.arm
FillMemWithValue: @ 20d51d0 :arm
	cmp     r2, #0x20
	and     r3, r1, #0xff
	blo     branch_20d5264

	rsb     r1, r0, #0x0
	ands    r12, r1, #0x3
	beq     branch_20d51fc

	sub     r2, r2, r12
	and     r1, r3, #0xff
branch_20d51f0: @ 20d51f0 :arm
	strb    r1, [r0], #0x1
	subs    r12, r12, #0x1
	bne     branch_20d51f0

branch_20d51fc: @ 20d51fc :arm
	cmp     r3, #0x0
	beq     branch_20d5214
	mov     r1, r3, lsl #16
	orr     r1, r1, r3, lsl #24
	orr     r1, r1, r3, lsl #8
	orr     r3, r3, r1
branch_20d5214: @ 20d5214 :arm
	movs    r1, r2, lsr #5
	beq     branch_20d5248

branch_20d521c: @ 20d521c :arm
	str     r3, [r0]
	str     r3, [r0, #0x4]
	str     r3, [r0, #0x8]
	str     r3, [r0, #0xc]
	str     r3, [r0, #0x10]
	str     r3, [r0, #0x14]
	str     r3, [r0, #0x18]
	str     r3, [r0, #0x1c]
	add     r0, r0, #0x20
	subs    r1, r1, #0x1
	bne     branch_20d521c

branch_20d5248: @ 20d5248 :arm
	and     r1, r2, #0x1f
	movs    r1, r1, lsr #2
	beq     branch_20d5260

branch_20d5254: @ 20d5254 :arm
	str     r3, [r0], #0x4
	subs    r1, r1, #0x1
	bne     branch_20d5254

branch_20d5260: @ 20d5260 :arm
	and     r2, r2, #0x3
branch_20d5264: @ 20d5264 :arm
	cmp     r2, #0x0
	bxeq    lr

	and     r1, r3, #0xff
branch_20d5270: @ 20d5270 :arm
	strb    r1, [r0], #0x1
	subs    r2, r2, #0x1
	bne     branch_20d5270

	bx      lr
@ 0x20d5280


.arm
Function_20d5280: @ 20d5280 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x10
	ldrsb   r3, [r0, #0x1]
	mov     r4, #0x0
	mov     r5, #0x1
	mov     lr, r2
	strb    r5, [sp]
	strb    r4, [sp, #0x1]
	strb    r4, [sp, #0x2]
	strb    r4, [sp, #0x3]
	strb    r4, [sp, #0x4]
	str     r4, [sp, #0x8]
	str     r4, [sp, #0xc]
	cmp     r3, #0x25
	add     r12, r0, #0x1
	bne     branch_20d52dc
	add     r0, sp, #0x0
	strb    r3, [sp, #0x5]
	ldmia   r0, {r0-r3}
	stmia   lr, {r0-r3}
	add     sp, sp, #0x10
	add     r0, r12, #0x1
	ldmfd   sp!, {r4-r8,pc}

branch_20d52dc: @ 20d52dc :arm
	mov     r2, #0x2
	mov     r0, r4
	mov     r5, r2
	mov     r6, r4
	mov     r7, #0x1
branch_20d52f0: @ 20d52f0 :arm
	mov     r8, r7
	cmp     r3, #0x2b
	bgt     branch_20d5320
	bge     branch_20d5348
	cmp     r3, #0x23
	bgt     branch_20d5378
	cmp     r3, #0x20
	blt     branch_20d5378
	beq     branch_20d5350
	cmp     r3, #0x23
	beq     branch_20d5360
	b       branch_20d5378

branch_20d5320: @ 20d5320 :arm
	cmp     r3, #0x30
	bgt     branch_20d5378
	cmp     r3, #0x2d
	blt     branch_20d5378
	beq     branch_20d5340
	cmp     r3, #0x30
	beq     branch_20d5368
	b       branch_20d5378

branch_20d5340: @ 20d5340 :arm
	strb    r6, [sp]
	b       branch_20d537c

branch_20d5348: @ 20d5348 :arm
	strb    r7, [sp, #0x1]
	b       branch_20d537c

branch_20d5350: @ 20d5350 :arm
	ldrb    r4, [sp, #0x1]
	cmp     r4, #0x1
	strneb  r5, [sp, #0x1]
	b       branch_20d537c

branch_20d5360: @ 20d5360 :arm
	strb    r7, [sp, #0x3]
	b       branch_20d537c

branch_20d5368: @ 20d5368 :arm
	ldrb    r4, [sp]
	cmp     r4, #0x0
	strneb  r2, [sp]
	b       branch_20d537c

branch_20d5378: @ 20d5378 :arm
	mov     r8, r0
branch_20d537c: @ 20d537c :arm
	cmp     r8, #0x0
	ldrnesb r3, [r12, #0x1]!
	bne     branch_20d52f0
	cmp     r3, #0x2a
	bne     branch_20d53c4
	ldr     r0, [r1]
	add     r0, r0, #0x4
	str     r0, [r1]
	ldr     r0, [r0, #-0x4]
	str     r0, [sp, #0x8]
	cmp     r0, #0x0
	bge     branch_20d53bc
	rsb     r0, r0, #0x0
	mov     r2, #0x0
	strb    r2, [sp]
	str     r0, [sp, #0x8]
branch_20d53bc: @ 20d53bc :arm
	ldrsb   r3, [r12, #0x1]!
	b       branch_20d5414

branch_20d53c4: @ 20d53c4 :arm
	ldr     r4, [pc, #0x43c] @ [0x20d5808] (=Unknown_20fe864)
	mov     r5, #0x0
	mov     r0, #0xa
	b       branch_20d53e8

branch_20d53d4: @ 20d53d4 :arm
	ldr     r2, [sp, #0x8]
	sub     r3, r3, #0x30
	mla     r6, r2, r0, r3
	ldrsb   r3, [r12, #0x1]!
	str     r6, [sp, #0x8]
branch_20d53e8: @ 20d53e8 :arm
	cmp     r3, #0x0
	blt     branch_20d53f8
	cmp     r3, #0x80
	blt     branch_20d5400
branch_20d53f8: @ 20d53f8 :arm
	mov     r2, r5
	b       branch_20d540c

branch_20d5400: @ 20d5400 :arm
	mov     r2, r3, lsl #1
	ldrh    r2, [r4, r2]
	and     r2, r2, #0x8
branch_20d540c: @ 20d540c :arm
	cmp     r2, #0x0
	bne     branch_20d53d4
branch_20d5414: @ 20d5414 :arm
	ldr     r2, [sp, #0x8]
	ldr     r0, [pc, #0x3ec] @ [0x20d580c] (=0x1fd)
	cmp     r2, r0
	ble     branch_20d5444
	mov     r1, #0xff
	add     r0, sp, #0x0
	strb    r1, [sp, #0x5]
	ldmia   r0, {r0-r3}
	stmia   lr, {r0-r3}
	add     sp, sp, #0x10
	add     r0, r12, #0x1
	ldmfd   sp!, {r4-r8,pc}

branch_20d5444: @ 20d5444 :arm
	cmp     r3, #0x2e
	bne     branch_20d54d8
	ldrsb   r3, [r12, #0x1]!
	mov     r0, #0x1
	strb    r0, [sp, #0x2]
	cmp     r3, #0x2a
	bne     branch_20d5488
	ldr     r0, [r1]
	add     r0, r0, #0x4
	str     r0, [r1]
	ldr     r0, [r0, #-0x4]
	ldrsb   r3, [r12, #0x1]!
	str     r0, [sp, #0xc]
	cmp     r0, #0x0
	movlt   r0, #0x0
	strltb  r0, [sp, #0x2]
	b       branch_20d54d8

branch_20d5488: @ 20d5488 :arm
	ldr     r2, [pc, #0x378] @ [0x20d5808] (=Unknown_20fe864)
	mov     r4, #0x0
	mov     r0, #0xa
	b       branch_20d54ac

branch_20d5498: @ 20d5498 :arm
	ldr     r1, [sp, #0xc]
	sub     r3, r3, #0x30
	mla     r5, r1, r0, r3
	ldrsb   r3, [r12, #0x1]!
	str     r5, [sp, #0xc]
branch_20d54ac: @ 20d54ac :arm
	cmp     r3, #0x0
	blt     branch_20d54bc
	cmp     r3, #0x80
	blt     branch_20d54c4
branch_20d54bc: @ 20d54bc :arm
	mov     r1, r4
	b       branch_20d54d0

branch_20d54c4: @ 20d54c4 :arm
	mov     r1, r3, lsl #1
	ldrh    r1, [r2, r1]
	and     r1, r1, #0x8
branch_20d54d0: @ 20d54d0 :arm
	cmp     r1, #0x0
	bne     branch_20d5498
branch_20d54d8: @ 20d54d8 :arm
	cmp     r3, #0x6c
	mov     r0, #0x1
	bgt     branch_20d5510
	cmp     r3, #0x68
	blt     branch_20d5504
	beq     branch_20d552c
	cmp     r3, #0x6a
	beq     branch_20d5578
	cmp     r3, #0x6c
	beq     branch_20d5548
	b       branch_20d559c

branch_20d5504: @ 20d5504 :arm
	cmp     r3, #0x4c
	beq     branch_20d556c
	b       branch_20d559c

branch_20d5510: @ 20d5510 :arm
	cmp     r3, #0x74
	bgt     branch_20d5520
	beq     branch_20d5584
	b       branch_20d559c

branch_20d5520: @ 20d5520 :arm
	cmp     r3, #0x7a
	beq     branch_20d5590
	b       branch_20d559c

branch_20d552c: @ 20d552c :arm
	ldrsb   r1, [r12, #0x1]
	mov     r2, #0x2
	strb    r2, [sp, #0x4]
	cmp     r1, #0x68
	streqb  r0, [sp, #0x4]
	ldreqsb r3, [r12, #0x1]!
	b       branch_20d55a0

branch_20d5548: @ 20d5548 :arm
	ldrsb   r1, [r12, #0x1]
	mov     r2, #0x3
	strb    r2, [sp, #0x4]
	cmp     r1, #0x6c
	bne     branch_20d55a0
	mov     r1, #0x4
	strb    r1, [sp, #0x4]
	ldrsb   r3, [r12, #0x1]!
	b       branch_20d55a0

branch_20d556c: @ 20d556c :arm
	mov     r1, #0x9
	strb    r1, [sp, #0x4]
	b       branch_20d55a0

branch_20d5578: @ 20d5578 :arm
	mov     r1, #0x6
	strb    r1, [sp, #0x4]
	b       branch_20d55a0

branch_20d5584: @ 20d5584 :arm
	mov     r1, #0x8
	strb    r1, [sp, #0x4]
	b       branch_20d55a0

branch_20d5590: @ 20d5590 :arm
	mov     r1, #0x7
	strb    r1, [sp, #0x4]
	b       branch_20d55a0

branch_20d559c: @ 20d559c :arm
	mov     r0, #0x0
branch_20d55a0: @ 20d55a0 :arm
	cmp     r0, #0x0
	ldrnesb r3, [r12, #0x1]!
	strb    r3, [sp, #0x5]
	cmp     r3, #0x61
	bgt     branch_20d55f4
	bge     branch_20d56dc
	cmp     r3, #0x47
	bgt     branch_20d55e8
	subs    r0, r3, #0x41
	addpl   pc, pc, r0, lsl #2
	b       branch_20d57e8
	b       branch_20d56dc
	b       branch_20d57e8
	b       branch_20d57e8
	b       branch_20d57e8
	b       branch_20d5724
	b       branch_20d56a4
	b       branch_20d5714

branch_20d55e8: @ 20d55e8 :arm
	cmp     r3, #0x58
	beq     branch_20d5668
	b       branch_20d57e8

branch_20d55f4: @ 20d55f4 :arm
	cmp     r3, #0x63
	bgt     branch_20d5604
	beq     branch_20d5784
	b       branch_20d57e8

branch_20d5604: @ 20d5604 :arm
	sub     r0, r3, #0x64
	cmp     r0, #0x14
	addls   pc, pc, r0, lsl #2
	b       branch_20d57e8
	b       branch_20d5668
	b       branch_20d5724
	b       branch_20d56a4
	b       branch_20d5714
	b       branch_20d57e8
	b       branch_20d5668
	b       branch_20d57e8
	b       branch_20d57e8
	b       branch_20d57e8
	b       branch_20d57e8
	b       branch_20d57d4
	b       branch_20d5668
	b       branch_20d5760
	b       branch_20d57e8
	b       branch_20d57e8
	b       branch_20d57b0
	b       branch_20d57e8
	b       branch_20d5668
	b       branch_20d57e8
	b       branch_20d57e8
	b       branch_20d5668

branch_20d5668: @ 20d5668 :arm
	ldrb    r0, [sp, #0x4]
	cmp     r0, #0x9
	moveq   r0, #0xff
	streqb  r0, [sp, #0x5]
	beq     branch_20d57f0
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x0
	moveq   r0, #0x1
	streq   r0, [sp, #0xc]
	beq     branch_20d57f0
	ldrb    r0, [sp]
	cmp     r0, #0x2
	moveq   r0, #0x1
	streqb  r0, [sp]
	b       branch_20d57f0
@ 0x20d56a4

.arm
branch_20d56a4: @ 20d56a4 :arm
	ldrb    r0, [sp, #0x4]
	cmp     r0, #0x2
	cmpne   r0, #0x6
	cmpne   r0, #0x7
	cmpne   r0, #0x8
	cmpne   r0, #0x4
	moveq   r0, #0xff
	streqb  r0, [sp, #0x5]
	beq     branch_20d57f0
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x0
	moveq   r0, #0x6
	streq   r0, [sp, #0xc]
	b       branch_20d57f0
@ 0x20d56dc

.arm
branch_20d56dc: @ 20d56dc :arm
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x0
	moveq   r0, #0xd
	streq   r0, [sp, #0xc]
	ldrb    r0, [sp, #0x4]
	cmp     r0, #0x2
	cmpne   r0, #0x6
	cmpne   r0, #0x7
	cmpne   r0, #0x8
	cmpne   r0, #0x4
	cmpne   r0, #0x1
	moveq   r0, #0xff
	streqb  r0, [sp, #0x5]
	b       branch_20d57f0
@ 0x20d5714

.arm
branch_20d5714: @ 20d5714 :arm
	ldr     r0, [sp, #0xc]
	cmp     r0, #0x0
	moveq   r0, #0x1
	streq   r0, [sp, #0xc]
.arm
branch_20d5724: @ 20d5724 :arm
	ldrb    r0, [sp, #0x4]
	cmp     r0, #0x2
	cmpne   r0, #0x6
	cmpne   r0, #0x7
	cmpne   r0, #0x8
	cmpne   r0, #0x4
	cmpne   r0, #0x1
	moveq   r0, #0xff
	streqb  r0, [sp, #0x5]
	beq     branch_20d57f0
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x0
	moveq   r0, #0x6
	streq   r0, [sp, #0xc]
	b       branch_20d57f0
@ 0x20d5760

.arm
branch_20d5760: @ 20d5760 :arm
	mov     r3, #0x78
	mov     r2, #0x1
	mov     r1, #0x3
	mov     r0, #0x8
	strb    r3, [sp, #0x5]
	strb    r2, [sp, #0x3]
	strb    r1, [sp, #0x4]
	str     r0, [sp, #0xc]
	b       branch_20d57f0
@ 0x20d5784

.arm
branch_20d5784: @ 20d5784 :arm
	ldrb    r1, [sp, #0x4]
	cmp     r1, #0x3
	moveq   r0, #0x5
	streqb  r0, [sp, #0x4]
	beq     branch_20d57f0
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x0
	cmpeq   r1, #0x0
	movne   r0, #0xff
	strneb  r0, [sp, #0x5]
	b       branch_20d57f0
@ 0x20d57b0

.arm
branch_20d57b0: @ 20d57b0 :arm
	ldrb    r0, [sp, #0x4]
	cmp     r0, #0x3
	moveq   r0, #0x5
	streqb  r0, [sp, #0x4]
	beq     branch_20d57f0
	cmp     r0, #0x0
	movne   r0, #0xff
	strneb  r0, [sp, #0x5]
	b       branch_20d57f0
@ 0x20d57d4

.arm
branch_20d57d4: @ 20d57d4 :arm
	ldrb    r0, [sp, #0x4]
	cmp     r0, #0x9
	moveq   r0, #0xff
	streqb  r0, [sp, #0x5]
	b       branch_20d57f0
@ 0x20d57e8

.arm
branch_20d57e8: @ 20d57e8 :arm
	mov     r0, #0xff
	strb    r0, [sp, #0x5]
branch_20d57f0: @ 20d57f0 :arm
	add     r0, sp, #0x0
	ldmia   r0, {r0-r3}
	stmia   lr, {r0-r3}
	add     r0, r12, #0x1
	add     sp, sp, #0x10
	ldmfd   sp!, {r4-r8,pc}
@ 0x20d5808

.word Unknown_20fe864 @ 0x20d5808
.word 0x1fd @ 0x20d580c



.arm
Function_20d5810: @ 20d5810 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x10
	movs    r10, r0
	mov     r0, #0x0
	mov     r5, r1
	str     r0, [sp, #0xc]
	ldr     r7, [sp, #0x4c]
	mov     r6, r0
	strb    r0, [r5, #-0x1]!
	ldrb    r0, [sp, #0x43]
	str     r1, [sp]
	ldrb    r8, [sp, #0x45]
	str     r0, [sp, #0x4]
	ldr     r0, [sp, #0x48]
	ldrb    r11, [sp, #0x41]
	str     r0, [sp, #0x8]
	cmpeq   r7, #0x0
	bne     branch_20d5884
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	beq     branch_20d5870
	cmp     r8, #0x6f
	beq     branch_20d5884
.arm
branch_20d5870: @ 20d5870 :arm
	add     sp, sp, #0x10
	mov     r0, r5
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d5884

.arm
branch_20d5884: @ 20d5884 :arm
	cmp     r8, #0x69
	bgt     branch_20d58ac
	bge     branch_20d58e0
	cmp     r8, #0x58
	bgt     branch_20d58a0
	beq     branch_20d590c
	b       branch_20d5914
@ 0x20d58a0

.arm
branch_20d58a0: @ 20d58a0 :arm
	cmp     r8, #0x64
	beq     branch_20d58e0
	b       branch_20d5914
@ 0x20d58ac

.arm
branch_20d58ac: @ 20d58ac :arm
	cmp     r8, #0x6f
	bgt     branch_20d58c0
	moveq   r4, #0x8
	moveq   r11, #0x0
	b       branch_20d5914
@ 0x20d58c0

.arm
branch_20d58c0: @ 20d58c0 :arm
	cmp     r8, #0x78
	bgt     branch_20d5914
	cmp     r8, #0x75
	blt     branch_20d5914
	beq     branch_20d5900
	cmp     r8, #0x78
	beq     branch_20d590c
	b       branch_20d5914
@ 0x20d58e0

.arm
branch_20d58e0: @ 20d58e0 :arm
	cmp     r10, #0x0
	mov     r4, #0xa
	bge     branch_20d5914
	mov     r0, #0x1
	cmp     r10, #2, 2 @ #0x80000000
	rsbne   r10, r10, #0x0
	str     r0, [sp, #0xc]
	b       branch_20d5914
@ 0x20d5900

.arm
branch_20d5900: @ 20d5900 :arm
	mov     r4, #0xa
	mov     r11, #0x0
	b       branch_20d5914
@ 0x20d590c

.arm
branch_20d590c: @ 20d590c :arm
	mov     r4, #0x10
	mov     r11, #0x0
.arm
branch_20d5914: @ 20d5914 :arm
	mov     r0, r10
	mov     r1, r4
	bl      _u32_div_f
	mov     r9, r1
	mov     r0, r10
	mov     r1, r4
	bl      _u32_div_f
	cmp     r9, #0xa
	mov     r10, r0
	addlt   r9, r9, #0x30
	blt     branch_20d594c
	cmp     r8, #0x78
	addeq   r9, r9, #0x57
	addne   r9, r9, #0x37
.arm
branch_20d594c: @ 20d594c :arm
	cmp     r10, #0x0
	strb    r9, [r5, #-0x1]!
	add     r6, r6, #0x1
	bne     branch_20d5914
	cmp     r4, #0x8
	bne     branch_20d5980
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	ldrnesb r0, [r5]
	cmpne   r0, #0x30
	movne   r0, #0x30
	strneb  r0, [r5, #-0x1]!
	addne   r6, r6, #0x1
.arm
branch_20d5980: @ 20d5980 :arm
	ldrb    r0, [sp, #0x40]
	cmp     r0, #0x2
	bne     branch_20d59b4
	ldr     r0, [sp, #0xc]
	ldr     r7, [sp, #0x8]
	cmp     r0, #0x0
	cmpeq   r11, #0x0
	subne   r7, r7, #0x1
	cmp     r4, #0x10
	bne     branch_20d59b4
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	subne   r7, r7, #0x2
.arm
branch_20d59b4: @ 20d59b4 :arm
	ldr     r0, [sp]
	sub     r1, r0, r5
	ldr     r0, [pc, #0x94] @ [0x20d5a58] (=0x1fd)
	add     r1, r7, r1
	cmp     r1, r0
	addgt   sp, sp, #0x10
	movgt   r0, #0x0
	ldmgtfd sp!, {r3-r11,lr}
	addgt   sp, sp, #0x10
	bxgt    lr
	cmp     r6, r7
	bge     branch_20d59f8
	mov     r0, #0x30
.arm
branch_20d59e8: @ 20d59e8 :arm
	add     r6, r6, #0x1
	cmp     r6, r7
	strb    r0, [r5, #-0x1]!
	blt     branch_20d59e8
.arm
branch_20d59f8: @ 20d59f8 :arm
	cmp     r4, #0x10
	bne     branch_20d5a14
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	movne   r0, #0x30
	strneb  r8, [r5, #-0x1]
	strneb  r0, [r5, #-0x2]!
.arm
branch_20d5a14: @ 20d5a14 :arm
	ldr     r0, [sp, #0xc]
	cmp     r0, #0x0
	movne   r0, #0x2d
	strneb  r0, [r5, #-0x1]!
	bne     branch_20d5a44
	cmp     r11, #0x1
	moveq   r0, #0x2b
	streqb  r0, [r5, #-0x1]!
	beq     branch_20d5a44
	cmp     r11, #0x2
	moveq   r0, #0x20
	streqb  r0, [r5, #-0x1]!
.arm
branch_20d5a44: @ 20d5a44 :arm
	mov     r0, r5
	add     sp, sp, #0x10
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d5a58

.word 0x1fd @ 0x20d5a58
.arm
Function_20d5a5c: @ 20d5a5c :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x1c
	mov     r9, r1
	mov     r1, #0x0
	mov     r10, r0
	mov     r8, r2
	mov     r0, r1
	strb    r0, [r8, #-0x1]!
	ldr     r0, [sp, #0x58]
	cmp     r9, #0x0
	str     r0, [sp, #0x14]
	ldrb    r0, [sp, #0x4f]
	cmpeq   r10, #0x0
	str     r2, [sp]
	str     r0, [sp, #0x4]
	ldrb    r0, [sp, #0x51]
	str     r1, [sp, #0x18]
	mov     r11, r1
	str     r0, [sp, #0x8]
	ldr     r0, [sp, #0x54]
	str     r0, [sp, #0xc]
	ldrb    r0, [sp, #0x4d]
	str     r0, [sp, #0x10]
	ldreq   r0, [sp, #0x14]
	cmpeq   r0, #0x0
	bne     branch_20d5af4
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	beq     branch_20d5ae0
	ldr     r0, [sp, #0x8]
	cmp     r0, #0x6f
	beq     branch_20d5af4
.arm
branch_20d5ae0: @ 20d5ae0 :arm
	add     sp, sp, #0x1c
	mov     r0, r8
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d5af4

.arm
branch_20d5af4: @ 20d5af4 :arm
	ldr     r0, [sp, #0x8]
	cmp     r0, #0x69
	bgt     branch_20d5b20
	bge     branch_20d5b50
	cmp     r0, #0x58
	bgt     branch_20d5b14
	beq     branch_20d5ba4
	b       branch_20d5bb0
@ 0x20d5b14

.arm
branch_20d5b14: @ 20d5b14 :arm
	cmp     r0, #0x64
	beq     branch_20d5b50
	b       branch_20d5bb0
@ 0x20d5b20

.arm
branch_20d5b20: @ 20d5b20 :arm
	cmp     r0, #0x6f
	bgt     branch_20d5b30
	beq     branch_20d5b84
	b       branch_20d5bb0
@ 0x20d5b30

.arm
branch_20d5b30: @ 20d5b30 :arm
	cmp     r0, #0x78
	bgt     branch_20d5bb0
	cmp     r0, #0x75
	blt     branch_20d5bb0
	beq     branch_20d5b94
	cmp     r0, #0x78
	beq     branch_20d5ba4
	b       branch_20d5bb0
@ 0x20d5b50

.arm
branch_20d5b50: @ 20d5b50 :arm
	subs    r0, r10, #0x0
	sbcs    r0, r9, #0x0
	mov     r7, #0xa
	mov     r6, #0x0
	bge     branch_20d5bb0
	cmp     r9, #2, 2 @ #0x80000000
	cmpeq   r10, r6
	beq     branch_20d5b78
	rsbs    r10, r10, #0x0
	rsc     r9, r9, #0x0
.arm
branch_20d5b78: @ 20d5b78 :arm
	mov     r0, #0x1
	str     r0, [sp, #0x18]
	b       branch_20d5bb0
@ 0x20d5b84

.arm
branch_20d5b84: @ 20d5b84 :arm
	mov     r6, #0x0
	str     r6, [sp, #0x10]
	mov     r7, #0x8
	b       branch_20d5bb0
@ 0x20d5b94

.arm
branch_20d5b94: @ 20d5b94 :arm
	mov     r6, #0x0
	str     r6, [sp, #0x10]
	mov     r7, #0xa
	b       branch_20d5bb0
@ 0x20d5ba4

.arm
branch_20d5ba4: @ 20d5ba4 :arm
	mov     r6, #0x0
	str     r6, [sp, #0x10]
	mov     r7, #0x10
.arm
branch_20d5bb0: @ 20d5bb0 :arm
	mov     r4, #0x0
.arm
branch_20d5bb4: @ 20d5bb4 :arm
	mov     r0, r10
	mov     r1, r9
	mov     r2, r7
	mov     r3, r6
	bl      _ull_mod
	mov     r5, r0
	mov     r0, r10
	mov     r1, r9
	mov     r2, r7
	mov     r3, r6
	bl      _ll_udiv
	mov     r10, r0
	cmp     r5, #0xa
	mov     r9, r1
	addlt   r0, r5, #0x30
	blt     branch_20d5c04
	ldr     r0, [sp, #0x8]
	cmp     r0, #0x78
	addeq   r0, r5, #0x57
	addne   r0, r5, #0x37
.arm
branch_20d5c04: @ 20d5c04 :arm
	strb    r0, [r8, #-0x1]!
	mov     r0, #0x0
	cmp     r9, r0
	cmpeq   r10, r4
	add     r11, r11, #0x1
	bne     branch_20d5bb4
	cmp     r6, #0x0
	cmpeq   r7, #0x8
	bne     branch_20d5c44
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	ldrnesb r0, [r8]
	cmpne   r0, #0x30
	movne   r0, #0x30
	strneb  r0, [r8, #-0x1]!
	addne   r11, r11, #0x1
.arm
branch_20d5c44: @ 20d5c44 :arm
	ldrb    r0, [sp, #0x4c]
	cmp     r0, #0x2
	bne     branch_20d5c94
	ldr     r0, [sp, #0xc]
	str     r0, [sp, #0x14]
	ldr     r0, [sp, #0x18]
	cmp     r0, #0x0
	ldreq   r0, [sp, #0x10]
	cmpeq   r0, #0x0
	ldrne   r0, [sp, #0x14]
	subne   r0, r0, #0x1
	strne   r0, [sp, #0x14]
	cmp     r6, #0x0
	cmpeq   r7, #0x10
	bne     branch_20d5c94
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	ldrne   r0, [sp, #0x14]
	subne   r0, r0, #0x2
	strne   r0, [sp, #0x14]
.arm
branch_20d5c94: @ 20d5c94 :arm
	ldr     r0, [sp]
	ldr     r1, [pc, #0xb4] @ [0x20d5d54] (=0x1fd)
	sub     r2, r0, r8
	ldr     r0, [sp, #0x14]
	add     r0, r0, r2
	cmp     r0, r1
	addgt   sp, sp, #0x1c
	movgt   r0, #0x0
	ldmgtfd sp!, {r4-r11,lr}
	addgt   sp, sp, #0x10
	bxgt    lr
	ldr     r0, [sp, #0x14]
	cmp     r11, r0
	bge     branch_20d5ce4
	mov     r1, #0x30
.arm
branch_20d5cd0: @ 20d5cd0 :arm
	ldr     r0, [sp, #0x14]
	add     r11, r11, #0x1
	cmp     r11, r0
	strb    r1, [r8, #-0x1]!
	blt     branch_20d5cd0
.arm
branch_20d5ce4: @ 20d5ce4 :arm
	cmp     r6, #0x0
	cmpeq   r7, #0x10
	bne     branch_20d5d0c
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	beq     branch_20d5d0c
	ldr     r0, [sp, #0x8]
	mov     r1, #0x30
	strb    r0, [r8, #-0x1]
	strb    r1, [r8, #-0x2]!
.arm
branch_20d5d0c: @ 20d5d0c :arm
	ldr     r0, [sp, #0x18]
	cmp     r0, #0x0
	movne   r0, #0x2d
	strneb  r0, [r8, #-0x1]!
	bne     branch_20d5d40
	ldr     r0, [sp, #0x10]
	cmp     r0, #0x1
	moveq   r0, #0x2b
	streqb  r0, [r8, #-0x1]!
	beq     branch_20d5d40
	cmp     r0, #0x2
	moveq   r0, #0x20
	streqb  r0, [r8, #-0x1]!
.arm
branch_20d5d40: @ 20d5d40 :arm
	mov     r0, r8
	add     sp, sp, #0x1c
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d5d54

.word 0x1fd @ 0x20d5d54
.arm
Function_20d5d58: @ 20d5d58 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r3-r10,lr}
	sub     sp, sp, #0x44
	ldr     r7, [sp, #0x80]
	ldr     r0, [pc, #0x498] @ [0x20d6208] (=0x1fd)
	mov     r8, r2
	cmp     r7, r0
	ldrb    r6, [sp, #0x79]
	ldrb    r5, [sp, #0x77]
	ldrb    r4, [sp, #0x75]
	ldr     r1, [sp, #0x68]
	ldr     r2, [sp, #0x6c]
	addgt   sp, sp, #0x44
	movgt   r0, #0x0
	ldmgtfd sp!, {r3-r10,lr}
	addgt   sp, sp, #0x10
	bxgt    lr
	mov     r10, #0x0
	mov     r9, #0x20
	add     r0, sp, #0x8
	add     r3, sp, #0xc
	strb    r10, [sp, #0x8]
	strh    r9, [sp, #0xa]
	bl      Function_20df108
	ldr     r0, [sp, #0x68]
	ldr     r1, [sp, #0x6c]
	bl      Function_20de084
	mov     r2, r0
	mov     r0, r10
	mov     r3, r1
	mov     r1, r0
	bl      Function_20e0f94
	bne     branch_20d5e24
	ldr     r3, [pc, #0x428] @ [0x20d620c] (=Unknown_21017d8)
	sub     r0, r8, #0x6
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	add     sp, sp, #0x44
	strb    r2, [r8, #-0x6]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldrb    r2, [r3, #0x4]
	ldrb    r1, [r3, #0x5]
	strb    r2, [r0, #0x4]
	strb    r1, [r0, #0x5]
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d5e24

.arm
branch_20d5e24: @ 20d5e24 :arm
	ldrb    r0, [sp, #0x11]
	cmp     r0, #0x49
	bne     branch_20d5f34
	ldrsb   r0, [sp, #0xc]
	cmp     r0, #0x0
	beq     branch_20d5ec0
	cmp     r6, #0x41
	sub     r0, r8, #0x5
	bne     branch_20d5e84
	ldr     r3, [pc, #0x3c0] @ [0x20d6210] (=Unknown_21017e0)
	add     sp, sp, #0x44
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldrb    r1, [r3, #0x4]
	strb    r1, [r0, #0x4]
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20d5e84: @ 20d5e84 :arm
	ldr     r3, [pc, #0x388] @ [0x20d6214] (=Unknown_21017e8)
	add     sp, sp, #0x44
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldrb    r1, [r3, #0x4]
	strb    r1, [r0, #0x4]
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20d5ec0: @ 20d5ec0 :arm
	cmp     r6, #0x41
	sub     r0, r8, #0x4
	bne     branch_20d5f00
	ldr     r3, [pc, #0x344] @ [0x20d6218] (=Unknown_21017f0)
	add     sp, sp, #0x44
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20d5f00: @ 20d5f00 :arm
	ldr     r3, [pc, #0x314] @ [0x20d621c] (=Unknown_21017f4)
	add     sp, sp, #0x44
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20d5f34: @ 20d5f34 :arm
	cmp     r0, #0x4e
	bne     branch_20d6040
	ldrsb   r0, [sp, #0xc]
	cmp     r0, #0x0
	beq     branch_20d5fcc
	cmp     r6, #0x41
	sub     r0, r8, #0x5
	bne     branch_20d5f90
	ldr     r3, [pc, #0x2c4] @ [0x20d6220] (=Unknown_21017f8)
	add     sp, sp, #0x44
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldrb    r1, [r3, #0x4]
	strb    r1, [r0, #0x4]
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20d5f90: @ 20d5f90 :arm
	ldr     r3, [pc, #0x28c] @ [0x20d6224] (=Unknown_2101800)
	add     sp, sp, #0x44
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldrb    r1, [r3, #0x4]
	strb    r1, [r0, #0x4]
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20d5fcc: @ 20d5fcc :arm
	cmp     r6, #0x41
	sub     r0, r8, #0x4
	bne     branch_20d600c
	ldr     r3, [pc, #0x248] @ [0x20d6228] (=Unknown_2101808)
	add     sp, sp, #0x44
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20d600c: @ 20d600c :arm
	ldr     r3, [pc, #0x218] @ [0x20d622c] (=Unknown_210180c)
	add     sp, sp, #0x44
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d6040

.arm
branch_20d6040: @ 20d6040 :arm
	mov     r3, r10
	mov     r1, #0x1
	mov     r0, #0x64
	add     r9, sp, #0x68
	strb    r1, [sp, #0x34]
	strb    r1, [sp, #0x35]
	strb    r3, [sp, #0x36]
	strb    r3, [sp, #0x37]
	strb    r3, [sp, #0x38]
	str     r3, [sp, #0x3c]
	str     r1, [sp, #0x40]
	strb    r0, [sp, #0x39]
.arm
branch_20d6070: @ 20d6070 :arm
	rsb     r1, r3, #0x7
	ldrsb   r2, [r9, r3]
	ldrsb   r0, [r9, r1]
	strb    r0, [r9, r3]
	add     r3, r3, #0x1
	strb    r2, [r9, r1]
	cmp     r3, #0x4
	blt     branch_20d6070
	ldrb    r0, [sp, #0x69]
	ldrb    r1, [sp, #0x68]
	ldr     r9, [pc, #0x190] @ [0x20d6230] (=0x7ff)
	mov     r0, r0, lsl #17
	orr     r1, r0, r1, lsl #25
	add     r0, sp, #0x34
	and     lr, r9, r1, lsr #21
	sub     r12, sp, #0x8
	ldmia   r0, {r0-r3}
	stmia   r12, {r0-r3}
	rsb     r0, r9, #1, 22 @ #0x400
	mov     r1, r8
	add     r0, lr, r0
	ldmia   r12, {r2,r3}
	bl      Function_20d5810
	cmp     r6, #0x61
	moveq   r1, #0x70
	movne   r1, #0x50
	strb    r1, [r0, #-0x1]!
	mov     r1, r7, lsl #2
	mov     lr, r7
	cmp     r7, #0x1
	add     r8, r1, #0xb
	add     r12, sp, #0x68
	blt     branch_20d6180
	mov     r9, #0x30
.arm
branch_20d60f8: @ 20d60f8 :arm
	cmp     r8, #0x40
	bge     branch_20d6168
	ldrb    r1, [r12, r8, asr #0x3]
	and     r2, r8, #0x7
	rsb     r3, r2, #0x7
	mov     r2, r1, asr r3
	sub     r10, r8, #0x4
	bic     r1, r8, #0x7
	bic     r10, r10, #0x7
	cmp     r1, r10
	add     r10, r12, r8, asr #3
	and     r1, r2, #0xff
	beq     branch_20d613c
	ldrb    r2, [r10, #-0x1]
	mov     r2, r2, lsl #8
	orr     r1, r1, r2, asr r3
	and     r1, r1, #0xff
.arm
branch_20d613c: @ 20d613c :arm
	and     r1, r1, #0xf
	cmp     r1, #0xa
	addcc   r1, r1, #0x30
	andcc   r1, r1, #0xff
	blo     branch_20d616c
	cmp     r6, #0x61
	addeq   r1, r1, #0x57
	andeq   r1, r1, #0xff
	addne   r1, r1, #0x37
	andne   r1, r1, #0xff
	b       branch_20d616c
@ 0x20d6168

.arm
branch_20d6168: @ 20d6168 :arm
	mov     r1, r9
.arm
branch_20d616c: @ 20d616c :arm
	sub     lr, lr, #0x1
	cmp     lr, #0x1
	strb    r1, [r0, #-0x1]!
	sub     r8, r8, #0x4
	bge     branch_20d60f8
.arm
branch_20d6180: @ 20d6180 :arm
	cmp     r7, #0x0
	cmpeq   r5, #0x0
	movne   r1, #0x2e
	strneb  r1, [r0, #-0x1]!
	mov     r1, #0x31
	strb    r1, [r0, #-0x1]
	cmp     r6, #0x61
	moveq   r1, #0x78
	movne   r1, #0x58
	strb    r1, [r0, #-0x2]!
	mov     r1, #0x30
	strb    r1, [r0, #-0x1]!
	ldrsb   r1, [sp, #0xc]
	cmp     r1, #0x0
	movne   r1, #0x2d
	strneb  r1, [r0, #-0x1]!
	addne   sp, sp, #0x44
	ldmnefd sp!, {r3-r10,lr}
	addne   sp, sp, #0x10
	bxne    lr
	cmp     r4, #0x1
	moveq   r1, #0x2b
	streqb  r1, [r0, #-0x1]!
	addeq   sp, sp, #0x44
	ldmeqfd sp!, {r3-r10,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
	cmp     r4, #0x2
	moveq   r1, #0x20
	streqb  r1, [r0, #-0x1]!
	add     sp, sp, #0x44
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d6208

.word 0x1fd @ 0x20d6208
.word Unknown_21017d8 @ 0x20d620c
.word Unknown_21017e0 @ 0x20d6210
.word Unknown_21017e8 @ 0x20d6214
.word Unknown_21017f0 @ 0x20d6218
.word Unknown_21017f4 @ 0x20d621c
.word Unknown_21017f8 @ 0x20d6220
.word Unknown_2101800 @ 0x20d6224
.word Unknown_2101808 @ 0x20d6228
.word Unknown_210180c @ 0x20d622c
.word 0x7ff @ 0x20d6230



.arm
Function_20d6234: @ 20d6234 :arm
	stmfd   sp!, {r4,lr}
	cmp     r1, #0x0
	bge     branch_20d625c
branch_20d6240: @ 20d6240 :arm
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0x1
	strb    r1, [r0, #0x4]
	mov     r1, #0x30
	strb    r1, [r0, #0x5]
	ldmfd   sp!, {r4,pc}
@ 0x20d625c

.arm
branch_20d625c: @ 20d625c :arm
	ldrb    lr, [r0, #0x4]
	cmp     r1, lr
	ldmgefd sp!, {r4,pc}
	add     r12, r0, #0x5
	add     r2, r12, r1
	add     r2, r2, #0x1
	ldrsb   r3, [r2, #-0x1]!
	sub     r3, r3, #0x30
	mov     r3, r3, lsl #24
	mov     r3, r3, asr #24
	cmp     r3, #0x5
	bne     branch_20d62bc
	add     r12, r12, lr
.arm
branch_20d6290: @ 20d6290 :arm
	sub     r12, r12, #0x1
	cmp     r12, r2
	bls     branch_20d62a8
	ldrsb   r3, [r12]
	cmp     r3, #0x30
	beq     branch_20d6290
.arm
branch_20d62a8: @ 20d62a8 :arm
	cmp     r12, r2
	ldreqsb r3, [r2, #-0x1]
	andeq   r4, r3, #0x1
	movne   r4, #0x1
	b       branch_20d62c4
@ 0x20d62bc

.arm
branch_20d62bc: @ 20d62bc :arm
	movgt   r4, #0x1
	movle   r4, #0x0
.arm
branch_20d62c4: @ 20d62c4 :arm
	cmp     r1, #0x0
	beq     branch_20d6320
	mov     r12, #0x0
	mov     lr, #0x1
.arm
branch_20d62d4: @ 20d62d4 :arm
	ldrsb   r3, [r2, #-0x1]!
	sub     r3, r3, #0x30
	add     r3, r3, r4
	mov     r3, r3, lsl #24
	mov     r3, r3, asr #24
	cmp     r3, #0x9
	movgt   r4, lr
	movle   r4, r12
	cmp     r4, #0x0
	bne     branch_20d6304
	cmp     r3, #0x0
	bne     branch_20d630c
.arm
branch_20d6304: @ 20d6304 :arm
	sub     r1, r1, #0x1
	b       branch_20d6318
@ 0x20d630c

.arm
branch_20d630c: @ 20d630c :arm
	add     r3, r3, #0x30
	strb    r3, [r2]
	b       branch_20d6320
@ 0x20d6318

.arm
branch_20d6318: @ 20d6318 :arm
	cmp     r1, #0x0
	bne     branch_20d62d4
.arm
branch_20d6320: @ 20d6320 :arm
	cmp     r4, #0x0
	beq     branch_20d6348
	ldrsh   r3, [r0, #0x2]
	mov     r2, #0x1
	mov     r1, #0x31
	add     r3, r3, #0x1
	strh    r3, [r0, #0x2]
	strb    r2, [r0, #0x4]
	strb    r1, [r0, #0x5]
	ldmfd   sp!, {r4,pc}
@ 0x20d6348

.arm
branch_20d6348: @ 20d6348 :arm
	cmp     r1, #0x0
	beq     branch_20d6240
	strb    r1, [r0, #0x4]
	ldmfd   sp!, {r4,pc}
@ 0x20d6358

.arm
Function_20d6358: @ 20d6358 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x2c
	ldr     r7, [sp, #0x68]
	ldr     r3, [pc, #0x720] @ [0x20d6a90] (=0x1fd)
	ldrb    r6, [sp, #0x61]
	ldrb    r5, [sp, #0x5f]
	ldrb    r4, [sp, #0x5d]
	cmp     r7, r3
	mov     r10, r0
	mov     r8, r1
	mov     r9, r2
	addgt   sp, sp, #0x2c
	movgt   r0, #0x0
	ldmgtfd sp!, {r4-r11,lr}
	addgt   sp, sp, #0x10
	bxgt    lr
	mov     r12, #0x0
	mov     r11, #0x20
	add     r0, sp, #0x0
	add     r3, sp, #0x4
	mov     r1, r10
	mov     r2, r8
	strb    r12, [sp]
	strh    r11, [sp, #0x2]
	bl      Function_20df108
	ldrb    r0, [sp, #0x8]
	add     r1, sp, #0x9
	add     r0, r1, r0
	b       branch_20d63e8
@ 0x20d63d0

.arm
branch_20d63d0: @ 20d63d0 :arm
	ldrb    r2, [sp, #0x8]
	ldrsh   r1, [sp, #0x6]
	sub     r2, r2, #0x1
	add     r1, r1, #0x1
	strb    r2, [sp, #0x8]
	strh    r1, [sp, #0x6]
.arm
branch_20d63e8: @ 20d63e8 :arm
	ldrb    r1, [sp, #0x8]
	cmp     r1, #0x1
	bls     branch_20d6400
	ldrsb   r1, [r0, #-0x1]!
	cmp     r1, #0x30
	beq     branch_20d63d0
.arm
branch_20d6400: @ 20d6400 :arm
	ldrb    r0, [sp, #0x9]
	cmp     r0, #0x30
	beq     branch_20d6420
	cmp     r0, #0x49
	beq     branch_20d642c
	cmp     r0, #0x4e
	beq     branch_20d658c
	b       branch_20d66e0
@ 0x20d6420

.arm
branch_20d6420: @ 20d6420 :arm
	mov     r0, #0x0
	strh    r0, [sp, #0x6]
	b       branch_20d66e0
@ 0x20d642c

.arm
branch_20d642c: @ 20d642c :arm
	mov     r2, #0x0
	mov     r0, r10
	mov     r1, r8
	mov     r3, r2
	bl      Function_20e0ef8
	bhs     branch_20d64f0
	cmp     r6, #0x0
	sub     r0, r9, #0x5
	blt     branch_20d6458
	cmp     r6, #0x80
	blt     branch_20d6460
.arm
branch_20d6458: @ 20d6458 :arm
	mov     r1, #0x0
	b       branch_20d6470
@ 0x20d6460

.arm
branch_20d6460: @ 20d6460 :arm
	ldr     r1, [pc, #0x62c] @ [0x20d6a94] (=Unknown_20fe864)
	mov     r2, r6, lsl #1
	ldrh    r1, [r1, r2]
	and     r1, r1, #2, 24 @ #0x200
branch_20d6470: @ 20d6470 :arm
	cmp     r1, #0x0
	beq     branch_20d64b4
	ldr     r3, [pc, #0x618] @ [0x20d6a98] (=Unknown_21017e0)
	add     sp, sp, #0x2c
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldrb    r1, [r3, #0x4]
	strb    r1, [r0, #0x4]
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20d64b4: @ 20d64b4 :arm
	ldr     r3, [pc, #0x5e0] @ [0x20d6a9c] (=Unknown_21017e8)
	add     sp, sp, #0x2c
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldrb    r1, [r3, #0x4]
	strb    r1, [r0, #0x4]
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d64f0

.arm
branch_20d64f0: @ 20d64f0 :arm
	cmp     r6, #0x0
	sub     r0, r9, #0x4
	blt     branch_20d6504
	cmp     r6, #0x80
	blt     branch_20d650c
branch_20d6504: @ 20d6504 :arm
	mov     r1, #0x0
	b       branch_20d651c

branch_20d650c: @ 20d650c :arm
	ldr     r1, [pc, #0x580] @ [0x20d6a94] (=Unknown_20fe864)
	mov     r2, r6, lsl #1
	ldrh    r1, [r1, r2]
	and     r1, r1, #2, 24 @ #0x200
branch_20d651c: @ 20d651c :arm
	cmp     r1, #0x0
	beq     branch_20d6558
	ldr     r3, [pc, #0x574] @ [0x20d6aa0] (=Unknown_21017f0)
	add     sp, sp, #0x2c
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20d6558: @ 20d6558 :arm
	ldr     r3, [pc, #0x544] @ [0x20d6aa4] (=Unknown_21017f4)
	add     sp, sp, #0x2c
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20d658c: @ 20d658c :arm
	ldrsb   r0, [sp, #0x4]
	cmp     r0, #0x0
	beq     branch_20d6644
	cmp     r6, #0x0
	sub     r0, r9, #0x5
	blt     branch_20d65ac
	cmp     r6, #0x80
	blt     branch_20d65b4
branch_20d65ac: @ 20d65ac :arm
	mov     r1, #0x0
	b       branch_20d65c4

branch_20d65b4: @ 20d65b4 :arm
	ldr     r1, [pc, #0x4d8] @ [0x20d6a94] (=Unknown_20fe864)
	mov     r2, r6, lsl #1
	ldrh    r1, [r1, r2]
	and     r1, r1, #2, 24 @ #0x200
branch_20d65c4: @ 20d65c4 :arm
	cmp     r1, #0x0
	beq     branch_20d6608
	ldr     r3, [pc, #0x4d4] @ [0x20d6aa8] (=Unknown_21017f8)
	add     sp, sp, #0x2c
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldrb    r1, [r3, #0x4]
	strb    r1, [r0, #0x4]
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20d6608: @ 20d6608 :arm
	ldr     r3, [pc, #0x49c] @ [0x20d6aac] (=Unknown_2101800)
	add     sp, sp, #0x2c
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldrb    r1, [r3, #0x4]
	strb    r1, [r0, #0x4]
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d6644

.arm
branch_20d6644: @ 20d6644 :arm
	cmp     r6, #0x0
	sub     r0, r9, #0x4
	blt     branch_20d6658
	cmp     r6, #0x80
	blt     branch_20d6660
.arm
branch_20d6658: @ 20d6658 :arm
	mov     r1, #0x0
	b       branch_20d6670

branch_20d6660: @ 20d6660 :arm
	ldr     r1, [pc, #0x42c] @ [0x20d6a94] (=Unknown_20fe864)
	mov     r2, r6, lsl #1
	ldrh    r1, [r1, r2]
	and     r1, r1, #2, 24 @ #0x200
branch_20d6670: @ 20d6670 :arm
	cmp     r1, #0x0
	beq     branch_20d66ac
	ldr     r3, [pc, #0x430] @ [0x20d6ab0] (=Unknown_2101808)
	add     sp, sp, #0x2c
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20d66ac: @ 20d66ac :arm
	ldr     r3, [pc, #0x400] @ [0x20d6ab4] (=Unknown_210180c)
	add     sp, sp, #0x2c
	ldrb    r2, [r3]
	ldrb    r1, [r3, #0x1]
	strb    r2, [r0]
	strb    r1, [r0, #0x1]
	ldrb    r2, [r3, #0x2]
	ldrb    r1, [r3, #0x3]
	strb    r2, [r0, #0x2]
	strb    r1, [r0, #0x3]
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20d66e0: @ 20d66e0 :arm
	ldrb    r0, [sp, #0x8]
	ldrsh   r1, [sp, #0x6]
	sub     r8, r9, #0x1
	sub     r0, r0, #0x1
	add     r0, r1, r0
	strh    r0, [sp, #0x6]
	mov     r0, #0x0
	strb    r0, [r8]
	cmp     r6, #0x65
	bgt     branch_20d6734
	bge     branch_20d67c0
	cmp     r6, #0x47
	bgt     branch_20d6a7c
	cmp     r6, #0x45
	blt     branch_20d6a7c
	beq     branch_20d67c0
	cmp     r6, #0x46
	beq     branch_20d6908
	cmp     r6, #0x47
	beq     branch_20d674c
	b       branch_20d6a7c
@ 0x20d6734

.arm
branch_20d6734: @ 20d6734 :arm
	cmp     r6, #0x66
	bgt     branch_20d6744
	beq     branch_20d6908
	b       branch_20d6a7c
@ 0x20d6744

.arm
branch_20d6744: @ 20d6744 :arm
	cmp     r6, #0x67
	bne     branch_20d6a7c
.arm
branch_20d674c: @ 20d674c :arm
	ldrb    r0, [sp, #0x8]
	cmp     r0, r7
	ble     branch_20d6764
	add     r0, sp, #0x4
	mov     r1, r7
	bl      Function_20d6234
.arm
branch_20d6764: @ 20d6764 :arm
	ldrsh   r2, [sp, #0x6]
	mvn     r0, #0x3
	cmp     r2, r0
	blt     branch_20d677c
	cmp     r2, r7
	blt     branch_20d679c
.arm
branch_20d677c: @ 20d677c :arm
	cmp     r5, #0x0
	ldreqb  r0, [sp, #0x8]
	subne   r7, r7, #0x1
	subeq   r7, r0, #0x1
	cmp     r6, #0x67
	moveq   r6, #0x65
	movne   r6, #0x45
	b       branch_20d67c0
@ 0x20d679c

.arm
branch_20d679c: @ 20d679c :arm
	cmp     r5, #0x0
	addne   r0, r2, #0x1
	subne   r7, r7, r0
	bne     branch_20d6908
	ldrb    r1, [sp, #0x8]
	add     r0, r2, #0x1
	subs    r7, r1, r0
	movmi   r7, #0x0
	b       branch_20d6908
@ 0x20d67c0

.arm
branch_20d67c0: @ 20d67c0 :arm
	ldrb    r0, [sp, #0x8]
	add     r1, r7, #0x1
	cmp     r0, r1
	ble     branch_20d67d8
	add     r0, sp, #0x4
	bl      Function_20d6234
.arm
branch_20d67d8: @ 20d67d8 :arm
	ldrsh   lr, [sp, #0x6]
	mov     r11, #0x2b
	mov     r10, #0x0
	cmp     lr, #0x0
	rsblt   lr, lr, #0x0
	movlt   r11, #0x2d
	ldr     r3, [pc, #0x2c0] @ [0x20d6ab8] (=0x66666667)
	mov     r0, #0xa
	b       branch_20d682c
@ 0x20d67fc

.arm
branch_20d67fc: @ 20d67fc :arm
	mov     r1, lr, lsr #31
	smull   r2, r12, r3, lr
	add     r12, r1, r12, asr #2
	smull   r1, r2, r0, r12
	sub     r12, lr, r1
	add     r1, r12, #0x30
	strb    r1, [r8, #-0x1]!
	mov     r2, lr
	smull   r1, lr, r3, r2
	mov     r1, r2, lsr #31
	add     lr, r1, lr, asr #2
	add     r10, r10, #0x1
.arm
branch_20d682c: @ 20d682c :arm
	cmp     lr, #0x0
	bne     branch_20d67fc
	cmp     r10, #0x2
	blt     branch_20d67fc
	strb    r11, [r8, #-0x1]
	strb    r6, [r8, #-0x2]!
	sub     r1, r9, r8
	ldr     r0, [pc, #0x240] @ [0x20d6a90] (=0x1fd)
	add     r1, r7, r1
	cmp     r1, r0
	addgt   sp, sp, #0x2c
	movgt   r0, #0x0
	ldmgtfd sp!, {r4-r11,lr}
	addgt   sp, sp, #0x10
	bxgt    lr
	ldrb    r1, [sp, #0x8]
	add     r0, r7, #0x1
	cmp     r1, r0
	bge     branch_20d6898
	add     r0, r7, #0x2
	sub     r0, r0, r1
	subs    r1, r0, #0x1
	beq     branch_20d6898
	mov     r0, #0x30
.arm
branch_20d688c: @ 20d688c :arm
	strb    r0, [r8, #-0x1]!
	subs    r1, r1, #0x1
	bne     branch_20d688c
.arm
branch_20d6898: @ 20d6898 :arm
	ldrb    r1, [sp, #0x8]
	add     r0, sp, #0x9
	add     r2, r0, r1
	subs    r1, r1, #0x1
	beq     branch_20d68bc
.arm
branch_20d68ac: @ 20d68ac :arm
	ldrsb   r0, [r2, #-0x1]!
	subs    r1, r1, #0x1
	strb    r0, [r8, #-0x1]!
	bne     branch_20d68ac
.arm
branch_20d68bc: @ 20d68bc :arm
	cmp     r7, #0x0
	cmpeq   r5, #0x0
	movne   r0, #0x2e
	strneb  r0, [r8, #-0x1]!
	ldrb    r0, [sp, #0x9]
	strb    r0, [r8, #-0x1]!
	ldrsb   r0, [sp, #0x4]
	cmp     r0, #0x0
	movne   r0, #0x2d
	strneb  r0, [r8, #-0x1]!
	bne     branch_20d6a7c
	cmp     r4, #0x1
	moveq   r0, #0x2b
	streqb  r0, [r8, #-0x1]!
	beq     branch_20d6a7c
	cmp     r4, #0x2
	moveq   r0, #0x20
	streqb  r0, [r8, #-0x1]!
	b       branch_20d6a7c
@ 0x20d6908

.arm
branch_20d6908: @ 20d6908 :arm
	ldrsh   r3, [sp, #0x6]
	ldrb    r2, [sp, #0x8]
	sub     r0, r2, r3
	subs    r1, r0, #0x1
	movmi   r1, #0x0
	cmp     r1, r7
	ble     branch_20d6948
	sub     r1, r1, r7
	add     r0, sp, #0x4
	sub     r1, r2, r1
	bl      Function_20d6234
	ldrsh   r3, [sp, #0x6]
	ldrb    r2, [sp, #0x8]
	sub     r0, r2, r3
	subs    r1, r0, #0x1
	movmi   r1, #0x0
.arm
branch_20d6948: @ 20d6948 :arm
	adds    r0, r3, #0x1
	movmi   r0, #0x0
	ldr     r3, [pc, #0x138] @ [0x20d6a90] (=0x1fd)
	add     r6, r0, r1
	cmp     r6, r3
	addgt   sp, sp, #0x2c
	movgt   r0, #0x0
	ldmgtfd sp!, {r4-r11,lr}
	addgt   sp, sp, #0x10
	bxgt    lr
	add     r3, sp, #0x9
	sub     r6, r7, r1
	cmp     r6, #0x0
	add     r2, r3, r2
	mov     r9, #0x0
	ble     branch_20d699c
	mov     r3, #0x30
.arm
branch_20d698c: @ 20d698c :arm
	add     r9, r9, #0x1
	cmp     r9, r6
	strb    r3, [r8, #-0x1]!
	blt     branch_20d698c
.arm
branch_20d699c: @ 20d699c :arm
	mov     r6, #0x0
	b       branch_20d69b0
@ 0x20d69a4

.arm
branch_20d69a4: @ 20d69a4 :arm
	ldrsb   r3, [r2, #-0x1]!
	add     r6, r6, #0x1
	strb    r3, [r8, #-0x1]!
.arm
branch_20d69b0: @ 20d69b0 :arm
	cmp     r6, r1
	ldrltb  r3, [sp, #0x8]
	cmplt   r6, r3
	blt     branch_20d69a4
	cmp     r6, r1
	bge     branch_20d69dc
	mov     r3, #0x30
.arm
branch_20d69cc: @ 20d69cc :arm
	add     r6, r6, #0x1
	cmp     r6, r1
	strb    r3, [r8, #-0x1]!
	blt     branch_20d69cc
.arm
branch_20d69dc: @ 20d69dc :arm
	cmp     r7, #0x0
	cmpeq   r5, #0x0
	movne   r1, #0x2e
	strneb  r1, [r8, #-0x1]!
	cmp     r0, #0x0
	beq     branch_20d6a44
	ldrb    r1, [sp, #0x8]
	mov     r5, #0x0
	sub     r1, r0, r1
	cmp     r1, #0x0
	ble     branch_20d6a24
	mov     r3, #0x30
.arm
branch_20d6a0c: @ 20d6a0c :arm
	strb    r3, [r8, #-0x1]!
	ldrb    r1, [sp, #0x8]
	add     r5, r5, #0x1
	sub     r1, r0, r1
	cmp     r5, r1
	blt     branch_20d6a0c
.arm
branch_20d6a24: @ 20d6a24 :arm
	cmp     r5, r0
	bge     branch_20d6a4c
.arm
branch_20d6a2c: @ 20d6a2c :arm
	ldrsb   r1, [r2, #-0x1]!
	add     r5, r5, #0x1
	cmp     r5, r0
	strb    r1, [r8, #-0x1]!
	blt     branch_20d6a2c
	b       branch_20d6a4c
@ 0x20d6a44

.arm
branch_20d6a44: @ 20d6a44 :arm
	mov     r0, #0x30
	strb    r0, [r8, #-0x1]!
.arm
branch_20d6a4c: @ 20d6a4c :arm
	ldrsb   r0, [sp, #0x4]
	cmp     r0, #0x0
	movne   r0, #0x2d
	strneb  r0, [r8, #-0x1]!
	bne     branch_20d6a7c
	cmp     r4, #0x1
	moveq   r0, #0x2b
	streqb  r0, [r8, #-0x1]!
	beq     branch_20d6a7c
	cmp     r4, #0x2
	moveq   r0, #0x20
	streqb  r0, [r8, #-0x1]!
branch_20d6a7c: @ 20d6a7c :arm
	mov     r0, r8
	add     sp, sp, #0x2c
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d6a90

.word 0x1fd @ 0x20d6a90
.word Unknown_20fe864 @ 0x20d6a94
.word Unknown_21017e0 @ 0x20d6a98
.word Unknown_21017e8 @ 0x20d6a9c
.word Unknown_21017f0 @ 0x20d6aa0
.word Unknown_21017f4 @ 0x20d6aa4
.word Unknown_21017f8 @ 0x20d6aa8
.word Unknown_2101800 @ 0x20d6aac
.word Unknown_2101808 @ 0x20d6ab0
.word Unknown_210180c @ 0x20d6ab4
.word 0x66666667 @ 0x20d6ab8



.arm
Function_20d6abc: @ 20d6abc :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #139, 30 @ #0x22c
	mov     r3, #0x20
	mov     r11, r2
	strb    r3, [sp, #0x19]
	ldrsb   r2, [r11]
	mov     r9, r0
	mov     r8, r1
	cmp     r2, #0x0
	mov     r10, #0x0
	beq     branch_20d72c4
.arm
branch_20d6aec: @ 20d6aec :arm
	mov     r0, r11
	mov     r1, #0x25
	bl      Function_20d8e5c
	str     r0, [sp, #0xc]
	cmp     r0, #0x0
	bne     branch_20d6b40
	mov     r0, r11
	bl      Function_20d8b60
	movs    r2, r0
	add     r10, r10, r2
	beq     branch_20d72c4
	mov     r0, r8
	mov     r1, r11
	blx     r9
	cmp     r0, #0x0
	bne     branch_20d72c4
	add     sp, sp, #139, 30 @ #0x22c
	mvn     r0, #0x0
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d6b40

.arm
branch_20d6b40: @ 20d6b40 :arm
	subs    r2, r0, r11
	add     r10, r10, r2
	beq     branch_20d6b70
	mov     r0, r8
	mov     r1, r11
	blx     r9
	cmp     r0, #0x0
	addeq   sp, sp, #139, 30 @ #0x22c
	mvneq   r0, #0x0
	ldmeqfd sp!, {r4-r11,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
.arm
branch_20d6b70: @ 20d6b70 :arm
	ldr     r0, [sp, #0xc]
	add     r1, sp, #151, 30 @ #0x25c
	add     r2, sp, #0x1c
	bl      Function_20d5280
	ldrb    r1, [sp, #0x21]
	mov     r11, r0
	cmp     r1, #0x61
	bgt     branch_20d6bdc
	bge     branch_20d6f40
	cmp     r1, #0x47
	bgt     branch_20d6bd0
	subs    r0, r1, #0x41
	addpl   pc, pc, r0, lsl #2
	b       branch_20d6bc4
	b       branch_20d6f40
	b       branch_20d7128
	b       branch_20d7128
	b       branch_20d7128
	b       branch_20d6ed8
	b       branch_20d6ed8
	b       branch_20d6ed8

branch_20d6bc4: @ 20d6bc4 :arm
	cmp     r1, #0x25
	beq     branch_20d7114
	b       branch_20d7128

branch_20d6bd0: @ 20d6bd0 :arm
	cmp     r1, #0x58
	beq     branch_20d6d9c
	b       branch_20d7128

branch_20d6bdc: @ 20d6bdc :arm
	cmp     r1, #0x75
	bgt     branch_20d6c44
	subs    r0, r1, #0x64
	addpl   pc, pc, r0, lsl #2
	b       branch_20d6c38
	b       branch_20d6c5c
	b       branch_20d6ed8
	b       branch_20d6ed8
	b       branch_20d6ed8
	b       branch_20d7128
	b       branch_20d6c5c
	b       branch_20d7128
	b       branch_20d7128
	b       branch_20d7128
	b       branch_20d7128
	b       branch_20d7068
	b       branch_20d6d9c
	b       branch_20d7128
	b       branch_20d7128
	b       branch_20d7128
	b       branch_20d6fa8
	b       branch_20d7128
	b       branch_20d6d9c

branch_20d6c38: @ 20d6c38 :arm
	cmp     r1, #0x63
	beq     branch_20d70f4
	b       branch_20d7128
@ 0x20d6c44

.arm
branch_20d6c44: @ 20d6c44 :arm
	cmp     r1, #0x78
	bgt     branch_20d6c54
	beq     branch_20d6d9c
	b       branch_20d7128
@ 0x20d6c54

.arm
branch_20d6c54: @ 20d6c54 :arm
	cmp     r1, #0xff
	b       branch_20d7128
@ 0x20d6c5c

.arm
branch_20d6c5c: @ 20d6c5c :arm
	ldrb    r0, [sp, #0x20]
	cmp     r0, #0x3
	bne     branch_20d6c7c
	ldr     r1, [sp, #0x25c]
	add     r1, r1, #0x4
	str     r1, [sp, #0x25c]
	ldr     r5, [r1, #-0x4]
	b       branch_20d6d14
@ 0x20d6c7c

.arm
branch_20d6c7c: @ 20d6c7c :arm
	cmp     r0, #0x4
	bne     branch_20d6ca4
	ldr     r1, [sp, #0x25c]
	add     r2, r1, #0x8
	str     r2, [sp, #0x25c]
	ldr     r1, [r2, #-0x8]
	str     r1, [sp, #0x10]
	ldr     r1, [r2, #-0x4]
	str     r1, [sp, #0x14]
	b       branch_20d6d14
@ 0x20d6ca4

.arm
branch_20d6ca4: @ 20d6ca4 :arm
	cmp     r0, #0x6
	bne     branch_20d6ccc
	ldr     r1, [sp, #0x25c]
	add     r2, r1, #0x8
	str     r2, [sp, #0x25c]
	ldr     r1, [r2, #-0x8]
	str     r1, [sp, #0x10]
	ldr     r1, [r2, #-0x4]
	str     r1, [sp, #0x14]
	b       branch_20d6d14
@ 0x20d6ccc

.arm
branch_20d6ccc: @ 20d6ccc :arm
	cmp     r0, #0x7
	bne     branch_20d6ce8
	ldr     r1, [sp, #0x25c]
	add     r1, r1, #0x4
	str     r1, [sp, #0x25c]
	ldr     r5, [r1, #-0x4]
	b       branch_20d6d14
@ 0x20d6ce8

.arm
branch_20d6ce8: @ 20d6ce8 :arm
	cmp     r0, #0x8
	bne     branch_20d6d04
	ldr     r1, [sp, #0x25c]
	add     r1, r1, #0x4
	str     r1, [sp, #0x25c]
	ldr     r5, [r1, #-0x4]
	b       branch_20d6d14
@ 0x20d6d04

.arm
branch_20d6d04: @ 20d6d04 :arm
	ldr     r1, [sp, #0x25c]
	add     r1, r1, #0x4
	str     r1, [sp, #0x25c]
	ldr     r5, [r1, #-0x4]
.arm
branch_20d6d14: @ 20d6d14 :arm
	cmp     r0, #0x2
	moveq   r1, r5, lsl #16
	moveq   r5, r1, asr #16
	cmp     r0, #0x1
	moveq   r1, r5, lsl #24
	moveq   r5, r1, asr #24
	cmp     r0, #0x4
	cmpne   r0, #0x6
	add     r0, sp, #0x1c
	bne     branch_20d6d68
	sub     r4, sp, #0x4
	ldmia   r0, {r0-r3}
	stmia   r4, {r0-r3}
	ldr     r3, [r4]
	ldr     r0, [sp, #0x10]
	ldr     r1, [sp, #0x14]
	add     r2, sp, #139, 30 @ #0x22c
	bl      Function_20d5a5c
	movs    r7, r0
	beq     branch_20d7128
	b       branch_20d6d8c
@ 0x20d6d68

.arm
branch_20d6d68: @ 20d6d68 :arm
	sub     r4, sp, #0x8
	ldmia   r0, {r0-r3}
	stmia   r4, {r0-r3}
	add     r1, sp, #139, 30 @ #0x22c
	mov     r0, r5
	ldmia   r4, {r2,r3}
	bl      Function_20d5810
	movs    r7, r0
	beq     branch_20d7128
.arm
branch_20d6d8c: @ 20d6d8c :arm
	add     r0, sp, #2, 24 @ #0x200
	add     r0, r0, #0x2b
	sub     r6, r0, r7
	b       branch_20d7174
@ 0x20d6d9c

.arm
branch_20d6d9c: @ 20d6d9c :arm
	ldrb    r0, [sp, #0x20]
	cmp     r0, #0x3
	bne     branch_20d6dbc
	ldr     r1, [sp, #0x25c]
	add     r1, r1, #0x4
	str     r1, [sp, #0x25c]
	ldr     r5, [r1, #-0x4]
	b       branch_20d6e54
@ 0x20d6dbc

.arm
branch_20d6dbc: @ 20d6dbc :arm
	cmp     r0, #0x4
	bne     branch_20d6de4
	ldr     r1, [sp, #0x25c]
	add     r2, r1, #0x8
	str     r2, [sp, #0x25c]
	ldr     r1, [r2, #-0x8]
	str     r1, [sp, #0x10]
	ldr     r1, [r2, #-0x4]
	str     r1, [sp, #0x14]
	b       branch_20d6e54
@ 0x20d6de4

.arm
branch_20d6de4: @ 20d6de4 :arm
	cmp     r0, #0x6
	bne     branch_20d6e0c
	ldr     r1, [sp, #0x25c]
	add     r2, r1, #0x8
	str     r2, [sp, #0x25c]
	ldr     r1, [r2, #-0x8]
	str     r1, [sp, #0x10]
	ldr     r1, [r2, #-0x4]
	str     r1, [sp, #0x14]
	b       branch_20d6e54
@ 0x20d6e0c

.arm
branch_20d6e0c: @ 20d6e0c :arm
	cmp     r0, #0x7
	bne     branch_20d6e28
	ldr     r1, [sp, #0x25c]
	add     r1, r1, #0x4
	str     r1, [sp, #0x25c]
	ldr     r5, [r1, #-0x4]
	b       branch_20d6e54
@ 0x20d6e28

.arm
branch_20d6e28: @ 20d6e28 :arm
	cmp     r0, #0x8
	bne     branch_20d6e44
	ldr     r1, [sp, #0x25c]
	add     r1, r1, #0x4
	str     r1, [sp, #0x25c]
	ldr     r5, [r1, #-0x4]
	b       branch_20d6e54
@ 0x20d6e44

.arm
branch_20d6e44: @ 20d6e44 :arm
	ldr     r1, [sp, #0x25c]
	add     r1, r1, #0x4
	str     r1, [sp, #0x25c]
	ldr     r5, [r1, #-0x4]
.arm
branch_20d6e54: @ 20d6e54 :arm
	cmp     r0, #0x2
	moveq   r1, r5, lsl #16
	moveq   r5, r1, lsr #16
	cmp     r0, #0x1
	andeq   r5, r5, #0xff
	cmp     r0, #0x4
	cmpne   r0, #0x6
	add     r0, sp, #0x1c
	bne     branch_20d6ea4
	sub     r4, sp, #0x4
	ldmia   r0, {r0-r3}
	stmia   r4, {r0-r3}
	ldr     r3, [r4]
	ldr     r0, [sp, #0x10]
	ldr     r1, [sp, #0x14]
	add     r2, sp, #139, 30 @ #0x22c
	bl      Function_20d5a5c
	movs    r7, r0
	beq     branch_20d7128
	b       branch_20d6ec8
@ 0x20d6ea4

.arm
branch_20d6ea4: @ 20d6ea4 :arm
	sub     r4, sp, #0x8
	ldmia   r0, {r0-r3}
	stmia   r4, {r0-r3}
	add     r1, sp, #139, 30 @ #0x22c
	mov     r0, r5
	ldmia   r4, {r2,r3}
	bl      Function_20d5810
	movs    r7, r0
	beq     branch_20d7128
.arm
branch_20d6ec8: @ 20d6ec8 :arm
	add     r0, sp, #2, 24 @ #0x200
	add     r0, r0, #0x2b
	sub     r6, r0, r7
	b       branch_20d7174
@ 0x20d6ed8

.arm
branch_20d6ed8: @ 20d6ed8 :arm
	ldrb    r0, [sp, #0x20]
	cmp     r0, #0x9
	ldrne   r0, [sp, #0x25c]
	addne   r0, r0, #0x8
	strne   r0, [sp, #0x25c]
	bne     branch_20d6efc
	ldr     r0, [sp, #0x25c]
	add     r0, r0, #0x8
	str     r0, [sp, #0x25c]
.arm
branch_20d6efc: @ 20d6efc :arm
	ldr     r7, [r0, #-0x8]
	ldr     r6, [r0, #-0x4]
	add     r0, sp, #0x1c
	sub     r4, sp, #0x4
	ldmia   r0, {r0-r3}
	stmia   r4, {r0-r3}
	ldr     r3, [r4]
	mov     r0, r7
	mov     r1, r6
	add     r2, sp, #139, 30 @ #0x22c
	bl      Function_20d6358
	movs    r7, r0
	beq     branch_20d7128
	add     r0, sp, #2, 24 @ #0x200
	add     r0, r0, #0x2b
	sub     r6, r0, r7
	b       branch_20d7174
@ 0x20d6f40

.arm
branch_20d6f40: @ 20d6f40 :arm
	ldrb    r0, [sp, #0x20]
	cmp     r0, #0x9
	ldrne   r0, [sp, #0x25c]
	addne   r0, r0, #0x8
	strne   r0, [sp, #0x25c]
	bne     branch_20d6f64
	ldr     r0, [sp, #0x25c]
	add     r0, r0, #0x8
	str     r0, [sp, #0x25c]
.arm
branch_20d6f64: @ 20d6f64 :arm
	ldr     r7, [r0, #-0x8]
	ldr     r6, [r0, #-0x4]
	add     r0, sp, #0x1c
	sub     r4, sp, #0x4
	ldmia   r0, {r0-r3}
	stmia   r4, {r0-r3}
	ldr     r3, [r4]
	mov     r0, r7
	mov     r1, r6
	add     r2, sp, #139, 30 @ #0x22c
	bl      Function_20d5d58
	movs    r7, r0
	beq     branch_20d7128
	add     r0, sp, #2, 24 @ #0x200
	add     r0, r0, #0x2b
	sub     r6, r0, r7
	b       branch_20d7174
@ 0x20d6fa8

.arm
branch_20d6fa8: @ 20d6fa8 :arm
	ldrb    r0, [sp, #0x20]
	cmp     r0, #0x5
	bne     branch_20d6fe8
	ldr     r0, [sp, #0x25c]
	mov     r2, #2, 24 @ #0x200
	add     r0, r0, #0x4
	str     r0, [sp, #0x25c]
	ldr     r1, [r0, #-0x4]
	add     r0, sp, #0x2c
	cmp     r1, #0x0
	ldreq   r1, [pc, #0x300] @ [0x20d72d8] (=Unknown_2101810)
	bl      Function_20d5040
	cmp     r0, #0x0
	blt     branch_20d7128
	add     r7, sp, #0x2c
	b       branch_20d6ff8

branch_20d6fe8: @ 20d6fe8 :arm
	ldr     r0, [sp, #0x25c]
	add     r0, r0, #0x4
	str     r0, [sp, #0x25c]
	ldr     r7, [r0, #-0x4]
branch_20d6ff8: @ 20d6ff8 :arm
	ldrb    r0, [sp, #0x1f]
	cmp     r7, #0x0
	ldreq   r7, [pc, #0x2d4] @ [0x20d72dc] (=Unknown_2101814)
	cmp     r0, #0x0
	beq     branch_20d702c
	ldrb    r0, [sp, #0x1e]
	ldrb    r6, [r7], #0x1
	cmp     r0, #0x0
	beq     branch_20d7174
	ldr     r0, [sp, #0x28]
	cmp     r6, r0
	movgt   r6, r0
	b       branch_20d7174

branch_20d702c: @ 20d702c :arm
	ldrb    r0, [sp, #0x1e]
	cmp     r0, #0x0
	beq     branch_20d7058
	ldr     r6, [sp, #0x28]
	mov     r0, r7
	mov     r2, r6
	mov     r1, #0x0
	bl      Function_20d5138
	cmp     r0, #0x0
	subne   r6, r0, r7
	b       branch_20d7174
@ 0x20d7058

.arm
branch_20d7058: @ 20d7058 :arm
	mov     r0, r7
	bl      Function_20d8b60
	mov     r6, r0
	b       branch_20d7174

branch_20d7068: @ 20d7068 :arm
	ldr     r1, [sp, #0x25c]
	ldrb    r0, [sp, #0x20]
	add     r1, r1, #0x4
	str     r1, [sp, #0x25c]
	ldr     r1, [r1, #-0x4]
	cmp     r0, #0x8
	addls   pc, pc, r0, lsl #2
	b       branch_20d72b8
	b       branch_20d70ac
	b       branch_20d72b8
	b       branch_20d70b4
	b       branch_20d70bc
	b       branch_20d70e4
	b       branch_20d72b8
	b       branch_20d70c4
	b       branch_20d70d4
	b       branch_20d70dc

branch_20d70ac: @ 20d70ac :arm
	str     r10, [r1]
	b       branch_20d72b8

branch_20d70b4: @ 20d70b4 :arm
	strh    r10, [r1]
	b       branch_20d72b8
@ 0x20d70bc

.arm
branch_20d70bc: @ 20d70bc :arm
	str     r10, [r1]
	b       branch_20d72b8
@ 0x20d70c4

.arm
branch_20d70c4: @ 20d70c4 :arm
	str     r10, [r1]
	mov     r0, r10, asr #31
	str     r0, [r1, #0x4]
	b       branch_20d72b8
@ 0x20d70d4

.arm
branch_20d70d4: @ 20d70d4 :arm
	str     r10, [r1]
	b       branch_20d72b8
@ 0x20d70dc

.arm
branch_20d70dc: @ 20d70dc :arm
	str     r10, [r1]
	b       branch_20d72b8
@ 0x20d70e4

.arm
branch_20d70e4: @ 20d70e4 :arm
	str     r10, [r1]
	mov     r0, r10, asr #31
	str     r0, [r1, #0x4]
	b       branch_20d72b8
@ 0x20d70f4

.arm
branch_20d70f4: @ 20d70f4 :arm
	ldr     r0, [sp, #0x25c]
	add     r7, sp, #0x2c
	add     r0, r0, #0x4
	str     r0, [sp, #0x25c]
	ldr     r0, [r0, #-0x4]
	mov     r6, #0x1
	strb    r0, [sp, #0x2c]
	b       branch_20d7174
@ 0x20d7114

.arm
branch_20d7114: @ 20d7114 :arm
	mov     r0, #0x25
	strb    r0, [sp, #0x2c]
	add     r7, sp, #0x2c
	mov     r6, #0x1
	b       branch_20d7174
@ 0x20d7128

.arm
branch_20d7128: @ 20d7128 :arm
	ldr     r0, [sp, #0xc]
	bl      Function_20d8b60
	movs    r4, r0
	beq     branch_20d7160
	ldr     r1, [sp, #0xc]
	mov     r0, r8
	mov     r2, r4
	blx     r9
	cmp     r0, #0x0
	addeq   sp, sp, #139, 30 @ #0x22c
	mvneq   r0, #0x0
	ldmeqfd sp!, {r4-r11,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
.arm
branch_20d7160: @ 20d7160 :arm
	add     sp, sp, #139, 30 @ #0x22c
	add     r0, r10, r4
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d7174

.arm
branch_20d7174: @ 20d7174 :arm
	ldrb    r0, [sp, #0x1c]
	mov     r4, r6
	cmp     r0, #0x0
	beq     branch_20d7228
	cmp     r0, #0x2
	moveq   r0, #0x30
	movne   r0, #0x20
	strb    r0, [sp, #0x19]
	ldrsb   r0, [r7]
	cmp     r0, #0x2b
	cmpne   r0, #0x2d
	cmpne   r0, #0x20
	bne     branch_20d71e4
	ldrsb   r0, [sp, #0x19]
	cmp     r0, #0x30
	bne     branch_20d71e4
	mov     r0, r8
	mov     r1, r7
	mov     r2, #0x1
	blx     r9
	cmp     r0, #0x0
	addeq   sp, sp, #139, 30 @ #0x22c
	mvneq   r0, #0x0
	ldmeqfd sp!, {r4-r11,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
	add     r7, r7, #0x1
	sub     r6, r6, #0x1
.arm
branch_20d71e4: @ 20d71e4 :arm
	ldr     r0, [sp, #0x24]
	cmp     r4, r0
	bge     branch_20d7228
.arm
branch_20d71f0: @ 20d71f0 :arm
	mov     r0, r8
	add     r1, sp, #0x19
	mov     r2, #0x1
	blx     r9
	cmp     r0, #0x0
	addeq   sp, sp, #139, 30 @ #0x22c
	mvneq   r0, #0x0
	ldmeqfd sp!, {r4-r11,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
	ldr     r0, [sp, #0x24]
	add     r4, r4, #0x1
	cmp     r4, r0
	blt     branch_20d71f0
.arm
branch_20d7228: @ 20d7228 :arm
	cmp     r6, #0x0
	beq     branch_20d7258
	mov     r0, r8
	mov     r1, r7
	mov     r2, r6
	blx     r9
	cmp     r0, #0x0
	addeq   sp, sp, #139, 30 @ #0x22c
	mvneq   r0, #0x0
	ldmeqfd sp!, {r4-r11,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
.arm
branch_20d7258: @ 20d7258 :arm
	ldrb    r0, [sp, #0x1c]
	cmp     r0, #0x0
	bne     branch_20d72b4
	ldr     r0, [sp, #0x24]
	cmp     r4, r0
	bge     branch_20d72b4
	mov     r6, #0x20
	add     r7, sp, #0x18
.arm
branch_20d7278: @ 20d7278 :arm
	mov     r0, r8
	mov     r1, r7
	mov     r2, #0x1
	strb    r6, [sp, #0x18]
	blx     r9
	cmp     r0, #0x0
	addeq   sp, sp, #139, 30 @ #0x22c
	mvneq   r0, #0x0
	ldmeqfd sp!, {r4-r11,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
	ldr     r0, [sp, #0x24]
	add     r4, r4, #0x1
	cmp     r4, r0
	blt     branch_20d7278
.arm
branch_20d72b4: @ 20d72b4 :arm
	add     r10, r10, r4
.arm
branch_20d72b8: @ 20d72b8 :arm
	ldrsb   r0, [r11]
	cmp     r0, #0x0
	bne     branch_20d6aec
branch_20d72c4: @ 20d72c4 :arm
	mov     r0, r10
	add     sp, sp, #139, 30 @ #0x22c
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d72d8

.word Unknown_2101810 @ 0x20d72d8
.word Unknown_2101814 @ 0x20d72dc



.arm
Function_20d72e0: @ 20d72e0 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	mov     r0, r1
	mov     r3, r5
	mov     r1, #0x1
	mov     r4, r2
	bl      Function_20d4658
	cmp     r4, r0
	movne   r5, #0x0
	mov     r0, r5
	ldmfd   sp!, {r3-r5,pc}
@ 0x20d730c


.arm
Function_20d730c: @ 20d730c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	ldr     r3, [r4, #0x8]
	mov     r5, r2
	ldr     r2, [r4, #0x4]
	add     r0, r3, r5
	cmp     r0, r2
	ldr     r0, [r4]
	subhi   r5, r2, r3
	mov     r2, r5
	add     r0, r0, r3
	bl      CopyDataInByteSteps
	ldr     r1, [r4, #0x8]
	mov     r0, #0x1
	add     r1, r1, r5
	str     r1, [r4, #0x8]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20d7350


.arm
.globl Function_20d7350
Function_20d7350: @ 20d7350 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r4,lr}
	ldr     r0, [pc, #0xf0] @ [0x20d7450] (=0x21014dc)
	mvn     r1, #0x0
	bl      Function_20dae20
	cmp     r0, #0x0
	mvnge   r0, #0x0
	ldmgefd sp!, {r4,lr}
	addge   sp, sp, #0x10
	bxge    lr

	ldr     r0, [pc, #0xd4] @ [0x20d7454] (=RAM_21d09b0)
	bl      OS_TryLockMutex
	cmp     r0, #0x0
	bne     branch_20d73ac
	ldr     r0, [pc, #0xc8] @ [0x20d7458] (=RAM_21ccc80)
	ldr     r1, [pc, #0xc8] @ [0x20d745c] (=RAM_21d0920)
	ldr     r2, [r0, #0x4]
	ldr     r0, [pc, #0xc4] @ [0x20d7460] (=RAM_21d0944)
	ldr     r3, [r2, #0x6c]
	mov     r2, #0x1
	str     r3, [r1, #0xc]
	str     r2, [r0, #0xc]
	b       branch_20d7404

branch_20d73ac: @ 20d73ac :arm
	ldr     r0, [pc, #0xa4] @ [0x20d7458] (=RAM_21ccc80)
	ldr     r1, [pc, #0xa4] @ [0x20d745c] (=RAM_21d0920)
	ldr     r0, [r0, #0x4]
	ldr     r1, [r1, #0xc]
	ldr     r0, [r0, #0x6c]
	cmp     r1, r0
	bne     branch_20d73dc
	ldr     r0, [pc, #0x90] @ [0x20d7460] (=RAM_21d0944)
	ldr     r1, [r0, #0xc]
	add     r1, r1, #0x1
	str     r1, [r0, #0xc]
	b       branch_20d7404
@ 0x20d73dc

.arm
branch_20d73dc: @ 20d73dc :arm
	ldr     r0, [pc, #0x70] @ [0x20d7454] (=RAM_21d09b0)
	bl      OS_LockMutex
	ldr     r0, [pc, #0x6c] @ [0x20d7458] (=RAM_21ccc80)
	ldr     r1, [pc, #0x6c] @ [0x20d745c] (=RAM_21d0920)
	ldr     r2, [r0, #0x4]
	ldr     r0, [pc, #0x68] @ [0x20d7460] (=RAM_21d0944)
	ldr     r3, [r2, #0x6c]
	mov     r2, #0x1
	str     r3, [r1, #0xc]
	str     r2, [r0, #0xc]
.arm
branch_20d7404: @ 20d7404 :arm
	add     r0, sp, #0x8
	bic     r3, r0, #0x3
	ldr     r2, [sp, #0x8]
	ldr     r0, [pc, #0x4c] @ [0x20d7464] (=Function_20d72e0)
	ldr     r1, [pc, #0x34] @ [0x20d7450] (=0x21014dc)
	add     r3, r3, #0x4
	bl      Function_20d6abc
	ldr     r1, [pc, #0x38] @ [0x20d7460] (=RAM_21d0944)
	mov     r4, r0
	ldr     r0, [r1, #0xc]
	subs    r0, r0, #0x1
	str     r0, [r1, #0xc]
	bne     branch_20d7440
	ldr     r0, [pc, #0x14] @ [0x20d7454] (=RAM_21d09b0)
	bl      OS_UnlockMutex
branch_20d7440: @ 20d7440 :arm
	mov     r0, r4
	ldmfd   sp!, {r4,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d7450

.word Unknown_21014dc @ 0x20d7450
.word RAM_21d09b0 @ 0x20d7454
.word RAM_21ccc80 @ 0x20d7458
.word RAM_21d0920 @ 0x20d745c
.word RAM_21d0944 @ 0x20d7460
.word Function_20d72e0 @ 0x20d7464



.arm
Function_20d7468: @ 20d7468 :arm
	stmfd   sp!, {r4,r5,lr}
	sub     sp, sp, #0xc
	mov     r5, r0
	mov     r4, r1
	mov     r12, #0x0
	ldr     r0, [pc, #0x48] @ [0x20d74cc] (=Function_20d730c)
	add     r1, sp, #0x0
	str     r5, [sp]
	str     r4, [sp, #0x4]
	str     r12, [sp, #0x8]
	bl      Function_20d6abc
	cmp     r5, #0x0
	addeq   sp, sp, #0xc
	ldmeqfd sp!, {r4,r5,pc}
	cmp     r0, r4
	movcc   r1, #0x0
	addcc   sp, sp, #0xc
	strccb  r1, [r5, r0]
	ldmccfd sp!, {r4,r5,pc}
	cmp     r4, #0x0
	addne   r1, r5, r4
	movne   r2, #0x0
	strneb  r2, [r1, #-0x1]
	add     sp, sp, #0xc
	ldmfd   sp!, {r4,r5,pc}
@ 0x20d74cc

.word Function_20d730c @ 0x20d74cc



.arm
.globl Function_20d74d0
Function_20d74d0: @ 20d74d0 :arm
	ldr     r12, [pc, #0xc] @ [0x20d74e4] (=0x20d7468)
	mov     r3, r2
	mov     r2, r1
	mvn     r1, #0x0
	bx      r12
@ 0x20d74e4

.word Function_20d7468 @ 0x20d74e4



.arm
.globl Function_20d74e8
Function_20d74e8: @ 20d74e8 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r3,lr}
	add     r3, sp, #0x10
	bic     r3, r3, #0x3
	ldr     r2, [sp, #0x10]
	add     r3, r3, #0x4
	bl      Function_20d7468
	ldmfd   sp!, {r3,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d7510


.arm
.globl Function_20d7510
Function_20d7510: @ 20d7510 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r3,lr}
	add     r1, sp, #0xc
	bic     r1, r1, #0x3
	add     r3, r1, #0x4
	ldr     r2, [sp, #0xc]
	mvn     r1, #0x0
	bl      Function_20d7468
	ldmfd   sp!, {r3,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d753c


.arm
.globl Function_20d753c
Function_20d753c: @ 20d753c :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x10
	mov     r9, r1
	cmp     r9, #0x2
	mov     r10, r0
	mov     r8, r2
	mov     r7, r3
	addcc   sp, sp, #0x10
	ldmccfd sp!, {r3-r11,pc}
	mov     r0, r9, lsr #1
	add     r11, r0, #0x1
	sub     r0, r11, #0x1
	mla     r0, r8, r0, r10
	sub     r2, r9, #0x1
	str     r0, [sp, #0xc]
	mla     r0, r8, r2, r10
	str     r0, [sp, #0x8]
	mul     r0, r11, r8
	mvn     r1, #0x0
	str     r0, [sp, #0x4]
	mul     r0, r8, r1
	str     r0, [sp]
.arm
branch_20d7594: @ 20d7594 :arm
	cmp     r11, #0x1
	bls     branch_20d75bc
	ldr     r0, [sp, #0x4]
	sub     r11, r11, #0x1
	sub     r0, r0, r8
	str     r0, [sp, #0x4]
	ldr     r0, [sp, #0xc]
	sub     r0, r0, r8
	str     r0, [sp, #0xc]
	b       branch_20d7604
@ 0x20d75bc

.arm
branch_20d75bc: @ 20d75bc :arm
	mov     r2, r8
	ldr     r4, [sp, #0x8]
	ldr     r3, [sp, #0xc]
	cmp     r8, #0x0
	beq     branch_20d75e8
.arm
branch_20d75d0: @ 20d75d0 :arm
	ldrsb   r0, [r4]
	ldrsb   r1, [r3]
	subs    r2, r2, #0x1
	strb    r0, [r3], #0x1
	strb    r1, [r4], #0x1
	bne     branch_20d75d0
.arm
branch_20d75e8: @ 20d75e8 :arm
	sub     r9, r9, #0x1
	cmp     r9, #0x1
	addeq   sp, sp, #0x10
	ldmeqfd sp!, {r3-r11,pc}
	ldr     r0, [sp, #0x8]
	sub     r0, r0, r8
	str     r0, [sp, #0x8]
.arm
branch_20d7604: @ 20d7604 :arm
	ldr     r1, [sp, #0x4]
	ldr     r0, [sp]
	mov     r4, r11
	add     r0, r1, r0
	cmp     r9, r11, lsl #1
	add     r5, r10, r0
	blo     branch_20d7594
.arm
branch_20d7620: @ 20d7620 :arm
	mov     r4, r4, lsl #1
	sub     r0, r4, #0x1
	mov     r6, r5
	mla     r5, r8, r0, r10
	cmp     r9, r4
	bls     branch_20d7650
	mov     r0, r5
	add     r1, r5, r8
	blx     r7
	cmp     r0, #0x0
	addlt   r4, r4, #0x1
	addlt   r5, r5, r8
.arm
branch_20d7650: @ 20d7650 :arm
	mov     r0, r6
	mov     r1, r5
	blx     r7
	cmp     r0, #0x0
	bge     branch_20d7594
	mov     r2, r8
	mov     r3, r5
	cmp     r8, #0x0
	beq     branch_20d768c
.arm
branch_20d7674: @ 20d7674 :arm
	ldrsb   r1, [r6]
	ldrsb   r0, [r3]
	subs    r2, r2, #0x1
	strb    r0, [r6], #0x1
	strb    r1, [r3], #0x1
	bne     branch_20d7674
.arm
branch_20d768c: @ 20d768c :arm
	cmp     r9, r4, lsl #1
	bhs     branch_20d7620
	b       branch_20d7594
@ 0x20d7698


.arm
Function_20d7698: @ 20d7698 :arm
	add     sp, sp, #0x10
	ldmfd   sp!, {r3-r11,pc}
@ 0x20d76a0


.arm
.globl Function_20d76a0
Function_20d76a0: @ 20d76a0 :arm
	ldr     r2, [pc, #0x20] @ [0x20d76c8] (=Unknown_2101818)
	ldr     r0, [pc, #0x20] @ [0x20d76cc] (=0x41c64e6d)
	ldr     r3, [r2]
	ldr     r1, [pc, #0x1c] @ [0x20d76d0] (=0x7fff)
	mul     r0, r3, r0
	add     r0, r0, #0x39
	add     r0, r0, #3, 20 @ #0x3000
	str     r0, [r2]
	and     r0, r1, r0, lsr #16
	bx      lr
@ 0x20d76c8

.word Unknown_2101818 @ 0x20d76c8
.word 0x41c64e6d @ 0x20d76cc
.word 0x7fff @ 0x20d76d0



.arm
.globl Function_20d76d4
Function_20d76d4: @ 20d76d4 :arm
	ldr     r1, [pc, #0x4] @ [0x20d76e0] (=Unknown_2101818)
	str     r0, [r1]
	bx      lr
@ 0x20d76e0

.word Unknown_2101818 @ 0x20d76e0



.arm
Function_20d76e4: @ 20d76e4 :arm
	stmfd   sp!, {r3-r7,lr}
	sub     sp, sp, #0x28
	ldr     r6, [pc, #0x4e0] @ [0x20d7bd4] (=Unknown_20fe964)
	add     r5, sp, #0x0
	mov     r7, r0
	mov     lr, r1
	mov     r4, r5
	ldmia   r6!, {r0-r3}
	stmia   r5!, {r0-r3}
	ldmia   r6!, {r0-r3}
	stmia   r5!, {r0-r3}
	ldmia   r6, {r0,r1}
	stmia   r5, {r0,r1}
	ldrsb   r0, [r7, #0x1]
	add     r12, r7, #0x1
	cmp     r0, #0x25
	bne     branch_20d7750
	strb    r0, [sp, #0x3]
	ldmia   r4!, {r0-r3}
	stmia   lr!, {r0-r3}
	ldmia   r4!, {r0-r3}
	stmia   lr!, {r0-r3}
	ldmia   r4, {r0,r1}
	stmia   lr, {r0,r1}
	add     sp, sp, #0x28
	add     r0, r12, #0x1
	ldmfd   sp!, {r3-r7,pc}
@ 0x20d7750

.arm
branch_20d7750: @ 20d7750 :arm
	cmp     r0, #0x2a
	moveq   r0, #0x1
	streqb  r0, [sp]
	ldreqsb r0, [r12, #0x1]!
	cmp     r0, #0x0
	blt     branch_20d7770
	cmp     r0, #0x80
	blt     branch_20d7778
.arm
branch_20d7770: @ 20d7770 :arm
	mov     r1, #0x0
	b       branch_20d7788
@ 0x20d7778

.arm
branch_20d7778: @ 20d7778 :arm
	ldr     r1, [pc, #0x458] @ [0x20d7bd8] (=Unknown_20fe864)
	mov     r2, r0, lsl #1
	ldrh    r1, [r1, r2]
	and     r1, r1, #0x8
.arm
branch_20d7788: @ 20d7788 :arm
	cmp     r1, #0x0
	beq     branch_20d7828
	mov     r1, #0x0
	ldr     r3, [pc, #0x43c] @ [0x20d7bd8] (=Unknown_20fe864)
	str     r1, [sp, #0x4]
	mov     r4, r1
	mov     r1, #0xa
.arm
branch_20d77a4: @ 20d77a4 :arm
	ldr     r2, [sp, #0x4]
	sub     r0, r0, #0x30
	mla     r0, r2, r1, r0
	str     r0, [sp, #0x4]
	ldrsb   r0, [r12, #0x1]!
	cmp     r0, #0x0
	blt     branch_20d77c8
	cmp     r0, #0x80
	blt     branch_20d77d0
.arm
branch_20d77c8: @ 20d77c8 :arm
	mov     r2, r4
	b       branch_20d77dc
@ 0x20d77d0

.arm
branch_20d77d0: @ 20d77d0 :arm
	mov     r2, r0, lsl #1
	ldrh    r2, [r3, r2]
	and     r2, r2, #0x8
.arm
branch_20d77dc: @ 20d77dc :arm
	cmp     r2, #0x0
	bne     branch_20d77a4
	ldr     r1, [sp, #0x4]
	cmp     r1, #0x0
	bne     branch_20d7820
	mov     r0, #0xff
	add     r4, sp, #0x0
	strb    r0, [sp, #0x3]
	ldmia   r4!, {r0-r3}
	stmia   lr!, {r0-r3}
	ldmia   r4!, {r0-r3}
	stmia   lr!, {r0-r3}
	ldmia   r4, {r0,r1}
	stmia   lr, {r0,r1}
	add     sp, sp, #0x28
	add     r0, r12, #0x1
	ldmfd   sp!, {r3-r7,pc}
@ 0x20d7820

.arm
branch_20d7820: @ 20d7820 :arm
	mov     r1, #0x1
	strb    r1, [sp, #0x1]
.arm
branch_20d7828: @ 20d7828 :arm
	cmp     r0, #0x6c
	mov     r1, #0x1
	bgt     branch_20d7860
	cmp     r0, #0x68
	blt     branch_20d7854
	beq     branch_20d787c
	cmp     r0, #0x6a
	beq     branch_20d78c8
	cmp     r0, #0x6c
	beq     branch_20d7898
	b       branch_20d78ec
@ 0x20d7854

.arm
branch_20d7854: @ 20d7854 :arm
	cmp     r0, #0x4c
	beq     branch_20d78bc
	b       branch_20d78ec
@ 0x20d7860

.arm
branch_20d7860: @ 20d7860 :arm
	cmp     r0, #0x74
	bgt     branch_20d7870
	beq     branch_20d78e0
	b       branch_20d78ec
@ 0x20d7870

.arm
branch_20d7870: @ 20d7870 :arm
	cmp     r0, #0x7a
	beq     branch_20d78d4
	b       branch_20d78ec
@ 0x20d787c

.arm
branch_20d787c: @ 20d787c :arm
	mov     r2, #0x2
	strb    r2, [sp, #0x2]
	ldrsb   r2, [r12, #0x1]
	cmp     r2, #0x68
	streqb  r1, [sp, #0x2]
	ldreqsb r0, [r12, #0x1]!
	b       branch_20d78f0
@ 0x20d7898

.arm
branch_20d7898: @ 20d7898 :arm
	mov     r2, #0x3
	strb    r2, [sp, #0x2]
	ldrsb   r2, [r12, #0x1]
	cmp     r2, #0x6c
	bne     branch_20d78f0
	mov     r0, #0x7
	strb    r0, [sp, #0x2]
	ldrsb   r0, [r12, #0x1]!
	b       branch_20d78f0
@ 0x20d78bc

.arm
branch_20d78bc: @ 20d78bc :arm
	mov     r2, #0x9
	strb    r2, [sp, #0x2]
	b       branch_20d78f0
@ 0x20d78c8

.arm
branch_20d78c8: @ 20d78c8 :arm
	mov     r2, #0x4
	strb    r2, [sp, #0x2]
	b       branch_20d78f0
@ 0x20d78d4

.arm
branch_20d78d4: @ 20d78d4 :arm
	mov     r2, #0x5
	strb    r2, [sp, #0x2]
	b       branch_20d78f0
@ 0x20d78e0

.arm
branch_20d78e0: @ 20d78e0 :arm
	mov     r2, #0x6
	strb    r2, [sp, #0x2]
	b       branch_20d78f0
@ 0x20d78ec

.arm
branch_20d78ec: @ 20d78ec :arm
	mov     r1, #0x0
.arm
branch_20d78f0: @ 20d78f0 :arm
	cmp     r1, #0x0
	ldrnesb r0, [r12, #0x1]!
	strb    r0, [sp, #0x3]
	cmp     r0, #0x5b
	bgt     branch_20d7944
	bge     branch_20d7a94
	cmp     r0, #0x47
	bgt     branch_20d7938
	subs    r1, r0, #0x41
	addpl   pc, pc, r1, lsl #2
	b       branch_20d7ba4
@ 0x20d791c

.arm
Function_20d791c: @ 20d791c :arm
	b       branch_20d79d0
@ 0x20d7920

.arm
Function_20d7920: @ 20d7920 :arm
	b       branch_20d7ba4
@ 0x20d7924

.arm
Function_20d7924: @ 20d7924 :arm
	b       branch_20d7ba4
@ 0x20d7928

.arm
Function_20d7928: @ 20d7928 :arm
	b       branch_20d7ba4
@ 0x20d792c

.arm
Function_20d792c: @ 20d792c :arm
	b       branch_20d79d0
@ 0x20d7930

.arm
Function_20d7930: @ 20d7930 :arm
	b       branch_20d79d0
@ 0x20d7934

.arm
Function_20d7934: @ 20d7934 :arm
	b       branch_20d79d0
@ 0x20d7938

.arm
branch_20d7938: @ 20d7938 :arm
	cmp     r0, #0x58
	beq     branch_20d79bc
	b       branch_20d7ba4
@ 0x20d7944

.arm
branch_20d7944: @ 20d7944 :arm
	cmp     r0, #0x61
	bgt     branch_20d7954
	beq     branch_20d79d0
	b       branch_20d7ba4
@ 0x20d7954

.arm
branch_20d7954: @ 20d7954 :arm
	sub     r0, r0, #0x63
	cmp     r0, #0x15
	addls   pc, pc, r0, lsl #2
	b       branch_20d7ba4
@ 0x20d7964

.arm
Function_20d7964: @ 20d7964 :arm
	b       branch_20d7a20
@ 0x20d7968

.arm
Function_20d7968: @ 20d7968 :arm
	b       branch_20d79bc
@ 0x20d796c

.arm
Function_20d796c: @ 20d796c :arm
	b       branch_20d79d0
@ 0x20d7970

.arm
Function_20d7970: @ 20d7970 :arm
	b       branch_20d79d0
@ 0x20d7974

.arm
Function_20d7974: @ 20d7974 :arm
	b       branch_20d79d0
@ 0x20d7978

.arm
Function_20d7978: @ 20d7978 :arm
	b       branch_20d7ba4
@ 0x20d797c

.arm
Function_20d797c: @ 20d797c :arm
	b       branch_20d79bc
@ 0x20d7980

.arm
Function_20d7980: @ 20d7980 :arm
	b       branch_20d7ba4
@ 0x20d7984

.arm
Function_20d7984: @ 20d7984 :arm
	b       branch_20d7ba4
@ 0x20d7988

.arm
Function_20d7988: @ 20d7988 :arm
	b       branch_20d7ba4
@ 0x20d798c

.arm
Function_20d798c: @ 20d798c :arm
	b       branch_20d7ba4
@ 0x20d7990

.arm
Function_20d7990: @ 20d7990 :arm
	b       branch_20d7bac
@ 0x20d7994

.arm
Function_20d7994: @ 20d7994 :arm
	b       branch_20d79bc
@ 0x20d7998

.arm
Function_20d7998: @ 20d7998 :arm
	b       branch_20d7a0c
@ 0x20d799c

.arm
Function_20d799c: @ 20d799c :arm
	b       branch_20d7ba4
@ 0x20d79a0

.arm
Function_20d79a0: @ 20d79a0 :arm
	b       branch_20d7ba4
@ 0x20d79a4

.arm
Function_20d79a4: @ 20d79a4 :arm
	b       branch_20d7a44
@ 0x20d79a8

.arm
Function_20d79a8: @ 20d79a8 :arm
	b       branch_20d7ba4
@ 0x20d79ac

.arm
Function_20d79ac: @ 20d79ac :arm
	b       branch_20d79bc
@ 0x20d79b0

.arm
Function_20d79b0: @ 20d79b0 :arm
	b       branch_20d7ba4
@ 0x20d79b4

.arm
Function_20d79b4: @ 20d79b4 :arm
	b       branch_20d7ba4
@ 0x20d79b8

.arm
Function_20d79b8: @ 20d79b8 :arm
	b       branch_20d79bc
@ 0x20d79bc

.arm
branch_20d79bc: @ 20d79bc :arm
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x9
	moveq   r0, #0xff
	streqb  r0, [sp, #0x3]
	b       branch_20d7bac
@ 0x20d79d0

.arm
branch_20d79d0: @ 20d79d0 :arm
	ldrb    r1, [sp, #0x2]
	cmp     r1, #0x1
	cmpne   r1, #0x2
	beq     branch_20d79f0
	add     r0, r1, #0xfc
	and     r0, r0, #0xff
	cmp     r0, #0x3
	bhi     branch_20d79fc
.arm
branch_20d79f0: @ 20d79f0 :arm
	mov     r0, #0xff
	strb    r0, [sp, #0x3]
	b       branch_20d7bac
@ 0x20d79fc

.arm
branch_20d79fc: @ 20d79fc :arm
	cmp     r1, #0x3
	moveq   r0, #0x8
	streqb  r0, [sp, #0x2]
	b       branch_20d7bac
@ 0x20d7a0c

.arm
branch_20d7a0c: @ 20d7a0c :arm
	mov     r1, #0x3
	mov     r0, #0x78
	strb    r1, [sp, #0x2]
	strb    r0, [sp, #0x3]
	b       branch_20d7bac
@ 0x20d7a20

.arm
branch_20d7a20: @ 20d7a20 :arm
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x3
	moveq   r0, #0xa
	streqb  r0, [sp, #0x2]
	beq     branch_20d7bac
	cmp     r0, #0x0
	movne   r0, #0xff
	strneb  r0, [sp, #0x3]
	b       branch_20d7bac
@ 0x20d7a44

.arm
branch_20d7a44: @ 20d7a44 :arm
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x3
	moveq   r0, #0xa
	streqb  r0, [sp, #0x2]
	beq     branch_20d7a64
	cmp     r0, #0x0
	movne   r0, #0xff
	strneb  r0, [sp, #0x3]
.arm
branch_20d7a64: @ 20d7a64 :arm
	add     r2, sp, #0x8
	mov     r1, #0x20
	mov     r0, #0xff
.arm
branch_20d7a70: @ 20d7a70 :arm
	sub     r1, r1, #0x1
	cmp     r1, #0x0
	strb    r0, [r2], #0x1
	bgt     branch_20d7a70
	mov     r1, #0xc1
	mov     r0, #0xfe
	strb    r1, [sp, #0x9]
	strb    r0, [sp, #0xc]
	b       branch_20d7bac
@ 0x20d7a94

.arm
branch_20d7a94: @ 20d7a94 :arm
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x3
	moveq   r0, #0xa
	streqb  r0, [sp, #0x2]
	beq     branch_20d7ab4
	cmp     r0, #0x0
	movne   r0, #0xff
	strneb  r0, [sp, #0x3]
.arm
branch_20d7ab4: @ 20d7ab4 :arm
	ldrsb   r2, [r12, #0x1]!
	mov     r1, #0x0
	cmp     r2, #0x5e
	ldreqsb r2, [r12, #0x1]!
	moveq   r1, #0x1
	cmp     r2, #0x5d
	bne     branch_20d7b5c
	ldrb    r0, [sp, #0x13]
	orr     r0, r0, #0x20
	strb    r0, [sp, #0x13]
	ldrsb   r2, [r12, #0x1]!
	b       branch_20d7b5c
@ 0x20d7ae4

.arm
branch_20d7ae4: @ 20d7ae4 :arm
	add     r0, sp, #0x0
	and     r3, r2, #0xff
	add     r6, r0, r3, asr #3
	ldrb    r5, [r6, #0x8]
	and     r3, r2, #0x7
	mov     r4, #0x1
	orr     r3, r5, r4, lsl r3
	strb    r3, [r6, #0x8]
	ldrsb   r3, [r12, #0x1]
	cmp     r3, #0x2d
	bne     branch_20d7b58
	ldrsb   r7, [r12, #0x2]
	cmp     r7, #0x0
	cmpne   r7, #0x5d
	beq     branch_20d7b58
	add     r2, r2, #0x1
	cmp     r2, r7
	bgt     branch_20d7b50
.arm
branch_20d7b2c: @ 20d7b2c :arm
	and     r3, r2, #0xff
	add     r6, r0, r3, asr #3
	ldrb    r5, [r6, #0x8]
	and     r3, r2, #0x7
	add     r2, r2, #0x1
	orr     r3, r5, r4, lsl r3
	strb    r3, [r6, #0x8]
	cmp     r2, r7
	ble     branch_20d7b2c
.arm
branch_20d7b50: @ 20d7b50 :arm
	ldrsb   r2, [r12, #0x3]!
	b       branch_20d7b5c
@ 0x20d7b58

.arm
branch_20d7b58: @ 20d7b58 :arm
	ldrsb   r2, [r12, #0x1]!
.arm
branch_20d7b5c: @ 20d7b5c :arm
	cmp     r2, #0x0
	cmpne   r2, #0x5d
	bne     branch_20d7ae4
	cmp     r2, #0x0
	moveq   r0, #0xff
	streqb  r0, [sp, #0x3]
	beq     branch_20d7bac
	cmp     r1, #0x0
	beq     branch_20d7bac
	add     r2, sp, #0x8
	mov     r1, #0x20
.arm
branch_20d7b88: @ 20d7b88 :arm
	ldrb    r0, [r2]
	sub     r1, r1, #0x1
	cmp     r1, #0x0
	mvn     r0, r0
	strb    r0, [r2], #0x1
	bgt     branch_20d7b88
	b       branch_20d7bac
@ 0x20d7ba4

.arm
branch_20d7ba4: @ 20d7ba4 :arm
	mov     r0, #0xff
	strb    r0, [sp, #0x3]
.arm
branch_20d7bac: @ 20d7bac :arm
	add     r4, sp, #0x0
	ldmia   r4!, {r0-r3}
	stmia   lr!, {r0-r3}
	ldmia   r4!, {r0-r3}
	stmia   lr!, {r0-r3}
	ldmia   r4, {r0,r1}
	stmia   lr, {r0,r1}
	add     r0, r12, #0x1
	add     sp, sp, #0x28
	ldmfd   sp!, {r3-r7,pc}
@ 0x20d7bd4

.word Unknown_20fe964 @ 0x20d7bd4
.word Unknown_20fe864 @ 0x20d7bd8



.arm
Function_20d7bdc: @ 20d7bdc :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x88
	ldrsb   r5, [r2]
	str     r2, [sp, #0xc]
	mov     r2, #0x0
	mov     r9, r0
	mov     r0, r2
	str     r2, [sp, #0x20]
	mov     r8, r1
	str     r3, [sp, #0x10]
	str     r0, [sp, #0x24]
	cmp     r5, #0x0
	ldr     r10, [sp, #0xb0]
	str     r0, [sp, #0x30]
	mov     r4, r2
	str     r0, [sp, #0x44]
	str     r0, [sp, #0x40]
	beq     branch_20d88f0
.arm
branch_20d7c24: @ 20d7c24 :arm
	cmp     r5, #0x0
	mov     r0, #0x1
	blt     branch_20d7c38
	cmp     r5, #0x80
	movlt   r0, #0x0
.arm
branch_20d7c38: @ 20d7c38 :arm
	cmp     r0, #0x0
	movne   r0, #0x0
	bne     branch_20d7c54
	mov     r1, r5, lsl #1
	ldr     r0, [pc, #0xcd8] @ [0x20d8928] (=Unknown_20fe864)
	ldrh    r0, [r0, r1]
	and     r0, r0, #1, 24 @ #0x100
.arm
branch_20d7c54: @ 20d7c54 :arm
	cmp     r0, #0x0
	beq     branch_20d7d14
	mov     r2, #0x0
	ldr     r1, [pc, #0xcc0] @ [0x20d8928] (=Unknown_20fe864)
	mov     r12, r2
	mov     r3, #0x1
.arm
branch_20d7c6c: @ 20d7c6c :arm
	ldr     r0, [sp, #0xc]
	ldrsb   r5, [r0, #0x1]!
	str     r0, [sp, #0xc]
	mov     r0, r3
	cmp     r5, #0x0
	blt     branch_20d7c8c
	cmp     r5, #0x80
	movlt   r0, r2
.arm
branch_20d7c8c: @ 20d7c8c :arm
	cmp     r0, #0x0
	movne   r0, r12
	moveq   r0, r5, lsl #1
	ldreqh  r0, [r1, r0]
	andeq   r0, r0, #1, 24 @ #0x100
	cmp     r0, #0x0
	bne     branch_20d7c6c
	ldr     r0, [sp, #0x30]
	cmp     r0, #0x0
	bne     branch_20d88e0
	ldr     r5, [pc, #0xc6c] @ [0x20d8928] (=Unknown_20fe864)
	b       branch_20d7cc0
@ 0x20d7cbc

.arm
branch_20d7cbc: @ 20d7cbc :arm
	add     r4, r4, #0x1
.arm
branch_20d7cc0: @ 20d7cc0 :arm
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	blx     r9
	strb    r0, [sp, #0x50]
	ldrsb   r1, [sp, #0x50]
	cmp     r1, #0x0
	blt     branch_20d7ce8
	cmp     r1, #0x80
	blt     branch_20d7cf0
.arm
branch_20d7ce8: @ 20d7ce8 :arm
	mov     r0, #0x0
	b       branch_20d7cfc
@ 0x20d7cf0

.arm
branch_20d7cf0: @ 20d7cf0 :arm
	mov     r0, r1, lsl #1
	ldrh    r0, [r5, r0]
	and     r0, r0, #1, 24 @ #0x100
.arm
branch_20d7cfc: @ 20d7cfc :arm
	cmp     r0, #0x0
	bne     branch_20d7cbc
	mov     r0, r8
	mov     r2, #0x1
	blx     r9
	b       branch_20d88e0
@ 0x20d7d14

.arm
branch_20d7d14: @ 20d7d14 :arm
	cmp     r5, #0x25
	beq     branch_20d7d8c
	ldr     r0, [sp, #0x30]
	cmp     r0, #0x0
	bne     branch_20d7d8c
	mov     r0, r8
	mov     r1, #0x0
	mov     r2, r1
	blx     r9
	strb    r0, [sp, #0x50]
	and     r0, r5, #0xff
	ldrsb   r1, [sp, #0x50]
	cmp     r0, r1
	beq     branch_20d7d78
	mov     r0, r8
	mov     r2, #0x1
	blx     r9
	cmp     r10, #0x0
	beq     branch_20d88f0
	mov     r0, #0x1
	str     r0, [sp, #0x30]
	ldr     r0, [sp, #0xc]
	add     r0, r0, #0x1
	str     r0, [sp, #0xc]
	b       branch_20d88e0
@ 0x20d7d78

.arm
branch_20d7d78: @ 20d7d78 :arm
	ldr     r0, [sp, #0xc]
	add     r4, r4, #0x1
	add     r0, r0, #0x1
	str     r0, [sp, #0xc]
	b       branch_20d88e0
@ 0x20d7d8c

.arm
branch_20d7d8c: @ 20d7d8c :arm
	ldr     r0, [sp, #0xc]
	add     r1, sp, #0x60
	bl      Function_20d76e4
	str     r0, [sp, #0xc]
	ldrb    r0, [sp, #0x60]
	cmp     r0, #0x0
	bne     branch_20d7dc8
	ldrb    r0, [sp, #0x63]
	cmp     r0, #0x25
	beq     branch_20d7dc8
	ldr     r0, [sp, #0x10]
	add     r0, r0, #0x4
	str     r0, [sp, #0x10]
	ldr     r5, [r0, #-0x4]
	b       branch_20d7dcc
@ 0x20d7dc8

.arm
branch_20d7dc8: @ 20d7dc8 :arm
	mov     r5, #0x0
.arm
branch_20d7dcc: @ 20d7dcc :arm
	ldrb    r0, [sp, #0x63]
	cmp     r0, #0x6e
	beq     branch_20d7e0c
	ldr     r0, [sp, #0x30]
	cmp     r0, #0x0
	bne     branch_20d7e0c
	mov     r0, r8
	mov     r1, #0x0
	mov     r2, #0x2
	blx     r9
	cmp     r0, #0x0
	beq     branch_20d7e0c
	cmp     r10, #0x0
	beq     branch_20d88f0
	mov     r0, #0x1
	str     r0, [sp, #0x30]
.arm
branch_20d7e0c: @ 20d7e0c :arm
	ldrb    r1, [sp, #0x63]
	cmp     r1, #0x5b
	bgt     branch_20d7e64
	bge     branch_20d8638
	cmp     r1, #0x47
	bgt     branch_20d7e58
	subs    r0, r1, #0x41
	addpl   pc, pc, r0, lsl #2
	b       branch_20d7e4c
@ 0x20d7e30

.arm
Function_20d7e30: @ 20d7e30 :arm
	b       branch_20d82b4
@ 0x20d7e34

.arm
Function_20d7e34: @ 20d7e34 :arm
	b       branch_20d88f0
@ 0x20d7e38

.arm
Function_20d7e38: @ 20d7e38 :arm
	b       branch_20d88f0
@ 0x20d7e3c

.arm
Function_20d7e3c: @ 20d7e3c :arm
	b       branch_20d88f0
@ 0x20d7e40

.arm
Function_20d7e40: @ 20d7e40 :arm
	b       branch_20d82b4
@ 0x20d7e44

.arm
Function_20d7e44: @ 20d7e44 :arm
	b       branch_20d82b4
@ 0x20d7e48

.arm
Function_20d7e48: @ 20d7e48 :arm
	b       branch_20d82b4
@ 0x20d7e4c

.arm
branch_20d7e4c: @ 20d7e4c :arm
	cmp     r1, #0x25
	beq     branch_20d8530
	b       branch_20d88f0
@ 0x20d7e58

.arm
branch_20d7e58: @ 20d7e58 :arm
	cmp     r1, #0x58
	beq     branch_20d80f0
	b       branch_20d88f0
@ 0x20d7e64

.arm
branch_20d7e64: @ 20d7e64 :arm
	cmp     r1, #0x78
	bgt     branch_20d7edc
	subs    r0, r1, #0x63
	addpl   pc, pc, r0, lsl #2
	b       branch_20d7ed0
@ 0x20d7e78

.arm
Function_20d7e78: @ 20d7e78 :arm
	b       branch_20d8378
@ 0x20d7e7c

.arm
Function_20d7e7c: @ 20d7e7c :arm
	b       branch_20d7ee4
@ 0x20d7e80

.arm
Function_20d7e80: @ 20d7e80 :arm
	b       branch_20d82b4
@ 0x20d7e84

.arm
Function_20d7e84: @ 20d7e84 :arm
	b       branch_20d82b4
@ 0x20d7e88

.arm
Function_20d7e88: @ 20d7e88 :arm
	b       branch_20d82b4
@ 0x20d7e8c

.arm
Function_20d7e8c: @ 20d7e8c :arm
	b       branch_20d88f0
@ 0x20d7e90

.arm
Function_20d7e90: @ 20d7e90 :arm
	b       branch_20d7eec
@ 0x20d7e94

.arm
Function_20d7e94: @ 20d7e94 :arm
	b       branch_20d88f0
@ 0x20d7e98

.arm
Function_20d7e98: @ 20d7e98 :arm
	b       branch_20d88f0
@ 0x20d7e9c

.arm
Function_20d7e9c: @ 20d7e9c :arm
	b       branch_20d88f0
@ 0x20d7ea0

.arm
Function_20d7ea0: @ 20d7ea0 :arm
	b       branch_20d88f0
@ 0x20d7ea4

.arm
Function_20d7ea4: @ 20d7ea4 :arm
	b       branch_20d887c
@ 0x20d7ea8

.arm
Function_20d7ea8: @ 20d7ea8 :arm
	b       branch_20d80e0
@ 0x20d7eac

.arm
Function_20d7eac: @ 20d7eac :arm
	b       branch_20d88f0
@ 0x20d7eb0

.arm
Function_20d7eb0: @ 20d7eb0 :arm
	b       branch_20d88f0
@ 0x20d7eb4

.arm
Function_20d7eb4: @ 20d7eb4 :arm
	b       branch_20d88f0
@ 0x20d7eb8

.arm
Function_20d7eb8: @ 20d7eb8 :arm
	b       branch_20d85bc
@ 0x20d7ebc

.arm
Function_20d7ebc: @ 20d7ebc :arm
	b       branch_20d88f0
@ 0x20d7ec0

.arm
Function_20d7ec0: @ 20d7ec0 :arm
	b       branch_20d80e8
@ 0x20d7ec4

.arm
Function_20d7ec4: @ 20d7ec4 :arm
	b       branch_20d88f0
@ 0x20d7ec8

.arm
Function_20d7ec8: @ 20d7ec8 :arm
	b       branch_20d88f0
@ 0x20d7ecc

.arm
Function_20d7ecc: @ 20d7ecc :arm
	b       branch_20d80f0
@ 0x20d7ed0

.arm
branch_20d7ed0: @ 20d7ed0 :arm
	cmp     r1, #0x61
	beq     branch_20d82b4
	b       branch_20d88f0
@ 0x20d7edc

.arm
branch_20d7edc: @ 20d7edc :arm
	cmp     r1, #0xff
	b       branch_20d88f0
@ 0x20d7ee4

.arm
branch_20d7ee4: @ 20d7ee4 :arm
	mov     r0, #0xa
	b       branch_20d7ef0
@ 0x20d7eec

.arm
branch_20d7eec: @ 20d7eec :arm
	mov     r0, #0x0
.arm
branch_20d7ef0: @ 20d7ef0 :arm
	ldr     r1, [sp, #0x30]
	cmp     r1, #0x0
	beq     branch_20d7f10
	mov     r0, #0x0
	str     r0, [sp, #0x1c]
	str     r0, [sp, #0x20]
	str     r0, [sp, #0x24]
	b       branch_20d8018
@ 0x20d7f10

.arm
branch_20d7f10: @ 20d7f10 :arm
	ldrb    r1, [sp, #0x62]
	add     r2, sp, #0x5c
	cmp     r1, #0x7
	cmpne   r1, #0x4
	add     r1, sp, #0x58
	bne     branch_20d7f54
	str     r2, [sp]
	str     r1, [sp, #0x4]
	add     r1, sp, #0x54
	str     r1, [sp, #0x8]
	ldr     r1, [sp, #0x64]
	mov     r2, r9
	mov     r3, r8
	bl      Function_20da840
	str     r0, [sp, #0x34]
	str     r1, [sp, #0x18]
	b       branch_20d7f78
@ 0x20d7f54

.arm
branch_20d7f54: @ 20d7f54 :arm
	str     r2, [sp]
	str     r1, [sp, #0x4]
	add     r1, sp, #0x54
	str     r1, [sp, #0x8]
	ldr     r1, [sp, #0x64]
	mov     r2, r9
	mov     r3, r8
	bl      Function_20da458
	str     r0, [sp, #0x3c]
.arm
branch_20d7f78: @ 20d7f78 :arm
	ldr     r0, [sp, #0x5c]
	cmp     r0, #0x0
	bne     branch_20d7fa8
	cmp     r10, #0x0
	beq     branch_20d88f0
	mov     r0, #0x1
	str     r0, [sp, #0x30]
	mov     r0, #0x0
	str     r0, [sp, #0x1c]
	str     r0, [sp, #0x20]
	str     r0, [sp, #0x24]
	b       branch_20d8018
@ 0x20d7fa8

.arm
branch_20d7fa8: @ 20d7fa8 :arm
	add     r4, r4, r0
	ldrb    r0, [sp, #0x62]
	cmp     r0, #0x7
	cmpne   r0, #0x4
	bne     branch_20d7ff8
	ldr     r0, [sp, #0x58]
	cmp     r0, #0x0
	beq     branch_20d7fe4
	ldr     r0, [sp, #0x34]
	rsbs    r0, r0, #0x0
	str     r0, [sp, #0x20]
	ldr     r0, [sp, #0x18]
	rsc     r0, r0, #0x0
	str     r0, [sp, #0x24]
	b       branch_20d8018
@ 0x20d7fe4

.arm
branch_20d7fe4: @ 20d7fe4 :arm
	ldr     r0, [sp, #0x34]
	str     r0, [sp, #0x20]
	ldr     r0, [sp, #0x18]
	str     r0, [sp, #0x24]
	b       branch_20d8018
@ 0x20d7ff8

.arm
branch_20d7ff8: @ 20d7ff8 :arm
	ldr     r0, [sp, #0x58]
	cmp     r0, #0x0
	ldreq   r0, [sp, #0x3c]
	streq   r0, [sp, #0x1c]
	beq     branch_20d8018
	ldr     r0, [sp, #0x3c]
	rsb     r0, r0, #0x0
	str     r0, [sp, #0x1c]
.arm
branch_20d8018: @ 20d8018 :arm
	cmp     r5, #0x0
	beq     branch_20d80d0
	ldrb    r0, [sp, #0x62]
	cmp     r0, #0x7
	addls   pc, pc, r0, lsl #2
	b       branch_20d80bc
@ 0x20d8030

.arm
Function_20d8030: @ 20d8030 :arm
	b       branch_20d8050
@ 0x20d8034

.arm
Function_20d8034: @ 20d8034 :arm
	b       branch_20d805c
@ 0x20d8038

.arm
Function_20d8038: @ 20d8038 :arm
	b       branch_20d8068
@ 0x20d803c

.arm
Function_20d803c: @ 20d803c :arm
	b       branch_20d8074
@ 0x20d8040

.arm
Function_20d8040: @ 20d8040 :arm
	b       branch_20d8080
@ 0x20d8044

.arm
Function_20d8044: @ 20d8044 :arm
	b       branch_20d8094
@ 0x20d8048

.arm
Function_20d8048: @ 20d8048 :arm
	b       branch_20d80a0
@ 0x20d804c

.arm
Function_20d804c: @ 20d804c :arm
	b       branch_20d80ac
@ 0x20d8050

.arm
branch_20d8050: @ 20d8050 :arm
	ldr     r0, [sp, #0x1c]
	str     r0, [r5]
	b       branch_20d80bc
@ 0x20d805c

.arm
branch_20d805c: @ 20d805c :arm
	ldr     r0, [sp, #0x1c]
	strb    r0, [r5]
	b       branch_20d80bc
@ 0x20d8068

.arm
branch_20d8068: @ 20d8068 :arm
	ldr     r0, [sp, #0x1c]
	strh    r0, [r5]
	b       branch_20d80bc
@ 0x20d8074

.arm
branch_20d8074: @ 20d8074 :arm
	ldr     r0, [sp, #0x1c]
	str     r0, [r5]
	b       branch_20d80bc
@ 0x20d8080

.arm
branch_20d8080: @ 20d8080 :arm
	ldr     r0, [sp, #0x20]
	str     r0, [r5]
	ldr     r0, [sp, #0x24]
	str     r0, [r5, #0x4]
	b       branch_20d80bc
@ 0x20d8094

.arm
branch_20d8094: @ 20d8094 :arm
	ldr     r0, [sp, #0x1c]
	str     r0, [r5]
	b       branch_20d80bc
@ 0x20d80a0

.arm
branch_20d80a0: @ 20d80a0 :arm
	ldr     r0, [sp, #0x1c]
	str     r0, [r5]
	b       branch_20d80bc
@ 0x20d80ac

.arm
branch_20d80ac: @ 20d80ac :arm
	ldr     r0, [sp, #0x20]
	str     r0, [r5]
	ldr     r0, [sp, #0x24]
	str     r0, [r5, #0x4]
.arm
branch_20d80bc: @ 20d80bc :arm
	ldr     r0, [sp, #0x30]
	cmp     r0, #0x0
	ldreq   r0, [sp, #0x44]
	addeq   r0, r0, #0x1
	streq   r0, [sp, #0x44]
.arm
branch_20d80d0: @ 20d80d0 :arm
	ldr     r0, [sp, #0x40]
	add     r0, r0, #0x1
	str     r0, [sp, #0x40]
	b       branch_20d88e0
@ 0x20d80e0

.arm
branch_20d80e0: @ 20d80e0 :arm
	mov     r0, #0x8
	b       branch_20d80f4
@ 0x20d80e8

.arm
branch_20d80e8: @ 20d80e8 :arm
	mov     r0, #0xa
	b       branch_20d80f4
@ 0x20d80f0

.arm
branch_20d80f0: @ 20d80f0 :arm
	mov     r0, #0x10
.arm
branch_20d80f4: @ 20d80f4 :arm
	ldr     r1, [sp, #0x30]
	cmp     r1, #0x0
	beq     branch_20d8114
	mov     r0, #0x0
	str     r0, [sp, #0x3c]
	str     r0, [sp, #0x34]
	str     r0, [sp, #0x18]
	b       branch_20d81ec
@ 0x20d8114

.arm
branch_20d8114: @ 20d8114 :arm
	ldrb    r1, [sp, #0x62]
	add     r2, sp, #0x5c
	cmp     r1, #0x7
	cmpne   r1, #0x4
	add     r1, sp, #0x58
	bne     branch_20d8158
	str     r2, [sp]
	str     r1, [sp, #0x4]
	add     r1, sp, #0x54
	str     r1, [sp, #0x8]
	ldr     r1, [sp, #0x64]
	mov     r2, r9
	mov     r3, r8
	bl      Function_20da840
	str     r0, [sp, #0x34]
	str     r1, [sp, #0x18]
	b       branch_20d817c
@ 0x20d8158

.arm
branch_20d8158: @ 20d8158 :arm
	str     r2, [sp]
	str     r1, [sp, #0x4]
	add     r1, sp, #0x54
	str     r1, [sp, #0x8]
	ldr     r1, [sp, #0x64]
	mov     r2, r9
	mov     r3, r8
	bl      Function_20da458
	str     r0, [sp, #0x3c]
.arm
branch_20d817c: @ 20d817c :arm
	ldr     r0, [sp, #0x5c]
	cmp     r0, #0x0
	bne     branch_20d81ac
	cmp     r10, #0x0
	beq     branch_20d88f0
	mov     r0, #0x1
	str     r0, [sp, #0x30]
	mov     r0, #0x0
	str     r0, [sp, #0x3c]
	str     r0, [sp, #0x34]
	str     r0, [sp, #0x18]
	b       branch_20d81ec
@ 0x20d81ac

.arm
branch_20d81ac: @ 20d81ac :arm
	add     r4, r4, r0
	ldr     r0, [sp, #0x58]
	cmp     r0, #0x0
	beq     branch_20d81ec
	ldrb    r0, [sp, #0x62]
	cmp     r0, #0x7
	ldrne   r0, [sp, #0x3c]
	rsbne   r0, r0, #0x0
	strne   r0, [sp, #0x3c]
	bne     branch_20d81ec
	ldr     r0, [sp, #0x34]
	rsbs    r0, r0, #0x0
	str     r0, [sp, #0x34]
	ldr     r0, [sp, #0x18]
	rsc     r0, r0, #0x0
	str     r0, [sp, #0x18]
.arm
branch_20d81ec: @ 20d81ec :arm
	cmp     r5, #0x0
	beq     branch_20d82a4
	ldrb    r0, [sp, #0x62]
	cmp     r0, #0x7
	addls   pc, pc, r0, lsl #2
	b       branch_20d8290
@ 0x20d8204

.arm
Function_20d8204: @ 20d8204 :arm
	b       branch_20d8224
@ 0x20d8208

.arm
Function_20d8208: @ 20d8208 :arm
	b       branch_20d8230
@ 0x20d820c

.arm
Function_20d820c: @ 20d820c :arm
	b       branch_20d823c
@ 0x20d8210

.arm
Function_20d8210: @ 20d8210 :arm
	b       branch_20d8248
@ 0x20d8214

.arm
Function_20d8214: @ 20d8214 :arm
	b       branch_20d8254
@ 0x20d8218

.arm
Function_20d8218: @ 20d8218 :arm
	b       branch_20d8268
@ 0x20d821c

.arm
Function_20d821c: @ 20d821c :arm
	b       branch_20d8274
@ 0x20d8220

.arm
Function_20d8220: @ 20d8220 :arm
	b       branch_20d8280
@ 0x20d8224

.arm
branch_20d8224: @ 20d8224 :arm
	ldr     r0, [sp, #0x3c]
	str     r0, [r5]
	b       branch_20d8290
@ 0x20d8230

.arm
branch_20d8230: @ 20d8230 :arm
	ldr     r0, [sp, #0x3c]
	strb    r0, [r5]
	b       branch_20d8290
@ 0x20d823c

.arm
branch_20d823c: @ 20d823c :arm
	ldr     r0, [sp, #0x3c]
	strh    r0, [r5]
	b       branch_20d8290
@ 0x20d8248

.arm
branch_20d8248: @ 20d8248 :arm
	ldr     r0, [sp, #0x3c]
	str     r0, [r5]
	b       branch_20d8290
@ 0x20d8254

.arm
branch_20d8254: @ 20d8254 :arm
	ldr     r0, [sp, #0x34]
	str     r0, [r5]
	ldr     r0, [sp, #0x18]
	str     r0, [r5, #0x4]
	b       branch_20d8290
@ 0x20d8268

.arm
branch_20d8268: @ 20d8268 :arm
	ldr     r0, [sp, #0x3c]
	str     r0, [r5]
	b       branch_20d8290
@ 0x20d8274

.arm
branch_20d8274: @ 20d8274 :arm
	ldr     r0, [sp, #0x3c]
	str     r0, [r5]
	b       branch_20d8290
@ 0x20d8280

.arm
branch_20d8280: @ 20d8280 :arm
	ldr     r0, [sp, #0x34]
	str     r0, [r5]
	ldr     r0, [sp, #0x18]
	str     r0, [r5, #0x4]
.arm
branch_20d8290: @ 20d8290 :arm
	ldr     r0, [sp, #0x30]
	cmp     r0, #0x0
	ldreq   r0, [sp, #0x44]
	addeq   r0, r0, #0x1
	streq   r0, [sp, #0x44]
.arm
branch_20d82a4: @ 20d82a4 :arm
	ldr     r0, [sp, #0x40]
	add     r0, r0, #0x1
	str     r0, [sp, #0x40]
	b       branch_20d88e0

branch_20d82b4: @ 20d82b4 :arm
	ldr     r0, [sp, #0x30]
	cmp     r0, #0x0
	beq     branch_20d82d0
	ldr     r0, [pc, #0x664] @ [0x20d892c] (=Unknown_21015b0)
	ldr     r0, [r0]
	bl      _f2d
	b       branch_20d831c

branch_20d82d0: @ 20d82d0 :arm
	add     r0, sp, #0x54
	str     r0, [sp]
	ldr     r0, [sp, #0x64]
	mov     r1, r9
	mov     r2, r8
	add     r3, sp, #0x5c
	bl      Function_20d911c
	ldr     r2, [sp, #0x5c]
	cmp     r2, #0x0
	bne     branch_20d8318
	cmp     r10, #0x0
	beq     branch_20d88f0
	mov     r0, #0x1
	str     r0, [sp, #0x30]
	ldr     r0, [pc, #0x61c] @ [0x20d892c] (=Unknown_21015b0)
	ldr     r0, [r0]
	bl      _f2d
	b       branch_20d831c
@ 0x20d8318

.arm
branch_20d8318: @ 20d8318 :arm
	add     r4, r4, r2
.arm
branch_20d831c: @ 20d831c :arm
	cmp     r5, #0x0
	beq     branch_20d8368
	ldrb    r2, [sp, #0x62]
	cmp     r2, #0x0
	beq     branch_20d8344
	cmp     r2, #0x8
	beq     branch_20d8350
	cmp     r2, #0x9
	stmeqia r5, {r0,r1}
	b       branch_20d8354
@ 0x20d8344

.arm
branch_20d8344: @ 20d8344 :arm
	bl      _d2f
	str     r0, [r5]
	b       branch_20d8354
@ 0x20d8350

.arm
branch_20d8350: @ 20d8350 :arm
	stmia   r5, {r0,r1}
.arm
branch_20d8354: @ 20d8354 :arm
	ldr     r0, [sp, #0x30]
	cmp     r0, #0x0
	ldreq   r0, [sp, #0x44]
	addeq   r0, r0, #0x1
	streq   r0, [sp, #0x44]
.arm
branch_20d8368: @ 20d8368 :arm
	ldr     r0, [sp, #0x40]
	add     r0, r0, #0x1
	str     r0, [sp, #0x40]
	b       branch_20d88e0
@ 0x20d8378

.arm
branch_20d8378: @ 20d8378 :arm
	ldrb    r0, [sp, #0x61]
	cmp     r0, #0x0
	moveq   r0, #0x1
	streq   r0, [sp, #0x64]
	cmp     r5, #0x0
	beq     branch_20d84c0
	cmp     r10, #0x0
	beq     branch_20d83ac
	ldr     r0, [sp, #0x10]
	mov     r7, #0x1
	add     r0, r0, #0x4
	ldr     r11, [r0, #-0x4]
	str     r0, [sp, #0x10]
.arm
branch_20d83ac: @ 20d83ac :arm
	ldr     r0, [sp, #0x30]
	mov     r1, #0x0
	cmp     r0, #0x0
	str     r1, [sp, #0x5c]
	beq     branch_20d83cc
	cmp     r11, #0x0
	strneb  r1, [r5]
	b       branch_20d88e0
@ 0x20d83cc

.arm
branch_20d83cc: @ 20d83cc :arm
	mvn     r0, #0x0
	str     r5, [sp, #0x2c]
	str     r0, [sp, #0x48]
	b       branch_20d8414
@ 0x20d83dc

.arm
branch_20d83dc: @ 20d83dc :arm
	ldrb    r0, [sp, #0x62]
	strb    r6, [sp, #0x50]
	cmp     r0, #0xa
	ldrnesb r0, [sp, #0x50]
	strneb  r0, [r5], #0x1
	bne     branch_20d8408
	mov     r0, r5
	add     r1, sp, #0x50
	mov     r2, #0x1
	bl      Function_20d4f34
	add     r5, r5, #0x1
.arm
branch_20d8408: @ 20d8408 :arm
	ldr     r0, [sp, #0x5c]
	add     r1, r0, #0x1
	str     r1, [sp, #0x5c]
.arm
branch_20d8414: @ 20d8414 :arm
	ldr     r0, [sp, #0x64]
	cmp     r0, #0x0
	sub     r0, r0, #0x1
	str     r0, [sp, #0x64]
	beq     branch_20d8464
	cmp     r10, #0x0
	beq     branch_20d8444
	cmp     r11, r1
	movhi   r7, #0x1
	movls   r7, #0x0
	cmp     r7, #0x0
	beq     branch_20d8464
.arm
branch_20d8444: @ 20d8444 :arm
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	blx     r9
	mov     r6, r0
	ldr     r0, [sp, #0x48]
	cmp     r6, r0
	bne     branch_20d83dc
.arm
branch_20d8464: @ 20d8464 :arm
	strb    r6, [sp, #0x50]
	ldr     r0, [sp, #0x5c]
	cmp     r0, #0x0
	beq     branch_20d8484
	cmp     r10, #0x0
	beq     branch_20d84ac
	cmp     r7, #0x0
	bne     branch_20d84ac
.arm
branch_20d8484: @ 20d8484 :arm
	cmp     r10, #0x0
	beq     branch_20d88f0
	mov     r0, #0x1
	cmp     r11, #0x0
	str     r0, [sp, #0x30]
	beq     branch_20d88e0
	ldr     r0, [sp, #0x2c]
	mov     r1, #0x0
	strb    r1, [r0]
	b       branch_20d88e0
@ 0x20d84ac

.arm
branch_20d84ac: @ 20d84ac :arm
	add     r4, r4, r0
	ldr     r0, [sp, #0x44]
	add     r0, r0, #0x1
	str     r0, [sp, #0x44]
	b       branch_20d8520
@ 0x20d84c0

.arm
branch_20d84c0: @ 20d84c0 :arm
	mov     r0, #0x0
	str     r0, [sp, #0x5c]
	mvn     r5, #0x0
	b       branch_20d84e0
@ 0x20d84d0

.arm
branch_20d84d0: @ 20d84d0 :arm
	strb    r6, [sp, #0x50]
	ldr     r0, [sp, #0x5c]
	add     r0, r0, #0x1
	str     r0, [sp, #0x5c]
.arm
branch_20d84e0: @ 20d84e0 :arm
	ldr     r0, [sp, #0x64]
	cmp     r0, #0x0
	sub     r0, r0, #0x1
	str     r0, [sp, #0x64]
	beq     branch_20d8510
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	blx     r9
	mov     r6, r0
	cmp     r6, r5
	bne     branch_20d84d0
.arm
branch_20d8510: @ 20d8510 :arm
	strb    r6, [sp, #0x50]
	ldr     r0, [sp, #0x5c]
	cmp     r0, #0x0
	beq     branch_20d88f0
.arm
branch_20d8520: @ 20d8520 :arm
	ldr     r0, [sp, #0x40]
	add     r0, r0, #0x1
	str     r0, [sp, #0x40]
	b       branch_20d88e0
@ 0x20d8530

.arm
branch_20d8530: @ 20d8530 :arm
	ldr     r0, [sp, #0x30]
	cmp     r0, #0x0
	bne     branch_20d88e0
	ldr     r5, [pc, #0x3e4] @ [0x20d8928] (=Unknown_20fe864)
	b       branch_20d8548
@ 0x20d8544

.arm
branch_20d8544: @ 20d8544 :arm
	add     r4, r4, #0x1
.arm
branch_20d8548: @ 20d8548 :arm
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	blx     r9
	strb    r0, [sp, #0x50]
	ldrsb   r1, [sp, #0x50]
	cmp     r1, #0x0
	blt     branch_20d8570
	cmp     r1, #0x80
	blt     branch_20d8578
.arm
branch_20d8570: @ 20d8570 :arm
	mov     r0, #0x0
	b       branch_20d8584
@ 0x20d8578

.arm
branch_20d8578: @ 20d8578 :arm
	mov     r0, r1, lsl #1
	ldrh    r0, [r5, r0]
	and     r0, r0, #1, 24 @ #0x100
.arm
branch_20d8584: @ 20d8584 :arm
	cmp     r0, #0x0
	bne     branch_20d8544
	cmp     r1, #0x25
	beq     branch_20d85b4
	mov     r0, r8
	mov     r2, #0x1
	blx     r9
	cmp     r10, #0x0
	beq     branch_20d88f0
	mov     r0, #0x1
	str     r0, [sp, #0x30]
	b       branch_20d88e0
@ 0x20d85b4

.arm
branch_20d85b4: @ 20d85b4 :arm
	add     r4, r4, #0x1
	b       branch_20d88e0
@ 0x20d85bc

.arm
branch_20d85bc: @ 20d85bc :arm
	ldr     r0, [sp, #0x30]
	cmp     r0, #0x0
	bne     branch_20d8638
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	blx     r9
	strb    r0, [sp, #0x50]
	b       branch_20d85f8
@ 0x20d85e0

.arm
branch_20d85e0: @ 20d85e0 :arm
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	add     r4, r4, #0x1
	blx     r9
	strb    r0, [sp, #0x50]
.arm
branch_20d85f8: @ 20d85f8 :arm
	ldrsb   r1, [sp, #0x50]
	cmp     r1, #0x0
	blt     branch_20d860c
	cmp     r1, #0x80
	blt     branch_20d8614
.arm
branch_20d860c: @ 20d860c :arm
	mov     r0, #0x0
	b       branch_20d8624
@ 0x20d8614

.arm
branch_20d8614: @ 20d8614 :arm
	ldr     r0, [pc, #0x30c] @ [0x20d8928] (=Unknown_20fe864)
	mov     r2, r1, lsl #1
	ldrh    r0, [r0, r2]
	and     r0, r0, #1, 24 @ #0x100
.arm
branch_20d8624: @ 20d8624 :arm
	cmp     r0, #0x0
	bne     branch_20d85e0
	mov     r0, r8
	mov     r2, #0x1
	blx     r9
.arm
branch_20d8638: @ 20d8638 :arm
	cmp     r5, #0x0
	beq     branch_20d87b4
	cmp     r10, #0x0
	beq     branch_20d8660
	ldr     r0, [sp, #0x10]
	mov     r7, #0x1
	add     r0, r0, #0x4
	str     r0, [sp, #0x10]
	ldr     r0, [r0, #-0x4]
	sub     r11, r0, #0x1
.arm
branch_20d8660: @ 20d8660 :arm
	ldr     r0, [sp, #0x30]
	mov     r1, #0x0
	cmp     r0, #0x0
	str     r1, [sp, #0x5c]
	beq     branch_20d8680
	cmp     r11, #0x0
	strneb  r1, [r5]
	b       branch_20d88e0
@ 0x20d8680

.arm
branch_20d8680: @ 20d8680 :arm
	mvn     r0, #0x0
	str     r5, [sp, #0x28]
	str     r0, [sp, #0x4c]
	b       branch_20d86e4
@ 0x20d8690

.arm
branch_20d8690: @ 20d8690 :arm
	strb    r6, [sp, #0x50]
	ldrsb   r1, [sp, #0x50]
	add     r2, sp, #0x60
	and     r3, r1, #0xff
	add     r2, r2, r3, asr #3
	ldrb    r3, [r2, #0x8]
	and     r0, r1, #0x7
	mov     r2, #0x1
	tst     r3, r2, lsl r0
	beq     branch_20d8734
	ldrb    r0, [sp, #0x62]
	cmp     r0, #0xa
	strneb  r1, [r5], #0x1
	bne     branch_20d86d8
	mov     r0, r5
	add     r1, sp, #0x50
	bl      Function_20d4f34
	add     r5, r5, #0x2
.arm
branch_20d86d8: @ 20d86d8 :arm
	ldr     r0, [sp, #0x5c]
	add     r1, r0, #0x1
	str     r1, [sp, #0x5c]
.arm
branch_20d86e4: @ 20d86e4 :arm
	ldr     r0, [sp, #0x64]
	cmp     r0, #0x0
	sub     r0, r0, #0x1
	str     r0, [sp, #0x64]
	beq     branch_20d8734
	cmp     r10, #0x0
	beq     branch_20d8714
	cmp     r11, r1
	movcs   r7, #0x1
	movcc   r7, #0x0
	cmp     r7, #0x0
	beq     branch_20d8734
.arm
branch_20d8714: @ 20d8714 :arm
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	blx     r9
	mov     r6, r0
	ldr     r0, [sp, #0x4c]
	cmp     r6, r0
	bne     branch_20d8690
.arm
branch_20d8734: @ 20d8734 :arm
	strb    r6, [sp, #0x50]
	ldr     r0, [sp, #0x5c]
	cmp     r0, #0x0
	beq     branch_20d8754
	cmp     r10, #0x0
	beq     branch_20d878c
	cmp     r7, #0x0
	bne     branch_20d878c
.arm
branch_20d8754: @ 20d8754 :arm
	mov     r0, r8
	ldrsb   r1, [sp, #0x50]
	mov     r2, #0x1
	blx     r9
	cmp     r10, #0x0
	beq     branch_20d88f0
	mov     r0, #0x1
	cmp     r11, #0x0
	str     r0, [sp, #0x30]
	beq     branch_20d88e0
	ldr     r0, [sp, #0x28]
	mov     r1, #0x0
	strb    r1, [r0]
	b       branch_20d88e0
@ 0x20d878c

.arm
branch_20d878c: @ 20d878c :arm
	add     r4, r4, r0
	ldrb    r0, [sp, #0x62]
	cmp     r0, #0xa
	mov     r0, #0x0
	streqh  r0, [r5]
	strneb  r0, [r5]
	ldr     r0, [sp, #0x44]
	add     r0, r0, #0x1
	str     r0, [sp, #0x44]
	b       branch_20d8850
@ 0x20d87b4

.arm
branch_20d87b4: @ 20d87b4 :arm
	mov     r0, #0x0
	str     r0, [sp, #0x5c]
	mvn     r5, #0x0
	b       branch_20d87f8
@ 0x20d87c4

.arm
branch_20d87c4: @ 20d87c4 :arm
	strb    r6, [sp, #0x50]
	ldrsb   r1, [sp, #0x50]
	and     r0, r1, #0x7
	and     r2, r1, #0xff
	add     r1, sp, #0x60
	add     r1, r1, r2, asr #3
	ldrb    r2, [r1, #0x8]
	mov     r1, #0x1
	tst     r2, r1, lsl r0
	beq     branch_20d8828
	ldr     r0, [sp, #0x5c]
	add     r0, r0, #0x1
	str     r0, [sp, #0x5c]
.arm
branch_20d87f8: @ 20d87f8 :arm
	ldr     r0, [sp, #0x64]
	cmp     r0, #0x0
	sub     r0, r0, #0x1
	str     r0, [sp, #0x64]
	beq     branch_20d8828
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	blx     r9
	mov     r6, r0
	cmp     r6, r5
	bne     branch_20d87c4
.arm
branch_20d8828: @ 20d8828 :arm
	strb    r6, [sp, #0x50]
	ldr     r0, [sp, #0x5c]
	cmp     r0, #0x0
	bne     branch_20d884c
	mov     r0, r8
	ldrsb   r1, [sp, #0x50]
	mov     r2, #0x1
	blx     r9
	b       branch_20d88e0
@ 0x20d884c

.arm
branch_20d884c: @ 20d884c :arm
	add     r4, r4, r0
.arm
branch_20d8850: @ 20d8850 :arm
	ldr     r0, [sp, #0x64]
	cmp     r0, #0x0
	blt     branch_20d886c
	mov     r0, r8
	ldrsb   r1, [sp, #0x50]
	mov     r2, #0x1
	blx     r9
.arm
branch_20d886c: @ 20d886c :arm
	ldr     r0, [sp, #0x40]
	add     r0, r0, #0x1
	str     r0, [sp, #0x40]
	b       branch_20d88e0
@ 0x20d887c

.arm
branch_20d887c: @ 20d887c :arm
	cmp     r5, #0x0
	beq     branch_20d88e0
	ldrb    r0, [sp, #0x62]
	cmp     r0, #0x7
	addls   pc, pc, r0, lsl #2
	b       branch_20d88e0
@ 0x20d8894

.arm
Function_20d8894: @ 20d8894 :arm
	b       branch_20d88b4
@ 0x20d8898

.arm
Function_20d8898: @ 20d8898 :arm
	b       branch_20d88cc
@ 0x20d889c

.arm
Function_20d889c: @ 20d889c :arm
	b       branch_20d88bc
@ 0x20d88a0

.arm
Function_20d88a0: @ 20d88a0 :arm
	b       branch_20d88c4
@ 0x20d88a4

.arm
Function_20d88a4: @ 20d88a4 :arm
	b       branch_20d88e0
@ 0x20d88a8

.arm
Function_20d88a8: @ 20d88a8 :arm
	b       branch_20d88e0
@ 0x20d88ac

.arm
Function_20d88ac: @ 20d88ac :arm
	b       branch_20d88e0
@ 0x20d88b0

.arm
Function_20d88b0: @ 20d88b0 :arm
	b       branch_20d88d4
@ 0x20d88b4

.arm
branch_20d88b4: @ 20d88b4 :arm
	str     r4, [r5]
	b       branch_20d88e0
@ 0x20d88bc

.arm
branch_20d88bc: @ 20d88bc :arm
	strh    r4, [r5]
	b       branch_20d88e0
@ 0x20d88c4

.arm
branch_20d88c4: @ 20d88c4 :arm
	str     r4, [r5]
	b       branch_20d88e0
@ 0x20d88cc

.arm
branch_20d88cc: @ 20d88cc :arm
	strb    r4, [r5]
	b       branch_20d88e0
@ 0x20d88d4

.arm
branch_20d88d4: @ 20d88d4 :arm
	str     r4, [r5]
	mov     r0, r4, asr #31
	str     r0, [r5, #0x4]
.arm
branch_20d88e0: @ 20d88e0 :arm
	ldr     r0, [sp, #0xc]
	ldrsb   r5, [r0]
	cmp     r5, #0x0
	bne     branch_20d7c24
.arm
branch_20d88f0: @ 20d88f0 :arm
	mov     r0, r8
	mov     r1, #0x0
	mov     r2, #0x2
	blx     r9
	cmp     r0, #0x0
	beq     branch_20d891c
	ldr     r0, [sp, #0x40]
	cmp     r0, #0x0
	addeq   sp, sp, #0x88
	mvneq   r0, #0x0
	ldmeqfd sp!, {r3-r11,pc}

branch_20d891c: @ 20d891c :arm
	ldr     r0, [sp, #0x44]
	add     sp, sp, #0x88
	ldmfd   sp!, {r3-r11,pc}
@ 0x20d8928

.word Unknown_20fe864 @ 0x20d8928
.word Unknown_21015b0 @ 0x20d892c



.arm
Function_20d8930: @ 20d8930 :arm
	cmp     r2, #0x0
	beq     branch_20d894c
	cmp     r2, #0x1
	beq     branch_20d897c
	cmp     r2, #0x2
	beq     branch_20d89a4
	b       branch_20d89ac
@ 0x20d894c

.arm
branch_20d894c: @ 20d894c :arm
	ldr     r1, [r0]
	ldrsb   r2, [r1]
	cmp     r2, #0x0
	bne     branch_20d896c
	mov     r1, #0x1
	str     r1, [r0, #0x4]
	sub     r0, r1, #0x2
	bx      lr
@ 0x20d896c

.arm
branch_20d896c: @ 20d896c :arm
	add     r1, r1, #0x1
	str     r1, [r0]
	and     r0, r2, #0xff
	bx      lr
@ 0x20d897c

.arm
branch_20d897c: @ 20d897c :arm
	ldr     r2, [r0, #0x4]
	cmp     r2, #0x0
	movne   r2, #0x0
	strne   r2, [r0, #0x4]
	bne     branch_20d899c
	ldr     r2, [r0]
	sub     r2, r2, #0x1
	str     r2, [r0]
.arm
branch_20d899c: @ 20d899c :arm
	mov     r0, r1
	bx      lr
@ 0x20d89a4

.arm
branch_20d89a4: @ 20d89a4 :arm
	ldr     r0, [r0, #0x4]
	bx      lr
@ 0x20d89ac

.arm
branch_20d89ac: @ 20d89ac :arm
	mov     r0, #0x0
	bx      lr
@ 0x20d89b4

.arm
Function_20d89b4: @ 20d89b4 :arm
	stmfd   sp!, {lr}
	sub     sp, sp, #0xc
	str     r0, [sp, #0x4]
	cmp     r0, #0x0
	ldrnesb r0, [r0]
	mov     lr, r1
	mov     r3, r2
	cmpne   r0, #0x0
	addeq   sp, sp, #0xc
	mvneq   r0, #0x0
	ldmeqfd sp!, {pc}
	mov     r12, #0x0
	str     r12, [sp, #0x8]
	ldr     r0, [pc, #0x14] @ [0x20d8a04] (=0x20d8930)
	add     r1, sp, #0x4
	mov     r2, lr
	str     r12, [sp]
	bl      Function_20d7bdc
	add     sp, sp, #0xc
	ldmfd   sp!, {pc}
@ 0x20d8a04

.word Function_20d8930 @ =0x20d8930, 0x20d8a04



.arm
.globl Function_20d8a08
Function_20d8a08: @ 20d8a08 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r3,lr}
	add     r2, sp, #0xc
	bic     r2, r2, #0x3
	ldr     r1, [sp, #0xc]
	add     r2, r2, #0x4
	bl      Function_20d89b4
	ldmfd   sp!, {r3,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20d8a30


.arm
Function_20d8a30: @ 20d8a30 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r5, r0
	cmp     r5, #0x1
	blt     branch_20d8a48
	cmp     r5, #0x7
	ble     branch_20d8a50
.arm
branch_20d8a48: @ 20d8a48 :arm
	mvn     r0, #0x0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20d8a50

.arm
branch_20d8a50: @ 20d8a50 :arm
	ldr     r0, [pc, #0xf4] @ [0x20d8b4c] (=RAM_21d0a10)
	bl      OS_TryLockMutex
	cmp     r0, #0x0
	bne     branch_20d8a84
	ldr     r0, [pc, #0xe8] @ [0x20d8b50] (=RAM_21ccc80)
	ldr     r1, [pc, #0xe8] @ [0x20d8b54] (=RAM_21d0920)
	ldr     r2, [r0, #0x4]
	ldr     r0, [pc, #0xe4] @ [0x20d8b58] (=RAM_21d0944)
	ldr     r3, [r2, #0x6c]
	mov     r2, #0x1
	str     r3, [r1, #0x1c]
	str     r2, [r0, #0x1c]
	b       branch_20d8adc
@ 0x20d8a84

.arm
branch_20d8a84: @ 20d8a84 :arm
	ldr     r0, [pc, #0xc4] @ [0x20d8b50] (=RAM_21ccc80)
	ldr     r1, [pc, #0xc4] @ [0x20d8b54] (=RAM_21d0920)
	ldr     r0, [r0, #0x4]
	ldr     r1, [r1, #0x1c]
	ldr     r0, [r0, #0x6c]
	cmp     r1, r0
	bne     branch_20d8ab4
	ldr     r0, [pc, #0xb0] @ [0x20d8b58] (=RAM_21d0944)
	ldr     r1, [r0, #0x1c]
	add     r1, r1, #0x1
	str     r1, [r0, #0x1c]
	b       branch_20d8adc
@ 0x20d8ab4

.arm
branch_20d8ab4: @ 20d8ab4 :arm
	ldr     r0, [pc, #0x90] @ [0x20d8b4c] (=RAM_21d0a10)
	bl      OS_LockMutex
	ldr     r0, [pc, #0x8c] @ [0x20d8b50] (=RAM_21ccc80)
	ldr     r1, [pc, #0x8c] @ [0x20d8b54] (=RAM_21d0920)
	ldr     r2, [r0, #0x4]
	ldr     r0, [pc, #0x88] @ [0x20d8b58] (=RAM_21d0944)
	ldr     r3, [r2, #0x6c]
	mov     r2, #0x1
	str     r3, [r1, #0x1c]
	str     r2, [r0, #0x1c]
.arm
branch_20d8adc: @ 20d8adc :arm
	ldr     r1, [pc, #0x78] @ [0x20d8b5c] (=RAM_21d0d44)
	sub     r2, r5, #0x1
	ldr     r4, [r1, r2, lsl #0x2]
	cmp     r4, #0x1
	movne   r0, #0x0
	strne   r0, [r1, r2, lsl #0x2]
	ldr     r0, [pc, #0x5c] @ [0x20d8b58] (=RAM_21d0944)
	ldr     r1, [r0, #0x1c]
	subs    r1, r1, #0x1
	str     r1, [r0, #0x1c]
	bne     branch_20d8b10
	ldr     r0, [pc, #0x3c] @ [0x20d8b4c] (=RAM_21d0a10)
	bl      OS_UnlockMutex
.arm
branch_20d8b10: @ 20d8b10 :arm
	cmp     r4, #0x1
	beq     branch_20d8b24
	cmp     r4, #0x0
	cmpeq   r5, #0x1
	bne     branch_20d8b2c
.arm
branch_20d8b24: @ 20d8b24 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20d8b2c

.arm
branch_20d8b2c: @ 20d8b2c :arm
	cmp     r4, #0x0
	bne     branch_20d8b3c
	mov     r0, #0x0
	bl      Function_20d3dc4
branch_20d8b3c: @ 20d8b3c :arm
	mov     r0, r5
	blx     r4
	mov     r0, #0x0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20d8b4c

.word RAM_21d0a10 @ 0x20d8b4c
.word RAM_21ccc80 @ 0x20d8b50
.word RAM_21d0920 @ 0x20d8b54
.word RAM_21d0944 @ 0x20d8b58
.word RAM_21d0d44 @ 0x20d8b5c



.arm
.globl Function_20d8b60
Function_20d8b60: @ 20d8b60 :arm
	mvn     r2, #0x0
branch_20d8b64: @ 20d8b64 :arm
	ldrsb   r1, [r0], #0x1
	add     r2, r2, #0x1
	cmp     r1, #0x0
	bne     branch_20d8b64
	mov     r0, r2
	bx      lr
@ 0x20d8b7c


.arm
.globl Function_20d8b7c
Function_20d8b7c: @ 20d8b7c :arm
	stmfd   sp!, {r3-r5,lr}
	and     r4, r1, #0x3
	and     r3, r0, #0x3
	mov     r2, r0
	cmp     r3, r4
	bne     branch_20d8c18
	cmp     r4, #0x0
	beq     branch_20d8bd4
	ldrb    r3, [r1]
	strb    r3, [r0]
	cmp     r3, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	rsbs    r4, r4, #0x3
	beq     branch_20d8bcc
.arm
branch_20d8bb4: @ 20d8bb4 :arm
	ldrb    r3, [r1, #0x1]!
	cmp     r3, #0x0
	strb    r3, [r2, #0x1]!
	ldmeqfd sp!, {r3-r5,pc}
	subs    r4, r4, #0x1
	bne     branch_20d8bb4
.arm
branch_20d8bcc: @ 20d8bcc :arm
	add     r2, r2, #0x1
	add     r1, r1, #0x1
.arm
branch_20d8bd4: @ 20d8bd4 :arm
	ldr     r5, [r1]
	ldr     r3, [pc, #0x5c] @ [0x20d8c3c] (=0xfefefeff)
	mvn     r4, r5
	add     lr, r5, r3
	ldr     r12, [pc, #0x54] @ [0x20d8c40] (=0x80808080)
	and     r4, lr, r4
	tst     r4, r12
	bne     branch_20d8c18
	sub     r2, r2, #0x4
.arm
branch_20d8bf8: @ 20d8bf8 :arm
	str     r5, [r2, #0x4]!
	ldr     r5, [r1, #0x4]!
	add     r4, r5, r3
	mvn     lr, r5
	and     lr, r4, lr
	tst     lr, r12
	beq     branch_20d8bf8
	add     r2, r2, #0x4
.arm
branch_20d8c18: @ 20d8c18 :arm
	ldrb    r3, [r1]
	strb    r3, [r2]
	cmp     r3, #0x0
	ldmeqfd sp!, {r3-r5,pc}
.arm
branch_20d8c28: @ 20d8c28 :arm
	ldrb    r3, [r1, #0x1]!
	cmp     r3, #0x0
	strb    r3, [r2, #0x1]!
	bne     branch_20d8c28
	ldmfd   sp!, {r3-r5,pc}
@ 0x20d8c3c

.word 0xfefefeff @ 0x20d8c3c
.word 0x80808080 @ 0x20d8c40



.arm
.globl Function_20d8c44
Function_20d8c44: @ 20d8c44 :arm
	stmfd   sp!, {r3,lr}
	mov     lr, r0
	cmp     r2, #0x0
	ldmeqfd sp!, {r3,pc}
.arm
branch_20d8c54: @ 20d8c54 :arm
	ldrsb   r3, [r1], #0x1
	mov     r12, lr
	strb    r3, [lr], #0x1
	ldrsb   r3, [r12]
	cmp     r3, #0x0
	bne     branch_20d8c88
	subs    r2, r2, #0x1
	ldmeqfd sp!, {r3,pc}
	mov     r1, #0x0
.arm
branch_20d8c78: @ 20d8c78 :arm
	strb    r1, [lr], #0x1
	subs    r2, r2, #0x1
	bne     branch_20d8c78
	ldmfd   sp!, {r3,pc}
@ 0x20d8c88

.arm
branch_20d8c88: @ 20d8c88 :arm
	subs    r2, r2, #0x1
	bne     branch_20d8c54
	ldmfd   sp!, {r3,pc}
@ 0x20d8c94


.arm
.globl Function_20d8c94
Function_20d8c94: @ 20d8c94 :arm
	mov     r3, r0
branch_20d8c98: @ 20d8c98 :arm
	ldrsb   r2, [r3], #0x1
	cmp     r2, #0x0
	bne     branch_20d8c98
	sub     r3, r3, #0x1
branch_20d8ca8: @ 20d8ca8 :arm
	ldrsb   r2, [r1], #0x1
	mov     r12, r3
	strb    r2, [r3], #0x1
	ldrsb   r2, [r12]
	cmp     r2, #0x0
	bne     branch_20d8ca8
	bx      lr
@ 0x20d8cc4


.arm
.globl Function_20d8cc4
Function_20d8cc4: @ 20d8cc4 :arm
	stmfd   sp!, {r3,lr}
	mov     r12, r0
.arm
branch_20d8ccc: @ 20d8ccc :arm
	ldrsb   r3, [r12], #0x1
	cmp     r3, #0x0
	bne     branch_20d8ccc
	cmp     r2, #0x0
	sub     r12, r12, #0x1
	beq     branch_20d8d08
.arm
branch_20d8ce4: @ 20d8ce4 :arm
	ldrsb   r3, [r1], #0x1
	mov     lr, r12
	strb    r3, [r12], #0x1
	ldrsb   r3, [lr]
	cmp     r3, #0x0
	subeq   r12, r12, #0x1
	beq     branch_20d8d08
	subs    r2, r2, #0x1
	bne     branch_20d8ce4
.arm
branch_20d8d08: @ 20d8d08 :arm
	mov     r1, #0x0
	strb    r1, [r12]
	ldmfd   sp!, {r3,pc}
@ 0x20d8d14


.arm
.globl Function_20d8d14
Function_20d8d14: @ 20d8d14 :arm
	stmfd   sp!, {r4,lr}
	ldrb    r2, [r0]
	ldrb    r3, [r1]
	subs    r3, r2, r3
	movne   r0, r3
	ldmnefd sp!, {r4,pc}
	and     r4, r0, #0x3
	and     r3, r1, #0x3
	cmp     r3, r4
	bne     branch_20d8df0
	cmp     r4, #0x0
	beq     branch_20d8d88
	cmp     r2, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4,pc}
	rsbs    r4, r4, #0x3
	beq     branch_20d8d80
.arm
branch_20d8d58: @ 20d8d58 :arm
	ldrb    r3, [r0, #0x1]!
	ldrb    r2, [r1, #0x1]!
	subs    r2, r3, r2
	movne   r0, r2
	ldmnefd sp!, {r4,pc}
	cmp     r3, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4,pc}
	subs    r4, r4, #0x1
	bne     branch_20d8d58
.arm
branch_20d8d80: @ 20d8d80 :arm
	add     r0, r0, #0x1
	add     r1, r1, #0x1
.arm
branch_20d8d88: @ 20d8d88 :arm
	ldr     r2, [r0]
	ldr     r3, [pc, #0x8c] @ [0x20d8e20] (=0xfefefeff)
	mvn     r4, r2
	add     lr, r2, r3
	ldr     r12, [pc, #0x84] @ [0x20d8e24] (=0x80808080)
	and     r4, lr, r4
	tst     r4, r12
	ldr     r4, [r1]
	bne     branch_20d8ddc
	cmp     r2, r4
	bne     branch_20d8dd0
.arm
branch_20d8db4: @ 20d8db4 :arm
	ldr     r2, [r0, #0x4]!
	ldr     r4, [r1, #0x4]!
	add     lr, r2, r3
	tst     lr, r12
	bne     branch_20d8ddc
	cmp     r2, r4
	beq     branch_20d8db4
.arm
branch_20d8dd0: @ 20d8dd0 :arm
	sub     r0, r0, #0x1
	sub     r1, r1, #0x1
	b       branch_20d8df0
@ 0x20d8ddc

.arm
branch_20d8ddc: @ 20d8ddc :arm
	ldrb    r2, [r0]
	ldrb    r3, [r1]
	subs    r3, r2, r3
	movne   r0, r3
	ldmnefd sp!, {r4,pc}
.arm
branch_20d8df0: @ 20d8df0 :arm
	cmp     r2, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r4,pc}
.arm
branch_20d8dfc: @ 20d8dfc :arm
	ldrb    r3, [r0, #0x1]!
	ldrb    r2, [r1, #0x1]!
	subs    r2, r3, r2
	movne   r0, r2
	ldmnefd sp!, {r4,pc}
	cmp     r3, #0x0
	bne     branch_20d8dfc
	mov     r0, #0x0
	ldmfd   sp!, {r4,pc}
@ 0x20d8e20

.word 0xfefefeff @ 0x20d8e20
.word 0x80808080 @ 0x20d8e24



.arm
.globl Function_20d8e28
Function_20d8e28: @ 20d8e28 :arm
	cmp     r2, #0x0
	beq     branch_20d8e54
branch_20d8e30: @ 20d8e30 :arm
	ldrb    r12, [r1], #0x1
	ldrb    r3, [r0], #0x1
	cmp     r3, r12
	subne   r0, r3, r12
	bxne    lr
	cmp     r3, #0x0
	beq     branch_20d8e54
	subs    r2, r2, #0x1
	bne     branch_20d8e30
branch_20d8e54: @ 20d8e54 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20d8e5c


.arm
.globl Function_20d8e5c
Function_20d8e5c: @ 20d8e5c :arm
	ldrsb   r2, [r0], #0x1
	mov     r1, r1, lsl #24
	mov     r1, r1, asr #24
	cmp     r2, #0x0
	beq     branch_20d8e88
branch_20d8e70: @ 20d8e70 :arm
	cmp     r2, r1
	subeq   r0, r0, #0x1
	bxeq    lr
	ldrsb   r2, [r0], #0x1
	cmp     r2, #0x0
	bne     branch_20d8e70
.arm
branch_20d8e88: @ 20d8e88 :arm
	cmp     r1, #0x0
	movne   r0, #0x0
	subeq   r0, r0, #0x1
	bx      lr
@ 0x20d8e98


.arm
.globl Function_20d8e98
Function_20d8e98: @ 20d8e98 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #0x20
	add     r12, sp, #0x0
	mov     r3, #0x8
	mov     r2, #0x0
.arm
branch_20d8eac: @ 20d8eac :arm
	strb    r2, [r12]
	strb    r2, [r12, #0x1]
	strb    r2, [r12, #0x2]
	strb    r2, [r12, #0x3]
	add     r12, r12, #0x4
	subs    r3, r3, #0x1
	bne     branch_20d8eac
	ldrb    r3, [r1]
	add     r4, r1, #0x1
	cmp     r3, #0x0
	beq     branch_20d8f08
	add     lr, sp, #0x0
	mov     r2, #0x1
.arm
branch_20d8ee0: @ 20d8ee0 :arm
	and     r12, r3, #0xff
	and     r1, r3, #0x7
	mov     r1, r2, lsl r1
	ldrb    r3, [lr, r12, asr #0x3]
	and     r1, r1, #0xff
	orr     r1, r3, r1
	strb    r1, [lr, r12, asr #0x3]
	ldrb    r3, [r4], #0x1
	cmp     r3, #0x0
	bne     branch_20d8ee0
.arm
branch_20d8f08: @ 20d8f08 :arm
	ldrb    r1, [r0]
	add     r4, r0, #0x1
	cmp     r1, #0x0
	beq     branch_20d8f48
	add     r12, sp, #0x0
	mov     r2, #0x1
.arm
branch_20d8f20: @ 20d8f20 :arm
	and     r3, r1, #0xff
	and     r1, r1, #0x7
	mov     r1, r2, lsl r1
	ldrb    r3, [r12, r3, asr #0x3]
	and     r1, r1, #0xff
	tst     r3, r1
	bne     branch_20d8f48
	ldrb    r1, [r4], #0x1
	cmp     r1, #0x0
	bne     branch_20d8f20

branch_20d8f48: @ 20d8f48 :arm
	sub     r0, r4, r0
	sub     r0, r0, #0x1
	add     sp, sp, #0x20
	ldmfd   sp!, {r4,pc}
@ 0x20d8f58


.arm
.globl Function_20d8f58
Function_20d8f58: @ 20d8f58 :arm
	stmfd   sp!, {r4,lr}
	sub     sp, sp, #0x20
	add     r12, sp, #0x0
	mov     r3, #0x8
	mov     r2, #0x0
branch_20d8f6c: @ 20d8f6c :arm
	strb    r2, [r12]
	strb    r2, [r12, #0x1]
	strb    r2, [r12, #0x2]
	strb    r2, [r12, #0x3]
	add     r12, r12, #0x4
	subs    r3, r3, #0x1
	bne     branch_20d8f6c
	cmp     r0, #0x0
	ldrne   r2, [pc, #0x118] @ [0x20d90ac] (=Unknown_2101820)
	add     lr, r1, #0x1
	strne   r0, [r2, #0x4]
	ldrb    r0, [r1]
	cmp     r0, #0x0
	beq     branch_20d8fd4
	add     r12, sp, #0x0
	mov     r1, #0x1
branch_20d8fac: @ 20d8fac :arm
	and     r3, r0, #0xff
	and     r0, r0, #0x7
	mov     r0, r1, lsl r0
	ldrb    r2, [r12, r3, asr #0x3]
	and     r0, r0, #0xff
	orr     r0, r2, r0
	strb    r0, [r12, r3, asr #0x3]
	ldrb    r0, [lr], #0x1
	cmp     r0, #0x0
	bne     branch_20d8fac
branch_20d8fd4: @ 20d8fd4 :arm
	ldr     r0, [pc, #0xd0] @ [0x20d90ac] (=Unknown_2101820)
	ldr     r0, [r0, #0x4]
	ldrb    r4, [r0]
	add     r1, r0, #0x1
	cmp     r4, #0x0
	beq     branch_20d9018
	add     r12, sp, #0x0
	mov     r2, #0x1
branch_20d8ff4: @ 20d8ff4 :arm
	and     r3, r4, #0xff
	and     r0, r4, #0x7
	mov     r0, r2, lsl r0
	ldrb    r3, [r12, r3, asr #0x3]
	and     r0, r0, #0xff
	tst     r3, r0
	ldrneb  r4, [r1], #0x1
	cmpne   r4, #0x0
	bne     branch_20d8ff4
branch_20d9018: @ 20d9018 :arm
	cmp     r4, #0x0
	bne     branch_20d9038
	ldr     r1, [pc, #0x84] @ [0x20d90ac] (=Unknown_2101820)
	add     sp, sp, #0x20
	ldr     r2, [r1]
	mov     r0, #0x0
	str     r2, [r1, #0x4]
	ldmfd   sp!, {r4,pc}

branch_20d9038: @ 20d9038 :arm
	sub     r0, r1, #0x1
	ldrb    r4, [r1], #0x1
	cmp     r4, #0x0
	beq     branch_20d9078
	add     lr, sp, #0x0
	mov     r3, #0x1
branch_20d9050: @ 20d9050 :arm
	and     r12, r4, #0xff
	and     r2, r4, #0x7
	mov     r2, r3, lsl r2
	ldrb    r12, [lr, r12, asr #0x3]
	and     r2, r2, #0xff
	tst     r12, r2
	bne     branch_20d9078
	ldrb    r4, [r1], #0x1
	cmp     r4, #0x0
	bne     branch_20d9050
.arm
branch_20d9078: @ 20d9078 :arm
	cmp     r4, #0x0
	bne     branch_20d9094
	ldr     r1, [pc, #0x24] @ [0x20d90ac] (=Unknown_2101820)
	add     sp, sp, #0x20
	ldr     r2, [r1]
	str     r2, [r1, #0x4]
	ldmfd   sp!, {r4,pc}

branch_20d9094: @ 20d9094 :arm
	ldr     r2, [pc, #0x10] @ [0x20d90ac] (=Unknown_2101820)
	mov     r3, #0x0
	str     r1, [r2, #0x4]
	strb    r3, [r1, #-0x1]
	add     sp, sp, #0x20
	ldmfd   sp!, {r4,pc}
@ 0x20d90ac

.word Unknown_2101820 @ 0x20d90ac



.arm
.globl Function_20d90b0
Function_20d90b0: @ 20d90b0 :arm
	stmfd   sp!, {r4,lr}
	cmp     r1, #0x0
	ldrneb  r2, [r1]
	cmpne   r2, #0x0
	ldmeqfd sp!, {r4,pc}
	ldrb    r3, [r0]
	add     r4, r0, #0x1
	cmp     r3, #0x0
	beq     branch_20d9114
.arm
branch_20d90d4: @ 20d90d4 :arm
	cmp     r3, r2
	bne     branch_20d9108
	mov     lr, r4
	add     r12, r1, #0x1
.arm
branch_20d90e4: @ 20d90e4 :arm
	ldrb    r3, [r12], #0x1
	ldrb    r0, [lr], #0x1
	cmp     r0, r3
	bne     branch_20d90fc
	cmp     r0, #0x0
	bne     branch_20d90e4
.arm
branch_20d90fc: @ 20d90fc :arm
	cmp     r3, #0x0
	subeq   r0, r4, #0x1
	ldmeqfd sp!, {r4,pc}
.arm
branch_20d9108: @ 20d9108 :arm
	ldrb    r3, [r4], #0x1
	cmp     r3, #0x0
	bne     branch_20d90d4
.arm
branch_20d9114: @ 20d9114 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4,pc}
@ 0x20d911c


.arm
Function_20d911c: @ 20d911c :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0xa8
	ldr     r4, [sp, #0xd0]
	mov     r10, #0x0
	str     r4, [sp, #0xd0]
	str     r0, [sp]
	add     r6, sp, #0x80
	mov     r9, r1
	mov     r8, r2
	str     r3, [sp, #0x4]
	mov     r4, r10
	str     r10, [sp, #0x2c]
	mov     r5, #0x1
	mov     r0, #0x4
.arm
branch_20d9154: @ 20d9154 :arm
	strh    r10, [r6]
	strh    r10, [r6, #0x2]
	strh    r10, [r6, #0x4]
	strh    r10, [r6, #0x6]
	add     r6, r6, #0x8
	subs    r0, r0, #0x1
	bne     branch_20d9154
	mov     r0, #0x0
	str     r0, [sp, #0x28]
	strh    r10, [r6]
	strh    r10, [r6, #0x2]
	ldr     r2, [sp, #0x28]
	ldr     r1, [sp, #0xd0]
	strh    r10, [r6, #0x4]
	str     r2, [r1]
	mov     r1, r2
	mov     r0, r8
	str     r1, [sp, #0x24]
	str     r1, [sp, #0x20]
	str     r1, [sp, #0x1c]
	str     r1, [sp, #0x18]
	str     r1, [sp, #0x10]
	str     r1, [sp, #0xc]
	str     r1, [sp, #0x8]
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	ldr     r7, [pc, #0xf34] @ [0x20da0fc] (=Unknown_20fe98c)
	add     r0, sp, #0x4d
	mov     r6, #0x4
branch_20d91cc: @ 20d91cc :arm
	ldrb    r3, [r7]
	ldrb    r2, [r7, #0x1]
	add     r7, r7, #0x2
	strb    r3, [r0]
	strb    r2, [r0, #0x1]
	add     r0, r0, #0x2
	subs    r6, r6, #0x1
	bne     branch_20d91cc
	ldrb    r3, [r7]
	ldr     r2, [pc, #0xf08] @ [0x20da100] (=Unknown_20fe98c)
	strb    r3, [r0]
	ldrb    r3, [r2, #0x1]
	ldrb    r0, [r2, #0x2]
	ldrb    r6, [r2]
	strb    r3, [sp, #0x31]
	strb    r0, [sp, #0x32]
	ldrb    r3, [r2, #0x3]
	ldrb    r0, [r2, #0x4]
	strb    r6, [sp, #0x30]
	strb    r3, [sp, #0x33]
	strb    r0, [sp, #0x34]
	b       branch_20d9f10
@ 0x20d9224

.arm
branch_20d9224: @ 20d9224 :arm
	cmp     r5, #1, 24 @ #0x100
	bgt     branch_20d929c
	bge     branch_20d99a4
	cmp     r5, #0x20
	bgt     branch_20d9280
	bge     branch_20d9878
	cmp     r5, #0x8
	bgt     branch_20d9274
	cmp     r5, #0x0
	addge   pc, pc, r5, lsl #2
	b       branch_20d9f10
@ 0x20d9250

.arm
Function_20d9250: @ 20d9250 :arm
	b       branch_20d9f10
@ 0x20d9254

.arm
Function_20d9254: @ 20d9254 :arm
	b       branch_20d92e0
@ 0x20d9258

.arm
Function_20d9258: @ 20d9258 :arm
	b       branch_20d96c4
@ 0x20d925c

.arm
Function_20d925c: @ 20d925c :arm
	b       branch_20d9f10
@ 0x20d9260

.arm
Function_20d9260: @ 20d9260 :arm
	b       branch_20d9774
@ 0x20d9264

.arm
Function_20d9264: @ 20d9264 :arm
	b       branch_20d9f10
@ 0x20d9268

.arm
Function_20d9268: @ 20d9268 :arm
	b       branch_20d9f10
@ 0x20d926c

.arm
Function_20d926c: @ 20d926c :arm
	b       branch_20d9f10
@ 0x20d9270

.arm
Function_20d9270: @ 20d9270 :arm
	b       branch_20d979c
@ 0x20d9274

.arm
branch_20d9274: @ 20d9274 :arm
	cmp     r5, #0x10
	beq     branch_20d9840
	b       branch_20d9f10
@ 0x20d9280

.arm
branch_20d9280: @ 20d9280 :arm
	cmp     r5, #0x40
	bgt     branch_20d9290
	beq     branch_20d9904
	b       branch_20d9f10
@ 0x20d9290

.arm
branch_20d9290: @ 20d9290 :arm
	cmp     r5, #0x80
	beq     branch_20d9950
	b       branch_20d9f10
@ 0x20d929c

.arm
branch_20d929c: @ 20d929c :arm
	cmp     r5, #2, 20 @ #0x2000
	bgt     branch_20d92c4
	bge     branch_20d94f8
	cmp     r5, #2, 24 @ #0x200
	bgt     branch_20d92b8
	beq     branch_20d9a04
	b       branch_20d9f10
@ 0x20d92b8

.arm
branch_20d92b8: @ 20d92b8 :arm
	cmp     r5, #1, 22 @ #0x400
	beq     branch_20d9a2c
	b       branch_20d9f10
@ 0x20d92c4

.arm
branch_20d92c4: @ 20d92c4 :arm
	cmp     r5, #1, 18 @ #0x4000
	bgt     branch_20d92d4
	beq     branch_20d9400
	b       branch_20d9f10
@ 0x20d92d4

.arm
branch_20d92d4: @ 20d92d4 :arm
	cmp     r5, #2, 18 @ #0x8000
	beq     branch_20d9aa4
	b       branch_20d9f10
@ 0x20d92e0

.arm
branch_20d92e0: @ 20d92e0 :arm
	cmp     r1, #0x0
	blt     branch_20d92f0
	cmp     r1, #0x80
	blt     branch_20d92f8
.arm
branch_20d92f0: @ 20d92f0 :arm
	mov     r0, #0x0
	b       branch_20d9308
@ 0x20d92f8

.arm
branch_20d92f8: @ 20d92f8 :arm
	mov     r2, r1, lsl #1
	ldr     r0, [pc, #0xe00] @ [0x20da104] (=Unknown_20fe864)
	ldrh    r0, [r0, r2]
	and     r0, r0, #1, 24 @ #0x100
.arm
branch_20d9308: @ 20d9308 :arm
	cmp     r0, #0x0
	beq     branch_20d9334
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	blx     r9
	mov     r1, r0
	ldr     r0, [sp, #0x2c]
	add     r0, r0, #0x1
	str     r0, [sp, #0x2c]
	b       branch_20d9f10
@ 0x20d9334

.arm
branch_20d9334: @ 20d9334 :arm
	cmp     r1, #0x0
	blt     branch_20d9344
	cmp     r1, #0x80
	blt     branch_20d934c
.arm
branch_20d9344: @ 20d9344 :arm
	mov     r0, r1
	b       branch_20d9354
@ 0x20d934c

.arm
branch_20d934c: @ 20d934c :arm
	ldr     r0, [pc, #0xdb4] @ [0x20da108] (=Unknown_20fe7e4)
	ldrb    r0, [r0, r1]
.arm
branch_20d9354: @ 20d9354 :arm
	cmp     r0, #0x49
	bgt     branch_20d9380
	bge     branch_20d93b8
	cmp     r0, #0x2d
	bgt     branch_20d93f8
	cmp     r0, #0x2b
	blt     branch_20d93f8
	beq     branch_20d9394
	cmp     r0, #0x2d
	beq     branch_20d938c
	b       branch_20d93f8
@ 0x20d9380

.arm
branch_20d9380: @ 20d9380 :arm
	cmp     r0, #0x4e
	beq     branch_20d93d8
	b       branch_20d93f8
@ 0x20d938c

.arm
branch_20d938c: @ 20d938c :arm
	mov     r0, #0x1
	str     r0, [sp, #0x28]
.arm
branch_20d9394: @ 20d9394 :arm
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	mov     r0, #0x1
	str     r0, [sp, #0x18]
	b       branch_20d9f10
@ 0x20d93b8

.arm
branch_20d93b8: @ 20d93b8 :arm
	add     r4, r4, #0x1
	mov     r0, r8
	mov     r1, #0x0
	mov     r2, r1
	blx     r9
	mov     r1, r0
	mov     r5, #1, 18 @ #0x4000
	b       branch_20d9f10
@ 0x20d93d8

.arm
branch_20d93d8: @ 20d93d8 :arm
	add     r4, r4, #0x1
	mov     r0, r8
	mov     r1, #0x0
	mov     r2, r1
	blx     r9
	mov     r1, r0
	mov     r5, #2, 20 @ #0x2000
	b       branch_20d9f10
@ 0x20d93f8

.arm
branch_20d93f8: @ 20d93f8 :arm
	mov     r5, #0x2
	b       branch_20d9f10
@ 0x20d9400

.arm
branch_20d9400: @ 20d9400 :arm
	mov     r5, #0x1
	add     r7, sp, #0x4d
	add     r0, sp, #0x76
	mov     r6, #0x4
.arm
branch_20d9410: @ 20d9410 :arm
	ldrb    r3, [r7]
	ldrb    r2, [r7, #0x1]
	add     r7, r7, #0x2
	strb    r3, [r0]
	strb    r2, [r0, #0x1]
	add     r0, r0, #0x2
	subs    r6, r6, #0x1
	bne     branch_20d9410
	ldrb    r2, [r7]
	add     r6, sp, #0x77
	ldr     r7, [pc, #0xcc8] @ [0x20da108] (=Unknown_20fe7e4)
	strb    r2, [r0]
	b       branch_20d9464
@ 0x20d9444

.arm
branch_20d9444: @ 20d9444 :arm
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	add     r6, r6, #0x1
	add     r5, r5, #0x1
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
.arm
branch_20d9464: @ 20d9464 :arm
	cmp     r5, #0x8
	bge     branch_20d9494
	cmp     r1, #0x0
	blt     branch_20d947c
	cmp     r1, #0x80
	blt     branch_20d9484
.arm
branch_20d947c: @ 20d947c :arm
	mov     r2, r1
	b       branch_20d9488
@ 0x20d9484

.arm
branch_20d9484: @ 20d9484 :arm
	ldrb    r2, [r7, r1]
.arm
branch_20d9488: @ 20d9488 :arm
	ldrsb   r0, [r6]
	cmp     r0, r2
	beq     branch_20d9444
.arm
branch_20d9494: @ 20d9494 :arm
	cmp     r5, #0x3
	cmpne   r5, #0x8
	bne     branch_20d94f0
	ldr     r0, [sp, #0x28]
	cmp     r0, #0x0
	beq     branch_20d94c4
	ldr     r1, [pc, #0xc58] @ [0x20da10c] (=Unknown_21015ac)
	mov     r0, #0x0
	ldr     r1, [r1]
	bl      _fsub
	bl      _f2d
	b       branch_20d94d0

branch_20d94c4: @ 20d94c4 :arm
	ldr     r0, [pc, #0xc40] @ [0x20da10c] (=Unknown_21015ac)
	ldr     r0, [r0]
	bl      _f2d
branch_20d94d0: @ 20d94d0 :arm
	ldr     r2, [sp, #0x2c]
	add     r3, r2, r5
	ldr     r2, [sp, #0x18]
	add     r3, r2, r3
	ldr     r2, [sp, #0x4]
	add     sp, sp, #0xa8
	str     r3, [r2]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20d94f0

.arm
branch_20d94f0: @ 20d94f0 :arm
	mov     r5, #1, 20 @ #0x1000
	b       branch_20d9f10
@ 0x20d94f8

.arm
branch_20d94f8: @ 20d94f8 :arm
	ldrb    r3, [sp, #0x30]
	ldrb    r0, [sp, #0x32]
	ldrb    r2, [sp, #0x31]
	strb    r3, [sp, #0x40]
	strb    r0, [sp, #0x42]
	ldrb    r3, [sp, #0x33]
	ldrb    r0, [sp, #0x34]
	strb    r2, [sp, #0x41]
	mov     r5, #0x1
	strb    r0, [sp, #0x44]
	mov     r6, #0x0
	add     r2, sp, #0x56
	strb    r3, [sp, #0x43]
	mov     r0, #0x8
.arm
branch_20d9530: @ 20d9530 :arm
	strb    r6, [r2]
	strb    r6, [r2, #0x1]
	strb    r6, [r2, #0x2]
	strb    r6, [r2, #0x3]
	add     r2, r2, #0x4
	subs    r0, r0, #0x1
	bne     branch_20d9530
	add     r7, sp, #0x41
	b       branch_20d9574
@ 0x20d9554

.arm
branch_20d9554: @ 20d9554 :arm
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	add     r7, r7, #0x1
	add     r5, r5, #0x1
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
.arm
branch_20d9574: @ 20d9574 :arm
	cmp     r5, #0x4
	bge     branch_20d95a8
	cmp     r1, #0x0
	blt     branch_20d958c
	cmp     r1, #0x80
	blt     branch_20d9594
.arm
branch_20d958c: @ 20d958c :arm
	mov     r2, r1
	b       branch_20d959c
@ 0x20d9594

.arm
branch_20d9594: @ 20d9594 :arm
	ldr     r0, [pc, #0xb6c] @ [0x20da108] (=Unknown_20fe7e4)
	ldrb    r2, [r0, r1]
.arm
branch_20d959c: @ 20d959c :arm
	ldrsb   r0, [r7]
	cmp     r0, r2
	beq     branch_20d9554
.arm
branch_20d95a8: @ 20d95a8 :arm
	sub     r0, r5, #0x3
	cmp     r0, #0x1
	bhi     branch_20d96bc
	cmp     r5, #0x4
	bne     branch_20d9660
	ldr     r7, [pc, #0xb40] @ [0x20da104] (=Unknown_20fe864)
	b       branch_20d95e8
@ 0x20d95c4

.arm
branch_20d95c4: @ 20d95c4 :arm
	add     r0, sp, #0x56
	strb    r1, [r0, r6]
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	add     r6, r6, #0x1
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
.arm
branch_20d95e8: @ 20d95e8 :arm
	cmp     r6, #0x20
	bge     branch_20d9650
	cmp     r1, #0x0
	blt     branch_20d9600
	cmp     r1, #0x80
	blt     branch_20d9608
.arm
branch_20d9600: @ 20d9600 :arm
	mov     r0, #0x0
	b       branch_20d9614
@ 0x20d9608

.arm
branch_20d9608: @ 20d9608 :arm
	mov     r0, r1, lsl #1
	ldrh    r0, [r7, r0]
	and     r0, r0, #0x8
.arm
branch_20d9614: @ 20d9614 :arm
	cmp     r0, #0x0
	bne     branch_20d95c4
	cmp     r1, #0x0
	blt     branch_20d962c
	cmp     r1, #0x80
	blt     branch_20d9634
.arm
branch_20d962c: @ 20d962c :arm
	mov     r0, #0x0
	b       branch_20d9640
@ 0x20d9634

.arm
branch_20d9634: @ 20d9634 :arm
	mov     r0, r1, lsl #1
	ldrh    r0, [r7, r0]
	and     r0, r0, #0x1
.arm
branch_20d9640: @ 20d9640 :arm
	cmp     r0, #0x0
	bne     branch_20d95c4
	cmp     r1, #0x2e
	beq     branch_20d95c4
.arm
branch_20d9650: @ 20d9650 :arm
	cmp     r1, #0x29
	movne   r5, #1, 20 @ #0x1000
	bne     branch_20d9f10
	add     r6, r6, #0x1
.arm
branch_20d9660: @ 20d9660 :arm
	add     r0, sp, #0x56
	mov     r1, #0x0
	strb    r1, [r0, r6]
	ldr     r1, [sp, #0x28]
	cmp     r1, #0x0
	beq     branch_20d9694
	bl      Function_20d3f38
	mov     r2, r0
	mov     r0, #0x0
	mov     r3, r1
	mov     r1, r0
	bl      _dsub
	b       branch_20d9698
@ 0x20d9694

.arm
branch_20d9694: @ 20d9694 :arm
	bl      Function_20d3f38
.arm
branch_20d9698: @ 20d9698 :arm
	ldr     r2, [sp, #0x2c]
	add     r2, r2, r5
	add     r3, r6, r2
	ldr     r2, [sp, #0x18]
	add     r3, r2, r3
	ldr     r2, [sp, #0x4]
	add     sp, sp, #0xa8
	str     r3, [r2]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20d96bc

.arm
branch_20d96bc: @ 20d96bc :arm
	mov     r5, #1, 20 @ #0x1000
	b       branch_20d9f10
@ 0x20d96c4

.arm
branch_20d96c4: @ 20d96c4 :arm
	cmp     r1, #0x2e
	bne     branch_20d96ec
	mov     r5, #0x10
	add     r4, r4, #0x1
	mov     r0, r8
	mov     r1, #0x0
	mov     r2, r1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d96ec

.arm
branch_20d96ec: @ 20d96ec :arm
	cmp     r1, #0x0
	blt     branch_20d96fc
	cmp     r1, #0x80
	blt     branch_20d9704
.arm
branch_20d96fc: @ 20d96fc :arm
	mov     r0, #0x0
	b       branch_20d9714
@ 0x20d9704

.arm
branch_20d9704: @ 20d9704 :arm
	mov     r2, r1, lsl #1
	ldr     r0, [pc, #0x9f4] @ [0x20da104] (=Unknown_20fe864)
	ldrh    r0, [r0, r2]
	and     r0, r0, #0x8
.arm
branch_20d9714: @ 20d9714 :arm
	cmp     r0, #0x0
	moveq   r5, #1, 20 @ #0x1000
	beq     branch_20d9f10
	cmp     r1, #0x30
	bne     branch_20d976c
	add     r4, r4, #0x1
	mov     r0, r8
	mov     r1, #0x0
	mov     r2, r1
	blx     r9
	cmp     r0, #0x0
	mov     r1, r0
	blt     branch_20d9758
	cmp     r0, #0x80
	bge     branch_20d9758
	ldr     r2, [pc, #0x9b0] @ [0x20da108] (=Unknown_20fe7e4)
	ldrb    r0, [r2, r0]
.arm
branch_20d9758: @ 20d9758 :arm
	cmp     r0, #0x58
	moveq   r5, #2, 18 @ #0x8000
	moveq   r10, #0x1
	movne   r5, #0x4
	b       branch_20d9f10
@ 0x20d976c

.arm
branch_20d976c: @ 20d976c :arm
	mov     r5, #0x8
	b       branch_20d9f10
@ 0x20d9774

.arm
branch_20d9774: @ 20d9774 :arm
	cmp     r1, #0x30
	movne   r5, #0x8
	bne     branch_20d9f10
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d979c

.arm
branch_20d979c: @ 20d979c :arm
	cmp     r1, #0x0
	blt     branch_20d97ac
	cmp     r1, #0x80
	blt     branch_20d97b4
.arm
branch_20d97ac: @ 20d97ac :arm
	mov     r0, #0x0
	b       branch_20d97c4
@ 0x20d97b4

.arm
branch_20d97b4: @ 20d97b4 :arm
	mov     r2, r1, lsl #1
	ldr     r0, [pc, #0x944] @ [0x20da104] (=Unknown_20fe864)
	ldrh    r0, [r0, r2]
	and     r0, r0, #0x8
.arm
branch_20d97c4: @ 20d97c4 :arm
	cmp     r0, #0x0
	bne     branch_20d97f8
	cmp     r1, #0x2e
	movne   r5, #0x40
	bne     branch_20d9f10
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	mov     r5, #0x20
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d97f8

.arm
branch_20d97f8: @ 20d97f8 :arm
	ldrb    r2, [sp, #0x84]
	cmp     r2, #0x14
	ldrcs   r0, [sp, #0x1c]
	addcs   r0, r0, #0x1
	strcs   r0, [sp, #0x1c]
	bhs     branch_20d9824
	add     r0, r2, #0x1
	strb    r0, [sp, #0x84]
	add     r0, sp, #0x80
	add     r0, r0, r2
	strb    r1, [r0, #0x5]
.arm
branch_20d9824: @ 20d9824 :arm
	add     r4, r4, #0x1
	mov     r0, r8
	mov     r1, #0x0
	mov     r2, r1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9840

.arm
branch_20d9840: @ 20d9840 :arm
	cmp     r1, #0x0
	blt     branch_20d9850
	cmp     r1, #0x80
	blt     branch_20d9858
.arm
branch_20d9850: @ 20d9850 :arm
	mov     r0, #0x0
	b       branch_20d9868
@ 0x20d9858

.arm
branch_20d9858: @ 20d9858 :arm
	mov     r2, r1, lsl #1
	ldr     r0, [pc, #0x8a0] @ [0x20da104] (=Unknown_20fe864)
	ldrh    r0, [r0, r2]
	and     r0, r0, #0x8
.arm
branch_20d9868: @ 20d9868 :arm
	cmp     r0, #0x0
	moveq   r5, #1, 20 @ #0x1000
	movne   r5, #0x20
	b       branch_20d9f10
@ 0x20d9878

.arm
branch_20d9878: @ 20d9878 :arm
	cmp     r1, #0x0
	blt     branch_20d9888
	cmp     r1, #0x80
	blt     branch_20d9890
.arm
branch_20d9888: @ 20d9888 :arm
	mov     r0, #0x0
	b       branch_20d98a0
@ 0x20d9890

.arm
branch_20d9890: @ 20d9890 :arm
	mov     r2, r1, lsl #1
	ldr     r0, [pc, #0x868] @ [0x20da104] (=Unknown_20fe864)
	ldrh    r0, [r0, r2]
	and     r0, r0, #0x8
.arm
branch_20d98a0: @ 20d98a0 :arm
	cmp     r0, #0x0
	moveq   r5, #0x40
	beq     branch_20d9f10
	ldrb    r3, [sp, #0x84]
	cmp     r3, #0x14
	bhs     branch_20d98e8
	cmp     r1, #0x30
	cmpeq   r3, #0x0
	beq     branch_20d98dc
	ldrb    r2, [sp, #0x84]
	add     r0, sp, #0x80
	add     r0, r0, r3
	add     r2, r2, #0x1
	strb    r2, [sp, #0x84]
	strb    r1, [r0, #0x5]
.arm
branch_20d98dc: @ 20d98dc :arm
	ldr     r0, [sp, #0x1c]
	sub     r0, r0, #0x1
	str     r0, [sp, #0x1c]
.arm
branch_20d98e8: @ 20d98e8 :arm
	add     r4, r4, #0x1
	mov     r0, r8
	mov     r1, #0x0
	mov     r2, r1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9904

.arm
branch_20d9904: @ 20d9904 :arm
	cmp     r1, #0x0
	blt     branch_20d9914
	cmp     r1, #0x80
	blt     branch_20d991c
.arm
branch_20d9914: @ 20d9914 :arm
	mov     r0, r1
	b       branch_20d9924
@ 0x20d991c

.arm
branch_20d991c: @ 20d991c :arm
	ldr     r0, [pc, #0x7e4] @ [0x20da108] (=Unknown_20fe7e4)
	ldrb    r0, [r0, r1]
.arm
branch_20d9924: @ 20d9924 :arm
	cmp     r0, #0x45
	movne   r5, #2, 22 @ #0x800
	bne     branch_20d9f10
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	mov     r5, #0x80
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9950

.arm
branch_20d9950: @ 20d9950 :arm
	cmp     r1, #0x2b
	bne     branch_20d9974
	add     r4, r4, #0x1
	mov     r0, r8
	mov     r1, #0x0
	mov     r2, r1
	blx     r9
	mov     r1, r0
	b       branch_20d999c
@ 0x20d9974

.arm
branch_20d9974: @ 20d9974 :arm
	cmp     r1, #0x2d
	bne     branch_20d999c
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	mov     r0, #0x1
	str     r0, [sp, #0x24]
.arm
branch_20d999c: @ 20d999c :arm
	mov     r5, #1, 24 @ #0x100
	b       branch_20d9f10
@ 0x20d99a4

.arm
branch_20d99a4: @ 20d99a4 :arm
	cmp     r1, #0x0
	blt     branch_20d99b4
	cmp     r1, #0x80
	blt     branch_20d99bc
.arm
branch_20d99b4: @ 20d99b4 :arm
	mov     r0, #0x0
	b       branch_20d99cc
@ 0x20d99bc

.arm
branch_20d99bc: @ 20d99bc :arm
	mov     r2, r1, lsl #1
	ldr     r0, [pc, #0x73c] @ [0x20da104] (=Unknown_20fe864)
	ldrh    r0, [r0, r2]
	and     r0, r0, #0x8
.arm
branch_20d99cc: @ 20d99cc :arm
	cmp     r0, #0x0
	moveq   r5, #1, 20 @ #0x1000
	beq     branch_20d9f10
	cmp     r1, #0x30
	movne   r5, #1, 22 @ #0x400
	bne     branch_20d9f10
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	mov     r5, #2, 24 @ #0x200
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9a04

.arm
branch_20d9a04: @ 20d9a04 :arm
	cmp     r1, #0x30
	movne   r5, #1, 22 @ #0x400
	bne     branch_20d9f10
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9a2c

.arm
branch_20d9a2c: @ 20d9a2c :arm
	cmp     r1, #0x0
	blt     branch_20d9a3c
	cmp     r1, #0x80
	blt     branch_20d9a44
.arm
branch_20d9a3c: @ 20d9a3c :arm
	mov     r0, #0x0
	b       branch_20d9a54
@ 0x20d9a44

.arm
branch_20d9a44: @ 20d9a44 :arm
	mov     r2, r1, lsl #1
	ldr     r0, [pc, #0x6b4] @ [0x20da104] (=Unknown_20fe864)
	ldrh    r0, [r0, r2]
	and     r0, r0, #0x8
.arm
branch_20d9a54: @ 20d9a54 :arm
	cmp     r0, #0x0
	moveq   r5, #2, 22 @ #0x800
	beq     branch_20d9f10
	ldr     r0, [sp, #0x20]
	sub     r2, r1, #0x30
	mov     r1, #0xa
	mla     r0, r1, r0, r2
	ldr     r1, [pc, #0x698] @ [0x20da110] (=0x7fff)
	str     r0, [sp, #0x20]
	cmp     r0, r1
	ldrgt   r0, [sp, #0xd0]
	movgt   r1, #0x1
	strgt   r1, [r0]
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9aa4

.arm
branch_20d9aa4: @ 20d9aa4 :arm
	cmp     r10, #0x20
	bgt     branch_20d9af4
	bge     branch_20d9dc8
	cmp     r10, #0x8
	bgt     branch_20d9ae8
	cmp     r10, #0x0
	addge   pc, pc, r10, lsl #2
	b       branch_20d9f10
@ 0x20d9ac4

.arm
Function_20d9ac4: @ 20d9ac4 :arm
	b       branch_20d9f10
@ 0x20d9ac8

.arm
Function_20d9ac8: @ 20d9ac8 :arm
	b       branch_20d9b18
@ 0x20d9acc

.arm
Function_20d9acc: @ 20d9acc :arm
	b       branch_20d9b68
@ 0x20d9ad0

.arm
Function_20d9ad0: @ 20d9ad0 :arm
	b       branch_20d9f10
@ 0x20d9ad4

.arm
Function_20d9ad4: @ 20d9ad4 :arm
	b       branch_20d9b90
@ 0x20d9ad8

.arm
Function_20d9ad8: @ 20d9ad8 :arm
	b       branch_20d9f10
@ 0x20d9adc

.arm
Function_20d9adc: @ 20d9adc :arm
	b       branch_20d9f10
@ 0x20d9ae0

.arm
Function_20d9ae0: @ 20d9ae0 :arm
	b       branch_20d9f10
@ 0x20d9ae4

.arm
Function_20d9ae4: @ 20d9ae4 :arm
	b       branch_20d9ca0
@ 0x20d9ae8

.arm
branch_20d9ae8: @ 20d9ae8 :arm
	cmp     r10, #0x10
	beq     branch_20d9d7c
	b       branch_20d9f10
@ 0x20d9af4

.arm
branch_20d9af4: @ 20d9af4 :arm
	cmp     r10, #0x80
	bgt     branch_20d9b0c
	bge     branch_20d9e70
	cmp     r10, #0x40
	beq     branch_20d9e10
	b       branch_20d9f10
@ 0x20d9b0c

.arm
branch_20d9b0c: @ 20d9b0c :arm
	cmp     r10, #1, 24 @ #0x100
	beq     branch_20d9e98
	b       branch_20d9f10
@ 0x20d9b18

.arm
branch_20d9b18: @ 20d9b18 :arm
	mov     r1, #0x0
	add     r0, sp, #0x45
	str     r0, [sp, #0x14]
	strb    r1, [r0]
	strb    r1, [r0, #0x1]
	strb    r1, [r0, #0x2]
	strb    r1, [r0, #0x3]
	strb    r1, [r0, #0x4]
	strb    r1, [r0, #0x5]
	strb    r1, [r0, #0x6]
	strb    r1, [r0, #0x7]
	mov     r0, r8
	mov     r2, r1
	str     r1, [sp, #0x8]
	mov     r11, r1
	mov     r10, #0x2
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9b68

.arm
branch_20d9b68: @ 20d9b68 :arm
	cmp     r1, #0x30
	movne   r10, #0x4
	bne     branch_20d9f10
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9b90

.arm
branch_20d9b90: @ 20d9b90 :arm
	cmp     r1, #0x0
	blt     branch_20d9ba0
	cmp     r1, #0x80
	blt     branch_20d9ba8
.arm
branch_20d9ba0: @ 20d9ba0 :arm
	mov     r0, #0x0
	b       branch_20d9bb8
@ 0x20d9ba8

.arm
branch_20d9ba8: @ 20d9ba8 :arm
	mov     r2, r1, lsl #1
	ldr     r0, [pc, #0x550] @ [0x20da104] (=Unknown_20fe864)
	ldrh    r0, [r0, r2]
	and     r0, r0, #1, 22 @ #0x400
.arm
branch_20d9bb8: @ 20d9bb8 :arm
	cmp     r0, #0x0
	bne     branch_20d9bec
	cmp     r1, #0x2e
	movne   r10, #0x10
	bne     branch_20d9f10
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	mov     r10, #0x8
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9bec

.arm
branch_20d9bec: @ 20d9bec :arm
	ldr     r2, [sp, #0x8]
	mov     r0, #0xe
	cmp     r2, r0
	bhs     branch_20d9c84
	mov     r0, r2
	add     r0, r0, #0x1
	str     r0, [sp, #0x8]
	ldr     r0, [sp, #0x14]
	add     r2, r11, r11, lsr #31
	cmp     r1, #0x0
	ldrb    r0, [r0, r2, asr #0x1]
	blt     branch_20d9c2c
	cmp     r1, #0x80
	bge     branch_20d9c2c
	ldr     r2, [pc, #0x4dc] @ [0x20da108] (=Unknown_20fe7e4)
	ldrb    r1, [r2, r1]
.arm
branch_20d9c2c: @ 20d9c2c :arm
	cmp     r1, #0x41
	subge   r1, r1, #0x37
	sublt   r1, r1, #0x30
	mov     r2, r11, lsr #31
	and     r3, r1, #0xff
	rsb     r1, r2, r11, lsl #31
	adds    r1, r2, r1, ror #31
	moveq   r1, r3, lsl #4
	add     r2, r11, r11, lsr #31
	orrne   r0, r0, r3
	andeq   r1, r1, #0xff
	orreq   r0, r0, r1
	ldr     r1, [sp, #0x14]
	add     r11, r11, #0x1
	strb    r0, [r1, r2, asr #0x1]
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9c84

.arm
branch_20d9c84: @ 20d9c84 :arm
	add     r4, r4, #0x1
	mov     r0, r8
	mov     r1, #0x0
	mov     r2, r1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9ca0

.arm
branch_20d9ca0: @ 20d9ca0 :arm
	cmp     r1, #0x0
	blt     branch_20d9cb0
	cmp     r1, #0x80
	blt     branch_20d9cb8
.arm
branch_20d9cb0: @ 20d9cb0 :arm
	mov     r0, #0x0
	b       branch_20d9cc8
@ 0x20d9cb8

.arm
branch_20d9cb8: @ 20d9cb8 :arm
	mov     r2, r1, lsl #1
	ldr     r0, [pc, #0x440] @ [0x20da104] (=Unknown_20fe864)
	ldrh    r0, [r0, r2]
	and     r0, r0, #1, 22 @ #0x400
.arm
branch_20d9cc8: @ 20d9cc8 :arm
	cmp     r0, #0x0
	moveq   r10, #0x10
	beq     branch_20d9f10
	ldr     r2, [sp, #0x8]
	mov     r0, #0xe
	cmp     r2, r0
	bhs     branch_20d9d60
	ldr     r0, [sp, #0x14]
	add     r2, r11, r11, lsr #31
	cmp     r1, #0x0
	ldrb    r0, [r0, r2, asr #0x1]
	blt     branch_20d9d08
	cmp     r1, #0x80
	bge     branch_20d9d08
	ldr     r2, [pc, #0x400] @ [0x20da108] (=Unknown_20fe7e4)
	ldrb    r1, [r2, r1]
.arm
branch_20d9d08: @ 20d9d08 :arm
	cmp     r1, #0x41
	subge   r1, r1, #0x37
	sublt   r1, r1, #0x30
	mov     r2, r11, lsr #31
	and     r3, r1, #0xff
	rsb     r1, r2, r11, lsl #31
	adds    r1, r2, r1, ror #31
	moveq   r1, r3, lsl #4
	add     r2, r11, r11, lsr #31
	orrne   r0, r0, r3
	andeq   r1, r1, #0xff
	orreq   r0, r0, r1
	ldr     r1, [sp, #0x14]
	add     r11, r11, #0x1
	strb    r0, [r1, r2, asr #0x1]
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9d60

.arm
branch_20d9d60: @ 20d9d60 :arm
	add     r4, r4, #0x1
	mov     r0, r8
	mov     r1, #0x0
	mov     r2, r1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9d7c

.arm
branch_20d9d7c: @ 20d9d7c :arm
	cmp     r1, #0x0
	blt     branch_20d9d8c
	cmp     r1, #0x80
	blt     branch_20d9d94
.arm
branch_20d9d8c: @ 20d9d8c :arm
	mov     r0, r1
	b       branch_20d9d9c
@ 0x20d9d94

.arm
branch_20d9d94: @ 20d9d94 :arm
	ldr     r0, [pc, #0x36c] @ [0x20da108] (=Unknown_20fe7e4)
	ldrb    r0, [r0, r1]
.arm
branch_20d9d9c: @ 20d9d9c :arm
	cmp     r0, #0x50
	movne   r5, #2, 22 @ #0x800
	bne     branch_20d9f10
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	mov     r10, #0x20
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9dc8

.arm
branch_20d9dc8: @ 20d9dc8 :arm
	cmp     r1, #0x2d
	moveq   r0, #0x1
	streq   r0, [sp, #0xc]
	beq     branch_20d9df0
	cmp     r1, #0x2b
	beq     branch_20d9df0
	mov     r0, r8
	mov     r2, #0x1
	blx     r9
	sub     r4, r4, #0x1
.arm
branch_20d9df0: @ 20d9df0 :arm
	mov     r10, #0x40
	add     r4, r4, #0x1
	mov     r0, r8
	mov     r1, #0x0
	mov     r2, r1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9e10

.arm
branch_20d9e10: @ 20d9e10 :arm
	cmp     r1, #0x0
	blt     branch_20d9e20
	cmp     r1, #0x80
	blt     branch_20d9e28
.arm
branch_20d9e20: @ 20d9e20 :arm
	mov     r0, #0x0
	b       branch_20d9e38
@ 0x20d9e28

.arm
branch_20d9e28: @ 20d9e28 :arm
	mov     r2, r1, lsl #1
	ldr     r0, [pc, #0x2d0] @ [0x20da104] (=Unknown_20fe864)
	ldrh    r0, [r0, r2]
	and     r0, r0, #0x8
.arm
branch_20d9e38: @ 20d9e38 :arm
	cmp     r0, #0x0
	moveq   r5, #1, 20 @ #0x1000
	beq     branch_20d9f10
	cmp     r1, #0x30
	movne   r10, #1, 24 @ #0x100
	bne     branch_20d9f10
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	mov     r10, #0x80
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9e70

.arm
branch_20d9e70: @ 20d9e70 :arm
	cmp     r1, #0x30
	movne   r10, #1, 24 @ #0x100
	bne     branch_20d9f10
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	add     r4, r4, #0x1
	blx     r9
	mov     r1, r0
	b       branch_20d9f10
@ 0x20d9e98

.arm
branch_20d9e98: @ 20d9e98 :arm
	cmp     r1, #0x0
	blt     branch_20d9ea8
	cmp     r1, #0x80
	blt     branch_20d9eb0
.arm
branch_20d9ea8: @ 20d9ea8 :arm
	mov     r0, #0x0
	b       branch_20d9ec0
@ 0x20d9eb0

.arm
branch_20d9eb0: @ 20d9eb0 :arm
	mov     r2, r1, lsl #1
	ldr     r0, [pc, #0x248] @ [0x20da104] (=Unknown_20fe864)
	ldrh    r0, [r0, r2]
	and     r0, r0, #0x8
.arm
branch_20d9ec0: @ 20d9ec0 :arm
	cmp     r0, #0x0
	moveq   r5, #2, 22 @ #0x800
	beq     branch_20d9f10
	ldr     r0, [sp, #0x10]
	sub     r2, r1, #0x30
	mov     r1, #0xa
	mla     r0, r1, r0, r2
	str     r0, [sp, #0x10]
	ldr     r1, [pc, #0x228] @ [0x20da110] (=0x7fff)
	ldr     r0, [sp, #0x20]
	add     r4, r4, #0x1
	cmp     r0, r1
	ldrgt   r0, [sp, #0xd0]
	movgt   r1, #0x1
	strgt   r1, [r0]
	mov     r1, #0x0
	mov     r0, r8
	mov     r2, r1
	blx     r9
	mov     r1, r0
.arm
branch_20d9f10: @ 20d9f10 :arm
	ldr     r0, [sp]
	cmp     r4, r0
	bgt     branch_20d9f30
	mvn     r0, #0x0
	cmp     r1, r0
	beq     branch_20d9f30
	tst     r5, #6, 22 @ #0x1800
	beq     branch_20d9224
.arm
branch_20d9f30: @ 20d9f30 :arm
	cmp     r5, #2, 18 @ #0x8000
	beq     branch_20d9f4c
	ldr     r0, [pc, #0x1d4] @ [0x20da114] (=0xe2c)
	tst     r5, r0
	moveq   r0, #0x1
	movne   r0, #0x0
	b       branch_20d9f70
@ 0x20d9f4c

.arm
branch_20d9f4c: @ 20d9f4c :arm
	sub     r0, r4, #0x1
	cmp     r0, #0x2
	ble     branch_20d9f64
	ldr     r0, [pc, #0x1b8] @ [0x20da118] (=0x18e)
	tst     r10, r0
	bne     branch_20d9f6c
.arm
branch_20d9f64: @ 20d9f64 :arm
	mov     r0, #0x1
	b       branch_20d9f70
@ 0x20d9f6c

.arm
branch_20d9f6c: @ 20d9f6c :arm
	mov     r0, #0x0
.arm
branch_20d9f70: @ 20d9f70 :arm
	cmp     r0, #0x0
	movne   r2, #0x0
	ldrne   r0, [sp, #0x4]
	bne     branch_20d9f90
	ldr     r0, [sp, #0x2c]
	sub     r2, r4, #0x1
	add     r2, r2, r0
	ldr     r0, [sp, #0x4]
.arm
branch_20d9f90: @ 20d9f90 :arm
	str     r2, [r0]
	mov     r0, r8
	mov     r2, #0x1
	blx     r9
	cmp     r10, #0x0
	bne     branch_20da194
	ldr     r0, [sp, #0x24]
	ldrb    r2, [sp, #0x84]
	cmp     r0, #0x0
	ldrne   r0, [sp, #0x20]
	rsbne   r0, r0, #0x0
	strne   r0, [sp, #0x20]
	add     r0, sp, #0x85
	add     r1, r0, r2
	b       branch_20d9fd8
@ 0x20d9fcc

.arm
branch_20d9fcc: @ 20d9fcc :arm
	ldr     r0, [sp, #0x1c]
	add     r0, r0, #0x1
	str     r0, [sp, #0x1c]
.arm
branch_20d9fd8: @ 20d9fd8 :arm
	cmp     r2, #0x0
	sub     r2, r2, #0x1
	beq     branch_20d9ff0
	ldrb    r0, [r1, #-0x1]!
	cmp     r0, #0x30
	beq     branch_20d9fcc
.arm
branch_20d9ff0: @ 20d9ff0 :arm
	add     r0, r2, #0x1
	strb    r0, [sp, #0x84]
	ands    r2, r0, #0xff
	bne     branch_20da014
	add     r1, r2, #0x1
	strb    r1, [sp, #0x84]
	add     r0, sp, #0x85
	mov     r1, #0x30
	strb    r1, [r0, r2]
.arm
branch_20da014: @ 20da014 :arm
	ldr     r1, [sp, #0x20]
	ldr     r0, [sp, #0x1c]
	mov     r2, #2, 18 @ #0x8000
	add     r0, r1, r0
	rsb     r2, r2, #0x0
	str     r0, [sp, #0x20]
	cmp     r0, r2
	blt     branch_20da03c
	cmp     r0, r2, lsr #17
	ble     branch_20da048
.arm
branch_20da03c: @ 20da03c :arm
	ldr     r0, [sp, #0xd0]
	mov     r1, #0x1
	str     r1, [r0]
.arm
branch_20da048: @ 20da048 :arm
	ldr     r0, [sp, #0xd0]
	ldr     r0, [r0]
	cmp     r0, #0x0
	beq     branch_20da0a4
	ldr     r0, [sp, #0x24]
	cmp     r0, #0x0
	movne   r0, #0x0
	addne   sp, sp, #0xa8
	movne   r1, r0
	ldmnefd sp!, {r3-r11,pc}
	ldr     r0, [sp, #0x28]
	cmp     r0, #0x0
	ldreq   r1, [pc, #0x9c] @ [0x20da11c] (=Unknown_21015b4)
	addeq   sp, sp, #0xa8
	ldmeqia r1, {r0,r1}
	ldmeqfd sp!, {r3-r11,pc}
	ldr     r1, [pc, #0x8c] @ [0x20da11c] (=Unknown_21015b4)
	mov     r0, #0x0
	ldmia   r1, {r2,r3}
	mov     r1, r0
	bl      _dsub
	add     sp, sp, #0xa8
	ldmfd   sp!, {r3-r11,pc}

branch_20da0a4: @ 20da0a4 :arm
	ldr     r1, [sp, #0x20]
	add     r0, sp, #0x80
	strh    r1, [sp, #0x82]
	bl      Function_20df1b0
	mov     r4, r0
	mov     r6, r1
	mov     r0, #0x0
	mov     r1, r0
	mov     r2, r4
	mov     r3, r6
	bl      Function_20e1020
	beq     branch_20da124
	mov     r0, r4
	mov     r1, r6
	mov     r2, #0x0
	mov     r3, #1, 12 @ #0x100000
	bl      Function_20e0ef8
	bhs     branch_20da124
	ldr     r0, [sp, #0xd0]
	mov     r1, #0x1
	str     r1, [r0]
	b       branch_20da150
@ 0x20da0fc

.word Unknown_20fe991 @ 0x20da0fc
.word Unknown_20fe98c @ 0x20da100
.word Unknown_20fe864 @ 0x20da104
.word Unknown_20fe7e4 @ 0x20da108
.word Unknown_21015ac @ 0x20da10c
.word 0x7fff @ 0x20da110
.word 0xe2c @ 0x20da114
.word 0x18e @ 0x20da118
.word Unknown_21015b4 @ 0x20da11c
.word 0x7fefffff @ 0x20da120

.arm
branch_20da124: @ 20da124 :arm
	ldr     r3, [pc, #-0xc] @ [0x20da120] (=0x7fefffff)
	mov     r0, r4
	mov     r1, r6
	mvn     r2, #0x0
	bl      Function_20e0dbc
	bls     branch_20da150
	ldr     r0, [sp, #0xd0]
	mov     r2, #0x1
	ldr     r1, [pc, #-0x30] @ [0x20da11c] (=Unknown_21015b4)
	str     r2, [r0]
	ldmia   r1, {r4,r6}
branch_20da150: @ 20da150 :arm
	ldr     r0, [sp, #0x28]
	cmp     r0, #0x0
	beq     branch_20da184
	ldr     r0, [pc, #-0x50] @ [0x20da114] (=0xe2c)
	tst     r5, r0
	beq     branch_20da184
	mov     r0, #0x0
	mov     r1, r0
	mov     r2, r4
	mov     r3, r6
	bl      _dsub
	mov     r4, r0
	mov     r6, r1
branch_20da184: @ 20da184 :arm
	add     sp, sp, #0xa8
	mov     r0, r4
	mov     r1, r6
	ldmfd   sp!, {r3-r11,pc}

branch_20da194: @ 20da194 :arm
	ldr     r0, [sp, #0xc]
	add     r4, sp, #0x38
	cmp     r0, #0x0
	ldrne   r0, [sp, #0x10]
	ldrb    r3, [sp, #0x45]
	rsbne   r0, r0, #0x0
	strne   r0, [sp, #0x10]
	ldr     r1, [sp, #0x10]
	ldr     r0, [sp, #0x8]
	mov     r2, #0x0
	add     r0, r1, r0, lsl #2
	str     r0, [sp, #0x10]
	mov     r1, #0x80
	b       branch_20da1dc
@ 0x20da1cc

.arm
branch_20da1cc: @ 20da1cc :arm
	ldr     r0, [sp, #0x10]
	add     r2, r2, #0x1
	sub     r0, r0, #0x1
	str     r0, [sp, #0x10]
.arm
branch_20da1dc: @ 20da1dc :arm
	cmp     r2, #0x4
	bhs     branch_20da1ec
	tst     r3, r1, asr r2
	beq     branch_20da1cc
.arm
branch_20da1ec: @ 20da1ec :arm
	adds    r5, r2, #0x1
	beq     branch_20da238
	add     r0, sp, #0x4c
	add     r3, sp, #0x45
	str     r0, [sp, #0x14]
	mov     r1, #0x0
	cmp     r0, r3
	blo     branch_20da238
	rsb     r6, r5, #0x8
.arm
branch_20da210: @ 20da210 :arm
	ldr     r0, [sp, #0x14]
	ldrb    r0, [r0]
	orr     r2, r1, r0, lsl r5
	mov     r1, r0, asr r6
	ldr     r0, [sp, #0x14]
	and     r1, r1, #0xff
	strb    r2, [r0], #-0x1
	str     r0, [sp, #0x14]
	cmp     r0, r3
	bhs     branch_20da210
.arm
branch_20da238: @ 20da238 :arm
	mov     r2, #0x0
	mov     r6, r2
	strb    r2, [r4]
	strb    r2, [r4, #0x1]
	strb    r2, [r4, #0x2]
	strb    r2, [r4, #0x3]
	strb    r2, [r4, #0x4]
	strb    r2, [r4, #0x5]
	strb    r2, [r4, #0x6]
	strb    r2, [r4, #0x7]
	mov     r3, #0xc
	mov     r7, #0x1
	mov     r0, #0xff
	add     r1, sp, #0x45
.arm
branch_20da270: @ 20da270 :arm
	add     r5, r2, #0x8
	cmp     r5, #0x34
	ldrb    r5, [r1, r6]
	rsbhi   r8, r2, #0x34
	and     r11, r3, #0x7
	andhi   r5, r5, r0, lsl r8
	andhi   r5, r5, #0xff
	mov     r8, r5, asr r11
	and     r9, r8, #0xff
	ldrb    r10, [r4, r7]
	rsb     r8, r11, #0x8
	mov     r5, r5, lsl r8
	orr     r9, r10, r9
	strb    r9, [r4, r7]
	add     r7, r7, #0x1
	add     r2, r2, #0x8
	ldrb    r8, [r4, r7]
	and     r5, r5, #0xff
	cmp     r2, #0x34
	orr     r5, r8, r5
	strb    r5, [r4, r7]
	add     r3, r3, #0x8
	add     r6, r6, #0x1
	blo     branch_20da270
	ldr     r0, [sp, #0x10]
	mov     r1, #2, 22 @ #0x800
	add     r0, r0, #0xfe
	add     r2, r0, #3, 24 @ #0x300
	rsb     r1, r1, #0x0
	tst     r2, r1
	beq     branch_20da308
	ldr     r2, [sp, #0xd0]
	mov     r3, #0x1
	mov     r0, #0x0
	add     sp, sp, #0xa8
	mov     r1, r0
	str     r3, [r2]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20da308

.arm
branch_20da308: @ 20da308 :arm
	ldrb    r0, [r4, #0x1]
	mov     r2, r2, lsl #21
	ldrb    r1, [r4]
	orr     r0, r0, r2, lsr #17
	strb    r0, [r4, #0x1]
	ldr     r0, [sp, #0x28]
	orr     r1, r1, r2, lsr #25
	cmp     r0, #0x0
	andne   r0, r1, #0xff
	strb    r1, [r4]
	orrne   r0, r0, #0x80
	strneb  r0, [r4]
	mov     r3, #0x0
.arm
branch_20da33c: @ 20da33c :arm
	rsb     r1, r3, #0x7
	ldrb    r2, [r4, r3]
	ldrb    r0, [r4, r1]
	strb    r0, [r4, r3]
	add     r3, r3, #0x1
	strb    r2, [r4, r1]
	cmp     r3, #0x4
	blt     branch_20da33c
	ldmia   r4, {r0,r1}
	add     sp, sp, #0xa8
	ldmfd   sp!, {r3-r11,pc}
@ 0x20da368

.arm
Function_20da368: @ 20da368 :arm
	stmfd   sp!, {r4-r7,lr}
	sub     sp, sp, #0x14
	mov     r7, r0
	mov     r0, #0x0
	mov     r6, r1
	str     r0, [sp, #0x8]
	add     r4, sp, #0xc
	str     r7, [sp, #0x4]
	ldr     r1, [pc, #0xac] @ [0x20da43c] (=0x20d8930)
	add     r2, sp, #0x4
	add     r3, sp, #0x10
	sub     r0, r0, #6, 2 @ #0x80000001
	str     r4, [sp]
	bl      Function_20d911c
	mov     r5, r1
	mov     r4, r0
	cmp     r6, #0x0
	ldrne   r0, [sp, #0x10]
	mov     r1, r5
	addne   r0, r7, r0
	strne   r0, [r6]
	mov     r0, r4
	bl      Function_20de084
	ldr     r2, [sp, #0xc]
	mov     r6, r0
	mov     r7, r1
	cmp     r2, #0x0
	bne     branch_20da420
	mov     r0, #0x0
	mov     r1, r0
	mov     r2, r4
	mov     r3, r5
	bl      Function_20e1020
	beq     branch_20da42c
	mov     r0, r6
	mov     r1, r7
	mov     r2, #0x0
	mov     r3, #1, 12 @ #0x100000
	bl      Function_20e0ef8
	blo     branch_20da420
	ldr     r3, [pc, #0x30] @ [0x20da440] (=0x7fefffff)
	mov     r0, r6
	mov     r1, r7
	mvn     r2, #0x0
	bl      Function_20e0dbc
	bls     branch_20da42c
.arm
branch_20da420: @ 20da420 :arm
	ldr     r0, [pc, #0x1c] @ [0x20da444] (=RAM_21d0d40)
	mov     r1, #0x22
	str     r1, [r0]
.arm
branch_20da42c: @ 20da42c :arm
	mov     r0, r4
	mov     r1, r5
	add     sp, sp, #0x14
	ldmfd   sp!, {r4-r7,pc}
@ 0x20da43c

.word Function_20d8930 @ =0x20d8930, 0x20da43c
.word 0x7fefffff @ 0x20da440
.word RAM_21d0d40 @ 0x20da444



.arm
.globl Function_20da448
Function_20da448: @ 20da448 :arm
	ldr     r12, [pc, #0x4] @ [0x20da454] (=0x20da368)
	mov     r1, #0x0
	bx      r12
@ 0x20da454

.word Function_20da368 @ =0x20da368, 0x20da454



.arm
Function_20da458: @ 20da458 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0xc
	ldr     r4, [sp, #0x38]
	movs    r9, r0
	ldr     r0, [sp, #0x34]
	str     r4, [sp, #0x38]
	mov     r4, #0x0
	str     r0, [sp, #0x34]
	ldr     r0, [sp, #0x38]
	str     r1, [sp]
	str     r4, [r0]
	mov     r0, r4
	str     r0, [sp, #0x4]
	ldr     r0, [sp, #0x34]
	mov     r1, r4
	str     r1, [r0]
	ldr     r0, [sp, #0x30]
	str     r4, [sp, #0x8]
	mov     r8, r2
	mov     r7, r3
	mov     r5, r4
	mov     r10, r4
	str     r0, [sp, #0x30]
	mov     r4, #0x1
	bmi     branch_20da4d8
	cmp     r9, #0x1
	beq     branch_20da4d8
	cmp     r9, #0x24
	bgt     branch_20da4d8
	ldr     r0, [sp]
	cmp     r0, #0x1
	bge     branch_20da4e0
.arm
branch_20da4d8: @ 20da4d8 :arm
	mov     r4, #0x40
	b       branch_20da4fc
@ 0x20da4e0

.arm
branch_20da4e0: @ 20da4e0 :arm
	ldr     r1, [sp, #0x8]
	mov     r0, r7
	mov     r3, r1
	mov     r2, r1
	add     r5, r3, #0x1
	blx     r8
	mov     r6, r0
.arm
branch_20da4fc: @ 20da4fc :arm
	cmp     r9, #0x0
	beq     branch_20da514
	mov     r1, r9
	mvn     r0, #0x0
	bl      _u32_div_f
	str     r0, [sp, #0x4]
.arm
branch_20da514: @ 20da514 :arm
	mvn     r11, #0x0
	b       branch_20da7d4
@ 0x20da51c

.arm
branch_20da51c: @ 20da51c :arm
	cmp     r4, #0x8
	bgt     branch_20da554
	cmp     r4, #0x0
	addge   pc, pc, r4, lsl #2
	b       branch_20da7d4
@ 0x20da530

.arm
Function_20da530: @ 20da530 :arm
	b       branch_20da7d4
@ 0x20da534

.arm
Function_20da534: @ 20da534 :arm
	b       branch_20da560
@ 0x20da538

.arm
Function_20da538: @ 20da538 :arm
	b       branch_20da60c
@ 0x20da53c

.arm
Function_20da53c: @ 20da53c :arm
	b       branch_20da7d4
@ 0x20da540

.arm
Function_20da540: @ 20da540 :arm
	b       branch_20da648
@ 0x20da544

.arm
Function_20da544: @ 20da544 :arm
	b       branch_20da7d4
@ 0x20da548

.arm
Function_20da548: @ 20da548 :arm
	b       branch_20da7d4
@ 0x20da54c

.arm
Function_20da54c: @ 20da54c :arm
	b       branch_20da7d4
@ 0x20da550

.arm
Function_20da550: @ 20da550 :arm
	b       branch_20da688
@ 0x20da554

.arm
branch_20da554: @ 20da554 :arm
	cmp     r4, #0x10
	beq     branch_20da688
	b       branch_20da7d4
@ 0x20da560

.arm
branch_20da560: @ 20da560 :arm
	cmp     r6, #0x0
	blt     branch_20da570
	cmp     r6, #0x80
	blt     branch_20da578
.arm
branch_20da570: @ 20da570 :arm
	mov     r0, #0x0
	b       branch_20da588
@ 0x20da578

.arm
branch_20da578: @ 20da578 :arm
	ldr     r0, [pc, #0x2b8] @ [0x20da838] (=Unknown_20fe864)
	mov     r1, r6, lsl #1
	ldrh    r0, [r0, r1]
	and     r0, r0, #1, 24 @ #0x100
.arm
branch_20da588: @ 20da588 :arm
	cmp     r0, #0x0
	beq     branch_20da5b4
	mov     r1, #0x0
	mov     r0, r7
	mov     r2, r1
	blx     r8
	mov     r6, r0
	ldr     r0, [sp, #0x8]
	add     r0, r0, #0x1
	str     r0, [sp, #0x8]
	b       branch_20da7d4
@ 0x20da5b4

.arm
branch_20da5b4: @ 20da5b4 :arm
	cmp     r6, #0x2b
	bne     branch_20da5d8
	mov     r1, #0x0
	mov     r0, r7
	mov     r2, r1
	add     r5, r5, #0x1
	blx     r8
	mov     r6, r0
	b       branch_20da604
@ 0x20da5d8

.arm
branch_20da5d8: @ 20da5d8 :arm
	cmp     r6, #0x2d
	bne     branch_20da604
	mov     r1, #0x0
	mov     r0, r7
	mov     r2, r1
	add     r5, r5, #0x1
	blx     r8
	mov     r6, r0
	ldr     r0, [sp, #0x34]
	mov     r1, #0x1
	str     r1, [r0]
.arm
branch_20da604: @ 20da604 :arm
	mov     r4, #0x2
	b       branch_20da7d4
@ 0x20da60c

.arm
branch_20da60c: @ 20da60c :arm
	cmp     r9, #0x0
	cmpne   r9, #0x10
	bne     branch_20da640
	cmp     r6, #0x30
	bne     branch_20da640
	mov     r1, #0x0
	mov     r0, r7
	mov     r2, r1
	mov     r4, #0x4
	add     r5, r5, #0x1
	blx     r8
	mov     r6, r0
	b       branch_20da7d4
@ 0x20da640

.arm
branch_20da640: @ 20da640 :arm
	mov     r4, #0x8
	b       branch_20da7d4
@ 0x20da648

.arm
branch_20da648: @ 20da648 :arm
	cmp     r6, #0x58
	cmpne   r6, #0x78
	bne     branch_20da678
	mov     r1, #0x0
	mov     r0, r7
	mov     r2, r1
	mov     r9, #0x10
	mov     r4, #0x8
	add     r5, r5, #0x1
	blx     r8
	mov     r6, r0
	b       branch_20da7d4
@ 0x20da678

.arm
branch_20da678: @ 20da678 :arm
	cmp     r9, #0x0
	moveq   r9, #0x8
	mov     r4, #0x10
	b       branch_20da7d4
@ 0x20da688

.arm
branch_20da688: @ 20da688 :arm
	ldr     r0, [sp, #0x4]
	cmp     r9, #0x0
	moveq   r9, #0xa
	cmp     r0, #0x0
	bne     branch_20da6ac
	mov     r0, r11
	mov     r1, r9
	bl      _u32_div_f
	str     r0, [sp, #0x4]
.arm
branch_20da6ac: @ 20da6ac :arm
	cmp     r6, #0x0
	blt     branch_20da6bc
	cmp     r6, #0x80
	blt     branch_20da6c4
.arm
branch_20da6bc: @ 20da6bc :arm
	mov     r0, #0x0
	b       branch_20da6d4
@ 0x20da6c4

.arm
branch_20da6c4: @ 20da6c4 :arm
	ldr     r0, [pc, #0x16c] @ [0x20da838] (=Unknown_20fe864)
	mov     r1, r6, lsl #1
	ldrh    r0, [r0, r1]
	and     r0, r0, #0x8
.arm
branch_20da6d4: @ 20da6d4 :arm
	cmp     r0, #0x0
	beq     branch_20da6fc
	sub     r6, r6, #0x30
	cmp     r6, r9
	blt     branch_20da784
	cmp     r4, #0x10
	moveq   r4, #0x20
	movne   r4, #0x40
	add     r6, r6, #0x30
	b       branch_20da7d4
@ 0x20da6fc

.arm
branch_20da6fc: @ 20da6fc :arm
	cmp     r6, #0x0
	blt     branch_20da70c
	cmp     r6, #0x80
	blt     branch_20da714
.arm
branch_20da70c: @ 20da70c :arm
	mov     r0, #0x0
	b       branch_20da724
@ 0x20da714

.arm
branch_20da714: @ 20da714 :arm
	ldr     r0, [pc, #0x11c] @ [0x20da838] (=Unknown_20fe864)
	mov     r1, r6, lsl #1
	ldrh    r0, [r0, r1]
	and     r0, r0, #0x1
.arm
branch_20da724: @ 20da724 :arm
	cmp     r0, #0x0
	beq     branch_20da758
	cmp     r6, #0x0
	blt     branch_20da73c
	cmp     r6, #0x80
	blt     branch_20da744
.arm
branch_20da73c: @ 20da73c :arm
	mov     r0, r6
	b       branch_20da74c
@ 0x20da744

.arm
branch_20da744: @ 20da744 :arm
	ldr     r0, [pc, #0xf0] @ [0x20da83c] (=Unknown_20fe7e4)
	ldrb    r0, [r0, r6]
.arm
branch_20da74c: @ 20da74c :arm
	sub     r0, r0, #0x37
	cmp     r0, r9
	blt     branch_20da768
.arm
branch_20da758: @ 20da758 :arm
	cmp     r4, #0x10
	moveq   r4, #0x20
	movne   r4, #0x40
	b       branch_20da7d4
@ 0x20da768

.arm
branch_20da768: @ 20da768 :arm
	cmp     r6, #0x0
	blt     branch_20da780
	cmp     r6, #0x80
	bge     branch_20da780
	ldr     r0, [pc, #0xbc] @ [0x20da83c] (=Unknown_20fe7e4)
	ldrb    r6, [r0, r6]
.arm
branch_20da780: @ 20da780 :arm
	sub     r6, r6, #0x37
.arm
branch_20da784: @ 20da784 :arm
	ldr     r0, [sp, #0x4]
	mov     r4, #0x10
	cmp     r10, r0
	ldrhi   r0, [sp, #0x38]
	movhi   r1, #0x1
	strhi   r1, [r0]
	mul     r0, r10, r9
	mov     r10, r0
	sub     r0, r11, r0
	cmp     r6, r0
	ldrhi   r0, [sp, #0x38]
	movhi   r1, #0x1
	strhi   r1, [r0]
	mov     r1, #0x0
	mov     r0, r7
	mov     r2, r1
	add     r10, r10, r6
	add     r5, r5, #0x1
	blx     r8
	mov     r6, r0
.arm
branch_20da7d4: @ 20da7d4 :arm
	ldr     r0, [sp]
	cmp     r5, r0
	bgt     branch_20da7f0
	cmp     r6, r11
	beq     branch_20da7f0
	tst     r4, #0x60
	beq     branch_20da51c
.arm
branch_20da7f0: @ 20da7f0 :arm
	tst     r4, #0x34
	bne     branch_20da808
	ldr     r0, [sp, #0x30]
	mov     r10, #0x0
	str     r10, [r0]
	b       branch_20da81c
@ 0x20da808

.arm
branch_20da808: @ 20da808 :arm
	ldr     r0, [sp, #0x8]
	sub     r1, r5, #0x1
	add     r1, r1, r0
	ldr     r0, [sp, #0x30]
	str     r1, [r0]
.arm
branch_20da81c: @ 20da81c :arm
	mov     r0, r7
	mov     r1, r6
	mov     r2, #0x1
	blx     r8
	mov     r0, r10
	add     sp, sp, #0xc
	ldmfd   sp!, {r4-r11,pc}
@ 0x20da838

.word Unknown_20fe864 @ 0x20da838
.word Unknown_20fe7e4 @ 0x20da83c



.arm
Function_20da840: @ 20da840 :arm
	stmfd   sp!, {r4-r10,lr}
	sub     sp, sp, #0x20
	ldr     r4, [sp, #0x48]
	movs    r9, r0
	ldr     r0, [sp, #0x44]
	str     r4, [sp, #0x48]
	mov     r4, #0x0
	str     r0, [sp, #0x44]
	ldr     r0, [sp, #0x48]
	str     r1, [sp]
	str     r4, [r0]
	mov     r0, r4
	str     r0, [sp, #0x10]
	str     r0, [sp, #0x14]
	str     r0, [sp, #0xc]
	ldr     r0, [sp, #0x44]
	mov     r1, r4
	str     r1, [r0]
	ldr     r0, [sp, #0x40]
	str     r4, [sp, #0x18]
	mov     r10, r2
	str     r3, [sp, #0x4]
	mov     r6, r4
	mov     r7, r4
	str     r0, [sp, #0x40]
	mov     r5, #0x1
	bmi     branch_20da8c8
	cmp     r9, #0x1
	beq     branch_20da8c8
	cmp     r9, #0x24
	bgt     branch_20da8c8
	ldr     r0, [sp]
	cmp     r0, #0x1
	bge     branch_20da8d0
.arm
branch_20da8c8: @ 20da8c8 :arm
	mov     r5, #0x40
	b       branch_20da8e4
@ 0x20da8d0

.arm
branch_20da8d0: @ 20da8d0 :arm
	mov     r0, r3
	mov     r2, r4
	add     r6, r1, #0x1
	blx     r10
	mov     r8, r0
.arm
branch_20da8e4: @ 20da8e4 :arm
	cmp     r9, #0x0
	beq     branch_20da908
	mvn     r0, #0x0
	mov     r1, r0
	mov     r3, r9, asr #31
	mov     r2, r9
	bl      _ll_udiv
	mov     r7, r0
	str     r1, [sp, #0xc]
.arm
branch_20da908: @ 20da908 :arm
	mvn     r0, #0x0
	str     r0, [sp, #0x1c]
	mov     r4, #0x0
	b       branch_20dac30
@ 0x20da918

.arm
branch_20da918: @ 20da918 :arm
	cmp     r5, #0x8
	bgt     branch_20da950
	cmp     r5, #0x0
	addge   pc, pc, r5, lsl #2
	b       branch_20dac30
@ 0x20da92c

.arm
Function_20da92c: @ 20da92c :arm
	b       branch_20dac30
@ 0x20da930

.arm
Function_20da930: @ 20da930 :arm
	b       branch_20da95c
@ 0x20da934

.arm
Function_20da934: @ 20da934 :arm
	b       branch_20daa08
@ 0x20da938

.arm
Function_20da938: @ 20da938 :arm
	b       branch_20dac30
@ 0x20da93c

.arm
Function_20da93c: @ 20da93c :arm
	b       branch_20daa44
@ 0x20da940

.arm
Function_20da940: @ 20da940 :arm
	b       branch_20dac30
@ 0x20da944

.arm
Function_20da944: @ 20da944 :arm
	b       branch_20dac30
@ 0x20da948

.arm
Function_20da948: @ 20da948 :arm
	b       branch_20dac30
@ 0x20da94c

.arm
Function_20da94c: @ 20da94c :arm
	b       branch_20daa84
@ 0x20da950

.arm
branch_20da950: @ 20da950 :arm
	cmp     r5, #0x10
	beq     branch_20daa84
	b       branch_20dac30
@ 0x20da95c

.arm
branch_20da95c: @ 20da95c :arm
	cmp     r8, #0x0
	blt     branch_20da96c
	cmp     r8, #0x80
	blt     branch_20da974
.arm
branch_20da96c: @ 20da96c :arm
	mov     r0, #0x0
	b       branch_20da984
@ 0x20da974

.arm
branch_20da974: @ 20da974 :arm
	ldr     r0, [pc, #0x328] @ [0x20daca4] (=Unknown_20fe864)
	mov     r1, r8, lsl #1
	ldrh    r0, [r0, r1]
	and     r0, r0, #1, 24 @ #0x100
.arm
branch_20da984: @ 20da984 :arm
	cmp     r0, #0x0
	beq     branch_20da9b0
	mov     r1, #0x0
	ldr     r0, [sp, #0x4]
	mov     r2, r1
	blx     r10
	mov     r8, r0
	ldr     r0, [sp, #0x18]
	add     r0, r0, #0x1
	str     r0, [sp, #0x18]
	b       branch_20dac30
@ 0x20da9b0

.arm
branch_20da9b0: @ 20da9b0 :arm
	cmp     r8, #0x2b
	bne     branch_20da9d4
	mov     r1, #0x0
	ldr     r0, [sp, #0x4]
	mov     r2, r1
	add     r6, r6, #0x1
	blx     r10
	mov     r8, r0
	b       branch_20daa00
@ 0x20da9d4

.arm
branch_20da9d4: @ 20da9d4 :arm
	cmp     r8, #0x2d
	bne     branch_20daa00
	mov     r1, #0x0
	ldr     r0, [sp, #0x4]
	mov     r2, r1
	add     r6, r6, #0x1
	blx     r10
	mov     r8, r0
	ldr     r0, [sp, #0x44]
	mov     r1, #0x1
	str     r1, [r0]
.arm
branch_20daa00: @ 20daa00 :arm
	mov     r5, #0x2
	b       branch_20dac30
@ 0x20daa08

.arm
branch_20daa08: @ 20daa08 :arm
	cmp     r9, #0x0
	cmpne   r9, #0x10
	bne     branch_20daa3c
	cmp     r8, #0x30
	bne     branch_20daa3c
	mov     r1, #0x0
	ldr     r0, [sp, #0x4]
	mov     r2, r1
	mov     r5, #0x4
	add     r6, r6, #0x1
	blx     r10
	mov     r8, r0
	b       branch_20dac30
@ 0x20daa3c

.arm
branch_20daa3c: @ 20daa3c :arm
	mov     r5, #0x8
	b       branch_20dac30
@ 0x20daa44

.arm
branch_20daa44: @ 20daa44 :arm
	cmp     r8, #0x58
	cmpne   r8, #0x78
	bne     branch_20daa74
	mov     r1, #0x0
	ldr     r0, [sp, #0x4]
	mov     r2, r1
	mov     r9, #0x10
	mov     r5, #0x8
	add     r6, r6, #0x1
	blx     r10
	mov     r8, r0
	b       branch_20dac30
@ 0x20daa74

.arm
branch_20daa74: @ 20daa74 :arm
	cmp     r9, #0x0
	moveq   r9, #0x8
	mov     r5, #0x10
	b       branch_20dac30
@ 0x20daa84

.arm
branch_20daa84: @ 20daa84 :arm
	ldr     r1, [sp, #0xc]
	mov     r0, #0x0
	cmp     r9, #0x0
	moveq   r9, #0xa
	cmp     r1, r0
	cmpeq   r7, r4
	bne     branch_20daabc
	ldr     r0, [sp, #0x1c]
	mov     r3, r9, asr #31
	mov     r1, r0
	mov     r2, r9
	bl      _ll_udiv
	mov     r7, r0
	str     r1, [sp, #0xc]
.arm
branch_20daabc: @ 20daabc :arm
	cmp     r8, #0x0
	blt     branch_20daacc
	cmp     r8, #0x80
	blt     branch_20daad4
.arm
branch_20daacc: @ 20daacc :arm
	mov     r0, #0x0
	b       branch_20daae4
@ 0x20daad4

.arm
branch_20daad4: @ 20daad4 :arm
	ldr     r0, [pc, #0x1c8] @ [0x20daca4] (=Unknown_20fe864)
	mov     r1, r8, lsl #1
	ldrh    r0, [r0, r1]
	and     r0, r0, #0x8
.arm
branch_20daae4: @ 20daae4 :arm
	cmp     r0, #0x0
	beq     branch_20dab0c
	sub     r8, r8, #0x30
	cmp     r8, r9
	blt     branch_20dab94
	cmp     r5, #0x10
	moveq   r5, #0x20
	movne   r5, #0x40
	add     r8, r8, #0x30
	b       branch_20dac30
@ 0x20dab0c

.arm
branch_20dab0c: @ 20dab0c :arm
	cmp     r8, #0x0
	blt     branch_20dab1c
	cmp     r8, #0x80
	blt     branch_20dab24
.arm
branch_20dab1c: @ 20dab1c :arm
	mov     r0, #0x0
	b       branch_20dab34
@ 0x20dab24

.arm
branch_20dab24: @ 20dab24 :arm
	ldr     r0, [pc, #0x178] @ [0x20daca4] (=Unknown_20fe864)
	mov     r1, r8, lsl #1
	ldrh    r0, [r0, r1]
	and     r0, r0, #0x1
.arm
branch_20dab34: @ 20dab34 :arm
	cmp     r0, #0x0
	beq     branch_20dab68
	cmp     r8, #0x0
	blt     branch_20dab4c
	cmp     r8, #0x80
	blt     branch_20dab54
.arm
branch_20dab4c: @ 20dab4c :arm
	mov     r0, r8
	b       branch_20dab5c
@ 0x20dab54

.arm
branch_20dab54: @ 20dab54 :arm
	ldr     r0, [pc, #0x14c] @ [0x20daca8] (=Unknown_20fe7e4)
	ldrb    r0, [r0, r8]
.arm
branch_20dab5c: @ 20dab5c :arm
	sub     r0, r0, #0x37
	cmp     r0, r9
	blt     branch_20dab78
.arm
branch_20dab68: @ 20dab68 :arm
	cmp     r5, #0x10
	moveq   r5, #0x20
	movne   r5, #0x40
	b       branch_20dac30

branch_20dab78: @ 20dab78 :arm
	cmp     r8, #0x0
	blt     branch_20dab90
	cmp     r8, #0x80
	bge     branch_20dab90
	ldr     r0, [pc, #0x118] @ [0x20daca8] (=Unknown_20fe7e4)
	ldrb    r8, [r0, r8]
branch_20dab90: @ 20dab90 :arm
	sub     r8, r8, #0x37
branch_20dab94: @ 20dab94 :arm
	ldr     r1, [sp, #0x14]
	ldr     r0, [sp, #0xc]
	ldr     r3, [sp, #0x10]
	cmp     r1, r0
	ldr     r0, [sp, #0x10]
	mov     r5, r9, asr #31
	cmpeq   r0, r7
	ldrhi   r0, [sp, #0x48]
	movhi   r1, #0x1
	strhi   r1, [r0]
	umull   r0, r1, r3, r9
	mla     r1, r3, r5, r1
	ldr     r3, [sp, #0x14]
	str     r0, [sp, #0x10]
	mla     r1, r3, r9, r1
	ldr     r3, [sp, #0x1c]
	mov     r2, r8, asr #31
	subs    r3, r3, r0
	ldr     r0, [sp, #0x1c]
	str     r1, [sp, #0x14]
	sbc     r0, r0, r1
	cmp     r2, r0
	cmpeq   r8, r3
	ldrhi   r0, [sp, #0x48]
	movhi   r1, #0x1
	strhi   r1, [r0]
	ldr     r0, [sp, #0x10]
	mov     r1, #0x0
	adds    r0, r0, r8
	str     r0, [sp, #0x10]
	ldr     r0, [sp, #0x14]
	mov     r5, #0x10
	adc     r0, r0, r2
	str     r0, [sp, #0x14]
	ldr     r0, [sp, #0x4]
	mov     r2, r1
	add     r6, r6, #0x1
	blx     r10
	mov     r8, r0
.arm
branch_20dac30: @ 20dac30 :arm
	ldr     r0, [sp]
	cmp     r6, r0
	bgt     branch_20dac50
	ldr     r0, [sp, #0x1c]
	cmp     r8, r0
	beq     branch_20dac50
	tst     r5, #0x60
	beq     branch_20da918
.arm
branch_20dac50: @ 20dac50 :arm
	tst     r5, #0x34
	bne     branch_20dac70
	mov     r0, #0x0
	str     r0, [sp, #0x10]
	str     r0, [sp, #0x14]
	mov     r1, r0
	ldr     r0, [sp, #0x40]
	b       branch_20dac80
@ 0x20dac70

.arm
branch_20dac70: @ 20dac70 :arm
	ldr     r0, [sp, #0x18]
	sub     r1, r6, #0x1
	add     r1, r1, r0
	ldr     r0, [sp, #0x40]
.arm
branch_20dac80: @ 20dac80 :arm
	str     r1, [r0]
	ldr     r0, [sp, #0x4]
	mov     r1, r8
	mov     r2, #0x1
	blx     r10
	ldr     r0, [sp, #0x10]
	ldr     r1, [sp, #0x14]
	add     sp, sp, #0x20
	ldmfd   sp!, {r4-r10,pc}
@ 0x20daca4

.word Unknown_20fe864 @ 0x20daca4
.word Unknown_20fe7e4 @ 0x20daca8



.arm
.globl Function_20dacac
Function_20dacac: @ 20dacac :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x20
	mov     r5, r0
	mov     lr, #0x0
	mov     r0, r2
	mov     r4, r1
	add     r2, sp, #0x1c
	str     r5, [sp, #0xc]
	str     lr, [sp, #0x10]
	str     r2, [sp]
	add     r1, sp, #0x18
	str     r1, [sp, #0x4]
	add     r12, sp, #0x14
	ldr     r2, [pc, #0x54] @ [0x20dad3c] (=0x20d8930)
	add     r3, sp, #0xc
	sub     r1, lr, #6, 2 @ #0x80000001
	str     r12, [sp, #0x8]
	bl      Function_20da458
	cmp     r4, #0x0
	ldrne   r1, [sp, #0x1c]
	addne   r1, r5, r1
	strne   r1, [r4]
	ldr     r1, [sp, #0x14]
	cmp     r1, #0x0
	beq     branch_20dad28
	ldr     r0, [pc, #0x28] @ [0x20dad40] (=RAM_21d0d40)
	mov     r1, #0x22
	str     r1, [r0]
	add     sp, sp, #0x20
	mvn     r0, #0x0
	ldmfd   sp!, {r3-r5,pc}

branch_20dad28: @ 20dad28 :arm
	ldr     r1, [sp, #0x18]
	cmp     r1, #0x0
	rsbne   r0, r0, #0x0
	add     sp, sp, #0x20
	ldmfd   sp!, {r3-r5,pc}
@ 0x20dad3c

.word Function_20d8930 @ =0x20d8930, 0x20dad3c
.word RAM_21d0d40 @ 0x20dad40



.arm
.globl Function_20dad44
Function_20dad44: @ 20dad44 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x20
	mov     r5, r0
	mov     lr, #0x0
	mov     r0, r2
	mov     r4, r1
	add     r2, sp, #0x1c
	str     r5, [sp, #0xc]
	str     lr, [sp, #0x10]
	str     r2, [sp]
	add     r1, sp, #0x18
	str     r1, [sp, #0x4]
	add     r12, sp, #0x14
	ldr     r2, [pc, #0x84] @ [0x20dae04] (=0x20d8930)
	add     r3, sp, #0xc
	sub     r1, lr, #6, 2 @ #0x80000001
	str     r12, [sp, #0x8]
	bl      Function_20da458
	cmp     r4, #0x0
	ldrne   r1, [sp, #0x1c]
	addne   r1, r5, r1
	strne   r1, [r4]
	ldr     r1, [sp, #0x14]
	cmp     r1, #0x0
	bne     branch_20dadd0
	ldr     r2, [sp, #0x18]
	cmp     r2, #0x0
	bne     branch_20dadc0
	mvn     r1, #2, 2 @ #0x80000000
	cmp     r0, r1
	bhi     branch_20dadd0
.arm
branch_20dadc0: @ 20dadc0 :arm
	cmp     r2, #0x0
	beq     branch_20dadf4
	cmp     r0, #2, 2 @ #0x80000000
	bls     branch_20dadf4
.arm
branch_20dadd0: @ 20dadd0 :arm
	ldr     r0, [sp, #0x18]
	ldr     r1, [pc, #0x2c] @ [0x20dae08] (=RAM_21d0d40)
	mov     r2, #0x22
	cmp     r0, #0x0
	movne   r0, #2, 2 @ #0x80000000
	str     r2, [r1]
	add     sp, sp, #0x20
	mvneq   r0, #2, 2 @ #0x80000000
	ldmfd   sp!, {r3-r5,pc}

branch_20dadf4: @ 20dadf4 :arm
	cmp     r2, #0x0
	rsbne   r0, r0, #0x0
	add     sp, sp, #0x20
	ldmfd   sp!, {r3-r5,pc}
@ 0x20dae04

.word Function_20d8930 @ =0x20d8930, 0x20dae04
.word RAM_21d0d40 @ 0x20dae08



arm_func_start Function_20dae0c
Function_20dae0c: @ 20dae0c :arm
	ldr     r12, [pc, #0x8] @ [0x20dae1c] (=0x20dad44)
	mov     r1, #0x0
	mov     r2, #0xa
	bx      r12
@ 0x20dae1c

.word Function_20dad44 @ =0x20dad44, 0x20dae1c
arm_func_start Function_20dae0c



.arm
Function_20dae20: @ 20dae20 :arm
	cmp     r0, #0x0
	beq     branch_20dae38
	ldr     r3, [r0, #0x4]
	mov     r2, r3, lsl #22
	movs    r2, r2, lsr #29
	bne     branch_20dae40
.arm
branch_20dae38: @ 20dae38 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20dae40

.arm
branch_20dae40: @ 20dae40 :arm
	mov     r2, r3, lsl #20
	movs    r2, r2, lsr #30
	beq     branch_20dae60
	cmp     r2, #0x1
	beq     branch_20dae88
	cmp     r2, #0x2
	moveq   r1, #0x1
	b       branch_20dae8c
@ 0x20dae60

.arm
branch_20dae60: @ 20dae60 :arm
	cmp     r1, #0x0
	ble     branch_20dae78
	bic     r2, r3, #3, 22 @ #0xc00
	orr     r2, r2, #2, 22 @ #0x800
	str     r2, [r0, #0x4]
	b       branch_20dae8c
@ 0x20dae78

.arm
branch_20dae78: @ 20dae78 :arm
	biclt   r2, r3, #3, 22 @ #0xc00
	orrlt   r2, r2, #1, 22 @ #0x400
	strlt   r2, [r0, #0x4]
	b       branch_20dae8c
@ 0x20dae88

.arm
branch_20dae88: @ 20dae88 :arm
	mvn     r1, #0x0
.arm
branch_20dae8c: @ 20dae8c :arm
	mov     r0, r1
	bx      lr
@ 0x20dae94


.arm
Function_20dae94: @ 20dae94 :arm
	ldr     r12, [pc, #0x4] @ [0x20daea0] (=CopyDataInByteSteps)
	mov     r2, r2, lsl #1
	bx      r12
@ 0x20daea0

.word CopyDataInByteSteps @ =CopyDataInByteSteps, 0x20daea0
.arm
Function_20daea4: @ 20daea4 :arm
	cmp     r2, #0x0
	beq     branch_20daec4
.arm
branch_20daeac: @ 20daeac :arm
	ldrh    r3, [r0]
	cmp     r3, r1
	bxeq    lr
	add     r0, r0, #0x2
	subs    r2, r2, #0x1
	bne     branch_20daeac
.arm
branch_20daec4: @ 20daec4 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20daecc

.arm
Function_20daecc: @ 20daecc :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x10
	ldrh    r3, [r0, #0x2]
	mov     r4, #0x0
	mov     r5, #0x1
	mov     lr, r2
	strb    r5, [sp]
	strb    r4, [sp, #0x1]
	strb    r4, [sp, #0x2]
	strb    r4, [sp, #0x3]
	strb    r4, [sp, #0x4]
	str     r4, [sp, #0x8]
	str     r4, [sp, #0xc]
	cmp     r3, #0x25
	add     r12, r0, #0x2
	bne     branch_20daf28
	add     r0, sp, #0x0
	strh    r3, [sp, #0x6]
	ldmia   r0, {r0-r3}
	stmia   lr, {r0-r3}
	add     sp, sp, #0x10
	add     r0, r12, #0x2
	ldmfd   sp!, {r4-r8,pc}
@ 0x20daf28

.arm
branch_20daf28: @ 20daf28 :arm
	mov     r2, #0x2
	mov     r0, r4
	mov     r5, r2
	mov     r6, r4
	mov     r7, #0x1
.arm
branch_20daf3c: @ 20daf3c :arm
	mov     r8, r7
	cmp     r3, #0x2b
	bgt     branch_20daf6c
	bge     branch_20daf94
	cmp     r3, #0x23
	bgt     branch_20dafc4
	cmp     r3, #0x20
	blt     branch_20dafc4
	beq     branch_20daf9c
	cmp     r3, #0x23
	beq     branch_20dafac
	b       branch_20dafc4
@ 0x20daf6c

.arm
branch_20daf6c: @ 20daf6c :arm
	cmp     r3, #0x30
	bgt     branch_20dafc4
	cmp     r3, #0x2d
	blt     branch_20dafc4
	beq     branch_20daf8c
	cmp     r3, #0x30
	beq     branch_20dafb4
	b       branch_20dafc4
@ 0x20daf8c

.arm
branch_20daf8c: @ 20daf8c :arm
	strb    r6, [sp]
	b       branch_20dafc8
@ 0x20daf94

.arm
branch_20daf94: @ 20daf94 :arm
	strb    r7, [sp, #0x1]
	b       branch_20dafc8
@ 0x20daf9c

.arm
branch_20daf9c: @ 20daf9c :arm
	ldrb    r4, [sp, #0x1]
	cmp     r4, #0x1
	strneb  r5, [sp, #0x1]
	b       branch_20dafc8
@ 0x20dafac

.arm
branch_20dafac: @ 20dafac :arm
	strb    r7, [sp, #0x3]
	b       branch_20dafc8
@ 0x20dafb4

.arm
branch_20dafb4: @ 20dafb4 :arm
	ldrb    r4, [sp]
	cmp     r4, #0x0
	strneb  r2, [sp]
	b       branch_20dafc8
@ 0x20dafc4

.arm
branch_20dafc4: @ 20dafc4 :arm
	mov     r8, r0
.arm
branch_20dafc8: @ 20dafc8 :arm
	cmp     r8, #0x0
	ldrneh  r3, [r12, #0x2]!
	bne     branch_20daf3c
	cmp     r3, #0x2a
	bne     branch_20db010
	ldr     r0, [r1]
	add     r0, r0, #0x4
	str     r0, [r1]
	ldr     r0, [r0, #-0x4]
	str     r0, [sp, #0x8]
	cmp     r0, #0x0
	bge     branch_20db008
	rsb     r0, r0, #0x0
	mov     r2, #0x0
	strb    r2, [sp]
	str     r0, [sp, #0x8]
.arm
branch_20db008: @ 20db008 :arm
	ldrh    r3, [r12, #0x2]!
	b       branch_20db054
@ 0x20db010

.arm
branch_20db010: @ 20db010 :arm
	mov     r2, #0x0
	ldr     r5, [pc, #0x41c] @ [0x20db438] (=Unknown_20fea9c)
	mov     r0, #0xa
	b       branch_20db034
@ 0x20db020

.arm
branch_20db020: @ 20db020 :arm
	ldr     r4, [sp, #0x8]
	sub     r3, r3, #0x30
	mla     r6, r4, r0, r3
	ldrh    r3, [r12, #0x2]!
	str     r6, [sp, #0x8]
.arm
branch_20db034: @ 20db034 :arm
	cmp     r3, #0x80
	movcs   r4, r2
	bhs     branch_20db04c
	mov     r4, r3, lsl #1
	ldrh    r4, [r5, r4]
	and     r4, r4, #0x8
.arm
branch_20db04c: @ 20db04c :arm
	cmp     r4, #0x0
	bne     branch_20db020
.arm
branch_20db054: @ 20db054 :arm
	ldr     r2, [sp, #0x8]
	ldr     r0, [pc, #0x3dc] @ [0x20db43c] (=0x1fd)
	cmp     r2, r0
	ble     branch_20db084
	ldr     r1, [pc, #0x3d4] @ [0x20db440] (=0xffff)
	add     r0, sp, #0x0
	strh    r1, [sp, #0x6]
	ldmia   r0, {r0-r3}
	stmia   lr, {r0-r3}
	add     sp, sp, #0x10
	add     r0, r12, #0x2
	ldmfd   sp!, {r4-r8,pc}
@ 0x20db084

.arm
branch_20db084: @ 20db084 :arm
	cmp     r3, #0x2e
	bne     branch_20db10c
	ldrh    r3, [r12, #0x2]!
	mov     r0, #0x1
	strb    r0, [sp, #0x2]
	cmp     r3, #0x2a
	bne     branch_20db0c8
	ldr     r0, [r1]
	add     r0, r0, #0x4
	str     r0, [r1]
	ldr     r0, [r0, #-0x4]
	ldrh    r3, [r12, #0x2]!
	str     r0, [sp, #0xc]
	cmp     r0, #0x0
	movlt   r0, #0x0
	strltb  r0, [sp, #0x2]
	b       branch_20db10c
@ 0x20db0c8

.arm
branch_20db0c8: @ 20db0c8 :arm
	mov     r1, #0x0
	ldr     r4, [pc, #0x364] @ [0x20db438] (=Unknown_20fea9c)
	mov     r0, #0xa
	b       branch_20db0ec
@ 0x20db0d8

.arm
branch_20db0d8: @ 20db0d8 :arm
	ldr     r2, [sp, #0xc]
	sub     r3, r3, #0x30
	mla     r5, r2, r0, r3
	ldrh    r3, [r12, #0x2]!
	str     r5, [sp, #0xc]
.arm
branch_20db0ec: @ 20db0ec :arm
	cmp     r3, #0x80
	movcs   r2, r1
	bhs     branch_20db104
	mov     r2, r3, lsl #1
	ldrh    r2, [r4, r2]
	and     r2, r2, #0x8
.arm
branch_20db104: @ 20db104 :arm
	cmp     r2, #0x0
	bne     branch_20db0d8
.arm
branch_20db10c: @ 20db10c :arm
	cmp     r3, #0x6c
	mov     r0, #0x1
	bgt     branch_20db144
	cmp     r3, #0x68
	blt     branch_20db138
	beq     branch_20db160
	cmp     r3, #0x6a
	beq     branch_20db1ac
	cmp     r3, #0x6c
	beq     branch_20db17c
	b       branch_20db1d0
@ 0x20db138

.arm
branch_20db138: @ 20db138 :arm
	cmp     r3, #0x4c
	beq     branch_20db1a0
	b       branch_20db1d0
@ 0x20db144

.arm
branch_20db144: @ 20db144 :arm
	cmp     r3, #0x74
	bgt     branch_20db154
	beq     branch_20db1b8
	b       branch_20db1d0
@ 0x20db154

.arm
branch_20db154: @ 20db154 :arm
	cmp     r3, #0x7a
	beq     branch_20db1c4
	b       branch_20db1d0
@ 0x20db160

.arm
branch_20db160: @ 20db160 :arm
	ldrh    r1, [r12, #0x2]
	mov     r2, #0x2
	strb    r2, [sp, #0x4]
	cmp     r1, #0x68
	streqb  r0, [sp, #0x4]
	ldreqh  r3, [r12, #0x2]!
	b       branch_20db1d4
@ 0x20db17c

.arm
branch_20db17c: @ 20db17c :arm
	ldrh    r1, [r12, #0x2]
	mov     r2, #0x3
	strb    r2, [sp, #0x4]
	cmp     r1, #0x6c
	bne     branch_20db1d4
	mov     r1, #0x4
	strb    r1, [sp, #0x4]
	ldrh    r3, [r12, #0x2]!
	b       branch_20db1d4
@ 0x20db1a0

.arm
branch_20db1a0: @ 20db1a0 :arm
	mov     r1, #0x9
	strb    r1, [sp, #0x4]
	b       branch_20db1d4
@ 0x20db1ac

.arm
branch_20db1ac: @ 20db1ac :arm
	mov     r1, #0x6
	strb    r1, [sp, #0x4]
	b       branch_20db1d4
@ 0x20db1b8

.arm
branch_20db1b8: @ 20db1b8 :arm
	mov     r1, #0x8
	strb    r1, [sp, #0x4]
	b       branch_20db1d4
@ 0x20db1c4

.arm
branch_20db1c4: @ 20db1c4 :arm
	mov     r1, #0x7
	strb    r1, [sp, #0x4]
	b       branch_20db1d4
@ 0x20db1d0

.arm
branch_20db1d0: @ 20db1d0 :arm
	mov     r0, #0x0
.arm
branch_20db1d4: @ 20db1d4 :arm
	cmp     r0, #0x0
	ldrneh  r3, [r12, #0x2]!
	strh    r3, [sp, #0x6]
	cmp     r3, #0x61
	bgt     branch_20db228
	bge     branch_20db30c
	cmp     r3, #0x47
	bgt     branch_20db21c
	subs    r0, r3, #0x41
	addpl   pc, pc, r0, lsl #2
	b       branch_20db418
@ 0x20db200

.arm
Function_20db200: @ 20db200 :arm
	b       branch_20db30c
@ 0x20db204

.arm
Function_20db204: @ 20db204 :arm
	b       branch_20db418
@ 0x20db208

.arm
Function_20db208: @ 20db208 :arm
	b       branch_20db418
@ 0x20db20c

.arm
Function_20db20c: @ 20db20c :arm
	b       branch_20db418
@ 0x20db210

.arm
Function_20db210: @ 20db210 :arm
	b       branch_20db354
@ 0x20db214

.arm
Function_20db214: @ 20db214 :arm
	b       branch_20db2d4
@ 0x20db218

.arm
Function_20db218: @ 20db218 :arm
	b       branch_20db344
@ 0x20db21c

.arm
branch_20db21c: @ 20db21c :arm
	cmp     r3, #0x58
	beq     branch_20db29c
	b       branch_20db418
@ 0x20db228

.arm
branch_20db228: @ 20db228 :arm
	cmp     r3, #0x63
	bgt     branch_20db238
	beq     branch_20db3b4
	b       branch_20db418
@ 0x20db238

.arm
branch_20db238: @ 20db238 :arm
	sub     r0, r3, #0x64
	cmp     r0, #0x14
	addls   pc, pc, r0, lsl #2
	b       branch_20db418
@ 0x20db248

.arm
Function_20db248: @ 20db248 :arm
	b       branch_20db29c
@ 0x20db24c

.arm
Function_20db24c: @ 20db24c :arm
	b       branch_20db354
@ 0x20db250

.arm
Function_20db250: @ 20db250 :arm
	b       branch_20db2d4
@ 0x20db254

.arm
Function_20db254: @ 20db254 :arm
	b       branch_20db344
@ 0x20db258

.arm
Function_20db258: @ 20db258 :arm
	b       branch_20db418
@ 0x20db25c

.arm
Function_20db25c: @ 20db25c :arm
	b       branch_20db29c
@ 0x20db260

.arm
Function_20db260: @ 20db260 :arm
	b       branch_20db418
@ 0x20db264

.arm
Function_20db264: @ 20db264 :arm
	b       branch_20db418
@ 0x20db268

.arm
Function_20db268: @ 20db268 :arm
	b       branch_20db418
@ 0x20db26c

.arm
Function_20db26c: @ 20db26c :arm
	b       branch_20db418
@ 0x20db270

.arm
Function_20db270: @ 20db270 :arm
	b       branch_20db404
@ 0x20db274

.arm
Function_20db274: @ 20db274 :arm
	b       branch_20db29c
@ 0x20db278

.arm
Function_20db278: @ 20db278 :arm
	b       branch_20db390
@ 0x20db27c

.arm
Function_20db27c: @ 20db27c :arm
	b       branch_20db418
@ 0x20db280

.arm
Function_20db280: @ 20db280 :arm
	b       branch_20db418
@ 0x20db284

.arm
Function_20db284: @ 20db284 :arm
	b       branch_20db3e0
@ 0x20db288

.arm
Function_20db288: @ 20db288 :arm
	b       branch_20db418
@ 0x20db28c

.arm
Function_20db28c: @ 20db28c :arm
	b       branch_20db29c
@ 0x20db290

.arm
Function_20db290: @ 20db290 :arm
	b       branch_20db418
@ 0x20db294

.arm
Function_20db294: @ 20db294 :arm
	b       branch_20db418
@ 0x20db298

.arm
Function_20db298: @ 20db298 :arm
	b       branch_20db29c
@ 0x20db29c

.arm
branch_20db29c: @ 20db29c :arm
	ldrb    r0, [sp, #0x4]
	cmp     r0, #0x9
	moveq   r0, #0x4
	streqb  r0, [sp, #0x4]
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x0
	moveq   r0, #0x1
	streq   r0, [sp, #0xc]
	beq     branch_20db420
	ldrb    r0, [sp]
	cmp     r0, #0x2
	moveq   r0, #0x1
	streqb  r0, [sp]
	b       branch_20db420
@ 0x20db2d4

.arm
branch_20db2d4: @ 20db2d4 :arm
	ldrb    r0, [sp, #0x4]
	cmp     r0, #0x2
	cmpne   r0, #0x6
	cmpne   r0, #0x7
	cmpne   r0, #0x8
	cmpne   r0, #0x4
	ldreq   r0, [pc, #0x14c] @ [0x20db440] (=0xffff)
	streqh  r0, [sp, #0x6]
	beq     branch_20db420
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x0
	moveq   r0, #0x6
	streq   r0, [sp, #0xc]
	b       branch_20db420
@ 0x20db30c

.arm
branch_20db30c: @ 20db30c :arm
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x0
	moveq   r0, #0xd
	streq   r0, [sp, #0xc]
	ldrb    r0, [sp, #0x4]
	cmp     r0, #0x2
	cmpne   r0, #0x6
	cmpne   r0, #0x7
	cmpne   r0, #0x8
	cmpne   r0, #0x4
	cmpne   r0, #0x1
	ldreq   r0, [pc, #0x100] @ [0x20db440] (=0xffff)
	streqh  r0, [sp, #0x6]
	b       branch_20db420
@ 0x20db344

.arm
branch_20db344: @ 20db344 :arm
	ldr     r0, [sp, #0xc]
	cmp     r0, #0x0
	moveq   r0, #0x1
	streq   r0, [sp, #0xc]
.arm
branch_20db354: @ 20db354 :arm
	ldrb    r0, [sp, #0x4]
	cmp     r0, #0x2
	cmpne   r0, #0x6
	cmpne   r0, #0x7
	cmpne   r0, #0x8
	cmpne   r0, #0x4
	cmpne   r0, #0x1
	ldreq   r0, [pc, #0xc8] @ [0x20db440] (=0xffff)
	streqh  r0, [sp, #0x6]
	beq     branch_20db420
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x0
	moveq   r0, #0x6
	streq   r0, [sp, #0xc]
	b       branch_20db420
@ 0x20db390

.arm
branch_20db390: @ 20db390 :arm
	mov     r3, #0x3
	mov     r2, #0x1
	mov     r1, #0x78
	mov     r0, #0x8
	strb    r3, [sp, #0x4]
	strb    r2, [sp, #0x3]
	strh    r1, [sp, #0x6]
	str     r0, [sp, #0xc]
	b       branch_20db420
@ 0x20db3b4

.arm
branch_20db3b4: @ 20db3b4 :arm
	ldrb    r1, [sp, #0x4]
	cmp     r1, #0x3
	moveq   r0, #0x5
	streqb  r0, [sp, #0x4]
	beq     branch_20db420
	ldrb    r0, [sp, #0x2]
	cmp     r0, #0x0
	cmpeq   r1, #0x0
	ldrne   r0, [pc, #0x64] @ [0x20db440] (=0xffff)
	strneh  r0, [sp, #0x6]
	b       branch_20db420
@ 0x20db3e0

.arm
branch_20db3e0: @ 20db3e0 :arm
	ldrb    r0, [sp, #0x4]
	cmp     r0, #0x3
	moveq   r0, #0x5
	streqb  r0, [sp, #0x4]
	beq     branch_20db420
	cmp     r0, #0x0
	ldrne   r0, [pc, #0x40] @ [0x20db440] (=0xffff)
	strneh  r0, [sp, #0x6]
	b       branch_20db420
@ 0x20db404

.arm
branch_20db404: @ 20db404 :arm
	ldrb    r0, [sp, #0x4]
	cmp     r0, #0x9
	moveq   r0, #0x4
	streqb  r0, [sp, #0x4]
	b       branch_20db420
@ 0x20db418

.arm
branch_20db418: @ 20db418 :arm
	ldr     r0, [pc, #0x20] @ [0x20db440] (=0xffff)
	strh    r0, [sp, #0x6]
branch_20db420: @ 20db420 :arm
	add     r0, sp, #0x0
	ldmia   r0, {r0-r3}
	stmia   lr, {r0-r3}
	add     r0, r12, #0x2
	add     sp, sp, #0x10
	ldmfd   sp!, {r4-r8,pc}
@ 0x20db438

.word Unknown_20fea9c @ 0x20db438
.word 0x1fd @ 0x20db43c
.word 0xffff @ 0x20db440



.arm
Function_20db444: @ 20db444 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x10
	movs    r10, r0
	mov     r0, #0x0
	mov     r5, r1
	str     r0, [sp, #0xc]
	ldr     r7, [sp, #0x4c]
	mov     r6, r0
	strh    r0, [r5, #-0x2]!
	ldrb    r0, [sp, #0x43]
	str     r1, [sp]
	ldrh    r8, [sp, #0x46]
	str     r0, [sp, #0x4]
	ldr     r0, [sp, #0x48]
	ldrb    r11, [sp, #0x41]
	str     r0, [sp, #0x8]
	cmpeq   r7, #0x0
	bne     branch_20db4b8
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	beq     branch_20db4a4
	cmp     r8, #0x6f
	beq     branch_20db4b8
.arm
branch_20db4a4: @ 20db4a4 :arm
	add     sp, sp, #0x10
	mov     r0, r5
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20db4b8

.arm
branch_20db4b8: @ 20db4b8 :arm
	cmp     r8, #0x69
	bgt     branch_20db4e0
	bge     branch_20db514
	cmp     r8, #0x58
	bgt     branch_20db4d4
	beq     branch_20db540
	b       branch_20db548
@ 0x20db4d4

.arm
branch_20db4d4: @ 20db4d4 :arm
	cmp     r8, #0x64
	beq     branch_20db514
	b       branch_20db548
@ 0x20db4e0

.arm
branch_20db4e0: @ 20db4e0 :arm
	cmp     r8, #0x6f
	bgt     branch_20db4f4
	moveq   r4, #0x8
	moveq   r11, #0x0
	b       branch_20db548
@ 0x20db4f4

.arm
branch_20db4f4: @ 20db4f4 :arm
	cmp     r8, #0x78
	bgt     branch_20db548
	cmp     r8, #0x75
	blt     branch_20db548
	beq     branch_20db534
	cmp     r8, #0x78
	beq     branch_20db540
	b       branch_20db548
@ 0x20db514

.arm
branch_20db514: @ 20db514 :arm
	cmp     r10, #0x0
	mov     r4, #0xa
	bge     branch_20db548
	mov     r0, #0x1
	cmp     r10, #2, 2 @ #0x80000000
	rsbne   r10, r10, #0x0
	str     r0, [sp, #0xc]
	b       branch_20db548
@ 0x20db534

.arm
branch_20db534: @ 20db534 :arm
	mov     r4, #0xa
	mov     r11, #0x0
	b       branch_20db548
@ 0x20db540

.arm
branch_20db540: @ 20db540 :arm
	mov     r4, #0x10
	mov     r11, #0x0
.arm
branch_20db548: @ 20db548 :arm
	mov     r0, r10
	mov     r1, r4
	bl      _u32_div_f
	mov     r9, r1
	mov     r0, r10
	mov     r1, r4
	bl      _u32_div_f
	cmp     r9, #0xa
	mov     r10, r0
	addlt   r9, r9, #0x30
	blt     branch_20db580
	cmp     r8, #0x78
	addeq   r9, r9, #0x57
	addne   r9, r9, #0x37
.arm
branch_20db580: @ 20db580 :arm
	cmp     r10, #0x0
	strh    r9, [r5, #-0x2]!
	add     r6, r6, #0x1
	bne     branch_20db548
	cmp     r4, #0x8
	bne     branch_20db5b4
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	ldrneh  r0, [r5]
	cmpne   r0, #0x30
	movne   r0, #0x30
	strneh  r0, [r5, #-0x2]!
	addne   r6, r6, #0x1
.arm
branch_20db5b4: @ 20db5b4 :arm
	ldrb    r0, [sp, #0x40]
	cmp     r0, #0x2
	bne     branch_20db5e8
	ldr     r0, [sp, #0xc]
	ldr     r7, [sp, #0x8]
	cmp     r0, #0x0
	cmpeq   r11, #0x0
	subne   r7, r7, #0x1
	cmp     r4, #0x10
	bne     branch_20db5e8
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	subne   r7, r7, #0x2
.arm
branch_20db5e8: @ 20db5e8 :arm
	ldr     r0, [sp]
	ldr     r1, [pc, #0x9c] @ [0x20db690] (=0x1fd)
	sub     r0, r0, r5
	add     r0, r0, r0, lsr #31
	add     r0, r7, r0, asr #1
	cmp     r0, r1
	addgt   sp, sp, #0x10
	movgt   r0, #0x0
	ldmgtfd sp!, {r3-r11,lr}
	addgt   sp, sp, #0x10
	bxgt    lr
	cmp     r6, r7
	bge     branch_20db630
	mov     r0, #0x30
.arm
branch_20db620: @ 20db620 :arm
	add     r6, r6, #0x1
	cmp     r6, r7
	strh    r0, [r5, #-0x2]!
	blt     branch_20db620
.arm
branch_20db630: @ 20db630 :arm
	cmp     r4, #0x10
	bne     branch_20db64c
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	movne   r0, #0x30
	strneh  r8, [r5, #-0x2]
	strneh  r0, [r5, #-0x4]!
.arm
branch_20db64c: @ 20db64c :arm
	ldr     r0, [sp, #0xc]
	cmp     r0, #0x0
	movne   r0, #0x2d
	strneh  r0, [r5, #-0x2]!
	bne     branch_20db67c
	cmp     r11, #0x1
	moveq   r0, #0x2b
	streqh  r0, [r5, #-0x2]!
	beq     branch_20db67c
	cmp     r11, #0x2
	moveq   r0, #0x20
	streqh  r0, [r5, #-0x2]!
.arm
branch_20db67c: @ 20db67c :arm
	mov     r0, r5
	add     sp, sp, #0x10
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20db690

.word 0x1fd @ 0x20db690
.arm
Function_20db694: @ 20db694 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0x1c
	mov     r9, r1
	mov     r1, #0x0
	mov     r10, r0
	mov     r8, r2
	mov     r0, r1
	strh    r0, [r8, #-0x2]!
	ldr     r0, [sp, #0x58]
	cmp     r9, #0x0
	str     r0, [sp, #0x14]
	ldrb    r0, [sp, #0x4f]
	cmpeq   r10, #0x0
	str     r2, [sp]
	str     r0, [sp, #0x4]
	ldrh    r0, [sp, #0x52]
	str     r1, [sp, #0x18]
	mov     r11, r1
	str     r0, [sp, #0x8]
	ldr     r0, [sp, #0x54]
	str     r0, [sp, #0xc]
	ldrb    r0, [sp, #0x4d]
	str     r0, [sp, #0x10]
	ldreq   r0, [sp, #0x14]
	cmpeq   r0, #0x0
	bne     branch_20db72c
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	beq     branch_20db718
	ldr     r0, [sp, #0x8]
	cmp     r0, #0x6f
	beq     branch_20db72c
.arm
branch_20db718: @ 20db718 :arm
	add     sp, sp, #0x1c
	mov     r0, r8
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20db72c

.arm
branch_20db72c: @ 20db72c :arm
	ldr     r0, [sp, #0x8]
	cmp     r0, #0x69
	bgt     branch_20db758
	bge     branch_20db788
	cmp     r0, #0x58
	bgt     branch_20db74c
	beq     branch_20db7dc
	b       branch_20db7e8
@ 0x20db74c

.arm
branch_20db74c: @ 20db74c :arm
	cmp     r0, #0x64
	beq     branch_20db788
	b       branch_20db7e8
@ 0x20db758

.arm
branch_20db758: @ 20db758 :arm
	cmp     r0, #0x6f
	bgt     branch_20db768
	beq     branch_20db7bc
	b       branch_20db7e8
@ 0x20db768

.arm
branch_20db768: @ 20db768 :arm
	cmp     r0, #0x78
	bgt     branch_20db7e8
	cmp     r0, #0x75
	blt     branch_20db7e8
	beq     branch_20db7cc
	cmp     r0, #0x78
	beq     branch_20db7dc
	b       branch_20db7e8
@ 0x20db788

.arm
branch_20db788: @ 20db788 :arm
	subs    r0, r10, #0x0
	sbcs    r0, r9, #0x0
	mov     r7, #0xa
	mov     r6, #0x0
	bge     branch_20db7e8
	cmp     r9, #2, 2 @ #0x80000000
	cmpeq   r10, r6
	beq     branch_20db7b0
	rsbs    r10, r10, #0x0
	rsc     r9, r9, #0x0
.arm
branch_20db7b0: @ 20db7b0 :arm
	mov     r0, #0x1
	str     r0, [sp, #0x18]
	b       branch_20db7e8
@ 0x20db7bc

.arm
branch_20db7bc: @ 20db7bc :arm
	mov     r6, #0x0
	str     r6, [sp, #0x10]
	mov     r7, #0x8
	b       branch_20db7e8
@ 0x20db7cc

.arm
branch_20db7cc: @ 20db7cc :arm
	mov     r6, #0x0
	str     r6, [sp, #0x10]
	mov     r7, #0xa
	b       branch_20db7e8
@ 0x20db7dc

.arm
branch_20db7dc: @ 20db7dc :arm
	mov     r6, #0x0
	str     r6, [sp, #0x10]
	mov     r7, #0x10
.arm
branch_20db7e8: @ 20db7e8 :arm
	mov     r4, #0x0
.arm
branch_20db7ec: @ 20db7ec :arm
	mov     r0, r10
	mov     r1, r9
	mov     r2, r7
	mov     r3, r6
	bl      _ull_mod
	mov     r5, r0
	mov     r0, r10
	mov     r1, r9
	mov     r2, r7
	mov     r3, r6
	bl      _ll_udiv
	mov     r10, r0
	cmp     r5, #0xa
	mov     r9, r1
	addlt   r0, r5, #0x30
	blt     branch_20db83c
	ldr     r0, [sp, #0x8]
	cmp     r0, #0x78
	addeq   r0, r5, #0x57
	addne   r0, r5, #0x37
.arm
branch_20db83c: @ 20db83c :arm
	strh    r0, [r8, #-0x2]!
	mov     r0, #0x0
	cmp     r9, r0
	cmpeq   r10, r4
	add     r11, r11, #0x1
	bne     branch_20db7ec
	cmp     r6, #0x0
	cmpeq   r7, #0x8
	bne     branch_20db87c
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	ldrneh  r0, [r8]
	cmpne   r0, #0x30
	movne   r0, #0x30
	strneh  r0, [r8, #-0x2]!
	addne   r11, r11, #0x1
.arm
branch_20db87c: @ 20db87c :arm
	ldrb    r0, [sp, #0x4c]
	cmp     r0, #0x2
	bne     branch_20db8cc
	ldr     r0, [sp, #0xc]
	str     r0, [sp, #0x14]
	ldr     r0, [sp, #0x18]
	cmp     r0, #0x0
	ldreq   r0, [sp, #0x10]
	cmpeq   r0, #0x0
	ldrne   r0, [sp, #0x14]
	subne   r0, r0, #0x1
	strne   r0, [sp, #0x14]
	cmp     r6, #0x0
	cmpeq   r7, #0x10
	bne     branch_20db8cc
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	ldrne   r0, [sp, #0x14]
	subne   r0, r0, #0x2
	strne   r0, [sp, #0x14]
.arm
branch_20db8cc: @ 20db8cc :arm
	ldr     r0, [sp]
	ldr     r2, [pc, #0xb8] @ [0x20db990] (=0x1fd)
	sub     r0, r0, r8
	add     r1, r0, r0, lsr #31
	ldr     r0, [sp, #0x14]
	add     r0, r0, r1, asr #1
	cmp     r0, r2
	addgt   sp, sp, #0x1c
	movgt   r0, #0x0
	ldmgtfd sp!, {r4-r11,lr}
	addgt   sp, sp, #0x10
	bxgt    lr
	ldr     r0, [sp, #0x14]
	cmp     r11, r0
	bge     branch_20db920
	mov     r1, #0x30
.arm
branch_20db90c: @ 20db90c :arm
	ldr     r0, [sp, #0x14]
	add     r11, r11, #0x1
	cmp     r11, r0
	strh    r1, [r8, #-0x2]!
	blt     branch_20db90c
.arm
branch_20db920: @ 20db920 :arm
	cmp     r6, #0x0
	cmpeq   r7, #0x10
	bne     branch_20db948
	ldr     r0, [sp, #0x4]
	cmp     r0, #0x0
	beq     branch_20db948
	ldr     r0, [sp, #0x8]
	mov     r1, #0x30
	strh    r0, [r8, #-0x2]
	strh    r1, [r8, #-0x4]!
.arm
branch_20db948: @ 20db948 :arm
	ldr     r0, [sp, #0x18]
	cmp     r0, #0x0
	movne   r0, #0x2d
	strneh  r0, [r8, #-0x2]!
	bne     branch_20db97c
	ldr     r0, [sp, #0x10]
	cmp     r0, #0x1
	moveq   r0, #0x2b
	streqh  r0, [r8, #-0x2]!
	beq     branch_20db97c
	cmp     r0, #0x2
	moveq   r0, #0x20
	streqh  r0, [r8, #-0x2]!
.arm
branch_20db97c: @ 20db97c :arm
	mov     r0, r8
	add     sp, sp, #0x1c
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20db990

.word 0x1fd @ 0x20db990
.arm
Function_20db994: @ 20db994 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r3-r10,lr}
	sub     sp, sp, #0x44
	ldr     r7, [sp, #0x80]
	ldr     r0, [pc, #0x354] @ [0x20dbd00] (=0x1fd)
	mov     r8, r2
	cmp     r7, r0
	ldrh    r6, [sp, #0x7a]
	ldrb    r5, [sp, #0x77]
	ldrb    r4, [sp, #0x75]
	ldr     r1, [sp, #0x68]
	ldr     r2, [sp, #0x6c]
	addgt   sp, sp, #0x44
	movgt   r0, #0x0
	ldmgtfd sp!, {r3-r10,lr}
	addgt   sp, sp, #0x10
	bxgt    lr
	mov     r10, #0x0
	mov     r9, #0x20
	add     r0, sp, #0x8
	add     r3, sp, #0xc
	strb    r10, [sp, #0x8]
	strh    r9, [sp, #0xa]
	bl      Function_20df108
	ldr     r0, [sp, #0x68]
	ldr     r1, [sp, #0x6c]
	bl      Function_20de084
	mov     r2, r0
	mov     r0, r10
	mov     r3, r1
	mov     r1, r0
	bl      Function_20e0f94
	bne     branch_20dba3c
	sub     r4, r8, #0xc
	ldr     r1, [pc, #0x2e0] @ [0x20dbd04] (=Unknown_2101828)
	mov     r0, r4
	bl      Function_20dce80
	add     sp, sp, #0x44
	mov     r0, r4
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20dba3c: @ 20dba3c :arm
	ldrb    r0, [sp, #0x11]
	cmp     r0, #0x49
	bne     branch_20dbabc
	ldrsb   r0, [sp, #0xc]
	cmp     r0, #0x0
	beq     branch_20dba80
	cmp     r6, #0x41
	sub     r4, r8, #0xa
	bne     branch_20dba70
	ldr     r1, [pc, #0x2a0] @ [0x20dbd08] (=Unknown_2101834)
	mov     r0, r4
	bl      Function_20dce80
	b       branch_20dbaa8

branch_20dba70: @ 20dba70 :arm
	ldr     r1, [pc, #0x294] @ [0x20dbd0c] (=Unknown_2101840)
	mov     r0, r4
	bl      Function_20dce80
	b       branch_20dbaa8

branch_20dba80: @ 20dba80 :arm
	cmp     r6, #0x41
	sub     r4, r8, #0x8
	bne     branch_20dba9c
	ldr     r1, [pc, #0x27c] @ [0x20dbd10] (=Unknown_210184c)
	mov     r0, r4
	bl      Function_20dce80
	b       branch_20dbaa8

branch_20dba9c: @ 20dba9c :arm
	ldr     r1, [pc, #0x270] @ [0x20dbd14] (=Unknown_2101854)
	mov     r0, r4
	bl      Function_20dce80
branch_20dbaa8: @ 20dbaa8 :arm
	add     sp, sp, #0x44
	mov     r0, r4
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20dbabc: @ 20dbabc :arm
	cmp     r0, #0x4e
	bne     branch_20dbb38
	ldrsb   r0, [sp, #0xc]
	cmp     r0, #0x0
	beq     branch_20dbafc
	cmp     r6, #0x41
	sub     r4, r8, #0xa
	bne     branch_20dbaec
	ldr     r1, [pc, #0x234] @ [0x20dbd18] (=Unknown_210185c)
	mov     r0, r4
	bl      Function_20dce80
	b       branch_20dbb24

branch_20dbaec: @ 20dbaec :arm
	ldr     r1, [pc, #0x228] @ [0x20dbd1c] (=Unknown_2101868)
	mov     r0, r4
	bl      Function_20dce80
	b       branch_20dbb24

branch_20dbafc: @ 20dbafc :arm
	cmp     r6, #0x41
	sub     r4, r8, #0x8
	bne     branch_20dbb18
	ldr     r1, [pc, #0x210] @ [0x20dbd20] (=Unknown_2101874)
	mov     r0, r4
	bl      Function_20dce80
	b       branch_20dbb24

branch_20dbb18: @ 20dbb18 :arm
	ldr     r1, [pc, #0x204] @ [0x20dbd24] (=Unknown_210187c)
	mov     r0, r4
	bl      Function_20dce80
branch_20dbb24: @ 20dbb24 :arm
	add     sp, sp, #0x44
	mov     r0, r4
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20dbb38: @ 20dbb38 :arm
	mov     r3, r10
	mov     r1, #0x1
	mov     r0, #0x64
	add     r9, sp, #0x68
	strb    r1, [sp, #0x34]
	strb    r1, [sp, #0x35]
	strb    r3, [sp, #0x36]
	strb    r3, [sp, #0x37]
	strb    r3, [sp, #0x38]
	str     r3, [sp, #0x3c]
	str     r1, [sp, #0x40]
	strh    r0, [sp, #0x3a]
.arm
branch_20dbb68: @ 20dbb68 :arm
	rsb     r1, r3, #0x7
	ldrsb   r2, [r9, r3]
	ldrsb   r0, [r9, r1]
	strb    r0, [r9, r3]
	add     r3, r3, #0x1
	strb    r2, [r9, r1]
	cmp     r3, #0x4
	blt     branch_20dbb68
	ldrb    r0, [sp, #0x69]
	ldrb    r1, [sp, #0x68]
	ldr     r9, [pc, #0x190] @ [0x20dbd28] (=0x7ff)
	mov     r0, r0, lsl #17
	orr     r1, r0, r1, lsl #25
	add     r0, sp, #0x34
	and     lr, r9, r1, lsr #21
	sub     r12, sp, #0x8
	ldmia   r0, {r0-r3}
	stmia   r12, {r0-r3}
	rsb     r0, r9, #1, 22 @ #0x400
	mov     r1, r8
	add     r0, lr, r0
	ldmia   r12, {r2,r3}
	bl      Function_20db444
	cmp     r6, #0x61
	moveq   r1, #0x70
	movne   r1, #0x50
	strh    r1, [r0, #-0x2]!
	mov     r1, r7, lsl #2
	mov     lr, r7
	cmp     r7, #0x1
	add     r8, r1, #0xb
	add     r12, sp, #0x68
	blt     branch_20dbc78
	mov     r9, #0x30
.arm
branch_20dbbf0: @ 20dbbf0 :arm
	cmp     r8, #0x40
	bge     branch_20dbc60
	ldrb    r1, [r12, r8, asr #0x3]
	and     r2, r8, #0x7
	rsb     r3, r2, #0x7
	mov     r2, r1, asr r3
	sub     r10, r8, #0x4
	bic     r1, r8, #0x7
	bic     r10, r10, #0x7
	cmp     r1, r10
	add     r10, r12, r8, asr #3
	and     r1, r2, #0xff
	beq     branch_20dbc34
	ldrb    r2, [r10, #-0x1]
	mov     r2, r2, lsl #8
	orr     r1, r1, r2, asr r3
	and     r1, r1, #0xff
.arm
branch_20dbc34: @ 20dbc34 :arm
	and     r1, r1, #0xf
	cmp     r1, #0xa
	addcc   r1, r1, #0x30
	andcc   r1, r1, #0xff
	blo     branch_20dbc64
	cmp     r6, #0x61
	addeq   r1, r1, #0x57
	andeq   r1, r1, #0xff
	addne   r1, r1, #0x37
	andne   r1, r1, #0xff
	b       branch_20dbc64
@ 0x20dbc60

.arm
branch_20dbc60: @ 20dbc60 :arm
	mov     r1, r9
.arm
branch_20dbc64: @ 20dbc64 :arm
	sub     lr, lr, #0x1
	cmp     lr, #0x1
	strh    r1, [r0, #-0x2]!
	sub     r8, r8, #0x4
	bge     branch_20dbbf0
.arm
branch_20dbc78: @ 20dbc78 :arm
	cmp     r7, #0x0
	cmpeq   r5, #0x0
	movne   r1, #0x2e
	strneh  r1, [r0, #-0x2]!
	mov     r1, #0x31
	strh    r1, [r0, #-0x2]
	cmp     r6, #0x61
	moveq   r1, #0x78
	movne   r1, #0x58
	strh    r1, [r0, #-0x4]!
	mov     r1, #0x30
	strh    r1, [r0, #-0x2]!
	ldrsb   r1, [sp, #0xc]
	cmp     r1, #0x0
	movne   r1, #0x2d
	strneh  r1, [r0, #-0x2]!
	addne   sp, sp, #0x44
	ldmnefd sp!, {r3-r10,lr}
	addne   sp, sp, #0x10
	bxne    lr
	cmp     r4, #0x1
	moveq   r1, #0x2b
	streqh  r1, [r0, #-0x2]!
	addeq   sp, sp, #0x44
	ldmeqfd sp!, {r3-r10,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
	cmp     r4, #0x2
	moveq   r1, #0x20
	streqh  r1, [r0, #-0x2]!
	add     sp, sp, #0x44
	ldmfd   sp!, {r3-r10,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dbd00

.word 0x1fd @ 0x20dbd00
.word Unknown_2101828 @ 0x20dbd04
.word Unknown_2101834 @ 0x20dbd08
.word Unknown_2101840 @ 0x20dbd0c
.word Unknown_210184c @ 0x20dbd10
.word Unknown_2101854 @ 0x20dbd14
.word Unknown_210185c @ 0x20dbd18
.word Unknown_2101868 @ 0x20dbd1c
.word Unknown_2101874 @ 0x20dbd20
.word Unknown_210187c @ 0x20dbd24
.word 0x7ff @ 0x20dbd28



.arm
Function_20dbd2c: @ 20dbd2c :arm
	stmfd   sp!, {r4,lr}
	cmp     r1, #0x0
	bge     branch_20dbd54
branch_20dbd38: @ 20dbd38 :arm
	mov     r1, #0x0
	strh    r1, [r0, #0x2]
	mov     r1, #0x1
	strb    r1, [r0, #0x4]
	mov     r1, #0x30
	strb    r1, [r0, #0x5]
	ldmfd   sp!, {r4,pc}
@ 0x20dbd54

.arm
branch_20dbd54: @ 20dbd54 :arm
	ldrb    lr, [r0, #0x4]
	cmp     r1, lr
	ldmgefd sp!, {r4,pc}
	add     r12, r0, #0x5
	add     r2, r12, r1
	add     r2, r2, #0x1
	ldrsb   r3, [r2, #-0x1]!
	sub     r3, r3, #0x30
	mov     r3, r3, lsl #24
	mov     r3, r3, asr #24
	cmp     r3, #0x5
	bne     branch_20dbdb4
	add     r12, r12, lr
.arm
branch_20dbd88: @ 20dbd88 :arm
	sub     r12, r12, #0x1
	cmp     r12, r2
	bls     branch_20dbda0
	ldrsb   r3, [r12]
	cmp     r3, #0x30
	beq     branch_20dbd88
.arm
branch_20dbda0: @ 20dbda0 :arm
	cmp     r12, r2
	ldreqsb r3, [r2, #-0x1]
	andeq   r4, r3, #0x1
	movne   r4, #0x1
	b       branch_20dbdbc
@ 0x20dbdb4

.arm
branch_20dbdb4: @ 20dbdb4 :arm
	movgt   r4, #0x1
	movle   r4, #0x0
.arm
branch_20dbdbc: @ 20dbdbc :arm
	cmp     r1, #0x0
	beq     branch_20dbe18
	mov     r12, #0x0
	mov     lr, #0x1
.arm
branch_20dbdcc: @ 20dbdcc :arm
	ldrsb   r3, [r2, #-0x1]!
	sub     r3, r3, #0x30
	add     r3, r3, r4
	mov     r3, r3, lsl #24
	mov     r3, r3, asr #24
	cmp     r3, #0x9
	movgt   r4, lr
	movle   r4, r12
	cmp     r4, #0x0
	bne     branch_20dbdfc
	cmp     r3, #0x0
	bne     branch_20dbe04
.arm
branch_20dbdfc: @ 20dbdfc :arm
	sub     r1, r1, #0x1
	b       branch_20dbe10
@ 0x20dbe04

.arm
branch_20dbe04: @ 20dbe04 :arm
	add     r3, r3, #0x30
	strb    r3, [r2]
	b       branch_20dbe18
@ 0x20dbe10

.arm
branch_20dbe10: @ 20dbe10 :arm
	cmp     r1, #0x0
	bne     branch_20dbdcc
.arm
branch_20dbe18: @ 20dbe18 :arm
	cmp     r4, #0x0
	beq     branch_20dbe40
	ldrsh   r3, [r0, #0x2]
	mov     r2, #0x1
	mov     r1, #0x31
	add     r3, r3, #0x1
	strh    r3, [r0, #0x2]
	strb    r2, [r0, #0x4]
	strb    r1, [r0, #0x5]
	ldmfd   sp!, {r4,pc}
@ 0x20dbe40

.arm
branch_20dbe40: @ 20dbe40 :arm
	cmp     r1, #0x0
	beq     branch_20dbd38
	strb    r1, [r0, #0x4]
	ldmfd   sp!, {r4,pc}
@ 0x20dbe50

.arm
Function_20dbe50: @ 20dbe50 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #139, 30 @ #0x22c
	mov     r10, r0
	add     r0, sp, #37, 28 @ #0x250
	ldr     r7, [sp, #0x268]
	ldr     r3, [pc, #0x600] @ [0x20dc470] (=0x1fd)
	ldrh    r6, [r0, #0x12]
	cmp     r7, r3
	ldrb    r5, [sp, #0x25f]
	ldrb    r4, [sp, #0x25d]
	mov     r8, r1
	mov     r9, r2
	addgt   sp, sp, #139, 30 @ #0x22c
	movgt   r0, #0x0
	ldmgtfd sp!, {r4-r11,lr}
	addgt   sp, sp, #0x10
	bxgt    lr
	mov     r12, #0x0
	mov     r11, #0x20
	add     r0, sp, #0x0
	add     r3, sp, #0x4
	mov     r1, r10
	mov     r2, r8
	strb    r12, [sp]
	strh    r11, [sp, #0x2]
	bl      Function_20df108
	ldrb    r0, [sp, #0x8]
	add     r1, sp, #0x9
	add     r0, r1, r0
	b       branch_20dbee4
@ 0x20dbecc

.arm
branch_20dbecc: @ 20dbecc :arm
	ldrb    r2, [sp, #0x8]
	ldrsh   r1, [sp, #0x6]
	sub     r2, r2, #0x1
	add     r1, r1, #0x1
	strb    r2, [sp, #0x8]
	strh    r1, [sp, #0x6]
.arm
branch_20dbee4: @ 20dbee4 :arm
	ldrb    r1, [sp, #0x8]
	cmp     r1, #0x1
	bls     branch_20dbefc
	ldrsb   r1, [r0, #-0x1]!
	cmp     r1, #0x30
	beq     branch_20dbecc
.arm
branch_20dbefc: @ 20dbefc :arm
	ldrb    r0, [sp, #0x9]
	cmp     r0, #0x30
	beq     branch_20dbf1c
	cmp     r0, #0x49
	beq     branch_20dbf28
	cmp     r0, #0x4e
	beq     branch_20dbfe0
	b       branch_20dc08c
@ 0x20dbf1c

.arm
branch_20dbf1c: @ 20dbf1c :arm
	mov     r0, #0x0
	strh    r0, [sp, #0x6]
	b       branch_20dc08c
@ 0x20dbf28

.arm
branch_20dbf28: @ 20dbf28 :arm
	mov     r2, #0x0
	mov     r0, r10
	mov     r1, r8
	mov     r3, r2
	bl      Function_20e0ef8
	bhs     branch_20dbf88
	cmp     r6, #0x80
	sub     r4, r9, #0xa
	movcs   r0, #0x0
	bhs     branch_20dbf60
	ldr     r0, [pc, #0x51c] @ [0x20dc474] (=Unknown_20fea9c)
	mov     r1, r6, lsl #1
	ldrh    r0, [r0, r1]
	and     r0, r0, #2, 24 @ #0x200
branch_20dbf60: @ 20dbf60 :arm
	cmp     r0, #0x0
	beq     branch_20dbf78
	ldr     r1, [pc, #0x508] @ [0x20dc478] (=Unknown_2101834)
	mov     r0, r4
	bl      Function_20dce80
	b       branch_20dbfcc

branch_20dbf78: @ 20dbf78 :arm
	ldr     r1, [pc, #0x4fc] @ [0x20dc47c] (=Unknown_2101840)
	mov     r0, r4
	bl      Function_20dce80
	b       branch_20dbfcc

branch_20dbf88: @ 20dbf88 :arm
	cmp     r6, #0x80
	sub     r4, r9, #0x8
	movcs   r0, #0x0
	bhs     branch_20dbfa8
	ldr     r0, [pc, #0x4d4] @ [0x20dc474] (=Unknown_20fea9c)
	mov     r1, r6, lsl #1
	ldrh    r0, [r0, r1]
	and     r0, r0, #2, 24 @ #0x200
branch_20dbfa8: @ 20dbfa8 :arm
	cmp     r0, #0x0
	beq     branch_20dbfc0
	ldr     r1, [pc, #0x4c8] @ [0x20dc480] (=Unknown_210184c)
	mov     r0, r4
	bl      Function_20dce80
	b       branch_20dbfcc

branch_20dbfc0: @ 20dbfc0 :arm
	ldr     r1, [pc, #0x4bc] @ [0x20dc484] (=Unknown_2101854)
	mov     r0, r4
	bl      Function_20dce80
branch_20dbfcc: @ 20dbfcc :arm
	add     sp, sp, #139, 30 @ #0x22c
	mov     r0, r4
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20dbfe0: @ 20dbfe0 :arm
	ldrsb   r0, [sp, #0x4]
	cmp     r0, #0x0
	beq     branch_20dc034
	cmp     r6, #0x80
	sub     r4, r9, #0xa
	movcs   r0, #0x0
	bhs     branch_20dc00c
	ldr     r0, [pc, #0x470] @ [0x20dc474] (=Unknown_20fea9c)
	mov     r1, r6, lsl #1
	ldrh    r0, [r0, r1]
	and     r0, r0, #2, 24 @ #0x200
branch_20dc00c: @ 20dc00c :arm
	cmp     r0, #0x0
	beq     branch_20dc024
	ldr     r1, [pc, #0x46c] @ [0x20dc488] (=Unknown_210185c)
	mov     r0, r4
	bl      Function_20dce80
	b       branch_20dc078

branch_20dc024: @ 20dc024 :arm
	ldr     r1, [pc, #0x460] @ [0x20dc48c] (=Unknown_2101868)
	mov     r0, r4
	bl      Function_20dce80
	b       branch_20dc078

branch_20dc034: @ 20dc034 :arm
	cmp     r6, #0x80
	sub     r4, r9, #0x8
	movcs   r0, #0x0
	bhs     branch_20dc054
	ldr     r0, [pc, #0x428] @ [0x20dc474] (=Unknown_20fea9c)
	mov     r1, r6, lsl #1
	ldrh    r0, [r0, r1]
	and     r0, r0, #2, 24 @ #0x200
branch_20dc054: @ 20dc054 :arm
	cmp     r0, #0x0
	beq     branch_20dc06c
	ldr     r1, [pc, #0x42c] @ [0x20dc490] (=Unknown_2101874)
	mov     r0, r4
	bl      Function_20dce80
	b       branch_20dc078

branch_20dc06c: @ 20dc06c :arm
	ldr     r1, [pc, #0x420] @ [0x20dc494] (=Unknown_210187c)
	mov     r0, r4
	bl      Function_20dce80
branch_20dc078: @ 20dc078 :arm
	add     sp, sp, #139, 30 @ #0x22c
	mov     r0, r4
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr

branch_20dc08c: @ 20dc08c :arm
	ldrb    r1, [sp, #0x8]
	ldrsh   r2, [sp, #0x6]
	add     r0, sp, #2, 24 @ #0x200
	sub     r1, r1, #0x1
	add     r0, r0, #0x2a
	add     r1, r2, r1
	sub     r8, r0, #0x1
	strh    r1, [sp, #0x6]
	mov     r0, #0x0
	strb    r0, [r8]
	cmp     r6, #0x65
	bgt     branch_20dc0e8
	bge     branch_20dc174
	cmp     r6, #0x47
	bgt     branch_20dc434
	cmp     r6, #0x45
	blt     branch_20dc434
	beq     branch_20dc174
	cmp     r6, #0x46
	beq     branch_20dc2c0
	cmp     r6, #0x47
	beq     branch_20dc100
	b       branch_20dc434
@ 0x20dc0e8

.arm
branch_20dc0e8: @ 20dc0e8 :arm
	cmp     r6, #0x66
	bgt     branch_20dc0f8
	beq     branch_20dc2c0
	b       branch_20dc434
@ 0x20dc0f8

.arm
branch_20dc0f8: @ 20dc0f8 :arm
	cmp     r6, #0x67
	bne     branch_20dc434
.arm
branch_20dc100: @ 20dc100 :arm
	ldrb    r0, [sp, #0x8]
	cmp     r0, r7
	ble     branch_20dc118
	add     r0, sp, #0x4
	mov     r1, r7
	bl      Function_20dbd2c
.arm
branch_20dc118: @ 20dc118 :arm
	ldrsh   r2, [sp, #0x6]
	mvn     r0, #0x3
	cmp     r2, r0
	blt     branch_20dc130
	cmp     r2, r7
	blt     branch_20dc150
.arm
branch_20dc130: @ 20dc130 :arm
	cmp     r5, #0x0
	ldreqb  r0, [sp, #0x8]
	subne   r7, r7, #0x1
	subeq   r7, r0, #0x1
	cmp     r6, #0x67
	moveq   r6, #0x65
	movne   r6, #0x45
	b       branch_20dc174
@ 0x20dc150

.arm
branch_20dc150: @ 20dc150 :arm
	cmp     r5, #0x0
	addne   r0, r2, #0x1
	subne   r7, r7, r0
	bne     branch_20dc2c0
	ldrb    r1, [sp, #0x8]
	add     r0, r2, #0x1
	subs    r7, r1, r0
	movmi   r7, #0x0
	b       branch_20dc2c0
@ 0x20dc174

.arm
branch_20dc174: @ 20dc174 :arm
	ldrb    r0, [sp, #0x8]
	add     r1, r7, #0x1
	cmp     r0, r1
	ble     branch_20dc18c
	add     r0, sp, #0x4
	bl      Function_20dbd2c
.arm
branch_20dc18c: @ 20dc18c :arm
	ldrsh   lr, [sp, #0x6]
	mov     r11, #0x2b
	mov     r10, #0x0
	cmp     lr, #0x0
	rsblt   lr, lr, #0x0
	movlt   r11, #0x2d
	ldr     r3, [pc, #0x2ec] @ [0x20dc498] (=0x66666667)
	mov     r0, #0xa
	b       branch_20dc1e0
@ 0x20dc1b0

.arm
branch_20dc1b0: @ 20dc1b0 :arm
	mov     r1, lr, lsr #31
	smull   r2, r12, r3, lr
	add     r12, r1, r12, asr #2
	smull   r1, r2, r0, r12
	sub     r12, lr, r1
	add     r1, r12, #0x30
	strb    r1, [r8, #-0x1]!
	mov     r2, lr
	smull   r1, lr, r3, r2
	mov     r1, r2, lsr #31
	add     lr, r1, lr, asr #2
	add     r10, r10, #0x1
.arm
branch_20dc1e0: @ 20dc1e0 :arm
	cmp     lr, #0x0
	bne     branch_20dc1b0
	cmp     r10, #0x2
	blt     branch_20dc1b0
	add     r0, sp, #0x2a
	strb    r11, [r8, #-0x1]
	strb    r6, [r8, #-0x2]!
	sub     r1, r0, r8
	ldr     r0, [pc, #0x268] @ [0x20dc470] (=0x1fd)
	add     r1, r1, r7
	cmp     r1, r0
	addgt   sp, sp, #139, 30 @ #0x22c
	movgt   r0, #0x0
	ldmgtfd sp!, {r4-r11,lr}
	addgt   sp, sp, #0x10
	bxgt    lr
	ldrb    r1, [sp, #0x8]
	add     r0, r7, #0x1
	cmp     r1, r0
	bge     branch_20dc250
	add     r0, r7, #0x2
	sub     r0, r0, r1
	subs    r1, r0, #0x1
	beq     branch_20dc250
	mov     r0, #0x30
.arm
branch_20dc244: @ 20dc244 :arm
	strb    r0, [r8, #-0x1]!
	subs    r1, r1, #0x1
	bne     branch_20dc244
.arm
branch_20dc250: @ 20dc250 :arm
	ldrb    r1, [sp, #0x8]
	add     r0, sp, #0x9
	add     r2, r0, r1
	subs    r1, r1, #0x1
	beq     branch_20dc274
.arm
branch_20dc264: @ 20dc264 :arm
	ldrsb   r0, [r2, #-0x1]!
	subs    r1, r1, #0x1
	strb    r0, [r8, #-0x1]!
	bne     branch_20dc264
.arm
branch_20dc274: @ 20dc274 :arm
	cmp     r7, #0x0
	cmpeq   r5, #0x0
	movne   r0, #0x2e
	strneb  r0, [r8, #-0x1]!
	ldrb    r0, [sp, #0x9]
	strb    r0, [r8, #-0x1]!
	ldrsb   r0, [sp, #0x4]
	cmp     r0, #0x0
	movne   r0, #0x2d
	strneb  r0, [r8, #-0x1]!
	bne     branch_20dc434
	cmp     r4, #0x1
	moveq   r0, #0x2b
	streqb  r0, [r8, #-0x1]!
	beq     branch_20dc434
	cmp     r4, #0x2
	moveq   r0, #0x20
	streqb  r0, [r8, #-0x1]!
	b       branch_20dc434
@ 0x20dc2c0

.arm
branch_20dc2c0: @ 20dc2c0 :arm
	ldrsh   r3, [sp, #0x6]
	ldrb    r2, [sp, #0x8]
	sub     r0, r2, r3
	subs    r1, r0, #0x1
	movmi   r1, #0x0
	cmp     r1, r7
	ble     branch_20dc300
	sub     r1, r1, r7
	add     r0, sp, #0x4
	sub     r1, r2, r1
	bl      Function_20dbd2c
	ldrsh   r3, [sp, #0x6]
	ldrb    r2, [sp, #0x8]
	sub     r0, r2, r3
	subs    r1, r0, #0x1
	movmi   r1, #0x0
.arm
branch_20dc300: @ 20dc300 :arm
	adds    r0, r3, #0x1
	movmi   r0, #0x0
	ldr     r3, [pc, #0x160] @ [0x20dc470] (=0x1fd)
	add     r6, r0, r1
	cmp     r6, r3
	addgt   sp, sp, #139, 30 @ #0x22c
	movgt   r0, #0x0
	ldmgtfd sp!, {r4-r11,lr}
	addgt   sp, sp, #0x10
	bxgt    lr
	add     r3, sp, #0x9
	sub     r6, r7, r1
	cmp     r6, #0x0
	add     r2, r3, r2
	mov     r10, #0x0
	ble     branch_20dc354
	mov     r3, #0x30
.arm
branch_20dc344: @ 20dc344 :arm
	add     r10, r10, #0x1
	cmp     r10, r6
	strb    r3, [r8, #-0x1]!
	blt     branch_20dc344
.arm
branch_20dc354: @ 20dc354 :arm
	mov     r6, #0x0
	b       branch_20dc368
@ 0x20dc35c

.arm
branch_20dc35c: @ 20dc35c :arm
	ldrsb   r3, [r2, #-0x1]!
	add     r6, r6, #0x1
	strb    r3, [r8, #-0x1]!
.arm
branch_20dc368: @ 20dc368 :arm
	cmp     r6, r1
	ldrltb  r3, [sp, #0x8]
	cmplt   r6, r3
	blt     branch_20dc35c
	cmp     r6, r1
	bge     branch_20dc394
	mov     r3, #0x30
.arm
branch_20dc384: @ 20dc384 :arm
	add     r6, r6, #0x1
	cmp     r6, r1
	strb    r3, [r8, #-0x1]!
	blt     branch_20dc384
.arm
branch_20dc394: @ 20dc394 :arm
	cmp     r7, #0x0
	cmpeq   r5, #0x0
	movne   r1, #0x2e
	strneb  r1, [r8, #-0x1]!
	cmp     r0, #0x0
	beq     branch_20dc3fc
	ldrb    r1, [sp, #0x8]
	mov     r5, #0x0
	sub     r1, r0, r1
	cmp     r1, #0x0
	ble     branch_20dc3dc
	mov     r3, #0x30
.arm
branch_20dc3c4: @ 20dc3c4 :arm
	strb    r3, [r8, #-0x1]!
	ldrb    r1, [sp, #0x8]
	add     r5, r5, #0x1
	sub     r1, r0, r1
	cmp     r5, r1
	blt     branch_20dc3c4
.arm
branch_20dc3dc: @ 20dc3dc :arm
	cmp     r5, r0
	bge     branch_20dc404
.arm
branch_20dc3e4: @ 20dc3e4 :arm
	ldrsb   r1, [r2, #-0x1]!
	add     r5, r5, #0x1
	cmp     r5, r0
	strb    r1, [r8, #-0x1]!
	blt     branch_20dc3e4
	b       branch_20dc404
@ 0x20dc3fc

.arm
branch_20dc3fc: @ 20dc3fc :arm
	mov     r0, #0x30
	strb    r0, [r8, #-0x1]!
.arm
branch_20dc404: @ 20dc404 :arm
	ldrsb   r0, [sp, #0x4]
	cmp     r0, #0x0
	movne   r0, #0x2d
	strneb  r0, [r8, #-0x1]!
	bne     branch_20dc434
	cmp     r4, #0x1
	moveq   r0, #0x2b
	streqb  r0, [r8, #-0x1]!
	beq     branch_20dc434
	cmp     r4, #0x2
	moveq   r0, #0x20
	streqb  r0, [r8, #-0x1]!
.arm
branch_20dc434: @ 20dc434 :arm
	mov     r0, r8
	bl      Function_20d8b60
	sub     r1, r9, r0, lsl #1
	mov     r0, r8
	sub     r4, r1, #0x2
	bl      Function_20d8b60
	mov     r2, r0
	mov     r0, r4
	mov     r1, r8
	bl      Function_20d4fb8
	mov     r0, r4
	add     sp, sp, #139, 30 @ #0x22c
	ldmfd   sp!, {r4-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dc470

.word 0x1fd @ 0x20dc470
.word Unknown_20fea9c @ 0x20dc474
.word Unknown_2101834 @ 0x20dc478
.word Unknown_2101840 @ 0x20dc47c
.word Unknown_210184c @ 0x20dc480
.word Unknown_2101854 @ 0x20dc484
.word Unknown_210185c @ 0x20dc488
.word Unknown_2101868 @ 0x20dc48c
.word Unknown_2101874 @ 0x20dc490
.word Unknown_210187c @ 0x20dc494
.word 0x66666667 @ 0x20dc498



.arm
Function_20dc49c: @ 20dc49c :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #67, 28 @ #0x430
	mov     r3, #0x20
	mov     r11, r2
	strh    r3, [sp, #0x1c]
	ldrh    r2, [r11]
	mov     r9, r0
	mov     r8, r1
	cmp     r2, #0x0
	mov     r4, #0x0
	beq     branch_20dcd6c
.arm
branch_20dc4cc: @ 20dc4cc :arm
	mov     r0, r11
	mov     r1, #0x25
	bl      Function_20dcea0
	str     r0, [sp, #0xc]
	cmp     r0, #0x0
	bne     branch_20dc520
	mov     r0, r11
	bl      Function_20dce64
	movs    r2, r0
	add     r4, r4, r2
	beq     branch_20dcd6c
	mov     r0, r8
	mov     r1, r11
	blx     r9
	cmp     r0, #0x0
	bne     branch_20dcd6c
	add     sp, sp, #67, 28 @ #0x430
	mvn     r0, #0x0
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dc520

.arm
branch_20dc520: @ 20dc520 :arm
	sub     r0, r0, r11
	add     r0, r0, r0, lsr #31
	movs    r2, r0, asr #1
	add     r4, r4, r2
	beq     branch_20dc558
	mov     r0, r8
	mov     r1, r11
	blx     r9
	cmp     r0, #0x0
	addeq   sp, sp, #67, 28 @ #0x430
	mvneq   r0, #0x0
	ldmeqfd sp!, {r3-r11,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
.arm
branch_20dc558: @ 20dc558 :arm
	add     r1, sp, #1, 22 @ #0x400
	ldr     r0, [sp, #0xc]
	add     r1, r1, #0x64
	add     r2, sp, #0x20
	bl      Function_20daecc
	ldrh    r1, [sp, #0x26]
	mov     r11, r0
	cmp     r1, #0x61
	bgt     branch_20dc5c8
	bge     branch_20dc934
	cmp     r1, #0x47
	bgt     branch_20dc5bc
	subs    r0, r1, #0x41
	addpl   pc, pc, r0, lsl #2
	b       branch_20dc5b0
@ 0x20dc594

.arm
Function_20dc594: @ 20dc594 :arm
	b       branch_20dc934
@ 0x20dc598

.arm
Function_20dc598: @ 20dc598 :arm
	b       branch_20dcbd8
@ 0x20dc59c

.arm
Function_20dc59c: @ 20dc59c :arm
	b       branch_20dcbd8
@ 0x20dc5a0

.arm
Function_20dc5a0: @ 20dc5a0 :arm
	b       branch_20dcbd8
@ 0x20dc5a4

.arm
Function_20dc5a4: @ 20dc5a4 :arm
	b       branch_20dc8c4
@ 0x20dc5a8

.arm
Function_20dc5a8: @ 20dc5a8 :arm
	b       branch_20dc8c4
@ 0x20dc5ac

.arm
Function_20dc5ac: @ 20dc5ac :arm
	b       branch_20dc8c4
@ 0x20dc5b0

.arm
branch_20dc5b0: @ 20dc5b0 :arm
	cmp     r1, #0x25
	beq     branch_20dcbc4
	b       branch_20dcbd8
@ 0x20dc5bc

.arm
branch_20dc5bc: @ 20dc5bc :arm
	cmp     r1, #0x58
	beq     branch_20dc788
	b       branch_20dcbd8
@ 0x20dc5c8

.arm
branch_20dc5c8: @ 20dc5c8 :arm
	cmp     r1, #0x75
	bgt     branch_20dc630
	subs    r0, r1, #0x64
	addpl   pc, pc, r0, lsl #2
	b       branch_20dc624
@ 0x20dc5dc

.arm
Function_20dc5dc: @ 20dc5dc :arm
	b       branch_20dc64c
@ 0x20dc5e0

.arm
Function_20dc5e0: @ 20dc5e0 :arm
	b       branch_20dc8c4
@ 0x20dc5e4

.arm
Function_20dc5e4: @ 20dc5e4 :arm
	b       branch_20dc8c4
@ 0x20dc5e8

.arm
Function_20dc5e8: @ 20dc5e8 :arm
	b       branch_20dc8c4
@ 0x20dc5ec

.arm
Function_20dc5ec: @ 20dc5ec :arm
	b       branch_20dcbd8
@ 0x20dc5f0

.arm
Function_20dc5f0: @ 20dc5f0 :arm
	b       branch_20dc64c
@ 0x20dc5f4

.arm
Function_20dc5f4: @ 20dc5f4 :arm
	b       branch_20dcbd8
@ 0x20dc5f8

.arm
Function_20dc5f8: @ 20dc5f8 :arm
	b       branch_20dcbd8
@ 0x20dc5fc

.arm
Function_20dc5fc: @ 20dc5fc :arm
	b       branch_20dcbd8
@ 0x20dc600

.arm
Function_20dc600: @ 20dc600 :arm
	b       branch_20dcbd8
@ 0x20dc604

.arm
Function_20dc604: @ 20dc604 :arm
	b       branch_20dcae0
@ 0x20dc608

.arm
Function_20dc608: @ 20dc608 :arm
	b       branch_20dc788
@ 0x20dc60c

.arm
Function_20dc60c: @ 20dc60c :arm
	b       branch_20dcbd8
@ 0x20dc610

.arm
Function_20dc610: @ 20dc610 :arm
	b       branch_20dcbd8
@ 0x20dc614

.arm
Function_20dc614: @ 20dc614 :arm
	b       branch_20dcbd8
@ 0x20dc618

.arm
Function_20dc618: @ 20dc618 :arm
	b       branch_20dc9a4
@ 0x20dc61c

.arm
Function_20dc61c: @ 20dc61c :arm
	b       branch_20dcbd8
@ 0x20dc620

.arm
Function_20dc620: @ 20dc620 :arm
	b       branch_20dc788
@ 0x20dc624

.arm
branch_20dc624: @ 20dc624 :arm
	cmp     r1, #0x63
	beq     branch_20dcb6c
	b       branch_20dcbd8
@ 0x20dc630

.arm
branch_20dc630: @ 20dc630 :arm
	cmp     r1, #0x78
	bgt     branch_20dc640
	beq     branch_20dc788
	b       branch_20dcbd8
@ 0x20dc640

.arm
branch_20dc640: @ 20dc640 :arm
	ldr     r0, [pc, #0x738] @ [0x20dcd80] (=0xffff)
	cmp     r1, r0
	b       branch_20dcbd8
@ 0x20dc64c

.arm
branch_20dc64c: @ 20dc64c :arm
	ldrb    r0, [sp, #0x24]
	cmp     r0, #0x3
	bne     branch_20dc66c
	ldr     r1, [sp, #0x464]
	add     r1, r1, #0x4
	str     r1, [sp, #0x464]
	ldr     r10, [r1, #-0x4]
	b       branch_20dc704
@ 0x20dc66c

.arm
branch_20dc66c: @ 20dc66c :arm
	cmp     r0, #0x4
	bne     branch_20dc694
	ldr     r1, [sp, #0x464]
	add     r2, r1, #0x8
	str     r2, [sp, #0x464]
	ldr     r1, [r2, #-0x8]
	str     r1, [sp, #0x10]
	ldr     r1, [r2, #-0x4]
	str     r1, [sp, #0x14]
	b       branch_20dc704
@ 0x20dc694

.arm
branch_20dc694: @ 20dc694 :arm
	cmp     r0, #0x6
	bne     branch_20dc6bc
	ldr     r1, [sp, #0x464]
	add     r2, r1, #0x8
	str     r2, [sp, #0x464]
	ldr     r1, [r2, #-0x8]
	str     r1, [sp, #0x10]
	ldr     r1, [r2, #-0x4]
	str     r1, [sp, #0x14]
	b       branch_20dc704
@ 0x20dc6bc

.arm
branch_20dc6bc: @ 20dc6bc :arm
	cmp     r0, #0x7
	bne     branch_20dc6d8
	ldr     r1, [sp, #0x464]
	add     r1, r1, #0x4
	str     r1, [sp, #0x464]
	ldr     r10, [r1, #-0x4]
	b       branch_20dc704
@ 0x20dc6d8

.arm
branch_20dc6d8: @ 20dc6d8 :arm
	cmp     r0, #0x8
	bne     branch_20dc6f4
	ldr     r1, [sp, #0x464]
	add     r1, r1, #0x4
	str     r1, [sp, #0x464]
	ldr     r10, [r1, #-0x4]
	b       branch_20dc704
@ 0x20dc6f4

.arm
branch_20dc6f4: @ 20dc6f4 :arm
	ldr     r1, [sp, #0x464]
	add     r1, r1, #0x4
	str     r1, [sp, #0x464]
	ldr     r10, [r1, #-0x4]
.arm
branch_20dc704: @ 20dc704 :arm
	cmp     r0, #0x2
	moveq   r1, r10, lsl #16
	moveq   r10, r1, asr #16
	cmp     r0, #0x4
	cmpne   r0, #0x6
	add     r0, sp, #0x20
	bne     branch_20dc74c
	sub     r5, sp, #0x4
	ldmia   r0, {r0-r3}
	stmia   r5, {r0-r3}
	ldr     r3, [r5]
	ldr     r0, [sp, #0x10]
	ldr     r1, [sp, #0x14]
	add     r2, sp, #67, 28 @ #0x430
	bl      Function_20db694
	movs    r6, r0
	beq     branch_20dcbd8
	b       branch_20dc770
@ 0x20dc74c

.arm
branch_20dc74c: @ 20dc74c :arm
	sub     r5, sp, #0x8
	ldmia   r0, {r0-r3}
	stmia   r5, {r0-r3}
	add     r1, sp, #67, 28 @ #0x430
	mov     r0, r10
	ldmia   r5, {r2,r3}
	bl      Function_20db444
	movs    r6, r0
	beq     branch_20dcbd8
.arm
branch_20dc770: @ 20dc770 :arm
	add     r0, sp, #1, 22 @ #0x400
	add     r0, r0, #0x2e
	sub     r0, r0, r6
	add     r0, r0, r0, lsr #31
	mov     r7, r0, asr #1
	b       branch_20dcc24
@ 0x20dc788

.arm
branch_20dc788: @ 20dc788 :arm
	ldrb    r0, [sp, #0x24]
	cmp     r0, #0x3
	bne     branch_20dc7a8
	ldr     r1, [sp, #0x464]
	add     r1, r1, #0x4
	str     r1, [sp, #0x464]
	ldr     r10, [r1, #-0x4]
	b       branch_20dc840
@ 0x20dc7a8

.arm
branch_20dc7a8: @ 20dc7a8 :arm
	cmp     r0, #0x4
	bne     branch_20dc7d0
	ldr     r1, [sp, #0x464]
	add     r2, r1, #0x8
	str     r2, [sp, #0x464]
	ldr     r1, [r2, #-0x8]
	str     r1, [sp, #0x10]
	ldr     r1, [r2, #-0x4]
	str     r1, [sp, #0x14]
	b       branch_20dc840
@ 0x20dc7d0

.arm
branch_20dc7d0: @ 20dc7d0 :arm
	cmp     r0, #0x6
	bne     branch_20dc7f8
	ldr     r1, [sp, #0x464]
	add     r2, r1, #0x8
	str     r2, [sp, #0x464]
	ldr     r1, [r2, #-0x8]
	str     r1, [sp, #0x10]
	ldr     r1, [r2, #-0x4]
	str     r1, [sp, #0x14]
	b       branch_20dc840
@ 0x20dc7f8

.arm
branch_20dc7f8: @ 20dc7f8 :arm
	cmp     r0, #0x7
	bne     branch_20dc814
	ldr     r1, [sp, #0x464]
	add     r1, r1, #0x4
	str     r1, [sp, #0x464]
	ldr     r10, [r1, #-0x4]
	b       branch_20dc840
@ 0x20dc814

.arm
branch_20dc814: @ 20dc814 :arm
	cmp     r0, #0x8
	bne     branch_20dc830
	ldr     r1, [sp, #0x464]
	add     r1, r1, #0x4
	str     r1, [sp, #0x464]
	ldr     r10, [r1, #-0x4]
	b       branch_20dc840
@ 0x20dc830

.arm
branch_20dc830: @ 20dc830 :arm
	ldr     r1, [sp, #0x464]
	add     r1, r1, #0x4
	str     r1, [sp, #0x464]
	ldr     r10, [r1, #-0x4]
.arm
branch_20dc840: @ 20dc840 :arm
	cmp     r0, #0x2
	moveq   r1, r10, lsl #16
	moveq   r10, r1, lsr #16
	cmp     r0, #0x4
	cmpne   r0, #0x6
	add     r0, sp, #0x20
	bne     branch_20dc888
	sub     r5, sp, #0x4
	ldmia   r0, {r0-r3}
	stmia   r5, {r0-r3}
	ldr     r3, [r5]
	ldr     r0, [sp, #0x10]
	ldr     r1, [sp, #0x14]
	add     r2, sp, #67, 28 @ #0x430
	bl      Function_20db694
	movs    r6, r0
	beq     branch_20dcbd8
	b       branch_20dc8ac
@ 0x20dc888

.arm
branch_20dc888: @ 20dc888 :arm
	sub     r5, sp, #0x8
	ldmia   r0, {r0-r3}
	stmia   r5, {r0-r3}
	add     r1, sp, #67, 28 @ #0x430
	mov     r0, r10
	ldmia   r5, {r2,r3}
	bl      Function_20db444
	movs    r6, r0
	beq     branch_20dcbd8
.arm
branch_20dc8ac: @ 20dc8ac :arm
	add     r0, sp, #1, 22 @ #0x400
	add     r0, r0, #0x2e
	sub     r0, r0, r6
	add     r0, r0, r0, lsr #31
	mov     r7, r0, asr #1
	b       branch_20dcc24
@ 0x20dc8c4

.arm
branch_20dc8c4: @ 20dc8c4 :arm
	ldrb    r0, [sp, #0x24]
	cmp     r0, #0x9
	ldrne   r0, [sp, #0x464]
	addne   r0, r0, #0x8
	strne   r0, [sp, #0x464]
	bne     branch_20dc8e8
	ldr     r0, [sp, #0x464]
	add     r0, r0, #0x8
	str     r0, [sp, #0x464]
.arm
branch_20dc8e8: @ 20dc8e8 :arm
	ldr     r7, [r0, #-0x8]
	ldr     r6, [r0, #-0x4]
	add     r0, sp, #0x20
	sub     r5, sp, #0x4
	ldmia   r0, {r0-r3}
	stmia   r5, {r0-r3}
	ldr     r3, [r5]
	mov     r0, r7
	mov     r1, r6
	add     r2, sp, #67, 28 @ #0x430
	bl      Function_20dbe50
	movs    r6, r0
	beq     branch_20dcbd8
	add     r0, sp, #1, 22 @ #0x400
	add     r0, r0, #0x2e
	sub     r0, r0, r6
	add     r0, r0, r0, lsr #31
	mov     r7, r0, asr #1
	b       branch_20dcc24
@ 0x20dc934

.arm
branch_20dc934: @ 20dc934 :arm
	ldrb    r0, [sp, #0x24]
	cmp     r0, #0x9
	ldrne   r0, [sp, #0x464]
	addne   r0, r0, #0x8
	strne   r0, [sp, #0x464]
	bne     branch_20dc958
	ldr     r0, [sp, #0x464]
	add     r0, r0, #0x8
	str     r0, [sp, #0x464]
.arm
branch_20dc958: @ 20dc958 :arm
	ldr     r7, [r0, #-0x8]
	ldr     r6, [r0, #-0x4]
	add     r0, sp, #0x20
	sub     r5, sp, #0x4
	ldmia   r0, {r0-r3}
	stmia   r5, {r0-r3}
	ldr     r3, [r5]
	mov     r0, r7
	mov     r1, r6
	add     r2, sp, #67, 28 @ #0x430
	bl      Function_20db994
	movs    r6, r0
	beq     branch_20dcbd8
	add     r0, sp, #1, 22 @ #0x400
	add     r0, r0, #0x2e
	sub     r0, r0, r6
	add     r0, r0, r0, lsr #31
	mov     r7, r0, asr #1
	b       branch_20dcc24
@ 0x20dc9a4

.arm
branch_20dc9a4: @ 20dc9a4 :arm
	ldrb    r0, [sp, #0x24]
	cmp     r0, #0x5
	bne     branch_20dca40
	ldr     r0, [sp, #0x464]
	add     r0, r0, #0x4
	str     r0, [sp, #0x464]
	ldr     r6, [r0, #-0x4]
	ldrb    r0, [sp, #0x23]
	cmp     r6, #0x0
	ldreq   r6, [pc, #0x3b4] @ [0x20dcd84] (=Unknown_2101884)
	cmp     r0, #0x0
	beq     branch_20dc9f8
	ldrh    r1, [r6], #0x2
	ldrb    r0, [sp, #0x22]
	and     r7, r1, #0xff
	cmp     r0, #0x0
	beq     branch_20dcc24
	ldr     r0, [sp, #0x2c]
	cmp     r7, r0
	movgt   r7, r0
	b       branch_20dcc24

branch_20dc9f8: @ 20dc9f8 :arm
	ldrb    r0, [sp, #0x22]
	cmp     r0, #0x0
	beq     branch_20dca30
	ldr     r7, [sp, #0x2c]
	mov     r0, r6
	mov     r2, r7
	mov     r1, #0x0
	bl      Function_20daea4
	cmp     r0, #0x0
	beq     branch_20dcc24
	sub     r0, r0, r6
	add     r0, r0, r0, lsr #31
	mov     r7, r0, asr #1
	b       branch_20dcc24
@ 0x20dca30

.arm
branch_20dca30: @ 20dca30 :arm
	mov     r0, r6
	bl      Function_20dce64
	mov     r7, r0
	b       branch_20dcc24

branch_20dca40: @ 20dca40 :arm
	ldr     r0, [sp, #0x464]
	add     r0, r0, #0x4
	str     r0, [sp, #0x464]
	ldr     r5, [r0, #-0x4]
	ldrb    r0, [sp, #0x23]
	cmp     r5, #0x0
	ldreq   r5, [pc, #0x328] @ [0x20dcd88] (=Unknown_2101888)
	cmp     r0, #0x0
	beq     branch_20dca88
	ldrh    r1, [r6]
	ldrb    r0, [sp, #0x22]
	and     r6, r1, #0xff
	cmp     r0, #0x0
	beq     branch_20dcac0
	ldr     r0, [sp, #0x2c]
	cmp     r6, r0
	movgt   r6, r0
	b       branch_20dcac0

branch_20dca88: @ 20dca88 :arm
	ldrb    r0, [sp, #0x22]
	cmp     r0, #0x0
	beq     branch_20dcab4
	ldr     r6, [sp, #0x2c]
	mov     r0, r5
	mov     r2, r6
	mov     r1, #0x0
	bl      Function_20d5138
	cmp     r0, #0x0
	subne   r6, r0, r5
	b       branch_20dcac0
@ 0x20dcab4

.arm
branch_20dcab4: @ 20dcab4 :arm
	mov     r0, r5
	bl      Function_20d8b60
	mov     r6, r0
.arm
branch_20dcac0: @ 20dcac0 :arm
	add     r0, sp, #0x30
	mov     r1, r5
	mov     r2, r6
	bl      Function_20d4fb8
	movs    r7, r0
	bmi     branch_20dcbd8
	add     r6, sp, #0x30
	b       branch_20dcc24
@ 0x20dcae0

.arm
branch_20dcae0: @ 20dcae0 :arm
	ldr     r1, [sp, #0x464]
	ldrb    r0, [sp, #0x24]
	add     r1, r1, #0x4
	str     r1, [sp, #0x464]
	ldr     r6, [r1, #-0x4]
	cmp     r0, #0x8
	addls   pc, pc, r0, lsl #2
	b       branch_20dcd60
@ 0x20dcb00

.arm
Function_20dcb00: @ 20dcb00 :arm
	b       branch_20dcb24
@ 0x20dcb04

.arm
Function_20dcb04: @ 20dcb04 :arm
	b       branch_20dcd60
@ 0x20dcb08

.arm
Function_20dcb08: @ 20dcb08 :arm
	b       branch_20dcb2c
@ 0x20dcb0c

.arm
Function_20dcb0c: @ 20dcb0c :arm
	b       branch_20dcb34
@ 0x20dcb10

.arm
Function_20dcb10: @ 20dcb10 :arm
	b       branch_20dcb5c
@ 0x20dcb14

.arm
Function_20dcb14: @ 20dcb14 :arm
	b       branch_20dcd60
@ 0x20dcb18

.arm
Function_20dcb18: @ 20dcb18 :arm
	b       branch_20dcb3c
@ 0x20dcb1c

.arm
Function_20dcb1c: @ 20dcb1c :arm
	b       branch_20dcb4c
@ 0x20dcb20

.arm
Function_20dcb20: @ 20dcb20 :arm
	b       branch_20dcb54
@ 0x20dcb24

.arm
branch_20dcb24: @ 20dcb24 :arm
	str     r4, [r6]
	b       branch_20dcd60
@ 0x20dcb2c

.arm
branch_20dcb2c: @ 20dcb2c :arm
	strh    r4, [r6]
	b       branch_20dcd60
@ 0x20dcb34

.arm
branch_20dcb34: @ 20dcb34 :arm
	str     r4, [r6]
	b       branch_20dcd60
@ 0x20dcb3c

.arm
branch_20dcb3c: @ 20dcb3c :arm
	str     r4, [r6]
	mov     r0, r4, asr #31
	str     r0, [r6, #0x4]
	b       branch_20dcd60
@ 0x20dcb4c

.arm
branch_20dcb4c: @ 20dcb4c :arm
	str     r4, [r6]
	b       branch_20dcd60
@ 0x20dcb54

.arm
branch_20dcb54: @ 20dcb54 :arm
	str     r4, [r6]
	b       branch_20dcd60
@ 0x20dcb5c

.arm
branch_20dcb5c: @ 20dcb5c :arm
	str     r4, [r6]
	mov     r0, r4, asr #31
	str     r0, [r6, #0x4]
	b       branch_20dcd60
@ 0x20dcb6c

.arm
branch_20dcb6c: @ 20dcb6c :arm
	ldrb    r0, [sp, #0x24]
	add     r6, sp, #0x30
	cmp     r0, #0x5
	bne     branch_20dcb98
	ldr     r0, [sp, #0x464]
	mov     r7, #0x1
	add     r0, r0, #0x4
	str     r0, [sp, #0x464]
	ldr     r0, [r0, #-0x4]
	strh    r0, [r6]
	b       branch_20dcc24
@ 0x20dcb98

.arm
branch_20dcb98: @ 20dcb98 :arm
	ldr     r0, [sp, #0x464]
	add     r1, sp, #0x18
	add     r0, r0, #0x4
	str     r0, [sp, #0x464]
	ldr     r3, [r0, #-0x4]
	mov     r0, r6
	mov     r2, #0x1
	strb    r3, [sp, #0x18]
	bl      Function_20d4f34
	mov     r7, r0
	b       branch_20dcc24
@ 0x20dcbc4

.arm
branch_20dcbc4: @ 20dcbc4 :arm
	mov     r0, #0x25
	strh    r0, [sp, #0x30]
	add     r6, sp, #0x30
	mov     r7, #0x1
	b       branch_20dcc24
@ 0x20dcbd8

.arm
branch_20dcbd8: @ 20dcbd8 :arm
	ldr     r0, [sp, #0xc]
	bl      Function_20dce64
	movs    r5, r0
	beq     branch_20dcc10
	ldr     r1, [sp, #0xc]
	mov     r0, r8
	mov     r2, r5
	blx     r9
	cmp     r0, #0x0
	addeq   sp, sp, #67, 28 @ #0x430
	mvneq   r0, #0x0
	ldmeqfd sp!, {r3-r11,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
.arm
branch_20dcc10: @ 20dcc10 :arm
	add     sp, sp, #67, 28 @ #0x430
	add     r0, r4, r5
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dcc24

.arm
branch_20dcc24: @ 20dcc24 :arm
	ldrb    r0, [sp, #0x20]
	mov     r5, r7
	cmp     r0, #0x0
	beq     branch_20dccd4
	cmp     r0, #0x2
	moveq   r1, #0x30
	movne   r1, #0x20
	strh    r1, [sp, #0x1c]
	ldrh    r0, [r6]
	cmp     r0, #0x2b
	cmpne   r0, #0x2d
	cmpne   r0, #0x20
	bne     branch_20dcc90
	cmp     r1, #0x30
	bne     branch_20dcc90
	mov     r0, r8
	mov     r1, r6
	mov     r2, #0x1
	blx     r9
	cmp     r0, #0x0
	addeq   sp, sp, #67, 28 @ #0x430
	mvneq   r0, #0x0
	ldmeqfd sp!, {r3-r11,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
	add     r6, r6, #0x2
	sub     r7, r7, #0x1
.arm
branch_20dcc90: @ 20dcc90 :arm
	ldr     r0, [sp, #0x28]
	cmp     r5, r0
	bge     branch_20dccd4
.arm
branch_20dcc9c: @ 20dcc9c :arm
	mov     r0, r8
	add     r1, sp, #0x1c
	mov     r2, #0x1
	blx     r9
	cmp     r0, #0x0
	addeq   sp, sp, #67, 28 @ #0x430
	mvneq   r0, #0x0
	ldmeqfd sp!, {r3-r11,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
	ldr     r0, [sp, #0x28]
	add     r5, r5, #0x1
	cmp     r5, r0
	blt     branch_20dcc9c
.arm
branch_20dccd4: @ 20dccd4 :arm
	cmp     r7, #0x0
	beq     branch_20dcd04
	mov     r0, r8
	mov     r1, r6
	mov     r2, r7
	blx     r9
	cmp     r0, #0x0
	addeq   sp, sp, #67, 28 @ #0x430
	mvneq   r0, #0x0
	ldmeqfd sp!, {r3-r11,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
.arm
branch_20dcd04: @ 20dcd04 :arm
	ldrb    r0, [sp, #0x20]
	cmp     r0, #0x0
	bne     branch_20dcd5c
	ldr     r0, [sp, #0x28]
	cmp     r5, r0
	bge     branch_20dcd5c
	mov     r7, #0x20
.arm
branch_20dcd20: @ 20dcd20 :arm
	mov     r0, r8
	add     r1, sp, #0x1a
	mov     r2, #0x1
	strh    r7, [sp, #0x1a]
	blx     r9
	cmp     r0, #0x0
	addeq   sp, sp, #67, 28 @ #0x430
	mvneq   r0, #0x0
	ldmeqfd sp!, {r3-r11,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
	ldr     r0, [sp, #0x28]
	add     r5, r5, #0x1
	cmp     r5, r0
	blt     branch_20dcd20
.arm
branch_20dcd5c: @ 20dcd5c :arm
	add     r4, r4, r5
.arm
branch_20dcd60: @ 20dcd60 :arm
	ldrh    r0, [r11]
	cmp     r0, #0x0
	bne     branch_20dc4cc
branch_20dcd6c: @ 20dcd6c :arm
	mov     r0, r4
	add     sp, sp, #67, 28 @ #0x430
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dcd80

.word 0xffff @ 0x20dcd80
.word Unknown_2101884 @ 0x20dcd84
.word Unknown_2101888 @ 0x20dcd88



.arm
Function_20dcd8c: @ 20dcd8c :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r0
	ldr     r3, [r4, #0x8]
	mov     r5, r2
	ldr     r2, [r4, #0x4]
	add     r0, r3, r5
	cmp     r0, r2
	ldr     r0, [r4]
	subhi   r5, r2, r3
	mov     r2, r5
	add     r0, r0, r3, lsl #1
	bl      Function_20dae94
	ldr     r1, [r4, #0x8]
	add     r1, r1, r5
	str     r1, [r4, #0x8]
	ldmfd   sp!, {r3-r5,pc}
@ 0x20dcdcc


.arm
.globl Function_20dcdcc
Function_20dcdcc: @ 20dcdcc :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r3,lr}
	add     r3, sp, #0x10
	bic     r3, r3, #0x3
	ldr     r2, [sp, #0x10]
	add     r3, r3, #0x4
	bl      Function_20dcdf4
	ldmfd   sp!, {r3,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dcdf4

.arm
Function_20dcdf4: @ 20dcdf4 :arm
	stmfd   sp!, {r4,r5,lr}
	sub     sp, sp, #0xc
	mov     r5, r0
	mov     r4, r1
	mov     r12, #0x0
	ldr     r0, [pc, #0x50] @ [0x20dce60] (=0x20dcd8c)
	add     r1, sp, #0x0
	str     r5, [sp]
	str     r4, [sp, #0x4]
	str     r12, [sp, #0x8]
	bl      Function_20dc49c
	cmp     r0, #0x0
	addlt   sp, sp, #0xc
	ldmltfd sp!, {r4,r5,pc}
	cmp     r0, r4
	bhs     branch_20dce48
	mov     r1, r0, lsl #1
	mov     r2, #0x0
	add     sp, sp, #0xc
	strh    r2, [r5, r1]
	ldmfd   sp!, {r4,r5,pc}
@ 0x20dce48

.arm
branch_20dce48: @ 20dce48 :arm
	mov     r1, #0x0
	add     r0, r5, r4, lsl #1
	strh    r1, [r0, #-0x2]
	sub     r0, r1, #0x1
	add     sp, sp, #0xc
	ldmfd   sp!, {r4,r5,pc}
@ 0x20dce60

.word Function_20dcd8c @ =0x20dcd8c, 0x20dce60



.arm
.globl Function_20dce64
Function_20dce64: @ 20dce64 :arm
	mvn     r2, #0x0
branch_20dce68: @ 20dce68 :arm
	ldrh    r1, [r0], #0x2
	add     r2, r2, #0x1
	cmp     r1, #0x0
	bne     branch_20dce68
	mov     r0, r2
	bx      lr
@ 0x20dce80

.arm
Function_20dce80: @ 20dce80 :arm
	mov     r3, r0
.arm
branch_20dce84: @ 20dce84 :arm
	ldrh    r2, [r1], #0x2
	mov     r12, r3
	strh    r2, [r3], #0x2
	ldrh    r2, [r12]
	cmp     r2, #0x0
	bne     branch_20dce84
	bx      lr
@ 0x20dcea0

.arm
Function_20dcea0: @ 20dcea0 :arm
	ldrh    r2, [r0], #0x2
	cmp     r2, #0x0
	beq     branch_20dcec4
.arm
branch_20dceac: @ 20dceac :arm
	cmp     r2, r1
	subeq   r0, r0, #0x2
	bxeq    lr
	ldrh    r2, [r0], #0x2
	cmp     r2, #0x0
	bne     branch_20dceac
.arm
branch_20dcec4: @ 20dcec4 :arm
	cmp     r1, #0x0
	movne   r0, #0x0
	subeq   r0, r0, #0x2
	bx      lr
@ 0x20dced4


.arm
Function_20dced4: @ 20dced4 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x80
	ldr     r8, [sp, #0xb4]
	ldr     r6, [sp, #0xac]
	ldr     r0, [sp, #0xb0]
	bic     r9, r8, #2, 2 @ #0x80000000
	orrs    r1, r9, r0
	ldr     r7, [sp, #0xa8]
	bic     r4, r6, #2, 2 @ #0x80000000
	addeq   sp, sp, #0x80
	moveq   r0, #0x0
	ldreq   r1, [pc, #0x574] @ [0x20dd480] (=0x3ff00000)
	ldmeqfd sp!, {r3-r11,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
	ldr     r1, [pc, #0x568] @ [0x20dd484] (=0x7ff00000)
	cmp     r4, r1
	bgt     branch_20dcf44
	bne     branch_20dcf2c
	cmp     r7, #0x0
	bne     branch_20dcf44
.arm
branch_20dcf2c: @ 20dcf2c :arm
	ldr     r1, [pc, #0x550] @ [0x20dd484] (=0x7ff00000)
	cmp     r9, r1
	bgt     branch_20dcf44
	bne     branch_20dcf68
	cmp     r0, #0x0
	beq     branch_20dcf68
.arm
branch_20dcf44: @ 20dcf44 :arm
	ldr     r0, [sp, #0xa8]
	ldr     r1, [sp, #0xac]
	ldr     r2, [sp, #0xb0]
	ldr     r3, [sp, #0xb4]
	bl      _dadd
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dcf68

.arm
branch_20dcf68: @ 20dcf68 :arm
	cmp     r6, #0x0
	mov     r5, #0x0
	bge     branch_20dcfd0
	ldr     r1, [pc, #0x50c] @ [0x20dd488] (=0x43400000)
	cmp     r9, r1
	movge   r5, #0x2
	bge     branch_20dcfd0
	sub     r1, r1, #53, 12 @ #0x3500000
	cmp     r9, r1
	blt     branch_20dcfd0
	ldr     r1, [pc, #0x4f4] @ [0x20dd48c] (=0xfffffc01)
	add     r1, r1, r9, asr #20
	cmp     r1, #0x14
	ble     branch_20dcfb8
	rsb     r2, r1, #0x34
	mov     r1, r0, lsr r2
	cmp     r0, r1, lsl r2
	andeq   r1, r1, #0x1
	rsbeq   r5, r1, #0x2
	b       branch_20dcfd0
@ 0x20dcfb8

.arm
branch_20dcfb8: @ 20dcfb8 :arm
	cmp     r0, #0x0
	rsbeq   r2, r1, #0x14
	moveq   r1, r9, asr r2
	cmpeq   r9, r1, lsl r2
	andeq   r1, r1, #0x1
	rsbeq   r5, r1, #0x2
.arm
branch_20dcfd0: @ 20dcfd0 :arm
	cmp     r0, #0x0
	bne     branch_20dd12c
	ldr     r1, [pc, #0x4a4] @ [0x20dd484] (=0x7ff00000)
	cmp     r9, r1
	bne     branch_20dd084
	add     r0, r4, #1, 12 @ #0x100000
	add     r0, r0, #3, 2 @ #0xc0000000
	orrs    r0, r0, r7
	bne     branch_20dd018
	ldr     r0, [sp, #0xb0]
	ldr     r1, [sp, #0xb4]
	mov     r2, r0
	mov     r3, r1
	bl      _dsub
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dd018

.arm
branch_20dd018: @ 20dd018 :arm
	sub     r0, r1, #1, 2 @ #0x40000000
	cmp     r4, r0
	blt     branch_20dd048
	cmp     r8, #0x0
	ldrge   r0, [sp, #0xb0]
	ldrge   r1, [sp, #0xb4]
	movlt   r0, #0x0
	add     sp, sp, #0x80
	movlt   r1, r0
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dd048

.arm
branch_20dd048: @ 20dd048 :arm
	cmp     r8, #0x0
	mov     r0, #0x0
	addge   sp, sp, #0x80
	movge   r1, r0
	ldmgefd sp!, {r3-r11,lr}
	addge   sp, sp, #0x10
	bxge    lr
	ldr     r2, [sp, #0xb0]
	ldr     r3, [sp, #0xb4]
	mov     r1, r0
	bl      _dsub
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dd084

.arm
branch_20dd084: @ 20dd084 :arm
	sub     r0, r1, #1, 2 @ #0x40000000
	cmp     r9, r0
	bne     branch_20dd0d0
	cmp     r8, #0x0
	ldrge   r0, [sp, #0xa8]
	ldrge   r1, [sp, #0xac]
	addge   sp, sp, #0x80
	ldmgefd sp!, {r3-r11,lr}
	addge   sp, sp, #0x10
	bxge    lr
	ldr     r2, [sp, #0xa8]
	ldr     r3, [sp, #0xac]
	sub     r1, r1, #1, 2 @ #0x40000000
	mov     r0, #0x0
	bl      _ddiv
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dd0d0

.arm
branch_20dd0d0: @ 20dd0d0 :arm
	cmp     r8, #1, 2 @ #0x40000000
	bne     branch_20dd0fc
	ldr     r0, [sp, #0xa8]
	ldr     r1, [sp, #0xac]
	mov     r2, r0
	mov     r3, r1
	bl      Function_20e0234
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dd0fc

.arm
branch_20dd0fc: @ 20dd0fc :arm
	ldr     r0, [pc, #0x38c] @ [0x20dd490] (=0x3fe00000)
	cmp     r8, r0
	bne     branch_20dd12c
	cmp     r6, #0x0
	blt     branch_20dd12c
	ldr     r0, [sp, #0xa8]
	ldr     r1, [sp, #0xac]
	bl      _dsqrt
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dd12c

.arm
branch_20dd12c: @ 20dd12c :arm
	ldr     r0, [sp, #0xa8]
	ldr     r1, [sp, #0xac]
	bl      Function_20de084
	str     r0, [sp, #0x70]
	str     r1, [sp, #0x74]
	cmp     r7, #0x0
	bne     branch_20dd230
	ldr     r0, [pc, #0x334] @ [0x20dd484] (=0x7ff00000)
	cmp     r4, r0
	cmpne   r4, #0x0
	subne   r0, r0, #1, 2 @ #0x40000000
	cmpne   r4, r0
	bne     branch_20dd230
	ldr     r2, [sp, #0x70]
	ldr     r3, [sp, #0x74]
	str     r2, [sp, #0x78]
	str     r3, [sp, #0x7c]
	cmp     r8, #0x0
	bge     branch_20dd18c
	ldr     r1, [pc, #0x300] @ [0x20dd480] (=0x3ff00000)
	mov     r0, #0x0
	bl      _ddiv
	str     r0, [sp, #0x78]
	str     r1, [sp, #0x7c]
.arm
branch_20dd18c: @ 20dd18c :arm
	cmp     r6, #0x0
	bge     branch_20dd218
	add     r0, r4, #1, 12 @ #0x100000
	add     r0, r0, #3, 2 @ #0xc0000000
	orrs    r0, r0, r5
	bne     branch_20dd1f4
	ldr     r0, [sp, #0x78]
	ldr     r1, [sp, #0x7c]
	mov     r2, r0
	mov     r3, r1
	bl      _dsub
	mov     r4, r0
	mov     r5, r1
	ldr     r0, [sp, #0x78]
	ldr     r1, [sp, #0x7c]
	mov     r2, r0
	mov     r3, r1
	bl      _dsub
	mov     r2, r0
	mov     r3, r1
	mov     r0, r4
	mov     r1, r5
	bl      _ddiv
	str     r0, [sp, #0x78]
	str     r1, [sp, #0x7c]
	b       branch_20dd218
@ 0x20dd1f4

.arm
branch_20dd1f4: @ 20dd1f4 :arm
	cmp     r5, #0x1
	bne     branch_20dd218
	mov     r0, #0x0
	ldr     r2, [sp, #0x78]
	ldr     r3, [sp, #0x7c]
	mov     r1, r0
	bl      _dsub
	str     r0, [sp, #0x78]
	str     r1, [sp, #0x7c]
.arm
branch_20dd218: @ 20dd218 :arm
	ldr     r0, [sp, #0x78]
	ldr     r1, [sp, #0x7c]
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dd230

.arm
branch_20dd230: @ 20dd230 :arm
	mov     r0, r6, asr #31
	add     r7, r0, #0x1
	orrs    r0, r7, r5
	bne     branch_20dd268
	ldr     r0, [pc, #0x24c] @ [0x20dd494] (=Unknown_21015b0)
	ldr     r1, [pc, #0x24c] @ [0x20dd498] (=RAM_21d0d40)
	ldr     r0, [r0]
	mov     r2, #0x21
	str     r2, [r1]
	bl      _f2d
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dd268

.arm
branch_20dd268: @ 20dd268 :arm
	ldr     r3, [pc, #0x22c] @ [0x20dd49c] (=0x41e00000)
	cmp     r9, r3
	ble     branch_20dd56c
	add     r0, r3, #33, 12 @ #0x2100000
	cmp     r9, r0
	ble     branch_20dd2d8
	ldr     r1, [pc, #0x218] @ [0x20dd4a0] (=0x3fefffff)
	cmp     r4, r1
	bgt     branch_20dd2ac
	cmp     r8, #0x0
	mov     r0, #0x0
	addlt   r1, r1, #5, 2 @ #0x40000001
	add     sp, sp, #0x80
	movge   r1, r0
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dd2ac

.arm
branch_20dd2ac: @ 20dd2ac :arm
	add     r0, r1, #0x1
	cmp     r4, r0
	blt     branch_20dd2d8
	cmp     r8, #0x0
	mov     r0, #0x0
	addgt   r1, r1, #5, 2 @ #0x40000001
	add     sp, sp, #0x80
	movle   r1, r0
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dd2d8

.arm
branch_20dd2d8: @ 20dd2d8 :arm
	ldr     r2, [pc, #0x1c0] @ [0x20dd4a0] (=0x3fefffff)
	cmp     r4, r2
	bge     branch_20dd304
	cmp     r8, #0x0
	mov     r0, #0x0
	addlt   r1, r2, #5, 2 @ #0x40000001
	add     sp, sp, #0x80
	movge   r1, r0
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dd304

.arm
branch_20dd304: @ 20dd304 :arm
	add     r0, r2, #0x1
	cmp     r4, r0
	ble     branch_20dd330
	cmp     r8, #0x0
	mov     r0, #0x0
	addgt   r1, r2, #5, 2 @ #0x40000001
	add     sp, sp, #0x80
	movle   r1, r0
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dd330

.arm
branch_20dd330: @ 20dd330 :arm
	ldr     r0, [sp, #0xa8]
	ldr     r1, [sp, #0xac]
	add     r3, r2, #0x1
	mov     r2, #0x0
	bl      _dsub
	mov     r2, r0
	mov     r3, r1
	str     r0, [sp, #0x50]
	str     r1, [sp, #0x54]
	bl      Function_20e0234
	mov     r6, r1
	mov     r4, r0
	ldr     r2, [sp, #0x50]
	ldr     r3, [sp, #0x54]
	ldr     r1, [pc, #0x134] @ [0x20dd4a4] (=0x3fd00000)
	mov     r0, #0x0
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #0x124] @ [0x20dd4a8] (=0x55555555)
	sub     r1, r0, #86, 10 @ #0x15800000
	bl      _dsub
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x50]
	ldr     r1, [sp, #0x54]
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	mov     r0, #0x0
	ldr     r1, [pc, #0xe0] @ [0x20dd490] (=0x3fe00000)
	bl      _dsub
	mov     r2, r0
	mov     r0, r4
	mov     r3, r1
	mov     r1, r6
	bl      Function_20e0234
	mov     r6, r0
	mov     r8, r1
	mov     r0, #6, 4 @ #0x60000000
	ldr     r1, [pc, #0xd4] @ [0x20dd4ac] (=0x3ff71547)
	ldr     r2, [sp, #0x50]
	ldr     r3, [sp, #0x54]
	bl      Function_20e0234
	mov     r4, r0
	mov     r9, r1
	ldr     r0, [pc, #0xc0] @ [0x20dd4b0] (=0xf85ddf44)
	ldr     r1, [pc, #0xc0] @ [0x20dd4b4] (=0x3e54ae0b)
	ldr     r2, [sp, #0x50]
	ldr     r3, [sp, #0x54]
	bl      Function_20e0234
	mov     r11, r0
	mov     r10, r1
	ldr     r0, [pc, #0xac] @ [0x20dd4b8] (=0x652b82fe)
	ldr     r1, [pc, #0x9c] @ [0x20dd4ac] (=0x3ff71547)
	mov     r2, r6
	mov     r3, r8
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	mov     r0, r11
	mov     r1, r10
	bl      _dsub
	mov     r6, r0
	mov     r8, r1
	mov     r0, r4
	mov     r1, r9
	mov     r2, r6
	mov     r3, r8
	bl      _dadd
	mov     r2, r4
	mov     r3, r9
	str     r1, [sp, #0x5c]
	mov     r0, #0x0
	str     r0, [sp, #0x58]
	bl      _dsub
	mov     r2, r0
	mov     r0, r6
	mov     r3, r1
	mov     r1, r8
	bl      _dsub
	mov     r4, r0
	mov     r8, r1
	b       branch_20ddac8
@ 0x20dd480

.word 0x3ff00000 @ 0x20dd480
.word 0x7ff00000 @ 0x20dd484
.word 0x43400000 @ 0x20dd488
.word 0xfffffc01 @ 0x20dd48c
.word 0x3fe00000 @ 0x20dd490
.word Unknown_21015b0 @ 0x20dd494
.word RAM_21d0d40 @ 0x20dd498
.word 0x41e00000 @ 0x20dd49c
.word 0x3fefffff @ 0x20dd4a0
.word 0x3fd00000 @ 0x20dd4a4
.word 0x55555555 @ 0x20dd4a8
.word 0x3ff71547 @ 0x20dd4ac
.word 0xf85ddf44 @ 0x20dd4b0
.word 0x3e54ae0b @ 0x20dd4b4
.word 0x652b82fe @ 0x20dd4b8
.word 0x3988e @ 0x20dd4bc
.word 0xbb67a @ 0x20dd4c0
.word Unknown_20fecac @ 0x20dd4c4
.word 0x4a454eef @ 0x20dd4c8
.word 0x3fca7e28 @ 0x20dd4cc
.word 0x93c9db65 @ 0x20dd4d0
.word 0x3fcd864a @ 0x20dd4d4
.word 0xa91d4101 @ 0x20dd4d8
.word 0x3fd17460 @ 0x20dd4dc
.word 0x518f264d @ 0x20dd4e0
.word 0x3fd55555 @ 0x20dd4e4
.word 0xdb6fabff @ 0x20dd4e8
.word 0x3fdb6db6 @ 0x20dd4ec
.word 0x33333303 @ 0x20dd4f0
.word 0x3fe33333 @ 0x20dd4f4
.word 0x40080000 @ 0x20dd4f8
.word 0x3feec709 @ 0x20dd4fc
.word 0x145b01f5 @ 0x20dd500
.word 0xbe3e2fe0 @ 0x20dd504
.word 0xdc3a03fd @ 0x20dd508
.word Unknown_20fecbc @ 0x20dd50c
.word Unknown_20fec9c @ 0x20dd510
.word 0x40900000 @ 0x20dd514
.word 0x8800759c @ 0x20dd518
.word 0x7e37e43c @ 0x20dd51c
.word 0x3c971547 @ 0x20dd520
.word 0x3f6f3400 @ 0x20dd524
.word 0xc2f8f359 @ 0x20dd528
.word 0x1a56e1f @ 0x20dd52c
.word 0x3fe62e43 @ 0x20dd530
.word 0xfefa39ef @ 0x20dd534
.word 0x3fe62e42 @ 0x20dd538
.word 0xca86c39 @ 0x20dd53c
.word 0xbe205c61 @ 0x20dd540
.word 0x72bea4d0 @ 0x20dd544
.word 0x3e663769 @ 0x20dd548
.word 0xc5d26bf1 @ 0x20dd54c
.word 0xbebbbd41 @ 0x20dd550
.word 0xaf25de2c @ 0x20dd554
.word 0x3f11566a @ 0x20dd558
.word 0x16bebd93 @ 0x20dd55c
.word 0xbf66c16c @ 0x20dd560
.word 0x5555553e @ 0x20dd564
.word 0x3fc55555 @ 0x20dd568
.arm
branch_20dd56c: @ 20dd56c :arm
	cmp     r4, #1, 12 @ #0x100000
	mov     r6, #0x0
	bge     branch_20dd59c
	ldr     r0, [sp, #0x70]
	ldr     r1, [sp, #0x74]
	mov     r2, r6
	add     r3, r3, #22, 12 @ #0x1600000
	bl      Function_20e0234
	mov     r4, r1
	str     r0, [sp, #0x70]
	str     r4, [sp, #0x74]
	sub     r6, r6, #0x35
.arm
branch_20dd59c: @ 20dd59c :arm
	ldr     r0, [pc, #-0x118] @ [0x20dd48c] (=0xfffffc01)
	ldr     r1, [pc, #-0xec] @ [0x20dd4bc] (=0x3988e)
	and     r2, r4, r0, lsr #12
	add     r0, r0, r4, asr #20
	orr     r9, r2, #255, 12 @ #0xff00000
	cmp     r2, r1
	add     r6, r6, r0
	orr     r9, r9, #3, 4 @ #0x30000000
	movle   r8, #0x0
	ble     branch_20dd5dc
	ldr     r0, [pc, #-0x10c] @ [0x20dd4c0] (=0xbb67a)
	cmp     r2, r0
	movlt   r8, #0x1
	addge   r6, r6, #0x1
	subge   r9, r9, #1, 12 @ #0x100000
	movge   r8, #0x0
branch_20dd5dc: @ 20dd5dc :arm
	ldr     r2, [pc, #-0x120] @ [0x20dd4c4] (=Unknown_20fecac)
	ldr     r0, [sp, #0x70]
	add     r1, r2, r8, lsl #3
	ldr     r3, [r1, #0x4]
	ldr     r2, [r2, r8, lsl #0x3]
	mov     r1, r9
	str     r9, [sp, #0x74]
	bl      _dsub
	ldr     r2, [pc, #-0x140] @ [0x20dd4c4] (=Unknown_20fecac)
	mov     r10, r0
	add     r3, r2, r8, lsl #3
	mov     r4, r1
	ldr     r0, [sp, #0x70]
	ldr     r2, [r2, r8, lsl #0x3]
	ldr     r3, [r3, #0x4]
	mov     r1, r9
	bl      _dadd
	mov     r3, r1
	mov     r2, r0
	ldr     r1, [pc, #-0x1b0] @ [0x20dd480] (=0x3ff00000)
	mov     r0, #0x0
	bl      _ddiv
	str     r1, [sp, #0x24]
	mov     r11, r0
	ldr     r3, [sp, #0x24]
	mov     r0, r10
	mov     r1, r4
	mov     r2, r11
	bl      Function_20e0234
	mov     r2, r9, asr #1
	orr     r2, r2, #2, 4 @ #0x20000000
	mov     r9, r1
	add     r2, r2, #2, 14 @ #0x80000
	add     r1, r2, r8, lsl #18
	ldr     r2, [pc, #-0x1a8] @ [0x20dd4c4] (=Unknown_20fecac)
	str     r0, [sp, #0x28]
	add     r3, r2, r8, lsl #3
	mov     r0, #0x0
	ldr     r2, [r2, r8, lsl #0x3]
	ldr     r3, [r3, #0x4]
	str     r9, [sp, #0x4c]
	str     r1, [sp, #0x44]
	str     r0, [sp, #0x48]
	str     r0, [sp, #0x40]
	bl      _dsub
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x70]
	ldr     r1, [sp, #0x74]
	bl      _dsub
	str     r0, [sp, #0x2c]
	str     r1, [sp, #0x1c]
	ldr     r0, [sp, #0x48]
	ldr     r2, [sp, #0x40]
	ldr     r3, [sp, #0x44]
	mov     r1, r9
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	mov     r0, r10
	mov     r1, r4
	bl      _dsub
	mov     r10, r0
	mov     r4, r1
	ldr     r2, [sp, #0x2c]
	ldr     r3, [sp, #0x1c]
	ldr     r0, [sp, #0x48]
	mov     r1, r9
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	mov     r0, r10
	mov     r1, r4
	bl      _dsub
	mov     r3, r1
	mov     r2, r0
	ldr     r1, [sp, #0x24]
	mov     r0, r11
	bl      Function_20e0234
	str     r0, [sp, #0x30]
	ldr     r0, [sp, #0x28]
	str     r1, [sp, #0x14]
	mov     r1, r9
	mov     r2, r0
	mov     r3, r9
	bl      Function_20e0234
	mov     r4, r0
	mov     r10, r1
	mov     r2, r4
	mov     r3, r10
	bl      Function_20e0234
	str     r0, [sp, #0x34]
	mov     r11, r1
	ldr     r0, [pc, #-0x290] @ [0x20dd4c8] (=0x4a454eef)
	ldr     r1, [pc, #-0x290] @ [0x20dd4cc] (=0x3fca7e28)
	mov     r2, r4
	mov     r3, r10
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x2a4] @ [0x20dd4d0] (=0x93c9db65)
	ldr     r1, [pc, #-0x2a4] @ [0x20dd4d4] (=0x3fcd864a)
	bl      _dadd
	mov     r2, r0
	mov     r3, r1
	mov     r0, r4
	mov     r1, r10
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x2c4] @ [0x20dd4d8] (=0xa91d4101)
	ldr     r1, [pc, #-0x2c4] @ [0x20dd4dc] (=0x3fd17460)
	bl      _dadd
	mov     r2, r0
	mov     r3, r1
	mov     r0, r4
	mov     r1, r10
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x2e4] @ [0x20dd4e0] (=0x518f264d)
	ldr     r1, [pc, #-0x2e4] @ [0x20dd4e4] (=0x3fd55555)
	bl      _dadd
	mov     r2, r0
	mov     r3, r1
	mov     r0, r4
	mov     r1, r10
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x304] @ [0x20dd4e8] (=0xdb6fabff)
	ldr     r1, [pc, #-0x304] @ [0x20dd4ec] (=0x3fdb6db6)
	bl      _dadd
	mov     r2, r0
	mov     r3, r1
	mov     r0, r4
	mov     r1, r10
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x324] @ [0x20dd4f0] (=0x33333303)
	ldr     r1, [pc, #-0x324] @ [0x20dd4f4] (=0x3fe33333)
	bl      _dadd
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x34]
	mov     r1, r11
	bl      Function_20e0234
	mov     r4, r0
	mov     r10, r1
	ldr     r0, [sp, #0x48]
	ldr     r2, [sp, #0x28]
	mov     r1, r9
	mov     r3, r9
	bl      _dadd
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x30]
	ldr     r1, [sp, #0x14]
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	mov     r0, r4
	mov     r1, r10
	bl      _dadd
	mov     r4, r0
	ldr     r0, [sp, #0x48]
	mov     r10, r1
	mov     r1, r9
	mov     r2, r0
	mov     r3, r1
	bl      Function_20e0234
	str     r1, [sp, #0xc]
	mov     r11, r0
	ldr     r1, [pc, #-0x3a4] @ [0x20dd4f8] (=0x40080000)
	ldr     r3, [sp, #0xc]
	mov     r0, #0x0
	mov     r2, r11
	bl      _dadd
	mov     r2, r4
	mov     r3, r10
	bl      _dadd
	mov     r0, #0x0
	ldr     r3, [pc, #-0x3c8] @ [0x20dd4f8] (=0x40080000)
	mov     r2, r0
	str     r1, [sp, #0x44]
	str     r0, [sp, #0x40]
	bl      _dsub
	ldr     r3, [sp, #0xc]
	mov     r2, r11
	bl      _dsub
	mov     r2, r0
	mov     r3, r1
	mov     r0, r4
	mov     r1, r10
	bl      _dsub
	str     r0, [sp, #0x38]
	str     r1, [sp, #0x4]
	ldr     r0, [sp, #0x48]
	ldr     r2, [sp, #0x40]
	ldr     r3, [sp, #0x44]
	mov     r1, r9
	bl      Function_20e0234
	mov     r4, r0
	mov     r10, r1
	ldr     r0, [sp, #0x30]
	ldr     r1, [sp, #0x14]
	ldr     r2, [sp, #0x40]
	ldr     r3, [sp, #0x44]
	bl      Function_20e0234
	str     r0, [sp, #0x3c]
	mov     r11, r1
	ldr     r0, [sp, #0x38]
	ldr     r1, [sp, #0x4]
	ldr     r2, [sp, #0x28]
	mov     r3, r9
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x3c]
	mov     r1, r11
	bl      _dadd
	mov     r9, r0
	mov     r11, r1
	mov     r0, r4
	mov     r1, r10
	mov     r2, r9
	mov     r3, r11
	bl      _dadd
	mov     r0, #0x0
	mov     r2, r4
	mov     r3, r10
	str     r1, [sp, #0x6c]
	str     r0, [sp, #0x68]
	bl      _dsub
	mov     r2, r0
	mov     r3, r1
	mov     r0, r9
	mov     r1, r11
	bl      _dsub
	mov     r10, r1
	mov     r11, r0
	ldr     r1, [pc, #-0x4b0] @ [0x20dd4fc] (=0x3feec709)
	ldr     r2, [sp, #0x68]
	ldr     r3, [sp, #0x6c]
	mov     r0, #14, 4 @ #0xe0000000
	bl      Function_20e0234
	mov     r4, r0
	mov     r9, r1
	ldr     r0, [pc, #-0x4c8] @ [0x20dd500] (=0x145b01f5)
	ldr     r1, [pc, #-0x4c8] @ [0x20dd504] (=0xbe3e2fe0)
	ldr     r2, [sp, #0x68]
	ldr     r3, [sp, #0x6c]
	bl      Function_20e0234
	mov     r2, r11
	mov     r3, r10
	mov     r11, r0
	mov     r10, r1
	ldr     r0, [pc, #-0x4e4] @ [0x20dd508] (=0xdc3a03fd)
	ldr     r1, [pc, #-0x4f4] @ [0x20dd4fc] (=0x3feec709)
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	mov     r0, r11
	mov     r1, r10
	bl      _dadd
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x508] @ [0x20dd50c] (=Unknown_20fecbc)
	add     r1, r0, r8, lsl #3
	ldr     r0, [r0, r8, lsl #0x3]
	ldr     r1, [r1, #0x4]
	bl      _dadd
	mov     r11, r0
	mov     r10, r1
	mov     r0, r6
	bl      _dflt
	str     r0, [sp, #0x50]
	str     r1, [sp, #0x54]
	mov     r0, r4
	mov     r1, r9
	mov     r2, r11
	mov     r3, r10
	bl      _dadd
	ldr     r2, [pc, #-0x544] @ [0x20dd510] (=Unknown_20fec9c)
	add     r3, r2, r8, lsl #3
	ldr     r2, [r2, r8, lsl #0x3]
	ldr     r3, [r3, #0x4]
	bl      _dadd
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x50]
	ldr     r1, [sp, #0x54]
	bl      _dadd
	str     r1, [sp, #0x5c]
	mov     r0, #0x0
	str     r0, [sp, #0x58]
	ldr     r2, [sp, #0x50]
	ldr     r3, [sp, #0x54]
	bl      _dsub
	ldr     r2, [pc, #-0x584] @ [0x20dd510] (=Unknown_20fec9c)
	add     r3, r2, r8, lsl #3
	ldr     r2, [r2, r8, lsl #0x3]
	ldr     r3, [r3, #0x4]
	bl      _dsub
	mov     r2, r4
	mov     r3, r9
	bl      _dsub
	mov     r2, r0
	mov     r0, r11
	mov     r3, r1
	mov     r1, r10
	bl      _dsub
	mov     r4, r0
	mov     r8, r1
.arm
branch_20ddac8: @ 20ddac8 :arm
	sub     r0, r5, #0x1
	ldr     r1, [sp, #0xb4]
	orrs    r0, r7, r0
	ldr     r5, [pc, #-0x65c] @ [0x20dd480] (=0x3ff00000)
	mov     r2, #0x0
	ldr     r0, [sp, #0xb0]
	mov     r3, r1
	mov     r6, #0x0
	subeq   r5, r5, #2, 2 @ #0x80000000
	str     r1, [sp, #0x64]
	str     r2, [sp, #0x60]
	bl      _dsub
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x58]
	ldr     r1, [sp, #0x5c]
	bl      Function_20e0234
	mov     r7, r0
	mov     r9, r1
	ldr     r0, [sp, #0xb0]
	ldr     r1, [sp, #0xb4]
	mov     r2, r4
	mov     r3, r8
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	mov     r0, r7
	mov     r1, r9
	bl      _dadd
	mov     r7, r0
	mov     r8, r1
	ldr     r0, [sp, #0x60]
	ldr     r1, [sp, #0x64]
	ldr     r2, [sp, #0x58]
	ldr     r3, [sp, #0x5c]
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	mov     r0, r7
	mov     r1, r8
	str     r2, [sp, #0x68]
	str     r3, [sp, #0x6c]
	bl      _dadd
	mov     r9, r1
	ldr     r2, [pc, #-0x66c] @ [0x20dd514] (=0x40900000)
	str     r0, [sp, #0x78]
	str     r9, [sp, #0x7c]
	cmp     r9, r2
	blt     branch_20ddc54
	add     r1, r9, #247, 12 @ #0xf700000
	add     r1, r1, #11, 4 @ #0xb0000000
	orrs    r0, r1, r0
	beq     branch_20ddbd4
	ldr     r0, [pc, #-0x68c] @ [0x20dd518] (=0x8800759c)
	ldr     r1, [pc, #-0x68c] @ [0x20dd51c] (=0x7e37e43c)
	mov     r2, r6
	mov     r3, r5
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x6a8] @ [0x20dd518] (=0x8800759c)
	ldr     r1, [pc, #-0x6a8] @ [0x20dd51c] (=0x7e37e43c)
	bl      Function_20e0234
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20ddbd4

.arm
branch_20ddbd4: @ 20ddbd4 :arm
	ldr     r0, [pc, #-0x724] @ [0x20dd4b8] (=0x652b82fe)
	ldr     r1, [pc, #-0x6c0] @ [0x20dd520] (=0x3c971547)
	mov     r2, r7
	mov     r3, r8
	bl      _dadd
	mov     r4, r0
	mov     r10, r1
	ldr     r0, [sp, #0x78]
	ldr     r2, [sp, #0x68]
	ldr     r3, [sp, #0x6c]
	mov     r1, r9
	bl      _dsub
	mov     r2, r0
	mov     r3, r1
	mov     r0, r4
	mov     r1, r10
	bl      Function_20e0dbc
	bls     branch_20ddd08
	ldr     r0, [pc, #-0x70c] @ [0x20dd518] (=0x8800759c)
	ldr     r1, [pc, #-0x70c] @ [0x20dd51c] (=0x7e37e43c)
	mov     r2, r6
	mov     r3, r5
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x728] @ [0x20dd518] (=0x8800759c)
	ldr     r1, [pc, #-0x728] @ [0x20dd51c] (=0x7e37e43c)
	bl      Function_20e0234
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20ddc54

.arm
branch_20ddc54: @ 20ddc54 :arm
	bic     r3, r9, #2, 2 @ #0x80000000
	add     r2, r2, #51, 22 @ #0xcc00
	cmp     r3, r2
	blt     branch_20ddd08
	ldr     r2, [pc, #-0x748] @ [0x20dd524] (=0x3f6f3400)
	add     r2, r9, r2
	orrs    r2, r2, r0
	beq     branch_20ddcac
	ldr     r0, [pc, #-0x754] @ [0x20dd528] (=0xc2f8f359)
	ldr     r1, [pc, #-0x754] @ [0x20dd52c] (=0x1a56e1f)
	mov     r2, r6
	mov     r3, r5
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x770] @ [0x20dd528] (=0xc2f8f359)
	ldr     r1, [pc, #-0x770] @ [0x20dd52c] (=0x1a56e1f)
	bl      Function_20e0234
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20ddcac

.arm
branch_20ddcac: @ 20ddcac :arm
	ldr     r2, [sp, #0x68]
	ldr     r3, [sp, #0x6c]
	bl      _dsub
	mov     r2, r0
	mov     r3, r1
	mov     r0, r7
	mov     r1, r8
	bl      Function_20e0e54
	bhi     branch_20ddd08
	ldr     r0, [pc, #-0x7b0] @ [0x20dd528] (=0xc2f8f359)
	ldr     r1, [pc, #-0x7b0] @ [0x20dd52c] (=0x1a56e1f)
	mov     r2, r6
	mov     r3, r5
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x7cc] @ [0x20dd528] (=0xc2f8f359)
	ldr     r1, [pc, #-0x7cc] @ [0x20dd52c] (=0x1a56e1f)
	bl      Function_20e0234
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20ddd08

.arm
branch_20ddd08: @ 20ddd08 :arm
	ldr     r0, [pc, #-0x884] @ [0x20dd48c] (=0xfffffc01)
	bic     r3, r9, #2, 2 @ #0x80000000
	ldr     r1, [pc, #-0x888] @ [0x20dd490] (=0x3fe00000)
	add     r2, r0, r3, asr #20
	cmp     r3, r1
	mov     r4, #0x0
	ble     branch_20ddd84
	mov     r1, #1, 12 @ #0x100000
	add     r2, r2, #0x1
	add     r2, r9, r1, asr r2
	bic     r3, r2, #2, 2 @ #0x80000000
	add     r0, r0, r3, asr #20
	sub     r3, r1, #0x1
	mvn     r3, r3, asr r0
	sub     r1, r1, #0x1
	and     r1, r2, r1
	and     r2, r2, r3
	str     r2, [sp, #0x54]
	str     r4, [sp, #0x50]
	orr     r1, r1, #1, 12 @ #0x100000
	rsb     r0, r0, #0x14
	mov     r4, r1, asr r0
	cmp     r9, #0x0
	ldr     r0, [sp, #0x68]
	ldr     r1, [sp, #0x6c]
	ldr     r2, [sp, #0x50]
	ldr     r3, [sp, #0x54]
	rsblt   r4, r4, #0x0
	bl      _dsub
	str     r0, [sp, #0x68]
	str     r1, [sp, #0x6c]
.arm
branch_20ddd84: @ 20ddd84 :arm
	ldr     r2, [sp, #0x68]
	ldr     r3, [sp, #0x6c]
	mov     r0, r7
	mov     r1, r8
	bl      _dadd
	mov     r3, r1
	mov     r0, #0x0
	ldr     r1, [pc, #-0x878] @ [0x20dd530] (=0x3fe62e43)
	mov     r2, r0
	str     r3, [sp, #0x54]
	str     r0, [sp, #0x50]
	bl      Function_20e0234
	mov     r9, r0
	mov     r10, r1
	ldr     r0, [sp, #0x50]
	ldr     r1, [sp, #0x54]
	ldr     r2, [sp, #0x68]
	ldr     r3, [sp, #0x6c]
	bl      _dsub
	mov     r2, r0
	mov     r0, r7
	mov     r3, r1
	mov     r1, r8
	bl      _dsub
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x8c0] @ [0x20dd534] (=0xfefa39ef)
	ldr     r1, [pc, #-0x8c0] @ [0x20dd538] (=0x3fe62e42)
	bl      Function_20e0234
	mov     r7, r0
	mov     r8, r1
	ldr     r0, [pc, #-0x8cc] @ [0x20dd53c] (=0xca86c39)
	ldr     r1, [pc, #-0x8cc] @ [0x20dd540] (=0xbe205c61)
	ldr     r2, [sp, #0x50]
	ldr     r3, [sp, #0x54]
	bl      Function_20e0234
	mov     r2, r0
	mov     r0, r7
	mov     r3, r1
	mov     r1, r8
	bl      _dadd
	mov     r7, r0
	mov     r8, r1
	mov     r0, r9
	mov     r1, r10
	mov     r2, r7
	mov     r3, r8
	bl      _dadd
	mov     r2, r9
	mov     r3, r10
	str     r0, [sp, #0x78]
	str     r1, [sp, #0x7c]
	bl      _dsub
	mov     r2, r0
	mov     r3, r1
	mov     r0, r7
	mov     r1, r8
	bl      _dsub
	mov     r8, r0
	mov     r9, r1
	ldr     r0, [sp, #0x78]
	ldr     r1, [sp, #0x7c]
	mov     r2, r0
	mov     r3, r1
	bl      Function_20e0234
	mov     r2, r0
	str     r2, [sp, #0x50]
	mov     r3, r1
	str     r3, [sp, #0x54]
	ldr     r0, [pc, #-0x95c] @ [0x20dd544] (=0x72bea4d0)
	ldr     r1, [pc, #-0x95c] @ [0x20dd548] (=0x3e663769)
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x968] @ [0x20dd54c] (=0xc5d26bf1)
	ldr     r1, [pc, #-0x968] @ [0x20dd550] (=0xbebbbd41)
	bl      _dadd
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x50]
	ldr     r1, [sp, #0x54]
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x988] @ [0x20dd554] (=0xaf25de2c)
	ldr     r1, [pc, #-0x988] @ [0x20dd558] (=0x3f11566a)
	bl      _dadd
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x50]
	ldr     r1, [sp, #0x54]
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x9a8] @ [0x20dd55c] (=0x16bebd93)
	ldr     r1, [pc, #-0x9a8] @ [0x20dd560] (=0xbf66c16c)
	bl      _dadd
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x50]
	ldr     r1, [sp, #0x54]
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #-0x9c8] @ [0x20dd564] (=0x5555553e)
	ldr     r1, [pc, #-0x9c8] @ [0x20dd568] (=0x3fc55555)
	bl      _dadd
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x50]
	ldr     r1, [sp, #0x54]
	bl      Function_20e0234
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x78]
	ldr     r1, [sp, #0x7c]
	bl      _dsub
	mov     r2, r0
	str     r2, [sp, #0x58]
	mov     r3, r1
	str     r3, [sp, #0x5c]
	ldr     r0, [sp, #0x78]
	ldr     r1, [sp, #0x7c]
	bl      Function_20e0234
	mov     r7, r0
	mov     r10, r1
	ldr     r0, [sp, #0x58]
	ldr     r1, [sp, #0x5c]
	mov     r2, #0x0
	mov     r3, #1, 2 @ #0x40000000
	bl      _dsub
	mov     r2, r0
	mov     r0, r7
	mov     r3, r1
	mov     r1, r10
	bl      _ddiv
	mov     r7, r0
	mov     r10, r1
	ldr     r0, [sp, #0x78]
	ldr     r1, [sp, #0x7c]
	mov     r2, r8
	mov     r3, r9
	bl      Function_20e0234
	mov     r2, r0
	mov     r0, r8
	mov     r3, r1
	mov     r1, r9
	bl      _dadd
	mov     r2, r0
	mov     r0, r7
	mov     r3, r1
	mov     r1, r10
	bl      _dsub
	ldr     r2, [sp, #0x78]
	ldr     r3, [sp, #0x7c]
	bl      _dsub
	mov     r3, r1
	mov     r2, r0
	ldr     r1, [pc, #-0xb84] @ [0x20dd480] (=0x3ff00000)
	mov     r0, #0x0
	bl      _dsub
	add     r3, r1, r4, lsl #20
	mov     r2, r3, asr #20
	str     r0, [sp, #0x78]
	cmp     r2, #0x0
	str     r1, [sp, #0x7c]
	addgt   r0, sp, #0x78
	strgt   r3, [r0, #0x4]
	bgt     branch_20de038
	mov     r2, r4
	bl      Function_20df8ec
	str     r0, [sp, #0x78]
	str     r1, [sp, #0x7c]
.arm
branch_20de038: @ 20de038 :arm
	ldr     r2, [sp, #0x78]
	ldr     r3, [sp, #0x7c]
	mov     r0, r6
	mov     r1, r5
	bl      Function_20e0234
	add     sp, sp, #0x80
	ldmfd   sp!, {r3-r11,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20de05c


.arm
Function_20de05c: @ 20de05c :arm
	stmfd   sp!, {r0-r3}
	ldr     r1, [sp, #0x4]
	ldr     r0, [sp, #0xc]
	bic     r1, r1, #2, 2 @ #0x80000000
	and     r0, r0, #2, 2 @ #0x80000000
	orr     r1, r1, r0
	ldr     r0, [sp]
	str     r1, [sp, #0x4]
	add     sp, sp, #0x10
	bx      lr
@ 0x20de084

.arm
Function_20de084: @ 20de084 :arm
	stmfd   sp!, {r0-r3}
	add     r2, sp, #0x0
	ldr     r1, [r2, #0x4]
	ldr     r0, [sp]
	bic     r1, r1, #2, 2 @ #0x80000000
	str     r1, [r2, #0x4]
	add     sp, sp, #0x10
	bx      lr
@ 0x20de0a4

.arm
Function_20de0a4: @ 20de0a4 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r4,lr}
	ldr     r1, [sp, #0xc]
	ldr     r0, [pc, #0x98] @ [0x20de150] (=0x7ff00000)
	mov     r4, r2
	bic     r3, r1, #2, 2 @ #0x80000000
	mov     r2, #0x0
	str     r2, [r4]
	cmp     r3, r0
	ldr     r0, [sp, #0x8]
	bge     branch_20de0d8
	orrs    r0, r3, r0
	bne     branch_20de0ec
.arm
branch_20de0d8: @ 20de0d8 :arm
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	ldmfd   sp!, {r4,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20de0ec

.arm
branch_20de0ec: @ 20de0ec :arm
	cmp     r3, #1, 12 @ #0x100000
	bge     branch_20de118
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	ldr     r3, [pc, #0x50] @ [0x20de154] (=0x43500000)
	bl      Function_20e0234
	mvn     r2, #0x35
	str     r0, [sp, #0x8]
	str     r1, [sp, #0xc]
	str     r2, [r4]
	bic     r3, r1, #2, 2 @ #0x80000000
.arm
branch_20de118: @ 20de118 :arm
	ldr     r2, [pc, #0x38] @ [0x20de158] (=0x800fffff)
	ldr     r0, [pc, #0x38] @ [0x20de15c] (=0xfffffc02)
	and     r1, r1, r2
	orr     r1, r1, #254, 12 @ #0xfe00000
	orr     r1, r1, #3, 4 @ #0x30000000
	ldr     r2, [r4]
	add     r0, r0, r3, asr #20
	add     r2, r2, r0
	ldr     r0, [sp, #0x8]
	str     r2, [r4]
	str     r1, [sp, #0xc]
	ldmfd   sp!, {r4,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20de150

.word 0x7ff00000 @ 0x20de150
.word 0x43500000 @ 0x20de154
.word 0x800fffff @ 0x20de158
.word 0xfffffc02 @ 0x20de15c
.arm
Function_20de160: @ 20de160 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r4,lr}
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	mov     r4, r2
	bl      Function_20df87c
	cmp     r0, #0x2
	ble     branch_20de198
	mov     r0, #0x0
	ldr     r2, [sp, #0x8]
	ldr     r3, [sp, #0xc]
	mov     r1, r0
	bl      Function_20e0f94
	bne     branch_20de1ac
.arm
branch_20de198: @ 20de198 :arm
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	ldmfd   sp!, {r4,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20de1ac

.arm
branch_20de1ac: @ 20de1ac :arm
	ldr     r3, [sp, #0xc]
	ldr     r0, [pc, #0x1c8] @ [0x20de380] (=0x7ff00000)
	ldr     r1, [sp, #0x8]
	and     r0, r3, r0
	movs    r12, r0, asr #20
	bne     branch_20de238
	bic     r0, r3, #2, 2 @ #0x80000000
	orrs    r0, r1, r0
	ldreq   r0, [sp, #0x8]
	ldreq   r1, [sp, #0xc]
	ldmeqfd sp!, {r4,lr}
	addeq   sp, sp, #0x10
	bxeq    lr
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	ldr     r3, [pc, #0x194] @ [0x20de384] (=0x43500000)
	mov     r2, #0x0
	bl      Function_20e0234
	mov     r3, r1
	ldr     r1, [pc, #0x180] @ [0x20de380] (=0x7ff00000)
	ldr     r12, [pc, #0x184] @ [0x20de388] (=0xffff3cb0)
	and     r1, r3, r1
	mov     r2, r0
	mov     r0, r1, asr #20
	str     r2, [sp, #0x8]
	str     r3, [sp, #0xc]
	cmp     r4, r12
	sub     r12, r0, #0x36
	bge     branch_20de238
	ldr     r0, [pc, #0x164] @ [0x20de38c] (=0xc2f8f359)
	ldr     r1, [pc, #0x164] @ [0x20de390] (=0x1a56e1f)
	bl      Function_20e0234
	ldmfd   sp!, {r4,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20de238

.arm
branch_20de238: @ 20de238 :arm
	ldr     r0, [pc, #0x154] @ [0x20de394] (=0x7ff)
	cmp     r12, r0
	bne     branch_20de264
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	mov     r2, r0
	mov     r3, r1
	bl      _dadd
	ldmfd   sp!, {r4,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20de264

.arm
branch_20de264: @ 20de264 :arm
	add     r2, r12, r4
	sub     r0, r0, #0x1
	cmp     r2, r0
	ble     branch_20de2a8
	ldr     r2, [sp, #0x8]
	ldr     r3, [sp, #0xc]
	ldr     r0, [pc, #0x114] @ [0x20de398] (=0x8800759c)
	ldr     r1, [pc, #0x114] @ [0x20de39c] (=0x7e37e43c)
	bl      Function_20de05c
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #0x100] @ [0x20de398] (=0x8800759c)
	ldr     r1, [pc, #0x100] @ [0x20de39c] (=0x7e37e43c)
	bl      Function_20e0234
	ldmfd   sp!, {r4,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20de2a8

.arm
branch_20de2a8: @ 20de2a8 :arm
	cmp     r2, #0x0
	ble     branch_20de2d0
	ldr     r1, [pc, #0xe8] @ [0x20de3a0] (=0x800fffff)
	ldr     r0, [sp, #0x8]
	and     r1, r3, r1
	orr     r1, r1, r2, lsl #20
	str     r1, [sp, #0xc]
	ldmfd   sp!, {r4,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20de2d0

.arm
branch_20de2d0: @ 20de2d0 :arm
	mvn     r0, #0x35
	cmp     r2, r0
	bgt     branch_20de350
	ldr     r0, [pc, #0xc0] @ [0x20de3a4] (=0xc350)
	cmp     r4, r0
	ble     branch_20de31c
	ldr     r2, [sp, #0x8]
	ldr     r3, [sp, #0xc]
	ldr     r0, [pc, #0xa0] @ [0x20de398] (=0x8800759c)
	ldr     r1, [pc, #0xa0] @ [0x20de39c] (=0x7e37e43c)
	bl      Function_20de05c
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #0x8c] @ [0x20de398] (=0x8800759c)
	ldr     r1, [pc, #0x8c] @ [0x20de39c] (=0x7e37e43c)
	bl      Function_20e0234
	ldmfd   sp!, {r4,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20de31c

.arm
branch_20de31c: @ 20de31c :arm
	ldr     r2, [sp, #0x8]
	ldr     r3, [sp, #0xc]
	ldr     r0, [pc, #0x60] @ [0x20de38c] (=0xc2f8f359)
	ldr     r1, [pc, #0x60] @ [0x20de390] (=0x1a56e1f)
	bl      Function_20de05c
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [pc, #0x4c] @ [0x20de38c] (=0xc2f8f359)
	ldr     r1, [pc, #0x4c] @ [0x20de390] (=0x1a56e1f)
	bl      Function_20e0234
	ldmfd   sp!, {r4,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20de350

.arm
branch_20de350: @ 20de350 :arm
	ldr     r0, [pc, #0x48] @ [0x20de3a0] (=0x800fffff)
	add     r1, r2, #0x36
	and     r0, r3, r0
	orr     r3, r0, r1, lsl #20
	ldr     r2, [sp, #0x8]
	ldr     r1, [pc, #0x3c] @ [0x20de3a8] (=0x3c900000)
	mov     r0, #0x0
	str     r3, [sp, #0xc]
	bl      Function_20e0234
	ldmfd   sp!, {r4,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20de380

.word 0x7ff00000 @ 0x20de380
.word 0x43500000 @ 0x20de384
.word 0xffff3cb0 @ 0x20de388
.word 0xc2f8f359 @ 0x20de38c
.word 0x1a56e1f @ 0x20de390
.word 0x7ff @ 0x20de394
.word 0x8800759c @ 0x20de398
.word 0x7e37e43c @ 0x20de39c
.word 0x800fffff @ 0x20de3a0
.word 0xc350 @ 0x20de3a4
.word 0x3c900000 @ 0x20de3a8



.arm
Function_20de3ac: @ 20de3ac :arm
	ldr     r12, [pc, #0x0] @ [0x20de3b4] (=0x20dced4)
	bx      r12
@ 0x20de3b4

.word Function_20dced4 @ 0x20de3b4


.arm
Function_20de3b8: @ 20de3b8 :arm
	add     r3, r0, #0x5
	ldrb    r2, [r3, r1]
	add     r12, r3, r1
	cmp     r2, #0x5
	movhi   r0, #0x1
	bxhi    lr
	mvncc   r0, #0x0
	bxcc    lr
	ldrb    r2, [r0, #0x4]
	add     r12, r12, #0x1
	add     r3, r3, r2
	cmp     r12, r3
	bhs     branch_20de408
.arm
branch_20de3ec: @ 20de3ec :arm
	ldrb    r2, [r12]
	cmp     r2, #0x0
	movne   r0, #0x1
	bxne    lr
	add     r12, r12, #0x1
	cmp     r12, r3
	blo     branch_20de3ec
.arm
branch_20de408: @ 20de408 :arm
	sub     r1, r1, #0x1
	add     r0, r0, r1
	ldrb    r0, [r0, #0x5]
	tst     r0, #0x1
	movne   r0, #0x1
	mvneq   r0, #0x0
	bx      lr
@ 0x20de424

.arm
Function_20de424: @ 20de424 :arm
	add     r3, r0, #0x5
	add     r1, r3, r1
	sub     r12, r1, #0x1
	mov     r1, #0x0
.arm
branch_20de434: @ 20de434 :arm
	ldrb    r2, [r12]
	cmp     r2, #0x9
	addcc   r0, r2, #0x1
	strccb  r0, [r12]
	bxcc    lr
	cmp     r12, r3
	bne     branch_20de468
	mov     r1, #0x1
	strb    r1, [r12]
	ldrsh   r1, [r0, #0x2]
	add     r1, r1, #0x1
	strh    r1, [r0, #0x2]
	bx      lr
@ 0x20de468

.arm
branch_20de468: @ 20de468 :arm
	strb    r1, [r12], #-0x1
	b       branch_20de434
@ 0x20de470


.arm
Function_20de470: @ 20de470 :arm
	bx      lr
@ 0x20de474


.arm
Function_20de474: @ 20de474 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r1
	mov     r5, r0
	cmp     r4, #0x0
	ldmlefd sp!, {r3-r5,pc}
	ldrb    r2, [r5, #0x4]
	cmp     r4, r2
	ldmgefd sp!, {r3-r5,pc}
	bl      Function_20de3b8
	strb    r4, [r5, #0x4]
	cmp     r0, #0x0
	ldmltfd sp!, {r3-r5,pc}
	mov     r0, r5
	mov     r1, r4
	bl      Function_20de424
	ldmfd   sp!, {r3-r5,pc}
@ 0x20de4b4

.arm
Function_20de4b4: @ 20de4b4 :arm
	stmfd   sp!, {r3-r11,lr}
	mov     r10, r0
	mov     r0, #0x0
	mov     r8, r2
	strb    r0, [r10]
	mov     r9, r1
	cmp     r8, #0x0
	strb    r0, [r10, #0x4]
	cmpeq   r9, #0x0
	beq     branch_20de540
	mov     r6, #0xa
	mov     r11, r0
	mov     r5, r0
	mov     r4, r0
.arm
branch_20de4ec: @ 20de4ec :arm
	ldrb    r1, [r10, #0x4]
	mov     r0, r9
	mov     r2, r6
	add     r3, r1, #0x1
	mov     r7, r1
	strb    r3, [r10, #0x4]
	mov     r1, r8
	mov     r3, r11
	bl      _ull_mod
	add     r1, r10, r7
	strb    r0, [r1, #0x5]
	mov     r0, r9
	mov     r1, r8
	mov     r2, #0xa
	mov     r3, #0x0
	bl      _ll_udiv
	mov     r8, r1
	mov     r9, r0
	cmp     r8, r5
	cmpeq   r9, r4
	bne     branch_20de4ec
.arm
branch_20de540: @ 20de540 :arm
	ldrb    r0, [r10, #0x4]
	add     r2, r10, #0x5
	add     r0, r2, r0
	sub     r3, r0, #0x1
	cmp     r2, r3
	bhs     branch_20de570
.arm
branch_20de558: @ 20de558 :arm
	ldrb    r0, [r3]
	ldrb    r1, [r2]
	strb    r0, [r2], #0x1
	strb    r1, [r3], #-0x1
	cmp     r2, r3
	blo     branch_20de558
.arm
branch_20de570: @ 20de570 :arm
	ldrb    r0, [r10, #0x4]
	sub     r0, r0, #0x1
	strh    r0, [r10, #0x2]
	ldmfd   sp!, {r3-r11,pc}
@ 0x20de580

.arm
Function_20de580: @ 20de580 :arm
	stmfd   sp!, {r3-r11,lr}
	sub     sp, sp, #0x40
	ldrb    r6, [r1, #0x4]
	ldrb    r5, [r2, #0x4]
	mov     r4, #0x0
	add     r3, sp, #0x0
	add     r5, r6, r5
	sub     r5, r5, #0x1
	add     r3, r3, r5
	add     r6, r3, #0x1
	mov     r7, r6
	strb    r4, [r0]
	cmp     r5, #0x0
	ble     branch_20de648
	add     lr, r1, #0x5
	add     r11, r2, #0x5
.arm
branch_20de5c0: @ 20de5c0 :arm
	ldrb    r3, [r2, #0x4]
	sub     r10, r3, #0x1
	sub     r3, r5, r10
	subs    r9, r3, #0x1
	ldrb    r3, [r1, #0x4]
	movmi   r9, #0x0
	submi   r10, r5, #0x1
	add     r8, r10, #0x1
	sub     r3, r3, r9
	cmp     r8, r3
	movgt   r8, r3
	add     r10, r11, r10
	add     r9, lr, r9
	cmp     r8, #0x0
	ble     branch_20de614
.arm
branch_20de5fc: @ 20de5fc :arm
	ldrb    r12, [r9], #0x1
	ldrb    r3, [r10], #-0x1
	sub     r8, r8, #0x1
	cmp     r8, #0x0
	mla     r4, r12, r3, r4
	bgt     branch_20de5fc
.arm
branch_20de614: @ 20de614 :arm
	ldr     r3, [pc, #0xe4] @ [0x20de700] (=0xcccccccd)
	sub     r5, r5, #0x1
	umull   r8, r9, r4, r3
	mov     r9, r9, lsr #3
	cmp     r5, #0x0
	mov     r10, #0xa
	umull   r8, r9, r10, r9
	sub     r9, r4, r8
	strb    r9, [r6, #-0x1]!
	mov     r8, r4
	umull   r3, r4, r8, r3
	mov     r4, r4, lsr #3
	bgt     branch_20de5c0
.arm
branch_20de648: @ 20de648 :arm
	ldrsh   r3, [r1, #0x2]
	ldrsh   r1, [r2, #0x2]
	cmp     r4, #0x0
	add     r1, r3, r1
	strh    r1, [r0, #0x2]
	beq     branch_20de670
	strb    r4, [r6, #-0x1]!
	ldrsh   r1, [r0, #0x2]
	add     r1, r1, #0x1
	strh    r1, [r0, #0x2]
.arm
branch_20de670: @ 20de670 :arm
	mov     r3, #0x0
	b       branch_20de688
@ 0x20de678

.arm
branch_20de678: @ 20de678 :arm
	ldrb    r2, [r6], #0x1
	add     r1, r0, r3
	add     r3, r3, #0x1
	strb    r2, [r1, #0x5]
.arm
branch_20de688: @ 20de688 :arm
	cmp     r3, #0x20
	bge     branch_20de698
	cmp     r6, r7
	blo     branch_20de678
.arm
branch_20de698: @ 20de698 :arm
	cmp     r6, r7
	addcs   sp, sp, #0x40
	strb    r3, [r0, #0x4]
	ldmcsfd sp!, {r3-r11,pc}
	ldrb    r1, [r6]
	cmp     r1, #0x5
	addcc   sp, sp, #0x40
	ldmccfd sp!, {r3-r11,pc}
	bne     branch_20de6f0
	add     r2, r6, #0x1
	cmp     r2, r7
	bhs     branch_20de6e0
.arm
branch_20de6c8: @ 20de6c8 :arm
	ldrb    r1, [r2]
	cmp     r1, #0x0
	bne     branch_20de6f0
	add     r2, r2, #0x1
	cmp     r2, r7
	blo     branch_20de6c8
.arm
branch_20de6e0: @ 20de6e0 :arm
	ldrb    r1, [r6, #-0x1]
	tst     r1, #0x1
	addeq   sp, sp, #0x40
	ldmeqfd sp!, {r3-r11,pc}
.arm
branch_20de6f0: @ 20de6f0 :arm
	ldrb    r1, [r0, #0x4]
	bl      Function_20de424
	add     sp, sp, #0x40
	ldmfd   sp!, {r3-r11,pc}
@ 0x20de700

.word 0xcccccccd @ 0x20de700
.arm
Function_20de704: @ 20de704 :arm
	stmfd   sp!, {r3,lr}
	strh    r2, [r0, #0x2]
	mov     r12, #0x0
	strb    r12, [r0]
	b       branch_20de72c
@ 0x20de718

.arm
branch_20de718: @ 20de718 :arm
	ldrsb   r3, [r1], #0x1
	add     r2, r0, r12
	add     r12, r12, #0x1
	sub     r3, r3, #0x30
	strb    r3, [r2, #0x5]
.arm
branch_20de72c: @ 20de72c :arm
	cmp     r12, #0x20
	bge     branch_20de740
	ldrsb   r2, [r1]
	cmp     r2, #0x0
	bne     branch_20de718
.arm
branch_20de740: @ 20de740 :arm
	strb    r12, [r0, #0x4]
	ldrsb   r2, [r1]
	cmp     r2, #0x0
	ldmeqfd sp!, {r3,pc}
	cmp     r2, #0x5
	ldmltfd sp!, {r3,pc}
	bgt     branch_20de794
	ldrsb   r2, [r1, #0x1]
	add     r1, r1, #0x1
	cmp     r2, #0x0
	beq     branch_20de780
.arm
branch_20de76c: @ 20de76c :arm
	cmp     r2, #0x30
	bne     branch_20de794
	ldrsb   r2, [r1, #0x1]!
	cmp     r2, #0x0
	bne     branch_20de76c
.arm
branch_20de780: @ 20de780 :arm
	sub     r1, r12, #0x1
	add     r1, r0, r1
	ldrb    r1, [r1, #0x5]
	tst     r1, #0x1
	ldmeqfd sp!, {r3,pc}
.arm
branch_20de794: @ 20de794 :arm
	ldrb    r1, [r0, #0x4]
	bl      Function_20de424
	ldmfd   sp!, {r3,pc}
@ 0x20de7a0


.arm
Function_20de7a0: @ 20de7a0 :arm
	stmfd   sp!, {r4,r5,lr}
	sub     sp, sp, #0x4c
	mov     r4, r1
	mvn     r2, #0x34
	mov     r5, r0
	cmp     r4, r2
	bgt     branch_20de7d0
	bge     branch_20de89c
	sub     r0, r2, #0xb
	cmp     r4, r0
	beq     branch_20de884
	b       branch_20dea2c
@ 0x20de7d0

.arm
branch_20de7d0: @ 20de7d0 :arm
	add     r1, r4, #0x20
	cmp     r1, #0x28
	addls   pc, pc, r1, lsl #2
	b       branch_20dea2c
@ 0x20de7e0

.arm
Function_20de7e0: @ 20de7e0 :arm
	b       branch_20de8b0
@ 0x20de7e4

.arm
Function_20de7e4: @ 20de7e4 :arm
	b       branch_20dea2c
@ 0x20de7e8

.arm
Function_20de7e8: @ 20de7e8 :arm
	b       branch_20dea2c
@ 0x20de7ec

.arm
Function_20de7ec: @ 20de7ec :arm
	b       branch_20dea2c
@ 0x20de7f0

.arm
Function_20de7f0: @ 20de7f0 :arm
	b       branch_20dea2c
@ 0x20de7f4

.arm
Function_20de7f4: @ 20de7f4 :arm
	b       branch_20dea2c
@ 0x20de7f8

.arm
Function_20de7f8: @ 20de7f8 :arm
	b       branch_20dea2c
@ 0x20de7fc

.arm
Function_20de7fc: @ 20de7fc :arm
	b       branch_20dea2c
@ 0x20de800

.arm
Function_20de800: @ 20de800 :arm
	b       branch_20dea2c
@ 0x20de804

.arm
Function_20de804: @ 20de804 :arm
	b       branch_20dea2c
@ 0x20de808

.arm
Function_20de808: @ 20de808 :arm
	b       branch_20dea2c
@ 0x20de80c

.arm
Function_20de80c: @ 20de80c :arm
	b       branch_20dea2c
@ 0x20de810

.arm
Function_20de810: @ 20de810 :arm
	b       branch_20dea2c
@ 0x20de814

.arm
Function_20de814: @ 20de814 :arm
	b       branch_20dea2c
@ 0x20de818

.arm
Function_20de818: @ 20de818 :arm
	b       branch_20dea2c
@ 0x20de81c

.arm
Function_20de81c: @ 20de81c :arm
	b       branch_20dea2c
@ 0x20de820

.arm
Function_20de820: @ 20de820 :arm
	b       branch_20de8c4
@ 0x20de824

.arm
Function_20de824: @ 20de824 :arm
	b       branch_20dea2c
@ 0x20de828

.arm
Function_20de828: @ 20de828 :arm
	b       branch_20dea2c
@ 0x20de82c

.arm
Function_20de82c: @ 20de82c :arm
	b       branch_20dea2c
@ 0x20de830

.arm
Function_20de830: @ 20de830 :arm
	b       branch_20dea2c
@ 0x20de834

.arm
Function_20de834: @ 20de834 :arm
	b       branch_20dea2c
@ 0x20de838

.arm
Function_20de838: @ 20de838 :arm
	b       branch_20dea2c
@ 0x20de83c

.arm
Function_20de83c: @ 20de83c :arm
	b       branch_20dea2c
@ 0x20de840

.arm
Function_20de840: @ 20de840 :arm
	b       branch_20de8d8
@ 0x20de844

.arm
Function_20de844: @ 20de844 :arm
	b       branch_20de8ec
@ 0x20de848

.arm
Function_20de848: @ 20de848 :arm
	b       branch_20de900
@ 0x20de84c

.arm
Function_20de84c: @ 20de84c :arm
	b       branch_20de914
@ 0x20de850

.arm
Function_20de850: @ 20de850 :arm
	b       branch_20de928
@ 0x20de854

.arm
Function_20de854: @ 20de854 :arm
	b       branch_20de93c
@ 0x20de858

.arm
Function_20de858: @ 20de858 :arm
	b       branch_20de950
@ 0x20de85c

.arm
Function_20de85c: @ 20de85c :arm
	b       branch_20de964
@ 0x20de860

.arm
Function_20de860: @ 20de860 :arm
	b       branch_20de978
@ 0x20de864

.arm
Function_20de864: @ 20de864 :arm
	b       branch_20de98c
@ 0x20de868

.arm
Function_20de868: @ 20de868 :arm
	b       branch_20de9a0
@ 0x20de86c

.arm
Function_20de86c: @ 20de86c :arm
	b       branch_20de9b4
@ 0x20de870

.arm
Function_20de870: @ 20de870 :arm
	b       branch_20de9c8
@ 0x20de874

.arm
Function_20de874: @ 20de874 :arm
	b       branch_20de9dc
@ 0x20de878

.arm
Function_20de878: @ 20de878 :arm
	b       branch_20de9f0
@ 0x20de87c

.arm
Function_20de87c: @ 20de87c :arm
	b       branch_20dea04
@ 0x20de880


.arm
Function_20de880: @ 20de880 :arm
	b       branch_20dea18

branch_20de884: @ 20de884 :arm
	ldr     r1, [pc, #0x244] @ [0x20dead0] (=Unknown_21018cc)
	mov     r0, r5
	mvn     r2, #0x13
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de89c: @ 20de89c :arm
	ldr     r1, [pc, #0x230] @ [0x20dead4] (=Unknown_21018fc)
	add     r2, r2, #0x25
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de8b0: @ 20de8b0 :arm
	ldr     r1, [pc, #0x220] @ [0x20dead8] (=Unknown_2101924)
	add     r2, r2, #0x2b
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de8c4: @ 20de8c4 :arm
	ldr     r1, [pc, #0x210] @ [0x20deadc] (=Unknown_210193c)
	add     r2, r2, #0x30
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de8d8: @ 20de8d8 :arm
	ldr     r1, [pc, #0x200] @ [0x20deae0] (=Unknown_210194c)
	add     r2, r2, #0x32
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de8ec: @ 20de8ec :arm
	ldr     r1, [pc, #0x1f0] @ [0x20deae4] (=Unknown_2101954)
	add     r2, r2, #0x32
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de900: @ 20de900 :arm
	ldr     r1, [pc, #0x1e0] @ [0x20deae8] (=Unknown_210195c)
	add     r2, r2, #0x33
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de914: @ 20de914 :arm
	ldr     r1, [pc, #0x1d0] @ [0x20deaec] (=Unknown_2101964)
	add     r2, r2, #0x33
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de928: @ 20de928 :arm
	ldr     r1, [pc, #0x1c0] @ [0x20deaf0] (=Unknown_210196c)
	add     r2, r2, #0x33
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de93c: @ 20de93c :arm
	ldr     r1, [pc, #0x1b0] @ [0x20deaf4] (=Unknown_2101970)
	add     r2, r2, #0x34
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de950: @ 20de950 :arm
	ldr     r1, [pc, #0x1a0] @ [0x20deaf8] (=Unknown_2101974)
	add     r2, r2, #0x34
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de964: @ 20de964 :arm
	ldr     r1, [pc, #0x190] @ [0x20deafc] (=Unknown_2101978)
	add     r2, r2, #0x34
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de978: @ 20de978 :arm
	ldr     r1, [pc, #0x180] @ [0x20deb00] (=Unknown_210197c)
	mov     r2, #0x0
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de98c: @ 20de98c :arm
	ldr     r1, [pc, #0x170] @ [0x20deb04] (=Unknown_2101980)
	mov     r2, #0x0
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de9a0: @ 20de9a0 :arm
	ldr     r1, [pc, #0x160] @ [0x20deb08] (=Unknown_2101984)
	mov     r2, #0x0
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de9b4: @ 20de9b4 :arm
	ldr     r1, [pc, #0x150] @ [0x20deb0c] (=Unknown_2101988)
	mov     r2, #0x0
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de9c8: @ 20de9c8 :arm
	ldr     r1, [pc, #0x140] @ [0x20deb10] (=Unknown_210198c)
	mov     r2, #0x1
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de9dc: @ 20de9dc :arm
	ldr     r1, [pc, #0x130] @ [0x20deb14] (=Unknown_2101990)
	mov     r2, #0x1
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20de9f0: @ 20de9f0 :arm
	ldr     r1, [pc, #0x120] @ [0x20deb18] (=Unknown_2101994)
	mov     r2, #0x1
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20dea04: @ 20dea04 :arm
	ldr     r1, [pc, #0x110] @ [0x20deb1c] (=Unknown_2101998)
	mov     r2, #0x2
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20dea18: @ 20dea18 :arm
	ldr     r1, [pc, #0x100] @ [0x20deb20] (=Unknown_210199c)
	mov     r2, #0x2
	bl      Function_20de704
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}

branch_20dea2c: @ 20dea2c :arm
	and     r0, r4, #2, 2 @ #0x80000000
	add     r1, r4, r0, lsr #31
	add     r0, sp, #0x26
	mov     r1, r1, asr #1
	bl      Function_20de7a0
	add     r1, sp, #0x26
	mov     r0, r5
	mov     r2, r1
	bl      Function_20de580
	tst     r4, #0x1
	addeq   sp, sp, #0x4c
	ldmeqfd sp!, {r4,r5,pc}
	add     r3, sp, #0x0
	mov     r12, r5
	mov     r2, #0x9
branch_20dea68: @ 20dea68 :arm
	ldrh    r1, [r12]
	ldrh    r0, [r12, #0x2]
	add     r12, r12, #0x4
	subs    r2, r2, #0x1
	strh    r1, [r3]
	strh    r0, [r3, #0x2]
	add     r3, r3, #0x4
	bne     branch_20dea68
	ldrh    r0, [r12]
	cmp     r4, #0x0
	strh    r0, [r3]
	add     r0, sp, #0x26
	ble     branch_20deaac
	ldr     r1, [pc, #0x60] @ [0x20deb04] (=Unknown_2101980)
	mov     r2, #0x0
	bl      Function_20de704
	b       branch_20deab8

branch_20deaac: @ 20deaac :arm
	ldr     r1, [pc, #0x48] @ [0x20deafc] (=Unknown_2101978)
	mvn     r2, #0x0
	bl      Function_20de704
branch_20deab8: @ 20deab8 :arm
	add     r1, sp, #0x0
	add     r2, sp, #0x26
	mov     r0, r5
	bl      Function_20de580
	add     sp, sp, #0x4c
	ldmfd   sp!, {r4,r5,pc}
@ 0x20dead0

.word Unknown_21018cc @ 0x20dead0
.word Unknown_21018fc @ 0x20dead4
.word Unknown_2101924 @ 0x20dead8
.word Unknown_210193c @ 0x20deadc
.word Unknown_210194c @ 0x20deae0
.word Unknown_2101954 @ 0x20deae4
.word Unknown_210195c @ 0x20deae8
.word Unknown_2101964 @ 0x20deaec
.word Unknown_210196c @ 0x20deaf0
.word Unknown_2101970 @ 0x20deaf4
.word Unknown_2101974 @ 0x20deaf8
.word Unknown_2101978 @ 0x20deafc
.word Unknown_210197c @ 0x20deb00
.word Unknown_2101980 @ 0x20deb04
.word Unknown_2101984 @ 0x20deb08
.word Unknown_2101988 @ 0x20deb0c
.word Unknown_210198c @ 0x20deb10
.word Unknown_2101990 @ 0x20deb14
.word Unknown_2101994 @ 0x20deb18
.word Unknown_2101998 @ 0x20deb1c
.word Unknown_210199c @ 0x20deb20



.arm
Function_20deb24: @ 20deb24 :arm
	stmfd   sp!, {r4,lr}
	ldrb    r3, [r0, #0x5]
	cmp     r3, #0x0
	bne     branch_20deb48
	ldrb    r0, [r1, #0x5]
	cmp     r0, #0x0
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r4,pc}
@ 0x20deb48

.arm
branch_20deb48: @ 20deb48 :arm
	ldrb    r2, [r1, #0x5]
	cmp     r2, #0x0
	bne     branch_20deb64
	cmp     r3, #0x0
	moveq   r0, #0x1
	movne   r0, #0x0
	ldmfd   sp!, {r4,pc}
@ 0x20deb64

.arm
branch_20deb64: @ 20deb64 :arm
	ldrsh   r3, [r0, #0x2]
	ldrsh   r2, [r1, #0x2]
	cmp     r3, r2
	bne     branch_20debfc
	ldrb    r4, [r0, #0x4]
	ldrb    r2, [r1, #0x4]
	mov     r12, #0x0
	mov     lr, r4
	cmp     r4, r2
	movgt   lr, r2
	cmp     lr, #0x0
	ble     branch_20debbc
.arm
branch_20deb94: @ 20deb94 :arm
	add     r3, r0, r12
	add     r2, r1, r12
	ldrb    r3, [r3, #0x5]
	ldrb    r2, [r2, #0x5]
	cmp     r3, r2
	movne   r0, #0x0
	ldmnefd sp!, {r4,pc}
	add     r12, r12, #0x1
	cmp     r12, lr
	blt     branch_20deb94
.arm
branch_20debbc: @ 20debbc :arm
	cmp     lr, r4
	moveq   r0, r1
	ldrb    r1, [r0, #0x4]
	cmp     r12, r1
	bge     branch_20debf4
.arm
branch_20debd0: @ 20debd0 :arm
	add     r1, r0, r12
	ldrb    r1, [r1, #0x5]
	cmp     r1, #0x0
	movne   r0, #0x0
	ldmnefd sp!, {r4,pc}
	ldrb    r1, [r0, #0x4]
	add     r12, r12, #0x1
	cmp     r12, r1
	blt     branch_20debd0
.arm
branch_20debf4: @ 20debf4 :arm
	mov     r0, #0x1
	ldmfd   sp!, {r4,pc}
@ 0x20debfc

.arm
branch_20debfc: @ 20debfc :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4,pc}
@ 0x20dec04

.arm
Function_20dec04: @ 20dec04 :arm
	stmfd   sp!, {r3-r5,lr}
	ldrb    r2, [r0, #0x5]
	cmp     r2, #0x0
	bne     branch_20dec28
	ldrb    r0, [r1, #0x5]
	cmp     r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20dec28

.arm
branch_20dec28: @ 20dec28 :arm
	ldrb    r2, [r1, #0x5]
	cmp     r2, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	ldrsh   r3, [r1, #0x2]
	ldrsh   r2, [r0, #0x2]
	cmp     r2, r3
	bne     branch_20decd8
	ldrb    r5, [r0, #0x4]
	ldrb    r4, [r1, #0x4]
	mov     r12, #0x0
	mov     lr, r5
	cmp     r5, r4
	movgt   lr, r4
	cmp     lr, #0x0
	ble     branch_20dec9c
.arm
branch_20dec68: @ 20dec68 :arm
	add     r3, r1, r12
	add     r2, r0, r12
	ldrb    r3, [r3, #0x5]
	ldrb    r2, [r2, #0x5]
	cmp     r2, r3
	movcc   r0, #0x1
	ldmccfd sp!, {r3-r5,pc}
	cmp     r3, r2
	movcc   r0, #0x0
	ldmccfd sp!, {r3-r5,pc}
	add     r12, r12, #0x1
	cmp     r12, lr
	blt     branch_20dec68
.arm
branch_20dec9c: @ 20dec9c :arm
	cmp     lr, r5
	bne     branch_20decd0
	cmp     r12, r4
	bge     branch_20decd0
.arm
branch_20decac: @ 20decac :arm
	add     r0, r1, r12
	ldrb    r0, [r0, #0x5]
	cmp     r0, #0x0
	movne   r0, #0x1
	ldmnefd sp!, {r3-r5,pc}
	ldrb    r0, [r1, #0x4]
	add     r12, r12, #0x1
	cmp     r12, r0
	blt     branch_20decac
.arm
branch_20decd0: @ 20decd0 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20decd8

.arm
branch_20decd8: @ 20decd8 :arm
	movlt   r0, #0x1
	movge   r0, #0x0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20dece4

.arm
Function_20dece4: @ 20dece4 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r6, r0
	mov     r5, #0x9
.arm
branch_20decf0: @ 20decf0 :arm
	ldrh    r4, [r1]
	ldrh    r3, [r1, #0x2]
	add     r1, r1, #0x4
	subs    r5, r5, #0x1
	strh    r4, [r6]
	strh    r3, [r6, #0x2]
	add     r6, r6, #0x4
	bne     branch_20decf0
	ldrh    r1, [r1]
	strh    r1, [r6]
	ldrb    r1, [r2, #0x5]
	cmp     r1, #0x0
	ldmeqfd sp!, {r3-r7,pc}
	ldrb    r7, [r0, #0x4]
	ldrb    r3, [r2, #0x4]
	ldrsh   r4, [r0, #0x2]
	mov     r1, r7
	cmp     r7, r3
	movlt   r1, r3
	ldrsh   r3, [r2, #0x2]
	sub     r6, r4, r3
	add     r1, r1, r6
	cmp     r1, #0x20
	movgt   r1, #0x20
	cmp     r7, r1
	bge     branch_20ded7c
	mov     r4, #0x0
.arm
branch_20ded5c: @ 20ded5c :arm
	ldrb    r5, [r0, #0x4]
	add     r3, r0, r7
	add     r5, r5, #0x1
	strb    r5, [r0, #0x4]
	strb    r4, [r3, #0x5]
	ldrb    r7, [r0, #0x4]
	cmp     r7, r1
	blt     branch_20ded5c
.arm
branch_20ded7c: @ 20ded7c :arm
	ldrb    r4, [r2, #0x4]
	add     r3, r0, #0x5
	add     r12, r3, r1
	add     r4, r4, r6
	cmp     r4, r1
	addlt   r12, r3, r4
	sub     r4, r12, r3
	add     r1, r2, #0x5
	sub     r4, r4, r6
	add     lr, r1, r4
	mov     r4, lr
	b       branch_20dee10
@ 0x20dedac

.arm
branch_20dedac: @ 20dedac :arm
	ldrb    r7, [r12, #-0x1]!
	ldrb    r5, [lr, #-0x1]!
	cmp     r7, r5
	bhs     branch_20dee00
	ldrb    r7, [r12, #-0x1]
	sub     r5, r12, #0x1
	cmp     r7, #0x0
	bne     branch_20dedd8
.arm
branch_20dedcc: @ 20dedcc :arm
	ldrb    r7, [r5, #-0x1]!
	cmp     r7, #0x0
	beq     branch_20dedcc
.arm
branch_20dedd8: @ 20dedd8 :arm
	cmp     r5, r12
	beq     branch_20dee00
.arm
branch_20dede0: @ 20dede0 :arm
	ldrb    r7, [r5]
	sub     r7, r7, #0x1
	strb    r7, [r5]
	ldrb    r7, [r5, #0x1]!
	cmp     r5, r12
	add     r7, r7, #0xa
	strb    r7, [r5]
	bne     branch_20dede0
.arm
branch_20dee00: @ 20dee00 :arm
	ldrb    r7, [r12]
	ldrb    r5, [lr]
	sub     r5, r7, r5
	strb    r5, [r12]
.arm
branch_20dee10: @ 20dee10 :arm
	cmp     r12, r3
	cmphi   lr, r1
	bhi     branch_20dedac
	ldrb    r5, [r2, #0x4]
	sub     lr, r4, r1
	cmp     lr, r5
	bge     branch_20deeec
	ldrb    r1, [r4]
	mov     r7, #0x0
	cmp     r1, #0x5
	movcc   r7, #0x1
	blo     branch_20dee88
	bne     branch_20dee88
	add     r1, r2, #0x5
	add     r2, r1, r5
	add     r4, r4, #0x1
	cmp     r4, r2
	bhs     branch_20dee70
.arm
branch_20dee58: @ 20dee58 :arm
	ldrb    r1, [r4]
	cmp     r1, #0x0
	bne     branch_20deeec
	add     r4, r4, #0x1
	cmp     r4, r2
	blo     branch_20dee58
.arm
branch_20dee70: @ 20dee70 :arm
	add     r1, r3, lr
	add     r2, r1, r6
	ldrb    r1, [r2, #-0x1]
	sub     r12, r2, #0x1
	tst     r1, #0x1
	movne   r7, #0x1
.arm
branch_20dee88: @ 20dee88 :arm
	cmp     r7, #0x0
	beq     branch_20deeec
	ldrb    r1, [r12]
	cmp     r1, #0x1
	bhs     branch_20deee0
	ldrb    r1, [r12, #-0x1]
	sub     r2, r12, #0x1
	cmp     r1, #0x0
	bne     branch_20deeb8
.arm
branch_20deeac: @ 20deeac :arm
	ldrb    r1, [r2, #-0x1]!
	cmp     r1, #0x0
	beq     branch_20deeac
.arm
branch_20deeb8: @ 20deeb8 :arm
	cmp     r2, r12
	beq     branch_20deee0
.arm
branch_20deec0: @ 20deec0 :arm
	ldrb    r1, [r2]
	sub     r1, r1, #0x1
	strb    r1, [r2]
	ldrb    r1, [r2, #0x1]!
	cmp     r2, r12
	add     r1, r1, #0xa
	strb    r1, [r2]
	bne     branch_20deec0
.arm
branch_20deee0: @ 20deee0 :arm
	ldrb    r1, [r12]
	sub     r1, r1, #0x1
	strb    r1, [r12]
.arm
branch_20deeec: @ 20deeec :arm
	ldrb    r1, [r3]
	mov     r5, r3
	cmp     r1, #0x0
	bne     branch_20def08
.arm
branch_20deefc: @ 20deefc :arm
	ldrb    r1, [r5, #0x1]!
	cmp     r1, #0x0
	beq     branch_20deefc
.arm
branch_20def08: @ 20def08 :arm
	cmp     r5, r3
	bls     branch_20def50
	ldrsh   r1, [r0, #0x2]
	sub     r2, r5, r3
	and     r4, r2, #0xff
	sub     r1, r1, r4
	strh    r1, [r0, #0x2]
	ldrb    r1, [r0, #0x4]
	add     r2, r3, r1
	cmp     r5, r2
	bhs     branch_20def44
.arm
branch_20def34: @ 20def34 :arm
	ldrb    r1, [r5], #0x1
	cmp     r5, r2
	strb    r1, [r3], #0x1
	blo     branch_20def34
.arm
branch_20def44: @ 20def44 :arm
	ldrb    r1, [r0, #0x4]
	sub     r1, r1, r4
	strb    r1, [r0, #0x4]
.arm
branch_20def50: @ 20def50 :arm
	ldrb    r1, [r0, #0x4]
	add     r2, r0, #0x5
	add     r3, r2, r1
	cmp     r3, r2
	bls     branch_20def78
.arm
branch_20def64: @ 20def64 :arm
	ldrb    r1, [r3, #-0x1]!
	cmp     r1, #0x0
	bne     branch_20def78
	cmp     r3, r2
	bhi     branch_20def64
.arm
branch_20def78: @ 20def78 :arm
	sub     r1, r3, r2
	add     r1, r1, #0x1
	strb    r1, [r0, #0x4]
	ldmfd   sp!, {r3-r7,pc}
@ 0x20def88


.arm
Function_20def88: @ 20def88 :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x58
	mov     r8, r1
	mov     r6, r2
	mov     r7, r0
	mov     r0, r8
	mov     r1, r6
	bl      Function_20df868
	cmp     r0, #0x0
	movne   r1, #0x1
	moveq   r1, #0x0
	mov     r4, r1, lsl #24
	mov     r0, #0x0
	mov     r1, r0
	mov     r2, r8
	mov     r3, r6
	mov     r5, r4, asr #24
	bl      Function_20e0f94
	bne     branch_20deff4
	strb    r5, [r7]
	mov     r1, #0x0
	strh    r1, [r7, #0x2]
	mov     r0, #0x1
	strb    r0, [r7, #0x4]
	add     sp, sp, #0x58
	strb    r1, [r7, #0x5]
	ldmfd   sp!, {r4-r8,pc}
@ 0x20deff4

.arm
branch_20deff4: @ 20deff4 :arm
	mov     r0, r8
	mov     r1, r6
	bl      Function_20df87c
	cmp     r0, #0x2
	bgt     branch_20df040
	strb    r5, [r7]
	mov     r2, #0x0
	strh    r2, [r7, #0x2]
	mov     r2, #0x1
	mov     r0, r8
	mov     r1, r6
	strb    r2, [r7, #0x4]
	bl      Function_20df87c
	cmp     r0, #0x1
	moveq   r0, #0x4e
	movne   r0, #0x49
	add     sp, sp, #0x58
	strb    r0, [r7, #0x5]
	ldmfd   sp!, {r4-r8,pc}
@ 0x20df040

.arm
branch_20df040: @ 20df040 :arm
	cmp     r5, #0x0
	beq     branch_20df064
	mov     r0, #0x0
	mov     r1, r0
	mov     r2, r8
	mov     r3, r6
	bl      _dsub
	mov     r8, r0
	mov     r6, r1
.arm
branch_20df064: @ 20df064 :arm
	add     r2, sp, #0x8
	mov     r0, r8
	mov     r1, r6
	bl      Function_20de0a4
	mov     r4, r0
	mov     r6, r1
	orr     r12, r4, #0x0
	rsbs    r2, r12, #0x0
	orr     r3, r6, #1, 12 @ #0x100000
	rsc     r1, r3, #0x0
	mov     r0, #0x0
	and     r3, r3, r1
	sub     r1, r0, #0x1
	and     r12, r12, r2
	mov     r2, r1
	adds    r0, r12, r1
	adc     r1, r3, r2
	str     r4, [sp]
	str     r6, [sp, #0x4]
	bl      Function_20df7d4
	rsb     r8, r0, #0x35
	ldr     r1, [sp, #0x8]
	add     r0, sp, #0xc
	sub     r1, r1, r8
	bl      Function_20de7a0
	mov     r0, r4
	mov     r1, r6
	mov     r2, r8
	bl      Function_20de160
	bl      _ll_ufrom_d
	mov     r2, r1
	mov     r1, r0
	add     r0, sp, #0x32
	bl      Function_20de4b4
	mov     r0, r7
	add     r1, sp, #0x32
	add     r2, sp, #0xc
	bl      Function_20de580
	strb    r5, [r7]
	add     sp, sp, #0x58
	ldmfd   sp!, {r4-r8,pc}
@ 0x20df108

.arm
Function_20df108: @ 20df108 :arm
	stmfd   sp!, {r3-r5,lr}
	mov     r4, r3
	ldrsh   r5, [r0, #0x2]
	mov     r0, r4
	bl      Function_20def88
	ldrb    r0, [r4, #0x5]
	cmp     r0, #0x9
	ldmhifd sp!, {r3-r5,pc}
	cmp     r5, #0x20
	movgt   r5, #0x20
	mov     r0, r4
	mov     r1, r5
	bl      Function_20de474
	ldrb    r0, [r4, #0x4]
	cmp     r0, r5
	bge     branch_20df16c
	mov     r1, #0x0
.arm
branch_20df14c: @ 20df14c :arm
	ldrb    r2, [r4, #0x4]
	add     r0, r4, r0
	add     r2, r2, #0x1
	strb    r2, [r4, #0x4]
	strb    r1, [r0, #0x5]
	ldrb    r0, [r4, #0x4]
	cmp     r0, r5
	blt     branch_20df14c
.arm
branch_20df16c: @ 20df16c :arm
	ldrsh   r1, [r4, #0x2]
	sub     r0, r0, #0x1
	mov     r2, #0x0
	sub     r0, r1, r0
	strh    r0, [r4, #0x2]
	ldrb    r0, [r4, #0x4]
	cmp     r0, #0x0
	ldmlefd sp!, {r3-r5,pc}
.arm
branch_20df18c: @ 20df18c :arm
	add     r1, r4, r2
	ldrb    r0, [r1, #0x5]
	add     r2, r2, #0x1
	add     r0, r0, #0x30
	strb    r0, [r1, #0x5]
	ldrb    r0, [r4, #0x4]
	cmp     r2, r0
	blt     branch_20df18c
	ldmfd   sp!, {r3-r5,pc}
@ 0x20df1b0


.arm
Function_20df1b0: @ 20df1b0 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0xfc
	mov     r4, r0
	ldrb    r0, [r4, #0x4]
	cmp     r0, #0x0
	bne     branch_20df1f0
	ldrsb   r0, [r4]
	mov     r2, #0x0
	cmp     r0, #0x0
	ldreq   r3, [pc, #0x5d8] @ [0x20df7b4] (=0x3ff00000)
	mov     r0, #0x0
	ldrne   r3, [pc, #0x5d4] @ [0x20df7b8] (=0xbff00000)
	mov     r1, r0
	bl      Function_20de05c
	add     sp, sp, #0xfc
	ldmfd   sp!, {r4-r11,pc}
@ 0x20df1f0

.arm
branch_20df1f0: @ 20df1f0 :arm
	ldrb    r0, [r4, #0x5]
	cmp     r0, #0x30
	beq     branch_20df210
	cmp     r0, #0x49
	beq     branch_20df238
	cmp     r0, #0x4e
	beq     branch_20df26c
	b       branch_20df2b4
@ 0x20df210

.arm
branch_20df210: @ 20df210 :arm
	ldrsb   r0, [r4]
	mov     r2, #0x0
	cmp     r0, #0x0
	ldreq   r3, [pc, #0x590] @ [0x20df7b4] (=0x3ff00000)
	mov     r0, #0x0
	ldrne   r3, [pc, #0x58c] @ [0x20df7b8] (=0xbff00000)
	mov     r1, r0
	bl      Function_20de05c
	add     sp, sp, #0xfc
	ldmfd   sp!, {r4-r11,pc}
@ 0x20df238

.arm
branch_20df238: @ 20df238 :arm
	ldrsb   r0, [r4]
	mov     r5, #0x0
	cmp     r0, #0x0
	ldreq   r4, [pc, #0x568] @ [0x20df7b4] (=0x3ff00000)
	ldr     r0, [pc, #0x56c] @ [0x20df7bc] (=Unknown_21015ac)
	ldrne   r4, [pc, #0x564] @ [0x20df7b8] (=0xbff00000)
	ldr     r0, [r0]
	bl      _f2d
	mov     r2, r5
	mov     r3, r4
	bl      Function_20de05c
	add     sp, sp, #0xfc
	ldmfd   sp!, {r4-r11,pc}
@ 0x20df26c

.arm
branch_20df26c: @ 20df26c :arm
	ldr     r1, [pc, #0x54c] @ [0x20df7c0] (=0x7ff00000)
	add     r3, sp, #0x10
	mov     r2, #0x0
	str     r2, [r3]
	str     r1, [r3, #0x4]
	ldrsb   r0, [r4]
	cmp     r0, #0x0
	beq     branch_20df29c
	orr     r0, r1, #2, 2 @ #0x80000000
	orr     r1, r2, r2
	str     r1, [r3]
	str     r0, [r3, #0x4]
.arm
branch_20df29c: @ 20df29c :arm
	ldmia   r3, {r0,r1}
	orr     r0, r0, #0x0
	orr     r1, r1, #2, 14 @ #0x80000
	stmia   r3, {r0,r1}
	add     sp, sp, #0xfc
	ldmfd   sp!, {r4-r11,pc}
@ 0x20df2b4

.arm
branch_20df2b4: @ 20df2b4 :arm
	add     r3, sp, #0xd6
	mov     r5, r4
	mov     r2, #0x9
.arm
branch_20df2c0: @ 20df2c0 :arm
	ldrh    r1, [r5]
	ldrh    r0, [r5, #0x2]
	add     r5, r5, #0x4
	subs    r2, r2, #0x1
	strh    r1, [r3]
	strh    r0, [r3, #0x2]
	add     r3, r3, #0x4
	bne     branch_20df2c0
	ldrh    r0, [r5]
	add     r1, sp, #0xdb
	strh    r0, [r3]
	ldrb    r0, [sp, #0xda]
	add     r5, r1, r0
	cmp     r1, r5
	bhs     branch_20df310
.arm
branch_20df2fc: @ 20df2fc :arm
	ldrb    r0, [r1]
	sub     r0, r0, #0x30
	strb    r0, [r1], #0x1
	cmp     r1, r5
	blo     branch_20df2fc
branch_20df310: @ 20df310 :arm
	ldrb    r1, [sp, #0xda]
	ldrsh   r2, [sp, #0xd8]
	add     r0, sp, #0xb0
	sub     r1, r1, #0x1
	add     r1, r2, r1
	strh    r1, [sp, #0xd8]
	ldr     r1, [pc, #0x494] @ [0x20df7c4] (=Unknown_21019a0)
	mov     r2, #77, 30 @ #0x134
	ldrsh   r11, [sp, #0xd8]
	bl      Function_20de704
	add     r0, sp, #0xb0
	add     r1, sp, #0xd6
	bl      Function_20dec04
	cmp     r0, #0x0
	beq     branch_20df380
	ldrsb   r0, [r4]
	mov     r5, #0x0
	cmp     r0, #0x0
	ldreq   r4, [pc, #0x454] @ [0x20df7b4] (=0x3ff00000)
	ldr     r0, [pc, #0x458] @ [0x20df7bc] (=Unknown_21015ac)
	ldrne   r4, [pc, #0x450] @ [0x20df7b8] (=0xbff00000)
	ldr     r0, [r0]
	bl      _f2d
	mov     r2, r5
	mov     r3, r4
	bl      Function_20de05c
	add     sp, sp, #0xfc
	ldmfd   sp!, {r4-r11,pc}
@ 0x20df380

.arm
branch_20df380: @ 20df380 :arm
	add     r1, sp, #0xdb
	ldrb    r0, [r1]
	add     r8, r1, #0x1
	bl      _dfltu
	str     r0, [sp, #0x8]
	str     r1, [sp, #0xc]
	cmp     r8, r5
	bhs     branch_20df458
.arm
branch_20df3a0: @ 20df3a0 :arm
	sub     r0, r5, r8
	mov     r1, r0, lsr #31
	rsb     r0, r1, r0, lsl #29
	adds    r7, r1, r0, ror #29
	moveq   r7, #0x8
	mov     r6, #0x0
	mov     r2, #0x0
	cmp     r7, #0x0
	ble     branch_20df3dc
	mov     r0, #0xa
branch_20df3c8: @ 20df3c8 :arm
	ldrb    r1, [r8], #0x1
	add     r2, r2, #0x1
	cmp     r2, r7
	mla     r6, r0, r6, r1
	blt     branch_20df3c8
branch_20df3dc: @ 20df3dc :arm
	ldr     r0, [pc, #0x3e4] @ [0x20df7c8] (=Unknown_210188c)
	ldr     r1, [sp, #0xc]
	add     r3, r0, r7, lsl #3
	ldr     r2, [r3, #-0x8]
	ldr     r0, [sp, #0x8]
	ldr     r3, [r3, #-0x4]
	bl      Function_20e0234
	mov     r4, r0
	mov     r9, r1
	mov     r0, r6
	bl      _dfltu
	mov     r2, r0
	mov     r3, r1
	mov     r0, r4
	mov     r1, r9
	bl      _dadd
	cmp     r6, #0x0
	mov     r6, r0
	mov     r10, r1
	beq     branch_20df444
	mov     r0, r4
	mov     r1, r9
	mov     r2, r6
	mov     r3, r10
	bl      Function_20e0f94
	beq     branch_20df458
.arm
branch_20df444: @ 20df444 :arm
	str     r6, [sp, #0x8]
	str     r10, [sp, #0xc]
	cmp     r8, r5
	sub     r11, r11, r7
	blo     branch_20df3a0
.arm
branch_20df458: @ 20df458 :arm
	cmp     r11, #0x0
	bge     branch_20df49c
	rsb     r0, r11, #0x0
	bl      _dflt
	mov     r3, r1
	mov     r2, r0
	ldr     r1, [pc, #0x354] @ [0x20df7cc] (=0x40140000)
	mov     r0, #0x0
	bl      Function_20de3ac
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	bl      _ddiv
	str     r0, [sp, #0x8]
	str     r1, [sp, #0xc]
	b       branch_20df4d4
@ 0x20df49c

.arm
branch_20df49c: @ 20df49c :arm
	mov     r0, r11
	bl      _dflt
	mov     r3, r1
	mov     r2, r0
	ldr     r1, [pc, #0x318] @ [0x20df7cc] (=0x40140000)
	mov     r0, #0x0
	bl      Function_20de3ac
	mov     r2, r0
	mov     r3, r1
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	bl      Function_20e0234
	str     r0, [sp, #0x8]
	str     r1, [sp, #0xc]
.arm
branch_20df4d4: @ 20df4d4 :arm
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	mov     r2, r11
	bl      Function_20de160
	str     r0, [sp, #0x8]
	str     r1, [sp, #0xc]
	bl      Function_20df87c
	cmp     r0, #0x2
	bne     branch_20df508
	ldr     r0, [pc, #0x2d0] @ [0x20df7d0] (=0x7fefffff)
	mvn     r1, #0x0
	str     r1, [sp, #0x8]
	str     r0, [sp, #0xc]
.arm
branch_20df508: @ 20df508 :arm
	ldr     r1, [sp, #0x8]
	ldr     r2, [sp, #0xc]
	add     r0, sp, #0x8a
	add     r4, sp, #0x0
	mov     r5, #0x0
	bl      Function_20def88
	add     r0, sp, #0x8a
	add     r1, sp, #0xd6
	bl      Function_20deb24
	cmp     r0, #0x0
	bne     branch_20df77c
	add     r0, sp, #0x8a
	add     r1, sp, #0xd6
	bl      Function_20dec04
	cmp     r0, #0x0
	movne   r5, #0x1
	ldr     r1, [sp, #0x8]
	ldr     r0, [sp, #0xc]
	cmp     r5, #0x0
	moveq   r6, #0x1
	str     r1, [sp]
	str     r0, [sp, #0x4]
	movne   r6, #0x0
.arm
branch_20df564: @ 20df564 :arm
	cmp     r6, #0x0
	bne     branch_20df58c
	ldmia   r4, {r0,r1}
	adds    r0, r0, #0x1
	adc     r1, r1, #0x0
	stmia   r4, {r0,r1}
	bl      Function_20df87c
	cmp     r0, #0x2
	beq     branch_20df77c
	b       branch_20df5a4
@ 0x20df58c

.arm
branch_20df58c: @ 20df58c :arm
	ldr     r1, [r4]
	ldr     r0, [r4, #0x4]
	subs    r1, r1, #0x1
	sbc     r0, r0, #0x0
	str     r1, [r4]
	str     r0, [r4, #0x4]
.arm
branch_20df5a4: @ 20df5a4 :arm
	ldr     r1, [sp]
	ldr     r2, [sp, #0x4]
	add     r0, sp, #0x64
	bl      Function_20def88
	cmp     r5, #0x0
	beq     branch_20df5d0
	add     r0, sp, #0x64
	add     r1, sp, #0xd6
	bl      Function_20dec04
	cmp     r0, #0x0
	beq     branch_20df6f4
.arm
branch_20df5d0: @ 20df5d0 :arm
	cmp     r5, #0x0
	bne     branch_20df6ac
	add     r0, sp, #0xd6
	add     r1, sp, #0x64
	bl      Function_20dec04
	cmp     r0, #0x0
	bne     branch_20df6ac
	add     r3, sp, #0x8a
	add     r5, sp, #0x3e
	mov     r2, #0x9
.arm
branch_20df5f8: @ 20df5f8 :arm
	ldrh    r1, [r3]
	ldrh    r0, [r3, #0x2]
	add     r3, r3, #0x4
	strh    r1, [r5]
	strh    r0, [r5, #0x2]
	add     r5, r5, #0x4
	subs    r2, r2, #0x1
	bne     branch_20df5f8
	ldrh    r0, [r3]
	add     r3, sp, #0x64
	add     r4, sp, #0x8a
	strh    r0, [r5]
	mov     r2, #0x9
.arm
branch_20df62c: @ 20df62c :arm
	ldrh    r1, [r3]
	ldrh    r0, [r3, #0x2]
	add     r3, r3, #0x4
	strh    r1, [r4]
	strh    r0, [r4, #0x2]
	add     r4, r4, #0x4
	subs    r2, r2, #0x1
	bne     branch_20df62c
	ldrh    r0, [r3]
	add     r3, sp, #0x3e
	add     r5, sp, #0x64
	strh    r0, [r4]
	mov     r2, #0x9
.arm
branch_20df660: @ 20df660 :arm
	ldrh    r1, [r3]
	ldrh    r0, [r3, #0x2]
	add     r3, r3, #0x4
	strh    r1, [r5]
	strh    r0, [r5, #0x2]
	add     r5, r5, #0x4
	subs    r2, r2, #0x1
	bne     branch_20df660
	ldrh    r4, [r3]
	ldr     r3, [sp, #0x8]
	ldr     r1, [sp]
	ldr     r2, [sp, #0xc]
	ldr     r0, [sp, #0x4]
	strh    r4, [r5]
	str     r1, [sp, #0x8]
	str     r0, [sp, #0xc]
	str     r3, [sp]
	str     r2, [sp, #0x4]
	b       branch_20df6f4
@ 0x20df6ac

.arm
branch_20df6ac: @ 20df6ac :arm
	add     r7, sp, #0x64
	add     r3, sp, #0x8a
	mov     r2, #0x9
.arm
branch_20df6b8: @ 20df6b8 :arm
	ldrh    r1, [r7]
	ldrh    r0, [r7, #0x2]
	add     r7, r7, #0x4
	strh    r1, [r3]
	strh    r0, [r3, #0x2]
	add     r3, r3, #0x4
	subs    r2, r2, #0x1
	bne     branch_20df6b8
	ldrh    r2, [r7]
	ldr     r1, [sp]
	ldr     r0, [sp, #0x4]
	strh    r2, [r3]
	str     r1, [sp, #0x8]
	str     r0, [sp, #0xc]
	b       branch_20df564
@ 0x20df6f4

.arm
branch_20df6f4: @ 20df6f4 :arm
	add     r0, sp, #0x3e
	add     r1, sp, #0xd6
	add     r2, sp, #0x8a
	bl      Function_20dece4
	add     r0, sp, #0x18
	add     r1, sp, #0x64
	add     r2, sp, #0xd6
	bl      Function_20dece4
	add     r0, sp, #0x3e
	add     r1, sp, #0x18
	bl      Function_20deb24
	cmp     r0, #0x0
	beq     branch_20df758
	ldr     r1, [sp, #0x8]
	ldr     r0, [sp, #0xc]
	and     r1, r1, #0x1
	and     r0, r0, #0x0
	cmp     r0, #0x0
	cmpeq   r1, #0x0
	beq     branch_20df77c
	ldr     r1, [sp]
	ldr     r0, [sp, #0x4]
	str     r1, [sp, #0x8]
	str     r0, [sp, #0xc]
	b       branch_20df77c
@ 0x20df758

.arm
branch_20df758: @ 20df758 :arm
	add     r0, sp, #0x3e
	add     r1, sp, #0x18
	bl      Function_20dec04
	cmp     r0, #0x0
	bne     branch_20df77c
	ldr     r1, [sp]
	ldr     r0, [sp, #0x4]
	str     r1, [sp, #0x8]
	str     r0, [sp, #0xc]
.arm
branch_20df77c: @ 20df77c :arm
	ldrsb   r0, [sp, #0xd6]
	cmp     r0, #0x0
	beq     branch_20df7a4
	mov     r0, #0x0
	ldr     r2, [sp, #0x8]
	ldr     r3, [sp, #0xc]
	mov     r1, r0
	bl      _dsub
	str     r0, [sp, #0x8]
	str     r1, [sp, #0xc]
branch_20df7a4: @ 20df7a4 :arm
	ldr     r0, [sp, #0x8]
	ldr     r1, [sp, #0xc]
	add     sp, sp, #0xfc
	ldmfd   sp!, {r4-r11,pc}
@ 0x20df7b4

.word 0x3ff00000 @ 0x20df7b4
.word 0xbff00000 @ 0x20df7b8
.word Unknown_21015ac @ 0x20df7bc
.word 0x7ff00000 @ 0x20df7c0
.word Unknown_21019a0 @ 0x20df7c4
.word Unknown_210188c @ 0x20df7c8
.word 0x40140000 @ 0x20df7cc
.word 0x7fefffff @ 0x20df7d0



.arm
Function_20df7d4: @ 20df7d4 :arm
	mov     r3, r0, lsr #1
	ldr     r2, [pc, #0x7c] @ [0x20df85c] (=0x55555555)
	orr     r3, r3, r1, lsl #31
	and     r3, r3, r2
	subs    r12, r0, r3
	and     r2, r2, r1, lsr #1
	ldr     r0, [pc, #0x6c] @ [0x20df860] (=0x33333333)
	sbc     r3, r1, r2
	mov     r1, r12, lsr #2
	orr     r1, r1, r3, lsl #30
	and     r2, r12, r0
	and     r1, r1, r0
	adds    r2, r2, r1
	and     r1, r3, r0
	and     r0, r0, r3, lsr #2
	adc     r1, r1, r0
	mov     r0, r2, lsr #4
	orr     r0, r0, r1, lsl #28
	adds    r2, r2, r0
	ldr     r0, [pc, #0x3c] @ [0x20df864] (=0xf0f0f0f)
	adc     r1, r1, r1, lsr #4
	and     r3, r2, r0
	and     r2, r1, r0
	mov     r0, r3, lsr #8
	orr     r0, r0, r2, lsl #24
	adds    r1, r3, r0
	adc     r2, r2, r2, lsr #8
	mov     r0, r1, lsr #16
	orr     r0, r0, r2, lsl #16
	adds    r1, r1, r0
	adc     r0, r2, r2, lsr #16
	adds    r0, r1, r0
	and     r0, r0, #0xff
	bx      lr
@ 0x20df85c

.word 0x55555555 @ 0x20df85c
.word 0x33333333 @ 0x20df860
.word 0xf0f0f0f @ 0x20df864



.arm
Function_20df868: @ 20df868 :arm
	stmfd   sp!, {r0-r3}
	ldr     r0, [sp, #0x4]
	and     r0, r0, #2, 2 @ #0x80000000
	add     sp, sp, #0x10
	bx      lr
@ 0x20df87c


.arm
Function_20df87c: @ 20df87c :arm
	stmfd   sp!, {r0-r3}
	ldr     r2, [sp, #0x4]
	ldr     r0, [pc, #0x58] @ [0x20df8e4] (=0x7ff00000)
	ands    r1, r2, r0
	beq     branch_20df8b8
	cmp     r1, r0
	bne     branch_20df8d8
	ldr     r0, [pc, #0x48] @ [0x20df8e8] (=0xfffff)
	tst     r2, r0
	ldreq   r0, [sp]
	add     sp, sp, #0x10
	cmpeq   r0, #0x0
	movne   r0, #0x1
	moveq   r0, #0x2
	bx      lr

branch_20df8b8: @ 20df8b8 :arm
	ldr     r0, [pc, #0x28] @ [0x20df8e8] (=0xfffff)
	tst     r2, r0
	ldreq   r0, [sp]
	add     sp, sp, #0x10
	cmpeq   r0, #0x0
	movne   r0, #0x5
	moveq   r0, #0x3
	bx      lr

branch_20df8d8: @ 20df8d8 :arm
	mov     r0, #0x4
	add     sp, sp, #0x10
	bx      lr
@ 0x20df8e4

.word 0x7ff00000 @ 0x20df8e4
.word 0xfffff @ 0x20df8e8



.arm
Function_20df8ec: @ 20df8ec :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	mov     r4, r2
	add     r2, sp, #0x0
	bl      Function_20de0a4
	ldr     r2, [sp]
	add     r2, r2, r4
	str     r2, [sp]
	bl      Function_20de160
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,pc}
@ 0x20df918


.arm
Function_20df918: @ 20df918 :arm
	ldr     r12, [pc, #0xc] @ [0x20df92c] (=0x20c3214)
	mov     r2, r0
	mov     r0, #0x0
	sub     r1, r0, #0x1
	bx      r12
@ 0x20df92c

.word OS_AllocFromHeap @ =0x20c3214, 0x20df92c



.arm
Function_20df930: @ 20df930 :arm
	ldr     r12, [pc, #0xc] @ [0x20df944] (=0x20c331c)
	mov     r2, r0
	mov     r0, #0x0
	sub     r1, r0, #0x1
	bx      r12
@ 0x20df944

.word OS_FreeToHeap @ =0x20c331c, 0x20df944



.arm
Function_20df948: @ 20df948 :arm
	stmfd   sp!, {r3,lr}
	ldr     r3, [pc, #0x58] @ [0x20df9ac] (=Unknown_20fe764)
branch_20df950: @ 20df950 :arm
	ldrb    r2, [r0], #0x1
	cmp     r2, #0x0
	blt     branch_20df968
	cmp     r2, #0x80
	bge     branch_20df968
	ldrb    r2, [r3, r2]
branch_20df968: @ 20df968 :arm
	ldrb    lr, [r1], #0x1
	and     r12, r2, #0xff
	cmp     lr, #0x0
	blt     branch_20df984
	cmp     lr, #0x80
	bge     branch_20df984
	ldrb    lr, [r3, lr]
branch_20df984: @ 20df984 :arm
	and     r2, lr, #0xff
	cmp     r12, r2
	mvncc   r0, #0x0
	ldmccfd sp!, {r3,pc}
	movhi   r0, #0x1
	ldmhifd sp!, {r3,pc}
	cmp     r12, #0x0
	bne     branch_20df950
	mov     r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20df9ac

.word Unknown_20fe764 @ 0x20df9ac



.arm
.globl Function_20df9b0
Function_20df9b0: @ 20df9b0 :arm
	ldr     r12, [pc, #0x0] @ [0x20df9b8] (=0x20df948)
	bx      r12
@ 0x20df9b8

.word Function_20df948 @ =0x20df948, 0x20df9b8



.arm
Function_20df9bc: @ 20df9bc :arm
	bx      lr
@ 0x20df9c0

.arm
Function_20df9c0: @ 20df9c0 :arm
	stmfd   sp!, {r0-r3}
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x8
	mov     r5, r0
	mov     r4, r1
	str     r4, [r5]
	add     r1, sp, #0x20
	mov     r0, #0x10
	str     r4, [sp]
	str     r1, [sp, #0x4]
	bl      Function_20e3eec
	cmp     r0, #0x0
	beq     branch_20dfa10
	ldr     r1, [pc, #0x3c] @ [0x20dfa38] (=Unknown_2101a04)
	mov     r2, #0x1
	stmia   r0, {r1,r2}
	ldr     r1, [pc, #0x34] @ [0x20dfa3c] (=Unknown_2101a1c)
	str     r2, [r0, #0x8]
	str     r1, [r0]
	str     r4, [r0, #0xc]
branch_20dfa10: @ 20dfa10 :arm
	str     r0, [r5, #0x4]
	mov     r1, #0x0
	add     r0, sp, #0x0
	str     r1, [sp]
	bl      Function_20dfad0
	mov     r0, r5
	add     sp, sp, #0x8
	ldmfd   sp!, {r3-r5,lr}
	add     sp, sp, #0x10
	bx      lr
@ 0x20dfa38

.word Unknown_2101a04 @ 0x20dfa38
.word Unknown_2101a1c @ 0x20dfa3c



.arm
Function_20dfa40: @ 20dfa40 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20e3f94
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20dfa54


.arm
Function_20dfa54: @ 20dfa54 :arm
	bx      lr
@ 0x20dfa58

.arm
Function_20dfa58: @ 20dfa58 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	mov     r0, r1
	ldr     r1, [pc, #0x10] @ [0x20dfa7c] (=Unknown_21019d8)
	bl      Function_20e40a0
	cmp     r0, #0x0
	addne   r0, r4, #0xc
	moveq   r0, #0x0
	ldmfd   sp!, {r4,pc}
@ 0x20dfa7c

.word Unknown_21019d8 @ 0x20dfa7c



.arm
Function_20dfa80: @ 20dfa80 :arm
	ldr     r12, [pc, #0x4] @ [0x20dfa8c] (=0x20e4000)
	ldr     r0, [r0, #0xc]
	bx      r12
@ 0x20dfa8c

.word Function_20e4000 @ =0x20e4000, 0x20dfa8c



.arm
Function_20dfa90: @ 20dfa90 :arm
	stmfd   sp!, {r3,r4,r11,lr}
	sub     sp, sp, #0x18
	mov     r11, sp
	mov     r4, r0
	ldr     r0, [r4, #0x4]
	cmp     r0, #0x0
	beq     branch_20dfab0
	bl      Function_20dfb80
.arm
branch_20dfab0: @ 20dfab0 :arm
	add     sp, r11, #0x18
	mov     r0, r4
	ldmfd   sp!, {r3,r4,r11,pc}
@ 0x20dfabc

.arm
Function_20dfabc: @ 20dfabc :arm
	add     r0, r11, #0x0
	bl      Function_20e3a30
.arm
branch_20dfac4: @ 20dfac4 :arm
	b       branch_20dfac4
@ 0x20dfac8

.arm
Function_20dfac8: @ 20dfac8 :arm
	add     sp, r11, #0x18
	ldmfd   sp!, {r3,r4,r11,pc}
@ 0x20dfad0

.arm
Function_20dfad0: @ 20dfad0 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r0, [r4]
	cmp     r0, #0x0
	beq     branch_20dfae8
	bl      Function_20e4000
.arm
branch_20dfae8: @ 20dfae8 :arm
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20dfaf0

.arm
Function_20dfaf0: @ 20dfaf0 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20e3f94
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20dfb04

.arm
Function_20dfb04: @ 20dfb04 :arm
	bx      lr
@ 0x20dfb08

.arm
Function_20dfb08: @ 20dfb08 :arm
	ldr     r0, [r0, #0x4]
	bx      lr
@ 0x20dfb10

.arm
Function_20dfb10: @ 20dfb10 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	add     r0, r4, #0x4
	bl      Function_20dfa90
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20dfb28

.arm
Function_20dfb28: @ 20dfb28 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	add     r0, r4, #0x4
	bl      Function_20dfa90
	mov     r0, r4
	bl      Function_20e3f94
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20dfb48

.arm
Function_20dfb48: @ 20dfb48 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	add     r0, r4, #0x4
	bl      Function_20dfa90
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20dfb60

.arm
Function_20dfb60: @ 20dfb60 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	add     r0, r4, #0x4
	bl      Function_20dfa90
	mov     r0, r4
	bl      Function_20e3f94
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20dfb80

.arm
Function_20dfb80: @ 20dfb80 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	ldr     r1, [r4, #0x4]
	subs    r1, r1, #0x1
	str     r1, [r4, #0x4]
	ldmnefd sp!, {r4,pc}
	ldr     r1, [r0]
	ldr     r1, [r1, #0xc]
	blx     r1
	mov     r0, r4
	bl      Function_20dfbb0
	ldmfd   sp!, {r4,pc}
@ 0x20dfbb0

.arm
Function_20dfbb0: @ 20dfbb0 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [r0, #0x8]
	subs    r1, r1, #0x1
	str     r1, [r0, #0x8]
	ldmnefd sp!, {r3,pc}
	cmp     r0, #0x0
	ldmeqfd sp!, {r3,pc}

	ldr     r1, [r0]
	ldr     r1, [r1, #0x4]
	blx     r1
	ldmfd   sp!, {r3,pc}
@ 0x20dfbdc


.arm
.globl Function_20dfbdc
Function_20dfbdc: @ 20dfbdc :arm
	stmfd   sp!, {r4-r6,lr}
	sub     sp, sp, #0x10
	ldr     r4, [pc, #0x6c] @ [0x20dfc58] (=Unknown_2101b28)
	ldr     r1, [pc, #0x6c] @ [0x20dfc5c] (=Unknown_2101b1c)
	add     r6, sp, #0x4
	mov     r0, r4
	str     r1, [sp, #0x4]
	add     r5, sp, #0x8
	bl      Function_20d8b60
	add     r0, r0, #0x1
	rsb     r0, r0, r0, lsl #1
	bl      Function_20e3fa8
	mov     r1, #0x0
	strb    r1, [sp]
	sub     r2, sp, #0x4
	strb    r1, [r2]
	mov     r1, r0
	ldr     r2, [r2]
	mov     r0, r5
	bl      Function_20df9c0
	ldr     r0, [r5]
	mov     r1, r4
	bl      Function_20d8b7c
	ldr     r3, [pc, #0x20] @ [0x20dfc60] (=Unknown_2101b08)
	ldr     r0, [pc, #0x20] @ [0x20dfc64] (=Unknown_2101b3c)
	ldr     r2, [pc, #0x20] @ [0x20dfc68] (=0x20dfb48)
	mov     r1, r6
	str     r3, [sp, #0x4]
	bl      Function_20e44b8
	add     sp, sp, #0x10
	ldmfd   sp!, {r4-r6,pc}
@ 0x20dfc58

.word Unknown_2101b28 @ 0x20dfc58
.word Unknown_2101b1c @ 0x20dfc5c
.word Unknown_2101b08 @ 0x20dfc60
.word Unknown_2101b3c @ 0x20dfc64
.word Function_20dfb48 @ =0x20dfb48, 0x20dfc68



.include "source/arm9_fplib.s"



.arm
Function_20e28b8_Dummy: @ 20e28b8 :arm
	bx      lr
@ 0x20e28bc


.arm
Function_20e28bc: @ 20e28bc :arm
	str     lr, [sp, #-0x4]!
	mov     r1, r0
	mov     r0, #0x3
	swi     0x123456
	ldr     pc, [sp], #0x4
Function_20e28d0: @ 20e28d0 :arm
	str     lr, [sp, #-0x4]!
	mov     r1, #0x0
	mov     r0, #0x7
	swi     0x123456
	ldr     pc, [sp], #0x4
Function_20e28e4: @ 20e28e4 :arm
	mov     r1, #0x0
	mov     r0, #0x18
	swi     0x123456
	mov     pc, lr


Function_20e28f4: @ 20e28f4 :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r6, r2
	ldr     r5, [r6]
	mov     r7, r1
	cmp     r5, #0x0
	mov     r4, #0x0
	bls     branch_20e293c
branch_20e2910: @ 20e2910 :arm
	bl      Function_20e28d0
	and     r1, r0, #0xff
	cmp     r1, #0xd
	strb    r0, [r7, r4]
	cmpne   r1, #0xa
	addeq   r0, r4, #0x1
	streq   r0, [r6]
	beq     branch_20e293c
	add     r4, r4, #0x1
	cmp     r4, r5
	blo     branch_20e2910
branch_20e293c: @ 20e293c :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3-r7,pc}
@ 0x20e2944


.arm
Function_20e2944: @ 20e2944 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r5, [r2]
	mov     r6, r1
	cmp     r5, #0x0
	mov     r4, #0x0
	bls     branch_20e2970
branch_20e295c: @ 20e295c :arm
	add     r0, r6, r4
	bl      Function_20e28bc
	add     r4, r4, #0x1
	cmp     r4, r5
	blo     branch_20e295c
branch_20e2970: @ 20e2970 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20e2978


.arm
Function_20e2978: @ 20e2978 :arm
	mov     r0, #0x0
	bx      lr
@ 0x20e2980


.arm
Function_20e2980: @ 20e2980 :arm
	stmfd   sp!, {r4,lr}
	ldrsb   r2, [r0]
	tst     r2, #0x1
	bne     branch_20e29a0
	mov     r2, r2, asr #1
	str     r2, [r1]
	add     r0, r0, #0x1
	ldmfd   sp!, {r4,pc}

branch_20e29a0: @ 20e29a0 :arm
	tst     r2, #0x2
	ldrb    r4, [r0, #0x1]
	bne     branch_20e29c0
	mov     r2, r2, asr #2
	orr     r2, r4, r2, lsl #8
	str     r2, [r1]
	add     r0, r0, #0x2
	ldmfd   sp!, {r4,pc}

branch_20e29c0: @ 20e29c0 :arm
	tst     r2, #0x4
	ldrb    lr, [r0, #0x2]
	bne     branch_20e29e8
	mov     r3, r2, asr #3
	mov     r2, r4, lsl #8
	orr     r2, r2, r3, lsl #16
	orr     r2, lr, r2
	str     r2, [r1]
	add     r0, r0, #0x3
	ldmfd   sp!, {r4,pc}

branch_20e29e8: @ 20e29e8 :arm
	ldrb    r12, [r0, #0x3]
	mov     r3, r2, asr #3
	mov     r2, r4, lsl #16
	orr     r2, r2, r3, lsl #24
	orr     r2, r2, lr, lsl #8
	orr     r2, r12, r2
	str     r2, [r1]
	add     r0, r0, #0x4
	ldmfd   sp!, {r4,pc}
@ 0x20e2a0c


.arm
Function_20e2a0c: @ 20e2a0c :arm
	stmfd   sp!, {r4,lr}
	ldrb    r2, [r0]
	tst     r2, #0x1
	bne     branch_20e2a2c
	mov     r2, r2, lsr #1
	str     r2, [r1]
	add     r0, r0, #0x1
	ldmfd   sp!, {r4,pc}

branch_20e2a2c: @ 20e2a2c :arm
	tst     r2, #0x2
	ldrb    r4, [r0, #0x1]
	bne     branch_20e2a4c
	mov     r2, r2, lsr #2
	orr     r2, r4, r2, lsl #8
	str     r2, [r1]
	add     r0, r0, #0x2
	ldmfd   sp!, {r4,pc}

branch_20e2a4c: @ 20e2a4c :arm
	tst     r2, #0x4
	ldrb    lr, [r0, #0x2]
	bne     branch_20e2a74
	mov     r3, r2, lsr #3
	mov     r2, r4, lsl #8
	orr     r2, r2, r3, lsl #16
	orr     r2, lr, r2
	str     r2, [r1]
	add     r0, r0, #0x3
	ldmfd   sp!, {r4,pc}

branch_20e2a74: @ 20e2a74 :arm
	ldrb    r12, [r0, #0x3]
	mov     r3, r2, lsr #3
	mov     r2, r4, lsl #16
	orr     r2, r2, r3, lsl #24
	orr     r2, r2, lr, lsl #8
	orr     r2, r12, r2
	str     r2, [r1]
	add     r0, r0, #0x4
	ldmfd   sp!, {r4,pc}
@ 0x20e2a98


.arm
Function_20e2a98: @ 20e2a98 :arm
	stmfd   sp!, {r4-r6,lr}
	subs    r6, r1, #0x1
	mov     r5, #0x0
	bmi     branch_20e2af4
	mov     r1, #0xc
branch_20e2aac: @ 20e2aac :arm
	add     r3, r5, r6
	mov     r4, r3, asr #1
	mul     r3, r4, r1
	ldr     r12, [r0, r3]
	add     lr, r0, r3
	cmp     r2, r12
	subcc   r6, r4, #0x1
	blo     branch_20e2aec
	ldr     r3, [lr, #0x4]
	bic     r3, r3, #0x1
	add     r3, r12, r3
	cmp     r2, r3
	addhi   r5, r4, #0x1
	bhi     branch_20e2aec
	mov     r0, lr
	ldmfd   sp!, {r4-r6,pc}

branch_20e2aec: @ 20e2aec :arm
	cmp     r5, r6
	ble     branch_20e2aac
branch_20e2af4: @ 20e2af4 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r4-r6,pc}
@ 0x20e2afc


.arm
Function_20e2afc: @ 20e2afc :arm
	stmfd   sp!, {r4-r9,lr}
	sub     sp, sp, #0xc
	mov     r4, r0
	mov     r9, r1
	mov     r2, #0x0
	str     r2, [r9, #0x4]
	mov     r0, r9
	mov     r1, r4
	str     r2, [r9, #0x8]
	bl      Function_20e4438
	cmp     r0, #0x0
	addeq   sp, sp, #0xc
	ldmeqfd sp!, {r4-r9,pc}

	ldr     r0, [r9, #0xc]
	ldr     r1, [r9, #0x10]
	ldr     r3, [pc, #0xc0] @ [0x20e2c00] (=0x2aaaaaab)
	sub     r5, r1, r0
	smull   r2, r1, r3, r5
	mov     r3, r5, lsr #31
	mov     r2, r4
	add     r1, r3, r1, asr #1
	bl      Function_20e2a98
	cmp     r0, #0x0
	addeq   sp, sp, #0xc
	ldmeqfd sp!, {r4-r9,pc}

	ldr     r1, [r0, #0x4]
	tst     r1, #0x1
	addne   r1, r0, #0x8
	ldreq   r1, [r0, #0x8]
	str     r1, [r9, #0x4]
	ldr     r1, [r0]
	str     r1, [r9]
	ldr     r1, [r0]
	ldr     r0, [r9, #0x4]
	sub     r7, r4, r1
	bl      Function_20e4458
	mov     r8, #0x0
	add     r5, sp, #0x4
	add     r4, sp, #0x0
	add     r6, sp, #0x8
branch_20e2b9c: @ 20e2b9c :arm
	mov     r1, r6
	bl      Function_20e2a0c
	ldr     r1, [sp, #0x8]
	cmp     r1, #0x0
	addeq   sp, sp, #0xc
	ldmeqfd sp!, {r4-r9,pc}

	mov     r1, r5
	bl      Function_20e2a0c
	mov     r1, r4
	bl      Function_20e2a0c
	ldr     r1, [sp, #0x8]
	add     r2, r8, r1
	cmp     r7, r2
	addcc   sp, sp, #0xc
	ldmccfd sp!, {r4-r9,pc}

	ldr     r1, [sp, #0x4]
	add     r8, r2, r1
	cmp     r7, r8
	bhi     branch_20e2b9c
	ldr     r1, [r9, #0x4]
	ldr     r0, [sp]
	add     r0, r1, r0
	str     r0, [r9, #0x8]
	add     sp, sp, #0xc
	ldmfd   sp!, {r4-r9,pc}
@ 0x20e2c00

.word 0x2aaaaaab @ 0x20e2c00



.arm
Function_20e2c04: @ 20e2c04 :arm
	ldr     r0, [r0, #0x8]
	cmp     r0, #0x0
	ldrneb  r0, [r0]
	andne   r0, r0, #0x1f
	moveq   r0, #0x0
	and     r0, r0, #0xff
	bx      lr
@ 0x20e2c20


.arm
Function_20e2c20: @ 20e2c20 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0xa0
	mov     r4, r0
branch_20e2c2c: @ 20e2c2c :arm
	ldr     r2, [r4, #0x8]
	cmp     r2, #0x0
	beq     branch_20e2c44
	ldrb    r0, [r2]
	tst     r0, #0x80
	beq     branch_20e2c88
branch_20e2c44: @ 20e2c44 :arm
	mov     r1, r4
	add     r0, r4, #0x18
	bl      Function_20e433c
	mov     r1, r4
	bl      Function_20e2afc
	ldr     r0, [r4, #0x4]
	cmp     r0, #0x0
	addeq   sp, sp, #0xa0
	moveq   r0, #0xff
	ldmeqfd sp!, {r3-r5,pc}
	mov     r1, r4
	add     r0, r4, #0x18
	bl      Function_20e4398
	ldr     r0, [r4, #0x8]
	cmp     r0, #0x0
	beq     branch_20e2c2c
	b       branch_20e2f58

branch_20e2c88: @ 20e2c88 :arm
	and     r0, r0, #0x1f
	cmp     r0, #0x13
	addls   pc, pc, r0, lsl #2
	b       branch_20e2f4c
	b       branch_20e2f4c
	b       branch_20e2f4c
	b       branch_20e2ce8
	b       branch_20e2d00
	b       branch_20e2d20
	b       branch_20e2d38
	b       branch_20e2d60
	b       branch_20e2d80
	b       branch_20e2da0
	b       branch_20e2dc8
	b       branch_20e2df8
	b       branch_20e2e10
	b       branch_20e2e30
	b       branch_20e2e4c
	b       branch_20e2f4c
	b       branch_20e2e60
	b       branch_20e2e8c
	b       branch_20e2ed8
	b       branch_20e2f0c
	b       branch_20e2f38
@ 0x20e2ce8

.arm
branch_20e2ce8: @ 20e2ce8 :arm
	add     r1, sp, #0x9c
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r0, r0, #0x4
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2d00: @ 20e2d00 :arm
	add     r1, sp, #0x94
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r1, sp, #0x98
	bl      Function_20e2980
	add     r0, r0, #0x4
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2d20: @ 20e2d20 :arm
	add     r1, sp, #0x90
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r0, r0, #0x4
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2d38: @ 20e2d38 :arm
	add     r1, sp, #0x84
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r1, sp, #0x88
	bl      Function_20e2a0c
	add     r1, sp, #0x8c
	bl      Function_20e2a0c
	add     r0, r0, #0x4
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2d60: @ 20e2d60 :arm
	add     r1, sp, #0x7c
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r1, sp, #0x80
	bl      Function_20e2980
	add     r0, r0, #0x4
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2d80: @ 20e2d80 :arm
	add     r1, sp, #0x74
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r1, sp, #0x78
	bl      Function_20e2980
	add     r0, r0, #0x4
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2da0: @ 20e2da0 :arm
	add     r1, sp, #0x68
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r1, sp, #0x6c
	bl      Function_20e2980
	add     r1, sp, #0x70
	bl      Function_20e2980
	add     r0, r0, #0x4
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2dc8: @ 20e2dc8 :arm
	add     r1, sp, #0x58
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r1, sp, #0x5c
	bl      Function_20e2980
	add     r1, sp, #0x60
	bl      Function_20e2a0c
	add     r1, sp, #0x64
	bl      Function_20e2a0c
	add     r0, r0, #0x4
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2df8: @ 20e2df8 :arm
	add     r1, sp, #0x54
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r0, r0, #0x4
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2e10: @ 20e2e10 :arm
	add     r1, sp, #0x4c
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r1, sp, #0x50
	bl      Function_20e2980
	add     r0, r0, #0x4
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2e30: @ 20e2e30 :arm
	add     r1, sp, #0x44
	add     r0, r2, #0x5
	bl      Function_20e2a0c
	add     r1, sp, #0x48
	bl      Function_20e2980
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2e4c: @ 20e2e4c :arm
	add     r1, sp, #0x40
	add     r0, r2, #0x1
	bl      Function_20e2980
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2e60: @ 20e2e60 :arm
	add     r1, sp, #0x34
	add     r0, r2, #0x1
	bl      Function_20e2a0c
	add     r1, sp, #0x38
	bl      Function_20e2a0c
	add     r1, sp, #0x3c
	bl      Function_20e2980
	ldr     r1, [sp, #0x34]
	add     r0, r0, r1, lsl #2
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2e8c: @ 20e2e8c :arm
	add     r1, sp, #0x24
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r1, sp, #0x28
	bl      Function_20e2980
	ldrb    r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    r5, [r0, #0x3]
	orr     r1, r2, r1, lsl #8
	orr     r1, r1, r3, lsl #16
	orr     r2, r1, r5, lsl #24
	add     r1, sp, #0x2c
	add     r0, r0, #0x4
	str     r2, [sp, #0x30]
	bl      Function_20e2980
	add     r0, r0, #0x4
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2ed8: @ 20e2ed8 :arm
	add     r1, sp, #0x14
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r1, sp, #0x1c
	bl      Function_20e2980
	add     r1, sp, #0x18
	add     r0, r0, #0x1
	bl      Function_20e2980
	add     r1, sp, #0x20
	bl      Function_20e2980
	add     r0, r0, #0x4
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2f0c: @ 20e2f0c :arm
	add     r1, sp, #0x8
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r1, sp, #0xc
	add     r0, r0, #0x1
	bl      Function_20e2980
	add     r1, sp, #0x10
	bl      Function_20e2a0c
	add     r0, r0, #0x4
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2f38: @ 20e2f38 :arm
	add     r1, sp, #0x4
	add     r0, r2, #0x1
	bl      Function_20e2980
	str     r0, [r4, #0x8]
	b       branch_20e2f58

branch_20e2f4c: @ 20e2f4c :arm
	add     sp, sp, #0xa0
	mov     r0, #0xff
	ldmfd   sp!, {r3-r5,pc}

branch_20e2f58: @ 20e2f58 :arm
	ldr     r2, [r4, #0x8]
	ldrb    r0, [r2]
	and     r0, r0, #0x1f
	cmp     r0, #0x1
	addne   sp, sp, #0xa0
	ldmnefd sp!, {r3-r5,pc}
	add     r5, sp, #0x0
branch_20e2f74: @ 20e2f74 :arm
	mov     r1, r5
	add     r0, r2, #0x1
	bl      Function_20e2980
	ldr     r1, [r4, #0x8]
	ldr     r0, [sp]
	add     r2, r1, r0
	str     r2, [r4, #0x8]
	ldrb    r0, [r2]
	and     r0, r0, #0x1f
	cmp     r0, #0x1
	beq     branch_20e2f74
	add     sp, sp, #0xa0
	ldmfd   sp!, {r3-r5,pc}
@ 0x20e2fa8


.arm
Function_20e2fa8: @ 20e2fa8 :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0xa4
	mov     r9, r0
	mov     r8, r1
	str     r2, [sp]
branch_20e2fbc: @ 20e2fbc :arm
	ldr     r2, [r8, #0x8]
	cmp     r2, #0x0
	bne     branch_20e3004
	mov     r0, r9
	mov     r1, r8
	bl      Function_20e433c
	mov     r1, r8
	bl      Function_20e2afc
	ldr     r0, [r8, #0x4]
	cmp     r0, #0x0
	bne     branch_20e2fec
	bl      Function_20e415c
branch_20e2fec: @ 20e2fec :arm
	mov     r0, r9
	mov     r1, r8
	bl      Function_20e4398
	ldr     r2, [r8, #0x8]
	cmp     r2, #0x0
	beq     branch_20e2fbc
branch_20e3004: @ 20e3004 :arm
	ldrb    r7, [r2]
	and     r0, r7, #0x1f
	cmp     r0, #0x13
	addls   pc, pc, r0, lsl #2
	b       branch_20e383c
	b       branch_20e383c
	b       branch_20e3068
	b       branch_20e3088
	b       branch_20e30d4
	b       branch_20e3154
	b       branch_20e31b4
	b       branch_20e3238
	b       branch_20e32a8
	b       branch_20e3318
	b       branch_20e33c0
	b       branch_20e3474
	b       branch_20e34d0
	b       branch_20e3560
	b       branch_20e358c
	b       branch_20e383c
	b       branch_20e35d8
	b       branch_20e3614
	b       branch_20e36b8
	b       branch_20e3764
	b       branch_20e3828
@ 0x20e3068

.arm
branch_20e3068: @ 20e3068 :arm
	add     r1, sp, #0xa0
	add     r0, r2, #0x1
	bl      Function_20e2980
	ldr     r1, [r8, #0x8]
	ldr     r0, [sp, #0xa0]
	add     r0, r1, r0
	str     r0, [r8, #0x8]
	b       branch_20e3840

branch_20e3088: @ 20e3088 :arm
	add     r1, sp, #0x9c
	add     r0, r2, #0x1
	bl      Function_20e2980
	mov     r4, r0
	ldrb    r1, [r4]
	ldrb    r0, [r4, #0x1]
	ldrb    r2, [r4, #0x2]
	ldrb    r3, [r4, #0x3]
	orr     r0, r1, r0, lsl #8
	orr     r0, r0, r2, lsl #16
	ldr     r5, [r9, #0x18]
	ldr     r1, [sp, #0x9c]
	orr     r2, r0, r3, lsl #24
	add     r0, r5, r1
	mvn     r1, #0x0
	blx     r2
	add     r0, r4, #0x4
	str     r0, [r8, #0x8]
	b       branch_20e3840

branch_20e30d4: @ 20e30d4 :arm
	add     r1, sp, #0x94
	add     r0, r2, #0x1
	and     r4, r7, #0x40
	bl      Function_20e2980
	add     r1, sp, #0x98
	bl      Function_20e2980
	ldrb    r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    r5, [r0, #0x3]
	orr     r1, r2, r1, lsl #8
	orr     r1, r1, r3, lsl #16
	cmp     r4, #0x0
	orr     r2, r1, r5, lsl #24
	add     r4, r0, #0x4
	ldreq   r1, [r9, #0x18]
	ldreq   r0, [sp, #0x94]
	ldreqb  r0, [r1, r0]
	beq     branch_20e3130
	ldr     r0, [sp, #0x94]
	add     r0, r9, r0, lsl #2
	ldr     r0, [r0, #0x1c]
	and     r0, r0, #0xff
branch_20e3130: @ 20e3130 :arm
	cmp     r0, #0x0
	beq     branch_20e314c
	ldr     r3, [r9, #0x18]
	ldr     r0, [sp, #0x98]
	mvn     r1, #0x0
	add     r0, r3, r0
	blx     r2
branch_20e314c: @ 20e314c :arm
	str     r4, [r8, #0x8]
	b       branch_20e3840

branch_20e3154: @ 20e3154 :arm
	add     r1, sp, #0x90
	add     r0, r2, #0x1
	and     r4, r7, #0x20
	bl      Function_20e2980
	ldrb    r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    r5, [r0, #0x3]
	orr     r1, r2, r1, lsl #8
	orr     r1, r1, r3, lsl #16
	cmp     r4, #0x0
	orr     r2, r1, r5, lsl #24
	add     r4, r0, #0x4
	ldreq   r1, [r9, #0x18]
	ldreq   r0, [sp, #0x90]
	ldreq   r0, [r1, r0]
	beq     branch_20e31a4
	ldr     r0, [sp, #0x90]
	add     r0, r9, r0, lsl #2
	ldr     r0, [r0, #0x1c]
branch_20e31a4: @ 20e31a4 :arm
	mvn     r1, #0x0
	blx     r2
	str     r4, [r8, #0x8]
	b       branch_20e3840

branch_20e31b4: @ 20e31b4 :arm
	add     r1, sp, #0x84
	add     r0, r2, #0x1
	bl      Function_20e2980
	add     r1, sp, #0x88
	bl      Function_20e2a0c
	add     r1, sp, #0x8c
	bl      Function_20e2a0c
	ldr     r3, [r9, #0x18]
	ldr     r2, [sp, #0x84]
	ldr     r6, [sp, #0x88]
	ldrb    r5, [r0]
	ldrb    r4, [r0, #0x1]
	ldr     r1, [sp, #0x8c]
	add     r2, r3, r2
	ldrb    r10, [r0, #0x2]
	orr     r3, r5, r4, lsl #8
	mla     r4, r6, r1, r2
	ldrb    r2, [r0, #0x3]
	orr     r1, r3, r10, lsl #16
	cmp     r6, #0x0
	orr     r5, r1, r2, lsl #24
	add     r11, r0, #0x4
	beq     branch_20e3230
	mvn     r10, #0x0
branch_20e3214: @ 20e3214 :arm
	ldr     r0, [sp, #0x8c]
	mov     r1, r10
	sub     r4, r4, r0
	mov     r0, r4
	blx     r5
	subs    r6, r6, #0x1
	bne     branch_20e3214
branch_20e3230: @ 20e3230 :arm
	str     r11, [r8, #0x8]
	b       branch_20e3840

branch_20e3238: @ 20e3238 :arm
	add     r1, sp, #0x7c
	add     r0, r2, #0x1
	and     r4, r7, #0x20
	bl      Function_20e2980
	add     r1, sp, #0x80
	bl      Function_20e2980
	ldrb    r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    r5, [r0, #0x3]
	orr     r1, r2, r1, lsl #8
	orr     r1, r1, r3, lsl #16
	cmp     r4, #0x0
	orr     r2, r1, r5, lsl #24
	add     r4, r0, #0x4
	ldreq   r1, [r9, #0x18]
	ldreq   r0, [sp, #0x7c]
	ldreq   r3, [r1, r0]
	beq     branch_20e3290
	ldr     r0, [sp, #0x7c]
	add     r0, r9, r0, lsl #2
	ldr     r3, [r0, #0x1c]
branch_20e3290: @ 20e3290 :arm
	ldr     r0, [sp, #0x80]
	mov     r1, #0x0
	add     r0, r3, r0
	blx     r2
	str     r4, [r8, #0x8]
	b       branch_20e3840

branch_20e32a8: @ 20e32a8 :arm
	add     r1, sp, #0x74
	add     r0, r2, #0x1
	and     r4, r7, #0x20
	bl      Function_20e2980
	add     r1, sp, #0x78
	bl      Function_20e2980
	ldrb    r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    r5, [r0, #0x3]
	orr     r1, r2, r1, lsl #8
	orr     r1, r1, r3, lsl #16
	cmp     r4, #0x0
	orr     r2, r1, r5, lsl #24
	add     r4, r0, #0x4
	ldreq   r1, [r9, #0x18]
	ldreq   r0, [sp, #0x74]
	ldreq   r3, [r1, r0]
	beq     branch_20e3300
	ldr     r0, [sp, #0x74]
	add     r0, r9, r0, lsl #2
	ldr     r3, [r0, #0x1c]
branch_20e3300: @ 20e3300 :arm
	ldr     r0, [sp, #0x78]
	mvn     r1, #0x0
	add     r0, r3, r0
	blx     r2
	str     r4, [r8, #0x8]
	b       branch_20e3840

branch_20e3318: @ 20e3318 :arm
	add     r1, sp, #0x68
	add     r0, r2, #0x1
	and     r4, r7, #0x20
	bl      Function_20e2980
	add     r1, sp, #0x6c
	bl      Function_20e2980
	add     r1, sp, #0x70
	bl      Function_20e2980
	ldrb    r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    r5, [r0, #0x3]
	orr     r1, r2, r1, lsl #8
	orr     r1, r1, r3, lsl #16
	orr     r2, r1, r5, lsl #24
	tst     r7, #0x40
	add     r5, r0, #0x4
	ldreq   r1, [r9, #0x18]
	ldreq   r0, [sp, #0x68]
	ldreqsh r0, [r1, r0]
	beq     branch_20e3380
	ldr     r0, [sp, #0x68]
	add     r0, r9, r0, lsl #2
	ldr     r0, [r0, #0x1c]
	mov     r0, r0, lsl #16
	mov     r0, r0, asr #16
branch_20e3380: @ 20e3380 :arm
	cmp     r0, #0x0
	beq     branch_20e33b8
	cmp     r4, #0x0
	ldreq   r1, [r9, #0x18]
	ldreq   r0, [sp, #0x6c]
	ldreq   r3, [r1, r0]
	beq     branch_20e33a8
	ldr     r0, [sp, #0x6c]
	add     r0, r9, r0, lsl #2
	ldr     r3, [r0, #0x1c]
branch_20e33a8: @ 20e33a8 :arm
	ldr     r0, [sp, #0x70]
	mvn     r1, #0x0
	add     r0, r3, r0
	blx     r2
branch_20e33b8: @ 20e33b8 :arm
	str     r5, [r8, #0x8]
	b       branch_20e3840

branch_20e33c0: @ 20e33c0 :arm
	add     r1, sp, #0x58
	add     r0, r2, #0x1
	and     r4, r7, #0x20
	bl      Function_20e2980
	add     r1, sp, #0x5c
	bl      Function_20e2980
	add     r1, sp, #0x60
	bl      Function_20e2a0c
	add     r1, sp, #0x64
	bl      Function_20e2a0c
	ldrb    r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    r5, [r0, #0x3]
	orr     r1, r2, r1, lsl #8
	orr     r1, r1, r3, lsl #16
	cmp     r4, #0x0
	orr     r5, r1, r5, lsl #24
	add     r11, r0, #0x4
	beq     branch_20e3424
	ldr     r1, [sp, #0x58]
	ldr     r0, [sp, #0x5c]
	add     r1, r9, r1, lsl #2
	ldr     r1, [r1, #0x1c]
	b       branch_20e3434

branch_20e3424: @ 20e3424 :arm
	ldr     r2, [r9, #0x18]
	ldr     r1, [sp, #0x58]
	ldr     r0, [sp, #0x5c]
	ldr     r1, [r2, r1]
branch_20e3434: @ 20e3434 :arm
	add     r4, r1, r0
	ldr     r6, [sp, #0x60]
	ldr     r0, [sp, #0x64]
	cmp     r6, #0x0
	mla     r4, r6, r0, r4
	beq     branch_20e346c
	mvn     r10, #0x0
branch_20e3450: @ 20e3450 :arm
	ldr     r0, [sp, #0x64]
	mov     r1, r10
	sub     r4, r4, r0
	mov     r0, r4
	blx     r5
	subs    r6, r6, #0x1
	bne     branch_20e3450
branch_20e346c: @ 20e346c :arm
	str     r11, [r8, #0x8]
	b       branch_20e3840

branch_20e3474: @ 20e3474 :arm
	add     r1, sp, #0x54
	add     r0, r2, #0x1
	and     r4, r7, #0x20
	bl      Function_20e2980
	ldrb    r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    r5, [r0, #0x3]
	orr     r1, r2, r1, lsl #8
	orr     r1, r1, r3, lsl #16
	cmp     r4, #0x0
	orr     r2, r1, r5, lsl #24
	add     r4, r0, #0x4
	ldreq   r1, [r9, #0x18]
	ldreq   r0, [sp, #0x54]
	ldreq   r0, [r1, r0]
	beq     branch_20e34c4
	ldr     r0, [sp, #0x54]
	add     r0, r9, r0, lsl #2
	ldr     r0, [r0, #0x1c]
branch_20e34c4: @ 20e34c4 :arm
	blx     r2
	str     r4, [r8, #0x8]
	b       branch_20e3840

branch_20e34d0: @ 20e34d0 :arm
	add     r1, sp, #0x4c
	add     r0, r2, #0x1
	and     r4, r7, #0x20
	bl      Function_20e2980
	add     r1, sp, #0x50
	bl      Function_20e2980
	ldrb    r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    r5, [r0, #0x3]
	orr     r1, r2, r1, lsl #8
	orr     r1, r1, r3, lsl #16
	tst     r7, #0x40
	orr     r1, r1, r5, lsl #24
	add     r5, r0, #0x4
	ldreq   r2, [r9, #0x18]
	ldreq   r0, [sp, #0x4c]
	ldreqb  r0, [r2, r0]
	beq     branch_20e352c
	ldr     r0, [sp, #0x4c]
	add     r0, r9, r0, lsl #2
	ldr     r0, [r0, #0x1c]
	and     r0, r0, #0xff
branch_20e352c: @ 20e352c :arm
	cmp     r0, #0x0
	beq     branch_20e3558
	cmp     r4, #0x0
	ldreq   r2, [r9, #0x18]
	ldreq   r0, [sp, #0x50]
	ldreq   r0, [r2, r0]
	beq     branch_20e3554
	ldr     r0, [sp, #0x50]
	add     r0, r9, r0, lsl #2
	ldr     r0, [r0, #0x1c]
branch_20e3554: @ 20e3554 :arm
	blx     r1
branch_20e3558: @ 20e3558 :arm
	str     r5, [r8, #0x8]
	b       branch_20e3840

branch_20e3560: @ 20e3560 :arm
	ldr     r0, [sp]
	cmp     r0, r2
	addeq   sp, sp, #0xa4
	ldmeqfd sp!, {r4-r11,pc}

	add     r1, sp, #0x44
	add     r0, r2, #0x5
	bl      Function_20e2a0c
	add     r1, sp, #0x48
	bl      Function_20e2980
	str     r0, [r8, #0x8]
	b       branch_20e3840

branch_20e358c: @ 20e358c :arm
	add     r1, sp, #0x40
	add     r0, r2, #0x1
	bl      Function_20e2980
	ldr     r2, [r9, #0x18]
	ldr     r1, [sp, #0x40]
	mov     r4, r0
	add     r0, r2, r1
	ldr     r2, [r0, #0x8]
	cmp     r2, #0x0
	beq     branch_20e35d0
	ldr     r0, [r0]
	ldr     r1, [r9, #0x4]
	cmp     r1, r0
	streq   r2, [r9, #0x8]
	beq     branch_20e35d0
	mvn     r1, #0x0
	blx     r2
branch_20e35d0: @ 20e35d0 :arm
	str     r4, [r8, #0x8]
	b       branch_20e3840

branch_20e35d8: @ 20e35d8 :arm
	ldr     r0, [sp]
	cmp     r0, r2
	addeq   sp, sp, #0xa4
	ldmeqfd sp!, {r4-r11,pc}
	add     r1, sp, #0x34
	add     r0, r2, #0x1
	bl      Function_20e2a0c
	add     r1, sp, #0x38
	bl      Function_20e2a0c
	add     r1, sp, #0x3c
	bl      Function_20e2980
	ldr     r1, [sp, #0x34]
	add     r0, r0, r1, lsl #2
	str     r0, [r8, #0x8]
	b       branch_20e3840

branch_20e3614: @ 20e3614 :arm
	add     r1, sp, #0x24
	add     r0, r2, #0x1
	and     r4, r7, #0x20
	bl      Function_20e2980
	add     r1, sp, #0x28
	bl      Function_20e2980
	ldrb    r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    r5, [r0, #0x3]
	orr     r1, r2, r1, lsl #8
	orr     r1, r1, r3, lsl #16
	orr     r2, r1, r5, lsl #24
	add     r1, sp, #0x2c
	add     r0, r0, #0x4
	str     r2, [sp, #0x30]
	bl      Function_20e2980
	ldrb    r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    r5, [r0, #0x3]
	orr     r1, r2, r1, lsl #8
	orr     r1, r1, r3, lsl #16
	cmp     r4, #0x0
	orr     r2, r1, r5, lsl #24
	add     r4, r0, #0x4
	ldreq   r1, [r9, #0x18]
	ldreq   r0, [sp, #0x24]
	ldreq   r5, [r1, r0]
	beq     branch_20e3698
	ldr     r0, [sp, #0x24]
	add     r0, r9, r0, lsl #2
	ldr     r5, [r0, #0x1c]
branch_20e3698: @ 20e3698 :arm
	ldr     r0, [sp, #0x28]
	ldr     r3, [sp, #0x30]
	ldr     r1, [sp, #0x2c]
	add     r0, r5, r0
	add     r1, r3, r1
	blx     r2
	str     r4, [r8, #0x8]
	b       branch_20e3840

branch_20e36b8: @ 20e36b8 :arm
	add     r1, sp, #0x14
	add     r0, r2, #0x1
	and     r5, r7, #0x20
	bl      Function_20e2980
	add     r1, sp, #0x1c
	bl      Function_20e2980
	ldrb    r2, [r0], #0x1
	add     r1, sp, #0x18
	and     r4, r2, #0x20
	bl      Function_20e2980
	add     r1, sp, #0x20
	bl      Function_20e2980
	ldrb    r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    r6, [r0, #0x3]
	orr     r1, r2, r1, lsl #8
	orr     r1, r1, r3, lsl #16
	cmp     r5, #0x0
	orr     r2, r1, r6, lsl #24
	add     r5, r0, #0x4
	ldreq   r1, [r9, #0x18]
	ldreq   r0, [sp, #0x14]
	ldreq   r0, [r1, r0]
	beq     branch_20e3728
	ldr     r0, [sp, #0x14]
	add     r0, r9, r0, lsl #2
	ldr     r0, [r0, #0x1c]
branch_20e3728: @ 20e3728 :arm
	cmp     r4, #0x0
	ldreq   r3, [r9, #0x18]
	ldreq   r1, [sp, #0x18]
	ldreq   r4, [r3, r1]
	beq     branch_20e3748
	ldr     r1, [sp, #0x18]
	add     r1, r9, r1, lsl #2
	ldr     r4, [r1, #0x1c]
branch_20e3748: @ 20e3748 :arm
	ldr     r3, [sp, #0x1c]
	ldr     r1, [sp, #0x20]
	add     r0, r0, r3
	add     r1, r4, r1
	blx     r2
	str     r5, [r8, #0x8]
	b       branch_20e3840

branch_20e3764: @ 20e3764 :arm
	add     r1, sp, #0x8
	add     r0, r2, #0x1
	and     r4, r7, #0x20
	bl      Function_20e2980
	ldrb    r2, [r0], #0x1
	add     r1, sp, #0xc
	and     r6, r2, #0x20
	bl      Function_20e2980
	add     r1, sp, #0x10
	bl      Function_20e2a0c
	ldrb    r2, [r0]
	ldrb    r1, [r0, #0x1]
	ldrb    r3, [r0, #0x2]
	ldrb    r5, [r0, #0x3]
	orr     r1, r2, r1, lsl #8
	orr     r1, r1, r3, lsl #16
	cmp     r4, #0x0
	orr     r5, r1, r5, lsl #24
	add     r11, r0, #0x4
	ldreq   r1, [r9, #0x18]
	ldreq   r0, [sp, #0x8]
	ldreq   r4, [r1, r0]
	beq     branch_20e37cc
	ldr     r0, [sp, #0x8]
	add     r0, r9, r0, lsl #2
	ldr     r4, [r0, #0x1c]
branch_20e37cc: @ 20e37cc :arm
	cmp     r6, #0x0
	ldreq   r1, [r9, #0x18]
	ldreq   r0, [sp, #0xc]
	ldreq   r0, [r1, r0]
	beq     branch_20e37ec
	ldr     r0, [sp, #0xc]
	add     r0, r9, r0, lsl #2
	ldr     r0, [r0, #0x1c]
branch_20e37ec: @ 20e37ec :arm
	ldr     r1, [sp, #0x10]
	add     r4, r4, r0
	bl      _u32_div_f
	movs    r6, r0
	beq     branch_20e3820
	mvn     r10, #0x0
branch_20e3804: @ 20e3804 :arm
	ldr     r0, [sp, #0x10]
	mov     r1, r10
	sub     r4, r4, r0
	mov     r0, r4
	blx     r5
	subs    r6, r6, #0x1
	bne     branch_20e3804
branch_20e3820: @ 20e3820 :arm
	str     r11, [r8, #0x8]
	b       branch_20e3840

branch_20e3828: @ 20e3828 :arm
	add     r1, sp, #0x4
	add     r0, r2, #0x1
	bl      Function_20e2980
	str     r0, [r8, #0x8]
	b       branch_20e3840

branch_20e383c: @ 20e383c :arm
	bl      Function_20e415c
branch_20e3840: @ 20e3840 :arm
	tst     r7, #0x80
	movne   r0, #0x0
	strne   r0, [r8, #0x8]
	b       branch_20e2fbc
@ 0x20e3850


.arm
Function_20e3850: @ 20e3850 :arm
	add     sp, sp, #0xa4
	ldmfd   sp!, {r4-r11,pc}
@ 0x20e3858


.arm
Function_20e3858: @ 20e3858 :arm
	stmfd   sp!, {r4,r5,lr}
	sub     sp, sp, #0x8c
	ldr     r2, [r1]
	mov     r4, r0
	str     r2, [sp, #0x4]
	ldr     r0, [r1, #0x4]
	add     r12, sp, #0x38
	str     r0, [sp, #0x8]
	ldr     r0, [r1, #0x8]
	add     lr, r4, #0x1c
	str     r0, [sp, #0xc]
	ldr     r0, [r1, #0xc]
	mov     r5, #0x5
	str     r0, [sp, #0x10]
	ldr     r0, [r1, #0x10]
	str     r0, [sp, #0x14]
	ldr     r0, [r1, #0x14]
	str     r0, [sp, #0x18]
	ldr     r0, [r4]
	str     r0, [sp, #0x1c]
	ldr     r0, [r4, #0x4]
	str     r0, [sp, #0x20]
	ldr     r0, [r4, #0x8]
	str     r0, [sp, #0x24]
	ldr     r0, [r4, #0xc]
	str     r0, [sp, #0x28]
	ldr     r0, [r4, #0x10]
	str     r0, [sp, #0x2c]
	ldr     r0, [r4, #0x14]
	str     r0, [sp, #0x30]
	ldr     r0, [r4, #0x18]
	str     r0, [sp, #0x34]
.arm
branch_20e38d8: @ 20e38d8 :arm
	ldmia   lr!, {r0-r3}
	stmia   r12!, {r0-r3}
	subs    r5, r5, #0x1
	bne     branch_20e38d8
	ldr     r1, [lr]
	add     r0, sp, #0x4
	str     r1, [r12]
	bl      Function_20e2c04
	add     r5, sp, #0x4
branch_20e38fc: @ 20e38fc :arm
	cmp     r0, #0x12
	addls   pc, pc, r0, lsl #2
	b       branch_20e3954
	b       branch_20e3960
	b       branch_20e3954
	b       branch_20e3960
	b       branch_20e3960
	b       branch_20e3960
	b       branch_20e3960
	b       branch_20e3960
	b       branch_20e3960
	b       branch_20e3960
	b       branch_20e3960
	b       branch_20e3960
	b       branch_20e3960
	b       branch_20e3960
	b       branch_20e396c
	b       branch_20e3954
	b       branch_20e3960
	b       branch_20e3960
	b       branch_20e3960
	b       branch_20e3960
@ 0x20e3954

.arm
branch_20e3954: @ 20e3954 :arm
	add     sp, sp, #0x8c
	mov     r0, #0x0
	ldmfd   sp!, {r4,r5,pc}
@ 0x20e3960

.arm
branch_20e3960: @ 20e3960 :arm
	mov     r0, r5
	bl      Function_20e2c20
	b       branch_20e38fc
@ 0x20e396c

.arm
branch_20e396c: @ 20e396c :arm
	ldr     r0, [sp, #0xc]
	add     r1, sp, #0x0
	add     r0, r0, #0x1
	bl      Function_20e2980
	ldr     r12, [sp, #0x34]
	ldr     r3, [sp]
	mov     r1, #0x0
	add     r0, r12, r3
	ldr     r2, [r0, #0x4]
	str     r2, [r4]
	ldr     r2, [r12, r3]
	str     r2, [r4, #0x4]
	str     r1, [r4, #0x8]
	str     r0, [r4, #0xc]
	add     sp, sp, #0x8c
	ldmfd   sp!, {r4,r5,pc}
@ 0x20e39ac

.arm
Function_20e39ac: @ 20e39ac :arm
	stmfd   sp!, {r4-r8,lr}
	sub     sp, sp, #0x8
	mov     r6, r1
	ldr     r1, [r6]
	mov     r7, r0
	cmp     r1, #0x0
	ldr     r4, [r6, #0xc]
	mov     r5, #0x0
	bls     branch_20e3a24
	add     r8, sp, #0x0
.arm
branch_20e39d4: @ 20e39d4 :arm
	ldrb    r1, [r4]
	ldrb    r0, [r4, #0x1]
	ldrb    r2, [r4, #0x2]
	ldrb    r3, [r4, #0x3]
	orr     r0, r1, r0, lsl #8
	orr     r0, r0, r2, lsl #16
	orr     r1, r0, r3, lsl #24
	mov     r0, r7
	mov     r2, r8
	str     r1, [sp, #0x4]
	bl      Function_20e418c
	cmp     r0, #0x0
	addne   sp, sp, #0x8
	movne   r0, #0x1
	ldmnefd sp!, {r4-r8,pc}
	ldr     r0, [r6]
	add     r5, r5, #0x1
	cmp     r5, r0
	add     r4, r4, #0x4
	blo     branch_20e39d4
.arm
branch_20e3a24: @ 20e3a24 :arm
	mov     r0, #0x0
	add     sp, sp, #0x8
	ldmfd   sp!, {r4-r8,pc}
@ 0x20e3a30

.arm
Function_20e3a30: @ 20e3a30 :arm
	stmfd   sp!, {r4,r11,lr}
	sub     sp, sp, #0x2c
	mov     r11, sp
	str     sp, [r11, #0x18]
	ldr     r4, [r0, #0x14]
	bl      Function_20e4174
	b       branch_20e3abc
@ 0x20e3a4c

.arm
Function_20e3a4c: @ 20e3a4c :arm
	add     r1, r11, #0x1c
	add     r0, r4, #0x1
	bl      Function_20e2a0c
	add     r1, r11, #0x20
	bl      Function_20e2a0c
	add     r1, r11, #0x24
	bl      Function_20e2980
	str     r0, [r11, #0x28]
	ldr     r0, [r11, #0x8]
	add     r1, r11, #0x1c
	bl      Function_20e39ac
	cmp     r0, #0x0
	beq     branch_20e3a84
	bl      Function_20e4500
branch_20e3a84: @ 20e3a84 :arm
	ldr     r0, [pc, #0x3c] @ [0x20e3ac8] (=Unknown_2101bb8)
	add     r1, r11, #0x1c
	bl      Function_20e39ac
	cmp     r0, #0x0
	beq     branch_20e3ab0
	ldr     r3, [pc, #0x2c] @ [0x20e3acc] (=Unknown_2101bac)
	ldr     r0, [pc, #0x2c] @ [0x20e3ad0] (=Unknown_2101bd0)
	ldr     r2, [pc, #0x2c] @ [0x20e3ad4] (=Function_20e3ad8)
	add     r1, r11, #0x0
	str     r3, [r11]
	bl      Function_20e44b8
branch_20e3ab0: @ 20e3ab0 :arm
	add     r0, r11, #0x4
	bl      Function_20e3e60
	ldr     sp, [r11, #0x18]
branch_20e3abc: @ 20e3abc :arm
	bl      Function_20e415c
	add     sp, r11, #0x2c
	ldmfd   sp!, {r4,r11,pc}
@ 0x20e3ac8

.word Unknown_2101bb8 @ 0x20e3ac8
.word Unknown_2101bac @ 0x20e3acc
.word Unknown_2101bd0 @ 0x20e3ad0
.word Function_20e3ad8 @ 0x20e3ad4



.arm
Function_20e3ad8: @ 20e3ad8 :arm
	bx      lr
@ 0x20e3adc


.arm
Function_20e3adc: @ 20e3adc :arm
	stmfd   sp!, {r3-r7,lr}
	mov     r4, r3
	mov     r5, r2
	mov     r2, r4
	mov     r7, r0
	mov     r6, r1
	bl      Function_20e2fa8
	ldr     r2, [r7, #0x18]
	ldr     r1, [r5, #0x8]
	ldr     r0, [r7, #0x4]
	add     r3, r2, r1
	str     r0, [r2, r1]
	ldr     r1, [r7]
	mov     r0, r7
	str     r1, [r3, #0x4]
	ldr     r2, [r7, #0x8]
	mov     r1, r6
	str     r2, [r3, #0x8]
	str     r4, [r3, #0x14]
	ldr     r3, [r6]
	ldr     r2, [r5, #0x4]
	add     r2, r3, r2
	bl      Function_20e4488
	ldmfd   sp!, {r3-r7,pc}
@ 0x20e3b3c

.arm
Function_20e3b3c: @ 20e3b3c :arm
	stmfd   sp!, {r4-r11,lr}
	sub     sp, sp, #0xa4
	mov     r5, r1
	ldr     r1, [r5]
	mov     r6, r0
	str     r1, [sp, #0x1c]
	ldr     r0, [r5, #0x4]
	add     r8, sp, #0x50
	str     r0, [sp, #0x20]
	ldr     r0, [r5, #0x8]
	mov     r4, r2
	str     r0, [sp, #0x24]
	ldr     r0, [r5, #0xc]
	add     r9, r6, #0x1c
	str     r0, [sp, #0x28]
	ldr     r0, [r5, #0x10]
	mov     r7, #0x5
	str     r0, [sp, #0x2c]
	ldr     r0, [r5, #0x14]
	str     r0, [sp, #0x30]
	ldr     r0, [r6]
	str     r0, [sp, #0x34]
	ldr     r0, [r6, #0x4]
	str     r0, [sp, #0x38]
	ldr     r0, [r6, #0x8]
	str     r0, [sp, #0x3c]
	ldr     r0, [r6, #0xc]
	str     r0, [sp, #0x40]
	ldr     r0, [r6, #0x10]
	str     r0, [sp, #0x44]
	ldr     r0, [r6, #0x14]
	str     r0, [sp, #0x48]
	ldr     r0, [r6, #0x18]
	str     r0, [sp, #0x4c]
.arm
branch_20e3bc4: @ 20e3bc4 :arm
	ldmia   r9!, {r0-r3}
	stmia   r8!, {r0-r3}
	subs    r7, r7, #0x1
	bne     branch_20e3bc4
	ldr     r1, [r9]
	add     r0, sp, #0x1c
	str     r1, [r8]
	bl      Function_20e2c04
	add     r7, sp, #0x0
	add     r10, sp, #0x4
	add     r11, sp, #0x8
	add     r9, sp, #0x14
	add     r8, sp, #0x18
.arm
branch_20e3bf8: @ 20e3bf8 :arm
	cmp     r0, #0x13
	addls   pc, pc, r0, lsl #2
	b       branch_20e3cf8
@ 0x20e3c04

.arm
Function_20e3c04: @ 20e3c04 :arm
	b       branch_20e3d00
@ 0x20e3c08

.arm
Function_20e3c08: @ 20e3c08 :arm
	b       branch_20e3cf8
@ 0x20e3c0c

.arm
Function_20e3c0c: @ 20e3c0c :arm
	b       branch_20e3d00
@ 0x20e3c10

.arm
Function_20e3c10: @ 20e3c10 :arm
	b       branch_20e3d00
@ 0x20e3c14

.arm
Function_20e3c14: @ 20e3c14 :arm
	b       branch_20e3d00
@ 0x20e3c18

.arm
Function_20e3c18: @ 20e3c18 :arm
	b       branch_20e3d00
@ 0x20e3c1c

.arm
Function_20e3c1c: @ 20e3c1c :arm
	b       branch_20e3d00
@ 0x20e3c20

.arm
Function_20e3c20: @ 20e3c20 :arm
	b       branch_20e3d00
@ 0x20e3c24

.arm
Function_20e3c24: @ 20e3c24 :arm
	b       branch_20e3d00
@ 0x20e3c28

.arm
Function_20e3c28: @ 20e3c28 :arm
	b       branch_20e3d00
@ 0x20e3c2c

.arm
Function_20e3c2c: @ 20e3c2c :arm
	b       branch_20e3d00
@ 0x20e3c30

.arm
Function_20e3c30: @ 20e3c30 :arm
	b       branch_20e3d00
@ 0x20e3c34

.arm
Function_20e3c34: @ 20e3c34 :arm
	b       branch_20e3c54
@ 0x20e3c38

.arm
Function_20e3c38: @ 20e3c38 :arm
	b       branch_20e3d00
@ 0x20e3c3c

.arm
Function_20e3c3c: @ 20e3c3c :arm
	b       branch_20e3cf8
@ 0x20e3c40

.arm
Function_20e3c40: @ 20e3c40 :arm
	b       branch_20e3ca8
@ 0x20e3c44

.arm
Function_20e3c44: @ 20e3c44 :arm
	b       branch_20e3d00
@ 0x20e3c48

.arm
Function_20e3c48: @ 20e3c48 :arm
	b       branch_20e3d00
@ 0x20e3c4c

.arm
Function_20e3c4c: @ 20e3c4c :arm
	b       branch_20e3d00
@ 0x20e3c50

.arm
Function_20e3c50: @ 20e3c50 :arm
	b       branch_20e3d00
@ 0x20e3c54

.arm
branch_20e3c54: @ 20e3c54 :arm
	ldr     lr, [sp, #0x24]
	mov     r1, r9
	ldrb    r2, [lr, #0x1]
	ldrb    r0, [lr, #0x2]
	ldrb    r3, [lr, #0x3]
	ldrb    r12, [lr, #0x4]
	orr     r0, r2, r0, lsl #8
	orr     r0, r0, r3, lsl #16
	orr     r2, r0, r12, lsl #24
	add     r0, lr, #0x5
	str     r2, [sp, #0x10]
	bl      Function_20e2a0c
	mov     r1, r8
	bl      Function_20e2980
	ldr     r0, [r6]
	ldr     r1, [sp, #0x10]
	mov     r2, r4
	bl      Function_20e418c
	cmp     r0, #0x0
	beq     branch_20e3d00
	b       branch_20e3d0c
@ 0x20e3ca8

.arm
branch_20e3ca8: @ 20e3ca8 :arm
	ldr     r0, [sp, #0x24]
	mov     r1, r7
	add     r0, r0, #0x1
	bl      Function_20e2a0c
	mov     r1, r10
	bl      Function_20e2a0c
	mov     r1, r11
	bl      Function_20e2980
	str     r0, [sp, #0xc]
	ldr     r0, [r6]
	mov     r1, r7
	bl      Function_20e39ac
	cmp     r0, #0x0
	bne     branch_20e3d00
	ldr     r3, [sp, #0x24]
	mov     r0, r6
	mov     r1, r5
	mov     r2, r7
	bl      Function_20e3adc
	b       branch_20e3d00
@ 0x20e3cf8

.arm
branch_20e3cf8: @ 20e3cf8 :arm
	bl      Function_20e415c
	b       branch_20e3d0c
@ 0x20e3d00

.arm
branch_20e3d00: @ 20e3d00 :arm
	add     r0, sp, #0x1c
	bl      Function_20e2c20
	b       branch_20e3bf8
@ 0x20e3d0c

.arm
branch_20e3d0c: @ 20e3d0c :arm
	ldr     r0, [sp, #0x24]
	add     sp, sp, #0xa4
	ldmfd   sp!, {r4-r11,pc}
@ 0x20e3d18

.arm
Function_20e3d18: @ 20e3d18 :arm
	stmfd   sp!, {r3,lr}
	ldr     lr, [r0, #0x18]
	ldr     r12, [r0, #0x4]
	add     r3, lr, r1
	str     r12, [lr, r1]
	ldr     r1, [r0]
	str     r1, [r3, #0x4]
	ldr     r1, [r0, #0x8]
	str     r1, [r3, #0x8]
	ldr     r1, [r0]
	ldrb    r1, [r1]
	cmp     r1, #0x2a
	ldrne   r0, [r0, #0x4]
	addne   r0, r0, r2
	strne   r0, [r3, #0xc]
	ldmnefd sp!, {r3,pc}
	add     r1, r3, #0x10
	str     r1, [r3, #0xc]
	ldr     r0, [r0, #0x4]
	ldr     r0, [r0]
	add     r0, r0, r2
	str     r0, [r3, #0x10]
	ldmfd   sp!, {r3,pc}
@ 0x20e3d74

Function_20e3d74: @ 20e3d74 :arm
branch_20e3d74: @ 20e3d74 :arm
	stmfd   sp!, {r3-r5,lr}
	sub     sp, sp, #0x28
	mov     r5, r0
	ldr     r0, [r5, #0x10]
	add     r1, sp, #0x10
	bl      Function_20e2afc
	ldr     r0, [sp, #0x14]
	cmp     r0, #0x0
	bne     branch_20e3d9c
	bl      Function_20e415c
branch_20e3d9c: @ 20e3d9c :arm
	add     r1, sp, #0x10
	mov     r0, r5
	bl      Function_20e4398
	ldr     r0, [r5]
	cmp     r0, #0x0
	movne   r0, #0x0
	strne   r0, [r5, #0xc]
	bne     branch_20e3dd8
	add     r1, sp, #0x10
	mov     r0, r5
	bl      Function_20e3858
	str     r0, [r5, #0xc]
	cmp     r0, #0x0
	bne     branch_20e3dd8
	bl      Function_20e415c
.arm
branch_20e3dd8: @ 20e3dd8 :arm
	add     r1, sp, #0x10
	add     r2, sp, #0x0
	mov     r0, r5
	bl      Function_20e3b3c
	mov     r4, r0
	ldrb    r1, [r4, #0x1]
	ldrb    r0, [r4, #0x2]
	ldrb    r2, [r4, #0x3]
	ldrb    r3, [r4, #0x4]
	orr     r0, r1, r0, lsl #8
	orr     r0, r0, r2, lsl #16
	orr     r2, r0, r3, lsl #24
	add     r1, sp, #0x8
	add     r0, r4, #0x5
	str     r2, [sp, #0x4]
	bl      Function_20e2a0c
	add     r1, sp, #0xc
	bl      Function_20e2980
	add     r1, sp, #0x10
	mov     r0, r5
	mov     r2, r4
	bl      Function_20e2fa8
	ldr     r1, [sp, #0xc]
	ldr     r2, [sp]
	mov     r0, r5
	bl      Function_20e3d18
	ldr     r3, [sp, #0x10]
	ldr     r2, [sp, #0x8]
	mov     r0, r5
	add     r1, sp, #0x10
	add     r2, r3, r2
	bl      Function_20e4488
	add     sp, sp, #0x28
	ldmfd   sp!, {r3-r5,pc}
@ 0x20e3e60

.arm
Function_20e3e60: @ 20e3e60 :arm
	stmfd   sp!, {r3,lr}
	ldr     r1, [r0]
	cmp     r1, #0x0
	ldrne   r2, [r0, #0x8]
	cmpne   r2, #0x0
	ldmeqfd sp!, {r3,pc}
	mov     r0, r1
	mvn     r1, #0x0
	blx     r2
	ldmfd   sp!, {r3,pc}
@ 0x20e3e88

.arm
Function_20e3e88: @ 20e3e88 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20e3f94
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20e3e9c


.arm
Function_20e3e9c: @ 20e3e9c :arm
	ldr     r0, [pc, #0x0] @ [0x20e3ea4] (=Unknown_2101b80)
	bx      lr
@ 0x20e3ea4

.word Unknown_2101b80 @ 0x20e3ea4



.arm
Function_20e3ea8: @ 20e3ea8 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x24] @ [0x20e3ed8] (=Unknown_2101bf8)
	ldrb    r0, [r0]
	cmp     r0, #0x0
	ldmeqfd sp!, {r3,pc}
	ldr     r3, [pc, #0x18] @ [0x20e3edc] (=Unknown_2101c40)
	ldr     r0, [pc, #0x18] @ [0x20e3ee0] (=Unknown_2101c4c)
	ldr     r2, [pc, #0x18] @ [0x20e3ee4] (=Function_20e3ee8)
	add     r1, sp, #0x0
	str     r3, [sp]
	bl      Function_20e44b8
	ldmfd   sp!, {r3,pc}
@ 0x20e3ed8

.word Unknown_2101bf8 @ 0x20e3ed8
.word Unknown_2101c40 @ 0x20e3edc
.word Unknown_2101c4c @ 0x20e3ee0
.word Function_20e3ee8 @ 0x20e3ee4



.arm
Function_20e3ee8: @ 20e3ee8 :arm
	bx      lr
@ 0x20e3eec


.arm
Function_20e3eec: @ 20e3eec :arm
	stmfd   sp!, {r3-r6,r11,lr}
	sub     sp, sp, #0x18
	mov     r11, sp
	movs    r6, r0
	ldr     r4, [pc, #0x48] @ [0x20e3f4c] (=RAM_21d0d64)
	moveq   r6, #0x4
branch_20e3f04: @ 20e3f04 :arm
	mov     r0, r6
	bl      Function_20d3f50
	movs    r5, r0
	bne     branch_20e3f2c
	ldr     r0, [r4]
	cmp     r0, #0x0
	beq     branch_20e3f28
	blx     r0
	b       branch_20e3f04

branch_20e3f28: @ 20e3f28 :arm
	bl      Function_20e3ea8
branch_20e3f2c: @ 20e3f2c :arm
	add     sp, r11, #0x18
	mov     r0, r5
	ldmfd   sp!, {r3-r6,r11,pc}
@ 0x20e3f38


.arm
Function_20e3f38: @ 20e3f38 :arm
	add     r0, r11, #0x0
	bl      Function_20e3a30
branch_20e3f40: @ 20e3f40 :arm
	b       branch_20e3f40
@ 0x20e3f44


.arm
Function_20e3f44: @ 20e3f44 :arm
	add     sp, r11, #0x18
	ldmfd   sp!, {r3-r6,r11,pc}
@ 0x20e3f4c

.word RAM_21d0d64 @ 0x20e3f4c



.arm
Function_20e3f50: @ 20e3f50 :arm
	stmfd   sp!, {r11,lr}
	sub     sp, sp, #0x30
	mov     r11, sp
	str     sp, [r11, #0x2c]
	bl      Function_20e3eec
	add     sp, r11, #0x30
	ldmfd   sp!, {r11,pc}
@ 0x20e3f6c


.arm
Function_20e3f6c: @ 20e3f6c :arm
	add     r0, r11, #0x18
	bl      Function_20e3e60
	add     sp, r11, #0x30
	mov     r0, #0x0
	ldmfd   sp!, {r11,pc}
@ 0x20e3f80


.arm
Function_20e3f80: @ 20e3f80 :arm
	add     r0, r11, #0x0
	bl      Function_20e3a30
branch_20e3f88: @ 20e3f88 :arm
	b       branch_20e3f88
@ 0x20e3f8c


.arm
Function_20e3f8c: @ 20e3f8c :arm
	add     sp, r11, #0x30
	ldmfd   sp!, {r11,pc}
@ 0x20e3f94


.arm
Function_20e3f94: @ 20e3f94 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, #0x0
	ldmeqfd sp!, {r3,pc}
	bl      Function_20d3f68
	ldmfd   sp!, {r3,pc}
@ 0x20e3fa8


.arm
Function_20e3fa8: @ 20e3fa8 :arm
	stmfd   sp!, {r11,lr}
	sub     sp, sp, #0x18
	mov     r11, sp
	bl      Function_20e3eec
	add     sp, r11, #0x18
	ldmfd   sp!, {r11,pc}
@ 0x20e3fc0


.arm
Function_20e3fc0: @ 20e3fc0 :arm
	add     r0, r11, #0x0
	bl      Function_20e3a30
branch_20e3fc8: @ 20e3fc8 :arm
	b       branch_20e3fc8
@ 0x20e3fcc


.arm
Function_20e3fcc: @ 20e3fcc :arm
	add     sp, r11, #0x18
	ldmfd   sp!, {r11,pc}
@ 0x20e3fd4


.arm
.globl Function_20e3fd4
Function_20e3fd4: @ 20e3fd4 :arm
	stmfd   sp!, {r11,lr}
	sub     sp, sp, #0x18
	mov     r11, sp
	bl      Function_20e3f50
	add     sp, r11, #0x18
	ldmfd   sp!, {r11,pc}
@ 0x20e3fec


.arm
.globl Function_20e3fec
Function_20e3fec: @ 20e3fec :arm
	add     r0, r11, #0x0
	bl      Function_20e3a30
branch_20e3ff4: @ 20e3ff4 :arm
	b       branch_20e3ff4
@ 0x20e3ff8


.arm
.globl Function_20e3ff8
Function_20e3ff8: @ 20e3ff8 :arm
	add     sp, r11, #0x18
	ldmfd   sp!, {r11,pc}
@ 0x20e4000


.arm
.globl Function_20e4000
Function_20e4000: @ 20e4000 :arm
	ldr     r12, [pc, #0x0] @ [0x20e4008] (=0x20e3f94)
	bx      r12
@ 0x20e4008

.word Function_20e3f94 @ 0x20e4008



.arm
.globl Function_20e400c
Function_20e400c: @ 20e400c :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20e3f94
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20e4020


.arm
.globl Function_20e4020
Function_20e4020: @ 20e4020 :arm
	ldr     r0, [pc, #0x0] @ [0x20e4028] (=Unknown_2101bfc)
	bx      lr
@ 0x20e4028

.word Unknown_2101bfc @ 0x20e4028



.arm
__call_static_initializers: @ 20e402c :arm
	stmfd   sp!, {r4,lr}
	ldr     r4, [pc, #0x1c] @ [0x20e4054] (=Unknown_20feccc)
	b       branch_20e4040

branch_20e4038: @ 20e4038 :arm
	blx     r0
	add     r4, r4, #0x4
branch_20e4040: @ 20e4040 :arm
	cmp     r4, #0x0
	ldrne   r0, [r4]
	cmpne   r0, #0x0
	bne     branch_20e4038
	ldmfd   sp!, {r4,pc}
@ 0x20e4054

.word Unknown_20feccc @ 0x20e4054



.arm
Function_20e4058: @ 20e4058 :arm
	stmfd   sp!, {r3-r5,lr}
	ldr     r4, [pc, #0x34] @ [0x20e4098] (=RAM_21d0d68)
	ldr     r2, [r4]
	cmp     r2, #0x0
	ldmeqfd sp!, {r3-r5,pc}
	mvn     r5, #0x0
branch_20e4070: @ 20e4070 :arm
	ldr     r0, [r2]
	mov     r1, r5
	str     r0, [r4]
	ldr     r0, [r2, #0x8]
	ldr     r2, [r2, #0x4]
	blx     r2
	ldr     r2, [r4]
	cmp     r2, #0x0
	bne     branch_20e4070
	ldmfd   sp!, {r3-r5,pc}
@ 0x20e4098

.word RAM_21d0d68 @ 0x20e4098



.arm
Function_20e409c: @ 20e409c :arm
	bx      lr
@ 0x20e40a0

.arm
Function_20e40a0: @ 20e40a0 :arm
	stmfd   sp!, {r3,lr}
	cmp     r0, r1
	beq     branch_20e40c0
	ldr     r0, [r0, #0x4]
	ldr     r1, [r1, #0x4]
	bl      Function_20d8d14
	cmp     r0, #0x0
	bne     branch_20e40c8
branch_20e40c0: @ 20e40c0 :arm
	mov     r0, #0x1
	ldmfd   sp!, {r3,pc}

branch_20e40c8: @ 20e40c8 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20e40d0


.arm
Function_20e40d0: @ 20e40d0 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20e409c
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20e40e4


.arm
Function_20e40e4: @ 20e40e4 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20e409c
	mov     r0, r4
	bl      Function_20e3f94
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20e4100


.arm
Function_20e4100: @ 20e4100 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20e409c
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20e4114


.arm
Function_20e4114: @ 20e4114 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20e4100
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20e4128


.arm
Function_20e4128: @ 20e4128 :arm
	stmfd   sp!, {r4,lr}
	mov     r4, r0
	bl      Function_20e4100
	mov     r0, r4
	bl      Function_20e3f94
	mov     r0, r4
	ldmfd   sp!, {r4,pc}
@ 0x20e4144


.arm
Function_20e4144: @ 20e4144 :arm
	ldr     r12, [pc, #0x0] @ [0x20e414c] (=Function_20d3da0)
	bx      r12
@ 0x20e414c

.word Function_20d3da0 @ 0x20e414c



.arm
Function_20e4150: @ 20e4150 :arm
	ldr     r12, [pc, #0x0] @ [0x20e4158] (=Function_20e415c)
	bx      r12
@ 0x20e4158

.word Function_20e415c @ 0x20e4158



.arm
Function_20e415c: @ 20e415c :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x8] @ [0x20e4170] (=Unknown_2101d0c)
	ldr     r0, [r0]
	blx     r0
	ldmfd   sp!, {r3,pc}
@ 0x20e4170

.word Unknown_2101d0c @ 0x20e4170



.arm
Function_20e4174: @ 20e4174 :arm
	stmfd   sp!, {r3,lr}
	ldr     r0, [pc, #0x8] @ [0x20e4188] (=Unknown_2101d0c)
	ldr     r0, [r0, #0x4]
	blx     r0
	ldmfd   sp!, {r3,pc}
@ 0x20e4188

.word Unknown_2101d0c @ 0x20e4188



.arm
Function_20e418c: @ 20e418c :arm
	stmfd   sp!, {r3,lr}
	mov     r12, #0x0
	mov     r3, r1
	cmp     r1, #0x0
	str     r12, [r2]
	moveq   r0, #0x1
	ldmeqfd sp!, {r3,pc}
	ldrb    r12, [r1]
	cmp     r12, #0x50
	bne     branch_20e41f0
	ldrb    r12, [r3, #0x1]!
	cmp     r12, #0x56
	addeq   r3, r3, #0x1
	ldrb    r12, [r3]
	cmp     r12, #0x4b
	addeq   r3, r3, #0x1
	ldrb    r3, [r3]
	cmp     r3, #0x76
	bne     branch_20e41ec
	ldrb    r3, [r0]
	cmp     r3, #0x50
	cmpne   r3, #0x2a
	moveq   r0, #0x1
	ldmeqfd sp!, {r3,pc}
.arm
branch_20e41ec: @ 20e41ec :arm
	mov     r3, r1
.arm
branch_20e41f0: @ 20e41f0 :arm
	ldrb    r12, [r0]
	cmp     r12, #0x21
	cmpne   r12, #0x2a
	bne     branch_20e42f0
	ldrb    lr, [r0], #0x1
	ldrb    r12, [r3], #0x1
	cmp     lr, r12
	movne   r0, #0x0
	ldmnefd sp!, {r3,pc}
.arm
branch_20e4214: @ 20e4214 :arm
	ldrb    lr, [r0]
	ldrb    r12, [r3], #0x1
	cmp     lr, r12
	bne     branch_20e4268
	cmp     lr, #0x21
	add     r0, r0, #0x1
	bne     branch_20e4214
	ldrb    r1, [r0]
	mov     lr, #0x0
	cmp     r1, #0x21
	beq     branch_20e425c
	mov     r1, #0xa
.arm
branch_20e4244: @ 20e4244 :arm
	ldrb    r12, [r0]
	ldrb    r3, [r0, #0x1]!
	mla     r12, lr, r1, r12
	cmp     r3, #0x21
	sub     lr, r12, #0x30
	bne     branch_20e4244
.arm
branch_20e425c: @ 20e425c :arm
	str     lr, [r2]
	mov     r0, #0x1
	ldmfd   sp!, {r3,pc}
@ 0x20e4268

.arm
branch_20e4268: @ 20e4268 :arm
	ldrb    r3, [r0], #0x1
	cmp     r3, #0x21
	bne     branch_20e4268
.arm
branch_20e4274: @ 20e4274 :arm
	ldrb    r3, [r0], #0x1
	cmp     r3, #0x21
	bne     branch_20e4274
	ldrb    r3, [r0]
	cmp     r3, #0x0
	moveq   r0, #0x0
	ldmeqfd sp!, {r3,pc}
	add     r3, r1, #0x1
	b       branch_20e4214
@ 0x20e4298

.arm
branch_20e4298: @ 20e4298 :arm
	ldrb    r1, [r3, #0x1]!
	add     r0, r0, #0x1
	cmp     r1, #0x4b
	bne     branch_20e42b8
	ldrb    r1, [r0]
	add     r3, r3, #0x1
	cmp     r1, #0x4b
	addeq   r0, r0, #0x1
.arm
branch_20e42b8: @ 20e42b8 :arm
	ldrb    r2, [r0]
	cmp     r2, #0x4b
	moveq   r0, #0x0
	ldmeqfd sp!, {r3,pc}
	ldrb    r1, [r3]
	cmp     r1, #0x56
	bne     branch_20e42e0
	cmp     r2, #0x56
	addeq   r0, r0, #0x1
	add     r3, r3, #0x1
.arm
branch_20e42e0: @ 20e42e0 :arm
	ldrb    r1, [r0]
	cmp     r1, #0x56
	moveq   r0, #0x0
	ldmeqfd sp!, {r3,pc}
.arm
branch_20e42f0: @ 20e42f0 :arm
	ldrb    r2, [r0]
	cmp     r2, #0x50
	cmpne   r2, #0x52
	bne     branch_20e430c
	ldrb    r1, [r3]
	cmp     r2, r1
	beq     branch_20e4298
.arm
branch_20e430c: @ 20e430c :arm
	ldrb    r1, [r3]
	cmp     r2, r1
	bne     branch_20e4334
.arm
branch_20e4318: @ 20e4318 :arm
	cmp     r2, #0x0
	moveq   r0, #0x1
	ldmeqfd sp!, {r3,pc}
	ldrb    r2, [r0, #0x1]!
	ldrb    r1, [r3, #0x1]!
	cmp     r2, r1
	beq     branch_20e4318
.arm
branch_20e4334: @ 20e4334 :arm
	mov     r0, #0x0
	ldmfd   sp!, {r3,pc}
@ 0x20e433c

.arm
Function_20e433c: @ 20e433c :arm
	stmfd   sp!, {r4,lr}
	ldrb    r1, [r0, #0x6a]
	ldr     r12, [r0, #0x60]
	mov     r4, #0xf
	cmp     r1, #0x0
	ldr     r1, [r0, #0x18]
	movne   r2, #0x10
	moveq   r2, #0x0
	add     r1, r1, r12
	sub     lr, r1, r2
	mov     r3, #0x1
.arm
branch_20e4368: @ 20e4368 :arm
	ldrh    r1, [r0, #0x68]
	tst     r1, r3, lsl r4
	ldrne   r2, [lr, #-0x4]!
	addne   r1, r0, r4, lsl #2
	strne   r2, [r1, #0x1c]
	subs    r4, r4, #0x1
	bpl     branch_20e4368
	ldr     r1, [r0, #0x18]
	add     r1, r1, r12
	str     r1, [r0, #0x14]
	ldr     r0, [r0, #0x54]
	ldmfd   sp!, {r4,pc}
@ 0x20e4398


.arm
Function_20e4398: @ 20e4398 :arm
	stmfd   sp!, {r4-r6,lr}
	ldr     r1, [r1, #0x4]
	mov     r6, r0
	ldrb    r0, [r1]
	ands    r4, r0, #0x40
	movne   r2, #0x1
	moveq   r2, #0x0
	strb    r2, [r6, #0x6b]
	tst     r0, #0x20
	movne   r2, #0x1
	moveq   r2, #0x0
	ands    r5, r0, #0x80
	movne   r0, #0x1
	strb    r2, [r6, #0x6a]
	moveq   r0, #0x0
	strb    r0, [r6, #0x6c]
	ldrb    r2, [r1, #0x1]
	add     r0, r1, #0x2
	add     r1, r6, #0x60
	mov     r2, r2, lsl #4
	strh    r2, [r6, #0x68]
	ldrh    r2, [r6, #0x68]
	orr     r2, r2, #1, 18 @ #0x4000
	strh    r2, [r6, #0x68]
	bl      Function_20e2a0c
	cmp     r4, #0x0
	beq     branch_20e440c
	add     r1, r6, #0x64
	bl      Function_20e2a0c
.arm
branch_20e440c: @ 20e440c :arm
	cmp     r4, #0x0
	beq     branch_20e442c
	cmp     r5, #0x0
	ldrne   r0, [r6, #0x38]
	strne   r0, [r6, #0x18]
	ldreq   r0, [r6, #0x48]
	streq   r0, [r6, #0x18]
	ldmfd   sp!, {r4-r6,pc}

branch_20e442c: @ 20e442c :arm
	ldr     r0, [r6, #0x14]
	str     r0, [r6, #0x18]
	ldmfd   sp!, {r4-r6,pc}
@ 0x20e4438


.arm
Function_20e4438: @ 20e4438 :arm
	ldr     r2, [pc, #0x10] @ [0x20e4450] (=Unknown_20e4670)
	ldr     r1, [pc, #0x10] @ [0x20e4454] (=GameIDNr)
	str     r2, [r0, #0xc]
	str     r1, [r0, #0x10]
	mov     r0, #0x1
	bx      lr
@ 0x20e4450

.word Unknown_20e4670 @ 0x20e4450
.word GameIDNr @ 0x20e4454



.arm
Function_20e4458: @ 20e4458 :arm
	stmfd   sp!, {r3,r4,lr}
	sub     sp, sp, #0x4
	ldrb    r4, [r0], #0x2
	add     r1, sp, #0x0
	bl      Function_20e2a0c
	tst     r4, #0x40
	addeq   sp, sp, #0x4
	ldmeqfd sp!, {r3,r4,pc}
	add     r1, sp, #0x0
	bl      Function_20e2a0c
	add     sp, sp, #0x4
	ldmfd   sp!, {r3,r4,pc}
@ 0x20e4488

.arm
Function_20e4488: @ 20e4488 :arm
	ldr     r4, [r0, #0x2c]
	ldr     r5, [r0, #0x30]
	ldr     r6, [r0, #0x34]
	ldr     r7, [r0, #0x38]
	ldr     r8, [r0, #0x3c]
	ldr     r9, [r0, #0x40]
	ldr     r10, [r0, #0x44]
	ldr     r11, [r0, #0x48]
	ldr     sp, [r0, #0x5c]
	ldr     r12, [r0, #0x64]
	sub     sp, sp, r12
	bx      r2
@ 0x20e44b8

.arm
Function_20e44b8: @ 20e44b8 :arm
	mov     r12, sp
	sub     sp, sp, #0x70
	str     r4, [sp, #0x2c]
	str     r5, [sp, #0x30]
	str     r6, [sp, #0x34]
	str     r7, [sp, #0x38]
	str     r8, [sp, #0x3c]
	str     r9, [sp, #0x40]
	str     r10, [sp, #0x44]
	str     r11, [sp, #0x48]
	str     r12, [sp, #0x14]
	str     r12, [sp, #0x5c]
	str     lr, [sp, #0x10]
	str     r0, [sp]
	str     r1, [sp, #0x4]
	str     r2, [sp, #0x8]
	mov     r0, sp
	b       branch_20e3d74
@ 0x20e4500


.arm
Function_20e4500: @ 20e4500 :arm
	mov     r12, sp
	sub     sp, sp, #0x70
	str     r4, [sp, #0x2c]
	str     r5, [sp, #0x30]
	str     r6, [sp, #0x34]
	str     r7, [sp, #0x38]
	str     r8, [sp, #0x3c]
	str     r9, [sp, #0x40]
	str     r10, [sp, #0x44]
	str     r11, [sp, #0x48]
	str     r12, [sp, #0x14]
	str     r12, [sp, #0x5c]
	str     lr, [sp, #0x10]
	mov     r12, #0x0
	str     r12, [sp]
	str     r12, [sp, #0x4]
	str     r12, [sp, #0x8]
	mov     r0, sp
	b       branch_20e3d74
@ 0x20e454c


.arm
Function_20e454c: @ 20e454c :arm
	ldr     r12, [pc, #0x0] @ [0x20e4554] (=Function_20e28e4)
	bx      r12
@ 0x20e4554

.word Function_20e28e4 @ 0x20e4554
